(function () {
	'use strict';

	function _mergeNamespaces(n, m) {
		m.forEach(function (e) {
			e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {
				if (k !== 'default' && !(k in n)) {
					var d = Object.getOwnPropertyDescriptor(e, k);
					Object.defineProperty(n, k, d.get ? d : {
						enumerable: true,
						get: function () { return e[k]; }
					});
				}
			});
		});
		return Object.freeze(n);
	}

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function getDefaultExportFromCjs (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	function getAugmentedNamespace(n) {
	  if (n.__esModule) return n;
	  var f = n.default;
		if (typeof f == "function") {
			var a = function a () {
				if (this instanceof a) {
	        return Reflect.construct(f, arguments, this.constructor);
				}
				return f.apply(this, arguments);
			};
			a.prototype = f.prototype;
	  } else a = {};
	  Object.defineProperty(a, '__esModule', {value: true});
		Object.keys(n).forEach(function (k) {
			var d = Object.getOwnPropertyDescriptor(n, k);
			Object.defineProperty(a, k, d.get ? d : {
				enumerable: true,
				get: function () {
					return n[k];
				}
			});
		});
		return a;
	}

	var react$1 = {exports: {}};

	var react_development = {exports: {}};

	/**
	 * @license React
	 * react.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	react_development.exports;

	var hasRequiredReact_development;

	function requireReact_development () {
		if (hasRequiredReact_development) return react_development.exports;
		hasRequiredReact_development = 1;
		(function (module, exports) {

			{
			  (function () {

			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
			    }
			    var ReactVersion = '18.2.0';

			    // ATTENTION
			    // When adding new symbols to this file,
			    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
			    // The Symbol used to tag the ReactElement-like types.
			    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
			    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
			    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
			    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
			    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
			    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
			    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
			    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
			    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
			    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
			    var REACT_MEMO_TYPE = Symbol.for('react.memo');
			    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
			    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
			    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
			    var FAUX_ITERATOR_SYMBOL = '@@iterator';
			    function getIteratorFn(maybeIterable) {
			      if (maybeIterable === null || typeof maybeIterable !== 'object') {
			        return null;
			      }
			      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
			      if (typeof maybeIterator === 'function') {
			        return maybeIterator;
			      }
			      return null;
			    }

			    /**
			     * Keeps track of the current dispatcher.
			     */
			    var ReactCurrentDispatcher = {
			      /**
			       * @internal
			       * @type {ReactComponent}
			       */
			      current: null
			    };

			    /**
			     * Keeps track of the current batch's configuration such as how long an update
			     * should suspend for if it needs to.
			     */
			    var ReactCurrentBatchConfig = {
			      transition: null
			    };
			    var ReactCurrentActQueue = {
			      current: null,
			      // Used to reproduce behavior of `batchedUpdates` in legacy mode.
			      isBatchingLegacy: false,
			      didScheduleLegacyUpdate: false
			    };

			    /**
			     * Keeps track of the current owner.
			     *
			     * The current owner is the component who should own any components that are
			     * currently being constructed.
			     */
			    var ReactCurrentOwner = {
			      /**
			       * @internal
			       * @type {ReactComponent}
			       */
			      current: null
			    };
			    var ReactDebugCurrentFrame = {};
			    var currentExtraStackFrame = null;
			    function setExtraStackFrame(stack) {
			      {
			        currentExtraStackFrame = stack;
			      }
			    }
			    {
			      ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
			        {
			          currentExtraStackFrame = stack;
			        }
			      }; // Stack implementation injected by the current renderer.

			      ReactDebugCurrentFrame.getCurrentStack = null;
			      ReactDebugCurrentFrame.getStackAddendum = function () {
			        var stack = ''; // Add an extra top frame while an element is being validated

			        if (currentExtraStackFrame) {
			          stack += currentExtraStackFrame;
			        } // Delegate to the injected renderer-specific implementation

			        var impl = ReactDebugCurrentFrame.getCurrentStack;
			        if (impl) {
			          stack += impl() || '';
			        }
			        return stack;
			      };
			    }

			    // -----------------------------------------------------------------------------

			    var enableScopeAPI = false; // Experimental Create Event Handle API.
			    var enableCacheElement = false;
			    var enableTransitionTracing = false; // No known bugs, but needs performance testing

			    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
			    // stuff. Intended to enable React core members to more easily debug scheduling
			    // issues in DEV builds.

			    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

			    var ReactSharedInternals = {
			      ReactCurrentDispatcher: ReactCurrentDispatcher,
			      ReactCurrentBatchConfig: ReactCurrentBatchConfig,
			      ReactCurrentOwner: ReactCurrentOwner
			    };
			    {
			      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
			      ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
			    }

			    // by calls to these methods by a Babel plugin.
			    //
			    // In PROD (or in packages without access to React internals),
			    // they are left as they are instead.

			    function warn(format) {
			      {
			        {
			          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
			            args[_key - 1] = arguments[_key];
			          }
			          printWarning('warn', format, args);
			        }
			      }
			    }
			    function error(format) {
			      {
			        {
			          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
			            args[_key2 - 1] = arguments[_key2];
			          }
			          printWarning('error', format, args);
			        }
			      }
			    }
			    function printWarning(level, format, args) {
			      // When changing this logic, you might want to also
			      // update consoleWithStackDev.www.js as well.
			      {
			        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
			        var stack = ReactDebugCurrentFrame.getStackAddendum();
			        if (stack !== '') {
			          format += '%s';
			          args = args.concat([stack]);
			        } // eslint-disable-next-line react-internal/safe-string-coercion

			        var argsWithFormat = args.map(function (item) {
			          return String(item);
			        }); // Careful: RN currently depends on this prefix

			        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
			        // breaks IE9: https://github.com/facebook/react/issues/13610
			        // eslint-disable-next-line react-internal/no-production-logging

			        Function.prototype.apply.call(console[level], console, argsWithFormat);
			      }
			    }
			    var didWarnStateUpdateForUnmountedComponent = {};
			    function warnNoop(publicInstance, callerName) {
			      {
			        var _constructor = publicInstance.constructor;
			        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
			        var warningKey = componentName + "." + callerName;
			        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
			          return;
			        }
			        error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
			        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
			      }
			    }
			    /**
			     * This is the abstract API for an update queue.
			     */

			    var ReactNoopUpdateQueue = {
			      /**
			       * Checks whether or not this composite component is mounted.
			       * @param {ReactClass} publicInstance The instance we want to test.
			       * @return {boolean} True if mounted, false otherwise.
			       * @protected
			       * @final
			       */
			      isMounted: function (publicInstance) {
			        return false;
			      },
			      /**
			       * Forces an update. This should only be invoked when it is known with
			       * certainty that we are **not** in a DOM transaction.
			       *
			       * You may want to call this when you know that some deeper aspect of the
			       * component's state has changed but `setState` was not called.
			       *
			       * This will not invoke `shouldComponentUpdate`, but it will invoke
			       * `componentWillUpdate` and `componentDidUpdate`.
			       *
			       * @param {ReactClass} publicInstance The instance that should rerender.
			       * @param {?function} callback Called after component is updated.
			       * @param {?string} callerName name of the calling function in the public API.
			       * @internal
			       */
			      enqueueForceUpdate: function (publicInstance, callback, callerName) {
			        warnNoop(publicInstance, 'forceUpdate');
			      },
			      /**
			       * Replaces all of the state. Always use this or `setState` to mutate state.
			       * You should treat `this.state` as immutable.
			       *
			       * There is no guarantee that `this.state` will be immediately updated, so
			       * accessing `this.state` after calling this method may return the old value.
			       *
			       * @param {ReactClass} publicInstance The instance that should rerender.
			       * @param {object} completeState Next state.
			       * @param {?function} callback Called after component is updated.
			       * @param {?string} callerName name of the calling function in the public API.
			       * @internal
			       */
			      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
			        warnNoop(publicInstance, 'replaceState');
			      },
			      /**
			       * Sets a subset of the state. This only exists because _pendingState is
			       * internal. This provides a merging strategy that is not available to deep
			       * properties which is confusing. TODO: Expose pendingState or don't use it
			       * during the merge.
			       *
			       * @param {ReactClass} publicInstance The instance that should rerender.
			       * @param {object} partialState Next partial state to be merged with state.
			       * @param {?function} callback Called after component is updated.
			       * @param {?string} Name of the calling function in the public API.
			       * @internal
			       */
			      enqueueSetState: function (publicInstance, partialState, callback, callerName) {
			        warnNoop(publicInstance, 'setState');
			      }
			    };
			    var assign = Object.assign;
			    var emptyObject = {};
			    {
			      Object.freeze(emptyObject);
			    }
			    /**
			     * Base class helpers for the updating state of a component.
			     */

			    function Component(props, context, updater) {
			      this.props = props;
			      this.context = context; // If a component has string refs, we will assign a different object later.

			      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
			      // renderer.

			      this.updater = updater || ReactNoopUpdateQueue;
			    }
			    Component.prototype.isReactComponent = {};
			    /**
			     * Sets a subset of the state. Always use this to mutate
			     * state. You should treat `this.state` as immutable.
			     *
			     * There is no guarantee that `this.state` will be immediately updated, so
			     * accessing `this.state` after calling this method may return the old value.
			     *
			     * There is no guarantee that calls to `setState` will run synchronously,
			     * as they may eventually be batched together.  You can provide an optional
			     * callback that will be executed when the call to setState is actually
			     * completed.
			     *
			     * When a function is provided to setState, it will be called at some point in
			     * the future (not synchronously). It will be called with the up to date
			     * component arguments (state, props, context). These values can be different
			     * from this.* because your function may be called after receiveProps but before
			     * shouldComponentUpdate, and this new state, props, and context will not yet be
			     * assigned to this.
			     *
			     * @param {object|function} partialState Next partial state or function to
			     *        produce next partial state to be merged with current state.
			     * @param {?function} callback Called after state is updated.
			     * @final
			     * @protected
			     */

			    Component.prototype.setState = function (partialState, callback) {
			      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
			        throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
			      }
			      this.updater.enqueueSetState(this, partialState, callback, 'setState');
			    };
			    /**
			     * Forces an update. This should only be invoked when it is known with
			     * certainty that we are **not** in a DOM transaction.
			     *
			     * You may want to call this when you know that some deeper aspect of the
			     * component's state has changed but `setState` was not called.
			     *
			     * This will not invoke `shouldComponentUpdate`, but it will invoke
			     * `componentWillUpdate` and `componentDidUpdate`.
			     *
			     * @param {?function} callback Called after update is complete.
			     * @final
			     * @protected
			     */

			    Component.prototype.forceUpdate = function (callback) {
			      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
			    };
			    /**
			     * Deprecated APIs. These APIs used to exist on classic React classes but since
			     * we would like to deprecate them, we're not going to move them over to this
			     * modern base class. Instead, we define a getter that warns if it's accessed.
			     */

			    {
			      var deprecatedAPIs = {
			        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
			        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
			      };
			      var defineDeprecationWarning = function (methodName, info) {
			        Object.defineProperty(Component.prototype, methodName, {
			          get: function () {
			            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
			            return undefined;
			          }
			        });
			      };
			      for (var fnName in deprecatedAPIs) {
			        if (deprecatedAPIs.hasOwnProperty(fnName)) {
			          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
			        }
			      }
			    }
			    function ComponentDummy() {}
			    ComponentDummy.prototype = Component.prototype;
			    /**
			     * Convenience component with default shallow equality check for sCU.
			     */

			    function PureComponent(props, context, updater) {
			      this.props = props;
			      this.context = context; // If a component has string refs, we will assign a different object later.

			      this.refs = emptyObject;
			      this.updater = updater || ReactNoopUpdateQueue;
			    }
			    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
			    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

			    assign(pureComponentPrototype, Component.prototype);
			    pureComponentPrototype.isPureReactComponent = true;

			    // an immutable object with a single mutable value
			    function createRef() {
			      var refObject = {
			        current: null
			      };
			      {
			        Object.seal(refObject);
			      }
			      return refObject;
			    }
			    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

			    function isArray(a) {
			      return isArrayImpl(a);
			    }

			    /*
			     * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
			     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
			     *
			     * The functions in this module will throw an easier-to-understand,
			     * easier-to-debug exception with a clear errors message message explaining the
			     * problem. (Instead of a confusing exception thrown inside the implementation
			     * of the `value` object).
			     */
			    // $FlowFixMe only called in DEV, so void return is not possible.
			    function typeName(value) {
			      {
			        // toStringTag is needed for namespaced types like Temporal.Instant
			        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
			        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
			        return type;
			      }
			    } // $FlowFixMe only called in DEV, so void return is not possible.

			    function willCoercionThrow(value) {
			      {
			        try {
			          testStringCoercion(value);
			          return false;
			        } catch (e) {
			          return true;
			        }
			      }
			    }
			    function testStringCoercion(value) {
			      // If you ended up here by following an exception call stack, here's what's
			      // happened: you supplied an object or symbol value to React (as a prop, key,
			      // DOM attribute, CSS property, string ref, etc.) and when React tried to
			      // coerce it to a string using `'' + value`, an exception was thrown.
			      //
			      // The most common types that will cause this exception are `Symbol` instances
			      // and Temporal objects like `Temporal.Instant`. But any object that has a
			      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
			      // exception. (Library authors do this to prevent users from using built-in
			      // numeric operators like `+` or comparison operators like `>=` because custom
			      // methods are needed to perform accurate arithmetic or comparison.)
			      //
			      // To fix the problem, coerce this object or symbol value to a string before
			      // passing it to React. The most reliable way is usually `String(value)`.
			      //
			      // To find which value is throwing, check the browser or debugger console.
			      // Before this exception was thrown, there should be `console.error` output
			      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
			      // problem and how that type was used: key, atrribute, input value prop, etc.
			      // In most cases, this console output also shows the component and its
			      // ancestor components where the exception happened.
			      //
			      // eslint-disable-next-line react-internal/safe-string-coercion
			      return '' + value;
			    }
			    function checkKeyStringCoercion(value) {
			      {
			        if (willCoercionThrow(value)) {
			          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
			          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
			        }
			      }
			    }
			    function getWrappedName(outerType, innerType, wrapperName) {
			      var displayName = outerType.displayName;
			      if (displayName) {
			        return displayName;
			      }
			      var functionName = innerType.displayName || innerType.name || '';
			      return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
			    } // Keep in sync with react-reconciler/getComponentNameFromFiber

			    function getContextName(type) {
			      return type.displayName || 'Context';
			    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.

			    function getComponentNameFromType(type) {
			      if (type == null) {
			        // Host root, text node or just invalid type.
			        return null;
			      }
			      {
			        if (typeof type.tag === 'number') {
			          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
			        }
			      }
			      if (typeof type === 'function') {
			        return type.displayName || type.name || null;
			      }
			      if (typeof type === 'string') {
			        return type;
			      }
			      switch (type) {
			        case REACT_FRAGMENT_TYPE:
			          return 'Fragment';
			        case REACT_PORTAL_TYPE:
			          return 'Portal';
			        case REACT_PROFILER_TYPE:
			          return 'Profiler';
			        case REACT_STRICT_MODE_TYPE:
			          return 'StrictMode';
			        case REACT_SUSPENSE_TYPE:
			          return 'Suspense';
			        case REACT_SUSPENSE_LIST_TYPE:
			          return 'SuspenseList';
			      }
			      if (typeof type === 'object') {
			        switch (type.$$typeof) {
			          case REACT_CONTEXT_TYPE:
			            var context = type;
			            return getContextName(context) + '.Consumer';
			          case REACT_PROVIDER_TYPE:
			            var provider = type;
			            return getContextName(provider._context) + '.Provider';
			          case REACT_FORWARD_REF_TYPE:
			            return getWrappedName(type, type.render, 'ForwardRef');
			          case REACT_MEMO_TYPE:
			            var outerName = type.displayName || null;
			            if (outerName !== null) {
			              return outerName;
			            }
			            return getComponentNameFromType(type.type) || 'Memo';
			          case REACT_LAZY_TYPE:
			            {
			              var lazyComponent = type;
			              var payload = lazyComponent._payload;
			              var init = lazyComponent._init;
			              try {
			                return getComponentNameFromType(init(payload));
			              } catch (x) {
			                return null;
			              }
			            }

			          // eslint-disable-next-line no-fallthrough
			        }
			      }
			      return null;
			    }
			    var hasOwnProperty = Object.prototype.hasOwnProperty;
			    var RESERVED_PROPS = {
			      key: true,
			      ref: true,
			      __self: true,
			      __source: true
			    };
			    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
			    {
			      didWarnAboutStringRefs = {};
			    }
			    function hasValidRef(config) {
			      {
			        if (hasOwnProperty.call(config, 'ref')) {
			          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
			          if (getter && getter.isReactWarning) {
			            return false;
			          }
			        }
			      }
			      return config.ref !== undefined;
			    }
			    function hasValidKey(config) {
			      {
			        if (hasOwnProperty.call(config, 'key')) {
			          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
			          if (getter && getter.isReactWarning) {
			            return false;
			          }
			        }
			      }
			      return config.key !== undefined;
			    }
			    function defineKeyPropWarningGetter(props, displayName) {
			      var warnAboutAccessingKey = function () {
			        {
			          if (!specialPropKeyWarningShown) {
			            specialPropKeyWarningShown = true;
			            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
			          }
			        }
			      };
			      warnAboutAccessingKey.isReactWarning = true;
			      Object.defineProperty(props, 'key', {
			        get: warnAboutAccessingKey,
			        configurable: true
			      });
			    }
			    function defineRefPropWarningGetter(props, displayName) {
			      var warnAboutAccessingRef = function () {
			        {
			          if (!specialPropRefWarningShown) {
			            specialPropRefWarningShown = true;
			            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
			          }
			        }
			      };
			      warnAboutAccessingRef.isReactWarning = true;
			      Object.defineProperty(props, 'ref', {
			        get: warnAboutAccessingRef,
			        configurable: true
			      });
			    }
			    function warnIfStringRefCannotBeAutoConverted(config) {
			      {
			        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
			          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
			          if (!didWarnAboutStringRefs[componentName]) {
			            error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
			            didWarnAboutStringRefs[componentName] = true;
			          }
			        }
			      }
			    }
			    /**
			     * Factory method to create a new React element. This no longer adheres to
			     * the class pattern, so do not use new to call it. Also, instanceof check
			     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
			     * if something is a React Element.
			     *
			     * @param {*} type
			     * @param {*} props
			     * @param {*} key
			     * @param {string|object} ref
			     * @param {*} owner
			     * @param {*} self A *temporary* helper to detect places where `this` is
			     * different from the `owner` when React.createElement is called, so that we
			     * can warn. We want to get rid of owner and replace string `ref`s with arrow
			     * functions, and as long as `this` and owner are the same, there will be no
			     * change in behavior.
			     * @param {*} source An annotation object (added by a transpiler or otherwise)
			     * indicating filename, line number, and/or other information.
			     * @internal
			     */

			    var ReactElement = function (type, key, ref, self, source, owner, props) {
			      var element = {
			        // This tag allows us to uniquely identify this as a React Element
			        $$typeof: REACT_ELEMENT_TYPE,
			        // Built-in properties that belong on the element
			        type: type,
			        key: key,
			        ref: ref,
			        props: props,
			        // Record the component responsible for creating this element.
			        _owner: owner
			      };
			      {
			        // The validation flag is currently mutative. We put it on
			        // an external backing store so that we can freeze the whole object.
			        // This can be replaced with a WeakMap once they are implemented in
			        // commonly used development environments.
			        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
			        // the validation flag non-enumerable (where possible, which should
			        // include every environment we run tests in), so the test framework
			        // ignores it.

			        Object.defineProperty(element._store, 'validated', {
			          configurable: false,
			          enumerable: false,
			          writable: true,
			          value: false
			        }); // self and source are DEV only properties.

			        Object.defineProperty(element, '_self', {
			          configurable: false,
			          enumerable: false,
			          writable: false,
			          value: self
			        }); // Two elements created in two different places should be considered
			        // equal for testing purposes and therefore we hide it from enumeration.

			        Object.defineProperty(element, '_source', {
			          configurable: false,
			          enumerable: false,
			          writable: false,
			          value: source
			        });
			        if (Object.freeze) {
			          Object.freeze(element.props);
			          Object.freeze(element);
			        }
			      }
			      return element;
			    };
			    /**
			     * Create and return a new ReactElement of the given type.
			     * See https://reactjs.org/docs/react-api.html#createelement
			     */

			    function createElement(type, config, children) {
			      var propName; // Reserved names are extracted

			      var props = {};
			      var key = null;
			      var ref = null;
			      var self = null;
			      var source = null;
			      if (config != null) {
			        if (hasValidRef(config)) {
			          ref = config.ref;
			          {
			            warnIfStringRefCannotBeAutoConverted(config);
			          }
			        }
			        if (hasValidKey(config)) {
			          {
			            checkKeyStringCoercion(config.key);
			          }
			          key = '' + config.key;
			        }
			        self = config.__self === undefined ? null : config.__self;
			        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

			        for (propName in config) {
			          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
			            props[propName] = config[propName];
			          }
			        }
			      } // Children can be more than one argument, and those are transferred onto
			      // the newly allocated props object.

			      var childrenLength = arguments.length - 2;
			      if (childrenLength === 1) {
			        props.children = children;
			      } else if (childrenLength > 1) {
			        var childArray = Array(childrenLength);
			        for (var i = 0; i < childrenLength; i++) {
			          childArray[i] = arguments[i + 2];
			        }
			        {
			          if (Object.freeze) {
			            Object.freeze(childArray);
			          }
			        }
			        props.children = childArray;
			      } // Resolve default props

			      if (type && type.defaultProps) {
			        var defaultProps = type.defaultProps;
			        for (propName in defaultProps) {
			          if (props[propName] === undefined) {
			            props[propName] = defaultProps[propName];
			          }
			        }
			      }
			      {
			        if (key || ref) {
			          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
			          if (key) {
			            defineKeyPropWarningGetter(props, displayName);
			          }
			          if (ref) {
			            defineRefPropWarningGetter(props, displayName);
			          }
			        }
			      }
			      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
			    }
			    function cloneAndReplaceKey(oldElement, newKey) {
			      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
			      return newElement;
			    }
			    /**
			     * Clone and return a new ReactElement using element as the starting point.
			     * See https://reactjs.org/docs/react-api.html#cloneelement
			     */

			    function cloneElement(element, config, children) {
			      if (element === null || element === undefined) {
			        throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
			      }
			      var propName; // Original props are copied

			      var props = assign({}, element.props); // Reserved names are extracted

			      var key = element.key;
			      var ref = element.ref; // Self is preserved since the owner is preserved.

			      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
			      // transpiler, and the original source is probably a better indicator of the
			      // true owner.

			      var source = element._source; // Owner will be preserved, unless ref is overridden

			      var owner = element._owner;
			      if (config != null) {
			        if (hasValidRef(config)) {
			          // Silently steal the ref from the parent.
			          ref = config.ref;
			          owner = ReactCurrentOwner.current;
			        }
			        if (hasValidKey(config)) {
			          {
			            checkKeyStringCoercion(config.key);
			          }
			          key = '' + config.key;
			        } // Remaining properties override existing props

			        var defaultProps;
			        if (element.type && element.type.defaultProps) {
			          defaultProps = element.type.defaultProps;
			        }
			        for (propName in config) {
			          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
			            if (config[propName] === undefined && defaultProps !== undefined) {
			              // Resolve default props
			              props[propName] = defaultProps[propName];
			            } else {
			              props[propName] = config[propName];
			            }
			          }
			        }
			      } // Children can be more than one argument, and those are transferred onto
			      // the newly allocated props object.

			      var childrenLength = arguments.length - 2;
			      if (childrenLength === 1) {
			        props.children = children;
			      } else if (childrenLength > 1) {
			        var childArray = Array(childrenLength);
			        for (var i = 0; i < childrenLength; i++) {
			          childArray[i] = arguments[i + 2];
			        }
			        props.children = childArray;
			      }
			      return ReactElement(element.type, key, ref, self, source, owner, props);
			    }
			    /**
			     * Verifies the object is a ReactElement.
			     * See https://reactjs.org/docs/react-api.html#isvalidelement
			     * @param {?object} object
			     * @return {boolean} True if `object` is a ReactElement.
			     * @final
			     */

			    function isValidElement(object) {
			      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
			    }
			    var SEPARATOR = '.';
			    var SUBSEPARATOR = ':';
			    /**
			     * Escape and wrap key so it is safe to use as a reactid
			     *
			     * @param {string} key to be escaped.
			     * @return {string} the escaped key.
			     */

			    function escape(key) {
			      var escapeRegex = /[=:]/g;
			      var escaperLookup = {
			        '=': '=0',
			        ':': '=2'
			      };
			      var escapedString = key.replace(escapeRegex, function (match) {
			        return escaperLookup[match];
			      });
			      return '$' + escapedString;
			    }
			    /**
			     * TODO: Test that a single child and an array with one item have the same key
			     * pattern.
			     */

			    var didWarnAboutMaps = false;
			    var userProvidedKeyEscapeRegex = /\/+/g;
			    function escapeUserProvidedKey(text) {
			      return text.replace(userProvidedKeyEscapeRegex, '$&/');
			    }
			    /**
			     * Generate a key string that identifies a element within a set.
			     *
			     * @param {*} element A element that could contain a manual key.
			     * @param {number} index Index that is used if a manual key is not provided.
			     * @return {string}
			     */

			    function getElementKey(element, index) {
			      // Do some typechecking here since we call this blindly. We want to ensure
			      // that we don't block potential future ES APIs.
			      if (typeof element === 'object' && element !== null && element.key != null) {
			        // Explicit key
			        {
			          checkKeyStringCoercion(element.key);
			        }
			        return escape('' + element.key);
			      } // Implicit key determined by the index in the set

			      return index.toString(36);
			    }
			    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
			      var type = typeof children;
			      if (type === 'undefined' || type === 'boolean') {
			        // All of the above are perceived as null.
			        children = null;
			      }
			      var invokeCallback = false;
			      if (children === null) {
			        invokeCallback = true;
			      } else {
			        switch (type) {
			          case 'string':
			          case 'number':
			            invokeCallback = true;
			            break;
			          case 'object':
			            switch (children.$$typeof) {
			              case REACT_ELEMENT_TYPE:
			              case REACT_PORTAL_TYPE:
			                invokeCallback = true;
			            }
			        }
			      }
			      if (invokeCallback) {
			        var _child = children;
			        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
			        // so that it's consistent if the number of children grows:

			        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
			        if (isArray(mappedChild)) {
			          var escapedChildKey = '';
			          if (childKey != null) {
			            escapedChildKey = escapeUserProvidedKey(childKey) + '/';
			          }
			          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
			            return c;
			          });
			        } else if (mappedChild != null) {
			          if (isValidElement(mappedChild)) {
			            {
			              // The `if` statement here prevents auto-disabling of the safe
			              // coercion ESLint rule, so we must manually disable it below.
			              // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
			              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
			                checkKeyStringCoercion(mappedChild.key);
			              }
			            }
			            mappedChild = cloneAndReplaceKey(mappedChild,
			            // Keep both the (mapped) and old keys if they differ, just as
			            // traverseAllChildren used to do for objects as children
			            escapedPrefix + (
			            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
			            mappedChild.key && (!_child || _child.key !== mappedChild.key) ?
			            // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
			            // eslint-disable-next-line react-internal/safe-string-coercion
			            escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
			          }
			          array.push(mappedChild);
			        }
			        return 1;
			      }
			      var child;
			      var nextName;
			      var subtreeCount = 0; // Count of children found in the current subtree.

			      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
			      if (isArray(children)) {
			        for (var i = 0; i < children.length; i++) {
			          child = children[i];
			          nextName = nextNamePrefix + getElementKey(child, i);
			          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
			        }
			      } else {
			        var iteratorFn = getIteratorFn(children);
			        if (typeof iteratorFn === 'function') {
			          var iterableChildren = children;
			          {
			            // Warn about using Maps as children
			            if (iteratorFn === iterableChildren.entries) {
			              if (!didWarnAboutMaps) {
			                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
			              }
			              didWarnAboutMaps = true;
			            }
			          }
			          var iterator = iteratorFn.call(iterableChildren);
			          var step;
			          var ii = 0;
			          while (!(step = iterator.next()).done) {
			            child = step.value;
			            nextName = nextNamePrefix + getElementKey(child, ii++);
			            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
			          }
			        } else if (type === 'object') {
			          // eslint-disable-next-line react-internal/safe-string-coercion
			          var childrenString = String(children);
			          throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
			        }
			      }
			      return subtreeCount;
			    }

			    /**
			     * Maps children that are typically specified as `props.children`.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrenmap
			     *
			     * The provided mapFunction(child, index) will be called for each
			     * leaf child.
			     *
			     * @param {?*} children Children tree container.
			     * @param {function(*, int)} func The map function.
			     * @param {*} context Context for mapFunction.
			     * @return {object} Object containing the ordered map of results.
			     */
			    function mapChildren(children, func, context) {
			      if (children == null) {
			        return children;
			      }
			      var result = [];
			      var count = 0;
			      mapIntoArray(children, result, '', '', function (child) {
			        return func.call(context, child, count++);
			      });
			      return result;
			    }
			    /**
			     * Count the number of children that are typically specified as
			     * `props.children`.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrencount
			     *
			     * @param {?*} children Children tree container.
			     * @return {number} The number of children.
			     */

			    function countChildren(children) {
			      var n = 0;
			      mapChildren(children, function () {
			        n++; // Don't return anything
			      });
			      return n;
			    }

			    /**
			     * Iterates through children that are typically specified as `props.children`.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
			     *
			     * The provided forEachFunc(child, index) will be called for each
			     * leaf child.
			     *
			     * @param {?*} children Children tree container.
			     * @param {function(*, int)} forEachFunc
			     * @param {*} forEachContext Context for forEachContext.
			     */
			    function forEachChildren(children, forEachFunc, forEachContext) {
			      mapChildren(children, function () {
			        forEachFunc.apply(this, arguments); // Don't return anything.
			      }, forEachContext);
			    }
			    /**
			     * Flatten a children object (typically specified as `props.children`) and
			     * return an array with appropriately re-keyed children.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
			     */

			    function toArray(children) {
			      return mapChildren(children, function (child) {
			        return child;
			      }) || [];
			    }
			    /**
			     * Returns the first child in a collection of children and verifies that there
			     * is only one child in the collection.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrenonly
			     *
			     * The current implementation of this function assumes that a single child gets
			     * passed without a wrapper, but the purpose of this helper function is to
			     * abstract away the particular structure of children.
			     *
			     * @param {?object} children Child collection structure.
			     * @return {ReactElement} The first and only `ReactElement` contained in the
			     * structure.
			     */

			    function onlyChild(children) {
			      if (!isValidElement(children)) {
			        throw new Error('React.Children.only expected to receive a single React element child.');
			      }
			      return children;
			    }
			    function createContext(defaultValue) {
			      // TODO: Second argument used to be an optional `calculateChangedBits`
			      // function. Warn to reserve for future use?
			      var context = {
			        $$typeof: REACT_CONTEXT_TYPE,
			        // As a workaround to support multiple concurrent renderers, we categorize
			        // some renderers as primary and others as secondary. We only expect
			        // there to be two concurrent renderers at most: React Native (primary) and
			        // Fabric (secondary); React DOM (primary) and React ART (secondary).
			        // Secondary renderers store their context values on separate fields.
			        _currentValue: defaultValue,
			        _currentValue2: defaultValue,
			        // Used to track how many concurrent renderers this context currently
			        // supports within in a single renderer. Such as parallel server rendering.
			        _threadCount: 0,
			        // These are circular
			        Provider: null,
			        Consumer: null,
			        // Add these to use same hidden class in VM as ServerContext
			        _defaultValue: null,
			        _globalName: null
			      };
			      context.Provider = {
			        $$typeof: REACT_PROVIDER_TYPE,
			        _context: context
			      };
			      var hasWarnedAboutUsingNestedContextConsumers = false;
			      var hasWarnedAboutUsingConsumerProvider = false;
			      var hasWarnedAboutDisplayNameOnConsumer = false;
			      {
			        // A separate object, but proxies back to the original context object for
			        // backwards compatibility. It has a different $$typeof, so we can properly
			        // warn for the incorrect usage of Context as a Consumer.
			        var Consumer = {
			          $$typeof: REACT_CONTEXT_TYPE,
			          _context: context
			        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

			        Object.defineProperties(Consumer, {
			          Provider: {
			            get: function () {
			              if (!hasWarnedAboutUsingConsumerProvider) {
			                hasWarnedAboutUsingConsumerProvider = true;
			                error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
			              }
			              return context.Provider;
			            },
			            set: function (_Provider) {
			              context.Provider = _Provider;
			            }
			          },
			          _currentValue: {
			            get: function () {
			              return context._currentValue;
			            },
			            set: function (_currentValue) {
			              context._currentValue = _currentValue;
			            }
			          },
			          _currentValue2: {
			            get: function () {
			              return context._currentValue2;
			            },
			            set: function (_currentValue2) {
			              context._currentValue2 = _currentValue2;
			            }
			          },
			          _threadCount: {
			            get: function () {
			              return context._threadCount;
			            },
			            set: function (_threadCount) {
			              context._threadCount = _threadCount;
			            }
			          },
			          Consumer: {
			            get: function () {
			              if (!hasWarnedAboutUsingNestedContextConsumers) {
			                hasWarnedAboutUsingNestedContextConsumers = true;
			                error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
			              }
			              return context.Consumer;
			            }
			          },
			          displayName: {
			            get: function () {
			              return context.displayName;
			            },
			            set: function (displayName) {
			              if (!hasWarnedAboutDisplayNameOnConsumer) {
			                warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);
			                hasWarnedAboutDisplayNameOnConsumer = true;
			              }
			            }
			          }
			        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

			        context.Consumer = Consumer;
			      }
			      {
			        context._currentRenderer = null;
			        context._currentRenderer2 = null;
			      }
			      return context;
			    }
			    var Uninitialized = -1;
			    var Pending = 0;
			    var Resolved = 1;
			    var Rejected = 2;
			    function lazyInitializer(payload) {
			      if (payload._status === Uninitialized) {
			        var ctor = payload._result;
			        var thenable = ctor(); // Transition to the next state.
			        // This might throw either because it's missing or throws. If so, we treat it
			        // as still uninitialized and try again next time. Which is the same as what
			        // happens if the ctor or any wrappers processing the ctor throws. This might
			        // end up fixing it if the resolution was a concurrency bug.

			        thenable.then(function (moduleObject) {
			          if (payload._status === Pending || payload._status === Uninitialized) {
			            // Transition to the next state.
			            var resolved = payload;
			            resolved._status = Resolved;
			            resolved._result = moduleObject;
			          }
			        }, function (error) {
			          if (payload._status === Pending || payload._status === Uninitialized) {
			            // Transition to the next state.
			            var rejected = payload;
			            rejected._status = Rejected;
			            rejected._result = error;
			          }
			        });
			        if (payload._status === Uninitialized) {
			          // In case, we're still uninitialized, then we're waiting for the thenable
			          // to resolve. Set it as pending in the meantime.
			          var pending = payload;
			          pending._status = Pending;
			          pending._result = thenable;
			        }
			      }
			      if (payload._status === Resolved) {
			        var moduleObject = payload._result;
			        {
			          if (moduleObject === undefined) {
			            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' +
			            // Break up imports to avoid accidentally parsing them as dependencies.
			            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
			          }
			        }
			        {
			          if (!('default' in moduleObject)) {
			            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' +
			            // Break up imports to avoid accidentally parsing them as dependencies.
			            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
			          }
			        }
			        return moduleObject.default;
			      } else {
			        throw payload._result;
			      }
			    }
			    function lazy(ctor) {
			      var payload = {
			        // We use these fields to store the result.
			        _status: Uninitialized,
			        _result: ctor
			      };
			      var lazyType = {
			        $$typeof: REACT_LAZY_TYPE,
			        _payload: payload,
			        _init: lazyInitializer
			      };
			      {
			        // In production, this would just set it on the object.
			        var defaultProps;
			        var propTypes; // $FlowFixMe

			        Object.defineProperties(lazyType, {
			          defaultProps: {
			            configurable: true,
			            get: function () {
			              return defaultProps;
			            },
			            set: function (newDefaultProps) {
			              error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
			              defaultProps = newDefaultProps; // Match production behavior more closely:
			              // $FlowFixMe

			              Object.defineProperty(lazyType, 'defaultProps', {
			                enumerable: true
			              });
			            }
			          },
			          propTypes: {
			            configurable: true,
			            get: function () {
			              return propTypes;
			            },
			            set: function (newPropTypes) {
			              error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
			              propTypes = newPropTypes; // Match production behavior more closely:
			              // $FlowFixMe

			              Object.defineProperty(lazyType, 'propTypes', {
			                enumerable: true
			              });
			            }
			          }
			        });
			      }
			      return lazyType;
			    }
			    function forwardRef(render) {
			      {
			        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
			          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
			        } else if (typeof render !== 'function') {
			          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
			        } else {
			          if (render.length !== 0 && render.length !== 2) {
			            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
			          }
			        }
			        if (render != null) {
			          if (render.defaultProps != null || render.propTypes != null) {
			            error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
			          }
			        }
			      }
			      var elementType = {
			        $$typeof: REACT_FORWARD_REF_TYPE,
			        render: render
			      };
			      {
			        var ownName;
			        Object.defineProperty(elementType, 'displayName', {
			          enumerable: false,
			          configurable: true,
			          get: function () {
			            return ownName;
			          },
			          set: function (name) {
			            ownName = name; // The inner component shouldn't inherit this display name in most cases,
			            // because the component may be used elsewhere.
			            // But it's nice for anonymous functions to inherit the name,
			            // so that our component-stack generation logic will display their frames.
			            // An anonymous function generally suggests a pattern like:
			            //   React.forwardRef((props, ref) => {...});
			            // This kind of inner function is not used elsewhere so the side effect is okay.

			            if (!render.name && !render.displayName) {
			              render.displayName = name;
			            }
			          }
			        });
			      }
			      return elementType;
			    }
			    var REACT_MODULE_REFERENCE;
			    {
			      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
			    }
			    function isValidElementType(type) {
			      if (typeof type === 'string' || typeof type === 'function') {
			        return true;
			      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).

			      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
			        return true;
			      }
			      if (typeof type === 'object' && type !== null) {
			        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||
			        // This needs to include all possible module reference object
			        // types supported by any Flight configuration anywhere since
			        // we don't know which Flight build this will end up being used
			        // with.
			        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
			          return true;
			        }
			      }
			      return false;
			    }
			    function memo(type, compare) {
			      {
			        if (!isValidElementType(type)) {
			          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
			        }
			      }
			      var elementType = {
			        $$typeof: REACT_MEMO_TYPE,
			        type: type,
			        compare: compare === undefined ? null : compare
			      };
			      {
			        var ownName;
			        Object.defineProperty(elementType, 'displayName', {
			          enumerable: false,
			          configurable: true,
			          get: function () {
			            return ownName;
			          },
			          set: function (name) {
			            ownName = name; // The inner component shouldn't inherit this display name in most cases,
			            // because the component may be used elsewhere.
			            // But it's nice for anonymous functions to inherit the name,
			            // so that our component-stack generation logic will display their frames.
			            // An anonymous function generally suggests a pattern like:
			            //   React.memo((props) => {...});
			            // This kind of inner function is not used elsewhere so the side effect is okay.

			            if (!type.name && !type.displayName) {
			              type.displayName = name;
			            }
			          }
			        });
			      }
			      return elementType;
			    }
			    function resolveDispatcher() {
			      var dispatcher = ReactCurrentDispatcher.current;
			      {
			        if (dispatcher === null) {
			          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
			        }
			      } // Will result in a null access error if accessed outside render phase. We
			      // intentionally don't throw our own error because this is in a hot path.
			      // Also helps ensure this is inlined.

			      return dispatcher;
			    }
			    function useContext(Context) {
			      var dispatcher = resolveDispatcher();
			      {
			        // TODO: add a more generic warning for invalid values.
			        if (Context._context !== undefined) {
			          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
			          // and nobody should be using this in existing code.

			          if (realContext.Consumer === Context) {
			            error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
			          } else if (realContext.Provider === Context) {
			            error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
			          }
			        }
			      }
			      return dispatcher.useContext(Context);
			    }
			    function useState(initialState) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useState(initialState);
			    }
			    function useReducer(reducer, initialArg, init) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useReducer(reducer, initialArg, init);
			    }
			    function useRef(initialValue) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useRef(initialValue);
			    }
			    function useEffect(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useEffect(create, deps);
			    }
			    function useInsertionEffect(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useInsertionEffect(create, deps);
			    }
			    function useLayoutEffect(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useLayoutEffect(create, deps);
			    }
			    function useCallback(callback, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useCallback(callback, deps);
			    }
			    function useMemo(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useMemo(create, deps);
			    }
			    function useImperativeHandle(ref, create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useImperativeHandle(ref, create, deps);
			    }
			    function useDebugValue(value, formatterFn) {
			      {
			        var dispatcher = resolveDispatcher();
			        return dispatcher.useDebugValue(value, formatterFn);
			      }
			    }
			    function useTransition() {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useTransition();
			    }
			    function useDeferredValue(value) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useDeferredValue(value);
			    }
			    function useId() {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useId();
			    }
			    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
			    }

			    // Helpers to patch console.logs to avoid logging during side-effect free
			    // replaying on render function. This currently only patches the object
			    // lazily which won't cover if the log function was extracted eagerly.
			    // We could also eagerly patch the method.
			    var disabledDepth = 0;
			    var prevLog;
			    var prevInfo;
			    var prevWarn;
			    var prevError;
			    var prevGroup;
			    var prevGroupCollapsed;
			    var prevGroupEnd;
			    function disabledLog() {}
			    disabledLog.__reactDisabledLog = true;
			    function disableLogs() {
			      {
			        if (disabledDepth === 0) {
			          /* eslint-disable react-internal/no-production-logging */
			          prevLog = console.log;
			          prevInfo = console.info;
			          prevWarn = console.warn;
			          prevError = console.error;
			          prevGroup = console.group;
			          prevGroupCollapsed = console.groupCollapsed;
			          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

			          var props = {
			            configurable: true,
			            enumerable: true,
			            value: disabledLog,
			            writable: true
			          }; // $FlowFixMe Flow thinks console is immutable.

			          Object.defineProperties(console, {
			            info: props,
			            log: props,
			            warn: props,
			            error: props,
			            group: props,
			            groupCollapsed: props,
			            groupEnd: props
			          });
			          /* eslint-enable react-internal/no-production-logging */
			        }
			        disabledDepth++;
			      }
			    }
			    function reenableLogs() {
			      {
			        disabledDepth--;
			        if (disabledDepth === 0) {
			          /* eslint-disable react-internal/no-production-logging */
			          var props = {
			            configurable: true,
			            enumerable: true,
			            writable: true
			          }; // $FlowFixMe Flow thinks console is immutable.

			          Object.defineProperties(console, {
			            log: assign({}, props, {
			              value: prevLog
			            }),
			            info: assign({}, props, {
			              value: prevInfo
			            }),
			            warn: assign({}, props, {
			              value: prevWarn
			            }),
			            error: assign({}, props, {
			              value: prevError
			            }),
			            group: assign({}, props, {
			              value: prevGroup
			            }),
			            groupCollapsed: assign({}, props, {
			              value: prevGroupCollapsed
			            }),
			            groupEnd: assign({}, props, {
			              value: prevGroupEnd
			            })
			          });
			          /* eslint-enable react-internal/no-production-logging */
			        }
			        if (disabledDepth < 0) {
			          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
			        }
			      }
			    }
			    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
			    var prefix;
			    function describeBuiltInComponentFrame(name, source, ownerFn) {
			      {
			        if (prefix === undefined) {
			          // Extract the VM specific prefix used by each line.
			          try {
			            throw Error();
			          } catch (x) {
			            var match = x.stack.trim().match(/\n( *(at )?)/);
			            prefix = match && match[1] || '';
			          }
			        } // We use the prefix to ensure our stacks line up with native stack frames.

			        return '\n' + prefix + name;
			      }
			    }
			    var reentry = false;
			    var componentFrameCache;
			    {
			      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
			      componentFrameCache = new PossiblyWeakMap();
			    }
			    function describeNativeComponentFrame(fn, construct) {
			      // If something asked for a stack inside a fake render, it should get ignored.
			      if (!fn || reentry) {
			        return '';
			      }
			      {
			        var frame = componentFrameCache.get(fn);
			        if (frame !== undefined) {
			          return frame;
			        }
			      }
			      var control;
			      reentry = true;
			      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

			      Error.prepareStackTrace = undefined;
			      var previousDispatcher;
			      {
			        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
			        // for warnings.

			        ReactCurrentDispatcher$1.current = null;
			        disableLogs();
			      }
			      try {
			        // This should throw.
			        if (construct) {
			          // Something should be setting the props in the constructor.
			          var Fake = function () {
			            throw Error();
			          }; // $FlowFixMe

			          Object.defineProperty(Fake.prototype, 'props', {
			            set: function () {
			              // We use a throwing setter instead of frozen or non-writable props
			              // because that won't throw in a non-strict mode function.
			              throw Error();
			            }
			          });
			          if (typeof Reflect === 'object' && Reflect.construct) {
			            // We construct a different control for this case to include any extra
			            // frames added by the construct call.
			            try {
			              Reflect.construct(Fake, []);
			            } catch (x) {
			              control = x;
			            }
			            Reflect.construct(fn, [], Fake);
			          } else {
			            try {
			              Fake.call();
			            } catch (x) {
			              control = x;
			            }
			            fn.call(Fake.prototype);
			          }
			        } else {
			          try {
			            throw Error();
			          } catch (x) {
			            control = x;
			          }
			          fn();
			        }
			      } catch (sample) {
			        // This is inlined manually because closure doesn't do it for us.
			        if (sample && control && typeof sample.stack === 'string') {
			          // This extracts the first frame from the sample that isn't also in the control.
			          // Skipping one frame that we assume is the frame that calls the two.
			          var sampleLines = sample.stack.split('\n');
			          var controlLines = control.stack.split('\n');
			          var s = sampleLines.length - 1;
			          var c = controlLines.length - 1;
			          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
			            // We expect at least one stack frame to be shared.
			            // Typically this will be the root most one. However, stack frames may be
			            // cut off due to maximum stack limits. In this case, one maybe cut off
			            // earlier than the other. We assume that the sample is longer or the same
			            // and there for cut off earlier. So we should find the root most frame in
			            // the sample somewhere in the control.
			            c--;
			          }
			          for (; s >= 1 && c >= 0; s--, c--) {
			            // Next we find the first one that isn't the same which should be the
			            // frame that called our sample function and the control.
			            if (sampleLines[s] !== controlLines[c]) {
			              // In V8, the first line is describing the message but other VMs don't.
			              // If we're about to return the first line, and the control is also on the same
			              // line, that's a pretty good indicator that our sample threw at same line as
			              // the control. I.e. before we entered the sample frame. So we ignore this result.
			              // This can happen if you passed a class to function component, or non-function.
			              if (s !== 1 || c !== 1) {
			                do {
			                  s--;
			                  c--; // We may still have similar intermediate frames from the construct call.
			                  // The next one that isn't the same should be our match though.

			                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
			                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
			                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
			                    // but we have a user-provided "displayName"
			                    // splice it in to make the stack more readable.

			                    if (fn.displayName && _frame.includes('<anonymous>')) {
			                      _frame = _frame.replace('<anonymous>', fn.displayName);
			                    }
			                    {
			                      if (typeof fn === 'function') {
			                        componentFrameCache.set(fn, _frame);
			                      }
			                    } // Return the line we found.

			                    return _frame;
			                  }
			                } while (s >= 1 && c >= 0);
			              }
			              break;
			            }
			          }
			        }
			      } finally {
			        reentry = false;
			        {
			          ReactCurrentDispatcher$1.current = previousDispatcher;
			          reenableLogs();
			        }
			        Error.prepareStackTrace = previousPrepareStackTrace;
			      } // Fallback to just using the name if we couldn't make it throw.

			      var name = fn ? fn.displayName || fn.name : '';
			      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
			      {
			        if (typeof fn === 'function') {
			          componentFrameCache.set(fn, syntheticFrame);
			        }
			      }
			      return syntheticFrame;
			    }
			    function describeFunctionComponentFrame(fn, source, ownerFn) {
			      {
			        return describeNativeComponentFrame(fn, false);
			      }
			    }
			    function shouldConstruct(Component) {
			      var prototype = Component.prototype;
			      return !!(prototype && prototype.isReactComponent);
			    }
			    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
			      if (type == null) {
			        return '';
			      }
			      if (typeof type === 'function') {
			        {
			          return describeNativeComponentFrame(type, shouldConstruct(type));
			        }
			      }
			      if (typeof type === 'string') {
			        return describeBuiltInComponentFrame(type);
			      }
			      switch (type) {
			        case REACT_SUSPENSE_TYPE:
			          return describeBuiltInComponentFrame('Suspense');
			        case REACT_SUSPENSE_LIST_TYPE:
			          return describeBuiltInComponentFrame('SuspenseList');
			      }
			      if (typeof type === 'object') {
			        switch (type.$$typeof) {
			          case REACT_FORWARD_REF_TYPE:
			            return describeFunctionComponentFrame(type.render);
			          case REACT_MEMO_TYPE:
			            // Memo may contain any component type so we recursively resolve it.
			            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
			          case REACT_LAZY_TYPE:
			            {
			              var lazyComponent = type;
			              var payload = lazyComponent._payload;
			              var init = lazyComponent._init;
			              try {
			                // Lazy may contain any component type so we recursively resolve it.
			                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
			              } catch (x) {}
			            }
			        }
			      }
			      return '';
			    }
			    var loggedTypeFailures = {};
			    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
			    function setCurrentlyValidatingElement(element) {
			      {
			        if (element) {
			          var owner = element._owner;
			          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
			          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
			        } else {
			          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
			        }
			      }
			    }
			    function checkPropTypes(typeSpecs, values, location, componentName, element) {
			      {
			        // $FlowFixMe This is okay but Flow doesn't know it.
			        var has = Function.call.bind(hasOwnProperty);
			        for (var typeSpecName in typeSpecs) {
			          if (has(typeSpecs, typeSpecName)) {
			            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
			            // fail the render phase where it didn't fail before. So we log it.
			            // After these have been cleaned up, we'll let them throw.

			            try {
			              // This is intentionally an invariant that gets caught. It's the same
			              // behavior as without this statement except with a better message.
			              if (typeof typeSpecs[typeSpecName] !== 'function') {
			                // eslint-disable-next-line react-internal/prod-error-codes
			                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
			                err.name = 'Invariant Violation';
			                throw err;
			              }
			              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
			            } catch (ex) {
			              error$1 = ex;
			            }
			            if (error$1 && !(error$1 instanceof Error)) {
			              setCurrentlyValidatingElement(element);
			              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
			              setCurrentlyValidatingElement(null);
			            }
			            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
			              // Only monitor this failure once because there tends to be a lot of the
			              // same error.
			              loggedTypeFailures[error$1.message] = true;
			              setCurrentlyValidatingElement(element);
			              error('Failed %s type: %s', location, error$1.message);
			              setCurrentlyValidatingElement(null);
			            }
			          }
			        }
			      }
			    }
			    function setCurrentlyValidatingElement$1(element) {
			      {
			        if (element) {
			          var owner = element._owner;
			          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
			          setExtraStackFrame(stack);
			        } else {
			          setExtraStackFrame(null);
			        }
			      }
			    }
			    var propTypesMisspellWarningShown;
			    {
			      propTypesMisspellWarningShown = false;
			    }
			    function getDeclarationErrorAddendum() {
			      if (ReactCurrentOwner.current) {
			        var name = getComponentNameFromType(ReactCurrentOwner.current.type);
			        if (name) {
			          return '\n\nCheck the render method of `' + name + '`.';
			        }
			      }
			      return '';
			    }
			    function getSourceInfoErrorAddendum(source) {
			      if (source !== undefined) {
			        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
			        var lineNumber = source.lineNumber;
			        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
			      }
			      return '';
			    }
			    function getSourceInfoErrorAddendumForProps(elementProps) {
			      if (elementProps !== null && elementProps !== undefined) {
			        return getSourceInfoErrorAddendum(elementProps.__source);
			      }
			      return '';
			    }
			    /**
			     * Warn if there's no key explicitly set on dynamic arrays of children or
			     * object keys are not valid. This allows us to keep track of children between
			     * updates.
			     */

			    var ownerHasKeyUseWarning = {};
			    function getCurrentComponentErrorInfo(parentType) {
			      var info = getDeclarationErrorAddendum();
			      if (!info) {
			        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
			        if (parentName) {
			          info = "\n\nCheck the top-level render call using <" + parentName + ">.";
			        }
			      }
			      return info;
			    }
			    /**
			     * Warn if the element doesn't have an explicit key assigned to it.
			     * This element is in an array. The array could grow and shrink or be
			     * reordered. All children that haven't already been validated are required to
			     * have a "key" property assigned to it. Error statuses are cached so a warning
			     * will only be shown once.
			     *
			     * @internal
			     * @param {ReactElement} element Element that requires a key.
			     * @param {*} parentType element's parent's type.
			     */

			    function validateExplicitKey(element, parentType) {
			      if (!element._store || element._store.validated || element.key != null) {
			        return;
			      }
			      element._store.validated = true;
			      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
			      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
			        return;
			      }
			      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
			      // property, it may be the creator of the child that's responsible for
			      // assigning it a key.

			      var childOwner = '';
			      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
			        // Give the component that originally created this child.
			        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
			      }
			      {
			        setCurrentlyValidatingElement$1(element);
			        error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
			        setCurrentlyValidatingElement$1(null);
			      }
			    }
			    /**
			     * Ensure that every element either is passed in a static location, in an
			     * array with an explicit keys property defined, or in an object literal
			     * with valid key property.
			     *
			     * @internal
			     * @param {ReactNode} node Statically passed child of any type.
			     * @param {*} parentType node's parent's type.
			     */

			    function validateChildKeys(node, parentType) {
			      if (typeof node !== 'object') {
			        return;
			      }
			      if (isArray(node)) {
			        for (var i = 0; i < node.length; i++) {
			          var child = node[i];
			          if (isValidElement(child)) {
			            validateExplicitKey(child, parentType);
			          }
			        }
			      } else if (isValidElement(node)) {
			        // This element was passed in a valid location.
			        if (node._store) {
			          node._store.validated = true;
			        }
			      } else if (node) {
			        var iteratorFn = getIteratorFn(node);
			        if (typeof iteratorFn === 'function') {
			          // Entry iterators used to provide implicit keys,
			          // but now we print a separate warning for them later.
			          if (iteratorFn !== node.entries) {
			            var iterator = iteratorFn.call(node);
			            var step;
			            while (!(step = iterator.next()).done) {
			              if (isValidElement(step.value)) {
			                validateExplicitKey(step.value, parentType);
			              }
			            }
			          }
			        }
			      }
			    }
			    /**
			     * Given an element, validate that its props follow the propTypes definition,
			     * provided by the type.
			     *
			     * @param {ReactElement} element
			     */

			    function validatePropTypes(element) {
			      {
			        var type = element.type;
			        if (type === null || type === undefined || typeof type === 'string') {
			          return;
			        }
			        var propTypes;
			        if (typeof type === 'function') {
			          propTypes = type.propTypes;
			        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
			        // Note: Memo only checks outer props here.
			        // Inner props are checked in the reconciler.
			        type.$$typeof === REACT_MEMO_TYPE)) {
			          propTypes = type.propTypes;
			        } else {
			          return;
			        }
			        if (propTypes) {
			          // Intentionally inside to avoid triggering lazy initializers:
			          var name = getComponentNameFromType(type);
			          checkPropTypes(propTypes, element.props, 'prop', name, element);
			        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
			          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

			          var _name = getComponentNameFromType(type);
			          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
			        }
			        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
			          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
			        }
			      }
			    }
			    /**
			     * Given a fragment, validate that it can only be provided with fragment props
			     * @param {ReactElement} fragment
			     */

			    function validateFragmentProps(fragment) {
			      {
			        var keys = Object.keys(fragment.props);
			        for (var i = 0; i < keys.length; i++) {
			          var key = keys[i];
			          if (key !== 'children' && key !== 'key') {
			            setCurrentlyValidatingElement$1(fragment);
			            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
			            setCurrentlyValidatingElement$1(null);
			            break;
			          }
			        }
			        if (fragment.ref !== null) {
			          setCurrentlyValidatingElement$1(fragment);
			          error('Invalid attribute `ref` supplied to `React.Fragment`.');
			          setCurrentlyValidatingElement$1(null);
			        }
			      }
			    }
			    function createElementWithValidation(type, props, children) {
			      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
			      // succeed and there will likely be errors in render.

			      if (!validType) {
			        var info = '';
			        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
			          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
			        }
			        var sourceInfo = getSourceInfoErrorAddendumForProps(props);
			        if (sourceInfo) {
			          info += sourceInfo;
			        } else {
			          info += getDeclarationErrorAddendum();
			        }
			        var typeString;
			        if (type === null) {
			          typeString = 'null';
			        } else if (isArray(type)) {
			          typeString = 'array';
			        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
			          typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
			          info = ' Did you accidentally export a JSX literal instead of a component?';
			        } else {
			          typeString = typeof type;
			        }
			        {
			          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
			        }
			      }
			      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
			      // TODO: Drop this when these are no longer allowed as the type argument.

			      if (element == null) {
			        return element;
			      } // Skip key warning if the type isn't valid since our key validation logic
			      // doesn't expect a non-string/function type and can throw confusing errors.
			      // We don't want exception behavior to differ between dev and prod.
			      // (Rendering will throw with a helpful message and as soon as the type is
			      // fixed, the key warnings will appear.)

			      if (validType) {
			        for (var i = 2; i < arguments.length; i++) {
			          validateChildKeys(arguments[i], type);
			        }
			      }
			      if (type === REACT_FRAGMENT_TYPE) {
			        validateFragmentProps(element);
			      } else {
			        validatePropTypes(element);
			      }
			      return element;
			    }
			    var didWarnAboutDeprecatedCreateFactory = false;
			    function createFactoryWithValidation(type) {
			      var validatedFactory = createElementWithValidation.bind(null, type);
			      validatedFactory.type = type;
			      {
			        if (!didWarnAboutDeprecatedCreateFactory) {
			          didWarnAboutDeprecatedCreateFactory = true;
			          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
			        } // Legacy hook: remove it

			        Object.defineProperty(validatedFactory, 'type', {
			          enumerable: false,
			          get: function () {
			            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
			            Object.defineProperty(this, 'type', {
			              value: type
			            });
			            return type;
			          }
			        });
			      }
			      return validatedFactory;
			    }
			    function cloneElementWithValidation(element, props, children) {
			      var newElement = cloneElement.apply(this, arguments);
			      for (var i = 2; i < arguments.length; i++) {
			        validateChildKeys(arguments[i], newElement.type);
			      }
			      validatePropTypes(newElement);
			      return newElement;
			    }
			    function startTransition(scope, options) {
			      var prevTransition = ReactCurrentBatchConfig.transition;
			      ReactCurrentBatchConfig.transition = {};
			      var currentTransition = ReactCurrentBatchConfig.transition;
			      {
			        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
			      }
			      try {
			        scope();
			      } finally {
			        ReactCurrentBatchConfig.transition = prevTransition;
			        {
			          if (prevTransition === null && currentTransition._updatedFibers) {
			            var updatedFibersCount = currentTransition._updatedFibers.size;
			            if (updatedFibersCount > 10) {
			              warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
			            }
			            currentTransition._updatedFibers.clear();
			          }
			        }
			      }
			    }
			    var didWarnAboutMessageChannel = false;
			    var enqueueTaskImpl = null;
			    function enqueueTask(task) {
			      if (enqueueTaskImpl === null) {
			        try {
			          // read require off the module object to get around the bundlers.
			          // we don't want them to detect a require and bundle a Node polyfill.
			          var requireString = ('require' + Math.random()).slice(0, 7);
			          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
			          // version of setImmediate, bypassing fake timers if any.

			          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
			        } catch (_err) {
			          // we're in a browser
			          // we can't use regular timers because they may still be faked
			          // so we try MessageChannel+postMessage instead
			          enqueueTaskImpl = function (callback) {
			            {
			              if (didWarnAboutMessageChannel === false) {
			                didWarnAboutMessageChannel = true;
			                if (typeof MessageChannel === 'undefined') {
			                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
			                }
			              }
			            }
			            var channel = new MessageChannel();
			            channel.port1.onmessage = callback;
			            channel.port2.postMessage(undefined);
			          };
			        }
			      }
			      return enqueueTaskImpl(task);
			    }
			    var actScopeDepth = 0;
			    var didWarnNoAwaitAct = false;
			    function act(callback) {
			      {
			        // `act` calls can be nested, so we track the depth. This represents the
			        // number of `act` scopes on the stack.
			        var prevActScopeDepth = actScopeDepth;
			        actScopeDepth++;
			        if (ReactCurrentActQueue.current === null) {
			          // This is the outermost `act` scope. Initialize the queue. The reconciler
			          // will detect the queue and use it instead of Scheduler.
			          ReactCurrentActQueue.current = [];
			        }
			        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
			        var result;
			        try {
			          // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
			          // set to `true` while the given callback is executed, not for updates
			          // triggered during an async event, because this is how the legacy
			          // implementation of `act` behaved.
			          ReactCurrentActQueue.isBatchingLegacy = true;
			          result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
			          // which flushed updates immediately after the scope function exits, even
			          // if it's an async function.

			          if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
			            var queue = ReactCurrentActQueue.current;
			            if (queue !== null) {
			              ReactCurrentActQueue.didScheduleLegacyUpdate = false;
			              flushActQueue(queue);
			            }
			          }
			        } catch (error) {
			          popActScope(prevActScopeDepth);
			          throw error;
			        } finally {
			          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
			        }
			        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
			          var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
			          // for it to resolve before exiting the current scope.

			          var wasAwaited = false;
			          var thenable = {
			            then: function (resolve, reject) {
			              wasAwaited = true;
			              thenableResult.then(function (returnValue) {
			                popActScope(prevActScopeDepth);
			                if (actScopeDepth === 0) {
			                  // We've exited the outermost act scope. Recursively flush the
			                  // queue until there's no remaining work.
			                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);
			                } else {
			                  resolve(returnValue);
			                }
			              }, function (error) {
			                // The callback threw an error.
			                popActScope(prevActScopeDepth);
			                reject(error);
			              });
			            }
			          };
			          {
			            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
			              // eslint-disable-next-line no-undef
			              Promise.resolve().then(function () {}).then(function () {
			                if (!wasAwaited) {
			                  didWarnNoAwaitAct = true;
			                  error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
			                }
			              });
			            }
			          }
			          return thenable;
			        } else {
			          var returnValue = result; // The callback is not an async function. Exit the current scope
			          // immediately, without awaiting.

			          popActScope(prevActScopeDepth);
			          if (actScopeDepth === 0) {
			            // Exiting the outermost act scope. Flush the queue.
			            var _queue = ReactCurrentActQueue.current;
			            if (_queue !== null) {
			              flushActQueue(_queue);
			              ReactCurrentActQueue.current = null;
			            } // Return a thenable. If the user awaits it, we'll flush again in
			            // case additional work was scheduled by a microtask.

			            var _thenable = {
			              then: function (resolve, reject) {
			                // Confirm we haven't re-entered another `act` scope, in case
			                // the user does something weird like await the thenable
			                // multiple times.
			                if (ReactCurrentActQueue.current === null) {
			                  // Recursively flush the queue until there's no remaining work.
			                  ReactCurrentActQueue.current = [];
			                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);
			                } else {
			                  resolve(returnValue);
			                }
			              }
			            };
			            return _thenable;
			          } else {
			            // Since we're inside a nested `act` scope, the returned thenable
			            // immediately resolves. The outer scope will flush the queue.
			            var _thenable2 = {
			              then: function (resolve, reject) {
			                resolve(returnValue);
			              }
			            };
			            return _thenable2;
			          }
			        }
			      }
			    }
			    function popActScope(prevActScopeDepth) {
			      {
			        if (prevActScopeDepth !== actScopeDepth - 1) {
			          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
			        }
			        actScopeDepth = prevActScopeDepth;
			      }
			    }
			    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
			      {
			        var queue = ReactCurrentActQueue.current;
			        if (queue !== null) {
			          try {
			            flushActQueue(queue);
			            enqueueTask(function () {
			              if (queue.length === 0) {
			                // No additional work was scheduled. Finish.
			                ReactCurrentActQueue.current = null;
			                resolve(returnValue);
			              } else {
			                // Keep flushing work until there's none left.
			                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
			              }
			            });
			          } catch (error) {
			            reject(error);
			          }
			        } else {
			          resolve(returnValue);
			        }
			      }
			    }
			    var isFlushing = false;
			    function flushActQueue(queue) {
			      {
			        if (!isFlushing) {
			          // Prevent re-entrance.
			          isFlushing = true;
			          var i = 0;
			          try {
			            for (; i < queue.length; i++) {
			              var callback = queue[i];
			              do {
			                callback = callback(true);
			              } while (callback !== null);
			            }
			            queue.length = 0;
			          } catch (error) {
			            // If something throws, leave the remaining callbacks on the queue.
			            queue = queue.slice(i + 1);
			            throw error;
			          } finally {
			            isFlushing = false;
			          }
			        }
			      }
			    }
			    var createElement$1 = createElementWithValidation;
			    var cloneElement$1 = cloneElementWithValidation;
			    var createFactory = createFactoryWithValidation;
			    var Children = {
			      map: mapChildren,
			      forEach: forEachChildren,
			      count: countChildren,
			      toArray: toArray,
			      only: onlyChild
			    };
			    exports.Children = Children;
			    exports.Component = Component;
			    exports.Fragment = REACT_FRAGMENT_TYPE;
			    exports.Profiler = REACT_PROFILER_TYPE;
			    exports.PureComponent = PureComponent;
			    exports.StrictMode = REACT_STRICT_MODE_TYPE;
			    exports.Suspense = REACT_SUSPENSE_TYPE;
			    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
			    exports.cloneElement = cloneElement$1;
			    exports.createContext = createContext;
			    exports.createElement = createElement$1;
			    exports.createFactory = createFactory;
			    exports.createRef = createRef;
			    exports.forwardRef = forwardRef;
			    exports.isValidElement = isValidElement;
			    exports.lazy = lazy;
			    exports.memo = memo;
			    exports.startTransition = startTransition;
			    exports.unstable_act = act;
			    exports.useCallback = useCallback;
			    exports.useContext = useContext;
			    exports.useDebugValue = useDebugValue;
			    exports.useDeferredValue = useDeferredValue;
			    exports.useEffect = useEffect;
			    exports.useId = useId;
			    exports.useImperativeHandle = useImperativeHandle;
			    exports.useInsertionEffect = useInsertionEffect;
			    exports.useLayoutEffect = useLayoutEffect;
			    exports.useMemo = useMemo;
			    exports.useReducer = useReducer;
			    exports.useRef = useRef;
			    exports.useState = useState;
			    exports.useSyncExternalStore = useSyncExternalStore;
			    exports.useTransition = useTransition;
			    exports.version = ReactVersion;
			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
			    }
			  })();
			} 
		} (react_development, react_development.exports));
		return react_development.exports;
	}

	{
	  react$1.exports = requireReact_development();
	}

	var reactExports = react$1.exports;
	var React = /*@__PURE__*/getDefaultExportFromCjs(reactExports);

	var React$1 = /*#__PURE__*/_mergeNamespaces({
		__proto__: null,
		'default': React
	}, [reactExports]);

	var reactDom = {exports: {}};

	var scheduler = {exports: {}};

	var scheduler_development = {};

	/**
	 * @license React
	 * scheduler.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredScheduler_development;

	function requireScheduler_development () {
		if (hasRequiredScheduler_development) return scheduler_development;
		hasRequiredScheduler_development = 1;
		(function (exports) {

			{
			  (function () {

			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
			    }
			    var enableSchedulerDebugging = false;
			    var enableProfiling = false;
			    var frameYieldMs = 5;
			    function push(heap, node) {
			      var index = heap.length;
			      heap.push(node);
			      siftUp(heap, node, index);
			    }
			    function peek(heap) {
			      return heap.length === 0 ? null : heap[0];
			    }
			    function pop(heap) {
			      if (heap.length === 0) {
			        return null;
			      }
			      var first = heap[0];
			      var last = heap.pop();
			      if (last !== first) {
			        heap[0] = last;
			        siftDown(heap, last, 0);
			      }
			      return first;
			    }
			    function siftUp(heap, node, i) {
			      var index = i;
			      while (index > 0) {
			        var parentIndex = index - 1 >>> 1;
			        var parent = heap[parentIndex];
			        if (compare(parent, node) > 0) {
			          // The parent is larger. Swap positions.
			          heap[parentIndex] = node;
			          heap[index] = parent;
			          index = parentIndex;
			        } else {
			          // The parent is smaller. Exit.
			          return;
			        }
			      }
			    }
			    function siftDown(heap, node, i) {
			      var index = i;
			      var length = heap.length;
			      var halfLength = length >>> 1;
			      while (index < halfLength) {
			        var leftIndex = (index + 1) * 2 - 1;
			        var left = heap[leftIndex];
			        var rightIndex = leftIndex + 1;
			        var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

			        if (compare(left, node) < 0) {
			          if (rightIndex < length && compare(right, left) < 0) {
			            heap[index] = right;
			            heap[rightIndex] = node;
			            index = rightIndex;
			          } else {
			            heap[index] = left;
			            heap[leftIndex] = node;
			            index = leftIndex;
			          }
			        } else if (rightIndex < length && compare(right, node) < 0) {
			          heap[index] = right;
			          heap[rightIndex] = node;
			          index = rightIndex;
			        } else {
			          // Neither child is smaller. Exit.
			          return;
			        }
			      }
			    }
			    function compare(a, b) {
			      // Compare sort index first, then task id.
			      var diff = a.sortIndex - b.sortIndex;
			      return diff !== 0 ? diff : a.id - b.id;
			    }

			    // TODO: Use symbols?
			    var ImmediatePriority = 1;
			    var UserBlockingPriority = 2;
			    var NormalPriority = 3;
			    var LowPriority = 4;
			    var IdlePriority = 5;
			    function markTaskErrored(task, ms) {}

			    /* eslint-disable no-var */

			    var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
			    if (hasPerformanceNow) {
			      var localPerformance = performance;
			      exports.unstable_now = function () {
			        return localPerformance.now();
			      };
			    } else {
			      var localDate = Date;
			      var initialTime = localDate.now();
			      exports.unstable_now = function () {
			        return localDate.now() - initialTime;
			      };
			    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
			    // Math.pow(2, 30) - 1
			    // 0b111111111111111111111111111111

			    var maxSigned31BitInt = 1073741823; // Times out immediately

			    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

			    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
			    var NORMAL_PRIORITY_TIMEOUT = 5000;
			    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

			    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

			    var taskQueue = [];
			    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

			    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
			    var currentTask = null;
			    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.

			    var isPerformingWork = false;
			    var isHostCallbackScheduled = false;
			    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.

			    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
			    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
			    var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom

			    typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
			    function advanceTimers(currentTime) {
			      // Check for tasks that are no longer delayed and add them to the queue.
			      var timer = peek(timerQueue);
			      while (timer !== null) {
			        if (timer.callback === null) {
			          // Timer was cancelled.
			          pop(timerQueue);
			        } else if (timer.startTime <= currentTime) {
			          // Timer fired. Transfer to the task queue.
			          pop(timerQueue);
			          timer.sortIndex = timer.expirationTime;
			          push(taskQueue, timer);
			        } else {
			          // Remaining timers are pending.
			          return;
			        }
			        timer = peek(timerQueue);
			      }
			    }
			    function handleTimeout(currentTime) {
			      isHostTimeoutScheduled = false;
			      advanceTimers(currentTime);
			      if (!isHostCallbackScheduled) {
			        if (peek(taskQueue) !== null) {
			          isHostCallbackScheduled = true;
			          requestHostCallback(flushWork);
			        } else {
			          var firstTimer = peek(timerQueue);
			          if (firstTimer !== null) {
			            requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
			          }
			        }
			      }
			    }
			    function flushWork(hasTimeRemaining, initialTime) {
			      isHostCallbackScheduled = false;
			      if (isHostTimeoutScheduled) {
			        // We scheduled a timeout but it's no longer needed. Cancel it.
			        isHostTimeoutScheduled = false;
			        cancelHostTimeout();
			      }
			      isPerformingWork = true;
			      var previousPriorityLevel = currentPriorityLevel;
			      try {
			        var currentTime; if (enableProfiling) ; else {
			          // No catch in prod code path.
			          return workLoop(hasTimeRemaining, initialTime);
			        }
			      } finally {
			        currentTask = null;
			        currentPriorityLevel = previousPriorityLevel;
			        isPerformingWork = false;
			      }
			    }
			    function workLoop(hasTimeRemaining, initialTime) {
			      var currentTime = initialTime;
			      advanceTimers(currentTime);
			      currentTask = peek(taskQueue);
			      while (currentTask !== null && !enableSchedulerDebugging) {
			        if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
			          // This currentTask hasn't expired, and we've reached the deadline.
			          break;
			        }
			        var callback = currentTask.callback;
			        if (typeof callback === 'function') {
			          currentTask.callback = null;
			          currentPriorityLevel = currentTask.priorityLevel;
			          var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
			          var continuationCallback = callback(didUserCallbackTimeout);
			          currentTime = exports.unstable_now();
			          if (typeof continuationCallback === 'function') {
			            currentTask.callback = continuationCallback;
			          } else {
			            if (currentTask === peek(taskQueue)) {
			              pop(taskQueue);
			            }
			          }
			          advanceTimers(currentTime);
			        } else {
			          pop(taskQueue);
			        }
			        currentTask = peek(taskQueue);
			      } // Return whether there's additional work

			      if (currentTask !== null) {
			        return true;
			      } else {
			        var firstTimer = peek(timerQueue);
			        if (firstTimer !== null) {
			          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
			        }
			        return false;
			      }
			    }
			    function unstable_runWithPriority(priorityLevel, eventHandler) {
			      switch (priorityLevel) {
			        case ImmediatePriority:
			        case UserBlockingPriority:
			        case NormalPriority:
			        case LowPriority:
			        case IdlePriority:
			          break;
			        default:
			          priorityLevel = NormalPriority;
			      }
			      var previousPriorityLevel = currentPriorityLevel;
			      currentPriorityLevel = priorityLevel;
			      try {
			        return eventHandler();
			      } finally {
			        currentPriorityLevel = previousPriorityLevel;
			      }
			    }
			    function unstable_next(eventHandler) {
			      var priorityLevel;
			      switch (currentPriorityLevel) {
			        case ImmediatePriority:
			        case UserBlockingPriority:
			        case NormalPriority:
			          // Shift down to normal priority
			          priorityLevel = NormalPriority;
			          break;
			        default:
			          // Anything lower than normal priority should remain at the current level.
			          priorityLevel = currentPriorityLevel;
			          break;
			      }
			      var previousPriorityLevel = currentPriorityLevel;
			      currentPriorityLevel = priorityLevel;
			      try {
			        return eventHandler();
			      } finally {
			        currentPriorityLevel = previousPriorityLevel;
			      }
			    }
			    function unstable_wrapCallback(callback) {
			      var parentPriorityLevel = currentPriorityLevel;
			      return function () {
			        // This is a fork of runWithPriority, inlined for performance.
			        var previousPriorityLevel = currentPriorityLevel;
			        currentPriorityLevel = parentPriorityLevel;
			        try {
			          return callback.apply(this, arguments);
			        } finally {
			          currentPriorityLevel = previousPriorityLevel;
			        }
			      };
			    }
			    function unstable_scheduleCallback(priorityLevel, callback, options) {
			      var currentTime = exports.unstable_now();
			      var startTime;
			      if (typeof options === 'object' && options !== null) {
			        var delay = options.delay;
			        if (typeof delay === 'number' && delay > 0) {
			          startTime = currentTime + delay;
			        } else {
			          startTime = currentTime;
			        }
			      } else {
			        startTime = currentTime;
			      }
			      var timeout;
			      switch (priorityLevel) {
			        case ImmediatePriority:
			          timeout = IMMEDIATE_PRIORITY_TIMEOUT;
			          break;
			        case UserBlockingPriority:
			          timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
			          break;
			        case IdlePriority:
			          timeout = IDLE_PRIORITY_TIMEOUT;
			          break;
			        case LowPriority:
			          timeout = LOW_PRIORITY_TIMEOUT;
			          break;
			        case NormalPriority:
			        default:
			          timeout = NORMAL_PRIORITY_TIMEOUT;
			          break;
			      }
			      var expirationTime = startTime + timeout;
			      var newTask = {
			        id: taskIdCounter++,
			        callback: callback,
			        priorityLevel: priorityLevel,
			        startTime: startTime,
			        expirationTime: expirationTime,
			        sortIndex: -1
			      };
			      if (startTime > currentTime) {
			        // This is a delayed task.
			        newTask.sortIndex = startTime;
			        push(timerQueue, newTask);
			        if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
			          // All tasks are delayed, and this is the task with the earliest delay.
			          if (isHostTimeoutScheduled) {
			            // Cancel an existing timeout.
			            cancelHostTimeout();
			          } else {
			            isHostTimeoutScheduled = true;
			          } // Schedule a timeout.

			          requestHostTimeout(handleTimeout, startTime - currentTime);
			        }
			      } else {
			        newTask.sortIndex = expirationTime;
			        push(taskQueue, newTask);
			        // wait until the next time we yield.

			        if (!isHostCallbackScheduled && !isPerformingWork) {
			          isHostCallbackScheduled = true;
			          requestHostCallback(flushWork);
			        }
			      }
			      return newTask;
			    }
			    function unstable_pauseExecution() {}
			    function unstable_continueExecution() {
			      if (!isHostCallbackScheduled && !isPerformingWork) {
			        isHostCallbackScheduled = true;
			        requestHostCallback(flushWork);
			      }
			    }
			    function unstable_getFirstCallbackNode() {
			      return peek(taskQueue);
			    }
			    function unstable_cancelCallback(task) {
			      // remove from the queue because you can't remove arbitrary nodes from an
			      // array based heap, only the first one.)

			      task.callback = null;
			    }
			    function unstable_getCurrentPriorityLevel() {
			      return currentPriorityLevel;
			    }
			    var isMessageLoopRunning = false;
			    var scheduledHostCallback = null;
			    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
			    // thread, like user events. By default, it yields multiple times per frame.
			    // It does not attempt to align with frame boundaries, since most tasks don't
			    // need to be frame aligned; for those that do, use requestAnimationFrame.

			    var frameInterval = frameYieldMs;
			    var startTime = -1;
			    function shouldYieldToHost() {
			      var timeElapsed = exports.unstable_now() - startTime;
			      if (timeElapsed < frameInterval) {
			        // The main thread has only been blocked for a really short amount of time;
			        // smaller than a single frame. Don't yield yet.
			        return false;
			      } // The main thread has been blocked for a non-negligible amount of time. We

			      return true;
			    }
			    function requestPaint() {}
			    function forceFrameRate(fps) {
			      if (fps < 0 || fps > 125) {
			        // Using console['error'] to evade Babel and ESLint
			        console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
			        return;
			      }
			      if (fps > 0) {
			        frameInterval = Math.floor(1000 / fps);
			      } else {
			        // reset the framerate
			        frameInterval = frameYieldMs;
			      }
			    }
			    var performWorkUntilDeadline = function () {
			      if (scheduledHostCallback !== null) {
			        var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
			        // has been blocked.

			        startTime = currentTime;
			        var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
			        // error can be observed.
			        //
			        // Intentionally not using a try-catch, since that makes some debugging
			        // techniques harder. Instead, if `scheduledHostCallback` errors, then
			        // `hasMoreWork` will remain true, and we'll continue the work loop.

			        var hasMoreWork = true;
			        try {
			          hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
			        } finally {
			          if (hasMoreWork) {
			            // If there's more work, schedule the next message event at the end
			            // of the preceding one.
			            schedulePerformWorkUntilDeadline();
			          } else {
			            isMessageLoopRunning = false;
			            scheduledHostCallback = null;
			          }
			        }
			      } else {
			        isMessageLoopRunning = false;
			      } // Yielding to the browser will give it a chance to paint, so we can
			    };
			    var schedulePerformWorkUntilDeadline;
			    if (typeof localSetImmediate === 'function') {
			      // Node.js and old IE.
			      // There's a few reasons for why we prefer setImmediate.
			      //
			      // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
			      // (Even though this is a DOM fork of the Scheduler, you could get here
			      // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
			      // https://github.com/facebook/react/issues/20756
			      //
			      // But also, it runs earlier which is the semantic we want.
			      // If other browsers ever implement it, it's better to use it.
			      // Although both of these would be inferior to native scheduling.
			      schedulePerformWorkUntilDeadline = function () {
			        localSetImmediate(performWorkUntilDeadline);
			      };
			    } else if (typeof MessageChannel !== 'undefined') {
			      // DOM and Worker environments.
			      // We prefer MessageChannel because of the 4ms setTimeout clamping.
			      var channel = new MessageChannel();
			      var port = channel.port2;
			      channel.port1.onmessage = performWorkUntilDeadline;
			      schedulePerformWorkUntilDeadline = function () {
			        port.postMessage(null);
			      };
			    } else {
			      // We should only fallback here in non-browser environments.
			      schedulePerformWorkUntilDeadline = function () {
			        localSetTimeout(performWorkUntilDeadline, 0);
			      };
			    }
			    function requestHostCallback(callback) {
			      scheduledHostCallback = callback;
			      if (!isMessageLoopRunning) {
			        isMessageLoopRunning = true;
			        schedulePerformWorkUntilDeadline();
			      }
			    }
			    function requestHostTimeout(callback, ms) {
			      taskTimeoutID = localSetTimeout(function () {
			        callback(exports.unstable_now());
			      }, ms);
			    }
			    function cancelHostTimeout() {
			      localClearTimeout(taskTimeoutID);
			      taskTimeoutID = -1;
			    }
			    var unstable_requestPaint = requestPaint;
			    var unstable_Profiling = null;
			    exports.unstable_IdlePriority = IdlePriority;
			    exports.unstable_ImmediatePriority = ImmediatePriority;
			    exports.unstable_LowPriority = LowPriority;
			    exports.unstable_NormalPriority = NormalPriority;
			    exports.unstable_Profiling = unstable_Profiling;
			    exports.unstable_UserBlockingPriority = UserBlockingPriority;
			    exports.unstable_cancelCallback = unstable_cancelCallback;
			    exports.unstable_continueExecution = unstable_continueExecution;
			    exports.unstable_forceFrameRate = forceFrameRate;
			    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
			    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
			    exports.unstable_next = unstable_next;
			    exports.unstable_pauseExecution = unstable_pauseExecution;
			    exports.unstable_requestPaint = unstable_requestPaint;
			    exports.unstable_runWithPriority = unstable_runWithPriority;
			    exports.unstable_scheduleCallback = unstable_scheduleCallback;
			    exports.unstable_shouldYield = shouldYieldToHost;
			    exports.unstable_wrapCallback = unstable_wrapCallback;
			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
			    }
			  })();
			} 
		} (scheduler_development));
		return scheduler_development;
	}

	var hasRequiredScheduler;

	function requireScheduler () {
		if (hasRequiredScheduler) return scheduler.exports;
		hasRequiredScheduler = 1;

		{
		  scheduler.exports = requireScheduler_development();
		}
		return scheduler.exports;
	}

	var reactDom_development = {};

	/**
	 * @license React
	 * react-dom.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactDom_development;

	function requireReactDom_development () {
		if (hasRequiredReactDom_development) return reactDom_development;
		hasRequiredReactDom_development = 1;
	{(function(){/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined'&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart==='function'){__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());}var React=reactExports;var Scheduler=requireScheduler();var ReactSharedInternals=React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;var suppressWarning=false;function setSuppressWarning(newSuppressWarning){{suppressWarning=newSuppressWarning;}}// In DEV, calls to console.warn and console.error get replaced
		// by calls to these methods by a Babel plugin.
		//
		// In PROD (or in packages without access to React internals),
		// they are left as they are instead.
		function warn(format){{if(!suppressWarning){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}printWarning('warn',format,args);}}}function error(format){{if(!suppressWarning){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}printWarning('error',format,args);}}}function printWarning(level,format,args){// When changing this logic, you might want to also
		// update consoleWithStackDev.www.js as well.
		{var ReactDebugCurrentFrame=ReactSharedInternals.ReactDebugCurrentFrame;var stack=ReactDebugCurrentFrame.getStackAddendum();if(stack!==''){format+='%s';args=args.concat([stack]);}// eslint-disable-next-line react-internal/safe-string-coercion
		var argsWithFormat=args.map(function(item){return String(item);});// Careful: RN currently depends on this prefix
		argsWithFormat.unshift('Warning: '+format);// We intentionally don't use spread (or .apply) directly because it
		// breaks IE9: https://github.com/facebook/react/issues/13610
		// eslint-disable-next-line react-internal/no-production-logging
		Function.prototype.apply.call(console[level],console,argsWithFormat);}}var FunctionComponent=0;var ClassComponent=1;var IndeterminateComponent=2;// Before we know whether it is function or class
		var HostRoot=3;// Root of a host tree. Could be nested inside another node.
		var HostPortal=4;// A subtree. Could be an entry point to a different renderer.
		var HostComponent=5;var HostText=6;var Fragment=7;var Mode=8;var ContextConsumer=9;var ContextProvider=10;var ForwardRef=11;var Profiler=12;var SuspenseComponent=13;var MemoComponent=14;var SimpleMemoComponent=15;var LazyComponent=16;var IncompleteClassComponent=17;var DehydratedFragment=18;var SuspenseListComponent=19;var ScopeComponent=21;var OffscreenComponent=22;var LegacyHiddenComponent=23;var CacheComponent=24;var TracingMarkerComponent=25;// -----------------------------------------------------------------------------
		var enableClientRenderFallbackOnTextMismatch=true;// TODO: Need to review this code one more time before landing
		// the react-reconciler package.
		var enableNewReconciler=false;// Support legacy Primer support on internal FB www
		var enableLazyContextPropagation=false;// FB-only usage. The new API has different semantics.
		var enableLegacyHidden=false;// Enables unstable_avoidThisFallback feature in Fiber
		var enableSuspenseAvoidThisFallback=false;// Enables unstable_avoidThisFallback feature in Fizz
		// React DOM Chopping Block
		//
		// Similar to main Chopping Block but only flags related to React DOM. These are
		// grouped because we will likely batch all of them into a single major release.
		// -----------------------------------------------------------------------------
		// Disable support for comment nodes as React DOM containers. Already disabled
		// in open source, but www codebase still relies on it. Need to remove.
		var disableCommentsAsDOMContainers=true;// Disable javascript: URL strings in href for XSS protection.
		// and client rendering, mostly to allow JSX attributes to apply to the custom
		// element's object properties instead of only HTML attributes.
		// https://github.com/facebook/react/issues/11347
		var enableCustomElementPropertySupport=false;// Disables children for <textarea> elements
		var warnAboutStringRefs=false;// -----------------------------------------------------------------------------
		// Debugging and DevTools
		// -----------------------------------------------------------------------------
		// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
		// for an experimental timeline tool.
		var enableSchedulingProfiler=true;// Helps identify side effects in render-phase lifecycle hooks and setState
		var enableProfilerTimer=true;// Record durations for commit and passive effects phases.
		var enableProfilerCommitHooks=true;// Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
		var allNativeEvents=new Set();/**
		 * Mapping from registration name to event name
		 */var registrationNameDependencies={};/**
		 * Mapping from lowercase registration names to the properly cased version,
		 * used to warn in the case of missing event handlers. Available
		 * only in true.
		 * @type {Object}
		 */var possibleRegistrationNames={};// Trust the developer to only use possibleRegistrationNames in true
		function registerTwoPhaseEvent(registrationName,dependencies){registerDirectEvent(registrationName,dependencies);registerDirectEvent(registrationName+'Capture',dependencies);}function registerDirectEvent(registrationName,dependencies){{if(registrationNameDependencies[registrationName]){error('EventRegistry: More than one plugin attempted to publish the same '+'registration name, `%s`.',registrationName);}}registrationNameDependencies[registrationName]=dependencies;{var lowerCasedName=registrationName.toLowerCase();possibleRegistrationNames[lowerCasedName]=registrationName;if(registrationName==='onDoubleClick'){possibleRegistrationNames.ondblclick=registrationName;}}for(var i=0;i<dependencies.length;i++){allNativeEvents.add(dependencies[i]);}}var canUseDOM=!!(typeof window!=='undefined'&&typeof window.document!=='undefined'&&typeof window.document.createElement!=='undefined');var hasOwnProperty=Object.prototype.hasOwnProperty;/*
		 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
		 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
		 *
		 * The functions in this module will throw an easier-to-understand,
		 * easier-to-debug exception with a clear errors message message explaining the
		 * problem. (Instead of a confusing exception thrown inside the implementation
		 * of the `value` object).
		 */ // $FlowFixMe only called in DEV, so void return is not possible.
		function typeName(value){{// toStringTag is needed for namespaced types like Temporal.Instant
		var hasToStringTag=typeof Symbol==='function'&&Symbol.toStringTag;var type=hasToStringTag&&value[Symbol.toStringTag]||value.constructor.name||'Object';return type;}}// $FlowFixMe only called in DEV, so void return is not possible.
		function willCoercionThrow(value){{try{testStringCoercion(value);return false;}catch(e){return true;}}}function testStringCoercion(value){// If you ended up here by following an exception call stack, here's what's
		// happened: you supplied an object or symbol value to React (as a prop, key,
		// DOM attribute, CSS property, string ref, etc.) and when React tried to
		// coerce it to a string using `'' + value`, an exception was thrown.
		//
		// The most common types that will cause this exception are `Symbol` instances
		// and Temporal objects like `Temporal.Instant`. But any object that has a
		// `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
		// exception. (Library authors do this to prevent users from using built-in
		// numeric operators like `+` or comparison operators like `>=` because custom
		// methods are needed to perform accurate arithmetic or comparison.)
		//
		// To fix the problem, coerce this object or symbol value to a string before
		// passing it to React. The most reliable way is usually `String(value)`.
		//
		// To find which value is throwing, check the browser or debugger console.
		// Before this exception was thrown, there should be `console.error` output
		// that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
		// problem and how that type was used: key, atrribute, input value prop, etc.
		// In most cases, this console output also shows the component and its
		// ancestor components where the exception happened.
		//
		// eslint-disable-next-line react-internal/safe-string-coercion
		return ''+value;}function checkAttributeStringCoercion(value,attributeName){{if(willCoercionThrow(value)){error('The provided `%s` attribute is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',attributeName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkKeyStringCoercion(value){{if(willCoercionThrow(value)){error('The provided key is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkPropStringCoercion(value,propName){{if(willCoercionThrow(value)){error('The provided `%s` prop is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',propName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkCSSPropertyStringCoercion(value,propName){{if(willCoercionThrow(value)){error('The provided `%s` CSS property is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',propName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkHtmlStringCoercion(value){{if(willCoercionThrow(value)){error('The provided HTML markup uses a value of unsupported type %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkFormFieldValueStringCoercion(value){{if(willCoercionThrow(value)){error('Form field values (value, checked, defaultValue, or defaultChecked props)'+' must be strings, not %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}// A reserved attribute.
		// It is handled by React separately and shouldn't be written to the DOM.
		var RESERVED=0;// A simple string attribute.
		// Attributes that aren't in the filter are presumed to have this type.
		var STRING=1;// A string attribute that accepts booleans in React. In HTML, these are called
		// "enumerated" attributes with "true" and "false" as possible values.
		// When true, it should be set to a "true" string.
		// When false, it should be set to a "false" string.
		var BOOLEANISH_STRING=2;// A real boolean attribute.
		// When true, it should be present (set either to an empty string or its name).
		// When false, it should be omitted.
		var BOOLEAN=3;// An attribute that can be used as a flag as well as with a value.
		// When true, it should be present (set either to an empty string or its name).
		// When false, it should be omitted.
		// For any other value, should be present with that value.
		var OVERLOADED_BOOLEAN=4;// An attribute that must be numeric or parse as a numeric.
		// When falsy, it should be removed.
		var NUMERIC=5;// An attribute that must be positive numeric or parse as a positive numeric.
		// When falsy, it should be removed.
		var POSITIVE_NUMERIC=6;/* eslint-disable max-len */var ATTRIBUTE_NAME_START_CHAR=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";/* eslint-enable max-len */var ATTRIBUTE_NAME_CHAR=ATTRIBUTE_NAME_START_CHAR+"\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";var VALID_ATTRIBUTE_NAME_REGEX=new RegExp('^['+ATTRIBUTE_NAME_START_CHAR+']['+ATTRIBUTE_NAME_CHAR+']*$');var illegalAttributeNameCache={};var validatedAttributeNameCache={};function isAttributeNameSafe(attributeName){if(hasOwnProperty.call(validatedAttributeNameCache,attributeName)){return true;}if(hasOwnProperty.call(illegalAttributeNameCache,attributeName)){return false;}if(VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)){validatedAttributeNameCache[attributeName]=true;return true;}illegalAttributeNameCache[attributeName]=true;{error('Invalid attribute name: `%s`',attributeName);}return false;}function shouldIgnoreAttribute(name,propertyInfo,isCustomComponentTag){if(propertyInfo!==null){return propertyInfo.type===RESERVED;}if(isCustomComponentTag){return false;}if(name.length>2&&(name[0]==='o'||name[0]==='O')&&(name[1]==='n'||name[1]==='N')){return true;}return false;}function shouldRemoveAttributeWithWarning(name,value,propertyInfo,isCustomComponentTag){if(propertyInfo!==null&&propertyInfo.type===RESERVED){return false;}switch(typeof value){case'function':// $FlowIssue symbol is perfectly valid here
		case'symbol':// eslint-disable-line
		return true;case'boolean':{if(isCustomComponentTag){return false;}if(propertyInfo!==null){return !propertyInfo.acceptsBooleans;}else {var prefix=name.toLowerCase().slice(0,5);return prefix!=='data-'&&prefix!=='aria-';}}default:return false;}}function shouldRemoveAttribute(name,value,propertyInfo,isCustomComponentTag){if(value===null||typeof value==='undefined'){return true;}if(shouldRemoveAttributeWithWarning(name,value,propertyInfo,isCustomComponentTag)){return true;}if(isCustomComponentTag){return false;}if(propertyInfo!==null){switch(propertyInfo.type){case BOOLEAN:return !value;case OVERLOADED_BOOLEAN:return value===false;case NUMERIC:return isNaN(value);case POSITIVE_NUMERIC:return isNaN(value)||value<1;}}return false;}function getPropertyInfo(name){return properties.hasOwnProperty(name)?properties[name]:null;}function PropertyInfoRecord(name,type,mustUseProperty,attributeName,attributeNamespace,sanitizeURL,removeEmptyString){this.acceptsBooleans=type===BOOLEANISH_STRING||type===BOOLEAN||type===OVERLOADED_BOOLEAN;this.attributeName=attributeName;this.attributeNamespace=attributeNamespace;this.mustUseProperty=mustUseProperty;this.propertyName=name;this.type=type;this.sanitizeURL=sanitizeURL;this.removeEmptyString=removeEmptyString;}// When adding attributes to this list, be sure to also add them to
		// the `possibleStandardNames` module to ensure casing and incorrect
		// name warnings.
		var properties={};// These props are reserved by React. They shouldn't be written to the DOM.
		var reservedProps=['children','dangerouslySetInnerHTML',// TODO: This prevents the assignment of defaultValue to regular
		// elements (not just inputs). Now that ReactDOMInput assigns to the
		// defaultValue property -- do we need this?
		'defaultValue','defaultChecked','innerHTML','suppressContentEditableWarning','suppressHydrationWarning','style'];reservedProps.forEach(function(name){properties[name]=new PropertyInfoRecord(name,RESERVED,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// A few React string attributes have a different name.
		// This is a mapping from React prop names to the attribute names.
		[['acceptCharset','accept-charset'],['className','class'],['htmlFor','for'],['httpEquiv','http-equiv']].forEach(function(_ref){var name=_ref[0],attributeName=_ref[1];properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are "enumerated" HTML attributes that accept "true" and "false".
		// In React, we let users pass `true` and `false` even though technically
		// these aren't boolean attributes (they are coerced to strings).
		['contentEditable','draggable','spellCheck','value'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEANISH_STRING,false,// mustUseProperty
		name.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are "enumerated" SVG attributes that accept "true" and "false".
		// In React, we let users pass `true` and `false` even though technically
		// these aren't boolean attributes (they are coerced to strings).
		// Since these are SVG attributes, their attribute names are case-sensitive.
		['autoReverse','externalResourcesRequired','focusable','preserveAlpha'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEANISH_STRING,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML boolean attributes.
		['allowFullScreen','async',// Note: there is a special case that prevents it from being written to the DOM
		// on the client side because the browsers are inconsistent. Instead we call focus().
		'autoFocus','autoPlay','controls','default','defer','disabled','disablePictureInPicture','disableRemotePlayback','formNoValidate','hidden','loop','noModule','noValidate','open','playsInline','readOnly','required','reversed','scoped','seamless',// Microdata
		'itemScope'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEAN,false,// mustUseProperty
		name.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are the few React props that we set as DOM properties
		// rather than attributes. These are all booleans.
		['checked',// Note: `option.selected` is not updated if `select.multiple` is
		// disabled with `removeAttribute`. We have special logic for handling this.
		'multiple','muted','selected'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEAN,true,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML attributes that are "overloaded booleans": they behave like
		// booleans, but can also accept a string value.
		['capture','download'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(name){properties[name]=new PropertyInfoRecord(name,OVERLOADED_BOOLEAN,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML attributes that must be positive numbers.
		['cols','rows','size','span'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(name){properties[name]=new PropertyInfoRecord(name,POSITIVE_NUMERIC,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML attributes that must be numbers.
		['rowSpan','start'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,NUMERIC,false,// mustUseProperty
		name.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});var CAMELIZE=/[\-\:]([a-z])/g;var capitalize=function(token){return token[1].toUpperCase();};// This is a list of all SVG attributes that need special casing, namespacing,
		// or boolean value assignment. Regular attributes that just accept strings
		// and have the same names are omitted, just like in the HTML attribute filter.
		// Some of these attributes can be hard to find. This list was created by
		// scraping the MDN documentation.
		['accent-height','alignment-baseline','arabic-form','baseline-shift','cap-height','clip-path','clip-rule','color-interpolation','color-interpolation-filters','color-profile','color-rendering','dominant-baseline','enable-background','fill-opacity','fill-rule','flood-color','flood-opacity','font-family','font-size','font-size-adjust','font-stretch','font-style','font-variant','font-weight','glyph-name','glyph-orientation-horizontal','glyph-orientation-vertical','horiz-adv-x','horiz-origin-x','image-rendering','letter-spacing','lighting-color','marker-end','marker-mid','marker-start','overline-position','overline-thickness','paint-order','panose-1','pointer-events','rendering-intent','shape-rendering','stop-color','stop-opacity','strikethrough-position','strikethrough-thickness','stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke-width','text-anchor','text-decoration','text-rendering','underline-position','underline-thickness','unicode-bidi','unicode-range','units-per-em','v-alphabetic','v-hanging','v-ideographic','v-mathematical','vector-effect','vert-adv-y','vert-origin-x','vert-origin-y','word-spacing','writing-mode','xmlns:xlink','x-height'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(attributeName){var name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,null,// attributeNamespace
		false,// sanitizeURL
		false);});// String SVG attributes with the xlink namespace.
		['xlink:actuate','xlink:arcrole','xlink:role','xlink:show','xlink:title','xlink:type'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(attributeName){var name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,'http://www.w3.org/1999/xlink',false,// sanitizeURL
		false);});// String SVG attributes with the xml namespace.
		['xml:base','xml:lang','xml:space'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(attributeName){var name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,'http://www.w3.org/XML/1998/namespace',false,// sanitizeURL
		false);});// These attribute exists both in HTML and SVG.
		// The attribute name is case-sensitive in SVG so we can't just use
		// the React name like we do for attributes that exist only in HTML.
		['tabIndex','crossOrigin'].forEach(function(attributeName){properties[attributeName]=new PropertyInfoRecord(attributeName,STRING,false,// mustUseProperty
		attributeName.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These attributes accept URLs. These must not allow javascript: URLS.
		// These will also need to accept Trusted Types object in the future.
		var xlinkHref='xlinkHref';properties[xlinkHref]=new PropertyInfoRecord('xlinkHref',STRING,false,// mustUseProperty
		'xlink:href','http://www.w3.org/1999/xlink',true,// sanitizeURL
		false);['src','href','action','formAction'].forEach(function(attributeName){properties[attributeName]=new PropertyInfoRecord(attributeName,STRING,false,// mustUseProperty
		attributeName.toLowerCase(),// attributeName
		null,// attributeNamespace
		true,// sanitizeURL
		true);});// and any newline or tab are filtered out as if they're not part of the URL.
		// https://url.spec.whatwg.org/#url-parsing
		// Tab or newline are defined as \r\n\t:
		// https://infra.spec.whatwg.org/#ascii-tab-or-newline
		// A C0 control is a code point in the range \u0000 NULL to \u001F
		// INFORMATION SEPARATOR ONE, inclusive:
		// https://infra.spec.whatwg.org/#c0-control-or-space
		/* eslint-disable max-len */var isJavaScriptProtocol=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;var didWarn=false;function sanitizeURL(url){{if(!didWarn&&isJavaScriptProtocol.test(url)){didWarn=true;error('A future version of React will block javascript: URLs as a security precaution. '+'Use event handlers instead if you can. If you need to generate unsafe HTML try '+'using dangerouslySetInnerHTML instead. React was passed %s.',JSON.stringify(url));}}}/**
		 * Get the value for a property on a node. Only used in DEV for SSR validation.
		 * The "expected" argument is used as a hint of what the expected value is.
		 * Some properties have multiple equivalent values.
		 */function getValueForProperty(node,name,expected,propertyInfo){{if(propertyInfo.mustUseProperty){var propertyName=propertyInfo.propertyName;return node[propertyName];}else {// This check protects multiple uses of `expected`, which is why the
		// react-internal/safe-string-coercion rule is disabled in several spots
		// below.
		{checkAttributeStringCoercion(expected,name);}if(propertyInfo.sanitizeURL){// If we haven't fully disabled javascript: URLs, and if
		// the hydration is successful of a javascript: URL, we
		// still want to warn on the client.
		// eslint-disable-next-line react-internal/safe-string-coercion
		sanitizeURL(''+expected);}var attributeName=propertyInfo.attributeName;var stringValue=null;if(propertyInfo.type===OVERLOADED_BOOLEAN){if(node.hasAttribute(attributeName)){var value=node.getAttribute(attributeName);if(value===''){return true;}if(shouldRemoveAttribute(name,expected,propertyInfo,false)){return value;}// eslint-disable-next-line react-internal/safe-string-coercion
		if(value===''+expected){return expected;}return value;}}else if(node.hasAttribute(attributeName)){if(shouldRemoveAttribute(name,expected,propertyInfo,false)){// We had an attribute but shouldn't have had one, so read it
		// for the error message.
		return node.getAttribute(attributeName);}if(propertyInfo.type===BOOLEAN){// If this was a boolean, it doesn't matter what the value is
		// the fact that we have it is the same as the expected.
		return expected;}// Even if this property uses a namespace we use getAttribute
		// because we assume its namespaced name is the same as our config.
		// To use getAttributeNS we need the local name which we don't have
		// in our config atm.
		stringValue=node.getAttribute(attributeName);}if(shouldRemoveAttribute(name,expected,propertyInfo,false)){return stringValue===null?expected:stringValue;// eslint-disable-next-line react-internal/safe-string-coercion
		}else if(stringValue===''+expected){return expected;}else {return stringValue;}}}}/**
		 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
		 * The third argument is used as a hint of what the expected value is. Some
		 * attributes have multiple equivalent values.
		 */function getValueForAttribute(node,name,expected,isCustomComponentTag){{if(!isAttributeNameSafe(name)){return;}if(!node.hasAttribute(name)){return expected===undefined?undefined:null;}var value=node.getAttribute(name);{checkAttributeStringCoercion(expected,name);}if(value===''+expected){return expected;}return value;}}/**
		 * Sets the value for a property on a node.
		 *
		 * @param {DOMElement} node
		 * @param {string} name
		 * @param {*} value
		 */function setValueForProperty(node,name,value,isCustomComponentTag){var propertyInfo=getPropertyInfo(name);if(shouldIgnoreAttribute(name,propertyInfo,isCustomComponentTag)){return;}if(shouldRemoveAttribute(name,value,propertyInfo,isCustomComponentTag)){value=null;}if(isCustomComponentTag||propertyInfo===null){if(isAttributeNameSafe(name)){var _attributeName=name;if(value===null){node.removeAttribute(_attributeName);}else {{checkAttributeStringCoercion(value,name);}node.setAttribute(_attributeName,''+value);}}return;}var mustUseProperty=propertyInfo.mustUseProperty;if(mustUseProperty){var propertyName=propertyInfo.propertyName;if(value===null){var type=propertyInfo.type;node[propertyName]=type===BOOLEAN?false:'';}else {// Contrary to `setAttribute`, object properties are properly
		// `toString`ed by IE8/9.
		node[propertyName]=value;}return;}// The rest are treated as attributes with special cases.
		var attributeName=propertyInfo.attributeName,attributeNamespace=propertyInfo.attributeNamespace;if(value===null){node.removeAttribute(attributeName);}else {var _type=propertyInfo.type;var attributeValue;if(_type===BOOLEAN||_type===OVERLOADED_BOOLEAN&&value===true){// If attribute type is boolean, we know for sure it won't be an execution sink
		// and we won't require Trusted Type here.
		attributeValue='';}else {// `setAttribute` with objects becomes only `[object]` in IE8/9,
		// ('' + value) makes it output the correct toString()-value.
		{{checkAttributeStringCoercion(value,attributeName);}attributeValue=''+value;}if(propertyInfo.sanitizeURL){sanitizeURL(attributeValue.toString());}}if(attributeNamespace){node.setAttributeNS(attributeNamespace,attributeName,attributeValue);}else {node.setAttribute(attributeName,attributeValue);}}}// ATTENTION
		// When adding new symbols to this file,
		// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
		// The Symbol used to tag the ReactElement-like types.
		var REACT_ELEMENT_TYPE=Symbol.for('react.element');var REACT_PORTAL_TYPE=Symbol.for('react.portal');var REACT_FRAGMENT_TYPE=Symbol.for('react.fragment');var REACT_STRICT_MODE_TYPE=Symbol.for('react.strict_mode');var REACT_PROFILER_TYPE=Symbol.for('react.profiler');var REACT_PROVIDER_TYPE=Symbol.for('react.provider');var REACT_CONTEXT_TYPE=Symbol.for('react.context');var REACT_FORWARD_REF_TYPE=Symbol.for('react.forward_ref');var REACT_SUSPENSE_TYPE=Symbol.for('react.suspense');var REACT_SUSPENSE_LIST_TYPE=Symbol.for('react.suspense_list');var REACT_MEMO_TYPE=Symbol.for('react.memo');var REACT_LAZY_TYPE=Symbol.for('react.lazy');var REACT_SCOPE_TYPE=Symbol.for('react.scope');var REACT_DEBUG_TRACING_MODE_TYPE=Symbol.for('react.debug_trace_mode');var REACT_OFFSCREEN_TYPE=Symbol.for('react.offscreen');var REACT_LEGACY_HIDDEN_TYPE=Symbol.for('react.legacy_hidden');var REACT_CACHE_TYPE=Symbol.for('react.cache');var REACT_TRACING_MARKER_TYPE=Symbol.for('react.tracing_marker');var MAYBE_ITERATOR_SYMBOL=Symbol.iterator;var FAUX_ITERATOR_SYMBOL='@@iterator';function getIteratorFn(maybeIterable){if(maybeIterable===null||typeof maybeIterable!=='object'){return null;}var maybeIterator=MAYBE_ITERATOR_SYMBOL&&maybeIterable[MAYBE_ITERATOR_SYMBOL]||maybeIterable[FAUX_ITERATOR_SYMBOL];if(typeof maybeIterator==='function'){return maybeIterator;}return null;}var assign=Object.assign;// Helpers to patch console.logs to avoid logging during side-effect free
		// replaying on render function. This currently only patches the object
		// lazily which won't cover if the log function was extracted eagerly.
		// We could also eagerly patch the method.
		var disabledDepth=0;var prevLog;var prevInfo;var prevWarn;var prevError;var prevGroup;var prevGroupCollapsed;var prevGroupEnd;function disabledLog(){}disabledLog.__reactDisabledLog=true;function disableLogs(){{if(disabledDepth===0){/* eslint-disable react-internal/no-production-logging */prevLog=console.log;prevInfo=console.info;prevWarn=console.warn;prevError=console.error;prevGroup=console.group;prevGroupCollapsed=console.groupCollapsed;prevGroupEnd=console.groupEnd;// https://github.com/facebook/react/issues/19099
		var props={configurable:true,enumerable:true,value:disabledLog,writable:true};// $FlowFixMe Flow thinks console is immutable.
		Object.defineProperties(console,{info:props,log:props,warn:props,error:props,group:props,groupCollapsed:props,groupEnd:props});/* eslint-enable react-internal/no-production-logging */}disabledDepth++;}}function reenableLogs(){{disabledDepth--;if(disabledDepth===0){/* eslint-disable react-internal/no-production-logging */var props={configurable:true,enumerable:true,writable:true};// $FlowFixMe Flow thinks console is immutable.
		Object.defineProperties(console,{log:assign({},props,{value:prevLog}),info:assign({},props,{value:prevInfo}),warn:assign({},props,{value:prevWarn}),error:assign({},props,{value:prevError}),group:assign({},props,{value:prevGroup}),groupCollapsed:assign({},props,{value:prevGroupCollapsed}),groupEnd:assign({},props,{value:prevGroupEnd})});/* eslint-enable react-internal/no-production-logging */}if(disabledDepth<0){error('disabledDepth fell below zero. '+'This is a bug in React. Please file an issue.');}}}var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;var prefix;function describeBuiltInComponentFrame(name,source,ownerFn){{if(prefix===undefined){// Extract the VM specific prefix used by each line.
		try{throw Error();}catch(x){var match=x.stack.trim().match(/\n( *(at )?)/);prefix=match&&match[1]||'';}}// We use the prefix to ensure our stacks line up with native stack frames.
		return '\n'+prefix+name;}}var reentry=false;var componentFrameCache;{var PossiblyWeakMap=typeof WeakMap==='function'?WeakMap:Map;componentFrameCache=new PossiblyWeakMap();}function describeNativeComponentFrame(fn,construct){// If something asked for a stack inside a fake render, it should get ignored.
		if(!fn||reentry){return '';}{var frame=componentFrameCache.get(fn);if(frame!==undefined){return frame;}}var control;reentry=true;var previousPrepareStackTrace=Error.prepareStackTrace;// $FlowFixMe It does accept undefined.
		Error.prepareStackTrace=undefined;var previousDispatcher;{previousDispatcher=ReactCurrentDispatcher.current;// Set the dispatcher in DEV because this might be call in the render function
		// for warnings.
		ReactCurrentDispatcher.current=null;disableLogs();}try{// This should throw.
		if(construct){// Something should be setting the props in the constructor.
		var Fake=function(){throw Error();};// $FlowFixMe
		Object.defineProperty(Fake.prototype,'props',{set:function(){// We use a throwing setter instead of frozen or non-writable props
		// because that won't throw in a non-strict mode function.
		throw Error();}});if(typeof Reflect==='object'&&Reflect.construct){// We construct a different control for this case to include any extra
		// frames added by the construct call.
		try{Reflect.construct(Fake,[]);}catch(x){control=x;}Reflect.construct(fn,[],Fake);}else {try{Fake.call();}catch(x){control=x;}fn.call(Fake.prototype);}}else {try{throw Error();}catch(x){control=x;}fn();}}catch(sample){// This is inlined manually because closure doesn't do it for us.
		if(sample&&control&&typeof sample.stack==='string'){// This extracts the first frame from the sample that isn't also in the control.
		// Skipping one frame that we assume is the frame that calls the two.
		var sampleLines=sample.stack.split('\n');var controlLines=control.stack.split('\n');var s=sampleLines.length-1;var c=controlLines.length-1;while(s>=1&&c>=0&&sampleLines[s]!==controlLines[c]){// We expect at least one stack frame to be shared.
		// Typically this will be the root most one. However, stack frames may be
		// cut off due to maximum stack limits. In this case, one maybe cut off
		// earlier than the other. We assume that the sample is longer or the same
		// and there for cut off earlier. So we should find the root most frame in
		// the sample somewhere in the control.
		c--;}for(;s>=1&&c>=0;s--,c--){// Next we find the first one that isn't the same which should be the
		// frame that called our sample function and the control.
		if(sampleLines[s]!==controlLines[c]){// In V8, the first line is describing the message but other VMs don't.
		// If we're about to return the first line, and the control is also on the same
		// line, that's a pretty good indicator that our sample threw at same line as
		// the control. I.e. before we entered the sample frame. So we ignore this result.
		// This can happen if you passed a class to function component, or non-function.
		if(s!==1||c!==1){do{s--;c--;// We may still have similar intermediate frames from the construct call.
		// The next one that isn't the same should be our match though.
		if(c<0||sampleLines[s]!==controlLines[c]){// V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
		var _frame='\n'+sampleLines[s].replace(' at new ',' at ');// If our component frame is labeled "<anonymous>"
		// but we have a user-provided "displayName"
		// splice it in to make the stack more readable.
		if(fn.displayName&&_frame.includes('<anonymous>')){_frame=_frame.replace('<anonymous>',fn.displayName);}{if(typeof fn==='function'){componentFrameCache.set(fn,_frame);}}// Return the line we found.
		return _frame;}}while(s>=1&&c>=0);}break;}}}}finally{reentry=false;{ReactCurrentDispatcher.current=previousDispatcher;reenableLogs();}Error.prepareStackTrace=previousPrepareStackTrace;}// Fallback to just using the name if we couldn't make it throw.
		var name=fn?fn.displayName||fn.name:'';var syntheticFrame=name?describeBuiltInComponentFrame(name):'';{if(typeof fn==='function'){componentFrameCache.set(fn,syntheticFrame);}}return syntheticFrame;}function describeClassComponentFrame(ctor,source,ownerFn){{return describeNativeComponentFrame(ctor,true);}}function describeFunctionComponentFrame(fn,source,ownerFn){{return describeNativeComponentFrame(fn,false);}}function shouldConstruct(Component){var prototype=Component.prototype;return !!(prototype&&prototype.isReactComponent);}function describeUnknownElementTypeFrameInDEV(type,source,ownerFn){if(type==null){return '';}if(typeof type==='function'){{return describeNativeComponentFrame(type,shouldConstruct(type));}}if(typeof type==='string'){return describeBuiltInComponentFrame(type);}switch(type){case REACT_SUSPENSE_TYPE:return describeBuiltInComponentFrame('Suspense');case REACT_SUSPENSE_LIST_TYPE:return describeBuiltInComponentFrame('SuspenseList');}if(typeof type==='object'){switch(type.$$typeof){case REACT_FORWARD_REF_TYPE:return describeFunctionComponentFrame(type.render);case REACT_MEMO_TYPE:// Memo may contain any component type so we recursively resolve it.
		return describeUnknownElementTypeFrameInDEV(type.type,source,ownerFn);case REACT_LAZY_TYPE:{var lazyComponent=type;var payload=lazyComponent._payload;var init=lazyComponent._init;try{// Lazy may contain any component type so we recursively resolve it.
		return describeUnknownElementTypeFrameInDEV(init(payload),source,ownerFn);}catch(x){}}}}return '';}function describeFiber(fiber){fiber._debugOwner?fiber._debugOwner.type:null;fiber._debugSource;switch(fiber.tag){case HostComponent:return describeBuiltInComponentFrame(fiber.type);case LazyComponent:return describeBuiltInComponentFrame('Lazy');case SuspenseComponent:return describeBuiltInComponentFrame('Suspense');case SuspenseListComponent:return describeBuiltInComponentFrame('SuspenseList');case FunctionComponent:case IndeterminateComponent:case SimpleMemoComponent:return describeFunctionComponentFrame(fiber.type);case ForwardRef:return describeFunctionComponentFrame(fiber.type.render);case ClassComponent:return describeClassComponentFrame(fiber.type);default:return '';}}function getStackByFiberInDevAndProd(workInProgress){try{var info='';var node=workInProgress;do{info+=describeFiber(node);node=node.return;}while(node);return info;}catch(x){return '\nError generating stack: '+x.message+'\n'+x.stack;}}function getWrappedName(outerType,innerType,wrapperName){var displayName=outerType.displayName;if(displayName){return displayName;}var functionName=innerType.displayName||innerType.name||'';return functionName!==''?wrapperName+"("+functionName+")":wrapperName;}// Keep in sync with react-reconciler/getComponentNameFromFiber
		function getContextName(type){return type.displayName||'Context';}// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
		function getComponentNameFromType(type){if(type==null){// Host root, text node or just invalid type.
		return null;}{if(typeof type.tag==='number'){error('Received an unexpected object in getComponentNameFromType(). '+'This is likely a bug in React. Please file an issue.');}}if(typeof type==='function'){return type.displayName||type.name||null;}if(typeof type==='string'){return type;}switch(type){case REACT_FRAGMENT_TYPE:return 'Fragment';case REACT_PORTAL_TYPE:return 'Portal';case REACT_PROFILER_TYPE:return 'Profiler';case REACT_STRICT_MODE_TYPE:return 'StrictMode';case REACT_SUSPENSE_TYPE:return 'Suspense';case REACT_SUSPENSE_LIST_TYPE:return 'SuspenseList';}if(typeof type==='object'){switch(type.$$typeof){case REACT_CONTEXT_TYPE:var context=type;return getContextName(context)+'.Consumer';case REACT_PROVIDER_TYPE:var provider=type;return getContextName(provider._context)+'.Provider';case REACT_FORWARD_REF_TYPE:return getWrappedName(type,type.render,'ForwardRef');case REACT_MEMO_TYPE:var outerName=type.displayName||null;if(outerName!==null){return outerName;}return getComponentNameFromType(type.type)||'Memo';case REACT_LAZY_TYPE:{var lazyComponent=type;var payload=lazyComponent._payload;var init=lazyComponent._init;try{return getComponentNameFromType(init(payload));}catch(x){return null;}}// eslint-disable-next-line no-fallthrough
		}}return null;}function getWrappedName$1(outerType,innerType,wrapperName){var functionName=innerType.displayName||innerType.name||'';return outerType.displayName||(functionName!==''?wrapperName+"("+functionName+")":wrapperName);}// Keep in sync with shared/getComponentNameFromType
		function getContextName$1(type){return type.displayName||'Context';}function getComponentNameFromFiber(fiber){var tag=fiber.tag,type=fiber.type;switch(tag){case CacheComponent:return 'Cache';case ContextConsumer:var context=type;return getContextName$1(context)+'.Consumer';case ContextProvider:var provider=type;return getContextName$1(provider._context)+'.Provider';case DehydratedFragment:return 'DehydratedFragment';case ForwardRef:return getWrappedName$1(type,type.render,'ForwardRef');case Fragment:return 'Fragment';case HostComponent:// Host component type is the display name (e.g. "div", "View")
		return type;case HostPortal:return 'Portal';case HostRoot:return 'Root';case HostText:return 'Text';case LazyComponent:// Name comes from the type in this case; we don't have a tag.
		return getComponentNameFromType(type);case Mode:if(type===REACT_STRICT_MODE_TYPE){// Don't be less specific than shared/getComponentNameFromType
		return 'StrictMode';}return 'Mode';case OffscreenComponent:return 'Offscreen';case Profiler:return 'Profiler';case ScopeComponent:return 'Scope';case SuspenseComponent:return 'Suspense';case SuspenseListComponent:return 'SuspenseList';case TracingMarkerComponent:return 'TracingMarker';// The display name for this tags come from the user-provided type:
		case ClassComponent:case FunctionComponent:case IncompleteClassComponent:case IndeterminateComponent:case MemoComponent:case SimpleMemoComponent:if(typeof type==='function'){return type.displayName||type.name||null;}if(typeof type==='string'){return type;}break;}return null;}var ReactDebugCurrentFrame=ReactSharedInternals.ReactDebugCurrentFrame;var current=null;var isRendering=false;function getCurrentFiberOwnerNameInDevOrNull(){{if(current===null){return null;}var owner=current._debugOwner;if(owner!==null&&typeof owner!=='undefined'){return getComponentNameFromFiber(owner);}}return null;}function getCurrentFiberStackInDev(){{if(current===null){return '';}// Safe because if current fiber exists, we are reconciling,
		// and it is guaranteed to be the work-in-progress version.
		return getStackByFiberInDevAndProd(current);}}function resetCurrentFiber(){{ReactDebugCurrentFrame.getCurrentStack=null;current=null;isRendering=false;}}function setCurrentFiber(fiber){{ReactDebugCurrentFrame.getCurrentStack=fiber===null?null:getCurrentFiberStackInDev;current=fiber;isRendering=false;}}function getCurrentFiber(){{return current;}}function setIsRendering(rendering){{isRendering=rendering;}}// Flow does not allow string concatenation of most non-string types. To work
		// around this limitation, we use an opaque type that can only be obtained by
		// passing the value through getToStringValue first.
		function toString(value){// The coercion safety check is performed in getToStringValue().
		// eslint-disable-next-line react-internal/safe-string-coercion
		return ''+value;}function getToStringValue(value){switch(typeof value){case'boolean':case'number':case'string':case'undefined':return value;case'object':{checkFormFieldValueStringCoercion(value);}return value;default:// function, symbol are assigned as empty strings
		return '';}}var hasReadOnlyValue={button:true,checkbox:true,image:true,hidden:true,radio:true,reset:true,submit:true};function checkControlledValueProps(tagName,props){{if(!(hasReadOnlyValue[props.type]||props.onChange||props.onInput||props.readOnly||props.disabled||props.value==null)){error('You provided a `value` prop to a form field without an '+'`onChange` handler. This will render a read-only field. If '+'the field should be mutable use `defaultValue`. Otherwise, '+'set either `onChange` or `readOnly`.');}if(!(props.onChange||props.readOnly||props.disabled||props.checked==null)){error('You provided a `checked` prop to a form field without an '+'`onChange` handler. This will render a read-only field. If '+'the field should be mutable use `defaultChecked`. Otherwise, '+'set either `onChange` or `readOnly`.');}}}function isCheckable(elem){var type=elem.type;var nodeName=elem.nodeName;return nodeName&&nodeName.toLowerCase()==='input'&&(type==='checkbox'||type==='radio');}function getTracker(node){return node._valueTracker;}function detachTracker(node){node._valueTracker=null;}function getValueFromNode(node){var value='';if(!node){return value;}if(isCheckable(node)){value=node.checked?'true':'false';}else {value=node.value;}return value;}function trackValueOnNode(node){var valueField=isCheckable(node)?'checked':'value';var descriptor=Object.getOwnPropertyDescriptor(node.constructor.prototype,valueField);{checkFormFieldValueStringCoercion(node[valueField]);}var currentValue=''+node[valueField];// if someone has already defined a value or Safari, then bail
		// and don't track value will cause over reporting of changes,
		// but it's better then a hard failure
		// (needed for certain tests that spyOn input values and Safari)
		if(node.hasOwnProperty(valueField)||typeof descriptor==='undefined'||typeof descriptor.get!=='function'||typeof descriptor.set!=='function'){return;}var get=descriptor.get,set=descriptor.set;Object.defineProperty(node,valueField,{configurable:true,get:function(){return get.call(this);},set:function(value){{checkFormFieldValueStringCoercion(value);}currentValue=''+value;set.call(this,value);}});// We could've passed this the first time
		// but it triggers a bug in IE11 and Edge 14/15.
		// Calling defineProperty() again should be equivalent.
		// https://github.com/facebook/react/issues/11768
		Object.defineProperty(node,valueField,{enumerable:descriptor.enumerable});var tracker={getValue:function(){return currentValue;},setValue:function(value){{checkFormFieldValueStringCoercion(value);}currentValue=''+value;},stopTracking:function(){detachTracker(node);delete node[valueField];}};return tracker;}function track(node){if(getTracker(node)){return;}// TODO: Once it's just Fiber we can move this to node._wrapperState
		node._valueTracker=trackValueOnNode(node);}function updateValueIfChanged(node){if(!node){return false;}var tracker=getTracker(node);// if there is no tracker at this point it's unlikely
		// that trying again will succeed
		if(!tracker){return true;}var lastValue=tracker.getValue();var nextValue=getValueFromNode(node);if(nextValue!==lastValue){tracker.setValue(nextValue);return true;}return false;}function getActiveElement(doc){doc=doc||(typeof document!=='undefined'?document:undefined);if(typeof doc==='undefined'){return null;}try{return doc.activeElement||doc.body;}catch(e){return doc.body;}}var didWarnValueDefaultValue=false;var didWarnCheckedDefaultChecked=false;var didWarnControlledToUncontrolled=false;var didWarnUncontrolledToControlled=false;function isControlled(props){var usesChecked=props.type==='checkbox'||props.type==='radio';return usesChecked?props.checked!=null:props.value!=null;}/**
		 * Implements an <input> host component that allows setting these optional
		 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
		 *
		 * If `checked` or `value` are not supplied (or null/undefined), user actions
		 * that affect the checked state or value will trigger updates to the element.
		 *
		 * If they are supplied (and not null/undefined), the rendered element will not
		 * trigger updates to the element. Instead, the props must change in order for
		 * the rendered element to be updated.
		 *
		 * The rendered element will be initialized as unchecked (or `defaultChecked`)
		 * with an empty value (or `defaultValue`).
		 *
		 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
		 */function getHostProps(element,props){var node=element;var checked=props.checked;var hostProps=assign({},props,{defaultChecked:undefined,defaultValue:undefined,value:undefined,checked:checked!=null?checked:node._wrapperState.initialChecked});return hostProps;}function initWrapperState(element,props){{checkControlledValueProps('input',props);if(props.checked!==undefined&&props.defaultChecked!==undefined&&!didWarnCheckedDefaultChecked){error('%s contains an input of type %s with both checked and defaultChecked props. '+'Input elements must be either controlled or uncontrolled '+'(specify either the checked prop, or the defaultChecked prop, but not '+'both). Decide between using a controlled or uncontrolled input '+'element and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components',getCurrentFiberOwnerNameInDevOrNull()||'A component',props.type);didWarnCheckedDefaultChecked=true;}if(props.value!==undefined&&props.defaultValue!==undefined&&!didWarnValueDefaultValue){error('%s contains an input of type %s with both value and defaultValue props. '+'Input elements must be either controlled or uncontrolled '+'(specify either the value prop, or the defaultValue prop, but not '+'both). Decide between using a controlled or uncontrolled input '+'element and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components',getCurrentFiberOwnerNameInDevOrNull()||'A component',props.type);didWarnValueDefaultValue=true;}}var node=element;var defaultValue=props.defaultValue==null?'':props.defaultValue;node._wrapperState={initialChecked:props.checked!=null?props.checked:props.defaultChecked,initialValue:getToStringValue(props.value!=null?props.value:defaultValue),controlled:isControlled(props)};}function updateChecked(element,props){var node=element;var checked=props.checked;if(checked!=null){setValueForProperty(node,'checked',checked,false);}}function updateWrapper(element,props){var node=element;{var controlled=isControlled(props);if(!node._wrapperState.controlled&&controlled&&!didWarnUncontrolledToControlled){error('A component is changing an uncontrolled input to be controlled. '+'This is likely caused by the value changing from undefined to '+'a defined value, which should not happen. '+'Decide between using a controlled or uncontrolled input '+'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');didWarnUncontrolledToControlled=true;}if(node._wrapperState.controlled&&!controlled&&!didWarnControlledToUncontrolled){error('A component is changing a controlled input to be uncontrolled. '+'This is likely caused by the value changing from a defined to '+'undefined, which should not happen. '+'Decide between using a controlled or uncontrolled input '+'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');didWarnControlledToUncontrolled=true;}}updateChecked(element,props);var value=getToStringValue(props.value);var type=props.type;if(value!=null){if(type==='number'){if(value===0&&node.value===''||// We explicitly want to coerce to number here if possible.
		// eslint-disable-next-line
		node.value!=value){node.value=toString(value);}}else if(node.value!==toString(value)){node.value=toString(value);}}else if(type==='submit'||type==='reset'){// Submit/reset inputs need the attribute removed completely to avoid
		// blank-text buttons.
		node.removeAttribute('value');return;}{// When syncing the value attribute, the value comes from a cascade of
		// properties:
		//  1. The value React property
		//  2. The defaultValue React property
		//  3. Otherwise there should be no change
		if(props.hasOwnProperty('value')){setDefaultValue(node,props.type,value);}else if(props.hasOwnProperty('defaultValue')){setDefaultValue(node,props.type,getToStringValue(props.defaultValue));}}{// When syncing the checked attribute, it only changes when it needs
		// to be removed, such as transitioning from a checkbox into a text input
		if(props.checked==null&&props.defaultChecked!=null){node.defaultChecked=!!props.defaultChecked;}}}function postMountWrapper(element,props,isHydrating){var node=element;// Do not assign value if it is already set. This prevents user text input
		// from being lost during SSR hydration.
		if(props.hasOwnProperty('value')||props.hasOwnProperty('defaultValue')){var type=props.type;var isButton=type==='submit'||type==='reset';// Avoid setting value attribute on submit/reset inputs as it overrides the
		// default value provided by the browser. See: #12872
		if(isButton&&(props.value===undefined||props.value===null)){return;}var initialValue=toString(node._wrapperState.initialValue);// Do not assign value if it is already set. This prevents user text input
		// from being lost during SSR hydration.
		if(!isHydrating){{// When syncing the value attribute, the value property should use
		// the wrapperState._initialValue property. This uses:
		//
		//   1. The value React property when present
		//   2. The defaultValue React property when present
		//   3. An empty string
		if(initialValue!==node.value){node.value=initialValue;}}}{// Otherwise, the value attribute is synchronized to the property,
		// so we assign defaultValue to the same thing as the value property
		// assignment step above.
		node.defaultValue=initialValue;}}// Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
		// this is needed to work around a chrome bug where setting defaultChecked
		// will sometimes influence the value of checked (even after detachment).
		// Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
		// We need to temporarily unset name to avoid disrupting radio button groups.
		var name=node.name;if(name!==''){node.name='';}{// When syncing the checked attribute, both the checked property and
		// attribute are assigned at the same time using defaultChecked. This uses:
		//
		//   1. The checked React property when present
		//   2. The defaultChecked React property when present
		//   3. Otherwise, false
		node.defaultChecked=!node.defaultChecked;node.defaultChecked=!!node._wrapperState.initialChecked;}if(name!==''){node.name=name;}}function restoreControlledState(element,props){var node=element;updateWrapper(node,props);updateNamedCousins(node,props);}function updateNamedCousins(rootNode,props){var name=props.name;if(props.type==='radio'&&name!=null){var queryRoot=rootNode;while(queryRoot.parentNode){queryRoot=queryRoot.parentNode;}// If `rootNode.form` was non-null, then we could try `form.elements`,
		// but that sometimes behaves strangely in IE8. We could also try using
		// `form.getElementsByName`, but that will only return direct children
		// and won't include inputs that use the HTML5 `form=` attribute. Since
		// the input might not even be in a form. It might not even be in the
		// document. Let's just use the local `querySelectorAll` to ensure we don't
		// miss anything.
		{checkAttributeStringCoercion(name,'name');}var group=queryRoot.querySelectorAll('input[name='+JSON.stringify(''+name)+'][type="radio"]');for(var i=0;i<group.length;i++){var otherNode=group[i];if(otherNode===rootNode||otherNode.form!==rootNode.form){continue;}// This will throw if radio buttons rendered by different copies of React
		// and the same name are rendered into the same form (same as #1939).
		// That's probably okay; we don't support it just as we don't support
		// mixing React radio buttons with non-React ones.
		var otherProps=getFiberCurrentPropsFromNode(otherNode);if(!otherProps){throw new Error('ReactDOMInput: Mixing React and non-React radio inputs with the '+'same `name` is not supported.');}// We need update the tracked value on the named cousin since the value
		// was changed but the input saw no event or value set
		updateValueIfChanged(otherNode);// If this is a controlled radio button group, forcing the input that
		// was previously checked to update will cause it to be come re-checked
		// as appropriate.
		updateWrapper(otherNode,otherProps);}}}// In Chrome, assigning defaultValue to certain input types triggers input validation.
		// For number inputs, the display value loses trailing decimal points. For email inputs,
		// Chrome raises "The specified value <x> is not a valid email address".
		//
		// Here we check to see if the defaultValue has actually changed, avoiding these problems
		// when the user is inputting text
		//
		// https://github.com/facebook/react/issues/7253
		function setDefaultValue(node,type,value){if(// Focused number inputs synchronize on blur. See ChangeEventPlugin.js
		type!=='number'||getActiveElement(node.ownerDocument)!==node){if(value==null){node.defaultValue=toString(node._wrapperState.initialValue);}else if(node.defaultValue!==toString(value)){node.defaultValue=toString(value);}}}var didWarnSelectedSetOnOption=false;var didWarnInvalidChild=false;var didWarnInvalidInnerHTML=false;/**
		 * Implements an <option> host component that warns when `selected` is set.
		 */function validateProps(element,props){{// If a value is not provided, then the children must be simple.
		if(props.value==null){if(typeof props.children==='object'&&props.children!==null){React.Children.forEach(props.children,function(child){if(child==null){return;}if(typeof child==='string'||typeof child==='number'){return;}if(!didWarnInvalidChild){didWarnInvalidChild=true;error('Cannot infer the option value of complex children. '+'Pass a `value` prop or use a plain string as children to <option>.');}});}else if(props.dangerouslySetInnerHTML!=null){if(!didWarnInvalidInnerHTML){didWarnInvalidInnerHTML=true;error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows '+'which value should be selected.');}}}// TODO: Remove support for `selected` in <option>.
		if(props.selected!=null&&!didWarnSelectedSetOnOption){error('Use the `defaultValue` or `value` props on <select> instead of '+'setting `selected` on <option>.');didWarnSelectedSetOnOption=true;}}}function postMountWrapper$1(element,props){// value="" should make a value attribute (#6219)
		if(props.value!=null){element.setAttribute('value',toString(getToStringValue(props.value)));}}var isArrayImpl=Array.isArray;// eslint-disable-next-line no-redeclare
		function isArray(a){return isArrayImpl(a);}var didWarnValueDefaultValue$1;{didWarnValueDefaultValue$1=false;}function getDeclarationErrorAddendum(){var ownerName=getCurrentFiberOwnerNameInDevOrNull();if(ownerName){return '\n\nCheck the render method of `'+ownerName+'`.';}return '';}var valuePropNames=['value','defaultValue'];/**
		 * Validation function for `value` and `defaultValue`.
		 */function checkSelectPropTypes(props){{checkControlledValueProps('select',props);for(var i=0;i<valuePropNames.length;i++){var propName=valuePropNames[i];if(props[propName]==null){continue;}var propNameIsArray=isArray(props[propName]);if(props.multiple&&!propNameIsArray){error('The `%s` prop supplied to <select> must be an array if '+'`multiple` is true.%s',propName,getDeclarationErrorAddendum());}else if(!props.multiple&&propNameIsArray){error('The `%s` prop supplied to <select> must be a scalar '+'value if `multiple` is false.%s',propName,getDeclarationErrorAddendum());}}}}function updateOptions(node,multiple,propValue,setDefaultSelected){var options=node.options;if(multiple){var selectedValues=propValue;var selectedValue={};for(var i=0;i<selectedValues.length;i++){// Prefix to avoid chaos with special keys.
		selectedValue['$'+selectedValues[i]]=true;}for(var _i=0;_i<options.length;_i++){var selected=selectedValue.hasOwnProperty('$'+options[_i].value);if(options[_i].selected!==selected){options[_i].selected=selected;}if(selected&&setDefaultSelected){options[_i].defaultSelected=true;}}}else {// Do not set `select.value` as exact behavior isn't consistent across all
		// browsers for all cases.
		var _selectedValue=toString(getToStringValue(propValue));var defaultSelected=null;for(var _i2=0;_i2<options.length;_i2++){if(options[_i2].value===_selectedValue){options[_i2].selected=true;if(setDefaultSelected){options[_i2].defaultSelected=true;}return;}if(defaultSelected===null&&!options[_i2].disabled){defaultSelected=options[_i2];}}if(defaultSelected!==null){defaultSelected.selected=true;}}}/**
		 * Implements a <select> host component that allows optionally setting the
		 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
		 * stringable. If `multiple` is true, the prop must be an array of stringables.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that change the
		 * selected option will trigger updates to the rendered options.
		 *
		 * If it is supplied (and not null/undefined), the rendered options will not
		 * update in response to user actions. Instead, the `value` prop must change in
		 * order for the rendered options to update.
		 *
		 * If `defaultValue` is provided, any options with the supplied values will be
		 * selected.
		 */function getHostProps$1(element,props){return assign({},props,{value:undefined});}function initWrapperState$1(element,props){var node=element;{checkSelectPropTypes(props);}node._wrapperState={wasMultiple:!!props.multiple};{if(props.value!==undefined&&props.defaultValue!==undefined&&!didWarnValueDefaultValue$1){error('Select elements must be either controlled or uncontrolled '+'(specify either the value prop, or the defaultValue prop, but not '+'both). Decide between using a controlled or uncontrolled select '+'element and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components');didWarnValueDefaultValue$1=true;}}}function postMountWrapper$2(element,props){var node=element;node.multiple=!!props.multiple;var value=props.value;if(value!=null){updateOptions(node,!!props.multiple,value,false);}else if(props.defaultValue!=null){updateOptions(node,!!props.multiple,props.defaultValue,true);}}function postUpdateWrapper(element,props){var node=element;var wasMultiple=node._wrapperState.wasMultiple;node._wrapperState.wasMultiple=!!props.multiple;var value=props.value;if(value!=null){updateOptions(node,!!props.multiple,value,false);}else if(wasMultiple!==!!props.multiple){// For simplicity, reapply `defaultValue` if `multiple` is toggled.
		if(props.defaultValue!=null){updateOptions(node,!!props.multiple,props.defaultValue,true);}else {// Revert the select back to its default unselected state.
		updateOptions(node,!!props.multiple,props.multiple?[]:'',false);}}}function restoreControlledState$1(element,props){var node=element;var value=props.value;if(value!=null){updateOptions(node,!!props.multiple,value,false);}}var didWarnValDefaultVal=false;/**
		 * Implements a <textarea> host component that allows setting `value`, and
		 * `defaultValue`. This differs from the traditional DOM API because value is
		 * usually set as PCDATA children.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that affect the
		 * value will trigger updates to the element.
		 *
		 * If `value` is supplied (and not null/undefined), the rendered element will
		 * not trigger updates to the element. Instead, the `value` prop must change in
		 * order for the rendered element to be updated.
		 *
		 * The rendered element will be initialized with an empty value, the prop
		 * `defaultValue` if specified, or the children content (deprecated).
		 */function getHostProps$2(element,props){var node=element;if(props.dangerouslySetInnerHTML!=null){throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');}// Always set children to the same thing. In IE9, the selection range will
		// get reset if `textContent` is mutated.  We could add a check in setTextContent
		// to only set the value if/when the value differs from the node value (which would
		// completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
		// solution. The value can be a boolean or object so that's why it's forced
		// to be a string.
		var hostProps=assign({},props,{value:undefined,defaultValue:undefined,children:toString(node._wrapperState.initialValue)});return hostProps;}function initWrapperState$2(element,props){var node=element;{checkControlledValueProps('textarea',props);if(props.value!==undefined&&props.defaultValue!==undefined&&!didWarnValDefaultVal){error('%s contains a textarea with both value and defaultValue props. '+'Textarea elements must be either controlled or uncontrolled '+'(specify either the value prop, or the defaultValue prop, but not '+'both). Decide between using a controlled or uncontrolled textarea '+'and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components',getCurrentFiberOwnerNameInDevOrNull()||'A component');didWarnValDefaultVal=true;}}var initialValue=props.value;// Only bother fetching default value if we're going to use it
		if(initialValue==null){var children=props.children,defaultValue=props.defaultValue;if(children!=null){{error('Use the `defaultValue` or `value` props instead of setting '+'children on <textarea>.');}{if(defaultValue!=null){throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');}if(isArray(children)){if(children.length>1){throw new Error('<textarea> can only have at most one child.');}children=children[0];}defaultValue=children;}}if(defaultValue==null){defaultValue='';}initialValue=defaultValue;}node._wrapperState={initialValue:getToStringValue(initialValue)};}function updateWrapper$1(element,props){var node=element;var value=getToStringValue(props.value);var defaultValue=getToStringValue(props.defaultValue);if(value!=null){// Cast `value` to a string to ensure the value is set correctly. While
		// browsers typically do this as necessary, jsdom doesn't.
		var newValue=toString(value);// To avoid side effects (such as losing text selection), only set value if changed
		if(newValue!==node.value){node.value=newValue;}if(props.defaultValue==null&&node.defaultValue!==newValue){node.defaultValue=newValue;}}if(defaultValue!=null){node.defaultValue=toString(defaultValue);}}function postMountWrapper$3(element,props){var node=element;// This is in postMount because we need access to the DOM node, which is not
		// available until after the component has mounted.
		var textContent=node.textContent;// Only set node.value if textContent is equal to the expected
		// initial value. In IE10/IE11 there is a bug where the placeholder attribute
		// will populate textContent as well.
		// https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
		if(textContent===node._wrapperState.initialValue){if(textContent!==''&&textContent!==null){node.value=textContent;}}}function restoreControlledState$2(element,props){// DOM component is still mounted; update
		updateWrapper$1(element,props);}var HTML_NAMESPACE='http://www.w3.org/1999/xhtml';var MATH_NAMESPACE='http://www.w3.org/1998/Math/MathML';var SVG_NAMESPACE='http://www.w3.org/2000/svg';// Assumes there is no parent namespace.
		function getIntrinsicNamespace(type){switch(type){case'svg':return SVG_NAMESPACE;case'math':return MATH_NAMESPACE;default:return HTML_NAMESPACE;}}function getChildNamespace(parentNamespace,type){if(parentNamespace==null||parentNamespace===HTML_NAMESPACE){// No (or default) parent namespace: potential entry point.
		return getIntrinsicNamespace(type);}if(parentNamespace===SVG_NAMESPACE&&type==='foreignObject'){// We're leaving SVG.
		return HTML_NAMESPACE;}// By default, pass namespace below.
		return parentNamespace;}/* globals MSApp */ /**
		 * Create a function which has 'unsafe' privileges (required by windows8 apps)
		 */var createMicrosoftUnsafeLocalFunction=function(func){if(typeof MSApp!=='undefined'&&MSApp.execUnsafeLocalFunction){return function(arg0,arg1,arg2,arg3){MSApp.execUnsafeLocalFunction(function(){return func(arg0,arg1,arg2,arg3);});};}else {return func;}};var reusableSVGContainer;/**
		 * Set the innerHTML property of a node
		 *
		 * @param {DOMElement} node
		 * @param {string} html
		 * @internal
		 */var setInnerHTML=createMicrosoftUnsafeLocalFunction(function(node,html){if(node.namespaceURI===SVG_NAMESPACE){if(!('innerHTML'in node)){// IE does not have innerHTML for SVG nodes, so instead we inject the
		// new markup in a temp node and then move the child nodes across into
		// the target node
		reusableSVGContainer=reusableSVGContainer||document.createElement('div');reusableSVGContainer.innerHTML='<svg>'+html.valueOf().toString()+'</svg>';var svgNode=reusableSVGContainer.firstChild;while(node.firstChild){node.removeChild(node.firstChild);}while(svgNode.firstChild){node.appendChild(svgNode.firstChild);}return;}}node.innerHTML=html;});/**
		 * HTML nodeType values that represent the type of the node
		 */var ELEMENT_NODE=1;var TEXT_NODE=3;var COMMENT_NODE=8;var DOCUMENT_NODE=9;var DOCUMENT_FRAGMENT_NODE=11;/**
		 * Set the textContent property of a node. For text updates, it's faster
		 * to set the `nodeValue` of the Text node directly instead of using
		 * `.textContent` which will remove the existing node and create a new one.
		 *
		 * @param {DOMElement} node
		 * @param {string} text
		 * @internal
		 */var setTextContent=function(node,text){if(text){var firstChild=node.firstChild;if(firstChild&&firstChild===node.lastChild&&firstChild.nodeType===TEXT_NODE){firstChild.nodeValue=text;return;}}node.textContent=text;};// List derived from Gecko source code:
		// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
		var shorthandToLonghand={animation:['animationDelay','animationDirection','animationDuration','animationFillMode','animationIterationCount','animationName','animationPlayState','animationTimingFunction'],background:['backgroundAttachment','backgroundClip','backgroundColor','backgroundImage','backgroundOrigin','backgroundPositionX','backgroundPositionY','backgroundRepeat','backgroundSize'],backgroundPosition:['backgroundPositionX','backgroundPositionY'],border:['borderBottomColor','borderBottomStyle','borderBottomWidth','borderImageOutset','borderImageRepeat','borderImageSlice','borderImageSource','borderImageWidth','borderLeftColor','borderLeftStyle','borderLeftWidth','borderRightColor','borderRightStyle','borderRightWidth','borderTopColor','borderTopStyle','borderTopWidth'],borderBlockEnd:['borderBlockEndColor','borderBlockEndStyle','borderBlockEndWidth'],borderBlockStart:['borderBlockStartColor','borderBlockStartStyle','borderBlockStartWidth'],borderBottom:['borderBottomColor','borderBottomStyle','borderBottomWidth'],borderColor:['borderBottomColor','borderLeftColor','borderRightColor','borderTopColor'],borderImage:['borderImageOutset','borderImageRepeat','borderImageSlice','borderImageSource','borderImageWidth'],borderInlineEnd:['borderInlineEndColor','borderInlineEndStyle','borderInlineEndWidth'],borderInlineStart:['borderInlineStartColor','borderInlineStartStyle','borderInlineStartWidth'],borderLeft:['borderLeftColor','borderLeftStyle','borderLeftWidth'],borderRadius:['borderBottomLeftRadius','borderBottomRightRadius','borderTopLeftRadius','borderTopRightRadius'],borderRight:['borderRightColor','borderRightStyle','borderRightWidth'],borderStyle:['borderBottomStyle','borderLeftStyle','borderRightStyle','borderTopStyle'],borderTop:['borderTopColor','borderTopStyle','borderTopWidth'],borderWidth:['borderBottomWidth','borderLeftWidth','borderRightWidth','borderTopWidth'],columnRule:['columnRuleColor','columnRuleStyle','columnRuleWidth'],columns:['columnCount','columnWidth'],flex:['flexBasis','flexGrow','flexShrink'],flexFlow:['flexDirection','flexWrap'],font:['fontFamily','fontFeatureSettings','fontKerning','fontLanguageOverride','fontSize','fontSizeAdjust','fontStretch','fontStyle','fontVariant','fontVariantAlternates','fontVariantCaps','fontVariantEastAsian','fontVariantLigatures','fontVariantNumeric','fontVariantPosition','fontWeight','lineHeight'],fontVariant:['fontVariantAlternates','fontVariantCaps','fontVariantEastAsian','fontVariantLigatures','fontVariantNumeric','fontVariantPosition'],gap:['columnGap','rowGap'],grid:['gridAutoColumns','gridAutoFlow','gridAutoRows','gridTemplateAreas','gridTemplateColumns','gridTemplateRows'],gridArea:['gridColumnEnd','gridColumnStart','gridRowEnd','gridRowStart'],gridColumn:['gridColumnEnd','gridColumnStart'],gridColumnGap:['columnGap'],gridGap:['columnGap','rowGap'],gridRow:['gridRowEnd','gridRowStart'],gridRowGap:['rowGap'],gridTemplate:['gridTemplateAreas','gridTemplateColumns','gridTemplateRows'],listStyle:['listStyleImage','listStylePosition','listStyleType'],margin:['marginBottom','marginLeft','marginRight','marginTop'],marker:['markerEnd','markerMid','markerStart'],mask:['maskClip','maskComposite','maskImage','maskMode','maskOrigin','maskPositionX','maskPositionY','maskRepeat','maskSize'],maskPosition:['maskPositionX','maskPositionY'],outline:['outlineColor','outlineStyle','outlineWidth'],overflow:['overflowX','overflowY'],padding:['paddingBottom','paddingLeft','paddingRight','paddingTop'],placeContent:['alignContent','justifyContent'],placeItems:['alignItems','justifyItems'],placeSelf:['alignSelf','justifySelf'],textDecoration:['textDecorationColor','textDecorationLine','textDecorationStyle'],textEmphasis:['textEmphasisColor','textEmphasisStyle'],transition:['transitionDelay','transitionDuration','transitionProperty','transitionTimingFunction'],wordWrap:['overflowWrap']};/**
		 * CSS properties which accept numbers but are not in units of "px".
		 */var isUnitlessNumber={animationIterationCount:true,aspectRatio:true,borderImageOutset:true,borderImageSlice:true,borderImageWidth:true,boxFlex:true,boxFlexGroup:true,boxOrdinalGroup:true,columnCount:true,columns:true,flex:true,flexGrow:true,flexPositive:true,flexShrink:true,flexNegative:true,flexOrder:true,gridArea:true,gridRow:true,gridRowEnd:true,gridRowSpan:true,gridRowStart:true,gridColumn:true,gridColumnEnd:true,gridColumnSpan:true,gridColumnStart:true,fontWeight:true,lineClamp:true,lineHeight:true,opacity:true,order:true,orphans:true,tabSize:true,widows:true,zIndex:true,zoom:true,// SVG-related properties
		fillOpacity:true,floodOpacity:true,stopOpacity:true,strokeDasharray:true,strokeDashoffset:true,strokeMiterlimit:true,strokeOpacity:true,strokeWidth:true};/**
		 * @param {string} prefix vendor-specific prefix, eg: Webkit
		 * @param {string} key style name, eg: transitionDuration
		 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
		 * WebkitTransitionDuration
		 */function prefixKey(prefix,key){return prefix+key.charAt(0).toUpperCase()+key.substring(1);}/**
		 * Support style names that may come passed in prefixed by adding permutations
		 * of vendor prefixes.
		 */var prefixes=['Webkit','ms','Moz','O'];// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
		// infinite loop, because it iterates over the newly added props too.
		Object.keys(isUnitlessNumber).forEach(function(prop){prefixes.forEach(function(prefix){isUnitlessNumber[prefixKey(prefix,prop)]=isUnitlessNumber[prop];});});/**
		 * Convert a value into the proper css writable value. The style name `name`
		 * should be logical (no hyphens), as specified
		 * in `CSSProperty.isUnitlessNumber`.
		 *
		 * @param {string} name CSS property name such as `topMargin`.
		 * @param {*} value CSS property value such as `10px`.
		 * @return {string} Normalized style value with dimensions applied.
		 */function dangerousStyleValue(name,value,isCustomProperty){// Note that we've removed escapeTextForBrowser() calls here since the
		// whole string will be escaped when the attribute is injected into
		// the markup. If you provide unsafe user data here they can inject
		// arbitrary CSS which may be problematic (I couldn't repro this):
		// https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
		// http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
		// This is not an XSS hole but instead a potential CSS injection issue
		// which has lead to a greater discussion about how we're going to
		// trust URLs moving forward. See #2115901
		var isEmpty=value==null||typeof value==='boolean'||value==='';if(isEmpty){return '';}if(!isCustomProperty&&typeof value==='number'&&value!==0&&!(isUnitlessNumber.hasOwnProperty(name)&&isUnitlessNumber[name])){return value+'px';// Presumes implicit 'px' suffix for unitless numbers
		}{checkCSSPropertyStringCoercion(value,name);}return (''+value).trim();}var uppercasePattern=/([A-Z])/g;var msPattern=/^ms-/;/**
		 * Hyphenates a camelcased CSS property name, for example:
		 *
		 *   > hyphenateStyleName('backgroundColor')
		 *   < "background-color"
		 *   > hyphenateStyleName('MozTransition')
		 *   < "-moz-transition"
		 *   > hyphenateStyleName('msTransition')
		 *   < "-ms-transition"
		 *
		 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
		 * is converted to `-ms-`.
		 */function hyphenateStyleName(name){return name.replace(uppercasePattern,'-$1').toLowerCase().replace(msPattern,'-ms-');}var warnValidStyle=function(){};{// 'msTransform' is correct, but the other prefixes should be capitalized
		var badVendoredStyleNamePattern=/^(?:webkit|moz|o)[A-Z]/;var msPattern$1=/^-ms-/;var hyphenPattern=/-(.)/g;// style values shouldn't contain a semicolon
		var badStyleValueWithSemicolonPattern=/;\s*$/;var warnedStyleNames={};var warnedStyleValues={};var warnedForNaNValue=false;var warnedForInfinityValue=false;var camelize=function(string){return string.replace(hyphenPattern,function(_,character){return character.toUpperCase();});};var warnHyphenatedStyleName=function(name){if(warnedStyleNames.hasOwnProperty(name)&&warnedStyleNames[name]){return;}warnedStyleNames[name]=true;error('Unsupported style property %s. Did you mean %s?',name,// As Andi Smith suggests
		// (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
		// is converted to lowercase `ms`.
		camelize(name.replace(msPattern$1,'ms-')));};var warnBadVendoredStyleName=function(name){if(warnedStyleNames.hasOwnProperty(name)&&warnedStyleNames[name]){return;}warnedStyleNames[name]=true;error('Unsupported vendor-prefixed style property %s. Did you mean %s?',name,name.charAt(0).toUpperCase()+name.slice(1));};var warnStyleValueWithSemicolon=function(name,value){if(warnedStyleValues.hasOwnProperty(value)&&warnedStyleValues[value]){return;}warnedStyleValues[value]=true;error("Style property values shouldn't contain a semicolon. "+'Try "%s: %s" instead.',name,value.replace(badStyleValueWithSemicolonPattern,''));};var warnStyleValueIsNaN=function(name,value){if(warnedForNaNValue){return;}warnedForNaNValue=true;error('`NaN` is an invalid value for the `%s` css style property.',name);};var warnStyleValueIsInfinity=function(name,value){if(warnedForInfinityValue){return;}warnedForInfinityValue=true;error('`Infinity` is an invalid value for the `%s` css style property.',name);};warnValidStyle=function(name,value){if(name.indexOf('-')>-1){warnHyphenatedStyleName(name);}else if(badVendoredStyleNamePattern.test(name)){warnBadVendoredStyleName(name);}else if(badStyleValueWithSemicolonPattern.test(value)){warnStyleValueWithSemicolon(name,value);}if(typeof value==='number'){if(isNaN(value)){warnStyleValueIsNaN(name,value);}else if(!isFinite(value)){warnStyleValueIsInfinity(name,value);}}};}var warnValidStyle$1=warnValidStyle;/**
		 * Operations for dealing with CSS properties.
		 */ /**
		 * This creates a string that is expected to be equivalent to the style
		 * attribute generated by server-side rendering. It by-passes warnings and
		 * security checks so it's not safe to use this value for anything other than
		 * comparison. It is only used in DEV for SSR validation.
		 */function createDangerousStringForStyles(styles){{var serialized='';var delimiter='';for(var styleName in styles){if(!styles.hasOwnProperty(styleName)){continue;}var styleValue=styles[styleName];if(styleValue!=null){var isCustomProperty=styleName.indexOf('--')===0;serialized+=delimiter+(isCustomProperty?styleName:hyphenateStyleName(styleName))+':';serialized+=dangerousStyleValue(styleName,styleValue,isCustomProperty);delimiter=';';}}return serialized||null;}}/**
		 * Sets the value for multiple styles on a node.  If a value is specified as
		 * '' (empty string), the corresponding style property will be unset.
		 *
		 * @param {DOMElement} node
		 * @param {object} styles
		 */function setValueForStyles(node,styles){var style=node.style;for(var styleName in styles){if(!styles.hasOwnProperty(styleName)){continue;}var isCustomProperty=styleName.indexOf('--')===0;{if(!isCustomProperty){warnValidStyle$1(styleName,styles[styleName]);}}var styleValue=dangerousStyleValue(styleName,styles[styleName],isCustomProperty);if(styleName==='float'){styleName='cssFloat';}if(isCustomProperty){style.setProperty(styleName,styleValue);}else {style[styleName]=styleValue;}}}function isValueEmpty(value){return value==null||typeof value==='boolean'||value==='';}/**
		 * Given {color: 'red', overflow: 'hidden'} returns {
		 *   color: 'color',
		 *   overflowX: 'overflow',
		 *   overflowY: 'overflow',
		 * }. This can be read as "the overflowY property was set by the overflow
		 * shorthand". That is, the values are the property that each was derived from.
		 */function expandShorthandMap(styles){var expanded={};for(var key in styles){var longhands=shorthandToLonghand[key]||[key];for(var i=0;i<longhands.length;i++){expanded[longhands[i]]=key;}}return expanded;}/**
		 * When mixing shorthand and longhand property names, we warn during updates if
		 * we expect an incorrect result to occur. In particular, we warn for:
		 *
		 * Updating a shorthand property (longhand gets overwritten):
		 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
		 *   becomes .style.font = 'baz'
		 * Removing a shorthand property (longhand gets lost too):
		 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
		 *   becomes .style.font = ''
		 * Removing a longhand property (should revert to shorthand; doesn't):
		 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
		 *   becomes .style.fontVariant = ''
		 */function validateShorthandPropertyCollisionInDev(styleUpdates,nextStyles){{if(!nextStyles){return;}var expandedUpdates=expandShorthandMap(styleUpdates);var expandedStyles=expandShorthandMap(nextStyles);var warnedAbout={};for(var key in expandedUpdates){var originalKey=expandedUpdates[key];var correctOriginalKey=expandedStyles[key];if(correctOriginalKey&&originalKey!==correctOriginalKey){var warningKey=originalKey+','+correctOriginalKey;if(warnedAbout[warningKey]){continue;}warnedAbout[warningKey]=true;error('%s a style property during rerender (%s) when a '+'conflicting property is set (%s) can lead to styling bugs. To '+"avoid this, don't mix shorthand and non-shorthand properties "+'for the same value; instead, replace the shorthand with '+'separate values.',isValueEmpty(styleUpdates[originalKey])?'Removing':'Updating',originalKey,correctOriginalKey);}}}}// For HTML, certain tags should omit their close tag. We keep a list for
		// those special-case tags.
		var omittedCloseTags={area:true,base:true,br:true,col:true,embed:true,hr:true,img:true,input:true,keygen:true,link:true,meta:true,param:true,source:true,track:true,wbr:true// NOTE: menuitem's close tag should be omitted, but that causes problems.
		};// `omittedCloseTags` except that `menuitem` should still have its closing tag.
		var voidElementTags=assign({menuitem:true},omittedCloseTags);var HTML='__html';function assertValidProps(tag,props){if(!props){return;}// Note the use of `==` which checks for null or undefined.
		if(voidElementTags[tag]){if(props.children!=null||props.dangerouslySetInnerHTML!=null){throw new Error(tag+" is a void element tag and must neither have `children` nor "+'use `dangerouslySetInnerHTML`.');}}if(props.dangerouslySetInnerHTML!=null){if(props.children!=null){throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');}if(typeof props.dangerouslySetInnerHTML!=='object'||!(HTML in props.dangerouslySetInnerHTML)){throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. '+'Please visit https://reactjs.org/link/dangerously-set-inner-html '+'for more information.');}}{if(!props.suppressContentEditableWarning&&props.contentEditable&&props.children!=null){error('A component is `contentEditable` and contains `children` managed by '+'React. It is now your responsibility to guarantee that none of '+'those nodes are unexpectedly modified or duplicated. This is '+'probably not intentional.');}}if(props.style!=null&&typeof props.style!=='object'){throw new Error('The `style` prop expects a mapping from style properties to values, '+"not a string. For example, style={{marginRight: spacing + 'em'}} when "+'using JSX.');}}function isCustomComponent(tagName,props){if(tagName.indexOf('-')===-1){return typeof props.is==='string';}switch(tagName){// These are reserved SVG and MathML elements.
		// We don't mind this list too much because we expect it to never grow.
		// The alternative is to track the namespace in a few places which is convoluted.
		// https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
		case'annotation-xml':case'color-profile':case'font-face':case'font-face-src':case'font-face-uri':case'font-face-format':case'font-face-name':case'missing-glyph':return false;default:return true;}}// When adding attributes to the HTML or SVG allowed attribute list, be sure to
		// also add them to this module to ensure casing and incorrect name
		// warnings.
		var possibleStandardNames={// HTML
		accept:'accept',acceptcharset:'acceptCharset','accept-charset':'acceptCharset',accesskey:'accessKey',action:'action',allowfullscreen:'allowFullScreen',alt:'alt',as:'as',async:'async',autocapitalize:'autoCapitalize',autocomplete:'autoComplete',autocorrect:'autoCorrect',autofocus:'autoFocus',autoplay:'autoPlay',autosave:'autoSave',capture:'capture',cellpadding:'cellPadding',cellspacing:'cellSpacing',challenge:'challenge',charset:'charSet',checked:'checked',children:'children',cite:'cite',class:'className',classid:'classID',classname:'className',cols:'cols',colspan:'colSpan',content:'content',contenteditable:'contentEditable',contextmenu:'contextMenu',controls:'controls',controlslist:'controlsList',coords:'coords',crossorigin:'crossOrigin',dangerouslysetinnerhtml:'dangerouslySetInnerHTML',data:'data',datetime:'dateTime',default:'default',defaultchecked:'defaultChecked',defaultvalue:'defaultValue',defer:'defer',dir:'dir',disabled:'disabled',disablepictureinpicture:'disablePictureInPicture',disableremoteplayback:'disableRemotePlayback',download:'download',draggable:'draggable',enctype:'encType',enterkeyhint:'enterKeyHint',for:'htmlFor',form:'form',formmethod:'formMethod',formaction:'formAction',formenctype:'formEncType',formnovalidate:'formNoValidate',formtarget:'formTarget',frameborder:'frameBorder',headers:'headers',height:'height',hidden:'hidden',high:'high',href:'href',hreflang:'hrefLang',htmlfor:'htmlFor',httpequiv:'httpEquiv','http-equiv':'httpEquiv',icon:'icon',id:'id',imagesizes:'imageSizes',imagesrcset:'imageSrcSet',innerhtml:'innerHTML',inputmode:'inputMode',integrity:'integrity',is:'is',itemid:'itemID',itemprop:'itemProp',itemref:'itemRef',itemscope:'itemScope',itemtype:'itemType',keyparams:'keyParams',keytype:'keyType',kind:'kind',label:'label',lang:'lang',list:'list',loop:'loop',low:'low',manifest:'manifest',marginwidth:'marginWidth',marginheight:'marginHeight',max:'max',maxlength:'maxLength',media:'media',mediagroup:'mediaGroup',method:'method',min:'min',minlength:'minLength',multiple:'multiple',muted:'muted',name:'name',nomodule:'noModule',nonce:'nonce',novalidate:'noValidate',open:'open',optimum:'optimum',pattern:'pattern',placeholder:'placeholder',playsinline:'playsInline',poster:'poster',preload:'preload',profile:'profile',radiogroup:'radioGroup',readonly:'readOnly',referrerpolicy:'referrerPolicy',rel:'rel',required:'required',reversed:'reversed',role:'role',rows:'rows',rowspan:'rowSpan',sandbox:'sandbox',scope:'scope',scoped:'scoped',scrolling:'scrolling',seamless:'seamless',selected:'selected',shape:'shape',size:'size',sizes:'sizes',span:'span',spellcheck:'spellCheck',src:'src',srcdoc:'srcDoc',srclang:'srcLang',srcset:'srcSet',start:'start',step:'step',style:'style',summary:'summary',tabindex:'tabIndex',target:'target',title:'title',type:'type',usemap:'useMap',value:'value',width:'width',wmode:'wmode',wrap:'wrap',// SVG
		about:'about',accentheight:'accentHeight','accent-height':'accentHeight',accumulate:'accumulate',additive:'additive',alignmentbaseline:'alignmentBaseline','alignment-baseline':'alignmentBaseline',allowreorder:'allowReorder',alphabetic:'alphabetic',amplitude:'amplitude',arabicform:'arabicForm','arabic-form':'arabicForm',ascent:'ascent',attributename:'attributeName',attributetype:'attributeType',autoreverse:'autoReverse',azimuth:'azimuth',basefrequency:'baseFrequency',baselineshift:'baselineShift','baseline-shift':'baselineShift',baseprofile:'baseProfile',bbox:'bbox',begin:'begin',bias:'bias',by:'by',calcmode:'calcMode',capheight:'capHeight','cap-height':'capHeight',clip:'clip',clippath:'clipPath','clip-path':'clipPath',clippathunits:'clipPathUnits',cliprule:'clipRule','clip-rule':'clipRule',color:'color',colorinterpolation:'colorInterpolation','color-interpolation':'colorInterpolation',colorinterpolationfilters:'colorInterpolationFilters','color-interpolation-filters':'colorInterpolationFilters',colorprofile:'colorProfile','color-profile':'colorProfile',colorrendering:'colorRendering','color-rendering':'colorRendering',contentscripttype:'contentScriptType',contentstyletype:'contentStyleType',cursor:'cursor',cx:'cx',cy:'cy',d:'d',datatype:'datatype',decelerate:'decelerate',descent:'descent',diffuseconstant:'diffuseConstant',direction:'direction',display:'display',divisor:'divisor',dominantbaseline:'dominantBaseline','dominant-baseline':'dominantBaseline',dur:'dur',dx:'dx',dy:'dy',edgemode:'edgeMode',elevation:'elevation',enablebackground:'enableBackground','enable-background':'enableBackground',end:'end',exponent:'exponent',externalresourcesrequired:'externalResourcesRequired',fill:'fill',fillopacity:'fillOpacity','fill-opacity':'fillOpacity',fillrule:'fillRule','fill-rule':'fillRule',filter:'filter',filterres:'filterRes',filterunits:'filterUnits',floodopacity:'floodOpacity','flood-opacity':'floodOpacity',floodcolor:'floodColor','flood-color':'floodColor',focusable:'focusable',fontfamily:'fontFamily','font-family':'fontFamily',fontsize:'fontSize','font-size':'fontSize',fontsizeadjust:'fontSizeAdjust','font-size-adjust':'fontSizeAdjust',fontstretch:'fontStretch','font-stretch':'fontStretch',fontstyle:'fontStyle','font-style':'fontStyle',fontvariant:'fontVariant','font-variant':'fontVariant',fontweight:'fontWeight','font-weight':'fontWeight',format:'format',from:'from',fx:'fx',fy:'fy',g1:'g1',g2:'g2',glyphname:'glyphName','glyph-name':'glyphName',glyphorientationhorizontal:'glyphOrientationHorizontal','glyph-orientation-horizontal':'glyphOrientationHorizontal',glyphorientationvertical:'glyphOrientationVertical','glyph-orientation-vertical':'glyphOrientationVertical',glyphref:'glyphRef',gradienttransform:'gradientTransform',gradientunits:'gradientUnits',hanging:'hanging',horizadvx:'horizAdvX','horiz-adv-x':'horizAdvX',horizoriginx:'horizOriginX','horiz-origin-x':'horizOriginX',ideographic:'ideographic',imagerendering:'imageRendering','image-rendering':'imageRendering',in2:'in2',in:'in',inlist:'inlist',intercept:'intercept',k1:'k1',k2:'k2',k3:'k3',k4:'k4',k:'k',kernelmatrix:'kernelMatrix',kernelunitlength:'kernelUnitLength',kerning:'kerning',keypoints:'keyPoints',keysplines:'keySplines',keytimes:'keyTimes',lengthadjust:'lengthAdjust',letterspacing:'letterSpacing','letter-spacing':'letterSpacing',lightingcolor:'lightingColor','lighting-color':'lightingColor',limitingconeangle:'limitingConeAngle',local:'local',markerend:'markerEnd','marker-end':'markerEnd',markerheight:'markerHeight',markermid:'markerMid','marker-mid':'markerMid',markerstart:'markerStart','marker-start':'markerStart',markerunits:'markerUnits',markerwidth:'markerWidth',mask:'mask',maskcontentunits:'maskContentUnits',maskunits:'maskUnits',mathematical:'mathematical',mode:'mode',numoctaves:'numOctaves',offset:'offset',opacity:'opacity',operator:'operator',order:'order',orient:'orient',orientation:'orientation',origin:'origin',overflow:'overflow',overlineposition:'overlinePosition','overline-position':'overlinePosition',overlinethickness:'overlineThickness','overline-thickness':'overlineThickness',paintorder:'paintOrder','paint-order':'paintOrder',panose1:'panose1','panose-1':'panose1',pathlength:'pathLength',patterncontentunits:'patternContentUnits',patterntransform:'patternTransform',patternunits:'patternUnits',pointerevents:'pointerEvents','pointer-events':'pointerEvents',points:'points',pointsatx:'pointsAtX',pointsaty:'pointsAtY',pointsatz:'pointsAtZ',prefix:'prefix',preservealpha:'preserveAlpha',preserveaspectratio:'preserveAspectRatio',primitiveunits:'primitiveUnits',property:'property',r:'r',radius:'radius',refx:'refX',refy:'refY',renderingintent:'renderingIntent','rendering-intent':'renderingIntent',repeatcount:'repeatCount',repeatdur:'repeatDur',requiredextensions:'requiredExtensions',requiredfeatures:'requiredFeatures',resource:'resource',restart:'restart',result:'result',results:'results',rotate:'rotate',rx:'rx',ry:'ry',scale:'scale',security:'security',seed:'seed',shaperendering:'shapeRendering','shape-rendering':'shapeRendering',slope:'slope',spacing:'spacing',specularconstant:'specularConstant',specularexponent:'specularExponent',speed:'speed',spreadmethod:'spreadMethod',startoffset:'startOffset',stddeviation:'stdDeviation',stemh:'stemh',stemv:'stemv',stitchtiles:'stitchTiles',stopcolor:'stopColor','stop-color':'stopColor',stopopacity:'stopOpacity','stop-opacity':'stopOpacity',strikethroughposition:'strikethroughPosition','strikethrough-position':'strikethroughPosition',strikethroughthickness:'strikethroughThickness','strikethrough-thickness':'strikethroughThickness',string:'string',stroke:'stroke',strokedasharray:'strokeDasharray','stroke-dasharray':'strokeDasharray',strokedashoffset:'strokeDashoffset','stroke-dashoffset':'strokeDashoffset',strokelinecap:'strokeLinecap','stroke-linecap':'strokeLinecap',strokelinejoin:'strokeLinejoin','stroke-linejoin':'strokeLinejoin',strokemiterlimit:'strokeMiterlimit','stroke-miterlimit':'strokeMiterlimit',strokewidth:'strokeWidth','stroke-width':'strokeWidth',strokeopacity:'strokeOpacity','stroke-opacity':'strokeOpacity',suppresscontenteditablewarning:'suppressContentEditableWarning',suppresshydrationwarning:'suppressHydrationWarning',surfacescale:'surfaceScale',systemlanguage:'systemLanguage',tablevalues:'tableValues',targetx:'targetX',targety:'targetY',textanchor:'textAnchor','text-anchor':'textAnchor',textdecoration:'textDecoration','text-decoration':'textDecoration',textlength:'textLength',textrendering:'textRendering','text-rendering':'textRendering',to:'to',transform:'transform',typeof:'typeof',u1:'u1',u2:'u2',underlineposition:'underlinePosition','underline-position':'underlinePosition',underlinethickness:'underlineThickness','underline-thickness':'underlineThickness',unicode:'unicode',unicodebidi:'unicodeBidi','unicode-bidi':'unicodeBidi',unicoderange:'unicodeRange','unicode-range':'unicodeRange',unitsperem:'unitsPerEm','units-per-em':'unitsPerEm',unselectable:'unselectable',valphabetic:'vAlphabetic','v-alphabetic':'vAlphabetic',values:'values',vectoreffect:'vectorEffect','vector-effect':'vectorEffect',version:'version',vertadvy:'vertAdvY','vert-adv-y':'vertAdvY',vertoriginx:'vertOriginX','vert-origin-x':'vertOriginX',vertoriginy:'vertOriginY','vert-origin-y':'vertOriginY',vhanging:'vHanging','v-hanging':'vHanging',videographic:'vIdeographic','v-ideographic':'vIdeographic',viewbox:'viewBox',viewtarget:'viewTarget',visibility:'visibility',vmathematical:'vMathematical','v-mathematical':'vMathematical',vocab:'vocab',widths:'widths',wordspacing:'wordSpacing','word-spacing':'wordSpacing',writingmode:'writingMode','writing-mode':'writingMode',x1:'x1',x2:'x2',x:'x',xchannelselector:'xChannelSelector',xheight:'xHeight','x-height':'xHeight',xlinkactuate:'xlinkActuate','xlink:actuate':'xlinkActuate',xlinkarcrole:'xlinkArcrole','xlink:arcrole':'xlinkArcrole',xlinkhref:'xlinkHref','xlink:href':'xlinkHref',xlinkrole:'xlinkRole','xlink:role':'xlinkRole',xlinkshow:'xlinkShow','xlink:show':'xlinkShow',xlinktitle:'xlinkTitle','xlink:title':'xlinkTitle',xlinktype:'xlinkType','xlink:type':'xlinkType',xmlbase:'xmlBase','xml:base':'xmlBase',xmllang:'xmlLang','xml:lang':'xmlLang',xmlns:'xmlns','xml:space':'xmlSpace',xmlnsxlink:'xmlnsXlink','xmlns:xlink':'xmlnsXlink',xmlspace:'xmlSpace',y1:'y1',y2:'y2',y:'y',ychannelselector:'yChannelSelector',z:'z',zoomandpan:'zoomAndPan'};var ariaProperties={'aria-current':0,// state
		'aria-description':0,'aria-details':0,'aria-disabled':0,// state
		'aria-hidden':0,// state
		'aria-invalid':0,// state
		'aria-keyshortcuts':0,'aria-label':0,'aria-roledescription':0,// Widget Attributes
		'aria-autocomplete':0,'aria-checked':0,'aria-expanded':0,'aria-haspopup':0,'aria-level':0,'aria-modal':0,'aria-multiline':0,'aria-multiselectable':0,'aria-orientation':0,'aria-placeholder':0,'aria-pressed':0,'aria-readonly':0,'aria-required':0,'aria-selected':0,'aria-sort':0,'aria-valuemax':0,'aria-valuemin':0,'aria-valuenow':0,'aria-valuetext':0,// Live Region Attributes
		'aria-atomic':0,'aria-busy':0,'aria-live':0,'aria-relevant':0,// Drag-and-Drop Attributes
		'aria-dropeffect':0,'aria-grabbed':0,// Relationship Attributes
		'aria-activedescendant':0,'aria-colcount':0,'aria-colindex':0,'aria-colspan':0,'aria-controls':0,'aria-describedby':0,'aria-errormessage':0,'aria-flowto':0,'aria-labelledby':0,'aria-owns':0,'aria-posinset':0,'aria-rowcount':0,'aria-rowindex':0,'aria-rowspan':0,'aria-setsize':0};var warnedProperties={};var rARIA=new RegExp('^(aria)-['+ATTRIBUTE_NAME_CHAR+']*$');var rARIACamel=new RegExp('^(aria)[A-Z]['+ATTRIBUTE_NAME_CHAR+']*$');function validateProperty(tagName,name){{if(hasOwnProperty.call(warnedProperties,name)&&warnedProperties[name]){return true;}if(rARIACamel.test(name)){var ariaName='aria-'+name.slice(4).toLowerCase();var correctName=ariaProperties.hasOwnProperty(ariaName)?ariaName:null;// If this is an aria-* attribute, but is not listed in the known DOM
		// DOM properties, then it is an invalid aria-* attribute.
		if(correctName==null){error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',name);warnedProperties[name]=true;return true;}// aria-* attributes should be lowercase; suggest the lowercase version.
		if(name!==correctName){error('Invalid ARIA attribute `%s`. Did you mean `%s`?',name,correctName);warnedProperties[name]=true;return true;}}if(rARIA.test(name)){var lowerCasedName=name.toLowerCase();var standardName=ariaProperties.hasOwnProperty(lowerCasedName)?lowerCasedName:null;// If this is an aria-* attribute, but is not listed in the known DOM
		// DOM properties, then it is an invalid aria-* attribute.
		if(standardName==null){warnedProperties[name]=true;return false;}// aria-* attributes should be lowercase; suggest the lowercase version.
		if(name!==standardName){error('Unknown ARIA attribute `%s`. Did you mean `%s`?',name,standardName);warnedProperties[name]=true;return true;}}}return true;}function warnInvalidARIAProps(type,props){{var invalidProps=[];for(var key in props){var isValid=validateProperty(type,key);if(!isValid){invalidProps.push(key);}}var unknownPropString=invalidProps.map(function(prop){return '`'+prop+'`';}).join(', ');if(invalidProps.length===1){error('Invalid aria prop %s on <%s> tag. '+'For details, see https://reactjs.org/link/invalid-aria-props',unknownPropString,type);}else if(invalidProps.length>1){error('Invalid aria props %s on <%s> tag. '+'For details, see https://reactjs.org/link/invalid-aria-props',unknownPropString,type);}}}function validateProperties(type,props){if(isCustomComponent(type,props)){return;}warnInvalidARIAProps(type,props);}var didWarnValueNull=false;function validateProperties$1(type,props){{if(type!=='input'&&type!=='textarea'&&type!=='select'){return;}if(props!=null&&props.value===null&&!didWarnValueNull){didWarnValueNull=true;if(type==='select'&&props.multiple){error('`value` prop on `%s` should not be null. '+'Consider using an empty array when `multiple` is set to `true` '+'to clear the component or `undefined` for uncontrolled components.',type);}else {error('`value` prop on `%s` should not be null. '+'Consider using an empty string to clear the component or `undefined` '+'for uncontrolled components.',type);}}}}var validateProperty$1=function(){};{var warnedProperties$1={};var EVENT_NAME_REGEX=/^on./;var INVALID_EVENT_NAME_REGEX=/^on[^A-Z]/;var rARIA$1=new RegExp('^(aria)-['+ATTRIBUTE_NAME_CHAR+']*$');var rARIACamel$1=new RegExp('^(aria)[A-Z]['+ATTRIBUTE_NAME_CHAR+']*$');validateProperty$1=function(tagName,name,value,eventRegistry){if(hasOwnProperty.call(warnedProperties$1,name)&&warnedProperties$1[name]){return true;}var lowerCasedName=name.toLowerCase();if(lowerCasedName==='onfocusin'||lowerCasedName==='onfocusout'){error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. '+'All React events are normalized to bubble, so onFocusIn and onFocusOut '+'are not needed/supported by React.');warnedProperties$1[name]=true;return true;}// We can't rely on the event system being injected on the server.
		if(eventRegistry!=null){var registrationNameDependencies=eventRegistry.registrationNameDependencies,possibleRegistrationNames=eventRegistry.possibleRegistrationNames;if(registrationNameDependencies.hasOwnProperty(name)){return true;}var registrationName=possibleRegistrationNames.hasOwnProperty(lowerCasedName)?possibleRegistrationNames[lowerCasedName]:null;if(registrationName!=null){error('Invalid event handler property `%s`. Did you mean `%s`?',name,registrationName);warnedProperties$1[name]=true;return true;}if(EVENT_NAME_REGEX.test(name)){error('Unknown event handler property `%s`. It will be ignored.',name);warnedProperties$1[name]=true;return true;}}else if(EVENT_NAME_REGEX.test(name)){// If no event plugins have been injected, we are in a server environment.
		// So we can't tell if the event name is correct for sure, but we can filter
		// out known bad ones like `onclick`. We can't suggest a specific replacement though.
		if(INVALID_EVENT_NAME_REGEX.test(name)){error('Invalid event handler property `%s`. '+'React events use the camelCase naming convention, for example `onClick`.',name);}warnedProperties$1[name]=true;return true;}// Let the ARIA attribute hook validate ARIA attributes
		if(rARIA$1.test(name)||rARIACamel$1.test(name)){return true;}if(lowerCasedName==='innerhtml'){error('Directly setting property `innerHTML` is not permitted. '+'For more information, lookup documentation on `dangerouslySetInnerHTML`.');warnedProperties$1[name]=true;return true;}if(lowerCasedName==='aria'){error('The `aria` attribute is reserved for future use in React. '+'Pass individual `aria-` attributes instead.');warnedProperties$1[name]=true;return true;}if(lowerCasedName==='is'&&value!==null&&value!==undefined&&typeof value!=='string'){error('Received a `%s` for a string attribute `is`. If this is expected, cast '+'the value to a string.',typeof value);warnedProperties$1[name]=true;return true;}if(typeof value==='number'&&isNaN(value)){error('Received NaN for the `%s` attribute. If this is expected, cast '+'the value to a string.',name);warnedProperties$1[name]=true;return true;}var propertyInfo=getPropertyInfo(name);var isReserved=propertyInfo!==null&&propertyInfo.type===RESERVED;// Known attributes should match the casing specified in the property config.
		if(possibleStandardNames.hasOwnProperty(lowerCasedName)){var standardName=possibleStandardNames[lowerCasedName];if(standardName!==name){error('Invalid DOM property `%s`. Did you mean `%s`?',name,standardName);warnedProperties$1[name]=true;return true;}}else if(!isReserved&&name!==lowerCasedName){// Unknown attributes should have lowercase casing since that's how they
		// will be cased anyway with server rendering.
		error('React does not recognize the `%s` prop on a DOM element. If you '+'intentionally want it to appear in the DOM as a custom '+'attribute, spell it as lowercase `%s` instead. '+'If you accidentally passed it from a parent component, remove '+'it from the DOM element.',name,lowerCasedName);warnedProperties$1[name]=true;return true;}if(typeof value==='boolean'&&shouldRemoveAttributeWithWarning(name,value,propertyInfo,false)){if(value){error('Received `%s` for a non-boolean attribute `%s`.\n\n'+'If you want to write it to the DOM, pass a string instead: '+'%s="%s" or %s={value.toString()}.',value,name,name,value,name);}else {error('Received `%s` for a non-boolean attribute `%s`.\n\n'+'If you want to write it to the DOM, pass a string instead: '+'%s="%s" or %s={value.toString()}.\n\n'+'If you used to conditionally omit it with %s={condition && value}, '+'pass %s={condition ? value : undefined} instead.',value,name,name,value,name,name,name);}warnedProperties$1[name]=true;return true;}// Now that we've validated casing, do not validate
		// data types for reserved props
		if(isReserved){return true;}// Warn when a known attribute is a bad type
		if(shouldRemoveAttributeWithWarning(name,value,propertyInfo,false)){warnedProperties$1[name]=true;return false;}// Warn when passing the strings 'false' or 'true' into a boolean prop
		if((value==='false'||value==='true')&&propertyInfo!==null&&propertyInfo.type===BOOLEAN){error('Received the string `%s` for the boolean attribute `%s`. '+'%s '+'Did you mean %s={%s}?',value,name,value==='false'?'The browser will interpret it as a truthy value.':'Although this works, it will not work as expected if you pass the string "false".',name,value);warnedProperties$1[name]=true;return true;}return true;};}var warnUnknownProperties=function(type,props,eventRegistry){{var unknownProps=[];for(var key in props){var isValid=validateProperty$1(type,key,props[key],eventRegistry);if(!isValid){unknownProps.push(key);}}var unknownPropString=unknownProps.map(function(prop){return '`'+prop+'`';}).join(', ');if(unknownProps.length===1){error('Invalid value for prop %s on <%s> tag. Either remove it from the element, '+'or pass a string or number value to keep it in the DOM. '+'For details, see https://reactjs.org/link/attribute-behavior ',unknownPropString,type);}else if(unknownProps.length>1){error('Invalid values for props %s on <%s> tag. Either remove them from the element, '+'or pass a string or number value to keep them in the DOM. '+'For details, see https://reactjs.org/link/attribute-behavior ',unknownPropString,type);}}};function validateProperties$2(type,props,eventRegistry){if(isCustomComponent(type,props)){return;}warnUnknownProperties(type,props,eventRegistry);}var IS_EVENT_HANDLE_NON_MANAGED_NODE=1;var IS_NON_DELEGATED=1<<1;var IS_CAPTURE_PHASE=1<<2;// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
		// we call willDeferLaterForLegacyFBSupport, thus not bailing out
		// will result in endless cycles like an infinite loop.
		// We also don't want to defer during event replaying.
		var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS=IS_EVENT_HANDLE_NON_MANAGED_NODE|IS_NON_DELEGATED|IS_CAPTURE_PHASE;// This exists to avoid circular dependency between ReactDOMEventReplaying
		// and DOMPluginEventSystem.
		var currentReplayingEvent=null;function setReplayingEvent(event){{if(currentReplayingEvent!==null){error('Expected currently replaying event to be null. This error '+'is likely caused by a bug in React. Please file an issue.');}}currentReplayingEvent=event;}function resetReplayingEvent(){{if(currentReplayingEvent===null){error('Expected currently replaying event to not be null. This error '+'is likely caused by a bug in React. Please file an issue.');}}currentReplayingEvent=null;}function isReplayingEvent(event){return event===currentReplayingEvent;}/**
		 * Gets the target node from a native browser event by accounting for
		 * inconsistencies in browser DOM APIs.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {DOMEventTarget} Target node.
		 */function getEventTarget(nativeEvent){// Fallback to nativeEvent.srcElement for IE9
		// https://github.com/facebook/react/issues/12506
		var target=nativeEvent.target||nativeEvent.srcElement||window;// Normalize SVG <use> element events #4963
		if(target.correspondingUseElement){target=target.correspondingUseElement;}// Safari may fire events on text nodes (Node.TEXT_NODE is 3).
		// @see http://www.quirksmode.org/js/events_properties.html
		return target.nodeType===TEXT_NODE?target.parentNode:target;}var restoreImpl=null;var restoreTarget=null;var restoreQueue=null;function restoreStateOfTarget(target){// We perform this translation at the end of the event loop so that we
		// always receive the correct fiber here
		var internalInstance=getInstanceFromNode(target);if(!internalInstance){// Unmounted
		return;}if(typeof restoreImpl!=='function'){throw new Error('setRestoreImplementation() needs to be called to handle a target for controlled '+'events. This error is likely caused by a bug in React. Please file an issue.');}var stateNode=internalInstance.stateNode;// Guard against Fiber being unmounted.
		if(stateNode){var _props=getFiberCurrentPropsFromNode(stateNode);restoreImpl(internalInstance.stateNode,internalInstance.type,_props);}}function setRestoreImplementation(impl){restoreImpl=impl;}function enqueueStateRestore(target){if(restoreTarget){if(restoreQueue){restoreQueue.push(target);}else {restoreQueue=[target];}}else {restoreTarget=target;}}function needsStateRestore(){return restoreTarget!==null||restoreQueue!==null;}function restoreStateIfNeeded(){if(!restoreTarget){return;}var target=restoreTarget;var queuedTargets=restoreQueue;restoreTarget=null;restoreQueue=null;restoreStateOfTarget(target);if(queuedTargets){for(var i=0;i<queuedTargets.length;i++){restoreStateOfTarget(queuedTargets[i]);}}}// the renderer. Such as when we're dispatching events or if third party
		// libraries need to call batchedUpdates. Eventually, this API will go away when
		// everything is batched by default. We'll then have a similar API to opt-out of
		// scheduled work and instead do synchronous work.
		// Defaults
		var batchedUpdatesImpl=function(fn,bookkeeping){return fn(bookkeeping);};var flushSyncImpl=function(){};var isInsideEventHandler=false;function finishEventHandler(){// Here we wait until all updates have propagated, which is important
		// when using controlled components within layers:
		// https://github.com/facebook/react/issues/1698
		// Then we restore state of any controlled component.
		var controlledComponentsHavePendingUpdates=needsStateRestore();if(controlledComponentsHavePendingUpdates){// If a controlled event was fired, we may need to restore the state of
		// the DOM node back to the controlled value. This is necessary when React
		// bails out of the update without touching the DOM.
		// TODO: Restore state in the microtask, after the discrete updates flush,
		// instead of early flushing them here.
		flushSyncImpl();restoreStateIfNeeded();}}function batchedUpdates(fn,a,b){if(isInsideEventHandler){// If we are currently inside another batch, we need to wait until it
		// fully completes before restoring state.
		return fn(a,b);}isInsideEventHandler=true;try{return batchedUpdatesImpl(fn,a,b);}finally{isInsideEventHandler=false;finishEventHandler();}}// TODO: Replace with flushSync
		function setBatchingImplementation(_batchedUpdatesImpl,_discreteUpdatesImpl,_flushSyncImpl){batchedUpdatesImpl=_batchedUpdatesImpl;flushSyncImpl=_flushSyncImpl;}function isInteractive(tag){return tag==='button'||tag==='input'||tag==='select'||tag==='textarea';}function shouldPreventMouseEvent(name,type,props){switch(name){case'onClick':case'onClickCapture':case'onDoubleClick':case'onDoubleClickCapture':case'onMouseDown':case'onMouseDownCapture':case'onMouseMove':case'onMouseMoveCapture':case'onMouseUp':case'onMouseUpCapture':case'onMouseEnter':return !!(props.disabled&&isInteractive(type));default:return false;}}/**
		 * @param {object} inst The instance, which is the source of events.
		 * @param {string} registrationName Name of listener (e.g. `onClick`).
		 * @return {?function} The stored callback.
		 */function getListener(inst,registrationName){var stateNode=inst.stateNode;if(stateNode===null){// Work in progress (ex: onload events in incremental mode).
		return null;}var props=getFiberCurrentPropsFromNode(stateNode);if(props===null){// Work in progress.
		return null;}var listener=props[registrationName];if(shouldPreventMouseEvent(registrationName,inst.type,props)){return null;}if(listener&&typeof listener!=='function'){throw new Error("Expected `"+registrationName+"` listener to be a function, instead got a value of `"+typeof listener+"` type.");}return listener;}var passiveBrowserEventsSupported=false;// Check if browser support events with passive listeners
		// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
		if(canUseDOM){try{var options={};// $FlowFixMe: Ignore Flow complaining about needing a value
		Object.defineProperty(options,'passive',{get:function(){passiveBrowserEventsSupported=true;}});window.addEventListener('test',options,options);window.removeEventListener('test',options,options);}catch(e){passiveBrowserEventsSupported=false;}}function invokeGuardedCallbackProd(name,func,context,a,b,c,d,e,f){var funcArgs=Array.prototype.slice.call(arguments,3);try{func.apply(context,funcArgs);}catch(error){this.onError(error);}}var invokeGuardedCallbackImpl=invokeGuardedCallbackProd;{// In DEV mode, we swap out invokeGuardedCallback for a special version
		// that plays more nicely with the browser's DevTools. The idea is to preserve
		// "Pause on exceptions" behavior. Because React wraps all user-provided
		// functions in invokeGuardedCallback, and the production version of
		// invokeGuardedCallback uses a try-catch, all user exceptions are treated
		// like caught exceptions, and the DevTools won't pause unless the developer
		// takes the extra step of enabling pause on caught exceptions. This is
		// unintuitive, though, because even though React has caught the error, from
		// the developer's perspective, the error is uncaught.
		//
		// To preserve the expected "Pause on exceptions" behavior, we don't use a
		// try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
		// DOM node, and call the user-provided callback from inside an event handler
		// for that fake event. If the callback throws, the error is "captured" using
		// a global event handler. But because the error happens in a different
		// event loop context, it does not interrupt the normal program flow.
		// Effectively, this gives us try-catch behavior without actually using
		// try-catch. Neat!
		// Check that the browser supports the APIs we need to implement our special
		// DEV version of invokeGuardedCallback
		if(typeof window!=='undefined'&&typeof window.dispatchEvent==='function'&&typeof document!=='undefined'&&typeof document.createEvent==='function'){var fakeNode=document.createElement('react');invokeGuardedCallbackImpl=function invokeGuardedCallbackDev(name,func,context,a,b,c,d,e,f){// If document doesn't exist we know for sure we will crash in this method
		// when we call document.createEvent(). However this can cause confusing
		// errors: https://github.com/facebook/create-react-app/issues/3482
		// So we preemptively throw with a better message instead.
		if(typeof document==='undefined'||document===null){throw new Error('The `document` global was defined when React was initialized, but is not '+'defined anymore. This can happen in a test environment if a component '+'schedules an update from an asynchronous callback, but the test has already '+'finished running. To solve this, you can either unmount the component at '+'the end of your test (and ensure that any asynchronous operations get '+'canceled in `componentWillUnmount`), or you can change the test itself '+'to be asynchronous.');}var evt=document.createEvent('Event');var didCall=false;// Keeps track of whether the user-provided callback threw an error. We
		// set this to true at the beginning, then set it to false right after
		// calling the function. If the function errors, `didError` will never be
		// set to false. This strategy works even if the browser is flaky and
		// fails to call our global error handler, because it doesn't rely on
		// the error event at all.
		var didError=true;// Keeps track of the value of window.event so that we can reset it
		// during the callback to let user code access window.event in the
		// browsers that support it.
		var windowEvent=window.event;// Keeps track of the descriptor of window.event to restore it after event
		// dispatching: https://github.com/facebook/react/issues/13688
		var windowEventDescriptor=Object.getOwnPropertyDescriptor(window,'event');function restoreAfterDispatch(){// We immediately remove the callback from event listeners so that
		// nested `invokeGuardedCallback` calls do not clash. Otherwise, a
		// nested call would trigger the fake event handlers of any call higher
		// in the stack.
		fakeNode.removeEventListener(evtType,callCallback,false);// We check for window.hasOwnProperty('event') to prevent the
		// window.event assignment in both IE <= 10 as they throw an error
		// "Member not found" in strict mode, and in Firefox which does not
		// support window.event.
		if(typeof window.event!=='undefined'&&window.hasOwnProperty('event')){window.event=windowEvent;}}// Create an event handler for our fake event. We will synchronously
		// dispatch our fake event using `dispatchEvent`. Inside the handler, we
		// call the user-provided callback.
		var funcArgs=Array.prototype.slice.call(arguments,3);function callCallback(){didCall=true;restoreAfterDispatch();func.apply(context,funcArgs);didError=false;}// Create a global error event handler. We use this to capture the value
		// that was thrown. It's possible that this error handler will fire more
		// than once; for example, if non-React code also calls `dispatchEvent`
		// and a handler for that event throws. We should be resilient to most of
		// those cases. Even if our error event handler fires more than once, the
		// last error event is always used. If the callback actually does error,
		// we know that the last error event is the correct one, because it's not
		// possible for anything else to have happened in between our callback
		// erroring and the code that follows the `dispatchEvent` call below. If
		// the callback doesn't error, but the error event was fired, we know to
		// ignore it because `didError` will be false, as described above.
		var error;// Use this to track whether the error event is ever called.
		var didSetError=false;var isCrossOriginError=false;function handleWindowError(event){error=event.error;didSetError=true;if(error===null&&event.colno===0&&event.lineno===0){isCrossOriginError=true;}if(event.defaultPrevented){// Some other error handler has prevented default.
		// Browsers silence the error report if this happens.
		// We'll remember this to later decide whether to log it or not.
		if(error!=null&&typeof error==='object'){try{error._suppressLogging=true;}catch(inner){// Ignore.
		}}}}// Create a fake event type.
		var evtType="react-"+(name?name:'invokeguardedcallback');// Attach our event handlers
		window.addEventListener('error',handleWindowError);fakeNode.addEventListener(evtType,callCallback,false);// Synchronously dispatch our fake event. If the user-provided function
		// errors, it will trigger our global error handler.
		evt.initEvent(evtType,false,false);fakeNode.dispatchEvent(evt);if(windowEventDescriptor){Object.defineProperty(window,'event',windowEventDescriptor);}if(didCall&&didError){if(!didSetError){// The callback errored, but the error event never fired.
		// eslint-disable-next-line react-internal/prod-error-codes
		error=new Error('An error was thrown inside one of your components, but React '+"doesn't know what it was. This is likely due to browser "+'flakiness. React does its best to preserve the "Pause on '+'exceptions" behavior of the DevTools, which requires some '+"DEV-mode only tricks. It's possible that these don't work in "+'your browser. Try triggering the error in production mode, '+'or switching to a modern browser. If you suspect that this is '+'actually an issue with React, please file an issue.');}else if(isCrossOriginError){// eslint-disable-next-line react-internal/prod-error-codes
		error=new Error("A cross-origin error was thrown. React doesn't have access to "+'the actual error object in development. '+'See https://reactjs.org/link/crossorigin-error for more information.');}this.onError(error);}// Remove our event listeners
		window.removeEventListener('error',handleWindowError);if(!didCall){// Something went really wrong, and our event was not dispatched.
		// https://github.com/facebook/react/issues/16734
		// https://github.com/facebook/react/issues/16585
		// Fall back to the production implementation.
		restoreAfterDispatch();return invokeGuardedCallbackProd.apply(this,arguments);}};}}var invokeGuardedCallbackImpl$1=invokeGuardedCallbackImpl;var hasError=false;var caughtError=null;// Used by event system to capture/rethrow the first error.
		var hasRethrowError=false;var rethrowError=null;var reporter={onError:function(error){hasError=true;caughtError=error;}};/**
		 * Call a function while guarding against errors that happens within it.
		 * Returns an error if it throws, otherwise null.
		 *
		 * In production, this is implemented using a try-catch. The reason we don't
		 * use a try-catch directly is so that we can swap out a different
		 * implementation in DEV mode.
		 *
		 * @param {String} name of the guard to use for logging or debugging
		 * @param {Function} func The function to invoke
		 * @param {*} context The context to use when calling the function
		 * @param {...*} args Arguments for function
		 */function invokeGuardedCallback(name,func,context,a,b,c,d,e,f){hasError=false;caughtError=null;invokeGuardedCallbackImpl$1.apply(reporter,arguments);}/**
		 * Same as invokeGuardedCallback, but instead of returning an error, it stores
		 * it in a global so it can be rethrown by `rethrowCaughtError` later.
		 * TODO: See if caughtError and rethrowError can be unified.
		 *
		 * @param {String} name of the guard to use for logging or debugging
		 * @param {Function} func The function to invoke
		 * @param {*} context The context to use when calling the function
		 * @param {...*} args Arguments for function
		 */function invokeGuardedCallbackAndCatchFirstError(name,func,context,a,b,c,d,e,f){invokeGuardedCallback.apply(this,arguments);if(hasError){var error=clearCaughtError();if(!hasRethrowError){hasRethrowError=true;rethrowError=error;}}}/**
		 * During execution of guarded functions we will capture the first error which
		 * we will rethrow to be handled by the top level error handler.
		 */function rethrowCaughtError(){if(hasRethrowError){var error=rethrowError;hasRethrowError=false;rethrowError=null;throw error;}}function hasCaughtError(){return hasError;}function clearCaughtError(){if(hasError){var error=caughtError;hasError=false;caughtError=null;return error;}else {throw new Error('clearCaughtError was called but no error was captured. This error '+'is likely caused by a bug in React. Please file an issue.');}}/**
		 * `ReactInstanceMap` maintains a mapping from a public facing stateful
		 * instance (key) and the internal representation (value). This allows public
		 * methods to accept the user facing instance as an argument and map them back
		 * to internal methods.
		 *
		 * Note that this module is currently shared and assumed to be stateless.
		 * If this becomes an actual Map, that will break.
		 */function get(key){return key._reactInternals;}function has(key){return key._reactInternals!==undefined;}function set(key,value){key._reactInternals=value;}// Don't change these two values. They're used by React Dev Tools.
		var NoFlags=/*                      */0;var PerformedWork=/*                */1;// You can change the rest (and add more).
		var Placement=/*                    */2;var Update=/*                       */4;var ChildDeletion=/*                */16;var ContentReset=/*                 */32;var Callback=/*                     */64;var DidCapture=/*                   */128;var ForceClientRender=/*            */256;var Ref=/*                          */512;var Snapshot=/*                     */1024;var Passive=/*                      */2048;var Hydrating=/*                    */4096;var Visibility=/*                   */8192;var StoreConsistency=/*             */16384;var LifecycleEffectMask=Passive|Update|Callback|Ref|Snapshot|StoreConsistency;// Union of all commit flags (flags with the lifetime of a particular commit)
		var HostEffectMask=/*               */32767;// These are not really side effects, but we still reuse this field.
		var Incomplete=/*                   */32768;var ShouldCapture=/*                */65536;var ForceUpdateForLegacySuspense=/* */131072;var Forked=/*                       */1048576;// Static tags describe aspects of a fiber that are not specific to a render,
		// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
		// This enables us to defer more work in the unmount case,
		// since we can defer traversing the tree during layout to look for Passive effects,
		// and instead rely on the static flag as a signal that there may be cleanup work.
		var RefStatic=/*                    */2097152;var LayoutStatic=/*                 */4194304;var PassiveStatic=/*                */8388608;// These flags allow us to traverse to fibers that have effects on mount
		// without traversing the entire tree after every commit for
		// double invoking
		var MountLayoutDev=/*               */16777216;var MountPassiveDev=/*              */33554432;// Groups of flags that are used in the commit phase to skip over trees that
		// don't contain effects, by checking subtreeFlags.
		var BeforeMutationMask=// TODO: Remove Update flag from before mutation phase by re-landing Visibility
		// flag logic (see #20043)
		Update|Snapshot|0;var MutationMask=Placement|Update|ChildDeletion|ContentReset|Ref|Hydrating|Visibility;var LayoutMask=Update|Callback|Ref|Visibility;// TODO: Split into PassiveMountMask and PassiveUnmountMask
		var PassiveMask=Passive|ChildDeletion;// Union of tags that don't get reset on clones.
		// This allows certain concepts to persist without recalculating them,
		// e.g. whether a subtree contains passive effects or portals.
		var StaticMask=LayoutStatic|PassiveStatic|RefStatic;var ReactCurrentOwner=ReactSharedInternals.ReactCurrentOwner;function getNearestMountedFiber(fiber){var node=fiber;var nearestMounted=fiber;if(!fiber.alternate){// If there is no alternate, this might be a new tree that isn't inserted
		// yet. If it is, then it will have a pending insertion effect on it.
		var nextNode=node;do{node=nextNode;if((node.flags&(Placement|Hydrating))!==NoFlags){// This is an insertion or in-progress hydration. The nearest possible
		// mounted fiber is the parent but we need to continue to figure out
		// if that one is still mounted.
		nearestMounted=node.return;}nextNode=node.return;}while(nextNode);}else {while(node.return){node=node.return;}}if(node.tag===HostRoot){// TODO: Check if this was a nested HostRoot when used with
		// renderContainerIntoSubtree.
		return nearestMounted;}// If we didn't hit the root, that means that we're in an disconnected tree
		// that has been unmounted.
		return null;}function getSuspenseInstanceFromFiber(fiber){if(fiber.tag===SuspenseComponent){var suspenseState=fiber.memoizedState;if(suspenseState===null){var current=fiber.alternate;if(current!==null){suspenseState=current.memoizedState;}}if(suspenseState!==null){return suspenseState.dehydrated;}}return null;}function getContainerFromFiber(fiber){return fiber.tag===HostRoot?fiber.stateNode.containerInfo:null;}function isFiberMounted(fiber){return getNearestMountedFiber(fiber)===fiber;}function isMounted(component){{var owner=ReactCurrentOwner.current;if(owner!==null&&owner.tag===ClassComponent){var ownerFiber=owner;var instance=ownerFiber.stateNode;if(!instance._warnedAboutRefsInRender){error('%s is accessing isMounted inside its render() function. '+'render() should be a pure function of props and state. It should '+'never access something that requires stale data from the previous '+'render, such as refs. Move this logic to componentDidMount and '+'componentDidUpdate instead.',getComponentNameFromFiber(ownerFiber)||'A component');}instance._warnedAboutRefsInRender=true;}}var fiber=get(component);if(!fiber){return false;}return getNearestMountedFiber(fiber)===fiber;}function assertIsMounted(fiber){if(getNearestMountedFiber(fiber)!==fiber){throw new Error('Unable to find node on an unmounted component.');}}function findCurrentFiberUsingSlowPath(fiber){var alternate=fiber.alternate;if(!alternate){// If there is no alternate, then we only need to check if it is mounted.
		var nearestMounted=getNearestMountedFiber(fiber);if(nearestMounted===null){throw new Error('Unable to find node on an unmounted component.');}if(nearestMounted!==fiber){return null;}return fiber;}// If we have two possible branches, we'll walk backwards up to the root
		// to see what path the root points to. On the way we may hit one of the
		// special cases and we'll deal with them.
		var a=fiber;var b=alternate;while(true){var parentA=a.return;if(parentA===null){// We're at the root.
		break;}var parentB=parentA.alternate;if(parentB===null){// There is no alternate. This is an unusual case. Currently, it only
		// happens when a Suspense component is hidden. An extra fragment fiber
		// is inserted in between the Suspense fiber and its children. Skip
		// over this extra fragment fiber and proceed to the next parent.
		var nextParent=parentA.return;if(nextParent!==null){a=b=nextParent;continue;}// If there's no parent, we're at the root.
		break;}// If both copies of the parent fiber point to the same child, we can
		// assume that the child is current. This happens when we bailout on low
		// priority: the bailed out fiber's child reuses the current child.
		if(parentA.child===parentB.child){var child=parentA.child;while(child){if(child===a){// We've determined that A is the current branch.
		assertIsMounted(parentA);return fiber;}if(child===b){// We've determined that B is the current branch.
		assertIsMounted(parentA);return alternate;}child=child.sibling;}// We should never have an alternate for any mounting node. So the only
		// way this could possibly happen is if this was unmounted, if at all.
		throw new Error('Unable to find node on an unmounted component.');}if(a.return!==b.return){// The return pointer of A and the return pointer of B point to different
		// fibers. We assume that return pointers never criss-cross, so A must
		// belong to the child set of A.return, and B must belong to the child
		// set of B.return.
		a=parentA;b=parentB;}else {// The return pointers point to the same fiber. We'll have to use the
		// default, slow path: scan the child sets of each parent alternate to see
		// which child belongs to which set.
		//
		// Search parent A's child set
		var didFindChild=false;var _child=parentA.child;while(_child){if(_child===a){didFindChild=true;a=parentA;b=parentB;break;}if(_child===b){didFindChild=true;b=parentA;a=parentB;break;}_child=_child.sibling;}if(!didFindChild){// Search parent B's child set
		_child=parentB.child;while(_child){if(_child===a){didFindChild=true;a=parentB;b=parentA;break;}if(_child===b){didFindChild=true;b=parentB;a=parentA;break;}_child=_child.sibling;}if(!didFindChild){throw new Error('Child was not found in either parent set. This indicates a bug '+'in React related to the return pointer. Please file an issue.');}}}if(a.alternate!==b){throw new Error("Return fibers should always be each others' alternates. "+'This error is likely caused by a bug in React. Please file an issue.');}}// If the root is not a host container, we're in a disconnected tree. I.e.
		// unmounted.
		if(a.tag!==HostRoot){throw new Error('Unable to find node on an unmounted component.');}if(a.stateNode.current===a){// We've determined that A is the current branch.
		return fiber;}// Otherwise B has to be current branch.
		return alternate;}function findCurrentHostFiber(parent){var currentParent=findCurrentFiberUsingSlowPath(parent);return currentParent!==null?findCurrentHostFiberImpl(currentParent):null;}function findCurrentHostFiberImpl(node){// Next we'll drill down this component to find the first HostComponent/Text.
		if(node.tag===HostComponent||node.tag===HostText){return node;}var child=node.child;while(child!==null){var match=findCurrentHostFiberImpl(child);if(match!==null){return match;}child=child.sibling;}return null;}function findCurrentHostFiberWithNoPortals(parent){var currentParent=findCurrentFiberUsingSlowPath(parent);return currentParent!==null?findCurrentHostFiberWithNoPortalsImpl(currentParent):null;}function findCurrentHostFiberWithNoPortalsImpl(node){// Next we'll drill down this component to find the first HostComponent/Text.
		if(node.tag===HostComponent||node.tag===HostText){return node;}var child=node.child;while(child!==null){if(child.tag!==HostPortal){var match=findCurrentHostFiberWithNoPortalsImpl(child);if(match!==null){return match;}}child=child.sibling;}return null;}// This module only exists as an ESM wrapper around the external CommonJS
		var scheduleCallback=Scheduler.unstable_scheduleCallback;var cancelCallback=Scheduler.unstable_cancelCallback;var shouldYield=Scheduler.unstable_shouldYield;var requestPaint=Scheduler.unstable_requestPaint;var now=Scheduler.unstable_now;var getCurrentPriorityLevel=Scheduler.unstable_getCurrentPriorityLevel;var ImmediatePriority=Scheduler.unstable_ImmediatePriority;var UserBlockingPriority=Scheduler.unstable_UserBlockingPriority;var NormalPriority=Scheduler.unstable_NormalPriority;var LowPriority=Scheduler.unstable_LowPriority;var IdlePriority=Scheduler.unstable_IdlePriority;// this doesn't actually exist on the scheduler, but it *does*
		// on scheduler/unstable_mock, which we'll need for internal testing
		var unstable_yieldValue=Scheduler.unstable_yieldValue;var unstable_setDisableYieldValue=Scheduler.unstable_setDisableYieldValue;var rendererID=null;var injectedHook=null;var injectedProfilingHooks=null;var hasLoggedError=false;var isDevToolsPresent=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined';function injectInternals(internals){if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__==='undefined'){// No DevTools
		return false;}var hook=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(hook.isDisabled){// This isn't a real property on the hook, but it can be set to opt out
		// of DevTools integration and associated warnings and logs.
		// https://github.com/facebook/react/issues/3877
		return true;}if(!hook.supportsFiber){{error('The installed version of React DevTools is too old and will not work '+'with the current version of React. Please update React DevTools. '+'https://reactjs.org/link/react-devtools');}// DevTools exists, even though it doesn't support Fiber.
		return true;}try{if(enableSchedulingProfiler){// Conditionally inject these hooks only if Timeline profiler is supported by this build.
		// This gives DevTools a way to feature detect that isn't tied to version number
		// (since profiling and timeline are controlled by different feature flags).
		internals=assign({},internals,{getLaneLabelMap:getLaneLabelMap,injectProfilingHooks:injectProfilingHooks});}rendererID=hook.inject(internals);// We have successfully injected, so now it is safe to set up hooks.
		injectedHook=hook;}catch(err){// Catch all errors because it is unsafe to throw during initialization.
		{error('React instrumentation encountered an error: %s.',err);}}if(hook.checkDCE){// This is the real DevTools.
		return true;}else {// This is likely a hook installed by Fast Refresh runtime.
		return false;}}function onScheduleRoot(root,children){{if(injectedHook&&typeof injectedHook.onScheduleFiberRoot==='function'){try{injectedHook.onScheduleFiberRoot(rendererID,root,children);}catch(err){if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onCommitRoot(root,eventPriority){if(injectedHook&&typeof injectedHook.onCommitFiberRoot==='function'){try{var didError=(root.current.flags&DidCapture)===DidCapture;if(enableProfilerTimer){var schedulerPriority;switch(eventPriority){case DiscreteEventPriority:schedulerPriority=ImmediatePriority;break;case ContinuousEventPriority:schedulerPriority=UserBlockingPriority;break;case DefaultEventPriority:schedulerPriority=NormalPriority;break;case IdleEventPriority:schedulerPriority=IdlePriority;break;default:schedulerPriority=NormalPriority;break;}injectedHook.onCommitFiberRoot(rendererID,root,schedulerPriority,didError);}}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onPostCommitRoot(root){if(injectedHook&&typeof injectedHook.onPostCommitFiberRoot==='function'){try{injectedHook.onPostCommitFiberRoot(rendererID,root);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onCommitUnmount(fiber){if(injectedHook&&typeof injectedHook.onCommitFiberUnmount==='function'){try{injectedHook.onCommitFiberUnmount(rendererID,fiber);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function setIsStrictModeForDevtools(newIsStrictMode){{if(typeof unstable_yieldValue==='function'){// We're in a test because Scheduler.unstable_yieldValue only exists
		// in SchedulerMock. To reduce the noise in strict mode tests,
		// suppress warnings and disable scheduler yielding during the double render
		unstable_setDisableYieldValue(newIsStrictMode);setSuppressWarning(newIsStrictMode);}if(injectedHook&&typeof injectedHook.setStrictMode==='function'){try{injectedHook.setStrictMode(rendererID,newIsStrictMode);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}}// Profiler API hooks
		function injectProfilingHooks(profilingHooks){injectedProfilingHooks=profilingHooks;}function getLaneLabelMap(){{var map=new Map();var lane=1;for(var index=0;index<TotalLanes;index++){var label=getLabelForLane(lane);map.set(lane,label);lane*=2;}return map;}}function markCommitStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markCommitStarted==='function'){injectedProfilingHooks.markCommitStarted(lanes);}}}function markCommitStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markCommitStopped==='function'){injectedProfilingHooks.markCommitStopped();}}}function markComponentRenderStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentRenderStarted==='function'){injectedProfilingHooks.markComponentRenderStarted(fiber);}}}function markComponentRenderStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentRenderStopped==='function'){injectedProfilingHooks.markComponentRenderStopped();}}}function markComponentPassiveEffectMountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted==='function'){injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);}}}function markComponentPassiveEffectMountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped==='function'){injectedProfilingHooks.markComponentPassiveEffectMountStopped();}}}function markComponentPassiveEffectUnmountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted==='function'){injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);}}}function markComponentPassiveEffectUnmountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped==='function'){injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();}}}function markComponentLayoutEffectMountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted==='function'){injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);}}}function markComponentLayoutEffectMountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped==='function'){injectedProfilingHooks.markComponentLayoutEffectMountStopped();}}}function markComponentLayoutEffectUnmountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted==='function'){injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);}}}function markComponentLayoutEffectUnmountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped==='function'){injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();}}}function markComponentErrored(fiber,thrownValue,lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentErrored==='function'){injectedProfilingHooks.markComponentErrored(fiber,thrownValue,lanes);}}}function markComponentSuspended(fiber,wakeable,lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentSuspended==='function'){injectedProfilingHooks.markComponentSuspended(fiber,wakeable,lanes);}}}function markLayoutEffectsStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markLayoutEffectsStarted==='function'){injectedProfilingHooks.markLayoutEffectsStarted(lanes);}}}function markLayoutEffectsStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markLayoutEffectsStopped==='function'){injectedProfilingHooks.markLayoutEffectsStopped();}}}function markPassiveEffectsStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markPassiveEffectsStarted==='function'){injectedProfilingHooks.markPassiveEffectsStarted(lanes);}}}function markPassiveEffectsStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markPassiveEffectsStopped==='function'){injectedProfilingHooks.markPassiveEffectsStopped();}}}function markRenderStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderStarted==='function'){injectedProfilingHooks.markRenderStarted(lanes);}}}function markRenderYielded(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderYielded==='function'){injectedProfilingHooks.markRenderYielded();}}}function markRenderStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderStopped==='function'){injectedProfilingHooks.markRenderStopped();}}}function markRenderScheduled(lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderScheduled==='function'){injectedProfilingHooks.markRenderScheduled(lane);}}}function markForceUpdateScheduled(fiber,lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markForceUpdateScheduled==='function'){injectedProfilingHooks.markForceUpdateScheduled(fiber,lane);}}}function markStateUpdateScheduled(fiber,lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markStateUpdateScheduled==='function'){injectedProfilingHooks.markStateUpdateScheduled(fiber,lane);}}}var NoMode=/*                         */0;// TODO: Remove ConcurrentMode by reading from the root tag instead
		var ConcurrentMode=/*                 */1;var ProfileMode=/*                    */2;var StrictLegacyMode=/*               */8;var StrictEffectsMode=/*              */16;// TODO: This is pretty well supported by browsers. Maybe we can drop it.
		var clz32=Math.clz32?Math.clz32:clz32Fallback;// Count leading zeros.
		// Based on:
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
		var log=Math.log;var LN2=Math.LN2;function clz32Fallback(x){var asUint=x>>>0;if(asUint===0){return 32;}return 31-(log(asUint)/LN2|0)|0;}// If those values are changed that package should be rebuilt and redeployed.
		var TotalLanes=31;var NoLanes=/*                        */0;var NoLane=/*                          */0;var SyncLane=/*                        */1;var InputContinuousHydrationLane=/*    */2;var InputContinuousLane=/*             */4;var DefaultHydrationLane=/*            */8;var DefaultLane=/*                     */16;var TransitionHydrationLane=/*                */32;var TransitionLanes=/*                       */4194240;var TransitionLane1=/*                        */64;var TransitionLane2=/*                        */128;var TransitionLane3=/*                        */256;var TransitionLane4=/*                        */512;var TransitionLane5=/*                        */1024;var TransitionLane6=/*                        */2048;var TransitionLane7=/*                        */4096;var TransitionLane8=/*                        */8192;var TransitionLane9=/*                        */16384;var TransitionLane10=/*                       */32768;var TransitionLane11=/*                       */65536;var TransitionLane12=/*                       */131072;var TransitionLane13=/*                       */262144;var TransitionLane14=/*                       */524288;var TransitionLane15=/*                       */1048576;var TransitionLane16=/*                       */2097152;var RetryLanes=/*                            */130023424;var RetryLane1=/*                             */4194304;var RetryLane2=/*                             */8388608;var RetryLane3=/*                             */16777216;var RetryLane4=/*                             */33554432;var RetryLane5=/*                             */67108864;var SomeRetryLane=RetryLane1;var SelectiveHydrationLane=/*          */134217728;var NonIdleLanes=/*                          */268435455;var IdleHydrationLane=/*               */268435456;var IdleLane=/*                        */536870912;var OffscreenLane=/*                   */1073741824;// This function is used for the experimental timeline (react-devtools-timeline)
		// It should be kept in sync with the Lanes values above.
		function getLabelForLane(lane){{if(lane&SyncLane){return 'Sync';}if(lane&InputContinuousHydrationLane){return 'InputContinuousHydration';}if(lane&InputContinuousLane){return 'InputContinuous';}if(lane&DefaultHydrationLane){return 'DefaultHydration';}if(lane&DefaultLane){return 'Default';}if(lane&TransitionHydrationLane){return 'TransitionHydration';}if(lane&TransitionLanes){return 'Transition';}if(lane&RetryLanes){return 'Retry';}if(lane&SelectiveHydrationLane){return 'SelectiveHydration';}if(lane&IdleHydrationLane){return 'IdleHydration';}if(lane&IdleLane){return 'Idle';}if(lane&OffscreenLane){return 'Offscreen';}}}var NoTimestamp=-1;var nextTransitionLane=TransitionLane1;var nextRetryLane=RetryLane1;function getHighestPriorityLanes(lanes){switch(getHighestPriorityLane(lanes)){case SyncLane:return SyncLane;case InputContinuousHydrationLane:return InputContinuousHydrationLane;case InputContinuousLane:return InputContinuousLane;case DefaultHydrationLane:return DefaultHydrationLane;case DefaultLane:return DefaultLane;case TransitionHydrationLane:return TransitionHydrationLane;case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:return lanes&TransitionLanes;case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:return lanes&RetryLanes;case SelectiveHydrationLane:return SelectiveHydrationLane;case IdleHydrationLane:return IdleHydrationLane;case IdleLane:return IdleLane;case OffscreenLane:return OffscreenLane;default:{error('Should have found matching lanes. This is a bug in React.');}// This shouldn't be reachable, but as a fallback, return the entire bitmask.
		return lanes;}}function getNextLanes(root,wipLanes){// Early bailout if there's no pending work left.
		var pendingLanes=root.pendingLanes;if(pendingLanes===NoLanes){return NoLanes;}var nextLanes=NoLanes;var suspendedLanes=root.suspendedLanes;var pingedLanes=root.pingedLanes;// Do not work on any idle work until all the non-idle work has finished,
		// even if the work is suspended.
		var nonIdlePendingLanes=pendingLanes&NonIdleLanes;if(nonIdlePendingLanes!==NoLanes){var nonIdleUnblockedLanes=nonIdlePendingLanes&~suspendedLanes;if(nonIdleUnblockedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(nonIdleUnblockedLanes);}else {var nonIdlePingedLanes=nonIdlePendingLanes&pingedLanes;if(nonIdlePingedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(nonIdlePingedLanes);}}}else {// The only remaining work is Idle.
		var unblockedLanes=pendingLanes&~suspendedLanes;if(unblockedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(unblockedLanes);}else {if(pingedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(pingedLanes);}}}if(nextLanes===NoLanes){// This should only be reachable if we're suspended
		// TODO: Consider warning in this path if a fallback timer is not scheduled.
		return NoLanes;}// If we're already in the middle of a render, switching lanes will interrupt
		// it and we'll lose our progress. We should only do this if the new lanes are
		// higher priority.
		if(wipLanes!==NoLanes&&wipLanes!==nextLanes&&// If we already suspended with a delay, then interrupting is fine. Don't
		// bother waiting until the root is complete.
		(wipLanes&suspendedLanes)===NoLanes){var nextLane=getHighestPriorityLane(nextLanes);var wipLane=getHighestPriorityLane(wipLanes);if(// Tests whether the next lane is equal or lower priority than the wip
		// one. This works because the bits decrease in priority as you go left.
		nextLane>=wipLane||// Default priority updates should not interrupt transition updates. The
		// only difference between default updates and transition updates is that
		// default updates do not support refresh transitions.
		nextLane===DefaultLane&&(wipLane&TransitionLanes)!==NoLanes){// Keep working on the existing in-progress tree. Do not interrupt.
		return wipLanes;}}if((nextLanes&InputContinuousLane)!==NoLanes){// When updates are sync by default, we entangle continuous priority updates
		// and default updates, so they render in the same batch. The only reason
		// they use separate lanes is because continuous updates should interrupt
		// transitions, but default updates should not.
		nextLanes|=pendingLanes&DefaultLane;}// Check for entangled lanes and add them to the batch.
		//
		// A lane is said to be entangled with another when it's not allowed to render
		// in a batch that does not also include the other lane. Typically we do this
		// when multiple updates have the same source, and we only want to respond to
		// the most recent event from that source.
		//
		// Note that we apply entanglements *after* checking for partial work above.
		// This means that if a lane is entangled during an interleaved event while
		// it's already rendering, we won't interrupt it. This is intentional, since
		// entanglement is usually "best effort": we'll try our best to render the
		// lanes in the same batch, but it's not worth throwing out partially
		// completed work in order to do it.
		// TODO: Reconsider this. The counter-argument is that the partial work
		// represents an intermediate state, which we don't want to show to the user.
		// And by spending extra time finishing it, we're increasing the amount of
		// time it takes to show the final state, which is what they are actually
		// waiting for.
		//
		// For those exceptions where entanglement is semantically important, like
		// useMutableSource, we should ensure that there is no partial work at the
		// time we apply the entanglement.
		var entangledLanes=root.entangledLanes;if(entangledLanes!==NoLanes){var entanglements=root.entanglements;var lanes=nextLanes&entangledLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;nextLanes|=entanglements[index];lanes&=~lane;}}return nextLanes;}function getMostRecentEventTime(root,lanes){var eventTimes=root.eventTimes;var mostRecentEventTime=NoTimestamp;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;var eventTime=eventTimes[index];if(eventTime>mostRecentEventTime){mostRecentEventTime=eventTime;}lanes&=~lane;}return mostRecentEventTime;}function computeExpirationTime(lane,currentTime){switch(lane){case SyncLane:case InputContinuousHydrationLane:case InputContinuousLane:// User interactions should expire slightly more quickly.
		//
		// NOTE: This is set to the corresponding constant as in Scheduler.js.
		// When we made it larger, a product metric in www regressed, suggesting
		// there's a user interaction that's being starved by a series of
		// synchronous updates. If that theory is correct, the proper solution is
		// to fix the starvation. However, this scenario supports the idea that
		// expiration times are an important safeguard when starvation
		// does happen.
		return currentTime+250;case DefaultHydrationLane:case DefaultLane:case TransitionHydrationLane:case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:return currentTime+5000;case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:// TODO: Retries should be allowed to expire if they are CPU bound for
		// too long, but when I made this change it caused a spike in browser
		// crashes. There must be some other underlying bug; not super urgent but
		// ideally should figure out why and fix it. Unfortunately we don't have
		// a repro for the crashes, only detected via production metrics.
		return NoTimestamp;case SelectiveHydrationLane:case IdleHydrationLane:case IdleLane:case OffscreenLane:// Anything idle priority or lower should never expire.
		return NoTimestamp;default:{error('Should have found matching lanes. This is a bug in React.');}return NoTimestamp;}}function markStarvedLanesAsExpired(root,currentTime){// TODO: This gets called every time we yield. We can optimize by storing
		// the earliest expiration time on the root. Then use that to quickly bail out
		// of this function.
		var pendingLanes=root.pendingLanes;var suspendedLanes=root.suspendedLanes;var pingedLanes=root.pingedLanes;var expirationTimes=root.expirationTimes;// Iterate through the pending lanes and check if we've reached their
		// expiration time. If so, we'll assume the update is being starved and mark
		// it as expired to force it to finish.
		var lanes=pendingLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;var expirationTime=expirationTimes[index];if(expirationTime===NoTimestamp){// Found a pending lane with no expiration time. If it's not suspended, or
		// if it's pinged, assume it's CPU-bound. Compute a new expiration time
		// using the current time.
		if((lane&suspendedLanes)===NoLanes||(lane&pingedLanes)!==NoLanes){// Assumes timestamps are monotonically increasing.
		expirationTimes[index]=computeExpirationTime(lane,currentTime);}}else if(expirationTime<=currentTime){// This lane expired
		root.expiredLanes|=lane;}lanes&=~lane;}}// This returns the highest priority pending lanes regardless of whether they
		// are suspended.
		function getHighestPriorityPendingLanes(root){return getHighestPriorityLanes(root.pendingLanes);}function getLanesToRetrySynchronouslyOnError(root){var everythingButOffscreen=root.pendingLanes&~OffscreenLane;if(everythingButOffscreen!==NoLanes){return everythingButOffscreen;}if(everythingButOffscreen&OffscreenLane){return OffscreenLane;}return NoLanes;}function includesSyncLane(lanes){return (lanes&SyncLane)!==NoLanes;}function includesNonIdleWork(lanes){return (lanes&NonIdleLanes)!==NoLanes;}function includesOnlyRetries(lanes){return (lanes&RetryLanes)===lanes;}function includesOnlyNonUrgentLanes(lanes){var UrgentLanes=SyncLane|InputContinuousLane|DefaultLane;return (lanes&UrgentLanes)===NoLanes;}function includesOnlyTransitions(lanes){return (lanes&TransitionLanes)===lanes;}function includesBlockingLane(root,lanes){var SyncDefaultLanes=InputContinuousHydrationLane|InputContinuousLane|DefaultHydrationLane|DefaultLane;return (lanes&SyncDefaultLanes)!==NoLanes;}function includesExpiredLane(root,lanes){// This is a separate check from includesBlockingLane because a lane can
		// expire after a render has already started.
		return (lanes&root.expiredLanes)!==NoLanes;}function isTransitionLane(lane){return (lane&TransitionLanes)!==NoLanes;}function claimNextTransitionLane(){// Cycle through the lanes, assigning each new transition to the next lane.
		// In most cases, this means every transition gets its own lane, until we
		// run out of lanes and cycle back to the beginning.
		var lane=nextTransitionLane;nextTransitionLane<<=1;if((nextTransitionLane&TransitionLanes)===NoLanes){nextTransitionLane=TransitionLane1;}return lane;}function claimNextRetryLane(){var lane=nextRetryLane;nextRetryLane<<=1;if((nextRetryLane&RetryLanes)===NoLanes){nextRetryLane=RetryLane1;}return lane;}function getHighestPriorityLane(lanes){return lanes&-lanes;}function pickArbitraryLane(lanes){// This wrapper function gets inlined. Only exists so to communicate that it
		// doesn't matter which bit is selected; you can pick any bit without
		// affecting the algorithms where its used. Here I'm using
		// getHighestPriorityLane because it requires the fewest operations.
		return getHighestPriorityLane(lanes);}function pickArbitraryLaneIndex(lanes){return 31-clz32(lanes);}function laneToIndex(lane){return pickArbitraryLaneIndex(lane);}function includesSomeLane(a,b){return (a&b)!==NoLanes;}function isSubsetOfLanes(set,subset){return (set&subset)===subset;}function mergeLanes(a,b){return a|b;}function removeLanes(set,subset){return set&~subset;}function intersectLanes(a,b){return a&b;}// Seems redundant, but it changes the type from a single lane (used for
		// updates) to a group of lanes (used for flushing work).
		function laneToLanes(lane){return lane;}function higherPriorityLane(a,b){// This works because the bit ranges decrease in priority as you go left.
		return a!==NoLane&&a<b?a:b;}function createLaneMap(initial){// Intentionally pushing one by one.
		// https://v8.dev/blog/elements-kinds#avoid-creating-holes
		var laneMap=[];for(var i=0;i<TotalLanes;i++){laneMap.push(initial);}return laneMap;}function markRootUpdated(root,updateLane,eventTime){root.pendingLanes|=updateLane;// If there are any suspended transitions, it's possible this new update
		// could unblock them. Clear the suspended lanes so that we can try rendering
		// them again.
		//
		// TODO: We really only need to unsuspend only lanes that are in the
		// `subtreeLanes` of the updated fiber, or the update lanes of the return
		// path. This would exclude suspended updates in an unrelated sibling tree,
		// since there's no way for this update to unblock it.
		//
		// We don't do this if the incoming update is idle, because we never process
		// idle updates until after all the regular updates have finished; there's no
		// way it could unblock a transition.
		if(updateLane!==IdleLane){root.suspendedLanes=NoLanes;root.pingedLanes=NoLanes;}var eventTimes=root.eventTimes;var index=laneToIndex(updateLane);// We can always overwrite an existing timestamp because we prefer the most
		// recent event, and we assume time is monotonically increasing.
		eventTimes[index]=eventTime;}function markRootSuspended(root,suspendedLanes){root.suspendedLanes|=suspendedLanes;root.pingedLanes&=~suspendedLanes;// The suspended lanes are no longer CPU-bound. Clear their expiration times.
		var expirationTimes=root.expirationTimes;var lanes=suspendedLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;expirationTimes[index]=NoTimestamp;lanes&=~lane;}}function markRootPinged(root,pingedLanes,eventTime){root.pingedLanes|=root.suspendedLanes&pingedLanes;}function markRootFinished(root,remainingLanes){var noLongerPendingLanes=root.pendingLanes&~remainingLanes;root.pendingLanes=remainingLanes;// Let's try everything again
		root.suspendedLanes=NoLanes;root.pingedLanes=NoLanes;root.expiredLanes&=remainingLanes;root.mutableReadLanes&=remainingLanes;root.entangledLanes&=remainingLanes;var entanglements=root.entanglements;var eventTimes=root.eventTimes;var expirationTimes=root.expirationTimes;// Clear the lanes that no longer have pending work
		var lanes=noLongerPendingLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;entanglements[index]=NoLanes;eventTimes[index]=NoTimestamp;expirationTimes[index]=NoTimestamp;lanes&=~lane;}}function markRootEntangled(root,entangledLanes){// In addition to entangling each of the given lanes with each other, we also
		// have to consider _transitive_ entanglements. For each lane that is already
		// entangled with *any* of the given lanes, that lane is now transitively
		// entangled with *all* the given lanes.
		//
		// Translated: If C is entangled with A, then entangling A with B also
		// entangles C with B.
		//
		// If this is hard to grasp, it might help to intentionally break this
		// function and look at the tests that fail in ReactTransition-test.js. Try
		// commenting out one of the conditions below.
		var rootEntangledLanes=root.entangledLanes|=entangledLanes;var entanglements=root.entanglements;var lanes=rootEntangledLanes;while(lanes){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;if(// Is this one of the newly entangled lanes?
		lane&entangledLanes|// Is this lane transitively entangled with the newly entangled lanes?
		entanglements[index]&entangledLanes){entanglements[index]|=entangledLanes;}lanes&=~lane;}}function getBumpedLaneForHydration(root,renderLanes){var renderLane=getHighestPriorityLane(renderLanes);var lane;switch(renderLane){case InputContinuousLane:lane=InputContinuousHydrationLane;break;case DefaultLane:lane=DefaultHydrationLane;break;case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:lane=TransitionHydrationLane;break;case IdleLane:lane=IdleHydrationLane;break;default:// Everything else is already either a hydration lane, or shouldn't
		// be retried at a hydration lane.
		lane=NoLane;break;}// Check if the lane we chose is suspended. If so, that indicates that we
		// already attempted and failed to hydrate at that level. Also check if we're
		// already rendering that lane, which is rare but could happen.
		if((lane&(root.suspendedLanes|renderLanes))!==NoLane){// Give up trying to hydrate and fall back to client render.
		return NoLane;}return lane;}function addFiberToLanesMap(root,fiber,lanes){if(!isDevToolsPresent){return;}var pendingUpdatersLaneMap=root.pendingUpdatersLaneMap;while(lanes>0){var index=laneToIndex(lanes);var lane=1<<index;var updaters=pendingUpdatersLaneMap[index];updaters.add(fiber);lanes&=~lane;}}function movePendingFibersToMemoized(root,lanes){if(!isDevToolsPresent){return;}var pendingUpdatersLaneMap=root.pendingUpdatersLaneMap;var memoizedUpdaters=root.memoizedUpdaters;while(lanes>0){var index=laneToIndex(lanes);var lane=1<<index;var updaters=pendingUpdatersLaneMap[index];if(updaters.size>0){updaters.forEach(function(fiber){var alternate=fiber.alternate;if(alternate===null||!memoizedUpdaters.has(alternate)){memoizedUpdaters.add(fiber);}});updaters.clear();}lanes&=~lane;}}function getTransitionsForLanes(root,lanes){{return null;}}var DiscreteEventPriority=SyncLane;var ContinuousEventPriority=InputContinuousLane;var DefaultEventPriority=DefaultLane;var IdleEventPriority=IdleLane;var currentUpdatePriority=NoLane;function getCurrentUpdatePriority(){return currentUpdatePriority;}function setCurrentUpdatePriority(newPriority){currentUpdatePriority=newPriority;}function runWithPriority(priority,fn){var previousPriority=currentUpdatePriority;try{currentUpdatePriority=priority;return fn();}finally{currentUpdatePriority=previousPriority;}}function higherEventPriority(a,b){return a!==0&&a<b?a:b;}function lowerEventPriority(a,b){return a===0||a>b?a:b;}function isHigherEventPriority(a,b){return a!==0&&a<b;}function lanesToEventPriority(lanes){var lane=getHighestPriorityLane(lanes);if(!isHigherEventPriority(DiscreteEventPriority,lane)){return DiscreteEventPriority;}if(!isHigherEventPriority(ContinuousEventPriority,lane)){return ContinuousEventPriority;}if(includesNonIdleWork(lane)){return DefaultEventPriority;}return IdleEventPriority;}// This is imported by the event replaying implementation in React DOM. It's
		// in a separate file to break a circular dependency between the renderer and
		// the reconciler.
		function isRootDehydrated(root){var currentState=root.current.memoizedState;return currentState.isDehydrated;}var _attemptSynchronousHydration;function setAttemptSynchronousHydration(fn){_attemptSynchronousHydration=fn;}function attemptSynchronousHydration(fiber){_attemptSynchronousHydration(fiber);}var attemptContinuousHydration;function setAttemptContinuousHydration(fn){attemptContinuousHydration=fn;}var attemptHydrationAtCurrentPriority;function setAttemptHydrationAtCurrentPriority(fn){attemptHydrationAtCurrentPriority=fn;}var getCurrentUpdatePriority$1;function setGetCurrentUpdatePriority(fn){getCurrentUpdatePriority$1=fn;}var attemptHydrationAtPriority;function setAttemptHydrationAtPriority(fn){attemptHydrationAtPriority=fn;}// TODO: Upgrade this definition once we're on a newer version of Flow that
		// has this definition built-in.
		var hasScheduledReplayAttempt=false;// The queue of discrete events to be replayed.
		var queuedDiscreteEvents=[];// Indicates if any continuous event targets are non-null for early bailout.
		// if the last target was dehydrated.
		var queuedFocus=null;var queuedDrag=null;var queuedMouse=null;// For pointer events there can be one latest event per pointerId.
		var queuedPointers=new Map();var queuedPointerCaptures=new Map();// We could consider replaying selectionchange and touchmoves too.
		var queuedExplicitHydrationTargets=[];var discreteReplayableEvents=['mousedown','mouseup','touchcancel','touchend','touchstart','auxclick','dblclick','pointercancel','pointerdown','pointerup','dragend','dragstart','drop','compositionend','compositionstart','keydown','keypress','keyup','input','textInput',// Intentionally camelCase
		'copy','cut','paste','click','change','contextmenu','reset','submit'];function isDiscreteEventThatRequiresHydration(eventType){return discreteReplayableEvents.indexOf(eventType)>-1;}function createQueuedReplayableEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent){return {blockedOn:blockedOn,domEventName:domEventName,eventSystemFlags:eventSystemFlags,nativeEvent:nativeEvent,targetContainers:[targetContainer]};}function clearIfContinuousEvent(domEventName,nativeEvent){switch(domEventName){case'focusin':case'focusout':queuedFocus=null;break;case'dragenter':case'dragleave':queuedDrag=null;break;case'mouseover':case'mouseout':queuedMouse=null;break;case'pointerover':case'pointerout':{var pointerId=nativeEvent.pointerId;queuedPointers.delete(pointerId);break;}case'gotpointercapture':case'lostpointercapture':{var _pointerId=nativeEvent.pointerId;queuedPointerCaptures.delete(_pointerId);break;}}}function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent,blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent){if(existingQueuedEvent===null||existingQueuedEvent.nativeEvent!==nativeEvent){var queuedEvent=createQueuedReplayableEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent);if(blockedOn!==null){var _fiber2=getInstanceFromNode(blockedOn);if(_fiber2!==null){// Attempt to increase the priority of this target.
		attemptContinuousHydration(_fiber2);}}return queuedEvent;}// If we have already queued this exact event, then it's because
		// the different event systems have different DOM event listeners.
		// We can accumulate the flags, and the targetContainers, and
		// store a single event to be replayed.
		existingQueuedEvent.eventSystemFlags|=eventSystemFlags;var targetContainers=existingQueuedEvent.targetContainers;if(targetContainer!==null&&targetContainers.indexOf(targetContainer)===-1){targetContainers.push(targetContainer);}return existingQueuedEvent;}function queueIfContinuousEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent){// These set relatedTarget to null because the replayed event will be treated as if we
		// moved from outside the window (no target) onto the target once it hydrates.
		// Instead of mutating we could clone the event.
		switch(domEventName){case'focusin':{var focusEvent=nativeEvent;queuedFocus=accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus,blockedOn,domEventName,eventSystemFlags,targetContainer,focusEvent);return true;}case'dragenter':{var dragEvent=nativeEvent;queuedDrag=accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag,blockedOn,domEventName,eventSystemFlags,targetContainer,dragEvent);return true;}case'mouseover':{var mouseEvent=nativeEvent;queuedMouse=accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse,blockedOn,domEventName,eventSystemFlags,targetContainer,mouseEvent);return true;}case'pointerover':{var pointerEvent=nativeEvent;var pointerId=pointerEvent.pointerId;queuedPointers.set(pointerId,accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId)||null,blockedOn,domEventName,eventSystemFlags,targetContainer,pointerEvent));return true;}case'gotpointercapture':{var _pointerEvent=nativeEvent;var _pointerId2=_pointerEvent.pointerId;queuedPointerCaptures.set(_pointerId2,accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2)||null,blockedOn,domEventName,eventSystemFlags,targetContainer,_pointerEvent));return true;}}return false;}// Check if this target is unblocked. Returns true if it's unblocked.
		function attemptExplicitHydrationTarget(queuedTarget){// TODO: This function shares a lot of logic with findInstanceBlockingEvent.
		// Try to unify them. It's a bit tricky since it would require two return
		// values.
		var targetInst=getClosestInstanceFromNode(queuedTarget.target);if(targetInst!==null){var nearestMounted=getNearestMountedFiber(targetInst);if(nearestMounted!==null){var tag=nearestMounted.tag;if(tag===SuspenseComponent){var instance=getSuspenseInstanceFromFiber(nearestMounted);if(instance!==null){// We're blocked on hydrating this boundary.
		// Increase its priority.
		queuedTarget.blockedOn=instance;attemptHydrationAtPriority(queuedTarget.priority,function(){attemptHydrationAtCurrentPriority(nearestMounted);});return;}}else if(tag===HostRoot){var root=nearestMounted.stateNode;if(isRootDehydrated(root)){queuedTarget.blockedOn=getContainerFromFiber(nearestMounted);// We don't currently have a way to increase the priority of
		// a root other than sync.
		return;}}}}queuedTarget.blockedOn=null;}function queueExplicitHydrationTarget(target){// TODO: This will read the priority if it's dispatched by the React
		// event system but not native events. Should read window.event.type, like
		// we do for updates (getCurrentEventPriority).
		var updatePriority=getCurrentUpdatePriority$1();var queuedTarget={blockedOn:null,target:target,priority:updatePriority};var i=0;for(;i<queuedExplicitHydrationTargets.length;i++){// Stop once we hit the first target with lower priority than
		if(!isHigherEventPriority(updatePriority,queuedExplicitHydrationTargets[i].priority)){break;}}queuedExplicitHydrationTargets.splice(i,0,queuedTarget);if(i===0){attemptExplicitHydrationTarget(queuedTarget);}}function attemptReplayContinuousQueuedEvent(queuedEvent){if(queuedEvent.blockedOn!==null){return false;}var targetContainers=queuedEvent.targetContainers;while(targetContainers.length>0){var targetContainer=targetContainers[0];var nextBlockedOn=findInstanceBlockingEvent(queuedEvent.domEventName,queuedEvent.eventSystemFlags,targetContainer,queuedEvent.nativeEvent);if(nextBlockedOn===null){{var nativeEvent=queuedEvent.nativeEvent;var nativeEventClone=new nativeEvent.constructor(nativeEvent.type,nativeEvent);setReplayingEvent(nativeEventClone);nativeEvent.target.dispatchEvent(nativeEventClone);resetReplayingEvent();}}else {// We're still blocked. Try again later.
		var _fiber3=getInstanceFromNode(nextBlockedOn);if(_fiber3!==null){attemptContinuousHydration(_fiber3);}queuedEvent.blockedOn=nextBlockedOn;return false;}// This target container was successfully dispatched. Try the next.
		targetContainers.shift();}return true;}function attemptReplayContinuousQueuedEventInMap(queuedEvent,key,map){if(attemptReplayContinuousQueuedEvent(queuedEvent)){map.delete(key);}}function replayUnblockedEvents(){hasScheduledReplayAttempt=false;if(queuedFocus!==null&&attemptReplayContinuousQueuedEvent(queuedFocus)){queuedFocus=null;}if(queuedDrag!==null&&attemptReplayContinuousQueuedEvent(queuedDrag)){queuedDrag=null;}if(queuedMouse!==null&&attemptReplayContinuousQueuedEvent(queuedMouse)){queuedMouse=null;}queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);}function scheduleCallbackIfUnblocked(queuedEvent,unblocked){if(queuedEvent.blockedOn===unblocked){queuedEvent.blockedOn=null;if(!hasScheduledReplayAttempt){hasScheduledReplayAttempt=true;// Schedule a callback to attempt replaying as many events as are
		// now unblocked. This first might not actually be unblocked yet.
		// We could check it early to avoid scheduling an unnecessary callback.
		Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority,replayUnblockedEvents);}}}function retryIfBlockedOn(unblocked){// Mark anything that was blocked on this as no longer blocked
		// and eligible for a replay.
		if(queuedDiscreteEvents.length>0){scheduleCallbackIfUnblocked(queuedDiscreteEvents[0],unblocked);// This is a exponential search for each boundary that commits. I think it's
		// worth it because we expect very few discrete events to queue up and once
		// we are actually fully unblocked it will be fast to replay them.
		for(var i=1;i<queuedDiscreteEvents.length;i++){var queuedEvent=queuedDiscreteEvents[i];if(queuedEvent.blockedOn===unblocked){queuedEvent.blockedOn=null;}}}if(queuedFocus!==null){scheduleCallbackIfUnblocked(queuedFocus,unblocked);}if(queuedDrag!==null){scheduleCallbackIfUnblocked(queuedDrag,unblocked);}if(queuedMouse!==null){scheduleCallbackIfUnblocked(queuedMouse,unblocked);}var unblock=function(queuedEvent){return scheduleCallbackIfUnblocked(queuedEvent,unblocked);};queuedPointers.forEach(unblock);queuedPointerCaptures.forEach(unblock);for(var _i=0;_i<queuedExplicitHydrationTargets.length;_i++){var queuedTarget=queuedExplicitHydrationTargets[_i];if(queuedTarget.blockedOn===unblocked){queuedTarget.blockedOn=null;}}while(queuedExplicitHydrationTargets.length>0){var nextExplicitTarget=queuedExplicitHydrationTargets[0];if(nextExplicitTarget.blockedOn!==null){// We're still blocked.
		break;}else {attemptExplicitHydrationTarget(nextExplicitTarget);if(nextExplicitTarget.blockedOn===null){// We're unblocked.
		queuedExplicitHydrationTargets.shift();}}}}var ReactCurrentBatchConfig=ReactSharedInternals.ReactCurrentBatchConfig;// TODO: can we stop exporting these?
		var _enabled=true;// This is exported in FB builds for use by legacy FB layer infra.
		// We'd like to remove this but it's not clear if this is safe.
		function setEnabled(enabled){_enabled=!!enabled;}function isEnabled(){return _enabled;}function createEventListenerWrapperWithPriority(targetContainer,domEventName,eventSystemFlags){var eventPriority=getEventPriority(domEventName);var listenerWrapper;switch(eventPriority){case DiscreteEventPriority:listenerWrapper=dispatchDiscreteEvent;break;case ContinuousEventPriority:listenerWrapper=dispatchContinuousEvent;break;case DefaultEventPriority:default:listenerWrapper=dispatchEvent;break;}return listenerWrapper.bind(null,domEventName,eventSystemFlags,targetContainer);}function dispatchDiscreteEvent(domEventName,eventSystemFlags,container,nativeEvent){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig.transition;ReactCurrentBatchConfig.transition=null;try{setCurrentUpdatePriority(DiscreteEventPriority);dispatchEvent(domEventName,eventSystemFlags,container,nativeEvent);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig.transition=prevTransition;}}function dispatchContinuousEvent(domEventName,eventSystemFlags,container,nativeEvent){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig.transition;ReactCurrentBatchConfig.transition=null;try{setCurrentUpdatePriority(ContinuousEventPriority);dispatchEvent(domEventName,eventSystemFlags,container,nativeEvent);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig.transition=prevTransition;}}function dispatchEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent){if(!_enabled){return;}{dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName,eventSystemFlags,targetContainer,nativeEvent);}}function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName,eventSystemFlags,targetContainer,nativeEvent){var blockedOn=findInstanceBlockingEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent);if(blockedOn===null){dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,return_targetInst,targetContainer);clearIfContinuousEvent(domEventName,nativeEvent);return;}if(queueIfContinuousEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent)){nativeEvent.stopPropagation();return;}// We need to clear only if we didn't queue because
		// queueing is accumulative.
		clearIfContinuousEvent(domEventName,nativeEvent);if(eventSystemFlags&IS_CAPTURE_PHASE&&isDiscreteEventThatRequiresHydration(domEventName)){while(blockedOn!==null){var fiber=getInstanceFromNode(blockedOn);if(fiber!==null){attemptSynchronousHydration(fiber);}var nextBlockedOn=findInstanceBlockingEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent);if(nextBlockedOn===null){dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,return_targetInst,targetContainer);}if(nextBlockedOn===blockedOn){break;}blockedOn=nextBlockedOn;}if(blockedOn!==null){nativeEvent.stopPropagation();}return;}// This is not replayable so we'll invoke it but without a target,
		// in case the event system needs to trace it.
		dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,null,targetContainer);}var return_targetInst=null;// Returns a SuspenseInstance or Container if it's blocked.
		// The return_targetInst field above is conceptually part of the return value.
		function findInstanceBlockingEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent){// TODO: Warn if _enabled is false.
		return_targetInst=null;var nativeEventTarget=getEventTarget(nativeEvent);var targetInst=getClosestInstanceFromNode(nativeEventTarget);if(targetInst!==null){var nearestMounted=getNearestMountedFiber(targetInst);if(nearestMounted===null){// This tree has been unmounted already. Dispatch without a target.
		targetInst=null;}else {var tag=nearestMounted.tag;if(tag===SuspenseComponent){var instance=getSuspenseInstanceFromFiber(nearestMounted);if(instance!==null){// Queue the event to be replayed later. Abort dispatching since we
		// don't want this event dispatched twice through the event system.
		// TODO: If this is the first discrete event in the queue. Schedule an increased
		// priority for this boundary.
		return instance;}// This shouldn't happen, something went wrong but to avoid blocking
		// the whole system, dispatch the event without a target.
		// TODO: Warn.
		targetInst=null;}else if(tag===HostRoot){var root=nearestMounted.stateNode;if(isRootDehydrated(root)){// If this happens during a replay something went wrong and it might block
		// the whole system.
		return getContainerFromFiber(nearestMounted);}targetInst=null;}else if(nearestMounted!==targetInst){// If we get an event (ex: img onload) before committing that
		// component's mount, ignore it for now (that is, treat it as if it was an
		// event on a non-React tree). We might also consider queueing events and
		// dispatching them after the mount.
		targetInst=null;}}}return_targetInst=targetInst;// We're not blocked on anything.
		return null;}function getEventPriority(domEventName){switch(domEventName){// Used by SimpleEventPlugin:
		case'cancel':case'click':case'close':case'contextmenu':case'copy':case'cut':case'auxclick':case'dblclick':case'dragend':case'dragstart':case'drop':case'focusin':case'focusout':case'input':case'invalid':case'keydown':case'keypress':case'keyup':case'mousedown':case'mouseup':case'paste':case'pause':case'play':case'pointercancel':case'pointerdown':case'pointerup':case'ratechange':case'reset':case'resize':case'seeked':case'submit':case'touchcancel':case'touchend':case'touchstart':case'volumechange':// Used by polyfills:
		// eslint-disable-next-line no-fallthrough
		case'change':case'selectionchange':case'textInput':case'compositionstart':case'compositionend':case'compositionupdate':// Only enableCreateEventHandleAPI:
		// eslint-disable-next-line no-fallthrough
		case'beforeblur':case'afterblur':// Not used by React but could be by user code:
		// eslint-disable-next-line no-fallthrough
		case'beforeinput':case'blur':case'fullscreenchange':case'focus':case'hashchange':case'popstate':case'select':case'selectstart':return DiscreteEventPriority;case'drag':case'dragenter':case'dragexit':case'dragleave':case'dragover':case'mousemove':case'mouseout':case'mouseover':case'pointermove':case'pointerout':case'pointerover':case'scroll':case'toggle':case'touchmove':case'wheel':// Not used by React but could be by user code:
		// eslint-disable-next-line no-fallthrough
		case'mouseenter':case'mouseleave':case'pointerenter':case'pointerleave':return ContinuousEventPriority;case'message':{// We might be in the Scheduler callback.
		// Eventually this mechanism will be replaced by a check
		// of the current priority on the native scheduler.
		var schedulerPriority=getCurrentPriorityLevel();switch(schedulerPriority){case ImmediatePriority:return DiscreteEventPriority;case UserBlockingPriority:return ContinuousEventPriority;case NormalPriority:case LowPriority:// TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
		return DefaultEventPriority;case IdlePriority:return IdleEventPriority;default:return DefaultEventPriority;}}default:return DefaultEventPriority;}}function addEventBubbleListener(target,eventType,listener){target.addEventListener(eventType,listener,false);return listener;}function addEventCaptureListener(target,eventType,listener){target.addEventListener(eventType,listener,true);return listener;}function addEventCaptureListenerWithPassiveFlag(target,eventType,listener,passive){target.addEventListener(eventType,listener,{capture:true,passive:passive});return listener;}function addEventBubbleListenerWithPassiveFlag(target,eventType,listener,passive){target.addEventListener(eventType,listener,{passive:passive});return listener;}/**
		 * These variables store information about text content of a target node,
		 * allowing comparison of content before and after a given event.
		 *
		 * Identify the node where selection currently begins, then observe
		 * both its text content and its current position in the DOM. Since the
		 * browser may natively replace the target node during composition, we can
		 * use its position to find its replacement.
		 *
		 *
		 */var root=null;var startText=null;var fallbackText=null;function initialize(nativeEventTarget){root=nativeEventTarget;startText=getText();return true;}function reset(){root=null;startText=null;fallbackText=null;}function getData(){if(fallbackText){return fallbackText;}var start;var startValue=startText;var startLength=startValue.length;var end;var endValue=getText();var endLength=endValue.length;for(start=0;start<startLength;start++){if(startValue[start]!==endValue[start]){break;}}var minEnd=startLength-start;for(end=1;end<=minEnd;end++){if(startValue[startLength-end]!==endValue[endLength-end]){break;}}var sliceTail=end>1?1-end:undefined;fallbackText=endValue.slice(start,sliceTail);return fallbackText;}function getText(){if('value'in root){return root.value;}return root.textContent;}/**
		 * `charCode` represents the actual "character code" and is safe to use with
		 * `String.fromCharCode`. As such, only keys that correspond to printable
		 * characters produce a valid `charCode`, the only exception to this is Enter.
		 * The Tab-key is considered non-printable and does not have a `charCode`,
		 * presumably because it does not produce a tab-character in browsers.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {number} Normalized `charCode` property.
		 */function getEventCharCode(nativeEvent){var charCode;var keyCode=nativeEvent.keyCode;if('charCode'in nativeEvent){charCode=nativeEvent.charCode;// FF does not set `charCode` for the Enter-key, check against `keyCode`.
		if(charCode===0&&keyCode===13){charCode=13;}}else {// IE8 does not implement `charCode`, but `keyCode` has the correct value.
		charCode=keyCode;}// IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
		// report Enter as charCode 10 when ctrl is pressed.
		if(charCode===10){charCode=13;}// Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
		// Must not discard the (non-)printable Enter-key.
		if(charCode>=32||charCode===13){return charCode;}return 0;}function functionThatReturnsTrue(){return true;}function functionThatReturnsFalse(){return false;}// This is intentionally a factory so that we have different returned constructors.
		// If we had a single constructor, it would be megamorphic and engines would deopt.
		function createSyntheticEvent(Interface){/**
		   * Synthetic events are dispatched by event plugins, typically in response to a
		   * top-level event delegation handler.
		   *
		   * These systems should generally use pooling to reduce the frequency of garbage
		   * collection. The system should check `isPersistent` to determine whether the
		   * event should be released into the pool after being dispatched. Users that
		   * need a persisted event should invoke `persist`.
		   *
		   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
		   * normalizing browser quirks. Subclasses do not necessarily have to implement a
		   * DOM interface; custom application-specific events can also subclass this.
		   */function SyntheticBaseEvent(reactName,reactEventType,targetInst,nativeEvent,nativeEventTarget){this._reactName=reactName;this._targetInst=targetInst;this.type=reactEventType;this.nativeEvent=nativeEvent;this.target=nativeEventTarget;this.currentTarget=null;for(var _propName in Interface){if(!Interface.hasOwnProperty(_propName)){continue;}var normalize=Interface[_propName];if(normalize){this[_propName]=normalize(nativeEvent);}else {this[_propName]=nativeEvent[_propName];}}var defaultPrevented=nativeEvent.defaultPrevented!=null?nativeEvent.defaultPrevented:nativeEvent.returnValue===false;if(defaultPrevented){this.isDefaultPrevented=functionThatReturnsTrue;}else {this.isDefaultPrevented=functionThatReturnsFalse;}this.isPropagationStopped=functionThatReturnsFalse;return this;}assign(SyntheticBaseEvent.prototype,{preventDefault:function(){this.defaultPrevented=true;var event=this.nativeEvent;if(!event){return;}if(event.preventDefault){event.preventDefault();// $FlowFixMe - flow is not aware of `unknown` in IE
		}else if(typeof event.returnValue!=='unknown'){event.returnValue=false;}this.isDefaultPrevented=functionThatReturnsTrue;},stopPropagation:function(){var event=this.nativeEvent;if(!event){return;}if(event.stopPropagation){event.stopPropagation();// $FlowFixMe - flow is not aware of `unknown` in IE
		}else if(typeof event.cancelBubble!=='unknown'){// The ChangeEventPlugin registers a "propertychange" event for
		// IE. This event does not support bubbling or cancelling, and
		// any references to cancelBubble throw "Member not found".  A
		// typeof check of "unknown" circumvents this issue (and is also
		// IE specific).
		event.cancelBubble=true;}this.isPropagationStopped=functionThatReturnsTrue;},/**
		     * We release all dispatched `SyntheticEvent`s after each event loop, adding
		     * them back into the pool. This allows a way to hold onto a reference that
		     * won't be added back into the pool.
		     */persist:function(){// Modern event system doesn't use pooling.
		},/**
		     * Checks if this event should be released back into the pool.
		     *
		     * @return {boolean} True if this should not be released, false otherwise.
		     */isPersistent:functionThatReturnsTrue});return SyntheticBaseEvent;}/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var EventInterface={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(event){return event.timeStamp||Date.now();},defaultPrevented:0,isTrusted:0};var SyntheticEvent=createSyntheticEvent(EventInterface);var UIEventInterface=assign({},EventInterface,{view:0,detail:0});var SyntheticUIEvent=createSyntheticEvent(UIEventInterface);var lastMovementX;var lastMovementY;var lastMouseEvent;function updateMouseMovementPolyfillState(event){if(event!==lastMouseEvent){if(lastMouseEvent&&event.type==='mousemove'){lastMovementX=event.screenX-lastMouseEvent.screenX;lastMovementY=event.screenY-lastMouseEvent.screenY;}else {lastMovementX=0;lastMovementY=0;}lastMouseEvent=event;}}/**
		 * @interface MouseEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var MouseEventInterface=assign({},UIEventInterface,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:getEventModifierState,button:0,buttons:0,relatedTarget:function(event){if(event.relatedTarget===undefined)return event.fromElement===event.srcElement?event.toElement:event.fromElement;return event.relatedTarget;},movementX:function(event){if('movementX'in event){return event.movementX;}updateMouseMovementPolyfillState(event);return lastMovementX;},movementY:function(event){if('movementY'in event){return event.movementY;}// Don't need to call updateMouseMovementPolyfillState() here
		// because it's guaranteed to have already run when movementX
		// was copied.
		return lastMovementY;}});var SyntheticMouseEvent=createSyntheticEvent(MouseEventInterface);/**
		 * @interface DragEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var DragEventInterface=assign({},MouseEventInterface,{dataTransfer:0});var SyntheticDragEvent=createSyntheticEvent(DragEventInterface);/**
		 * @interface FocusEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var FocusEventInterface=assign({},UIEventInterface,{relatedTarget:0});var SyntheticFocusEvent=createSyntheticEvent(FocusEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
		 */var AnimationEventInterface=assign({},EventInterface,{animationName:0,elapsedTime:0,pseudoElement:0});var SyntheticAnimationEvent=createSyntheticEvent(AnimationEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/clipboard-apis/
		 */var ClipboardEventInterface=assign({},EventInterface,{clipboardData:function(event){return 'clipboardData'in event?event.clipboardData:window.clipboardData;}});var SyntheticClipboardEvent=createSyntheticEvent(ClipboardEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
		 */var CompositionEventInterface=assign({},EventInterface,{data:0});var SyntheticCompositionEvent=createSyntheticEvent(CompositionEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
		 *      /#events-inputevents
		 */ // Happens to share the same list for now.
		var SyntheticInputEvent=SyntheticCompositionEvent;/**
		 * Normalization of deprecated HTML5 `key` values
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */var normalizeKey={Esc:'Escape',Spacebar:' ',Left:'ArrowLeft',Up:'ArrowUp',Right:'ArrowRight',Down:'ArrowDown',Del:'Delete',Win:'OS',Menu:'ContextMenu',Apps:'ContextMenu',Scroll:'ScrollLock',MozPrintableKey:'Unidentified'};/**
		 * Translation from legacy `keyCode` to HTML5 `key`
		 * Only special keys supported, all others depend on keyboard layout or browser
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */var translateToKey={'8':'Backspace','9':'Tab','12':'Clear','13':'Enter','16':'Shift','17':'Control','18':'Alt','19':'Pause','20':'CapsLock','27':'Escape','32':' ','33':'PageUp','34':'PageDown','35':'End','36':'Home','37':'ArrowLeft','38':'ArrowUp','39':'ArrowRight','40':'ArrowDown','45':'Insert','46':'Delete','112':'F1','113':'F2','114':'F3','115':'F4','116':'F5','117':'F6','118':'F7','119':'F8','120':'F9','121':'F10','122':'F11','123':'F12','144':'NumLock','145':'ScrollLock','224':'Meta'};/**
		 * @param {object} nativeEvent Native browser event.
		 * @return {string} Normalized `key` property.
		 */function getEventKey(nativeEvent){if(nativeEvent.key){// Normalize inconsistent values reported by browsers due to
		// implementations of a working draft specification.
		// FireFox implements `key` but returns `MozPrintableKey` for all
		// printable characters (normalized to `Unidentified`), ignore it.
		var key=normalizeKey[nativeEvent.key]||nativeEvent.key;if(key!=='Unidentified'){return key;}}// Browser does not implement `key`, polyfill as much of it as we can.
		if(nativeEvent.type==='keypress'){var charCode=getEventCharCode(nativeEvent);// The enter-key is technically both printable and non-printable and can
		// thus be captured by `keypress`, no other non-printable key should.
		return charCode===13?'Enter':String.fromCharCode(charCode);}if(nativeEvent.type==='keydown'||nativeEvent.type==='keyup'){// While user keyboard layout determines the actual meaning of each
		// `keyCode` value, almost all function keys have a universal value.
		return translateToKey[nativeEvent.keyCode]||'Unidentified';}return '';}/**
		 * Translation from modifier key to the associated property in the event.
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
		 */var modifierKeyToProp={Alt:'altKey',Control:'ctrlKey',Meta:'metaKey',Shift:'shiftKey'};// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
		// getModifierState. If getModifierState is not supported, we map it to a set of
		// modifier keys exposed by the event. In this case, Lock-keys are not supported.
		function modifierStateGetter(keyArg){var syntheticEvent=this;var nativeEvent=syntheticEvent.nativeEvent;if(nativeEvent.getModifierState){return nativeEvent.getModifierState(keyArg);}var keyProp=modifierKeyToProp[keyArg];return keyProp?!!nativeEvent[keyProp]:false;}function getEventModifierState(nativeEvent){return modifierStateGetter;}/**
		 * @interface KeyboardEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var KeyboardEventInterface=assign({},UIEventInterface,{key:getEventKey,code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:getEventModifierState,// Legacy Interface
		charCode:function(event){// `charCode` is the result of a KeyPress event and represents the value of
		// the actual printable character.
		// KeyPress is deprecated, but its replacement is not yet final and not
		// implemented in any major browser. Only KeyPress has charCode.
		if(event.type==='keypress'){return getEventCharCode(event);}return 0;},keyCode:function(event){// `keyCode` is the result of a KeyDown/Up event and represents the value of
		// physical keyboard key.
		// The actual meaning of the value depends on the users' keyboard layout
		// which cannot be detected. Assuming that it is a US keyboard layout
		// provides a surprisingly accurate mapping for US and European users.
		// Due to this, it is left to the user to implement at this time.
		if(event.type==='keydown'||event.type==='keyup'){return event.keyCode;}return 0;},which:function(event){// `which` is an alias for either `keyCode` or `charCode` depending on the
		// type of the event.
		if(event.type==='keypress'){return getEventCharCode(event);}if(event.type==='keydown'||event.type==='keyup'){return event.keyCode;}return 0;}});var SyntheticKeyboardEvent=createSyntheticEvent(KeyboardEventInterface);/**
		 * @interface PointerEvent
		 * @see http://www.w3.org/TR/pointerevents/
		 */var PointerEventInterface=assign({},MouseEventInterface,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0});var SyntheticPointerEvent=createSyntheticEvent(PointerEventInterface);/**
		 * @interface TouchEvent
		 * @see http://www.w3.org/TR/touch-events/
		 */var TouchEventInterface=assign({},UIEventInterface,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:getEventModifierState});var SyntheticTouchEvent=createSyntheticEvent(TouchEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
		 */var TransitionEventInterface=assign({},EventInterface,{propertyName:0,elapsedTime:0,pseudoElement:0});var SyntheticTransitionEvent=createSyntheticEvent(TransitionEventInterface);/**
		 * @interface WheelEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var WheelEventInterface=assign({},MouseEventInterface,{deltaX:function(event){return 'deltaX'in event?event.deltaX:// Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
		'wheelDeltaX'in event?-event.wheelDeltaX:0;},deltaY:function(event){return 'deltaY'in event?event.deltaY:// Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
		'wheelDeltaY'in event?-event.wheelDeltaY:// Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
		'wheelDelta'in event?-event.wheelDelta:0;},deltaZ:0,// Browsers without "deltaMode" is reporting in raw wheel delta where one
		// notch on the scroll is always +/- 120, roughly equivalent to pixels.
		// A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
		// ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
		deltaMode:0});var SyntheticWheelEvent=createSyntheticEvent(WheelEventInterface);var END_KEYCODES=[9,13,27,32];// Tab, Return, Esc, Space
		var START_KEYCODE=229;var canUseCompositionEvent=canUseDOM&&'CompositionEvent'in window;var documentMode=null;if(canUseDOM&&'documentMode'in document){documentMode=document.documentMode;}// Webkit offers a very useful `textInput` event that can be used to
		// directly represent `beforeInput`. The IE `textinput` event is not as
		// useful, so we don't use it.
		var canUseTextInputEvent=canUseDOM&&'TextEvent'in window&&!documentMode;// In IE9+, we have access to composition events, but the data supplied
		// by the native compositionend event may be incorrect. Japanese ideographic
		// spaces, for instance (\u3000) are not recorded correctly.
		var useFallbackCompositionData=canUseDOM&&(!canUseCompositionEvent||documentMode&&documentMode>8&&documentMode<=11);var SPACEBAR_CODE=32;var SPACEBAR_CHAR=String.fromCharCode(SPACEBAR_CODE);function registerEvents(){registerTwoPhaseEvent('onBeforeInput',['compositionend','keypress','textInput','paste']);registerTwoPhaseEvent('onCompositionEnd',['compositionend','focusout','keydown','keypress','keyup','mousedown']);registerTwoPhaseEvent('onCompositionStart',['compositionstart','focusout','keydown','keypress','keyup','mousedown']);registerTwoPhaseEvent('onCompositionUpdate',['compositionupdate','focusout','keydown','keypress','keyup','mousedown']);}// Track whether we've ever handled a keypress on the space key.
		var hasSpaceKeypress=false;/**
		 * Return whether a native keypress event is assumed to be a command.
		 * This is required because Firefox fires `keypress` events for key commands
		 * (cut, copy, select-all, etc.) even though no character is inserted.
		 */function isKeypressCommand(nativeEvent){return (nativeEvent.ctrlKey||nativeEvent.altKey||nativeEvent.metaKey)&&// ctrlKey && altKey is equivalent to AltGr, and is not a command.
		!(nativeEvent.ctrlKey&&nativeEvent.altKey);}/**
		 * Translate native top level events into event types.
		 */function getCompositionEventType(domEventName){switch(domEventName){case'compositionstart':return 'onCompositionStart';case'compositionend':return 'onCompositionEnd';case'compositionupdate':return 'onCompositionUpdate';}}/**
		 * Does our fallback best-guess model think this event signifies that
		 * composition has begun?
		 */function isFallbackCompositionStart(domEventName,nativeEvent){return domEventName==='keydown'&&nativeEvent.keyCode===START_KEYCODE;}/**
		 * Does our fallback mode think that this event is the end of composition?
		 */function isFallbackCompositionEnd(domEventName,nativeEvent){switch(domEventName){case'keyup':// Command keys insert or clear IME input.
		return END_KEYCODES.indexOf(nativeEvent.keyCode)!==-1;case'keydown':// Expect IME keyCode on each keydown. If we get any other
		// code we must have exited earlier.
		return nativeEvent.keyCode!==START_KEYCODE;case'keypress':case'mousedown':case'focusout':// Events are not possible without cancelling IME.
		return true;default:return false;}}/**
		 * Google Input Tools provides composition data via a CustomEvent,
		 * with the `data` property populated in the `detail` object. If this
		 * is available on the event object, use it. If not, this is a plain
		 * composition event and we have nothing special to extract.
		 *
		 * @param {object} nativeEvent
		 * @return {?string}
		 */function getDataFromCustomEvent(nativeEvent){var detail=nativeEvent.detail;if(typeof detail==='object'&&'data'in detail){return detail.data;}return null;}/**
		 * Check if a composition event was triggered by Korean IME.
		 * Our fallback mode does not work well with IE's Korean IME,
		 * so just use native composition events when Korean IME is used.
		 * Although CompositionEvent.locale property is deprecated,
		 * it is available in IE, where our fallback mode is enabled.
		 *
		 * @param {object} nativeEvent
		 * @return {boolean}
		 */function isUsingKoreanIME(nativeEvent){return nativeEvent.locale==='ko';}// Track the current IME composition status, if any.
		var isComposing=false;/**
		 * @return {?object} A SyntheticCompositionEvent.
		 */function extractCompositionEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget){var eventType;var fallbackData;if(canUseCompositionEvent){eventType=getCompositionEventType(domEventName);}else if(!isComposing){if(isFallbackCompositionStart(domEventName,nativeEvent)){eventType='onCompositionStart';}}else if(isFallbackCompositionEnd(domEventName,nativeEvent)){eventType='onCompositionEnd';}if(!eventType){return null;}if(useFallbackCompositionData&&!isUsingKoreanIME(nativeEvent)){// The current composition is stored statically and must not be
		// overwritten while composition continues.
		if(!isComposing&&eventType==='onCompositionStart'){isComposing=initialize(nativeEventTarget);}else if(eventType==='onCompositionEnd'){if(isComposing){fallbackData=getData();}}}var listeners=accumulateTwoPhaseListeners(targetInst,eventType);if(listeners.length>0){var event=new SyntheticCompositionEvent(eventType,domEventName,null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:event,listeners:listeners});if(fallbackData){// Inject data generated from fallback path into the synthetic event.
		// This matches the property of native CompositionEventInterface.
		event.data=fallbackData;}else {var customData=getDataFromCustomEvent(nativeEvent);if(customData!==null){event.data=customData;}}}}function getNativeBeforeInputChars(domEventName,nativeEvent){switch(domEventName){case'compositionend':return getDataFromCustomEvent(nativeEvent);case'keypress':/**
		       * If native `textInput` events are available, our goal is to make
		       * use of them. However, there is a special case: the spacebar key.
		       * In Webkit, preventing default on a spacebar `textInput` event
		       * cancels character insertion, but it *also* causes the browser
		       * to fall back to its default spacebar behavior of scrolling the
		       * page.
		       *
		       * Tracking at:
		       * https://code.google.com/p/chromium/issues/detail?id=355103
		       *
		       * To avoid this issue, use the keypress event as if no `textInput`
		       * event is available.
		       */var which=nativeEvent.which;if(which!==SPACEBAR_CODE){return null;}hasSpaceKeypress=true;return SPACEBAR_CHAR;case'textInput':// Record the characters to be added to the DOM.
		var chars=nativeEvent.data;// If it's a spacebar character, assume that we have already handled
		// it at the keypress level and bail immediately. Android Chrome
		// doesn't give us keycodes, so we need to ignore it.
		if(chars===SPACEBAR_CHAR&&hasSpaceKeypress){return null;}return chars;default:// For other native event types, do nothing.
		return null;}}/**
		 * For browsers that do not provide the `textInput` event, extract the
		 * appropriate string to use for SyntheticInputEvent.
		 */function getFallbackBeforeInputChars(domEventName,nativeEvent){// If we are currently composing (IME) and using a fallback to do so,
		// try to extract the composed characters from the fallback object.
		// If composition event is available, we extract a string only at
		// compositionevent, otherwise extract it at fallback events.
		if(isComposing){if(domEventName==='compositionend'||!canUseCompositionEvent&&isFallbackCompositionEnd(domEventName,nativeEvent)){var chars=getData();reset();isComposing=false;return chars;}return null;}switch(domEventName){case'paste':// If a paste event occurs after a keypress, throw out the input
		// chars. Paste events should not lead to BeforeInput events.
		return null;case'keypress':/**
		       * As of v27, Firefox may fire keypress events even when no character
		       * will be inserted. A few possibilities:
		       *
		       * - `which` is `0`. Arrow keys, Esc key, etc.
		       *
		       * - `which` is the pressed key code, but no char is available.
		       *   Ex: 'AltGr + d` in Polish. There is no modified character for
		       *   this key combination and no character is inserted into the
		       *   document, but FF fires the keypress for char code `100` anyway.
		       *   No `input` event will occur.
		       *
		       * - `which` is the pressed key code, but a command combination is
		       *   being used. Ex: `Cmd+C`. No character is inserted, and no
		       *   `input` event will occur.
		       */if(!isKeypressCommand(nativeEvent)){// IE fires the `keypress` event when a user types an emoji via
		// Touch keyboard of Windows.  In such a case, the `char` property
		// holds an emoji character like `\uD83D\uDE0A`.  Because its length
		// is 2, the property `which` does not represent an emoji correctly.
		// In such a case, we directly return the `char` property instead of
		// using `which`.
		if(nativeEvent.char&&nativeEvent.char.length>1){return nativeEvent.char;}else if(nativeEvent.which){return String.fromCharCode(nativeEvent.which);}}return null;case'compositionend':return useFallbackCompositionData&&!isUsingKoreanIME(nativeEvent)?null:nativeEvent.data;default:return null;}}/**
		 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
		 * `textInput` or fallback behavior.
		 *
		 * @return {?object} A SyntheticInputEvent.
		 */function extractBeforeInputEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget){var chars;if(canUseTextInputEvent){chars=getNativeBeforeInputChars(domEventName,nativeEvent);}else {chars=getFallbackBeforeInputChars(domEventName,nativeEvent);}// If no characters are being inserted, no BeforeInput event should
		// be fired.
		if(!chars){return null;}var listeners=accumulateTwoPhaseListeners(targetInst,'onBeforeInput');if(listeners.length>0){var event=new SyntheticInputEvent('onBeforeInput','beforeinput',null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:event,listeners:listeners});event.data=chars;}}/**
		 * Create an `onBeforeInput` event to match
		 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
		 *
		 * This event plugin is based on the native `textInput` event
		 * available in Chrome, Safari, Opera, and IE. This event fires after
		 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
		 *
		 * `beforeInput` is spec'd but not implemented in any browsers, and
		 * the `input` event does not provide any useful information about what has
		 * actually been added, contrary to the spec. Thus, `textInput` is the best
		 * available event to identify the characters that have actually been inserted
		 * into the target node.
		 *
		 * This plugin is also responsible for emitting `composition` events, thus
		 * allowing us to share composition fallback code for both `beforeInput` and
		 * `composition` event types.
		 */function extractEvents(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){extractCompositionEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractBeforeInputEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);}/**
		 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
		 */var supportedInputTypes={color:true,date:true,datetime:true,'datetime-local':true,email:true,month:true,number:true,password:true,range:true,search:true,tel:true,text:true,time:true,url:true,week:true};function isTextInputElement(elem){var nodeName=elem&&elem.nodeName&&elem.nodeName.toLowerCase();if(nodeName==='input'){return !!supportedInputTypes[elem.type];}if(nodeName==='textarea'){return true;}return false;}/**
		 * Checks if an event is supported in the current execution environment.
		 *
		 * NOTE: This will not work correctly for non-generic events such as `change`,
		 * `reset`, `load`, `error`, and `select`.
		 *
		 * Borrows from Modernizr.
		 *
		 * @param {string} eventNameSuffix Event name, e.g. "click".
		 * @return {boolean} True if the event is supported.
		 * @internal
		 * @license Modernizr 3.0.0pre (Custom Build) | MIT
		 */function isEventSupported(eventNameSuffix){if(!canUseDOM){return false;}var eventName='on'+eventNameSuffix;var isSupported=(eventName in document);if(!isSupported){var element=document.createElement('div');element.setAttribute(eventName,'return;');isSupported=typeof element[eventName]==='function';}return isSupported;}function registerEvents$1(){registerTwoPhaseEvent('onChange',['change','click','focusin','focusout','input','keydown','keyup','selectionchange']);}function createAndAccumulateChangeEvent(dispatchQueue,inst,nativeEvent,target){// Flag this event loop as needing state restore.
		enqueueStateRestore(target);var listeners=accumulateTwoPhaseListeners(inst,'onChange');if(listeners.length>0){var event=new SyntheticEvent('onChange','change',null,nativeEvent,target);dispatchQueue.push({event:event,listeners:listeners});}}/**
		 * For IE shims
		 */var activeElement=null;var activeElementInst=null;/**
		 * SECTION: handle `change` event
		 */function shouldUseChangeEvent(elem){var nodeName=elem.nodeName&&elem.nodeName.toLowerCase();return nodeName==='select'||nodeName==='input'&&elem.type==='file';}function manualDispatchChangeEvent(nativeEvent){var dispatchQueue=[];createAndAccumulateChangeEvent(dispatchQueue,activeElementInst,nativeEvent,getEventTarget(nativeEvent));// If change and propertychange bubbled, we'd just bind to it like all the
		// other events and have it go through ReactBrowserEventEmitter. Since it
		// doesn't, we manually listen for the events and so we have to enqueue and
		// process the abstract event manually.
		//
		// Batching is necessary here in order to ensure that all event handlers run
		// before the next rerender (including event handlers attached to ancestor
		// elements instead of directly on the input). Without this, controlled
		// components don't work properly in conjunction with event bubbling because
		// the component is rerendered and the value reverted before all the event
		// handlers can run. See https://github.com/facebook/react/issues/708.
		batchedUpdates(runEventInBatch,dispatchQueue);}function runEventInBatch(dispatchQueue){processDispatchQueue(dispatchQueue,0);}function getInstIfValueChanged(targetInst){var targetNode=getNodeFromInstance(targetInst);if(updateValueIfChanged(targetNode)){return targetInst;}}function getTargetInstForChangeEvent(domEventName,targetInst){if(domEventName==='change'){return targetInst;}}/**
		 * SECTION: handle `input` event
		 */var isInputEventSupported=false;if(canUseDOM){// IE9 claims to support the input event but fails to trigger it when
		// deleting text, so we ignore its input events.
		isInputEventSupported=isEventSupported('input')&&(!document.documentMode||document.documentMode>9);}/**
		 * (For IE <=9) Starts tracking propertychange events on the passed-in element
		 * and override the value property so that we can distinguish user events from
		 * value changes in JS.
		 */function startWatchingForValueChange(target,targetInst){activeElement=target;activeElementInst=targetInst;activeElement.attachEvent('onpropertychange',handlePropertyChange);}/**
		 * (For IE <=9) Removes the event listeners from the currently-tracked element,
		 * if any exists.
		 */function stopWatchingForValueChange(){if(!activeElement){return;}activeElement.detachEvent('onpropertychange',handlePropertyChange);activeElement=null;activeElementInst=null;}/**
		 * (For IE <=9) Handles a propertychange event, sending a `change` event if
		 * the value of the active element has changed.
		 */function handlePropertyChange(nativeEvent){if(nativeEvent.propertyName!=='value'){return;}if(getInstIfValueChanged(activeElementInst)){manualDispatchChangeEvent(nativeEvent);}}function handleEventsForInputEventPolyfill(domEventName,target,targetInst){if(domEventName==='focusin'){// In IE9, propertychange fires for most input events but is buggy and
		// doesn't fire when text is deleted, but conveniently, selectionchange
		// appears to fire in all of the remaining cases so we catch those and
		// forward the event if the value has changed
		// In either case, we don't want to call the event handler if the value
		// is changed from JS so we redefine a setter for `.value` that updates
		// our activeElementValue variable, allowing us to ignore those changes
		//
		// stopWatching() should be a noop here but we call it just in case we
		// missed a blur event somehow.
		stopWatchingForValueChange();startWatchingForValueChange(target,targetInst);}else if(domEventName==='focusout'){stopWatchingForValueChange();}}// For IE8 and IE9.
		function getTargetInstForInputEventPolyfill(domEventName,targetInst){if(domEventName==='selectionchange'||domEventName==='keyup'||domEventName==='keydown'){// On the selectionchange event, the target is just document which isn't
		// helpful for us so just check activeElement instead.
		//
		// 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
		// propertychange on the first input event after setting `value` from a
		// script and fires only keydown, keypress, keyup. Catching keyup usually
		// gets it and catching keydown lets us fire an event for the first
		// keystroke if user does a key repeat (it'll be a little delayed: right
		// before the second keystroke). Other input methods (e.g., paste) seem to
		// fire selectionchange normally.
		return getInstIfValueChanged(activeElementInst);}}/**
		 * SECTION: handle `click` event
		 */function shouldUseClickEvent(elem){// Use the `click` event to detect changes to checkbox and radio inputs.
		// This approach works across all browsers, whereas `change` does not fire
		// until `blur` in IE8.
		var nodeName=elem.nodeName;return nodeName&&nodeName.toLowerCase()==='input'&&(elem.type==='checkbox'||elem.type==='radio');}function getTargetInstForClickEvent(domEventName,targetInst){if(domEventName==='click'){return getInstIfValueChanged(targetInst);}}function getTargetInstForInputOrChangeEvent(domEventName,targetInst){if(domEventName==='input'||domEventName==='change'){return getInstIfValueChanged(targetInst);}}function handleControlledInputBlur(node){var state=node._wrapperState;if(!state||!state.controlled||node.type!=='number'){return;}{// If controlled, assign the value attribute to the current value on blur
		setDefaultValue(node,'number',node.value);}}/**
		 * This plugin creates an `onChange` event that normalizes change events
		 * across form elements. This event fires at a time when it's possible to
		 * change the element's value without seeing a flicker.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - select
		 */function extractEvents$1(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var targetNode=targetInst?getNodeFromInstance(targetInst):window;var getTargetInstFunc,handleEventFunc;if(shouldUseChangeEvent(targetNode)){getTargetInstFunc=getTargetInstForChangeEvent;}else if(isTextInputElement(targetNode)){if(isInputEventSupported){getTargetInstFunc=getTargetInstForInputOrChangeEvent;}else {getTargetInstFunc=getTargetInstForInputEventPolyfill;handleEventFunc=handleEventsForInputEventPolyfill;}}else if(shouldUseClickEvent(targetNode)){getTargetInstFunc=getTargetInstForClickEvent;}if(getTargetInstFunc){var inst=getTargetInstFunc(domEventName,targetInst);if(inst){createAndAccumulateChangeEvent(dispatchQueue,inst,nativeEvent,nativeEventTarget);return;}}if(handleEventFunc){handleEventFunc(domEventName,targetNode,targetInst);}// When blurring, set the value attribute for number inputs
		if(domEventName==='focusout'){handleControlledInputBlur(targetNode);}}function registerEvents$2(){registerDirectEvent('onMouseEnter',['mouseout','mouseover']);registerDirectEvent('onMouseLeave',['mouseout','mouseover']);registerDirectEvent('onPointerEnter',['pointerout','pointerover']);registerDirectEvent('onPointerLeave',['pointerout','pointerover']);}/**
		 * For almost every interaction we care about, there will be both a top-level
		 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
		 * we do not extract duplicate events. However, moving the mouse into the
		 * browser from outside will not fire a `mouseout` event. In this case, we use
		 * the `mouseover` top-level event.
		 */function extractEvents$2(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var isOverEvent=domEventName==='mouseover'||domEventName==='pointerover';var isOutEvent=domEventName==='mouseout'||domEventName==='pointerout';if(isOverEvent&&!isReplayingEvent(nativeEvent)){// If this is an over event with a target, we might have already dispatched
		// the event in the out event of the other target. If this is replayed,
		// then it's because we couldn't dispatch against this target previously
		// so we have to do it now instead.
		var related=nativeEvent.relatedTarget||nativeEvent.fromElement;if(related){// If the related node is managed by React, we can assume that we have
		// already dispatched the corresponding events during its mouseout.
		if(getClosestInstanceFromNode(related)||isContainerMarkedAsRoot(related)){return;}}}if(!isOutEvent&&!isOverEvent){// Must not be a mouse or pointer in or out - ignoring.
		return;}var win;// TODO: why is this nullable in the types but we read from it?
		if(nativeEventTarget.window===nativeEventTarget){// `nativeEventTarget` is probably a window object.
		win=nativeEventTarget;}else {// TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
		var doc=nativeEventTarget.ownerDocument;if(doc){win=doc.defaultView||doc.parentWindow;}else {win=window;}}var from;var to;if(isOutEvent){var _related=nativeEvent.relatedTarget||nativeEvent.toElement;from=targetInst;to=_related?getClosestInstanceFromNode(_related):null;if(to!==null){var nearestMounted=getNearestMountedFiber(to);if(to!==nearestMounted||to.tag!==HostComponent&&to.tag!==HostText){to=null;}}}else {// Moving to a node from outside the window.
		from=null;to=targetInst;}if(from===to){// Nothing pertains to our managed components.
		return;}var SyntheticEventCtor=SyntheticMouseEvent;var leaveEventType='onMouseLeave';var enterEventType='onMouseEnter';var eventTypePrefix='mouse';if(domEventName==='pointerout'||domEventName==='pointerover'){SyntheticEventCtor=SyntheticPointerEvent;leaveEventType='onPointerLeave';enterEventType='onPointerEnter';eventTypePrefix='pointer';}var fromNode=from==null?win:getNodeFromInstance(from);var toNode=to==null?win:getNodeFromInstance(to);var leave=new SyntheticEventCtor(leaveEventType,eventTypePrefix+'leave',from,nativeEvent,nativeEventTarget);leave.target=fromNode;leave.relatedTarget=toNode;var enter=null;// We should only process this nativeEvent if we are processing
		// the first ancestor. Next time, we will ignore the event.
		var nativeTargetInst=getClosestInstanceFromNode(nativeEventTarget);if(nativeTargetInst===targetInst){var enterEvent=new SyntheticEventCtor(enterEventType,eventTypePrefix+'enter',to,nativeEvent,nativeEventTarget);enterEvent.target=toNode;enterEvent.relatedTarget=fromNode;enter=enterEvent;}accumulateEnterLeaveTwoPhaseListeners(dispatchQueue,leave,enter,from,to);}/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */function is(x,y){return x===y&&(x!==0||1/x===1/y)||x!==x&&y!==y// eslint-disable-line no-self-compare
		;}var objectIs=typeof Object.is==='function'?Object.is:is;/**
		 * Performs equality by iterating through keys on an object and returning false
		 * when any key has values which are not strictly equal between the arguments.
		 * Returns true when the values of all keys are strictly equal.
		 */function shallowEqual(objA,objB){if(objectIs(objA,objB)){return true;}if(typeof objA!=='object'||objA===null||typeof objB!=='object'||objB===null){return false;}var keysA=Object.keys(objA);var keysB=Object.keys(objB);if(keysA.length!==keysB.length){return false;}// Test for A's keys different from B.
		for(var i=0;i<keysA.length;i++){var currentKey=keysA[i];if(!hasOwnProperty.call(objB,currentKey)||!objectIs(objA[currentKey],objB[currentKey])){return false;}}return true;}/**
		 * Given any node return the first leaf node without children.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {DOMElement|DOMTextNode}
		 */function getLeafNode(node){while(node&&node.firstChild){node=node.firstChild;}return node;}/**
		 * Get the next sibling within a container. This will walk up the
		 * DOM if a node's siblings have been exhausted.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {?DOMElement|DOMTextNode}
		 */function getSiblingNode(node){while(node){if(node.nextSibling){return node.nextSibling;}node=node.parentNode;}}/**
		 * Get object describing the nodes which contain characters at offset.
		 *
		 * @param {DOMElement|DOMTextNode} root
		 * @param {number} offset
		 * @return {?object}
		 */function getNodeForCharacterOffset(root,offset){var node=getLeafNode(root);var nodeStart=0;var nodeEnd=0;while(node){if(node.nodeType===TEXT_NODE){nodeEnd=nodeStart+node.textContent.length;if(nodeStart<=offset&&nodeEnd>=offset){return {node:node,offset:offset-nodeStart};}nodeStart=nodeEnd;}node=getLeafNode(getSiblingNode(node));}}/**
		 * @param {DOMElement} outerNode
		 * @return {?object}
		 */function getOffsets(outerNode){var ownerDocument=outerNode.ownerDocument;var win=ownerDocument&&ownerDocument.defaultView||window;var selection=win.getSelection&&win.getSelection();if(!selection||selection.rangeCount===0){return null;}var anchorNode=selection.anchorNode,anchorOffset=selection.anchorOffset,focusNode=selection.focusNode,focusOffset=selection.focusOffset;// In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
		// up/down buttons on an <input type="number">. Anonymous divs do not seem to
		// expose properties, triggering a "Permission denied error" if any of its
		// properties are accessed. The only seemingly possible way to avoid erroring
		// is to access a property that typically works for non-anonymous divs and
		// catch any error that may otherwise arise. See
		// https://bugzilla.mozilla.org/show_bug.cgi?id=208427
		try{/* eslint-disable no-unused-expressions */anchorNode.nodeType;focusNode.nodeType;/* eslint-enable no-unused-expressions */}catch(e){return null;}return getModernOffsetsFromPoints(outerNode,anchorNode,anchorOffset,focusNode,focusOffset);}/**
		 * Returns {start, end} where `start` is the character/codepoint index of
		 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
		 * `end` is the index of (focusNode, focusOffset).
		 *
		 * Returns null if you pass in garbage input but we should probably just crash.
		 *
		 * Exported only for testing.
		 */function getModernOffsetsFromPoints(outerNode,anchorNode,anchorOffset,focusNode,focusOffset){var length=0;var start=-1;var end=-1;var indexWithinAnchor=0;var indexWithinFocus=0;var node=outerNode;var parentNode=null;outer:while(true){var next=null;while(true){if(node===anchorNode&&(anchorOffset===0||node.nodeType===TEXT_NODE)){start=length+anchorOffset;}if(node===focusNode&&(focusOffset===0||node.nodeType===TEXT_NODE)){end=length+focusOffset;}if(node.nodeType===TEXT_NODE){length+=node.nodeValue.length;}if((next=node.firstChild)===null){break;}// Moving from `node` to its first child `next`.
		parentNode=node;node=next;}while(true){if(node===outerNode){// If `outerNode` has children, this is always the second time visiting
		// it. If it has no children, this is still the first loop, and the only
		// valid selection is anchorNode and focusNode both equal to this node
		// and both offsets 0, in which case we will have handled above.
		break outer;}if(parentNode===anchorNode&&++indexWithinAnchor===anchorOffset){start=length;}if(parentNode===focusNode&&++indexWithinFocus===focusOffset){end=length;}if((next=node.nextSibling)!==null){break;}node=parentNode;parentNode=node.parentNode;}// Moving from `node` to its next sibling `next`.
		node=next;}if(start===-1||end===-1){// This should never happen. (Would happen if the anchor/focus nodes aren't
		// actually inside the passed-in node.)
		return null;}return {start:start,end:end};}/**
		 * In modern non-IE browsers, we can support both forward and backward
		 * selections.
		 *
		 * Note: IE10+ supports the Selection object, but it does not support
		 * the `extend` method, which means that even in modern IE, it's not possible
		 * to programmatically create a backward selection. Thus, for all IE
		 * versions, we use the old IE API to create our selections.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @param {object} offsets
		 */function setOffsets(node,offsets){var doc=node.ownerDocument||document;var win=doc&&doc.defaultView||window;// Edge fails with "Object expected" in some scenarios.
		// (For instance: TinyMCE editor used in a list component that supports pasting to add more,
		// fails when pasting 100+ items)
		if(!win.getSelection){return;}var selection=win.getSelection();var length=node.textContent.length;var start=Math.min(offsets.start,length);var end=offsets.end===undefined?start:Math.min(offsets.end,length);// IE 11 uses modern selection, but doesn't support the extend method.
		// Flip backward selections, so we can set with a single range.
		if(!selection.extend&&start>end){var temp=end;end=start;start=temp;}var startMarker=getNodeForCharacterOffset(node,start);var endMarker=getNodeForCharacterOffset(node,end);if(startMarker&&endMarker){if(selection.rangeCount===1&&selection.anchorNode===startMarker.node&&selection.anchorOffset===startMarker.offset&&selection.focusNode===endMarker.node&&selection.focusOffset===endMarker.offset){return;}var range=doc.createRange();range.setStart(startMarker.node,startMarker.offset);selection.removeAllRanges();if(start>end){selection.addRange(range);selection.extend(endMarker.node,endMarker.offset);}else {range.setEnd(endMarker.node,endMarker.offset);selection.addRange(range);}}}function isTextNode(node){return node&&node.nodeType===TEXT_NODE;}function containsNode(outerNode,innerNode){if(!outerNode||!innerNode){return false;}else if(outerNode===innerNode){return true;}else if(isTextNode(outerNode)){return false;}else if(isTextNode(innerNode)){return containsNode(outerNode,innerNode.parentNode);}else if('contains'in outerNode){return outerNode.contains(innerNode);}else if(outerNode.compareDocumentPosition){return !!(outerNode.compareDocumentPosition(innerNode)&16);}else {return false;}}function isInDocument(node){return node&&node.ownerDocument&&containsNode(node.ownerDocument.documentElement,node);}function isSameOriginFrame(iframe){try{// Accessing the contentDocument of a HTMLIframeElement can cause the browser
		// to throw, e.g. if it has a cross-origin src attribute.
		// Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
		// iframe.contentDocument.defaultView;
		// A safety way is to access one of the cross origin properties: Window or Location
		// Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
		// https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
		return typeof iframe.contentWindow.location.href==='string';}catch(err){return false;}}function getActiveElementDeep(){var win=window;var element=getActiveElement();while(element instanceof win.HTMLIFrameElement){if(isSameOriginFrame(element)){win=element.contentWindow;}else {return element;}element=getActiveElement(win.document);}return element;}/**
		 * @ReactInputSelection: React input selection module. Based on Selection.js,
		 * but modified to be suitable for react and has a couple of bug fixes (doesn't
		 * assume buttons have range selections allowed).
		 * Input selection module for React.
		 */ /**
		 * @hasSelectionCapabilities: we get the element types that support selection
		 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
		 * and `selectionEnd` rows.
		 */function hasSelectionCapabilities(elem){var nodeName=elem&&elem.nodeName&&elem.nodeName.toLowerCase();return nodeName&&(nodeName==='input'&&(elem.type==='text'||elem.type==='search'||elem.type==='tel'||elem.type==='url'||elem.type==='password')||nodeName==='textarea'||elem.contentEditable==='true');}function getSelectionInformation(){var focusedElem=getActiveElementDeep();return {focusedElem:focusedElem,selectionRange:hasSelectionCapabilities(focusedElem)?getSelection(focusedElem):null};}/**
		 * @restoreSelection: If any selection information was potentially lost,
		 * restore it. This is useful when performing operations that could remove dom
		 * nodes and place them back in, resulting in focus being lost.
		 */function restoreSelection(priorSelectionInformation){var curFocusedElem=getActiveElementDeep();var priorFocusedElem=priorSelectionInformation.focusedElem;var priorSelectionRange=priorSelectionInformation.selectionRange;if(curFocusedElem!==priorFocusedElem&&isInDocument(priorFocusedElem)){if(priorSelectionRange!==null&&hasSelectionCapabilities(priorFocusedElem)){setSelection(priorFocusedElem,priorSelectionRange);}// Focusing a node can change the scroll position, which is undesirable
		var ancestors=[];var ancestor=priorFocusedElem;while(ancestor=ancestor.parentNode){if(ancestor.nodeType===ELEMENT_NODE){ancestors.push({element:ancestor,left:ancestor.scrollLeft,top:ancestor.scrollTop});}}if(typeof priorFocusedElem.focus==='function'){priorFocusedElem.focus();}for(var i=0;i<ancestors.length;i++){var info=ancestors[i];info.element.scrollLeft=info.left;info.element.scrollTop=info.top;}}}/**
		 * @getSelection: Gets the selection bounds of a focused textarea, input or
		 * contentEditable node.
		 * -@input: Look up selection bounds of this input
		 * -@return {start: selectionStart, end: selectionEnd}
		 */function getSelection(input){var selection;if('selectionStart'in input){// Modern browser with input or textarea.
		selection={start:input.selectionStart,end:input.selectionEnd};}else {// Content editable or old IE textarea.
		selection=getOffsets(input);}return selection||{start:0,end:0};}/**
		 * @setSelection: Sets the selection bounds of a textarea or input and focuses
		 * the input.
		 * -@input     Set selection bounds of this input or textarea
		 * -@offsets   Object of same form that is returned from get*
		 */function setSelection(input,offsets){var start=offsets.start;var end=offsets.end;if(end===undefined){end=start;}if('selectionStart'in input){input.selectionStart=start;input.selectionEnd=Math.min(end,input.value.length);}else {setOffsets(input,offsets);}}var skipSelectionChangeEvent=canUseDOM&&'documentMode'in document&&document.documentMode<=11;function registerEvents$3(){registerTwoPhaseEvent('onSelect',['focusout','contextmenu','dragend','focusin','keydown','keyup','mousedown','mouseup','selectionchange']);}var activeElement$1=null;var activeElementInst$1=null;var lastSelection=null;var mouseDown=false;/**
		 * Get an object which is a unique representation of the current selection.
		 *
		 * The return value will not be consistent across nodes or browsers, but
		 * two identical selections on the same node will return identical objects.
		 */function getSelection$1(node){if('selectionStart'in node&&hasSelectionCapabilities(node)){return {start:node.selectionStart,end:node.selectionEnd};}else {var win=node.ownerDocument&&node.ownerDocument.defaultView||window;var selection=win.getSelection();return {anchorNode:selection.anchorNode,anchorOffset:selection.anchorOffset,focusNode:selection.focusNode,focusOffset:selection.focusOffset};}}/**
		 * Get document associated with the event target.
		 */function getEventTargetDocument(eventTarget){return eventTarget.window===eventTarget?eventTarget.document:eventTarget.nodeType===DOCUMENT_NODE?eventTarget:eventTarget.ownerDocument;}/**
		 * Poll selection to see whether it's changed.
		 *
		 * @param {object} nativeEvent
		 * @param {object} nativeEventTarget
		 * @return {?SyntheticEvent}
		 */function constructSelectEvent(dispatchQueue,nativeEvent,nativeEventTarget){// Ensure we have the right element, and that the user is not dragging a
		// selection (this matches native `select` event behavior). In HTML5, select
		// fires only on input and textarea thus if there's no focused element we
		// won't dispatch.
		var doc=getEventTargetDocument(nativeEventTarget);if(mouseDown||activeElement$1==null||activeElement$1!==getActiveElement(doc)){return;}// Only fire when selection has actually changed.
		var currentSelection=getSelection$1(activeElement$1);if(!lastSelection||!shallowEqual(lastSelection,currentSelection)){lastSelection=currentSelection;var listeners=accumulateTwoPhaseListeners(activeElementInst$1,'onSelect');if(listeners.length>0){var event=new SyntheticEvent('onSelect','select',null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:event,listeners:listeners});event.target=activeElement$1;}}}/**
		 * This plugin creates an `onSelect` event that normalizes select events
		 * across form elements.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - contentEditable
		 *
		 * This differs from native browser implementations in the following ways:
		 * - Fires on contentEditable fields as well as inputs.
		 * - Fires for collapsed selection.
		 * - Fires after user input.
		 */function extractEvents$3(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var targetNode=targetInst?getNodeFromInstance(targetInst):window;switch(domEventName){// Track the input node that has focus.
		case'focusin':if(isTextInputElement(targetNode)||targetNode.contentEditable==='true'){activeElement$1=targetNode;activeElementInst$1=targetInst;lastSelection=null;}break;case'focusout':activeElement$1=null;activeElementInst$1=null;lastSelection=null;break;// Don't fire the event while the user is dragging. This matches the
		// semantics of the native select event.
		case'mousedown':mouseDown=true;break;case'contextmenu':case'mouseup':case'dragend':mouseDown=false;constructSelectEvent(dispatchQueue,nativeEvent,nativeEventTarget);break;// Chrome and IE fire non-standard event when selection is changed (and
		// sometimes when it hasn't). IE's event fires out of order with respect
		// to key and input events on deletion, so we discard it.
		//
		// Firefox doesn't support selectionchange, so check selection status
		// after each key entry. The selection changes after keydown and before
		// keyup, but we check on keydown as well in the case of holding down a
		// key, when multiple keydown events are fired but only one keyup is.
		// This is also our approach for IE handling, for the reason above.
		case'selectionchange':if(skipSelectionChangeEvent){break;}// falls through
		case'keydown':case'keyup':constructSelectEvent(dispatchQueue,nativeEvent,nativeEventTarget);}}/**
		 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
		 *
		 * @param {string} styleProp
		 * @param {string} eventName
		 * @returns {object}
		 */function makePrefixMap(styleProp,eventName){var prefixes={};prefixes[styleProp.toLowerCase()]=eventName.toLowerCase();prefixes['Webkit'+styleProp]='webkit'+eventName;prefixes['Moz'+styleProp]='moz'+eventName;return prefixes;}/**
		 * A list of event names to a configurable list of vendor prefixes.
		 */var vendorPrefixes={animationend:makePrefixMap('Animation','AnimationEnd'),animationiteration:makePrefixMap('Animation','AnimationIteration'),animationstart:makePrefixMap('Animation','AnimationStart'),transitionend:makePrefixMap('Transition','TransitionEnd')};/**
		 * Event names that have already been detected and prefixed (if applicable).
		 */var prefixedEventNames={};/**
		 * Element to check for prefixes on.
		 */var style={};/**
		 * Bootstrap if a DOM exists.
		 */if(canUseDOM){style=document.createElement('div').style;// On some platforms, in particular some releases of Android 4.x,
		// the un-prefixed "animation" and "transition" properties are defined on the
		// style object but the events that fire will still be prefixed, so we need
		// to check if the un-prefixed events are usable, and if not remove them from the map.
		if(!('AnimationEvent'in window)){delete vendorPrefixes.animationend.animation;delete vendorPrefixes.animationiteration.animation;delete vendorPrefixes.animationstart.animation;}// Same as above
		if(!('TransitionEvent'in window)){delete vendorPrefixes.transitionend.transition;}}/**
		 * Attempts to determine the correct vendor prefixed event name.
		 *
		 * @param {string} eventName
		 * @returns {string}
		 */function getVendorPrefixedEventName(eventName){if(prefixedEventNames[eventName]){return prefixedEventNames[eventName];}else if(!vendorPrefixes[eventName]){return eventName;}var prefixMap=vendorPrefixes[eventName];for(var styleProp in prefixMap){if(prefixMap.hasOwnProperty(styleProp)&&styleProp in style){return prefixedEventNames[eventName]=prefixMap[styleProp];}}return eventName;}var ANIMATION_END=getVendorPrefixedEventName('animationend');var ANIMATION_ITERATION=getVendorPrefixedEventName('animationiteration');var ANIMATION_START=getVendorPrefixedEventName('animationstart');var TRANSITION_END=getVendorPrefixedEventName('transitionend');var topLevelEventsToReactNames=new Map();// NOTE: Capitalization is important in this list!
		//
		// E.g. it needs "pointerDown", not "pointerdown".
		// This is because we derive both React name ("onPointerDown")
		// and DOM name ("pointerdown") from the same list.
		//
		// Exceptions that don't match this convention are listed separately.
		//
		// prettier-ignore
		var simpleEventPluginEvents=['abort','auxClick','cancel','canPlay','canPlayThrough','click','close','contextMenu','copy','cut','drag','dragEnd','dragEnter','dragExit','dragLeave','dragOver','dragStart','drop','durationChange','emptied','encrypted','ended','error','gotPointerCapture','input','invalid','keyDown','keyPress','keyUp','load','loadedData','loadedMetadata','loadStart','lostPointerCapture','mouseDown','mouseMove','mouseOut','mouseOver','mouseUp','paste','pause','play','playing','pointerCancel','pointerDown','pointerMove','pointerOut','pointerOver','pointerUp','progress','rateChange','reset','resize','seeked','seeking','stalled','submit','suspend','timeUpdate','touchCancel','touchEnd','touchStart','volumeChange','scroll','toggle','touchMove','waiting','wheel'];function registerSimpleEvent(domEventName,reactName){topLevelEventsToReactNames.set(domEventName,reactName);registerTwoPhaseEvent(reactName,[domEventName]);}function registerSimpleEvents(){for(var i=0;i<simpleEventPluginEvents.length;i++){var eventName=simpleEventPluginEvents[i];var domEventName=eventName.toLowerCase();var capitalizedEvent=eventName[0].toUpperCase()+eventName.slice(1);registerSimpleEvent(domEventName,'on'+capitalizedEvent);}// Special cases where event names don't match.
		registerSimpleEvent(ANIMATION_END,'onAnimationEnd');registerSimpleEvent(ANIMATION_ITERATION,'onAnimationIteration');registerSimpleEvent(ANIMATION_START,'onAnimationStart');registerSimpleEvent('dblclick','onDoubleClick');registerSimpleEvent('focusin','onFocus');registerSimpleEvent('focusout','onBlur');registerSimpleEvent(TRANSITION_END,'onTransitionEnd');}function extractEvents$4(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var reactName=topLevelEventsToReactNames.get(domEventName);if(reactName===undefined){return;}var SyntheticEventCtor=SyntheticEvent;var reactEventType=domEventName;switch(domEventName){case'keypress':// Firefox creates a keypress event for function keys too. This removes
		// the unwanted keypress events. Enter is however both printable and
		// non-printable. One would expect Tab to be as well (but it isn't).
		if(getEventCharCode(nativeEvent)===0){return;}/* falls through */case'keydown':case'keyup':SyntheticEventCtor=SyntheticKeyboardEvent;break;case'focusin':reactEventType='focus';SyntheticEventCtor=SyntheticFocusEvent;break;case'focusout':reactEventType='blur';SyntheticEventCtor=SyntheticFocusEvent;break;case'beforeblur':case'afterblur':SyntheticEventCtor=SyntheticFocusEvent;break;case'click':// Firefox creates a click event on right mouse clicks. This removes the
		// unwanted click events.
		if(nativeEvent.button===2){return;}/* falls through */case'auxclick':case'dblclick':case'mousedown':case'mousemove':case'mouseup':// TODO: Disabled elements should not respond to mouse events
		/* falls through */case'mouseout':case'mouseover':case'contextmenu':SyntheticEventCtor=SyntheticMouseEvent;break;case'drag':case'dragend':case'dragenter':case'dragexit':case'dragleave':case'dragover':case'dragstart':case'drop':SyntheticEventCtor=SyntheticDragEvent;break;case'touchcancel':case'touchend':case'touchmove':case'touchstart':SyntheticEventCtor=SyntheticTouchEvent;break;case ANIMATION_END:case ANIMATION_ITERATION:case ANIMATION_START:SyntheticEventCtor=SyntheticAnimationEvent;break;case TRANSITION_END:SyntheticEventCtor=SyntheticTransitionEvent;break;case'scroll':SyntheticEventCtor=SyntheticUIEvent;break;case'wheel':SyntheticEventCtor=SyntheticWheelEvent;break;case'copy':case'cut':case'paste':SyntheticEventCtor=SyntheticClipboardEvent;break;case'gotpointercapture':case'lostpointercapture':case'pointercancel':case'pointerdown':case'pointermove':case'pointerout':case'pointerover':case'pointerup':SyntheticEventCtor=SyntheticPointerEvent;break;}var inCapturePhase=(eventSystemFlags&IS_CAPTURE_PHASE)!==0;{// Some events don't bubble in the browser.
		// In the past, React has always bubbled them, but this can be surprising.
		// We're going to try aligning closer to the browser behavior by not bubbling
		// them in React either. We'll start by not bubbling onScroll, and then expand.
		var accumulateTargetOnly=!inCapturePhase&&// TODO: ideally, we'd eventually add all events from
		// nonDelegatedEvents list in DOMPluginEventSystem.
		// Then we can remove this special list.
		// This is a breaking change that can wait until React 18.
		domEventName==='scroll';var _listeners=accumulateSinglePhaseListeners(targetInst,reactName,nativeEvent.type,inCapturePhase,accumulateTargetOnly);if(_listeners.length>0){// Intentionally create event lazily.
		var _event=new SyntheticEventCtor(reactName,reactEventType,null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:_event,listeners:_listeners});}}}// TODO: remove top-level side effect.
		registerSimpleEvents();registerEvents$2();registerEvents$1();registerEvents$3();registerEvents();function extractEvents$5(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){// TODO: we should remove the concept of a "SimpleEventPlugin".
		// This is the basic functionality of the event system. All
		// the other plugins are essentially polyfills. So the plugin
		// should probably be inlined somewhere and have its logic
		// be core the to event system. This would potentially allow
		// us to ship builds of React without the polyfilled plugins below.
		extractEvents$4(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags);var shouldProcessPolyfillPlugins=(eventSystemFlags&SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS)===0;// We don't process these events unless we are in the
		// event's native "bubble" phase, which means that we're
		// not in the capture phase. That's because we emulate
		// the capture phase here still. This is a trade-off,
		// because in an ideal world we would not emulate and use
		// the phases properly, like we do with the SimpleEvent
		// plugin. However, the plugins below either expect
		// emulation (EnterLeave) or use state localized to that
		// plugin (BeforeInput, Change, Select). The state in
		// these modules complicates things, as you'll essentially
		// get the case where the capture phase event might change
		// state, only for the following bubble event to come in
		// later and not trigger anything as the state now
		// invalidates the heuristics of the event plugin. We
		// could alter all these plugins to work in such ways, but
		// that might cause other unknown side-effects that we
		// can't foresee right now.
		if(shouldProcessPolyfillPlugins){extractEvents$2(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractEvents$1(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractEvents$3(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractEvents(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);}}// List of events that need to be individually attached to media elements.
		var mediaEventTypes=['abort','canplay','canplaythrough','durationchange','emptied','encrypted','ended','error','loadeddata','loadedmetadata','loadstart','pause','play','playing','progress','ratechange','resize','seeked','seeking','stalled','suspend','timeupdate','volumechange','waiting'];// We should not delegate these events to the container, but rather
		// set them on the actual target element itself. This is primarily
		// because these events do not consistently bubble in the DOM.
		var nonDelegatedEvents=new Set(['cancel','close','invalid','load','scroll','toggle'].concat(mediaEventTypes));function executeDispatch(event,listener,currentTarget){var type=event.type||'unknown-event';event.currentTarget=currentTarget;invokeGuardedCallbackAndCatchFirstError(type,listener,undefined,event);event.currentTarget=null;}function processDispatchQueueItemsInOrder(event,dispatchListeners,inCapturePhase){var previousInstance;if(inCapturePhase){for(var i=dispatchListeners.length-1;i>=0;i--){var _dispatchListeners$i=dispatchListeners[i],instance=_dispatchListeners$i.instance,currentTarget=_dispatchListeners$i.currentTarget,listener=_dispatchListeners$i.listener;if(instance!==previousInstance&&event.isPropagationStopped()){return;}executeDispatch(event,listener,currentTarget);previousInstance=instance;}}else {for(var _i=0;_i<dispatchListeners.length;_i++){var _dispatchListeners$_i=dispatchListeners[_i],_instance=_dispatchListeners$_i.instance,_currentTarget=_dispatchListeners$_i.currentTarget,_listener=_dispatchListeners$_i.listener;if(_instance!==previousInstance&&event.isPropagationStopped()){return;}executeDispatch(event,_listener,_currentTarget);previousInstance=_instance;}}}function processDispatchQueue(dispatchQueue,eventSystemFlags){var inCapturePhase=(eventSystemFlags&IS_CAPTURE_PHASE)!==0;for(var i=0;i<dispatchQueue.length;i++){var _dispatchQueue$i=dispatchQueue[i],event=_dispatchQueue$i.event,listeners=_dispatchQueue$i.listeners;processDispatchQueueItemsInOrder(event,listeners,inCapturePhase);//  event system doesn't use pooling.
		}// This would be a good time to rethrow if any of the event handlers threw.
		rethrowCaughtError();}function dispatchEventsForPlugins(domEventName,eventSystemFlags,nativeEvent,targetInst,targetContainer){var nativeEventTarget=getEventTarget(nativeEvent);var dispatchQueue=[];extractEvents$5(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags);processDispatchQueue(dispatchQueue,eventSystemFlags);}function listenToNonDelegatedEvent(domEventName,targetElement){{if(!nonDelegatedEvents.has(domEventName)){error('Did not expect a listenToNonDelegatedEvent() call for "%s". '+'This is a bug in React. Please file an issue.',domEventName);}}var isCapturePhaseListener=false;var listenerSet=getEventListenerSet(targetElement);var listenerSetKey=getListenerSetKey(domEventName,isCapturePhaseListener);if(!listenerSet.has(listenerSetKey)){addTrappedEventListener(targetElement,domEventName,IS_NON_DELEGATED,isCapturePhaseListener);listenerSet.add(listenerSetKey);}}function listenToNativeEvent(domEventName,isCapturePhaseListener,target){{if(nonDelegatedEvents.has(domEventName)&&!isCapturePhaseListener){error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. '+'This is a bug in React. Please file an issue.',domEventName);}}var eventSystemFlags=0;if(isCapturePhaseListener){eventSystemFlags|=IS_CAPTURE_PHASE;}addTrappedEventListener(target,domEventName,eventSystemFlags,isCapturePhaseListener);}// This is only used by createEventHandle when the
		var listeningMarker='_reactListening'+Math.random().toString(36).slice(2);function listenToAllSupportedEvents(rootContainerElement){if(!rootContainerElement[listeningMarker]){rootContainerElement[listeningMarker]=true;allNativeEvents.forEach(function(domEventName){// We handle selectionchange separately because it
		// doesn't bubble and needs to be on the document.
		if(domEventName!=='selectionchange'){if(!nonDelegatedEvents.has(domEventName)){listenToNativeEvent(domEventName,false,rootContainerElement);}listenToNativeEvent(domEventName,true,rootContainerElement);}});var ownerDocument=rootContainerElement.nodeType===DOCUMENT_NODE?rootContainerElement:rootContainerElement.ownerDocument;if(ownerDocument!==null){// The selectionchange event also needs deduplication
		// but it is attached to the document.
		if(!ownerDocument[listeningMarker]){ownerDocument[listeningMarker]=true;listenToNativeEvent('selectionchange',false,ownerDocument);}}}}function addTrappedEventListener(targetContainer,domEventName,eventSystemFlags,isCapturePhaseListener,isDeferredListenerForLegacyFBSupport){var listener=createEventListenerWrapperWithPriority(targetContainer,domEventName,eventSystemFlags);// If passive option is not supported, then the event will be
		// active and not passive.
		var isPassiveListener=undefined;if(passiveBrowserEventsSupported){// Browsers introduced an intervention, making these events
		// passive by default on document. React doesn't bind them
		// to document anymore, but changing this now would undo
		// the performance wins from the change. So we emulate
		// the existing behavior manually on the roots now.
		// https://github.com/facebook/react/issues/19651
		if(domEventName==='touchstart'||domEventName==='touchmove'||domEventName==='wheel'){isPassiveListener=true;}}targetContainer=targetContainer;	if(isCapturePhaseListener){if(isPassiveListener!==undefined){addEventCaptureListenerWithPassiveFlag(targetContainer,domEventName,listener,isPassiveListener);}else {addEventCaptureListener(targetContainer,domEventName,listener);}}else {if(isPassiveListener!==undefined){addEventBubbleListenerWithPassiveFlag(targetContainer,domEventName,listener,isPassiveListener);}else {addEventBubbleListener(targetContainer,domEventName,listener);}}}function isMatchingRootContainer(grandContainer,targetContainer){return grandContainer===targetContainer||grandContainer.nodeType===COMMENT_NODE&&grandContainer.parentNode===targetContainer;}function dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,targetInst,targetContainer){var ancestorInst=targetInst;if((eventSystemFlags&IS_EVENT_HANDLE_NON_MANAGED_NODE)===0&&(eventSystemFlags&IS_NON_DELEGATED)===0){var targetContainerNode=targetContainer;// If we are using the legacy FB support flag, we
		if(targetInst!==null){// The below logic attempts to work out if we need to change
		// the target fiber to a different ancestor. We had similar logic
		// in the legacy event system, except the big difference between
		// systems is that the modern event system now has an event listener
		// attached to each React Root and React Portal Root. Together,
		// the DOM nodes representing these roots are the "rootContainer".
		// To figure out which ancestor instance we should use, we traverse
		// up the fiber tree from the target instance and attempt to find
		// root boundaries that match that of our current "rootContainer".
		// If we find that "rootContainer", we find the parent fiber
		// sub-tree for that root and make that our ancestor instance.
		var node=targetInst;mainLoop:while(true){if(node===null){return;}var nodeTag=node.tag;if(nodeTag===HostRoot||nodeTag===HostPortal){var container=node.stateNode.containerInfo;if(isMatchingRootContainer(container,targetContainerNode)){break;}if(nodeTag===HostPortal){// The target is a portal, but it's not the rootContainer we're looking for.
		// Normally portals handle their own events all the way down to the root.
		// So we should be able to stop now. However, we don't know if this portal
		// was part of *our* root.
		var grandNode=node.return;while(grandNode!==null){var grandTag=grandNode.tag;if(grandTag===HostRoot||grandTag===HostPortal){var grandContainer=grandNode.stateNode.containerInfo;if(isMatchingRootContainer(grandContainer,targetContainerNode)){// This is the rootContainer we're looking for and we found it as
		// a parent of the Portal. That means we can ignore it because the
		// Portal will bubble through to us.
		return;}}grandNode=grandNode.return;}}// Now we need to find it's corresponding host fiber in the other
		// tree. To do this we can use getClosestInstanceFromNode, but we
		// need to validate that the fiber is a host instance, otherwise
		// we need to traverse up through the DOM till we find the correct
		// node that is from the other tree.
		while(container!==null){var parentNode=getClosestInstanceFromNode(container);if(parentNode===null){return;}var parentTag=parentNode.tag;if(parentTag===HostComponent||parentTag===HostText){node=ancestorInst=parentNode;continue mainLoop;}container=container.parentNode;}}node=node.return;}}}batchedUpdates(function(){return dispatchEventsForPlugins(domEventName,eventSystemFlags,nativeEvent,ancestorInst);});}function createDispatchListener(instance,listener,currentTarget){return {instance:instance,listener:listener,currentTarget:currentTarget};}function accumulateSinglePhaseListeners(targetFiber,reactName,nativeEventType,inCapturePhase,accumulateTargetOnly,nativeEvent){var captureName=reactName!==null?reactName+'Capture':null;var reactEventName=inCapturePhase?captureName:reactName;var listeners=[];var instance=targetFiber;var lastHostComponent=null;// Accumulate all instances and listeners via the target -> root path.
		while(instance!==null){var _instance2=instance,stateNode=_instance2.stateNode,tag=_instance2.tag;// Handle listeners that are on HostComponents (i.e. <div>)
		if(tag===HostComponent&&stateNode!==null){lastHostComponent=stateNode;// createEventHandle listeners
		if(reactEventName!==null){var listener=getListener(instance,reactEventName);if(listener!=null){listeners.push(createDispatchListener(instance,listener,lastHostComponent));}}}// If we are only accumulating events for the target, then we don't
		// continue to propagate through the React fiber tree to find other
		// listeners.
		if(accumulateTargetOnly){break;}// If we are processing the onBeforeBlur event, then we need to take
		instance=instance.return;}return listeners;}// We should only use this function for:
		// - BeforeInputEventPlugin
		// - ChangeEventPlugin
		// - SelectEventPlugin
		// This is because we only process these plugins
		// in the bubble phase, so we need to accumulate two
		// phase event listeners (via emulation).
		function accumulateTwoPhaseListeners(targetFiber,reactName){var captureName=reactName+'Capture';var listeners=[];var instance=targetFiber;// Accumulate all instances and listeners via the target -> root path.
		while(instance!==null){var _instance3=instance,stateNode=_instance3.stateNode,tag=_instance3.tag;// Handle listeners that are on HostComponents (i.e. <div>)
		if(tag===HostComponent&&stateNode!==null){var currentTarget=stateNode;var captureListener=getListener(instance,captureName);if(captureListener!=null){listeners.unshift(createDispatchListener(instance,captureListener,currentTarget));}var bubbleListener=getListener(instance,reactName);if(bubbleListener!=null){listeners.push(createDispatchListener(instance,bubbleListener,currentTarget));}}instance=instance.return;}return listeners;}function getParent(inst){if(inst===null){return null;}do{inst=inst.return;// TODO: If this is a HostRoot we might want to bail out.
		// That is depending on if we want nested subtrees (layers) to bubble
		// events to their parent. We could also go through parentNode on the
		// host node but that wouldn't work for React Native and doesn't let us
		// do the portal feature.
		}while(inst&&inst.tag!==HostComponent);if(inst){return inst;}return null;}/**
		 * Return the lowest common ancestor of A and B, or null if they are in
		 * different trees.
		 */function getLowestCommonAncestor(instA,instB){var nodeA=instA;var nodeB=instB;var depthA=0;for(var tempA=nodeA;tempA;tempA=getParent(tempA)){depthA++;}var depthB=0;for(var tempB=nodeB;tempB;tempB=getParent(tempB)){depthB++;}// If A is deeper, crawl up.
		while(depthA-depthB>0){nodeA=getParent(nodeA);depthA--;}// If B is deeper, crawl up.
		while(depthB-depthA>0){nodeB=getParent(nodeB);depthB--;}// Walk in lockstep until we find a match.
		var depth=depthA;while(depth--){if(nodeA===nodeB||nodeB!==null&&nodeA===nodeB.alternate){return nodeA;}nodeA=getParent(nodeA);nodeB=getParent(nodeB);}return null;}function accumulateEnterLeaveListenersForEvent(dispatchQueue,event,target,common,inCapturePhase){var registrationName=event._reactName;var listeners=[];var instance=target;while(instance!==null){if(instance===common){break;}var _instance4=instance,alternate=_instance4.alternate,stateNode=_instance4.stateNode,tag=_instance4.tag;if(alternate!==null&&alternate===common){break;}if(tag===HostComponent&&stateNode!==null){var currentTarget=stateNode;if(inCapturePhase){var captureListener=getListener(instance,registrationName);if(captureListener!=null){listeners.unshift(createDispatchListener(instance,captureListener,currentTarget));}}else if(!inCapturePhase){var bubbleListener=getListener(instance,registrationName);if(bubbleListener!=null){listeners.push(createDispatchListener(instance,bubbleListener,currentTarget));}}}instance=instance.return;}if(listeners.length!==0){dispatchQueue.push({event:event,listeners:listeners});}}// We should only use this function for:
		// - EnterLeaveEventPlugin
		// This is because we only process this plugin
		// in the bubble phase, so we need to accumulate two
		// phase event listeners.
		function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue,leaveEvent,enterEvent,from,to){var common=from&&to?getLowestCommonAncestor(from,to):null;if(from!==null){accumulateEnterLeaveListenersForEvent(dispatchQueue,leaveEvent,from,common,false);}if(to!==null&&enterEvent!==null){accumulateEnterLeaveListenersForEvent(dispatchQueue,enterEvent,to,common,true);}}function getListenerSetKey(domEventName,capture){return domEventName+"__"+(capture?'capture':'bubble');}var didWarnInvalidHydration=false;var DANGEROUSLY_SET_INNER_HTML='dangerouslySetInnerHTML';var SUPPRESS_CONTENT_EDITABLE_WARNING='suppressContentEditableWarning';var SUPPRESS_HYDRATION_WARNING='suppressHydrationWarning';var AUTOFOCUS='autoFocus';var CHILDREN='children';var STYLE='style';var HTML$1='__html';var warnedUnknownTags;var validatePropertiesInDevelopment;var warnForPropDifference;var warnForExtraAttributes;var warnForInvalidEventListener;var canDiffStyleForHydrationWarning;var normalizeHTML;{warnedUnknownTags={// There are working polyfills for <dialog>. Let people use it.
		dialog:true,// Electron ships a custom <webview> tag to display external web content in
		// an isolated frame and process.
		// This tag is not present in non Electron environments such as JSDom which
		// is often used for testing purposes.
		// @see https://electronjs.org/docs/api/webview-tag
		webview:true};validatePropertiesInDevelopment=function(type,props){validateProperties(type,props);validateProperties$1(type,props);validateProperties$2(type,props,{registrationNameDependencies:registrationNameDependencies,possibleRegistrationNames:possibleRegistrationNames});};// IE 11 parses & normalizes the style attribute as opposed to other
		// browsers. It adds spaces and sorts the properties in some
		// non-alphabetical order. Handling that would require sorting CSS
		// properties in the client & server versions or applying
		// `expectedStyle` to a temporary DOM node to read its `style` attribute
		// normalized. Since it only affects IE, we're skipping style warnings
		// in that browser completely in favor of doing all that work.
		// See https://github.com/facebook/react/issues/11807
		canDiffStyleForHydrationWarning=canUseDOM&&!document.documentMode;warnForPropDifference=function(propName,serverValue,clientValue){if(didWarnInvalidHydration){return;}var normalizedClientValue=normalizeMarkupForTextOrAttribute(clientValue);var normalizedServerValue=normalizeMarkupForTextOrAttribute(serverValue);if(normalizedServerValue===normalizedClientValue){return;}didWarnInvalidHydration=true;error('Prop `%s` did not match. Server: %s Client: %s',propName,JSON.stringify(normalizedServerValue),JSON.stringify(normalizedClientValue));};warnForExtraAttributes=function(attributeNames){if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;var names=[];attributeNames.forEach(function(name){names.push(name);});error('Extra attributes from the server: %s',names);};warnForInvalidEventListener=function(registrationName,listener){if(listener===false){error('Expected `%s` listener to be a function, instead got `false`.\n\n'+'If you used to conditionally omit it with %s={condition && value}, '+'pass %s={condition ? value : undefined} instead.',registrationName,registrationName,registrationName);}else {error('Expected `%s` listener to be a function, instead got a value of `%s` type.',registrationName,typeof listener);}};// Parse the HTML and read it back to normalize the HTML string so that it
		// can be used for comparison.
		normalizeHTML=function(parent,html){// We could have created a separate document here to avoid
		// re-initializing custom elements if they exist. But this breaks
		// how <noscript> is being handled. So we use the same document.
		// See the discussion in https://github.com/facebook/react/pull/11157.
		var testElement=parent.namespaceURI===HTML_NAMESPACE?parent.ownerDocument.createElement(parent.tagName):parent.ownerDocument.createElementNS(parent.namespaceURI,parent.tagName);testElement.innerHTML=html;return testElement.innerHTML;};}// HTML parsing normalizes CR and CRLF to LF.
		// It also can turn \u0000 into \uFFFD inside attributes.
		// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
		// If we have a mismatch, it might be caused by that.
		// We will still patch up in this case but not fire the warning.
		var NORMALIZE_NEWLINES_REGEX=/\r\n?/g;var NORMALIZE_NULL_AND_REPLACEMENT_REGEX=/\u0000|\uFFFD/g;function normalizeMarkupForTextOrAttribute(markup){{checkHtmlStringCoercion(markup);}var markupString=typeof markup==='string'?markup:''+markup;return markupString.replace(NORMALIZE_NEWLINES_REGEX,'\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX,'');}function checkForUnmatchedText(serverText,clientText,isConcurrentMode,shouldWarnDev){var normalizedClientText=normalizeMarkupForTextOrAttribute(clientText);var normalizedServerText=normalizeMarkupForTextOrAttribute(serverText);if(normalizedServerText===normalizedClientText){return;}if(shouldWarnDev){{if(!didWarnInvalidHydration){didWarnInvalidHydration=true;error('Text content did not match. Server: "%s" Client: "%s"',normalizedServerText,normalizedClientText);}}}if(isConcurrentMode&&enableClientRenderFallbackOnTextMismatch){// In concurrent roots, we throw when there's a text mismatch and revert to
		// client rendering, up to the nearest Suspense boundary.
		throw new Error('Text content does not match server-rendered HTML.');}}function getOwnerDocumentFromRootContainer(rootContainerElement){return rootContainerElement.nodeType===DOCUMENT_NODE?rootContainerElement:rootContainerElement.ownerDocument;}function noop(){}function trapClickOnNonInteractiveElement(node){// Mobile Safari does not fire properly bubble click events on
		// non-interactive elements, which means delegated click listeners do not
		// fire. The workaround for this bug involves attaching an empty click
		// listener on the target node.
		// https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
		// Just set it using the onclick property so that we don't have to manage any
		// bookkeeping for it. Not sure if we need to clear it when the listener is
		// removed.
		// TODO: Only do this for the relevant Safaris maybe?
		node.onclick=noop;}function setInitialDOMProperties(tag,domElement,rootContainerElement,nextProps,isCustomComponentTag){for(var propKey in nextProps){if(!nextProps.hasOwnProperty(propKey)){continue;}var nextProp=nextProps[propKey];if(propKey===STYLE){{if(nextProp){// Freeze the next style object so that we can assume it won't be
		// mutated. We have already warned for this in the past.
		Object.freeze(nextProp);}}// Relies on `updateStylesByID` not mutating `styleUpdates`.
		setValueForStyles(domElement,nextProp);}else if(propKey===DANGEROUSLY_SET_INNER_HTML){var nextHtml=nextProp?nextProp[HTML$1]:undefined;if(nextHtml!=null){setInnerHTML(domElement,nextHtml);}}else if(propKey===CHILDREN){if(typeof nextProp==='string'){// Avoid setting initial textContent when the text is empty. In IE11 setting
		// textContent on a <textarea> will cause the placeholder to not
		// show within the <textarea> until it has been focused and blurred again.
		// https://github.com/facebook/react/issues/6731#issuecomment-254874553
		var canSetTextContent=tag!=='textarea'||nextProp!=='';if(canSetTextContent){setTextContent(domElement,nextProp);}}else if(typeof nextProp==='number'){setTextContent(domElement,''+nextProp);}}else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING);else if(propKey===AUTOFOCUS);else if(registrationNameDependencies.hasOwnProperty(propKey)){if(nextProp!=null){if(typeof nextProp!=='function'){warnForInvalidEventListener(propKey,nextProp);}if(propKey==='onScroll'){listenToNonDelegatedEvent('scroll',domElement);}}}else if(nextProp!=null){setValueForProperty(domElement,propKey,nextProp,isCustomComponentTag);}}}function updateDOMProperties(domElement,updatePayload,wasCustomComponentTag,isCustomComponentTag){// TODO: Handle wasCustomComponentTag
		for(var i=0;i<updatePayload.length;i+=2){var propKey=updatePayload[i];var propValue=updatePayload[i+1];if(propKey===STYLE){setValueForStyles(domElement,propValue);}else if(propKey===DANGEROUSLY_SET_INNER_HTML){setInnerHTML(domElement,propValue);}else if(propKey===CHILDREN){setTextContent(domElement,propValue);}else {setValueForProperty(domElement,propKey,propValue,isCustomComponentTag);}}}function createElement(type,props,rootContainerElement,parentNamespace){var isCustomComponentTag;// We create tags in the namespace of their parent container, except HTML
		// tags get no namespace.
		var ownerDocument=getOwnerDocumentFromRootContainer(rootContainerElement);var domElement;var namespaceURI=parentNamespace;if(namespaceURI===HTML_NAMESPACE){namespaceURI=getIntrinsicNamespace(type);}if(namespaceURI===HTML_NAMESPACE){{isCustomComponentTag=isCustomComponent(type,props);// Should this check be gated by parent namespace? Not sure we want to
		// allow <SVG> or <mATH>.
		if(!isCustomComponentTag&&type!==type.toLowerCase()){error('<%s /> is using incorrect casing. '+'Use PascalCase for React components, '+'or lowercase for HTML elements.',type);}}if(type==='script'){// Create the script via .innerHTML so its "parser-inserted" flag is
		// set to true and it does not execute
		var div=ownerDocument.createElement('div');div.innerHTML='<script><'+'/script>';// eslint-disable-line
		// This is guaranteed to yield a script element.
		var firstChild=div.firstChild;domElement=div.removeChild(firstChild);}else if(typeof props.is==='string'){// $FlowIssue `createElement` should be updated for Web Components
		domElement=ownerDocument.createElement(type,{is:props.is});}else {// Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
		// See discussion in https://github.com/facebook/react/pull/6896
		// and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
		domElement=ownerDocument.createElement(type);// Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
		// attributes on `select`s needs to be added before `option`s are inserted.
		// This prevents:
		// - a bug where the `select` does not scroll to the correct option because singular
		//  `select` elements automatically pick the first item #13222
		// - a bug where the `select` set the first item as selected despite the `size` attribute #14239
		// See https://github.com/facebook/react/issues/13222
		// and https://github.com/facebook/react/issues/14239
		if(type==='select'){var node=domElement;if(props.multiple){node.multiple=true;}else if(props.size){// Setting a size greater than 1 causes a select to behave like `multiple=true`, where
		// it is possible that no option is selected.
		//
		// This is only necessary when a select in "single selection mode".
		node.size=props.size;}}}}else {domElement=ownerDocument.createElementNS(namespaceURI,type);}{if(namespaceURI===HTML_NAMESPACE){if(!isCustomComponentTag&&Object.prototype.toString.call(domElement)==='[object HTMLUnknownElement]'&&!hasOwnProperty.call(warnedUnknownTags,type)){warnedUnknownTags[type]=true;error('The tag <%s> is unrecognized in this browser. '+'If you meant to render a React component, start its name with '+'an uppercase letter.',type);}}}return domElement;}function createTextNode(text,rootContainerElement){return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);}function setInitialProperties(domElement,tag,rawProps,rootContainerElement){var isCustomComponentTag=isCustomComponent(tag,rawProps);{validatePropertiesInDevelopment(tag,rawProps);}// TODO: Make sure that we check isMounted before firing any of these events.
		var props;switch(tag){case'dialog':listenToNonDelegatedEvent('cancel',domElement);listenToNonDelegatedEvent('close',domElement);props=rawProps;break;case'iframe':case'object':case'embed':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the load event.
		listenToNonDelegatedEvent('load',domElement);props=rawProps;break;case'video':case'audio':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for all the media events.
		for(var i=0;i<mediaEventTypes.length;i++){listenToNonDelegatedEvent(mediaEventTypes[i],domElement);}props=rawProps;break;case'source':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the error event.
		listenToNonDelegatedEvent('error',domElement);props=rawProps;break;case'img':case'image':case'link':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for error and load events.
		listenToNonDelegatedEvent('error',domElement);listenToNonDelegatedEvent('load',domElement);props=rawProps;break;case'details':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the toggle event.
		listenToNonDelegatedEvent('toggle',domElement);props=rawProps;break;case'input':initWrapperState(domElement,rawProps);props=getHostProps(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'option':validateProps(domElement,rawProps);props=rawProps;break;case'select':initWrapperState$1(domElement,rawProps);props=getHostProps$1(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'textarea':initWrapperState$2(domElement,rawProps);props=getHostProps$2(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;default:props=rawProps;}assertValidProps(tag,props);setInitialDOMProperties(tag,domElement,rootContainerElement,props,isCustomComponentTag);switch(tag){case'input':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper(domElement,rawProps,false);break;case'textarea':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper$3(domElement);break;case'option':postMountWrapper$1(domElement,rawProps);break;case'select':postMountWrapper$2(domElement,rawProps);break;default:if(typeof props.onClick==='function'){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(domElement);}break;}}// Calculate the diff between the two objects.
		function diffProperties(domElement,tag,lastRawProps,nextRawProps,rootContainerElement){{validatePropertiesInDevelopment(tag,nextRawProps);}var updatePayload=null;var lastProps;var nextProps;switch(tag){case'input':lastProps=getHostProps(domElement,lastRawProps);nextProps=getHostProps(domElement,nextRawProps);updatePayload=[];break;case'select':lastProps=getHostProps$1(domElement,lastRawProps);nextProps=getHostProps$1(domElement,nextRawProps);updatePayload=[];break;case'textarea':lastProps=getHostProps$2(domElement,lastRawProps);nextProps=getHostProps$2(domElement,nextRawProps);updatePayload=[];break;default:lastProps=lastRawProps;nextProps=nextRawProps;if(typeof lastProps.onClick!=='function'&&typeof nextProps.onClick==='function'){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(domElement);}break;}assertValidProps(tag,nextProps);var propKey;var styleName;var styleUpdates=null;for(propKey in lastProps){if(nextProps.hasOwnProperty(propKey)||!lastProps.hasOwnProperty(propKey)||lastProps[propKey]==null){continue;}if(propKey===STYLE){var lastStyle=lastProps[propKey];for(styleName in lastStyle){if(lastStyle.hasOwnProperty(styleName)){if(!styleUpdates){styleUpdates={};}styleUpdates[styleName]='';}}}else if(propKey===DANGEROUSLY_SET_INNER_HTML||propKey===CHILDREN);else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING);else if(propKey===AUTOFOCUS);else if(registrationNameDependencies.hasOwnProperty(propKey)){// This is a special case. If any listener updates we need to ensure
		// that the "current" fiber pointer gets updated so we need a commit
		// to update this element.
		if(!updatePayload){updatePayload=[];}}else {// For all other deleted properties we add it to the queue. We use
		// the allowed property list in the commit phase instead.
		(updatePayload=updatePayload||[]).push(propKey,null);}}for(propKey in nextProps){var nextProp=nextProps[propKey];var lastProp=lastProps!=null?lastProps[propKey]:undefined;if(!nextProps.hasOwnProperty(propKey)||nextProp===lastProp||nextProp==null&&lastProp==null){continue;}if(propKey===STYLE){{if(nextProp){// Freeze the next style object so that we can assume it won't be
		// mutated. We have already warned for this in the past.
		Object.freeze(nextProp);}}if(lastProp){// Unset styles on `lastProp` but not on `nextProp`.
		for(styleName in lastProp){if(lastProp.hasOwnProperty(styleName)&&(!nextProp||!nextProp.hasOwnProperty(styleName))){if(!styleUpdates){styleUpdates={};}styleUpdates[styleName]='';}}// Update styles that changed since `lastProp`.
		for(styleName in nextProp){if(nextProp.hasOwnProperty(styleName)&&lastProp[styleName]!==nextProp[styleName]){if(!styleUpdates){styleUpdates={};}styleUpdates[styleName]=nextProp[styleName];}}}else {// Relies on `updateStylesByID` not mutating `styleUpdates`.
		if(!styleUpdates){if(!updatePayload){updatePayload=[];}updatePayload.push(propKey,styleUpdates);}styleUpdates=nextProp;}}else if(propKey===DANGEROUSLY_SET_INNER_HTML){var nextHtml=nextProp?nextProp[HTML$1]:undefined;var lastHtml=lastProp?lastProp[HTML$1]:undefined;if(nextHtml!=null){if(lastHtml!==nextHtml){(updatePayload=updatePayload||[]).push(propKey,nextHtml);}}}else if(propKey===CHILDREN){if(typeof nextProp==='string'||typeof nextProp==='number'){(updatePayload=updatePayload||[]).push(propKey,''+nextProp);}}else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING);else if(registrationNameDependencies.hasOwnProperty(propKey)){if(nextProp!=null){// We eagerly listen to this even though we haven't committed yet.
		if(typeof nextProp!=='function'){warnForInvalidEventListener(propKey,nextProp);}if(propKey==='onScroll'){listenToNonDelegatedEvent('scroll',domElement);}}if(!updatePayload&&lastProp!==nextProp){// This is a special case. If any listener updates we need to ensure
		// that the "current" props pointer gets updated so we need a commit
		// to update this element.
		updatePayload=[];}}else {// For any other property we always add it to the queue and then we
		// filter it out using the allowed property list during the commit.
		(updatePayload=updatePayload||[]).push(propKey,nextProp);}}if(styleUpdates){{validateShorthandPropertyCollisionInDev(styleUpdates,nextProps[STYLE]);}(updatePayload=updatePayload||[]).push(STYLE,styleUpdates);}return updatePayload;}// Apply the diff.
		function updateProperties(domElement,updatePayload,tag,lastRawProps,nextRawProps){// Update checked *before* name.
		// In the middle of an update, it is possible to have multiple checked.
		// When a checked radio tries to change name, browser makes another radio's checked false.
		if(tag==='input'&&nextRawProps.type==='radio'&&nextRawProps.name!=null){updateChecked(domElement,nextRawProps);}var wasCustomComponentTag=isCustomComponent(tag,lastRawProps);var isCustomComponentTag=isCustomComponent(tag,nextRawProps);// Apply the diff.
		updateDOMProperties(domElement,updatePayload,wasCustomComponentTag,isCustomComponentTag);// TODO: Ensure that an update gets scheduled if any of the special props
		// changed.
		switch(tag){case'input':// Update the wrapper around inputs *after* updating props. This has to
		// happen after `updateDOMProperties`. Otherwise HTML5 input validations
		// raise warnings and prevent the new value from being assigned.
		updateWrapper(domElement,nextRawProps);break;case'textarea':updateWrapper$1(domElement,nextRawProps);break;case'select':// <select> value update needs to occur after <option> children
		// reconciliation
		postUpdateWrapper(domElement,nextRawProps);break;}}function getPossibleStandardName(propName){{var lowerCasedName=propName.toLowerCase();if(!possibleStandardNames.hasOwnProperty(lowerCasedName)){return null;}return possibleStandardNames[lowerCasedName]||null;}}function diffHydratedProperties(domElement,tag,rawProps,parentNamespace,rootContainerElement,isConcurrentMode,shouldWarnDev){var isCustomComponentTag;var extraAttributeNames;{isCustomComponentTag=isCustomComponent(tag,rawProps);validatePropertiesInDevelopment(tag,rawProps);}// TODO: Make sure that we check isMounted before firing any of these events.
		switch(tag){case'dialog':listenToNonDelegatedEvent('cancel',domElement);listenToNonDelegatedEvent('close',domElement);break;case'iframe':case'object':case'embed':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the load event.
		listenToNonDelegatedEvent('load',domElement);break;case'video':case'audio':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for all the media events.
		for(var i=0;i<mediaEventTypes.length;i++){listenToNonDelegatedEvent(mediaEventTypes[i],domElement);}break;case'source':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the error event.
		listenToNonDelegatedEvent('error',domElement);break;case'img':case'image':case'link':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for error and load events.
		listenToNonDelegatedEvent('error',domElement);listenToNonDelegatedEvent('load',domElement);break;case'details':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the toggle event.
		listenToNonDelegatedEvent('toggle',domElement);break;case'input':initWrapperState(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'option':validateProps(domElement,rawProps);break;case'select':initWrapperState$1(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'textarea':initWrapperState$2(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;}assertValidProps(tag,rawProps);{extraAttributeNames=new Set();var attributes=domElement.attributes;for(var _i=0;_i<attributes.length;_i++){var name=attributes[_i].name.toLowerCase();switch(name){// Controlled attributes are not validated
		// TODO: Only ignore them on controlled tags.
		case'value':break;case'checked':break;case'selected':break;default:// Intentionally use the original name.
		// See discussion in https://github.com/facebook/react/pull/10676.
		extraAttributeNames.add(attributes[_i].name);}}}var updatePayload=null;for(var propKey in rawProps){if(!rawProps.hasOwnProperty(propKey)){continue;}var nextProp=rawProps[propKey];if(propKey===CHILDREN){// For text content children we compare against textContent. This
		// might match additional HTML that is hidden when we read it using
		// textContent. E.g. "foo" will match "f<span>oo</span>" but that still
		// satisfies our requirement. Our requirement is not to produce perfect
		// HTML and attributes. Ideally we should preserve structure but it's
		// ok not to if the visible content is still enough to indicate what
		// even listeners these nodes might be wired up to.
		// TODO: Warn if there is more than a single textNode as a child.
		// TODO: Should we use domElement.firstChild.nodeValue to compare?
		if(typeof nextProp==='string'){if(domElement.textContent!==nextProp){if(rawProps[SUPPRESS_HYDRATION_WARNING]!==true){checkForUnmatchedText(domElement.textContent,nextProp,isConcurrentMode,shouldWarnDev);}updatePayload=[CHILDREN,nextProp];}}else if(typeof nextProp==='number'){if(domElement.textContent!==''+nextProp){if(rawProps[SUPPRESS_HYDRATION_WARNING]!==true){checkForUnmatchedText(domElement.textContent,nextProp,isConcurrentMode,shouldWarnDev);}updatePayload=[CHILDREN,''+nextProp];}}}else if(registrationNameDependencies.hasOwnProperty(propKey)){if(nextProp!=null){if(typeof nextProp!=='function'){warnForInvalidEventListener(propKey,nextProp);}if(propKey==='onScroll'){listenToNonDelegatedEvent('scroll',domElement);}}}else if(shouldWarnDev&&true&&// Convince Flow we've calculated it (it's DEV-only in this method.)
		typeof isCustomComponentTag==='boolean'){// Validate that the properties correspond to their expected values.
		var serverValue=void 0;var propertyInfo=isCustomComponentTag&&enableCustomElementPropertySupport?null:getPropertyInfo(propKey);if(rawProps[SUPPRESS_HYDRATION_WARNING]===true);else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING||// Controlled attributes are not validated
		// TODO: Only ignore them on controlled tags.
		propKey==='value'||propKey==='checked'||propKey==='selected');else if(propKey===DANGEROUSLY_SET_INNER_HTML){var serverHTML=domElement.innerHTML;var nextHtml=nextProp?nextProp[HTML$1]:undefined;if(nextHtml!=null){var expectedHTML=normalizeHTML(domElement,nextHtml);if(expectedHTML!==serverHTML){warnForPropDifference(propKey,serverHTML,expectedHTML);}}}else if(propKey===STYLE){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey);if(canDiffStyleForHydrationWarning){var expectedStyle=createDangerousStringForStyles(nextProp);serverValue=domElement.getAttribute('style');if(expectedStyle!==serverValue){warnForPropDifference(propKey,serverValue,expectedStyle);}}}else if(isCustomComponentTag&&!enableCustomElementPropertySupport){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey.toLowerCase());serverValue=getValueForAttribute(domElement,propKey,nextProp);if(nextProp!==serverValue){warnForPropDifference(propKey,serverValue,nextProp);}}else if(!shouldIgnoreAttribute(propKey,propertyInfo,isCustomComponentTag)&&!shouldRemoveAttribute(propKey,nextProp,propertyInfo,isCustomComponentTag)){var isMismatchDueToBadCasing=false;if(propertyInfo!==null){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propertyInfo.attributeName);serverValue=getValueForProperty(domElement,propKey,nextProp,propertyInfo);}else {var ownNamespace=parentNamespace;if(ownNamespace===HTML_NAMESPACE){ownNamespace=getIntrinsicNamespace(tag);}if(ownNamespace===HTML_NAMESPACE){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey.toLowerCase());}else {var standardName=getPossibleStandardName(propKey);if(standardName!==null&&standardName!==propKey){// If an SVG prop is supplied with bad casing, it will
		// be successfully parsed from HTML, but will produce a mismatch
		// (and would be incorrectly rendered on the client).
		// However, we already warn about bad casing elsewhere.
		// So we'll skip the misleading extra mismatch warning in this case.
		isMismatchDueToBadCasing=true;// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(standardName);}// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey);}serverValue=getValueForAttribute(domElement,propKey,nextProp);}var dontWarnCustomElement=enableCustomElementPropertySupport;if(!dontWarnCustomElement&&nextProp!==serverValue&&!isMismatchDueToBadCasing){warnForPropDifference(propKey,serverValue,nextProp);}}}}{if(shouldWarnDev){if(// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.size>0&&rawProps[SUPPRESS_HYDRATION_WARNING]!==true){// $FlowFixMe - Should be inferred as not undefined.
		warnForExtraAttributes(extraAttributeNames);}}}switch(tag){case'input':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper(domElement,rawProps,true);break;case'textarea':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper$3(domElement);break;case'select':case'option':// For input and textarea we current always set the value property at
		// post mount to force it to diverge from attributes. However, for
		// option and select we don't quite do the same thing and select
		// is not resilient to the DOM state changing so we don't do that here.
		// TODO: Consider not doing this for input and textarea.
		break;default:if(typeof rawProps.onClick==='function'){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(domElement);}break;}return updatePayload;}function diffHydratedText(textNode,text,isConcurrentMode){var isDifferent=textNode.nodeValue!==text;return isDifferent;}function warnForDeletedHydratableElement(parentNode,child){{if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Did not expect server HTML to contain a <%s> in <%s>.',child.nodeName.toLowerCase(),parentNode.nodeName.toLowerCase());}}function warnForDeletedHydratableText(parentNode,child){{if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Did not expect server HTML to contain the text node "%s" in <%s>.',child.nodeValue,parentNode.nodeName.toLowerCase());}}function warnForInsertedHydratedElement(parentNode,tag,props){{if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Expected server HTML to contain a matching <%s> in <%s>.',tag,parentNode.nodeName.toLowerCase());}}function warnForInsertedHydratedText(parentNode,text){{if(text===''){// We expect to insert empty text nodes since they're not represented in
		// the HTML.
		// TODO: Remove this special case if we can just avoid inserting empty
		// text nodes.
		return;}if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Expected server HTML to contain a matching text node for "%s" in <%s>.',text,parentNode.nodeName.toLowerCase());}}function restoreControlledState$3(domElement,tag,props){switch(tag){case'input':restoreControlledState(domElement,props);return;case'textarea':restoreControlledState$2(domElement,props);return;case'select':restoreControlledState$1(domElement,props);return;}}var validateDOMNesting=function(){};var updatedAncestorInfo=function(){};{// This validation code was written based on the HTML5 parsing spec:
		// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		//
		// Note: this does not catch all invalid nesting, nor does it try to (as it's
		// not clear what practical benefit doing so provides); instead, we warn only
		// for cases where the parser will give a parse tree differing from what React
		// intended. For example, <b><div></div></b> is invalid but we don't warn
		// because it still parses correctly; we do warn for other cases like nested
		// <p> tags where the beginning of the second element implicitly closes the
		// first, causing a confusing mess.
		// https://html.spec.whatwg.org/multipage/syntax.html#special
		var specialTags=['address','applet','area','article','aside','base','basefont','bgsound','blockquote','body','br','button','caption','center','col','colgroup','dd','details','dir','div','dl','dt','embed','fieldset','figcaption','figure','footer','form','frame','frameset','h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','iframe','img','input','isindex','li','link','listing','main','marquee','menu','menuitem','meta','nav','noembed','noframes','noscript','object','ol','p','param','plaintext','pre','script','section','select','source','style','summary','table','tbody','td','template','textarea','tfoot','th','thead','title','tr','track','ul','wbr','xmp'];// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		var inScopeTags=['applet','caption','html','table','td','th','marquee','object','template',// https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
		// TODO: Distinguish by namespace here -- for <title>, including it here
		// errs on the side of fewer warnings
		'foreignObject','desc','title'];// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
		var buttonScopeTags=inScopeTags.concat(['button']);// https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
		var impliedEndTags=['dd','dt','li','option','optgroup','p','rp','rt'];var emptyAncestorInfo={current:null,formTag:null,aTagInScope:null,buttonTagInScope:null,nobrTagInScope:null,pTagInButtonScope:null,listItemTagAutoclosing:null,dlItemTagAutoclosing:null};updatedAncestorInfo=function(oldInfo,tag){var ancestorInfo=assign({},oldInfo||emptyAncestorInfo);var info={tag:tag};if(inScopeTags.indexOf(tag)!==-1){ancestorInfo.aTagInScope=null;ancestorInfo.buttonTagInScope=null;ancestorInfo.nobrTagInScope=null;}if(buttonScopeTags.indexOf(tag)!==-1){ancestorInfo.pTagInButtonScope=null;}// See rules for 'li', 'dd', 'dt' start tags in
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		if(specialTags.indexOf(tag)!==-1&&tag!=='address'&&tag!=='div'&&tag!=='p'){ancestorInfo.listItemTagAutoclosing=null;ancestorInfo.dlItemTagAutoclosing=null;}ancestorInfo.current=info;if(tag==='form'){ancestorInfo.formTag=info;}if(tag==='a'){ancestorInfo.aTagInScope=info;}if(tag==='button'){ancestorInfo.buttonTagInScope=info;}if(tag==='nobr'){ancestorInfo.nobrTagInScope=info;}if(tag==='p'){ancestorInfo.pTagInButtonScope=info;}if(tag==='li'){ancestorInfo.listItemTagAutoclosing=info;}if(tag==='dd'||tag==='dt'){ancestorInfo.dlItemTagAutoclosing=info;}return ancestorInfo;};/**
		   * Returns whether
		   */var isTagValidWithParent=function(tag,parentTag){// First, let's check if we're in an unusual parsing mode...
		switch(parentTag){// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
		case'select':return tag==='option'||tag==='optgroup'||tag==='#text';case'optgroup':return tag==='option'||tag==='#text';// Strictly speaking, seeing an <option> doesn't mean we're in a <select>
		// but
		case'option':return tag==='#text';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
		// No special behavior since these rules fall back to "in body" mode for
		// all except special table nodes which cause bad parsing behavior anyway.
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
		case'tr':return tag==='th'||tag==='td'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
		case'tbody':case'thead':case'tfoot':return tag==='tr'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
		case'colgroup':return tag==='col'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
		case'table':return tag==='caption'||tag==='colgroup'||tag==='tbody'||tag==='tfoot'||tag==='thead'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
		case'head':return tag==='base'||tag==='basefont'||tag==='bgsound'||tag==='link'||tag==='meta'||tag==='title'||tag==='noscript'||tag==='noframes'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
		case'html':return tag==='head'||tag==='body'||tag==='frameset';case'frameset':return tag==='frame';case'#document':return tag==='html';}// Probably in the "in body" parsing mode, so we outlaw only tag combos
		// where the parsing rules cause implicit opens or closes to be added.
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		switch(tag){case'h1':case'h2':case'h3':case'h4':case'h5':case'h6':return parentTag!=='h1'&&parentTag!=='h2'&&parentTag!=='h3'&&parentTag!=='h4'&&parentTag!=='h5'&&parentTag!=='h6';case'rp':case'rt':return impliedEndTags.indexOf(parentTag)===-1;case'body':case'caption':case'col':case'colgroup':case'frameset':case'frame':case'head':case'html':case'tbody':case'td':case'tfoot':case'th':case'thead':case'tr':// These tags are only valid with a few parents that have special child
		// parsing rules -- if we're down here, then none of those matched and
		// so we allow it only if we don't know what the parent is, as all other
		// cases are invalid.
		return parentTag==null;}return true;};/**
		   * Returns whether
		   */var findInvalidAncestorForTag=function(tag,ancestorInfo){switch(tag){case'address':case'article':case'aside':case'blockquote':case'center':case'details':case'dialog':case'dir':case'div':case'dl':case'fieldset':case'figcaption':case'figure':case'footer':case'header':case'hgroup':case'main':case'menu':case'nav':case'ol':case'p':case'section':case'summary':case'ul':case'pre':case'listing':case'table':case'hr':case'xmp':case'h1':case'h2':case'h3':case'h4':case'h5':case'h6':return ancestorInfo.pTagInButtonScope;case'form':return ancestorInfo.formTag||ancestorInfo.pTagInButtonScope;case'li':return ancestorInfo.listItemTagAutoclosing;case'dd':case'dt':return ancestorInfo.dlItemTagAutoclosing;case'button':return ancestorInfo.buttonTagInScope;case'a':// Spec says something about storing a list of markers, but it sounds
		// equivalent to this check.
		return ancestorInfo.aTagInScope;case'nobr':return ancestorInfo.nobrTagInScope;}return null;};var didWarn$1={};validateDOMNesting=function(childTag,childText,ancestorInfo){ancestorInfo=ancestorInfo||emptyAncestorInfo;var parentInfo=ancestorInfo.current;var parentTag=parentInfo&&parentInfo.tag;if(childText!=null){if(childTag!=null){error('validateDOMNesting: when childText is passed, childTag should be null');}childTag='#text';}var invalidParent=isTagValidWithParent(childTag,parentTag)?null:parentInfo;var invalidAncestor=invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);var invalidParentOrAncestor=invalidParent||invalidAncestor;if(!invalidParentOrAncestor){return;}var ancestorTag=invalidParentOrAncestor.tag;var warnKey=!!invalidParent+'|'+childTag+'|'+ancestorTag;if(didWarn$1[warnKey]){return;}didWarn$1[warnKey]=true;var tagDisplayName=childTag;var whitespaceInfo='';if(childTag==='#text'){if(/\S/.test(childText)){tagDisplayName='Text nodes';}else {tagDisplayName='Whitespace text nodes';whitespaceInfo=" Make sure you don't have any extra whitespace between tags on "+'each line of your source code.';}}else {tagDisplayName='<'+childTag+'>';}if(invalidParent){var info='';if(ancestorTag==='table'&&childTag==='tr'){info+=' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by '+'the browser.';}error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s',tagDisplayName,ancestorTag,whitespaceInfo,info);}else {error('validateDOMNesting(...): %s cannot appear as a descendant of '+'<%s>.',tagDisplayName,ancestorTag);}};}var SUPPRESS_HYDRATION_WARNING$1='suppressHydrationWarning';var SUSPENSE_START_DATA='$';var SUSPENSE_END_DATA='/$';var SUSPENSE_PENDING_START_DATA='$?';var SUSPENSE_FALLBACK_START_DATA='$!';var STYLE$1='style';var eventsEnabled=null;var selectionInformation=null;function getRootHostContext(rootContainerInstance){var type;var namespace;var nodeType=rootContainerInstance.nodeType;switch(nodeType){case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:{type=nodeType===DOCUMENT_NODE?'#document':'#fragment';var root=rootContainerInstance.documentElement;namespace=root?root.namespaceURI:getChildNamespace(null,'');break;}default:{var container=nodeType===COMMENT_NODE?rootContainerInstance.parentNode:rootContainerInstance;var ownNamespace=container.namespaceURI||null;type=container.tagName;namespace=getChildNamespace(ownNamespace,type);break;}}{var validatedTag=type.toLowerCase();var ancestorInfo=updatedAncestorInfo(null,validatedTag);return {namespace:namespace,ancestorInfo:ancestorInfo};}}function getChildHostContext(parentHostContext,type,rootContainerInstance){{var parentHostContextDev=parentHostContext;var namespace=getChildNamespace(parentHostContextDev.namespace,type);var ancestorInfo=updatedAncestorInfo(parentHostContextDev.ancestorInfo,type);return {namespace:namespace,ancestorInfo:ancestorInfo};}}function getPublicInstance(instance){return instance;}function prepareForCommit(containerInfo){eventsEnabled=isEnabled();selectionInformation=getSelectionInformation();var activeInstance=null;setEnabled(false);return activeInstance;}function resetAfterCommit(containerInfo){restoreSelection(selectionInformation);setEnabled(eventsEnabled);eventsEnabled=null;selectionInformation=null;}function createInstance(type,props,rootContainerInstance,hostContext,internalInstanceHandle){var parentNamespace;{// TODO: take namespace into account when validating.
		var hostContextDev=hostContext;validateDOMNesting(type,null,hostContextDev.ancestorInfo);if(typeof props.children==='string'||typeof props.children==='number'){var string=''+props.children;var ownAncestorInfo=updatedAncestorInfo(hostContextDev.ancestorInfo,type);validateDOMNesting(null,string,ownAncestorInfo);}parentNamespace=hostContextDev.namespace;}var domElement=createElement(type,props,rootContainerInstance,parentNamespace);precacheFiberNode(internalInstanceHandle,domElement);updateFiberProps(domElement,props);return domElement;}function appendInitialChild(parentInstance,child){parentInstance.appendChild(child);}function finalizeInitialChildren(domElement,type,props,rootContainerInstance,hostContext){setInitialProperties(domElement,type,props,rootContainerInstance);switch(type){case'button':case'input':case'select':case'textarea':return !!props.autoFocus;case'img':return true;default:return false;}}function prepareUpdate(domElement,type,oldProps,newProps,rootContainerInstance,hostContext){{var hostContextDev=hostContext;if(typeof newProps.children!==typeof oldProps.children&&(typeof newProps.children==='string'||typeof newProps.children==='number')){var string=''+newProps.children;var ownAncestorInfo=updatedAncestorInfo(hostContextDev.ancestorInfo,type);validateDOMNesting(null,string,ownAncestorInfo);}}return diffProperties(domElement,type,oldProps,newProps);}function shouldSetTextContent(type,props){return type==='textarea'||type==='noscript'||typeof props.children==='string'||typeof props.children==='number'||typeof props.dangerouslySetInnerHTML==='object'&&props.dangerouslySetInnerHTML!==null&&props.dangerouslySetInnerHTML.__html!=null;}function createTextInstance(text,rootContainerInstance,hostContext,internalInstanceHandle){{var hostContextDev=hostContext;validateDOMNesting(null,text,hostContextDev.ancestorInfo);}var textNode=createTextNode(text,rootContainerInstance);precacheFiberNode(internalInstanceHandle,textNode);return textNode;}function getCurrentEventPriority(){var currentEvent=window.event;if(currentEvent===undefined){return DefaultEventPriority;}return getEventPriority(currentEvent.type);}// if a component just imports ReactDOM (e.g. for findDOMNode).
		// Some environments might not have setTimeout or clearTimeout.
		var scheduleTimeout=typeof setTimeout==='function'?setTimeout:undefined;var cancelTimeout=typeof clearTimeout==='function'?clearTimeout:undefined;var noTimeout=-1;var localPromise=typeof Promise==='function'?Promise:undefined;// -------------------
		var scheduleMicrotask=typeof queueMicrotask==='function'?queueMicrotask:typeof localPromise!=='undefined'?function(callback){return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);}:scheduleTimeout;// TODO: Determine the best fallback here.
		function handleErrorInNextTick(error){setTimeout(function(){throw error;});}// -------------------
		function commitMount(domElement,type,newProps,internalInstanceHandle){// Despite the naming that might imply otherwise, this method only
		// fires if there is an `Update` effect scheduled during mounting.
		// This happens if `finalizeInitialChildren` returns `true` (which it
		// does to implement the `autoFocus` attribute on the client). But
		// there are also other cases when this might happen (such as patching
		// up text content during hydration mismatch). So we'll check this again.
		switch(type){case'button':case'input':case'select':case'textarea':if(newProps.autoFocus){domElement.focus();}return;case'img':{if(newProps.src){domElement.src=newProps.src;}return;}}}function commitUpdate(domElement,updatePayload,type,oldProps,newProps,internalInstanceHandle){// Apply the diff to the DOM node.
		updateProperties(domElement,updatePayload,type,oldProps,newProps);// Update the props handle so that we know which props are the ones with
		// with current event handlers.
		updateFiberProps(domElement,newProps);}function resetTextContent(domElement){setTextContent(domElement,'');}function commitTextUpdate(textInstance,oldText,newText){textInstance.nodeValue=newText;}function appendChild(parentInstance,child){parentInstance.appendChild(child);}function appendChildToContainer(container,child){var parentNode;if(container.nodeType===COMMENT_NODE){parentNode=container.parentNode;parentNode.insertBefore(child,container);}else {parentNode=container;parentNode.appendChild(child);}// This container might be used for a portal.
		// If something inside a portal is clicked, that click should bubble
		// through the React tree. However, on Mobile Safari the click would
		// never bubble through the *DOM* tree unless an ancestor with onclick
		// event exists. So we wouldn't see it and dispatch it.
		// This is why we ensure that non React root containers have inline onclick
		// defined.
		// https://github.com/facebook/react/issues/11918
		var reactRootContainer=container._reactRootContainer;if((reactRootContainer===null||reactRootContainer===undefined)&&parentNode.onclick===null){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(parentNode);}}function insertBefore(parentInstance,child,beforeChild){parentInstance.insertBefore(child,beforeChild);}function insertInContainerBefore(container,child,beforeChild){if(container.nodeType===COMMENT_NODE){container.parentNode.insertBefore(child,beforeChild);}else {container.insertBefore(child,beforeChild);}}function removeChild(parentInstance,child){parentInstance.removeChild(child);}function removeChildFromContainer(container,child){if(container.nodeType===COMMENT_NODE){container.parentNode.removeChild(child);}else {container.removeChild(child);}}function clearSuspenseBoundary(parentInstance,suspenseInstance){var node=suspenseInstance;// Delete all nodes within this suspense boundary.
		// There might be nested nodes so we need to keep track of how
		// deep we are and only break out when we're back on top.
		var depth=0;do{var nextNode=node.nextSibling;parentInstance.removeChild(node);if(nextNode&&nextNode.nodeType===COMMENT_NODE){var data=nextNode.data;if(data===SUSPENSE_END_DATA){if(depth===0){parentInstance.removeChild(nextNode);// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(suspenseInstance);return;}else {depth--;}}else if(data===SUSPENSE_START_DATA||data===SUSPENSE_PENDING_START_DATA||data===SUSPENSE_FALLBACK_START_DATA){depth++;}}node=nextNode;}while(node);// TODO: Warn, we didn't find the end comment boundary.
		// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(suspenseInstance);}function clearSuspenseBoundaryFromContainer(container,suspenseInstance){if(container.nodeType===COMMENT_NODE){clearSuspenseBoundary(container.parentNode,suspenseInstance);}else if(container.nodeType===ELEMENT_NODE){clearSuspenseBoundary(container,suspenseInstance);}// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(container);}function hideInstance(instance){// TODO: Does this work for all element types? What about MathML? Should we
		// pass host context to this method?
		instance=instance;var style=instance.style;if(typeof style.setProperty==='function'){style.setProperty('display','none','important');}else {style.display='none';}}function hideTextInstance(textInstance){textInstance.nodeValue='';}function unhideInstance(instance,props){instance=instance;var styleProp=props[STYLE$1];var display=styleProp!==undefined&&styleProp!==null&&styleProp.hasOwnProperty('display')?styleProp.display:null;instance.style.display=dangerousStyleValue('display',display);}function unhideTextInstance(textInstance,text){textInstance.nodeValue=text;}function clearContainer(container){if(container.nodeType===ELEMENT_NODE){container.textContent='';}else if(container.nodeType===DOCUMENT_NODE){if(container.documentElement){container.removeChild(container.documentElement);}}}// -------------------
		function canHydrateInstance(instance,type,props){if(instance.nodeType!==ELEMENT_NODE||type.toLowerCase()!==instance.nodeName.toLowerCase()){return null;}// This has now been refined to an element node.
		return instance;}function canHydrateTextInstance(instance,text){if(text===''||instance.nodeType!==TEXT_NODE){// Empty strings are not parsed by HTML so there won't be a correct match here.
		return null;}// This has now been refined to a text node.
		return instance;}function canHydrateSuspenseInstance(instance){if(instance.nodeType!==COMMENT_NODE){// Empty strings are not parsed by HTML so there won't be a correct match here.
		return null;}// This has now been refined to a suspense node.
		return instance;}function isSuspenseInstancePending(instance){return instance.data===SUSPENSE_PENDING_START_DATA;}function isSuspenseInstanceFallback(instance){return instance.data===SUSPENSE_FALLBACK_START_DATA;}function getSuspenseInstanceFallbackErrorDetails(instance){var dataset=instance.nextSibling&&instance.nextSibling.dataset;var digest,message,stack;if(dataset){digest=dataset.dgst;{message=dataset.msg;stack=dataset.stck;}}{return {message:message,digest:digest,stack:stack};}// let value = {message: undefined, hash: undefined};
		// const nextSibling = instance.nextSibling;
		// if (nextSibling) {
		//   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
		//   value.message = dataset.msg;
		//   value.hash = dataset.hash;
		//   if (true) {
		//     value.stack = dataset.stack;
		//   }
		// }
		// return value;
		}function registerSuspenseInstanceRetry(instance,callback){instance._reactRetry=callback;}function getNextHydratable(node){// Skip non-hydratable nodes.
		for(;node!=null;node=node.nextSibling){var nodeType=node.nodeType;if(nodeType===ELEMENT_NODE||nodeType===TEXT_NODE){break;}if(nodeType===COMMENT_NODE){var nodeData=node.data;if(nodeData===SUSPENSE_START_DATA||nodeData===SUSPENSE_FALLBACK_START_DATA||nodeData===SUSPENSE_PENDING_START_DATA){break;}if(nodeData===SUSPENSE_END_DATA){return null;}}}return node;}function getNextHydratableSibling(instance){return getNextHydratable(instance.nextSibling);}function getFirstHydratableChild(parentInstance){return getNextHydratable(parentInstance.firstChild);}function getFirstHydratableChildWithinContainer(parentContainer){return getNextHydratable(parentContainer.firstChild);}function getFirstHydratableChildWithinSuspenseInstance(parentInstance){return getNextHydratable(parentInstance.nextSibling);}function hydrateInstance(instance,type,props,rootContainerInstance,hostContext,internalInstanceHandle,shouldWarnDev){precacheFiberNode(internalInstanceHandle,instance);// TODO: Possibly defer this until the commit phase where all the events
		// get attached.
		updateFiberProps(instance,props);var parentNamespace;{var hostContextDev=hostContext;parentNamespace=hostContextDev.namespace;}// TODO: Temporary hack to check if we're in a concurrent root. We can delete
		// when the legacy root API is removed.
		var isConcurrentMode=(internalInstanceHandle.mode&ConcurrentMode)!==NoMode;return diffHydratedProperties(instance,type,props,parentNamespace,rootContainerInstance,isConcurrentMode,shouldWarnDev);}function hydrateTextInstance(textInstance,text,internalInstanceHandle,shouldWarnDev){precacheFiberNode(internalInstanceHandle,textInstance);// TODO: Temporary hack to check if we're in a concurrent root. We can delete
		// when the legacy root API is removed.
		(internalInstanceHandle.mode&ConcurrentMode)!==NoMode;return diffHydratedText(textInstance,text);}function hydrateSuspenseInstance(suspenseInstance,internalInstanceHandle){precacheFiberNode(internalInstanceHandle,suspenseInstance);}function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance){var node=suspenseInstance.nextSibling;// Skip past all nodes within this suspense boundary.
		// There might be nested nodes so we need to keep track of how
		// deep we are and only break out when we're back on top.
		var depth=0;while(node){if(node.nodeType===COMMENT_NODE){var data=node.data;if(data===SUSPENSE_END_DATA){if(depth===0){return getNextHydratableSibling(node);}else {depth--;}}else if(data===SUSPENSE_START_DATA||data===SUSPENSE_FALLBACK_START_DATA||data===SUSPENSE_PENDING_START_DATA){depth++;}}node=node.nextSibling;}// TODO: Warn, we didn't find the end comment boundary.
		return null;}// Returns the SuspenseInstance if this node is a direct child of a
		// SuspenseInstance. I.e. if its previous sibling is a Comment with
		// SUSPENSE_x_START_DATA. Otherwise, null.
		function getParentSuspenseInstance(targetInstance){var node=targetInstance.previousSibling;// Skip past all nodes within this suspense boundary.
		// There might be nested nodes so we need to keep track of how
		// deep we are and only break out when we're back on top.
		var depth=0;while(node){if(node.nodeType===COMMENT_NODE){var data=node.data;if(data===SUSPENSE_START_DATA||data===SUSPENSE_FALLBACK_START_DATA||data===SUSPENSE_PENDING_START_DATA){if(depth===0){return node;}else {depth--;}}else if(data===SUSPENSE_END_DATA){depth++;}}node=node.previousSibling;}return null;}function commitHydratedContainer(container){// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(container);}function commitHydratedSuspenseInstance(suspenseInstance){// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(suspenseInstance);}function shouldDeleteUnhydratedTailInstances(parentType){return parentType!=='head'&&parentType!=='body';}function didNotMatchHydratedContainerTextInstance(parentContainer,textInstance,text,isConcurrentMode){var shouldWarnDev=true;checkForUnmatchedText(textInstance.nodeValue,text,isConcurrentMode,shouldWarnDev);}function didNotMatchHydratedTextInstance(parentType,parentProps,parentInstance,textInstance,text,isConcurrentMode){if(parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){var shouldWarnDev=true;checkForUnmatchedText(textInstance.nodeValue,text,isConcurrentMode,shouldWarnDev);}}function didNotHydrateInstanceWithinContainer(parentContainer,instance){{if(instance.nodeType===ELEMENT_NODE){warnForDeletedHydratableElement(parentContainer,instance);}else if(instance.nodeType===COMMENT_NODE);else {warnForDeletedHydratableText(parentContainer,instance);}}}function didNotHydrateInstanceWithinSuspenseInstance(parentInstance,instance){{// $FlowFixMe: Only Element or Document can be parent nodes.
		var parentNode=parentInstance.parentNode;if(parentNode!==null){if(instance.nodeType===ELEMENT_NODE){warnForDeletedHydratableElement(parentNode,instance);}else if(instance.nodeType===COMMENT_NODE);else {warnForDeletedHydratableText(parentNode,instance);}}}}function didNotHydrateInstance(parentType,parentProps,parentInstance,instance,isConcurrentMode){{if(isConcurrentMode||parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){if(instance.nodeType===ELEMENT_NODE){warnForDeletedHydratableElement(parentInstance,instance);}else if(instance.nodeType===COMMENT_NODE);else {warnForDeletedHydratableText(parentInstance,instance);}}}}function didNotFindHydratableInstanceWithinContainer(parentContainer,type,props){{warnForInsertedHydratedElement(parentContainer,type);}}function didNotFindHydratableTextInstanceWithinContainer(parentContainer,text){{warnForInsertedHydratedText(parentContainer,text);}}function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance,type,props){{// $FlowFixMe: Only Element or Document can be parent nodes.
		var parentNode=parentInstance.parentNode;if(parentNode!==null)warnForInsertedHydratedElement(parentNode,type);}}function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance,text){{// $FlowFixMe: Only Element or Document can be parent nodes.
		var parentNode=parentInstance.parentNode;if(parentNode!==null)warnForInsertedHydratedText(parentNode,text);}}function didNotFindHydratableInstance(parentType,parentProps,parentInstance,type,props,isConcurrentMode){{if(isConcurrentMode||parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){warnForInsertedHydratedElement(parentInstance,type);}}}function didNotFindHydratableTextInstance(parentType,parentProps,parentInstance,text,isConcurrentMode){{if(isConcurrentMode||parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){warnForInsertedHydratedText(parentInstance,text);}}}function errorHydratingContainer(parentContainer){{// TODO: This gets logged by onRecoverableError, too, so we should be
		// able to remove it.
		error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.',parentContainer.nodeName.toLowerCase());}}function preparePortalMount(portalInstance){listenToAllSupportedEvents(portalInstance);}var randomKey=Math.random().toString(36).slice(2);var internalInstanceKey='__reactFiber$'+randomKey;var internalPropsKey='__reactProps$'+randomKey;var internalContainerInstanceKey='__reactContainer$'+randomKey;var internalEventHandlersKey='__reactEvents$'+randomKey;var internalEventHandlerListenersKey='__reactListeners$'+randomKey;var internalEventHandlesSetKey='__reactHandles$'+randomKey;function detachDeletedInstance(node){// TODO: This function is only called on host components. I don't think all of
		// these fields are relevant.
		delete node[internalInstanceKey];delete node[internalPropsKey];delete node[internalEventHandlersKey];delete node[internalEventHandlerListenersKey];delete node[internalEventHandlesSetKey];}function precacheFiberNode(hostInst,node){node[internalInstanceKey]=hostInst;}function markContainerAsRoot(hostRoot,node){node[internalContainerInstanceKey]=hostRoot;}function unmarkContainerAsRoot(node){node[internalContainerInstanceKey]=null;}function isContainerMarkedAsRoot(node){return !!node[internalContainerInstanceKey];}// Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
		// If the target node is part of a hydrated or not yet rendered subtree, then
		// this may also return a SuspenseComponent or HostRoot to indicate that.
		// Conceptually the HostRoot fiber is a child of the Container node. So if you
		// pass the Container node as the targetNode, you will not actually get the
		// HostRoot back. To get to the HostRoot, you need to pass a child of it.
		// The same thing applies to Suspense boundaries.
		function getClosestInstanceFromNode(targetNode){var targetInst=targetNode[internalInstanceKey];if(targetInst){// Don't return HostRoot or SuspenseComponent here.
		return targetInst;}// If the direct event target isn't a React owned DOM node, we need to look
		// to see if one of its parents is a React owned DOM node.
		var parentNode=targetNode.parentNode;while(parentNode){// We'll check if this is a container root that could include
		// React nodes in the future. We need to check this first because
		// if we're a child of a dehydrated container, we need to first
		// find that inner container before moving on to finding the parent
		// instance. Note that we don't check this field on  the targetNode
		// itself because the fibers are conceptually between the container
		// node and the first child. It isn't surrounding the container node.
		// If it's not a container, we check if it's an instance.
		targetInst=parentNode[internalContainerInstanceKey]||parentNode[internalInstanceKey];if(targetInst){// Since this wasn't the direct target of the event, we might have
		// stepped past dehydrated DOM nodes to get here. However they could
		// also have been non-React nodes. We need to answer which one.
		// If we the instance doesn't have any children, then there can't be
		// a nested suspense boundary within it. So we can use this as a fast
		// bailout. Most of the time, when people add non-React children to
		// the tree, it is using a ref to a child-less DOM node.
		// Normally we'd only need to check one of the fibers because if it
		// has ever gone from having children to deleting them or vice versa
		// it would have deleted the dehydrated boundary nested inside already.
		// However, since the HostRoot starts out with an alternate it might
		// have one on the alternate so we need to check in case this was a
		// root.
		var alternate=targetInst.alternate;if(targetInst.child!==null||alternate!==null&&alternate.child!==null){// Next we need to figure out if the node that skipped past is
		// nested within a dehydrated boundary and if so, which one.
		var suspenseInstance=getParentSuspenseInstance(targetNode);while(suspenseInstance!==null){// We found a suspense instance. That means that we haven't
		// hydrated it yet. Even though we leave the comments in the
		// DOM after hydrating, and there are boundaries in the DOM
		// that could already be hydrated, we wouldn't have found them
		// through this pass since if the target is hydrated it would
		// have had an internalInstanceKey on it.
		// Let's get the fiber associated with the SuspenseComponent
		// as the deepest instance.
		var targetSuspenseInst=suspenseInstance[internalInstanceKey];if(targetSuspenseInst){return targetSuspenseInst;}// If we don't find a Fiber on the comment, it might be because
		// we haven't gotten to hydrate it yet. There might still be a
		// parent boundary that hasn't above this one so we need to find
		// the outer most that is known.
		suspenseInstance=getParentSuspenseInstance(suspenseInstance);// If we don't find one, then that should mean that the parent
		// host component also hasn't hydrated yet. We can return it
		// below since it will bail out on the isMounted check later.
		}}return targetInst;}targetNode=parentNode;parentNode=targetNode.parentNode;}return null;}/**
		 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
		 * instance, or null if the node was not rendered by this React.
		 */function getInstanceFromNode(node){var inst=node[internalInstanceKey]||node[internalContainerInstanceKey];if(inst){if(inst.tag===HostComponent||inst.tag===HostText||inst.tag===SuspenseComponent||inst.tag===HostRoot){return inst;}else {return null;}}return null;}/**
		 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
		 * DOM node.
		 */function getNodeFromInstance(inst){if(inst.tag===HostComponent||inst.tag===HostText){// In Fiber this, is just the state node right now. We assume it will be
		// a host component or host text.
		return inst.stateNode;}// Without this first invariant, passing a non-DOM-component triggers the next
		// invariant for a missing parent, which is super confusing.
		throw new Error('getNodeFromInstance: Invalid argument.');}function getFiberCurrentPropsFromNode(node){return node[internalPropsKey]||null;}function updateFiberProps(node,props){node[internalPropsKey]=props;}function getEventListenerSet(node){var elementListenerSet=node[internalEventHandlersKey];if(elementListenerSet===undefined){elementListenerSet=node[internalEventHandlersKey]=new Set();}return elementListenerSet;}var loggedTypeFailures={};var ReactDebugCurrentFrame$1=ReactSharedInternals.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(element){{if(element){var owner=element._owner;var stack=describeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null);ReactDebugCurrentFrame$1.setExtraStackFrame(stack);}else {ReactDebugCurrentFrame$1.setExtraStackFrame(null);}}}function checkPropTypes(typeSpecs,values,location,componentName,element){{// $FlowFixMe This is okay but Flow doesn't know it.
		var has=Function.call.bind(hasOwnProperty);for(var typeSpecName in typeSpecs){if(has(typeSpecs,typeSpecName)){var error$1=void 0;// Prop type validation may throw. In case they do, we don't want to
		// fail the render phase where it didn't fail before. So we log it.
		// After these have been cleaned up, we'll let them throw.
		try{// This is intentionally an invariant that gets caught. It's the same
		// behavior as without this statement except with a better message.
		if(typeof typeSpecs[typeSpecName]!=='function'){// eslint-disable-next-line react-internal/prod-error-codes
		var err=Error((componentName||'React class')+': '+location+' type `'+typeSpecName+'` is invalid; '+'it must be a function, usually from the `prop-types` package, but received `'+typeof typeSpecs[typeSpecName]+'`.'+'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');err.name='Invariant Violation';throw err;}error$1=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');}catch(ex){error$1=ex;}if(error$1&&!(error$1 instanceof Error)){setCurrentlyValidatingElement(element);error('%s: type specification of %s'+' `%s` is invalid; the type checker '+'function must return `null` or an `Error` but returned a %s. '+'You may have forgotten to pass an argument to the type checker '+'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and '+'shape all require an argument).',componentName||'React class',location,typeSpecName,typeof error$1);setCurrentlyValidatingElement(null);}if(error$1 instanceof Error&&!(error$1.message in loggedTypeFailures)){// Only monitor this failure once because there tends to be a lot of the
		// same error.
		loggedTypeFailures[error$1.message]=true;setCurrentlyValidatingElement(element);error('Failed %s type: %s',location,error$1.message);setCurrentlyValidatingElement(null);}}}}}var valueStack=[];var fiberStack;{fiberStack=[];}var index=-1;function createCursor(defaultValue){return {current:defaultValue};}function pop(cursor,fiber){if(index<0){{error('Unexpected pop.');}return;}{if(fiber!==fiberStack[index]){error('Unexpected Fiber popped.');}}cursor.current=valueStack[index];valueStack[index]=null;{fiberStack[index]=null;}index--;}function push(cursor,value,fiber){index++;valueStack[index]=cursor.current;{fiberStack[index]=fiber;}cursor.current=value;}var warnedAboutMissingGetChildContext;{warnedAboutMissingGetChildContext={};}var emptyContextObject={};{Object.freeze(emptyContextObject);}// A cursor to the current merged context object on the stack.
		var contextStackCursor=createCursor(emptyContextObject);// A cursor to a boolean indicating whether the context has changed.
		var didPerformWorkStackCursor=createCursor(false);// Keep track of the previous context object that was on the stack.
		// We use this to get access to the parent context after we have already
		// pushed the next context provider, and now need to merge their contexts.
		var previousContext=emptyContextObject;function getUnmaskedContext(workInProgress,Component,didPushOwnContextIfProvider){{if(didPushOwnContextIfProvider&&isContextProvider(Component)){// If the fiber is a context provider itself, when we read its context
		// we may have already pushed its own child context on the stack. A context
		// provider should not "see" its own child context. Therefore we read the
		// previous (parent) context instead for a context provider.
		return previousContext;}return contextStackCursor.current;}}function cacheContext(workInProgress,unmaskedContext,maskedContext){{var instance=workInProgress.stateNode;instance.__reactInternalMemoizedUnmaskedChildContext=unmaskedContext;instance.__reactInternalMemoizedMaskedChildContext=maskedContext;}}function getMaskedContext(workInProgress,unmaskedContext){{var type=workInProgress.type;var contextTypes=type.contextTypes;if(!contextTypes){return emptyContextObject;}// Avoid recreating masked context unless unmasked context has changed.
		// Failing to do this will result in unnecessary calls to componentWillReceiveProps.
		// This may trigger infinite loops if componentWillReceiveProps calls setState.
		var instance=workInProgress.stateNode;if(instance&&instance.__reactInternalMemoizedUnmaskedChildContext===unmaskedContext){return instance.__reactInternalMemoizedMaskedChildContext;}var context={};for(var key in contextTypes){context[key]=unmaskedContext[key];}{var name=getComponentNameFromFiber(workInProgress)||'Unknown';checkPropTypes(contextTypes,context,'context',name);}// Cache unmasked context so we can avoid recreating masked context unless necessary.
		// Context is created before the class component is instantiated so check for instance.
		if(instance){cacheContext(workInProgress,unmaskedContext,context);}return context;}}function hasContextChanged(){{return didPerformWorkStackCursor.current;}}function isContextProvider(type){{var childContextTypes=type.childContextTypes;return childContextTypes!==null&&childContextTypes!==undefined;}}function popContext(fiber){{pop(didPerformWorkStackCursor,fiber);pop(contextStackCursor,fiber);}}function popTopLevelContextObject(fiber){{pop(didPerformWorkStackCursor,fiber);pop(contextStackCursor,fiber);}}function pushTopLevelContextObject(fiber,context,didChange){{if(contextStackCursor.current!==emptyContextObject){throw new Error('Unexpected context found on stack. '+'This error is likely caused by a bug in React. Please file an issue.');}push(contextStackCursor,context,fiber);push(didPerformWorkStackCursor,didChange,fiber);}}function processChildContext(fiber,type,parentContext){{var instance=fiber.stateNode;var childContextTypes=type.childContextTypes;// TODO (bvaughn) Replace this behavior with an invariant() in the future.
		// It has only been added in Fiber to match the (unintentional) behavior in Stack.
		if(typeof instance.getChildContext!=='function'){{var componentName=getComponentNameFromFiber(fiber)||'Unknown';if(!warnedAboutMissingGetChildContext[componentName]){warnedAboutMissingGetChildContext[componentName]=true;error('%s.childContextTypes is specified but there is no getChildContext() method '+'on the instance. You can either define getChildContext() on %s or remove '+'childContextTypes from it.',componentName,componentName);}}return parentContext;}var childContext=instance.getChildContext();for(var contextKey in childContext){if(!(contextKey in childContextTypes)){throw new Error((getComponentNameFromFiber(fiber)||'Unknown')+".getChildContext(): key \""+contextKey+"\" is not defined in childContextTypes.");}}{var name=getComponentNameFromFiber(fiber)||'Unknown';checkPropTypes(childContextTypes,childContext,'child context',name);}return assign({},parentContext,childContext);}}function pushContextProvider(workInProgress){{var instance=workInProgress.stateNode;// We push the context as early as possible to ensure stack integrity.
		// If the instance does not exist yet, we will push null at first,
		// and replace it on the stack later when invalidating the context.
		var memoizedMergedChildContext=instance&&instance.__reactInternalMemoizedMergedChildContext||emptyContextObject;// Remember the parent context so we can merge with it later.
		// Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
		previousContext=contextStackCursor.current;push(contextStackCursor,memoizedMergedChildContext,workInProgress);push(didPerformWorkStackCursor,didPerformWorkStackCursor.current,workInProgress);return true;}}function invalidateContextProvider(workInProgress,type,didChange){{var instance=workInProgress.stateNode;if(!instance){throw new Error('Expected to have an instance by this point. '+'This error is likely caused by a bug in React. Please file an issue.');}if(didChange){// Merge parent and own context.
		// Skip this if we're not updating due to sCU.
		// This avoids unnecessarily recomputing memoized values.
		var mergedContext=processChildContext(workInProgress,type,previousContext);instance.__reactInternalMemoizedMergedChildContext=mergedContext;// Replace the old (or empty) context with the new one.
		// It is important to unwind the context in the reverse order.
		pop(didPerformWorkStackCursor,workInProgress);pop(contextStackCursor,workInProgress);// Now push the new context and mark that it has changed.
		push(contextStackCursor,mergedContext,workInProgress);push(didPerformWorkStackCursor,didChange,workInProgress);}else {pop(didPerformWorkStackCursor,workInProgress);push(didPerformWorkStackCursor,didChange,workInProgress);}}}function findCurrentUnmaskedContext(fiber){{// Currently this is only used with renderSubtreeIntoContainer; not sure if it
		// makes sense elsewhere
		if(!isFiberMounted(fiber)||fiber.tag!==ClassComponent){throw new Error('Expected subtree parent to be a mounted class component. '+'This error is likely caused by a bug in React. Please file an issue.');}var node=fiber;do{switch(node.tag){case HostRoot:return node.stateNode.context;case ClassComponent:{var Component=node.type;if(isContextProvider(Component)){return node.stateNode.__reactInternalMemoizedMergedChildContext;}break;}}node=node.return;}while(node!==null);throw new Error('Found unexpected detached subtree parent. '+'This error is likely caused by a bug in React. Please file an issue.');}}var LegacyRoot=0;var ConcurrentRoot=1;var syncQueue=null;var includesLegacySyncCallbacks=false;var isFlushingSyncQueue=false;function scheduleSyncCallback(callback){// Push this callback into an internal queue. We'll flush these either in
		// the next tick, or earlier if something calls `flushSyncCallbackQueue`.
		if(syncQueue===null){syncQueue=[callback];}else {// Push onto existing queue. Don't need to schedule a callback because
		// we already scheduled one when we created the queue.
		syncQueue.push(callback);}}function scheduleLegacySyncCallback(callback){includesLegacySyncCallbacks=true;scheduleSyncCallback(callback);}function flushSyncCallbacksOnlyInLegacyMode(){// Only flushes the queue if there's a legacy sync callback scheduled.
		// TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
		// it might make more sense for the queue to be a list of roots instead of a
		// list of generic callbacks. Then we can have two: one for legacy roots, one
		// for concurrent roots. And this method would only flush the legacy ones.
		if(includesLegacySyncCallbacks){flushSyncCallbacks();}}function flushSyncCallbacks(){if(!isFlushingSyncQueue&&syncQueue!==null){// Prevent re-entrance.
		isFlushingSyncQueue=true;var i=0;var previousUpdatePriority=getCurrentUpdatePriority();try{var isSync=true;var queue=syncQueue;// TODO: Is this necessary anymore? The only user code that runs in this
		// queue is in the render or commit phases.
		setCurrentUpdatePriority(DiscreteEventPriority);for(;i<queue.length;i++){var callback=queue[i];do{callback=callback(isSync);}while(callback!==null);}syncQueue=null;includesLegacySyncCallbacks=false;}catch(error){// If something throws, leave the remaining callbacks on the queue.
		if(syncQueue!==null){syncQueue=syncQueue.slice(i+1);}// Resume flushing in the next tick
		scheduleCallback(ImmediatePriority,flushSyncCallbacks);throw error;}finally{setCurrentUpdatePriority(previousUpdatePriority);isFlushingSyncQueue=false;}}return null;}// TODO: Use the unified fiber stack module instead of this local one?
		// Intentionally not using it yet to derisk the initial implementation, because
		// the way we push/pop these values is a bit unusual. If there's a mistake, I'd
		// rather the ids be wrong than crash the whole reconciler.
		var forkStack=[];var forkStackIndex=0;var treeForkProvider=null;var treeForkCount=0;var idStack=[];var idStackIndex=0;var treeContextProvider=null;var treeContextId=1;var treeContextOverflow='';function isForkedChild(workInProgress){warnIfNotHydrating();return (workInProgress.flags&Forked)!==NoFlags;}function getForksAtLevel(workInProgress){warnIfNotHydrating();return treeForkCount;}function getTreeId(){var overflow=treeContextOverflow;var idWithLeadingBit=treeContextId;var id=idWithLeadingBit&~getLeadingBit(idWithLeadingBit);return id.toString(32)+overflow;}function pushTreeFork(workInProgress,totalChildren){// This is called right after we reconcile an array (or iterator) of child
		// fibers, because that's the only place where we know how many children in
		// the whole set without doing extra work later, or storing addtional
		// information on the fiber.
		//
		// That's why this function is separate from pushTreeId — it's called during
		// the render phase of the fork parent, not the child, which is where we push
		// the other context values.
		//
		// In the Fizz implementation this is much simpler because the child is
		// rendered in the same callstack as the parent.
		//
		// It might be better to just add a `forks` field to the Fiber type. It would
		// make this module simpler.
		warnIfNotHydrating();forkStack[forkStackIndex++]=treeForkCount;forkStack[forkStackIndex++]=treeForkProvider;treeForkProvider=workInProgress;treeForkCount=totalChildren;}function pushTreeId(workInProgress,totalChildren,index){warnIfNotHydrating();idStack[idStackIndex++]=treeContextId;idStack[idStackIndex++]=treeContextOverflow;idStack[idStackIndex++]=treeContextProvider;treeContextProvider=workInProgress;var baseIdWithLeadingBit=treeContextId;var baseOverflow=treeContextOverflow;// The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
		// of the id; we use it to account for leading 0s.
		var baseLength=getBitLength(baseIdWithLeadingBit)-1;var baseId=baseIdWithLeadingBit&~(1<<baseLength);var slot=index+1;var length=getBitLength(totalChildren)+baseLength;// 30 is the max length we can store without overflowing, taking into
		// consideration the leading 1 we use to mark the end of the sequence.
		if(length>30){// We overflowed the bitwise-safe range. Fall back to slower algorithm.
		// This branch assumes the length of the base id is greater than 5; it won't
		// work for smaller ids, because you need 5 bits per character.
		//
		// We encode the id in multiple steps: first the base id, then the
		// remaining digits.
		//
		// Each 5 bit sequence corresponds to a single base 32 character. So for
		// example, if the current id is 23 bits long, we can convert 20 of those
		// bits into a string of 4 characters, with 3 bits left over.
		//
		// First calculate how many bits in the base id represent a complete
		// sequence of characters.
		var numberOfOverflowBits=baseLength-baseLength%5;// Then create a bitmask that selects only those bits.
		var newOverflowBits=(1<<numberOfOverflowBits)-1;// Select the bits, and convert them to a base 32 string.
		var newOverflow=(baseId&newOverflowBits).toString(32);// Now we can remove those bits from the base id.
		var restOfBaseId=baseId>>numberOfOverflowBits;var restOfBaseLength=baseLength-numberOfOverflowBits;// Finally, encode the rest of the bits using the normal algorithm. Because
		// we made more room, this time it won't overflow.
		var restOfLength=getBitLength(totalChildren)+restOfBaseLength;var restOfNewBits=slot<<restOfBaseLength;var id=restOfNewBits|restOfBaseId;var overflow=newOverflow+baseOverflow;treeContextId=1<<restOfLength|id;treeContextOverflow=overflow;}else {// Normal path
		var newBits=slot<<baseLength;var _id=newBits|baseId;var _overflow=baseOverflow;treeContextId=1<<length|_id;treeContextOverflow=_overflow;}}function pushMaterializedTreeId(workInProgress){warnIfNotHydrating();// This component materialized an id. This will affect any ids that appear
		// in its children.
		var returnFiber=workInProgress.return;if(returnFiber!==null){var numberOfForks=1;var slotIndex=0;pushTreeFork(workInProgress,numberOfForks);pushTreeId(workInProgress,numberOfForks,slotIndex);}}function getBitLength(number){return 32-clz32(number);}function getLeadingBit(id){return 1<<getBitLength(id)-1;}function popTreeContext(workInProgress){// Restore the previous values.
		// This is a bit more complicated than other context-like modules in Fiber
		// because the same Fiber may appear on the stack multiple times and for
		// different reasons. We have to keep popping until the work-in-progress is
		// no longer at the top of the stack.
		while(workInProgress===treeForkProvider){treeForkProvider=forkStack[--forkStackIndex];forkStack[forkStackIndex]=null;treeForkCount=forkStack[--forkStackIndex];forkStack[forkStackIndex]=null;}while(workInProgress===treeContextProvider){treeContextProvider=idStack[--idStackIndex];idStack[idStackIndex]=null;treeContextOverflow=idStack[--idStackIndex];idStack[idStackIndex]=null;treeContextId=idStack[--idStackIndex];idStack[idStackIndex]=null;}}function getSuspendedTreeContext(){warnIfNotHydrating();if(treeContextProvider!==null){return {id:treeContextId,overflow:treeContextOverflow};}else {return null;}}function restoreSuspendedTreeContext(workInProgress,suspendedContext){warnIfNotHydrating();idStack[idStackIndex++]=treeContextId;idStack[idStackIndex++]=treeContextOverflow;idStack[idStackIndex++]=treeContextProvider;treeContextId=suspendedContext.id;treeContextOverflow=suspendedContext.overflow;treeContextProvider=workInProgress;}function warnIfNotHydrating(){{if(!getIsHydrating()){error('Expected to be hydrating. This is a bug in React. Please file '+'an issue.');}}}// This may have been an insertion or a hydration.
		var hydrationParentFiber=null;var nextHydratableInstance=null;var isHydrating=false;// This flag allows for warning supression when we expect there to be mismatches
		// due to earlier mismatches or a suspended fiber.
		var didSuspendOrErrorDEV=false;// Hydration errors that were thrown inside this boundary
		var hydrationErrors=null;function warnIfHydrating(){{if(isHydrating){error('We should not be hydrating here. This is a bug in React. Please file a bug.');}}}function markDidThrowWhileHydratingDEV(){{didSuspendOrErrorDEV=true;}}function didSuspendOrErrorWhileHydratingDEV(){{return didSuspendOrErrorDEV;}}function enterHydrationState(fiber){var parentInstance=fiber.stateNode.containerInfo;nextHydratableInstance=getFirstHydratableChildWithinContainer(parentInstance);hydrationParentFiber=fiber;isHydrating=true;hydrationErrors=null;didSuspendOrErrorDEV=false;return true;}function reenterHydrationStateFromDehydratedSuspenseInstance(fiber,suspenseInstance,treeContext){nextHydratableInstance=getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);hydrationParentFiber=fiber;isHydrating=true;hydrationErrors=null;didSuspendOrErrorDEV=false;if(treeContext!==null){restoreSuspendedTreeContext(fiber,treeContext);}return true;}function warnUnhydratedInstance(returnFiber,instance){{switch(returnFiber.tag){case HostRoot:{didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo,instance);break;}case HostComponent:{var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotHydrateInstance(returnFiber.type,returnFiber.memoizedProps,returnFiber.stateNode,instance,// TODO: Delete this argument when we remove the legacy root API.
		isConcurrentMode);break;}case SuspenseComponent:{var suspenseState=returnFiber.memoizedState;if(suspenseState.dehydrated!==null)didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated,instance);break;}}}}function deleteHydratableInstance(returnFiber,instance){warnUnhydratedInstance(returnFiber,instance);var childToDelete=createFiberFromHostInstanceForDeletion();childToDelete.stateNode=instance;childToDelete.return=returnFiber;var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[childToDelete];returnFiber.flags|=ChildDeletion;}else {deletions.push(childToDelete);}}function warnNonhydratedInstance(returnFiber,fiber){{if(didSuspendOrErrorDEV){// Inside a boundary that already suspended. We're currently rendering the
		// siblings of a suspended node. The mismatch may be due to the missing
		// data, so it's probably a false positive.
		return;}switch(returnFiber.tag){case HostRoot:{var parentContainer=returnFiber.stateNode.containerInfo;switch(fiber.tag){case HostComponent:var type=fiber.type;fiber.pendingProps;didNotFindHydratableInstanceWithinContainer(parentContainer,type);break;case HostText:var text=fiber.pendingProps;didNotFindHydratableTextInstanceWithinContainer(parentContainer,text);break;}break;}case HostComponent:{var parentType=returnFiber.type;var parentProps=returnFiber.memoizedProps;var parentInstance=returnFiber.stateNode;switch(fiber.tag){case HostComponent:{var _type=fiber.type;var _props=fiber.pendingProps;var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotFindHydratableInstance(parentType,parentProps,parentInstance,_type,_props,// TODO: Delete this argument when we remove the legacy root API.
		isConcurrentMode);break;}case HostText:{var _text=fiber.pendingProps;var _isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotFindHydratableTextInstance(parentType,parentProps,parentInstance,_text,// TODO: Delete this argument when we remove the legacy root API.
		_isConcurrentMode);break;}}break;}case SuspenseComponent:{var suspenseState=returnFiber.memoizedState;var _parentInstance=suspenseState.dehydrated;if(_parentInstance!==null)switch(fiber.tag){case HostComponent:var _type2=fiber.type;fiber.pendingProps;didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance,_type2);break;case HostText:var _text2=fiber.pendingProps;didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance,_text2);break;}break;}default:return;}}}function insertNonHydratedInstance(returnFiber,fiber){fiber.flags=fiber.flags&~Hydrating|Placement;warnNonhydratedInstance(returnFiber,fiber);}function tryHydrate(fiber,nextInstance){switch(fiber.tag){case HostComponent:{var type=fiber.type;fiber.pendingProps;var instance=canHydrateInstance(nextInstance,type);if(instance!==null){fiber.stateNode=instance;hydrationParentFiber=fiber;nextHydratableInstance=getFirstHydratableChild(instance);return true;}return false;}case HostText:{var text=fiber.pendingProps;var textInstance=canHydrateTextInstance(nextInstance,text);if(textInstance!==null){fiber.stateNode=textInstance;hydrationParentFiber=fiber;// Text Instances don't have children so there's nothing to hydrate.
		nextHydratableInstance=null;return true;}return false;}case SuspenseComponent:{var suspenseInstance=canHydrateSuspenseInstance(nextInstance);if(suspenseInstance!==null){var suspenseState={dehydrated:suspenseInstance,treeContext:getSuspendedTreeContext(),retryLane:OffscreenLane};fiber.memoizedState=suspenseState;// Store the dehydrated fragment as a child fiber.
		// This simplifies the code for getHostSibling and deleting nodes,
		// since it doesn't have to consider all Suspense boundaries and
		// check if they're dehydrated ones or not.
		var dehydratedFragment=createFiberFromDehydratedFragment(suspenseInstance);dehydratedFragment.return=fiber;fiber.child=dehydratedFragment;hydrationParentFiber=fiber;// While a Suspense Instance does have children, we won't step into
		// it during the first pass. Instead, we'll reenter it later.
		nextHydratableInstance=null;return true;}return false;}default:return false;}}function shouldClientRenderOnMismatch(fiber){return (fiber.mode&ConcurrentMode)!==NoMode&&(fiber.flags&DidCapture)===NoFlags;}function throwOnHydrationMismatch(fiber){throw new Error('Hydration failed because the initial UI does not match what was '+'rendered on the server.');}function tryToClaimNextHydratableInstance(fiber){if(!isHydrating){return;}var nextInstance=nextHydratableInstance;if(!nextInstance){if(shouldClientRenderOnMismatch(fiber)){warnNonhydratedInstance(hydrationParentFiber,fiber);throwOnHydrationMismatch();}// Nothing to hydrate. Make it an insertion.
		insertNonHydratedInstance(hydrationParentFiber,fiber);isHydrating=false;hydrationParentFiber=fiber;return;}var firstAttemptedInstance=nextInstance;if(!tryHydrate(fiber,nextInstance)){if(shouldClientRenderOnMismatch(fiber)){warnNonhydratedInstance(hydrationParentFiber,fiber);throwOnHydrationMismatch();}// If we can't hydrate this instance let's try the next one.
		// We use this as a heuristic. It's based on intuition and not data so it
		// might be flawed or unnecessary.
		nextInstance=getNextHydratableSibling(firstAttemptedInstance);var prevHydrationParentFiber=hydrationParentFiber;if(!nextInstance||!tryHydrate(fiber,nextInstance)){// Nothing to hydrate. Make it an insertion.
		insertNonHydratedInstance(hydrationParentFiber,fiber);isHydrating=false;hydrationParentFiber=fiber;return;}// We matched the next one, we'll now assume that the first one was
		// superfluous and we'll delete it. Since we can't eagerly delete it
		// we'll have to schedule a deletion. To do that, this node needs a dummy
		// fiber associated with it.
		deleteHydratableInstance(prevHydrationParentFiber,firstAttemptedInstance);}}function prepareToHydrateHostInstance(fiber,rootContainerInstance,hostContext){var instance=fiber.stateNode;var shouldWarnIfMismatchDev=!didSuspendOrErrorDEV;var updatePayload=hydrateInstance(instance,fiber.type,fiber.memoizedProps,rootContainerInstance,hostContext,fiber,shouldWarnIfMismatchDev);// TODO: Type this specific to this type of component.
		fiber.updateQueue=updatePayload;// If the update payload indicates that there is a change or if there
		// is a new ref we mark this as an update.
		if(updatePayload!==null){return true;}return false;}function prepareToHydrateHostTextInstance(fiber){var textInstance=fiber.stateNode;var textContent=fiber.memoizedProps;var shouldUpdate=hydrateTextInstance(textInstance,textContent,fiber);if(shouldUpdate){// We assume that prepareToHydrateHostTextInstance is called in a context where the
		// hydration parent is the parent host component of this host text.
		var returnFiber=hydrationParentFiber;if(returnFiber!==null){switch(returnFiber.tag){case HostRoot:{var parentContainer=returnFiber.stateNode.containerInfo;var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotMatchHydratedContainerTextInstance(parentContainer,textInstance,textContent,// TODO: Delete this argument when we remove the legacy root API.
		isConcurrentMode);break;}case HostComponent:{var parentType=returnFiber.type;var parentProps=returnFiber.memoizedProps;var parentInstance=returnFiber.stateNode;var _isConcurrentMode2=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotMatchHydratedTextInstance(parentType,parentProps,parentInstance,textInstance,textContent,// TODO: Delete this argument when we remove the legacy root API.
		_isConcurrentMode2);break;}}}}return shouldUpdate;}function prepareToHydrateHostSuspenseInstance(fiber){var suspenseState=fiber.memoizedState;var suspenseInstance=suspenseState!==null?suspenseState.dehydrated:null;if(!suspenseInstance){throw new Error('Expected to have a hydrated suspense instance. '+'This error is likely caused by a bug in React. Please file an issue.');}hydrateSuspenseInstance(suspenseInstance,fiber);}function skipPastDehydratedSuspenseInstance(fiber){var suspenseState=fiber.memoizedState;var suspenseInstance=suspenseState!==null?suspenseState.dehydrated:null;if(!suspenseInstance){throw new Error('Expected to have a hydrated suspense instance. '+'This error is likely caused by a bug in React. Please file an issue.');}return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);}function popToNextHostParent(fiber){var parent=fiber.return;while(parent!==null&&parent.tag!==HostComponent&&parent.tag!==HostRoot&&parent.tag!==SuspenseComponent){parent=parent.return;}hydrationParentFiber=parent;}function popHydrationState(fiber){if(fiber!==hydrationParentFiber){// We're deeper than the current hydration context, inside an inserted
		// tree.
		return false;}if(!isHydrating){// If we're not currently hydrating but we're in a hydration context, then
		// we were an insertion and now need to pop up reenter hydration of our
		// siblings.
		popToNextHostParent(fiber);isHydrating=true;return false;}// If we have any remaining hydratable nodes, we need to delete them now.
		// We only do this deeper than head and body since they tend to have random
		// other nodes in them. We also ignore components with pure text content in
		// side of them. We also don't delete anything inside the root container.
		if(fiber.tag!==HostRoot&&(fiber.tag!==HostComponent||shouldDeleteUnhydratedTailInstances(fiber.type)&&!shouldSetTextContent(fiber.type,fiber.memoizedProps))){var nextInstance=nextHydratableInstance;if(nextInstance){if(shouldClientRenderOnMismatch(fiber)){warnIfUnhydratedTailNodes(fiber);throwOnHydrationMismatch();}else {while(nextInstance){deleteHydratableInstance(fiber,nextInstance);nextInstance=getNextHydratableSibling(nextInstance);}}}}popToNextHostParent(fiber);if(fiber.tag===SuspenseComponent){nextHydratableInstance=skipPastDehydratedSuspenseInstance(fiber);}else {nextHydratableInstance=hydrationParentFiber?getNextHydratableSibling(fiber.stateNode):null;}return true;}function hasUnhydratedTailNodes(){return isHydrating&&nextHydratableInstance!==null;}function warnIfUnhydratedTailNodes(fiber){var nextInstance=nextHydratableInstance;while(nextInstance){warnUnhydratedInstance(fiber,nextInstance);nextInstance=getNextHydratableSibling(nextInstance);}}function resetHydrationState(){hydrationParentFiber=null;nextHydratableInstance=null;isHydrating=false;didSuspendOrErrorDEV=false;}function upgradeHydrationErrorsToRecoverable(){if(hydrationErrors!==null){// Successfully completed a forced client render. The errors that occurred
		// during the hydration attempt are now recovered. We will log them in
		// commit phase, once the entire tree has finished.
		queueRecoverableErrors(hydrationErrors);hydrationErrors=null;}}function getIsHydrating(){return isHydrating;}function queueHydrationError(error){if(hydrationErrors===null){hydrationErrors=[error];}else {hydrationErrors.push(error);}}var ReactCurrentBatchConfig$1=ReactSharedInternals.ReactCurrentBatchConfig;var NoTransition=null;function requestCurrentTransition(){return ReactCurrentBatchConfig$1.transition;}var ReactStrictModeWarnings={recordUnsafeLifecycleWarnings:function(fiber,instance){},flushPendingUnsafeLifecycleWarnings:function(){},recordLegacyContextWarning:function(fiber,instance){},flushLegacyContextWarning:function(){},discardPendingWarnings:function(){}};{var findStrictRoot=function(fiber){var maybeStrictRoot=null;var node=fiber;while(node!==null){if(node.mode&StrictLegacyMode){maybeStrictRoot=node;}node=node.return;}return maybeStrictRoot;};var setToSortedString=function(set){var array=[];set.forEach(function(value){array.push(value);});return array.sort().join(', ');};var pendingComponentWillMountWarnings=[];var pendingUNSAFE_ComponentWillMountWarnings=[];var pendingComponentWillReceivePropsWarnings=[];var pendingUNSAFE_ComponentWillReceivePropsWarnings=[];var pendingComponentWillUpdateWarnings=[];var pendingUNSAFE_ComponentWillUpdateWarnings=[];// Tracks components we have already warned about.
		var didWarnAboutUnsafeLifecycles=new Set();ReactStrictModeWarnings.recordUnsafeLifecycleWarnings=function(fiber,instance){// Dedupe strategy: Warn once per component.
		if(didWarnAboutUnsafeLifecycles.has(fiber.type)){return;}if(typeof instance.componentWillMount==='function'&&// Don't warn about react-lifecycles-compat polyfilled components.
		instance.componentWillMount.__suppressDeprecationWarning!==true){pendingComponentWillMountWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillMount==='function'){pendingUNSAFE_ComponentWillMountWarnings.push(fiber);}if(typeof instance.componentWillReceiveProps==='function'&&instance.componentWillReceiveProps.__suppressDeprecationWarning!==true){pendingComponentWillReceivePropsWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillReceiveProps==='function'){pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);}if(typeof instance.componentWillUpdate==='function'&&instance.componentWillUpdate.__suppressDeprecationWarning!==true){pendingComponentWillUpdateWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillUpdate==='function'){pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);}};ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings=function(){// We do an initial pass to gather component names
		var componentWillMountUniqueNames=new Set();if(pendingComponentWillMountWarnings.length>0){pendingComponentWillMountWarnings.forEach(function(fiber){componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillMountWarnings=[];}var UNSAFE_componentWillMountUniqueNames=new Set();if(pendingUNSAFE_ComponentWillMountWarnings.length>0){pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber){UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillMountWarnings=[];}var componentWillReceivePropsUniqueNames=new Set();if(pendingComponentWillReceivePropsWarnings.length>0){pendingComponentWillReceivePropsWarnings.forEach(function(fiber){componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillReceivePropsWarnings=[];}var UNSAFE_componentWillReceivePropsUniqueNames=new Set();if(pendingUNSAFE_ComponentWillReceivePropsWarnings.length>0){pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber){UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillReceivePropsWarnings=[];}var componentWillUpdateUniqueNames=new Set();if(pendingComponentWillUpdateWarnings.length>0){pendingComponentWillUpdateWarnings.forEach(function(fiber){componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillUpdateWarnings=[];}var UNSAFE_componentWillUpdateUniqueNames=new Set();if(pendingUNSAFE_ComponentWillUpdateWarnings.length>0){pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber){UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillUpdateWarnings=[];}// Finally, we flush all the warnings
		// UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
		if(UNSAFE_componentWillMountUniqueNames.size>0){var sortedNames=setToSortedString(UNSAFE_componentWillMountUniqueNames);error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move code with side effects to componentDidMount, and set initial state in the constructor.\n'+'\nPlease update the following components: %s',sortedNames);}if(UNSAFE_componentWillReceivePropsUniqueNames.size>0){var _sortedNames=setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended '+'and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+"* If you're updating state whenever props change, "+'refactor your code to use memoization techniques or move it to '+'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n'+'\nPlease update the following components: %s',_sortedNames);}if(UNSAFE_componentWillUpdateUniqueNames.size>0){var _sortedNames2=setToSortedString(UNSAFE_componentWillUpdateUniqueNames);error('Using UNSAFE_componentWillUpdate in strict mode is not recommended '+'and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+'\nPlease update the following components: %s',_sortedNames2);}if(componentWillMountUniqueNames.size>0){var _sortedNames3=setToSortedString(componentWillMountUniqueNames);warn('componentWillMount has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move code with side effects to componentDidMount, and set initial state in the constructor.\n'+'* Rename componentWillMount to UNSAFE_componentWillMount to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n'+'\nPlease update the following components: %s',_sortedNames3);}if(componentWillReceivePropsUniqueNames.size>0){var _sortedNames4=setToSortedString(componentWillReceivePropsUniqueNames);warn('componentWillReceiveProps has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+"* If you're updating state whenever props change, refactor your "+'code to use memoization techniques or move it to '+'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n'+'* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n'+'\nPlease update the following components: %s',_sortedNames4);}if(componentWillUpdateUniqueNames.size>0){var _sortedNames5=setToSortedString(componentWillUpdateUniqueNames);warn('componentWillUpdate has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+'* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n'+'\nPlease update the following components: %s',_sortedNames5);}};var pendingLegacyContextWarning=new Map();// Tracks components we have already warned about.
		var didWarnAboutLegacyContext=new Set();ReactStrictModeWarnings.recordLegacyContextWarning=function(fiber,instance){var strictRoot=findStrictRoot(fiber);if(strictRoot===null){error('Expected to find a StrictMode component in a strict mode tree. '+'This error is likely caused by a bug in React. Please file an issue.');return;}// Dedup strategy: Warn once per component.
		if(didWarnAboutLegacyContext.has(fiber.type)){return;}var warningsForRoot=pendingLegacyContextWarning.get(strictRoot);if(fiber.type.contextTypes!=null||fiber.type.childContextTypes!=null||instance!==null&&typeof instance.getChildContext==='function'){if(warningsForRoot===undefined){warningsForRoot=[];pendingLegacyContextWarning.set(strictRoot,warningsForRoot);}warningsForRoot.push(fiber);}};ReactStrictModeWarnings.flushLegacyContextWarning=function(){pendingLegacyContextWarning.forEach(function(fiberArray,strictRoot){if(fiberArray.length===0){return;}var firstFiber=fiberArray[0];var uniqueNames=new Set();fiberArray.forEach(function(fiber){uniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutLegacyContext.add(fiber.type);});var sortedNames=setToSortedString(uniqueNames);try{setCurrentFiber(firstFiber);error('Legacy context API has been detected within a strict-mode tree.'+'\n\nThe old API will be supported in all 16.x releases, but applications '+'using it should migrate to the new version.'+'\n\nPlease update the following components: %s'+'\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context',sortedNames);}finally{resetCurrentFiber();}});};ReactStrictModeWarnings.discardPendingWarnings=function(){pendingComponentWillMountWarnings=[];pendingUNSAFE_ComponentWillMountWarnings=[];pendingComponentWillReceivePropsWarnings=[];pendingUNSAFE_ComponentWillReceivePropsWarnings=[];pendingComponentWillUpdateWarnings=[];pendingUNSAFE_ComponentWillUpdateWarnings=[];pendingLegacyContextWarning=new Map();};}function resolveDefaultProps(Component,baseProps){if(Component&&Component.defaultProps){// Resolve default props. Taken from ReactElement
		var props=assign({},baseProps);var defaultProps=Component.defaultProps;for(var propName in defaultProps){if(props[propName]===undefined){props[propName]=defaultProps[propName];}}return props;}return baseProps;}var valueCursor=createCursor(null);var rendererSigil;{// Use this to detect multiple renderers using the same context
		rendererSigil={};}var currentlyRenderingFiber=null;var lastContextDependency=null;var lastFullyObservedContext=null;var isDisallowedContextReadInDEV=false;function resetContextDependencies(){// This is called right before React yields execution, to ensure `readContext`
		// cannot be called outside the render phase.
		currentlyRenderingFiber=null;lastContextDependency=null;lastFullyObservedContext=null;{isDisallowedContextReadInDEV=false;}}function enterDisallowedContextReadInDEV(){{isDisallowedContextReadInDEV=true;}}function exitDisallowedContextReadInDEV(){{isDisallowedContextReadInDEV=false;}}function pushProvider(providerFiber,context,nextValue){{push(valueCursor,context._currentValue,providerFiber);context._currentValue=nextValue;{if(context._currentRenderer!==undefined&&context._currentRenderer!==null&&context._currentRenderer!==rendererSigil){error('Detected multiple renderers concurrently rendering the '+'same context provider. This is currently unsupported.');}context._currentRenderer=rendererSigil;}}}function popProvider(context,providerFiber){var currentValue=valueCursor.current;pop(valueCursor,providerFiber);{{context._currentValue=currentValue;}}}function scheduleContextWorkOnParentPath(parent,renderLanes,propagationRoot){// Update the child lanes of all the ancestors, including the alternates.
		var node=parent;while(node!==null){var alternate=node.alternate;if(!isSubsetOfLanes(node.childLanes,renderLanes)){node.childLanes=mergeLanes(node.childLanes,renderLanes);if(alternate!==null){alternate.childLanes=mergeLanes(alternate.childLanes,renderLanes);}}else if(alternate!==null&&!isSubsetOfLanes(alternate.childLanes,renderLanes)){alternate.childLanes=mergeLanes(alternate.childLanes,renderLanes);}if(node===propagationRoot){break;}node=node.return;}{if(node!==propagationRoot){error('Expected to find the propagation root when scheduling context work. '+'This error is likely caused by a bug in React. Please file an issue.');}}}function propagateContextChange(workInProgress,context,renderLanes){{propagateContextChange_eager(workInProgress,context,renderLanes);}}function propagateContextChange_eager(workInProgress,context,renderLanes){var fiber=workInProgress.child;if(fiber!==null){// Set the return pointer of the child to the work-in-progress fiber.
		fiber.return=workInProgress;}while(fiber!==null){var nextFiber=void 0;// Visit this fiber.
		var list=fiber.dependencies;if(list!==null){nextFiber=fiber.child;var dependency=list.firstContext;while(dependency!==null){// Check if the context matches.
		if(dependency.context===context){// Match! Schedule an update on this fiber.
		if(fiber.tag===ClassComponent){// Schedule a force update on the work-in-progress.
		var lane=pickArbitraryLane(renderLanes);var update=createUpdate(NoTimestamp,lane);update.tag=ForceUpdate;// TODO: Because we don't have a work-in-progress, this will add the
		// update to the current fiber, too, which means it will persist even if
		// this render is thrown away. Since it's a race condition, not sure it's
		// worth fixing.
		// Inlined `enqueueUpdate` to remove interleaved update check
		var updateQueue=fiber.updateQueue;if(updateQueue===null);else {var sharedQueue=updateQueue.shared;var pending=sharedQueue.pending;if(pending===null){// This is the first update. Create a circular list.
		update.next=update;}else {update.next=pending.next;pending.next=update;}sharedQueue.pending=update;}}fiber.lanes=mergeLanes(fiber.lanes,renderLanes);var alternate=fiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,renderLanes);}scheduleContextWorkOnParentPath(fiber.return,renderLanes,workInProgress);// Mark the updated lanes on the list, too.
		list.lanes=mergeLanes(list.lanes,renderLanes);// Since we already found a match, we can stop traversing the
		// dependency list.
		break;}dependency=dependency.next;}}else if(fiber.tag===ContextProvider){// Don't scan deeper if this is a matching provider
		nextFiber=fiber.type===workInProgress.type?null:fiber.child;}else if(fiber.tag===DehydratedFragment){// If a dehydrated suspense boundary is in this subtree, we don't know
		// if it will have any context consumers in it. The best we can do is
		// mark it as having updates.
		var parentSuspense=fiber.return;if(parentSuspense===null){throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');}parentSuspense.lanes=mergeLanes(parentSuspense.lanes,renderLanes);var _alternate=parentSuspense.alternate;if(_alternate!==null){_alternate.lanes=mergeLanes(_alternate.lanes,renderLanes);}// This is intentionally passing this fiber as the parent
		// because we want to schedule this fiber as having work
		// on its children. We'll use the childLanes on
		// this fiber to indicate that a context has changed.
		scheduleContextWorkOnParentPath(parentSuspense,renderLanes,workInProgress);nextFiber=fiber.sibling;}else {// Traverse down.
		nextFiber=fiber.child;}if(nextFiber!==null){// Set the return pointer of the child to the work-in-progress fiber.
		nextFiber.return=fiber;}else {// No child. Traverse to next sibling.
		nextFiber=fiber;while(nextFiber!==null){if(nextFiber===workInProgress){// We're back to the root of this subtree. Exit.
		nextFiber=null;break;}var sibling=nextFiber.sibling;if(sibling!==null){// Set the return pointer of the sibling to the work-in-progress fiber.
		sibling.return=nextFiber.return;nextFiber=sibling;break;}// No more siblings. Traverse up.
		nextFiber=nextFiber.return;}}fiber=nextFiber;}}function prepareToReadContext(workInProgress,renderLanes){currentlyRenderingFiber=workInProgress;lastContextDependency=null;lastFullyObservedContext=null;var dependencies=workInProgress.dependencies;if(dependencies!==null){{var firstContext=dependencies.firstContext;if(firstContext!==null){if(includesSomeLane(dependencies.lanes,renderLanes)){// Context list has a pending update. Mark that this fiber performed work.
		markWorkInProgressReceivedUpdate();}// Reset the work-in-progress list
		dependencies.firstContext=null;}}}}function readContext(context){{// This warning would fire if you read context inside a Hook like useMemo.
		// Unlike the class check below, it's not enforced in production for perf.
		if(isDisallowedContextReadInDEV){error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');}}var value=context._currentValue;if(lastFullyObservedContext===context);else {var contextItem={context:context,memoizedValue:value,next:null};if(lastContextDependency===null){if(currentlyRenderingFiber===null){throw new Error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');}// This is the first dependency for this component. Create a new list.
		lastContextDependency=contextItem;currentlyRenderingFiber.dependencies={lanes:NoLanes,firstContext:contextItem};}else {// Append a new context item.
		lastContextDependency=lastContextDependency.next=contextItem;}}return value;}// render. When this render exits, either because it finishes or because it is
		// interrupted, the interleaved updates will be transferred onto the main part
		// of the queue.
		var concurrentQueues=null;function pushConcurrentUpdateQueue(queue){if(concurrentQueues===null){concurrentQueues=[queue];}else {concurrentQueues.push(queue);}}function finishQueueingConcurrentUpdates(){// Transfer the interleaved updates onto the main queue. Each queue has a
		// `pending` field and an `interleaved` field. When they are not null, they
		// point to the last node in a circular linked list. We need to append the
		// interleaved list to the end of the pending list by joining them into a
		// single, circular list.
		if(concurrentQueues!==null){for(var i=0;i<concurrentQueues.length;i++){var queue=concurrentQueues[i];var lastInterleavedUpdate=queue.interleaved;if(lastInterleavedUpdate!==null){queue.interleaved=null;var firstInterleavedUpdate=lastInterleavedUpdate.next;var lastPendingUpdate=queue.pending;if(lastPendingUpdate!==null){var firstPendingUpdate=lastPendingUpdate.next;lastPendingUpdate.next=firstInterleavedUpdate;lastInterleavedUpdate.next=firstPendingUpdate;}queue.pending=lastInterleavedUpdate;}}concurrentQueues=null;}}function enqueueConcurrentHookUpdate(fiber,queue,update,lane){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.
		update.next=update;// At the end of the current render, this queue's interleaved updates will
		// be transferred to the pending queue.
		pushConcurrentUpdateQueue(queue);}else {update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;return markUpdateLaneFromFiberToRoot(fiber,lane);}function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber,queue,update,lane){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.
		update.next=update;// At the end of the current render, this queue's interleaved updates will
		// be transferred to the pending queue.
		pushConcurrentUpdateQueue(queue);}else {update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;}function enqueueConcurrentClassUpdate(fiber,queue,update,lane){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.
		update.next=update;// At the end of the current render, this queue's interleaved updates will
		// be transferred to the pending queue.
		pushConcurrentUpdateQueue(queue);}else {update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;return markUpdateLaneFromFiberToRoot(fiber,lane);}function enqueueConcurrentRenderForLane(fiber,lane){return markUpdateLaneFromFiberToRoot(fiber,lane);}// Calling this function outside this module should only be done for backwards
		// compatibility and should always be accompanied by a warning.
		var unsafe_markUpdateLaneFromFiberToRoot=markUpdateLaneFromFiberToRoot;function markUpdateLaneFromFiberToRoot(sourceFiber,lane){// Update the source fiber's lanes
		sourceFiber.lanes=mergeLanes(sourceFiber.lanes,lane);var alternate=sourceFiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,lane);}{if(alternate===null&&(sourceFiber.flags&(Placement|Hydrating))!==NoFlags){warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);}}// Walk the parent path to the root and update the child lanes.
		var node=sourceFiber;var parent=sourceFiber.return;while(parent!==null){parent.childLanes=mergeLanes(parent.childLanes,lane);alternate=parent.alternate;if(alternate!==null){alternate.childLanes=mergeLanes(alternate.childLanes,lane);}else {{if((parent.flags&(Placement|Hydrating))!==NoFlags){warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);}}}node=parent;parent=parent.return;}if(node.tag===HostRoot){var root=node.stateNode;return root;}else {return null;}}var UpdateState=0;var ReplaceState=1;var ForceUpdate=2;var CaptureUpdate=3;// Global state that is reset at the beginning of calling `processUpdateQueue`.
		// It should only be read right after calling `processUpdateQueue`, via
		// `checkHasForceUpdateAfterProcessing`.
		var hasForceUpdate=false;var didWarnUpdateInsideUpdate;var currentlyProcessingQueue;{didWarnUpdateInsideUpdate=false;currentlyProcessingQueue=null;}function initializeUpdateQueue(fiber){var queue={baseState:fiber.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:NoLanes},effects:null};fiber.updateQueue=queue;}function cloneUpdateQueue(current,workInProgress){// Clone the update queue from current. Unless it's already a clone.
		var queue=workInProgress.updateQueue;var currentQueue=current.updateQueue;if(queue===currentQueue){var clone={baseState:currentQueue.baseState,firstBaseUpdate:currentQueue.firstBaseUpdate,lastBaseUpdate:currentQueue.lastBaseUpdate,shared:currentQueue.shared,effects:currentQueue.effects};workInProgress.updateQueue=clone;}}function createUpdate(eventTime,lane){var update={eventTime:eventTime,lane:lane,tag:UpdateState,payload:null,callback:null,next:null};return update;}function enqueueUpdate(fiber,update,lane){var updateQueue=fiber.updateQueue;if(updateQueue===null){// Only occurs if the fiber has been unmounted.
		return null;}var sharedQueue=updateQueue.shared;{if(currentlyProcessingQueue===sharedQueue&&!didWarnUpdateInsideUpdate){error('An update (setState, replaceState, or forceUpdate) was scheduled '+'from inside an update function. Update functions should be pure, '+'with zero side-effects. Consider using componentDidUpdate or a '+'callback.');didWarnUpdateInsideUpdate=true;}}if(isUnsafeClassRenderPhaseUpdate()){// This is an unsafe render phase update. Add directly to the update
		// queue so we can process it immediately during the current render.
		var pending=sharedQueue.pending;if(pending===null){// This is the first update. Create a circular list.
		update.next=update;}else {update.next=pending.next;pending.next=update;}sharedQueue.pending=update;// Update the childLanes even though we're most likely already rendering
		// this fiber. This is for backwards compatibility in the case where you
		// update a different component during render phase than the one that is
		// currently renderings (a pattern that is accompanied by a warning).
		return unsafe_markUpdateLaneFromFiberToRoot(fiber,lane);}else {return enqueueConcurrentClassUpdate(fiber,sharedQueue,update,lane);}}function entangleTransitions(root,fiber,lane){var updateQueue=fiber.updateQueue;if(updateQueue===null){// Only occurs if the fiber has been unmounted.
		return;}var sharedQueue=updateQueue.shared;if(isTransitionLane(lane)){var queueLanes=sharedQueue.lanes;// If any entangled lanes are no longer pending on the root, then they must
		// have finished. We can remove them from the shared queue, which represents
		// a superset of the actually pending lanes. In some cases we may entangle
		// more than we need to, but that's OK. In fact it's worse if we *don't*
		// entangle when we should.
		queueLanes=intersectLanes(queueLanes,root.pendingLanes);// Entangle the new transition lane with the other transition lanes.
		var newQueueLanes=mergeLanes(queueLanes,lane);sharedQueue.lanes=newQueueLanes;// Even if queue.lanes already include lane, we don't know for certain if
		// the lane finished since the last time we entangled it. So we need to
		// entangle it again, just to be sure.
		markRootEntangled(root,newQueueLanes);}}function enqueueCapturedUpdate(workInProgress,capturedUpdate){// Captured updates are updates that are thrown by a child during the render
		// phase. They should be discarded if the render is aborted. Therefore,
		// we should only put them on the work-in-progress queue, not the current one.
		var queue=workInProgress.updateQueue;// Check if the work-in-progress queue is a clone.
		var current=workInProgress.alternate;if(current!==null){var currentQueue=current.updateQueue;if(queue===currentQueue){// The work-in-progress queue is the same as current. This happens when
		// we bail out on a parent fiber that then captures an error thrown by
		// a child. Since we want to append the update only to the work-in
		// -progress queue, we need to clone the updates. We usually clone during
		// processUpdateQueue, but that didn't happen in this case because we
		// skipped over the parent when we bailed out.
		var newFirst=null;var newLast=null;var firstBaseUpdate=queue.firstBaseUpdate;if(firstBaseUpdate!==null){// Loop through the updates and clone them.
		var update=firstBaseUpdate;do{var clone={eventTime:update.eventTime,lane:update.lane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};if(newLast===null){newFirst=newLast=clone;}else {newLast.next=clone;newLast=clone;}update=update.next;}while(update!==null);// Append the captured update the end of the cloned list.
		if(newLast===null){newFirst=newLast=capturedUpdate;}else {newLast.next=capturedUpdate;newLast=capturedUpdate;}}else {// There are no base updates.
		newFirst=newLast=capturedUpdate;}queue={baseState:currentQueue.baseState,firstBaseUpdate:newFirst,lastBaseUpdate:newLast,shared:currentQueue.shared,effects:currentQueue.effects};workInProgress.updateQueue=queue;return;}}// Append the update to the end of the list.
		var lastBaseUpdate=queue.lastBaseUpdate;if(lastBaseUpdate===null){queue.firstBaseUpdate=capturedUpdate;}else {lastBaseUpdate.next=capturedUpdate;}queue.lastBaseUpdate=capturedUpdate;}function getStateFromUpdate(workInProgress,queue,update,prevState,nextProps,instance){switch(update.tag){case ReplaceState:{var payload=update.payload;if(typeof payload==='function'){// Updater function
		{enterDisallowedContextReadInDEV();}var nextState=payload.call(instance,prevState,nextProps);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{payload.call(instance,prevState,nextProps);}finally{setIsStrictModeForDevtools(false);}}exitDisallowedContextReadInDEV();}return nextState;}// State object
		return payload;}case CaptureUpdate:{workInProgress.flags=workInProgress.flags&~ShouldCapture|DidCapture;}// Intentional fallthrough
		case UpdateState:{var _payload=update.payload;var partialState;if(typeof _payload==='function'){// Updater function
		{enterDisallowedContextReadInDEV();}partialState=_payload.call(instance,prevState,nextProps);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{_payload.call(instance,prevState,nextProps);}finally{setIsStrictModeForDevtools(false);}}exitDisallowedContextReadInDEV();}}else {// Partial state object
		partialState=_payload;}if(partialState===null||partialState===undefined){// Null and undefined are treated as no-ops.
		return prevState;}// Merge the partial state and the previous state.
		return assign({},prevState,partialState);}case ForceUpdate:{hasForceUpdate=true;return prevState;}}return prevState;}function processUpdateQueue(workInProgress,props,instance,renderLanes){// This is always non-null on a ClassComponent or HostRoot
		var queue=workInProgress.updateQueue;hasForceUpdate=false;{currentlyProcessingQueue=queue.shared;}var firstBaseUpdate=queue.firstBaseUpdate;var lastBaseUpdate=queue.lastBaseUpdate;// Check if there are pending updates. If so, transfer them to the base queue.
		var pendingQueue=queue.shared.pending;if(pendingQueue!==null){queue.shared.pending=null;// The pending queue is circular. Disconnect the pointer between first
		// and last so that it's non-circular.
		var lastPendingUpdate=pendingQueue;var firstPendingUpdate=lastPendingUpdate.next;lastPendingUpdate.next=null;// Append pending updates to base queue
		if(lastBaseUpdate===null){firstBaseUpdate=firstPendingUpdate;}else {lastBaseUpdate.next=firstPendingUpdate;}lastBaseUpdate=lastPendingUpdate;// If there's a current queue, and it's different from the base queue, then
		// we need to transfer the updates to that queue, too. Because the base
		// queue is a singly-linked list with no cycles, we can append to both
		// lists and take advantage of structural sharing.
		// TODO: Pass `current` as argument
		var current=workInProgress.alternate;if(current!==null){// This is always non-null on a ClassComponent or HostRoot
		var currentQueue=current.updateQueue;var currentLastBaseUpdate=currentQueue.lastBaseUpdate;if(currentLastBaseUpdate!==lastBaseUpdate){if(currentLastBaseUpdate===null){currentQueue.firstBaseUpdate=firstPendingUpdate;}else {currentLastBaseUpdate.next=firstPendingUpdate;}currentQueue.lastBaseUpdate=lastPendingUpdate;}}}// These values may change as we process the queue.
		if(firstBaseUpdate!==null){// Iterate through the list of updates to compute the result.
		var newState=queue.baseState;// TODO: Don't need to accumulate this. Instead, we can remove renderLanes
		// from the original lanes.
		var newLanes=NoLanes;var newBaseState=null;var newFirstBaseUpdate=null;var newLastBaseUpdate=null;var update=firstBaseUpdate;do{var updateLane=update.lane;var updateEventTime=update.eventTime;if(!isSubsetOfLanes(renderLanes,updateLane)){// Priority is insufficient. Skip this update. If this is the first
		// skipped update, the previous update/state is the new base
		// update/state.
		var clone={eventTime:updateEventTime,lane:updateLane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};if(newLastBaseUpdate===null){newFirstBaseUpdate=newLastBaseUpdate=clone;newBaseState=newState;}else {newLastBaseUpdate=newLastBaseUpdate.next=clone;}// Update the remaining priority in the queue.
		newLanes=mergeLanes(newLanes,updateLane);}else {// This update does have sufficient priority.
		if(newLastBaseUpdate!==null){var _clone={eventTime:updateEventTime,// This update is going to be committed so we never want uncommit
		// it. Using NoLane works because 0 is a subset of all bitmasks, so
		// this will never be skipped by the check above.
		lane:NoLane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};newLastBaseUpdate=newLastBaseUpdate.next=_clone;}// Process this update.
		newState=getStateFromUpdate(workInProgress,queue,update,newState,props,instance);var callback=update.callback;if(callback!==null&&// If the update was already committed, we should not queue its
		// callback again.
		update.lane!==NoLane){workInProgress.flags|=Callback;var effects=queue.effects;if(effects===null){queue.effects=[update];}else {effects.push(update);}}}update=update.next;if(update===null){pendingQueue=queue.shared.pending;if(pendingQueue===null){break;}else {// An update was scheduled from inside a reducer. Add the new
		// pending updates to the end of the list and keep processing.
		var _lastPendingUpdate=pendingQueue;// Intentionally unsound. Pending updates form a circular list, but we
		// unravel them when transferring them to the base queue.
		var _firstPendingUpdate=_lastPendingUpdate.next;_lastPendingUpdate.next=null;update=_firstPendingUpdate;queue.lastBaseUpdate=_lastPendingUpdate;queue.shared.pending=null;}}}while(true);if(newLastBaseUpdate===null){newBaseState=newState;}queue.baseState=newBaseState;queue.firstBaseUpdate=newFirstBaseUpdate;queue.lastBaseUpdate=newLastBaseUpdate;// Interleaved updates are stored on a separate queue. We aren't going to
		// process them during this render, but we do need to track which lanes
		// are remaining.
		var lastInterleaved=queue.shared.interleaved;if(lastInterleaved!==null){var interleaved=lastInterleaved;do{newLanes=mergeLanes(newLanes,interleaved.lane);interleaved=interleaved.next;}while(interleaved!==lastInterleaved);}else if(firstBaseUpdate===null){// `queue.lanes` is used for entangling transitions. We can set it back to
		// zero once the queue is empty.
		queue.shared.lanes=NoLanes;}// Set the remaining expiration time to be whatever is remaining in the queue.
		// This should be fine because the only two other things that contribute to
		// expiration time are props and context. We're already in the middle of the
		// begin phase by the time we start processing the queue, so we've already
		// dealt with the props. Context in components that specify
		// shouldComponentUpdate is tricky; but we'll have to account for
		// that regardless.
		markSkippedUpdateLanes(newLanes);workInProgress.lanes=newLanes;workInProgress.memoizedState=newState;}{currentlyProcessingQueue=null;}}function callCallback(callback,context){if(typeof callback!=='function'){throw new Error('Invalid argument passed as callback. Expected a function. Instead '+("received: "+callback));}callback.call(context);}function resetHasForceUpdateBeforeProcessing(){hasForceUpdate=false;}function checkHasForceUpdateAfterProcessing(){return hasForceUpdate;}function commitUpdateQueue(finishedWork,finishedQueue,instance){// Commit the effects
		var effects=finishedQueue.effects;finishedQueue.effects=null;if(effects!==null){for(var i=0;i<effects.length;i++){var effect=effects[i];var callback=effect.callback;if(callback!==null){effect.callback=null;callCallback(callback,instance);}}}}var fakeInternalInstance={};// React.Component uses a shared frozen object by default.
		// We'll use it to determine whether we need to initialize legacy refs.
		var emptyRefsObject=new React.Component().refs;var didWarnAboutStateAssignmentForComponent;var didWarnAboutUninitializedState;var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;var didWarnAboutLegacyLifecyclesAndDerivedState;var didWarnAboutUndefinedDerivedState;var warnOnUndefinedDerivedState;var warnOnInvalidCallback;var didWarnAboutDirectlyAssigningPropsToState;var didWarnAboutContextTypeAndContextTypes;var didWarnAboutInvalidateContextType;{didWarnAboutStateAssignmentForComponent=new Set();didWarnAboutUninitializedState=new Set();didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate=new Set();didWarnAboutLegacyLifecyclesAndDerivedState=new Set();didWarnAboutDirectlyAssigningPropsToState=new Set();didWarnAboutUndefinedDerivedState=new Set();didWarnAboutContextTypeAndContextTypes=new Set();didWarnAboutInvalidateContextType=new Set();var didWarnOnInvalidCallback=new Set();warnOnInvalidCallback=function(callback,callerName){if(callback===null||typeof callback==='function'){return;}var key=callerName+'_'+callback;if(!didWarnOnInvalidCallback.has(key)){didWarnOnInvalidCallback.add(key);error('%s(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callerName,callback);}};warnOnUndefinedDerivedState=function(type,partialState){if(partialState===undefined){var componentName=getComponentNameFromType(type)||'Component';if(!didWarnAboutUndefinedDerivedState.has(componentName)){didWarnAboutUndefinedDerivedState.add(componentName);error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. '+'You have returned undefined.',componentName);}}};// This is so gross but it's at least non-critical and can be removed if
		// it causes problems. This is meant to give a nicer error message for
		// ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
		// ...)) which otherwise throws a "_processChildContext is not a function"
		// exception.
		Object.defineProperty(fakeInternalInstance,'_processChildContext',{enumerable:false,value:function(){throw new Error('_processChildContext is not available in React 16+. This likely '+'means you have multiple copies of React and are attempting to nest '+'a React 15 tree inside a React 16 tree using '+"unstable_renderSubtreeIntoContainer, which isn't supported. Try "+'to make sure you have only one copy of React (and ideally, switch '+'to ReactDOM.createPortal).');}});Object.freeze(fakeInternalInstance);}function applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,nextProps){var prevState=workInProgress.memoizedState;var partialState=getDerivedStateFromProps(nextProps,prevState);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{// Invoke the function an extra time to help detect side-effects.
		partialState=getDerivedStateFromProps(nextProps,prevState);}finally{setIsStrictModeForDevtools(false);}}warnOnUndefinedDerivedState(ctor,partialState);}// Merge the partial state and the previous state.
		var memoizedState=partialState===null||partialState===undefined?prevState:assign({},prevState,partialState);workInProgress.memoizedState=memoizedState;// Once the update queue is empty, persist the derived state onto the
		// base state.
		if(workInProgress.lanes===NoLanes){// Queue is always non-null for classes
		var updateQueue=workInProgress.updateQueue;updateQueue.baseState=memoizedState;}}var classComponentUpdater={isMounted:isMounted,enqueueSetState:function(inst,payload,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.payload=payload;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'setState');}update.callback=callback;}var root=enqueueUpdate(fiber,update,lane);if(root!==null){scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitions(root,fiber,lane);}{markStateUpdateScheduled(fiber,lane);}},enqueueReplaceState:function(inst,payload,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.tag=ReplaceState;update.payload=payload;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'replaceState');}update.callback=callback;}var root=enqueueUpdate(fiber,update,lane);if(root!==null){scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitions(root,fiber,lane);}{markStateUpdateScheduled(fiber,lane);}},enqueueForceUpdate:function(inst,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.tag=ForceUpdate;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'forceUpdate');}update.callback=callback;}var root=enqueueUpdate(fiber,update,lane);if(root!==null){scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitions(root,fiber,lane);}{markForceUpdateScheduled(fiber,lane);}}};function checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext){var instance=workInProgress.stateNode;if(typeof instance.shouldComponentUpdate==='function'){var shouldUpdate=instance.shouldComponentUpdate(newProps,newState,nextContext);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{// Invoke the function an extra time to help detect side-effects.
		shouldUpdate=instance.shouldComponentUpdate(newProps,newState,nextContext);}finally{setIsStrictModeForDevtools(false);}}if(shouldUpdate===undefined){error('%s.shouldComponentUpdate(): Returned undefined instead of a '+'boolean value. Make sure to return true or false.',getComponentNameFromType(ctor)||'Component');}}return shouldUpdate;}if(ctor.prototype&&ctor.prototype.isPureReactComponent){return !shallowEqual(oldProps,newProps)||!shallowEqual(oldState,newState);}return true;}function checkClassInstance(workInProgress,ctor,newProps){var instance=workInProgress.stateNode;{var name=getComponentNameFromType(ctor)||'Component';var renderPresent=instance.render;if(!renderPresent){if(ctor.prototype&&typeof ctor.prototype.render==='function'){error('%s(...): No `render` method found on the returned component '+'instance: did you accidentally return an object from the constructor?',name);}else {error('%s(...): No `render` method found on the returned component '+'instance: you may have forgotten to define `render`.',name);}}if(instance.getInitialState&&!instance.getInitialState.isReactClassApproved&&!instance.state){error('getInitialState was defined on %s, a plain JavaScript class. '+'This is only supported for classes created using React.createClass. '+'Did you mean to define a state property instead?',name);}if(instance.getDefaultProps&&!instance.getDefaultProps.isReactClassApproved){error('getDefaultProps was defined on %s, a plain JavaScript class. '+'This is only supported for classes created using React.createClass. '+'Use a static property to define defaultProps instead.',name);}if(instance.propTypes){error('propTypes was defined as an instance property on %s. Use a static '+'property to define propTypes instead.',name);}if(instance.contextType){error('contextType was defined as an instance property on %s. Use a static '+'property to define contextType instead.',name);}{if(instance.contextTypes){error('contextTypes was defined as an instance property on %s. Use a static '+'property to define contextTypes instead.',name);}if(ctor.contextType&&ctor.contextTypes&&!didWarnAboutContextTypeAndContextTypes.has(ctor)){didWarnAboutContextTypeAndContextTypes.add(ctor);error('%s declares both contextTypes and contextType static properties. '+'The legacy contextTypes property will be ignored.',name);}}if(typeof instance.componentShouldUpdate==='function'){error('%s has a method called '+'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+'The name is phrased as a question because the function is '+'expected to return a value.',name);}if(ctor.prototype&&ctor.prototype.isPureReactComponent&&typeof instance.shouldComponentUpdate!=='undefined'){error('%s has a method called shouldComponentUpdate(). '+'shouldComponentUpdate should not be used when extending React.PureComponent. '+'Please extend React.Component if shouldComponentUpdate is used.',getComponentNameFromType(ctor)||'A pure component');}if(typeof instance.componentDidUnmount==='function'){error('%s has a method called '+'componentDidUnmount(). But there is no such lifecycle method. '+'Did you mean componentWillUnmount()?',name);}if(typeof instance.componentDidReceiveProps==='function'){error('%s has a method called '+'componentDidReceiveProps(). But there is no such lifecycle method. '+'If you meant to update the state in response to changing props, '+'use componentWillReceiveProps(). If you meant to fetch data or '+'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',name);}if(typeof instance.componentWillRecieveProps==='function'){error('%s has a method called '+'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',name);}if(typeof instance.UNSAFE_componentWillRecieveProps==='function'){error('%s has a method called '+'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',name);}var hasMutatedProps=instance.props!==newProps;if(instance.props!==undefined&&hasMutatedProps){error('%s(...): When calling super() in `%s`, make sure to pass '+"up the same props that your component's constructor was passed.",name,name);}if(instance.defaultProps){error('Setting defaultProps as an instance property on %s is not supported and will be ignored.'+' Instead, define defaultProps as a static property on %s.',name,name);}if(typeof instance.getSnapshotBeforeUpdate==='function'&&typeof instance.componentDidUpdate!=='function'&&!didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)){didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). '+'This component defines getSnapshotBeforeUpdate() only.',getComponentNameFromType(ctor));}if(typeof instance.getDerivedStateFromProps==='function'){error('%s: getDerivedStateFromProps() is defined as an instance method '+'and will be ignored. Instead, declare it as a static method.',name);}if(typeof instance.getDerivedStateFromError==='function'){error('%s: getDerivedStateFromError() is defined as an instance method '+'and will be ignored. Instead, declare it as a static method.',name);}if(typeof ctor.getSnapshotBeforeUpdate==='function'){error('%s: getSnapshotBeforeUpdate() is defined as a static method '+'and will be ignored. Instead, declare it as an instance method.',name);}var _state=instance.state;if(_state&&(typeof _state!=='object'||isArray(_state))){error('%s.state: must be set to an object or null',name);}if(typeof instance.getChildContext==='function'&&typeof ctor.childContextTypes!=='object'){error('%s.getChildContext(): childContextTypes must be defined in order to '+'use getChildContext().',name);}}}function adoptClassInstance(workInProgress,instance){instance.updater=classComponentUpdater;workInProgress.stateNode=instance;// The instance needs access to the fiber so that it can schedule updates
		set(instance,workInProgress);{instance._reactInternalInstance=fakeInternalInstance;}}function constructClassInstance(workInProgress,ctor,props){var isLegacyContextConsumer=false;var unmaskedContext=emptyContextObject;var context=emptyContextObject;var contextType=ctor.contextType;{if('contextType'in ctor){var isValid=// Allow null for conditional declaration
		contextType===null||contextType!==undefined&&contextType.$$typeof===REACT_CONTEXT_TYPE&&contextType._context===undefined;// Not a <Context.Consumer>
		if(!isValid&&!didWarnAboutInvalidateContextType.has(ctor)){didWarnAboutInvalidateContextType.add(ctor);var addendum='';if(contextType===undefined){addendum=' However, it is set to undefined. '+'This can be caused by a typo or by mixing up named and default imports. '+'This can also happen due to a circular dependency, so '+'try moving the createContext() call to a separate file.';}else if(typeof contextType!=='object'){addendum=' However, it is set to a '+typeof contextType+'.';}else if(contextType.$$typeof===REACT_PROVIDER_TYPE){addendum=' Did you accidentally pass the Context.Provider instead?';}else if(contextType._context!==undefined){// <Context.Consumer>
		addendum=' Did you accidentally pass the Context.Consumer instead?';}else {addendum=' However, it is set to an object with keys {'+Object.keys(contextType).join(', ')+'}.';}error('%s defines an invalid contextType. '+'contextType should point to the Context object returned by React.createContext().%s',getComponentNameFromType(ctor)||'Component',addendum);}}}if(typeof contextType==='object'&&contextType!==null){context=readContext(contextType);}else {unmaskedContext=getUnmaskedContext(workInProgress,ctor,true);var contextTypes=ctor.contextTypes;isLegacyContextConsumer=contextTypes!==null&&contextTypes!==undefined;context=isLegacyContextConsumer?getMaskedContext(workInProgress,unmaskedContext):emptyContextObject;}var instance=new ctor(props,context);// Instantiate twice to help detect side-effects.
		{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{instance=new ctor(props,context);// eslint-disable-line no-new
		}finally{setIsStrictModeForDevtools(false);}}}var state=workInProgress.memoizedState=instance.state!==null&&instance.state!==undefined?instance.state:null;adoptClassInstance(workInProgress,instance);{if(typeof ctor.getDerivedStateFromProps==='function'&&state===null){var componentName=getComponentNameFromType(ctor)||'Component';if(!didWarnAboutUninitializedState.has(componentName)){didWarnAboutUninitializedState.add(componentName);error('`%s` uses `getDerivedStateFromProps` but its initial state is '+'%s. This is not recommended. Instead, define the initial state by '+'assigning an object to `this.state` in the constructor of `%s`. '+'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',componentName,instance.state===null?'null':'undefined',componentName);}}// If new component APIs are defined, "unsafe" lifecycles won't be called.
		// Warn about these lifecycles if they are present.
		// Don't warn about react-lifecycles-compat polyfilled methods though.
		if(typeof ctor.getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function'){var foundWillMountName=null;var foundWillReceivePropsName=null;var foundWillUpdateName=null;if(typeof instance.componentWillMount==='function'&&instance.componentWillMount.__suppressDeprecationWarning!==true){foundWillMountName='componentWillMount';}else if(typeof instance.UNSAFE_componentWillMount==='function'){foundWillMountName='UNSAFE_componentWillMount';}if(typeof instance.componentWillReceiveProps==='function'&&instance.componentWillReceiveProps.__suppressDeprecationWarning!==true){foundWillReceivePropsName='componentWillReceiveProps';}else if(typeof instance.UNSAFE_componentWillReceiveProps==='function'){foundWillReceivePropsName='UNSAFE_componentWillReceiveProps';}if(typeof instance.componentWillUpdate==='function'&&instance.componentWillUpdate.__suppressDeprecationWarning!==true){foundWillUpdateName='componentWillUpdate';}else if(typeof instance.UNSAFE_componentWillUpdate==='function'){foundWillUpdateName='UNSAFE_componentWillUpdate';}if(foundWillMountName!==null||foundWillReceivePropsName!==null||foundWillUpdateName!==null){var _componentName=getComponentNameFromType(ctor)||'Component';var newApiName=typeof ctor.getDerivedStateFromProps==='function'?'getDerivedStateFromProps()':'getSnapshotBeforeUpdate()';if(!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)){didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n'+'%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n'+'The above lifecycles should be removed. Learn more about this warning here:\n'+'https://reactjs.org/link/unsafe-component-lifecycles',_componentName,newApiName,foundWillMountName!==null?"\n  "+foundWillMountName:'',foundWillReceivePropsName!==null?"\n  "+foundWillReceivePropsName:'',foundWillUpdateName!==null?"\n  "+foundWillUpdateName:'');}}}}// Cache unmasked context so we can avoid recreating masked context unless necessary.
		// ReactFiberContext usually updates this cache but can't for newly-created instances.
		if(isLegacyContextConsumer){cacheContext(workInProgress,unmaskedContext,context);}return instance;}function callComponentWillMount(workInProgress,instance){var oldState=instance.state;if(typeof instance.componentWillMount==='function'){instance.componentWillMount();}if(typeof instance.UNSAFE_componentWillMount==='function'){instance.UNSAFE_componentWillMount();}if(oldState!==instance.state){{error('%s.componentWillMount(): Assigning directly to this.state is '+"deprecated (except inside a component's "+'constructor). Use setState instead.',getComponentNameFromFiber(workInProgress)||'Component');}classComponentUpdater.enqueueReplaceState(instance,instance.state,null);}}function callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext){var oldState=instance.state;if(typeof instance.componentWillReceiveProps==='function'){instance.componentWillReceiveProps(newProps,nextContext);}if(typeof instance.UNSAFE_componentWillReceiveProps==='function'){instance.UNSAFE_componentWillReceiveProps(newProps,nextContext);}if(instance.state!==oldState){{var componentName=getComponentNameFromFiber(workInProgress)||'Component';if(!didWarnAboutStateAssignmentForComponent.has(componentName)){didWarnAboutStateAssignmentForComponent.add(componentName);error('%s.componentWillReceiveProps(): Assigning directly to '+"this.state is deprecated (except inside a component's "+'constructor). Use setState instead.',componentName);}}classComponentUpdater.enqueueReplaceState(instance,instance.state,null);}}// Invokes the mount life-cycles on a previously never rendered instance.
		function mountClassInstance(workInProgress,ctor,newProps,renderLanes){{checkClassInstance(workInProgress,ctor,newProps);}var instance=workInProgress.stateNode;instance.props=newProps;instance.state=workInProgress.memoizedState;instance.refs=emptyRefsObject;initializeUpdateQueue(workInProgress);var contextType=ctor.contextType;if(typeof contextType==='object'&&contextType!==null){instance.context=readContext(contextType);}else {var unmaskedContext=getUnmaskedContext(workInProgress,ctor,true);instance.context=getMaskedContext(workInProgress,unmaskedContext);}{if(instance.state===newProps){var componentName=getComponentNameFromType(ctor)||'Component';if(!didWarnAboutDirectlyAssigningPropsToState.has(componentName)){didWarnAboutDirectlyAssigningPropsToState.add(componentName);error('%s: It is not recommended to assign props directly to state '+"because updates to props won't be reflected in state. "+'In most cases, it is better to use props directly.',componentName);}}if(workInProgress.mode&StrictLegacyMode){ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress,instance);}{ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress,instance);}}instance.state=workInProgress.memoizedState;var getDerivedStateFromProps=ctor.getDerivedStateFromProps;if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);instance.state=workInProgress.memoizedState;}// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(typeof ctor.getDerivedStateFromProps!=='function'&&typeof instance.getSnapshotBeforeUpdate!=='function'&&(typeof instance.UNSAFE_componentWillMount==='function'||typeof instance.componentWillMount==='function')){callComponentWillMount(workInProgress,instance);// If we had additional state updates during this life-cycle, let's
		// process them now.
		processUpdateQueue(workInProgress,newProps,instance,renderLanes);instance.state=workInProgress.memoizedState;}if(typeof instance.componentDidMount==='function'){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}workInProgress.flags|=fiberFlags;}}function resumeMountClassInstance(workInProgress,ctor,newProps,renderLanes){var instance=workInProgress.stateNode;var oldProps=workInProgress.memoizedProps;instance.props=oldProps;var oldContext=instance.context;var contextType=ctor.contextType;var nextContext=emptyContextObject;if(typeof contextType==='object'&&contextType!==null){nextContext=readContext(contextType);}else {var nextLegacyUnmaskedContext=getUnmaskedContext(workInProgress,ctor,true);nextContext=getMaskedContext(workInProgress,nextLegacyUnmaskedContext);}var getDerivedStateFromProps=ctor.getDerivedStateFromProps;var hasNewLifecycles=typeof getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function';// Note: During these life-cycles, instance.props/instance.state are what
		// ever the previously attempted to render - not the "current". However,
		// during componentDidUpdate we pass the "current" props.
		// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillReceiveProps==='function'||typeof instance.componentWillReceiveProps==='function')){if(oldProps!==newProps||oldContext!==nextContext){callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext);}}resetHasForceUpdateBeforeProcessing();var oldState=workInProgress.memoizedState;var newState=instance.state=oldState;processUpdateQueue(workInProgress,newProps,instance,renderLanes);newState=workInProgress.memoizedState;if(oldProps===newProps&&oldState===newState&&!hasContextChanged()&&!checkHasForceUpdateAfterProcessing()){// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidMount==='function'){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}workInProgress.flags|=fiberFlags;}return false;}if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);newState=workInProgress.memoizedState;}var shouldUpdate=checkHasForceUpdateAfterProcessing()||checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext);if(shouldUpdate){// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillMount==='function'||typeof instance.componentWillMount==='function')){if(typeof instance.componentWillMount==='function'){instance.componentWillMount();}if(typeof instance.UNSAFE_componentWillMount==='function'){instance.UNSAFE_componentWillMount();}}if(typeof instance.componentDidMount==='function'){var _fiberFlags=Update;{_fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){_fiberFlags|=MountLayoutDev;}workInProgress.flags|=_fiberFlags;}}else {// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidMount==='function'){var _fiberFlags2=Update;{_fiberFlags2|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){_fiberFlags2|=MountLayoutDev;}workInProgress.flags|=_fiberFlags2;}// If shouldComponentUpdate returned false, we should still update the
		// memoized state to indicate that this work can be reused.
		workInProgress.memoizedProps=newProps;workInProgress.memoizedState=newState;}// Update the existing instance's state, props, and context pointers even
		// if shouldComponentUpdate returns false.
		instance.props=newProps;instance.state=newState;instance.context=nextContext;return shouldUpdate;}// Invokes the update life-cycles and returns false if it shouldn't rerender.
		function updateClassInstance(current,workInProgress,ctor,newProps,renderLanes){var instance=workInProgress.stateNode;cloneUpdateQueue(current,workInProgress);var unresolvedOldProps=workInProgress.memoizedProps;var oldProps=workInProgress.type===workInProgress.elementType?unresolvedOldProps:resolveDefaultProps(workInProgress.type,unresolvedOldProps);instance.props=oldProps;var unresolvedNewProps=workInProgress.pendingProps;var oldContext=instance.context;var contextType=ctor.contextType;var nextContext=emptyContextObject;if(typeof contextType==='object'&&contextType!==null){nextContext=readContext(contextType);}else {var nextUnmaskedContext=getUnmaskedContext(workInProgress,ctor,true);nextContext=getMaskedContext(workInProgress,nextUnmaskedContext);}var getDerivedStateFromProps=ctor.getDerivedStateFromProps;var hasNewLifecycles=typeof getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function';// Note: During these life-cycles, instance.props/instance.state are what
		// ever the previously attempted to render - not the "current". However,
		// during componentDidUpdate we pass the "current" props.
		// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillReceiveProps==='function'||typeof instance.componentWillReceiveProps==='function')){if(unresolvedOldProps!==unresolvedNewProps||oldContext!==nextContext){callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext);}}resetHasForceUpdateBeforeProcessing();var oldState=workInProgress.memoizedState;var newState=instance.state=oldState;processUpdateQueue(workInProgress,newProps,instance,renderLanes);newState=workInProgress.memoizedState;if(unresolvedOldProps===unresolvedNewProps&&oldState===newState&&!hasContextChanged()&&!checkHasForceUpdateAfterProcessing()&&!enableLazyContextPropagation){// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Update;}}if(typeof instance.getSnapshotBeforeUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Snapshot;}}return false;}if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);newState=workInProgress.memoizedState;}var shouldUpdate=checkHasForceUpdateAfterProcessing()||checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext)||// TODO: In some cases, we'll end up checking if context has changed twice,
		// both before and after `shouldComponentUpdate` has been called. Not ideal,
		// but I'm loath to refactor this function. This only happens for memoized
		// components so it's not that common.
		enableLazyContextPropagation;if(shouldUpdate){// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillUpdate==='function'||typeof instance.componentWillUpdate==='function')){if(typeof instance.componentWillUpdate==='function'){instance.componentWillUpdate(newProps,newState,nextContext);}if(typeof instance.UNSAFE_componentWillUpdate==='function'){instance.UNSAFE_componentWillUpdate(newProps,newState,nextContext);}}if(typeof instance.componentDidUpdate==='function'){workInProgress.flags|=Update;}if(typeof instance.getSnapshotBeforeUpdate==='function'){workInProgress.flags|=Snapshot;}}else {// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Update;}}if(typeof instance.getSnapshotBeforeUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Snapshot;}}// If shouldComponentUpdate returned false, we should still update the
		// memoized props/state to indicate that this work can be reused.
		workInProgress.memoizedProps=newProps;workInProgress.memoizedState=newState;}// Update the existing instance's state, props, and context pointers even
		// if shouldComponentUpdate returns false.
		instance.props=newProps;instance.state=newState;instance.context=nextContext;return shouldUpdate;}var didWarnAboutMaps;var didWarnAboutGenerators;var didWarnAboutStringRefs;var ownerHasKeyUseWarning;var ownerHasFunctionTypeWarning;var warnForMissingKey=function(child,returnFiber){};{didWarnAboutMaps=false;didWarnAboutGenerators=false;didWarnAboutStringRefs={};/**
		   * Warn if there's no key explicitly set on dynamic arrays of children or
		   * object keys are not valid. This allows us to keep track of children between
		   * updates.
		   */ownerHasKeyUseWarning={};ownerHasFunctionTypeWarning={};warnForMissingKey=function(child,returnFiber){if(child===null||typeof child!=='object'){return;}if(!child._store||child._store.validated||child.key!=null){return;}if(typeof child._store!=='object'){throw new Error('React Component in warnForMissingKey should have a _store. '+'This error is likely caused by a bug in React. Please file an issue.');}child._store.validated=true;var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(ownerHasKeyUseWarning[componentName]){return;}ownerHasKeyUseWarning[componentName]=true;error('Each child in a list should have a unique '+'"key" prop. See https://reactjs.org/link/warning-keys for '+'more information.');};}function coerceRef(returnFiber,current,element){var mixedRef=element.ref;if(mixedRef!==null&&typeof mixedRef!=='function'&&typeof mixedRef!=='object'){{// TODO: Clean this up once we turn on the string ref warning for
		// everyone, because the strict mode case will no longer be relevant
		if((returnFiber.mode&StrictLegacyMode||warnAboutStringRefs)&&// We warn in ReactElement.js if owner and self are equal for string refs
		// because these cannot be automatically converted to an arrow function
		// using a codemod. Therefore, we don't have to warn about string refs again.
		!(element._owner&&element._self&&element._owner.stateNode!==element._self)){var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(!didWarnAboutStringRefs[componentName]){{error('A string ref, "%s", has been found within a strict mode tree. '+'String refs are a source of potential bugs and should be avoided. '+'We recommend using useRef() or createRef() instead. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-string-ref',mixedRef);}didWarnAboutStringRefs[componentName]=true;}}}if(element._owner){var owner=element._owner;var inst;if(owner){var ownerFiber=owner;if(ownerFiber.tag!==ClassComponent){throw new Error('Function components cannot have string refs. '+'We recommend using useRef() instead. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-string-ref');}inst=ownerFiber.stateNode;}if(!inst){throw new Error("Missing owner for string ref "+mixedRef+". This error is likely caused by a "+'bug in React. Please file an issue.');}// Assigning this to a const so Flow knows it won't change in the closure
		var resolvedInst=inst;{checkPropStringCoercion(mixedRef,'ref');}var stringRef=''+mixedRef;// Check if previous string ref matches new string ref
		if(current!==null&&current.ref!==null&&typeof current.ref==='function'&&current.ref._stringRef===stringRef){return current.ref;}var ref=function(value){var refs=resolvedInst.refs;if(refs===emptyRefsObject){// This is a lazy pooled frozen object, so we need to initialize.
		refs=resolvedInst.refs={};}if(value===null){delete refs[stringRef];}else {refs[stringRef]=value;}};ref._stringRef=stringRef;return ref;}else {if(typeof mixedRef!=='string'){throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');}if(!element._owner){throw new Error("Element ref was specified as a string ("+mixedRef+") but no owner was set. This could happen for one of"+' the following reasons:\n'+'1. You may be adding a ref to a function component\n'+"2. You may be adding a ref to a component that was not created inside a component's render method\n"+'3. You have multiple copies of React loaded\n'+'See https://reactjs.org/link/refs-must-have-owner for more information.');}}}return mixedRef;}function throwOnInvalidObjectType(returnFiber,newChild){var childString=Object.prototype.toString.call(newChild);throw new Error("Objects are not valid as a React child (found: "+(childString==='[object Object]'?'object with keys {'+Object.keys(newChild).join(', ')+'}':childString)+"). "+'If you meant to render a collection of children, use an array '+'instead.');}function warnOnFunctionType(returnFiber){{var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(ownerHasFunctionTypeWarning[componentName]){return;}ownerHasFunctionTypeWarning[componentName]=true;error('Functions are not valid as a React child. This may happen if '+'you return a Component instead of <Component /> from render. '+'Or maybe you meant to call this function rather than return it.');}}function resolveLazy(lazyType){var payload=lazyType._payload;var init=lazyType._init;return init(payload);}// This wrapper function exists because I expect to clone the code in each path
		// to be able to optimize each path individually by branching early. This needs
		// a compiler or we can do it manually. Helpers that don't need this branching
		// live outside of this function.
		function ChildReconciler(shouldTrackSideEffects){function deleteChild(returnFiber,childToDelete){if(!shouldTrackSideEffects){// Noop.
		return;}var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[childToDelete];returnFiber.flags|=ChildDeletion;}else {deletions.push(childToDelete);}}function deleteRemainingChildren(returnFiber,currentFirstChild){if(!shouldTrackSideEffects){// Noop.
		return null;}// TODO: For the shouldClone case, this could be micro-optimized a bit by
		// assuming that after the first child we've already added everything.
		var childToDelete=currentFirstChild;while(childToDelete!==null){deleteChild(returnFiber,childToDelete);childToDelete=childToDelete.sibling;}return null;}function mapRemainingChildren(returnFiber,currentFirstChild){// Add the remaining children to a temporary map so that we can find them by
		// keys quickly. Implicit (null) keys get added to this set with their index
		// instead.
		var existingChildren=new Map();var existingChild=currentFirstChild;while(existingChild!==null){if(existingChild.key!==null){existingChildren.set(existingChild.key,existingChild);}else {existingChildren.set(existingChild.index,existingChild);}existingChild=existingChild.sibling;}return existingChildren;}function useFiber(fiber,pendingProps){// We currently set sibling to null and index to 0 here because it is easy
		// to forget to do before returning it. E.g. for the single child case.
		var clone=createWorkInProgress(fiber,pendingProps);clone.index=0;clone.sibling=null;return clone;}function placeChild(newFiber,lastPlacedIndex,newIndex){newFiber.index=newIndex;if(!shouldTrackSideEffects){// During hydration, the useId algorithm needs to know which fibers are
		// part of a list of children (arrays, iterators).
		newFiber.flags|=Forked;return lastPlacedIndex;}var current=newFiber.alternate;if(current!==null){var oldIndex=current.index;if(oldIndex<lastPlacedIndex){// This is a move.
		newFiber.flags|=Placement;return lastPlacedIndex;}else {// This item can stay in place.
		return oldIndex;}}else {// This is an insertion.
		newFiber.flags|=Placement;return lastPlacedIndex;}}function placeSingleChild(newFiber){// This is simpler for the single child case. We only need to do a
		// placement for inserting new children.
		if(shouldTrackSideEffects&&newFiber.alternate===null){newFiber.flags|=Placement;}return newFiber;}function updateTextNode(returnFiber,current,textContent,lanes){if(current===null||current.tag!==HostText){// Insert
		var created=createFiberFromText(textContent,returnFiber.mode,lanes);created.return=returnFiber;return created;}else {// Update
		var existing=useFiber(current,textContent);existing.return=returnFiber;return existing;}}function updateElement(returnFiber,current,element,lanes){var elementType=element.type;if(elementType===REACT_FRAGMENT_TYPE){return updateFragment(returnFiber,current,element.props.children,lanes,element.key);}if(current!==null){if(current.elementType===elementType||// Keep this check inline so it only runs on the false path:
		isCompatibleFamilyForHotReloading(current,element)||// Lazy types should reconcile their resolved type.
		// We need to do this after the Hot Reloading check above,
		// because hot reloading has different semantics than prod because
		// it doesn't resuspend. So we can't let the call below suspend.
		typeof elementType==='object'&&elementType!==null&&elementType.$$typeof===REACT_LAZY_TYPE&&resolveLazy(elementType)===current.type){// Move based on index
		var existing=useFiber(current,element.props);existing.ref=coerceRef(returnFiber,current,element);existing.return=returnFiber;{existing._debugSource=element._source;existing._debugOwner=element._owner;}return existing;}}// Insert
		var created=createFiberFromElement(element,returnFiber.mode,lanes);created.ref=coerceRef(returnFiber,current,element);created.return=returnFiber;return created;}function updatePortal(returnFiber,current,portal,lanes){if(current===null||current.tag!==HostPortal||current.stateNode.containerInfo!==portal.containerInfo||current.stateNode.implementation!==portal.implementation){// Insert
		var created=createFiberFromPortal(portal,returnFiber.mode,lanes);created.return=returnFiber;return created;}else {// Update
		var existing=useFiber(current,portal.children||[]);existing.return=returnFiber;return existing;}}function updateFragment(returnFiber,current,fragment,lanes,key){if(current===null||current.tag!==Fragment){// Insert
		var created=createFiberFromFragment(fragment,returnFiber.mode,lanes,key);created.return=returnFiber;return created;}else {// Update
		var existing=useFiber(current,fragment);existing.return=returnFiber;return existing;}}function createChild(returnFiber,newChild,lanes){if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys. If the previous node is implicitly keyed
		// we can continue to replace it without aborting even if it is not a text
		// node.
		var created=createFiberFromText(''+newChild,returnFiber.mode,lanes);created.return=returnFiber;return created;}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{var _created=createFiberFromElement(newChild,returnFiber.mode,lanes);_created.ref=coerceRef(returnFiber,null,newChild);_created.return=returnFiber;return _created;}case REACT_PORTAL_TYPE:{var _created2=createFiberFromPortal(newChild,returnFiber.mode,lanes);_created2.return=returnFiber;return _created2;}case REACT_LAZY_TYPE:{var payload=newChild._payload;var init=newChild._init;return createChild(returnFiber,init(payload),lanes);}}if(isArray(newChild)||getIteratorFn(newChild)){var _created3=createFiberFromFragment(newChild,returnFiber.mode,lanes,null);_created3.return=returnFiber;return _created3;}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}function updateSlot(returnFiber,oldFiber,newChild,lanes){// Update the fiber if the keys match, otherwise return null.
		var key=oldFiber!==null?oldFiber.key:null;if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys. If the previous node is implicitly keyed
		// we can continue to replace it without aborting even if it is not a text
		// node.
		if(key!==null){return null;}return updateTextNode(returnFiber,oldFiber,''+newChild,lanes);}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{if(newChild.key===key){return updateElement(returnFiber,oldFiber,newChild,lanes);}else {return null;}}case REACT_PORTAL_TYPE:{if(newChild.key===key){return updatePortal(returnFiber,oldFiber,newChild,lanes);}else {return null;}}case REACT_LAZY_TYPE:{var payload=newChild._payload;var init=newChild._init;return updateSlot(returnFiber,oldFiber,init(payload),lanes);}}if(isArray(newChild)||getIteratorFn(newChild)){if(key!==null){return null;}return updateFragment(returnFiber,oldFiber,newChild,lanes,null);}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}function updateFromMap(existingChildren,returnFiber,newIdx,newChild,lanes){if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys, so we neither have to check the old nor
		// new node for the key. If both are text nodes, they match.
		var matchedFiber=existingChildren.get(newIdx)||null;return updateTextNode(returnFiber,matchedFiber,''+newChild,lanes);}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{var _matchedFiber=existingChildren.get(newChild.key===null?newIdx:newChild.key)||null;return updateElement(returnFiber,_matchedFiber,newChild,lanes);}case REACT_PORTAL_TYPE:{var _matchedFiber2=existingChildren.get(newChild.key===null?newIdx:newChild.key)||null;return updatePortal(returnFiber,_matchedFiber2,newChild,lanes);}case REACT_LAZY_TYPE:var payload=newChild._payload;var init=newChild._init;return updateFromMap(existingChildren,returnFiber,newIdx,init(payload),lanes);}if(isArray(newChild)||getIteratorFn(newChild)){var _matchedFiber3=existingChildren.get(newIdx)||null;return updateFragment(returnFiber,_matchedFiber3,newChild,lanes,null);}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}/**
		   * Warns if there is a duplicate or missing key
		   */function warnOnInvalidKey(child,knownKeys,returnFiber){{if(typeof child!=='object'||child===null){return knownKeys;}switch(child.$$typeof){case REACT_ELEMENT_TYPE:case REACT_PORTAL_TYPE:warnForMissingKey(child,returnFiber);var key=child.key;if(typeof key!=='string'){break;}if(knownKeys===null){knownKeys=new Set();knownKeys.add(key);break;}if(!knownKeys.has(key)){knownKeys.add(key);break;}error('Encountered two children with the same key, `%s`. '+'Keys should be unique so that components maintain their identity '+'across updates. Non-unique keys may cause children to be '+'duplicated and/or omitted — the behavior is unsupported and '+'could change in a future version.',key);break;case REACT_LAZY_TYPE:var payload=child._payload;var init=child._init;warnOnInvalidKey(init(payload),knownKeys,returnFiber);break;}}return knownKeys;}function reconcileChildrenArray(returnFiber,currentFirstChild,newChildren,lanes){// This algorithm can't optimize by searching from both ends since we
		// don't have backpointers on fibers. I'm trying to see how far we can get
		// with that model. If it ends up not being worth the tradeoffs, we can
		// add it later.
		// Even with a two ended optimization, we'd want to optimize for the case
		// where there are few changes and brute force the comparison instead of
		// going for the Map. It'd like to explore hitting that path first in
		// forward-only mode and only go for the Map once we notice that we need
		// lots of look ahead. This doesn't handle reversal as well as two ended
		// search but that's unusual. Besides, for the two ended optimization to
		// work on Iterables, we'd need to copy the whole set.
		// In this first iteration, we'll just live with hitting the bad case
		// (adding everything to a Map) in for every insert/move.
		// If you change this code, also update reconcileChildrenIterator() which
		// uses the same algorithm.
		{// First, validate keys.
		var knownKeys=null;for(var i=0;i<newChildren.length;i++){var child=newChildren[i];knownKeys=warnOnInvalidKey(child,knownKeys,returnFiber);}}var resultingFirstChild=null;var previousNewFiber=null;var oldFiber=currentFirstChild;var lastPlacedIndex=0;var newIdx=0;var nextOldFiber=null;for(;oldFiber!==null&&newIdx<newChildren.length;newIdx++){if(oldFiber.index>newIdx){nextOldFiber=oldFiber;oldFiber=null;}else {nextOldFiber=oldFiber.sibling;}var newFiber=updateSlot(returnFiber,oldFiber,newChildren[newIdx],lanes);if(newFiber===null){// TODO: This breaks on empty slots like null children. That's
		// unfortunate because it triggers the slow path all the time. We need
		// a better way to communicate whether this was a miss or null,
		// boolean, undefined, etc.
		if(oldFiber===null){oldFiber=nextOldFiber;}break;}if(shouldTrackSideEffects){if(oldFiber&&newFiber.alternate===null){// We matched the slot, but we didn't reuse the existing fiber, so we
		// need to delete the existing child.
		deleteChild(returnFiber,oldFiber);}}lastPlacedIndex=placeChild(newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=newFiber;}else {// TODO: Defer siblings if we're not at the right index for this slot.
		// I.e. if we had null values before, then we want to defer this
		// for each null value. However, we also don't want to call updateSlot
		// with the previous one.
		previousNewFiber.sibling=newFiber;}previousNewFiber=newFiber;oldFiber=nextOldFiber;}if(newIdx===newChildren.length){// We've reached the end of the new children. We can delete the rest.
		deleteRemainingChildren(returnFiber,oldFiber);if(getIsHydrating()){var numberOfForks=newIdx;pushTreeFork(returnFiber,numberOfForks);}return resultingFirstChild;}if(oldFiber===null){// If we don't have any more existing children we can choose a fast path
		// since the rest will all be insertions.
		for(;newIdx<newChildren.length;newIdx++){var _newFiber=createChild(returnFiber,newChildren[newIdx],lanes);if(_newFiber===null){continue;}lastPlacedIndex=placeChild(_newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=_newFiber;}else {previousNewFiber.sibling=_newFiber;}previousNewFiber=_newFiber;}if(getIsHydrating()){var _numberOfForks=newIdx;pushTreeFork(returnFiber,_numberOfForks);}return resultingFirstChild;}// Add all children to a key map for quick lookups.
		var existingChildren=mapRemainingChildren(returnFiber,oldFiber);// Keep scanning and use the map to restore deleted items as moves.
		for(;newIdx<newChildren.length;newIdx++){var _newFiber2=updateFromMap(existingChildren,returnFiber,newIdx,newChildren[newIdx],lanes);if(_newFiber2!==null){if(shouldTrackSideEffects){if(_newFiber2.alternate!==null){// The new fiber is a work in progress, but if there exists a
		// current, that means that we reused the fiber. We need to delete
		// it from the child list so that we don't add it to the deletion
		// list.
		existingChildren.delete(_newFiber2.key===null?newIdx:_newFiber2.key);}}lastPlacedIndex=placeChild(_newFiber2,lastPlacedIndex,newIdx);if(previousNewFiber===null){resultingFirstChild=_newFiber2;}else {previousNewFiber.sibling=_newFiber2;}previousNewFiber=_newFiber2;}}if(shouldTrackSideEffects){// Any existing children that weren't consumed above were deleted. We need
		// to add them to the deletion list.
		existingChildren.forEach(function(child){return deleteChild(returnFiber,child);});}if(getIsHydrating()){var _numberOfForks2=newIdx;pushTreeFork(returnFiber,_numberOfForks2);}return resultingFirstChild;}function reconcileChildrenIterator(returnFiber,currentFirstChild,newChildrenIterable,lanes){// This is the same implementation as reconcileChildrenArray(),
		// but using the iterator instead.
		var iteratorFn=getIteratorFn(newChildrenIterable);if(typeof iteratorFn!=='function'){throw new Error('An object is not an iterable. This error is likely caused by a bug in '+'React. Please file an issue.');}{// We don't support rendering Generators because it's a mutation.
		// See https://github.com/facebook/react/issues/12995
		if(typeof Symbol==='function'&&// $FlowFixMe Flow doesn't know about toStringTag
		newChildrenIterable[Symbol.toStringTag]==='Generator'){if(!didWarnAboutGenerators){error('Using Generators as children is unsupported and will likely yield '+'unexpected results because enumerating a generator mutates it. '+'You may convert it to an array with `Array.from()` or the '+'`[...spread]` operator before rendering. Keep in mind '+'you might need to polyfill these features for older browsers.');}didWarnAboutGenerators=true;}// Warn about using Maps as children
		if(newChildrenIterable.entries===iteratorFn){if(!didWarnAboutMaps){error('Using Maps as children is not supported. '+'Use an array of keyed ReactElements instead.');}didWarnAboutMaps=true;}// First, validate keys.
		// We'll get a different iterator later for the main pass.
		var _newChildren=iteratorFn.call(newChildrenIterable);if(_newChildren){var knownKeys=null;var _step=_newChildren.next();for(;!_step.done;_step=_newChildren.next()){var child=_step.value;knownKeys=warnOnInvalidKey(child,knownKeys,returnFiber);}}}var newChildren=iteratorFn.call(newChildrenIterable);if(newChildren==null){throw new Error('An iterable object provided no iterator.');}var resultingFirstChild=null;var previousNewFiber=null;var oldFiber=currentFirstChild;var lastPlacedIndex=0;var newIdx=0;var nextOldFiber=null;var step=newChildren.next();for(;oldFiber!==null&&!step.done;newIdx++,step=newChildren.next()){if(oldFiber.index>newIdx){nextOldFiber=oldFiber;oldFiber=null;}else {nextOldFiber=oldFiber.sibling;}var newFiber=updateSlot(returnFiber,oldFiber,step.value,lanes);if(newFiber===null){// TODO: This breaks on empty slots like null children. That's
		// unfortunate because it triggers the slow path all the time. We need
		// a better way to communicate whether this was a miss or null,
		// boolean, undefined, etc.
		if(oldFiber===null){oldFiber=nextOldFiber;}break;}if(shouldTrackSideEffects){if(oldFiber&&newFiber.alternate===null){// We matched the slot, but we didn't reuse the existing fiber, so we
		// need to delete the existing child.
		deleteChild(returnFiber,oldFiber);}}lastPlacedIndex=placeChild(newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=newFiber;}else {// TODO: Defer siblings if we're not at the right index for this slot.
		// I.e. if we had null values before, then we want to defer this
		// for each null value. However, we also don't want to call updateSlot
		// with the previous one.
		previousNewFiber.sibling=newFiber;}previousNewFiber=newFiber;oldFiber=nextOldFiber;}if(step.done){// We've reached the end of the new children. We can delete the rest.
		deleteRemainingChildren(returnFiber,oldFiber);if(getIsHydrating()){var numberOfForks=newIdx;pushTreeFork(returnFiber,numberOfForks);}return resultingFirstChild;}if(oldFiber===null){// If we don't have any more existing children we can choose a fast path
		// since the rest will all be insertions.
		for(;!step.done;newIdx++,step=newChildren.next()){var _newFiber3=createChild(returnFiber,step.value,lanes);if(_newFiber3===null){continue;}lastPlacedIndex=placeChild(_newFiber3,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=_newFiber3;}else {previousNewFiber.sibling=_newFiber3;}previousNewFiber=_newFiber3;}if(getIsHydrating()){var _numberOfForks3=newIdx;pushTreeFork(returnFiber,_numberOfForks3);}return resultingFirstChild;}// Add all children to a key map for quick lookups.
		var existingChildren=mapRemainingChildren(returnFiber,oldFiber);// Keep scanning and use the map to restore deleted items as moves.
		for(;!step.done;newIdx++,step=newChildren.next()){var _newFiber4=updateFromMap(existingChildren,returnFiber,newIdx,step.value,lanes);if(_newFiber4!==null){if(shouldTrackSideEffects){if(_newFiber4.alternate!==null){// The new fiber is a work in progress, but if there exists a
		// current, that means that we reused the fiber. We need to delete
		// it from the child list so that we don't add it to the deletion
		// list.
		existingChildren.delete(_newFiber4.key===null?newIdx:_newFiber4.key);}}lastPlacedIndex=placeChild(_newFiber4,lastPlacedIndex,newIdx);if(previousNewFiber===null){resultingFirstChild=_newFiber4;}else {previousNewFiber.sibling=_newFiber4;}previousNewFiber=_newFiber4;}}if(shouldTrackSideEffects){// Any existing children that weren't consumed above were deleted. We need
		// to add them to the deletion list.
		existingChildren.forEach(function(child){return deleteChild(returnFiber,child);});}if(getIsHydrating()){var _numberOfForks4=newIdx;pushTreeFork(returnFiber,_numberOfForks4);}return resultingFirstChild;}function reconcileSingleTextNode(returnFiber,currentFirstChild,textContent,lanes){// There's no need to check for keys on text nodes since we don't have a
		// way to define them.
		if(currentFirstChild!==null&&currentFirstChild.tag===HostText){// We already have an existing node so let's just update it and delete
		// the rest.
		deleteRemainingChildren(returnFiber,currentFirstChild.sibling);var existing=useFiber(currentFirstChild,textContent);existing.return=returnFiber;return existing;}// The existing first child is not a text node so we need to create one
		// and delete the existing ones.
		deleteRemainingChildren(returnFiber,currentFirstChild);var created=createFiberFromText(textContent,returnFiber.mode,lanes);created.return=returnFiber;return created;}function reconcileSingleElement(returnFiber,currentFirstChild,element,lanes){var key=element.key;var child=currentFirstChild;while(child!==null){// TODO: If key === null and child.key === null, then this only applies to
		// the first item in the list.
		if(child.key===key){var elementType=element.type;if(elementType===REACT_FRAGMENT_TYPE){if(child.tag===Fragment){deleteRemainingChildren(returnFiber,child.sibling);var existing=useFiber(child,element.props.children);existing.return=returnFiber;{existing._debugSource=element._source;existing._debugOwner=element._owner;}return existing;}}else {if(child.elementType===elementType||// Keep this check inline so it only runs on the false path:
		isCompatibleFamilyForHotReloading(child,element)||// Lazy types should reconcile their resolved type.
		// We need to do this after the Hot Reloading check above,
		// because hot reloading has different semantics than prod because
		// it doesn't resuspend. So we can't let the call below suspend.
		typeof elementType==='object'&&elementType!==null&&elementType.$$typeof===REACT_LAZY_TYPE&&resolveLazy(elementType)===child.type){deleteRemainingChildren(returnFiber,child.sibling);var _existing=useFiber(child,element.props);_existing.ref=coerceRef(returnFiber,child,element);_existing.return=returnFiber;{_existing._debugSource=element._source;_existing._debugOwner=element._owner;}return _existing;}}// Didn't match.
		deleteRemainingChildren(returnFiber,child);break;}else {deleteChild(returnFiber,child);}child=child.sibling;}if(element.type===REACT_FRAGMENT_TYPE){var created=createFiberFromFragment(element.props.children,returnFiber.mode,lanes,element.key);created.return=returnFiber;return created;}else {var _created4=createFiberFromElement(element,returnFiber.mode,lanes);_created4.ref=coerceRef(returnFiber,currentFirstChild,element);_created4.return=returnFiber;return _created4;}}function reconcileSinglePortal(returnFiber,currentFirstChild,portal,lanes){var key=portal.key;var child=currentFirstChild;while(child!==null){// TODO: If key === null and child.key === null, then this only applies to
		// the first item in the list.
		if(child.key===key){if(child.tag===HostPortal&&child.stateNode.containerInfo===portal.containerInfo&&child.stateNode.implementation===portal.implementation){deleteRemainingChildren(returnFiber,child.sibling);var existing=useFiber(child,portal.children||[]);existing.return=returnFiber;return existing;}else {deleteRemainingChildren(returnFiber,child);break;}}else {deleteChild(returnFiber,child);}child=child.sibling;}var created=createFiberFromPortal(portal,returnFiber.mode,lanes);created.return=returnFiber;return created;}// This API will tag the children with the side-effect of the reconciliation
		// itself. They will be added to the side-effect list as we pass through the
		// children and the parent.
		function reconcileChildFibers(returnFiber,currentFirstChild,newChild,lanes){// This function is not recursive.
		// If the top level item is an array, we treat it as a set of children,
		// not as a fragment. Nested arrays on the other hand will be treated as
		// fragment nodes. Recursion happens at the normal flow.
		// Handle top level unkeyed fragments as if they were arrays.
		// This leads to an ambiguity between <>{[...]}</> and <>...</>.
		// We treat the ambiguous cases above the same.
		var isUnkeyedTopLevelFragment=typeof newChild==='object'&&newChild!==null&&newChild.type===REACT_FRAGMENT_TYPE&&newChild.key===null;if(isUnkeyedTopLevelFragment){newChild=newChild.props.children;}// Handle object types
		if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:return placeSingleChild(reconcileSingleElement(returnFiber,currentFirstChild,newChild,lanes));case REACT_PORTAL_TYPE:return placeSingleChild(reconcileSinglePortal(returnFiber,currentFirstChild,newChild,lanes));case REACT_LAZY_TYPE:var payload=newChild._payload;var init=newChild._init;// TODO: This function is supposed to be non-recursive.
		return reconcileChildFibers(returnFiber,currentFirstChild,init(payload),lanes);}if(isArray(newChild)){return reconcileChildrenArray(returnFiber,currentFirstChild,newChild,lanes);}if(getIteratorFn(newChild)){return reconcileChildrenIterator(returnFiber,currentFirstChild,newChild,lanes);}throwOnInvalidObjectType(returnFiber,newChild);}if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){return placeSingleChild(reconcileSingleTextNode(returnFiber,currentFirstChild,''+newChild,lanes));}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}// Remaining cases are all treated as empty.
		return deleteRemainingChildren(returnFiber,currentFirstChild);}return reconcileChildFibers;}var reconcileChildFibers=ChildReconciler(true);var mountChildFibers=ChildReconciler(false);function cloneChildFibers(current,workInProgress){if(current!==null&&workInProgress.child!==current.child){throw new Error('Resuming work not yet implemented.');}if(workInProgress.child===null){return;}var currentChild=workInProgress.child;var newChild=createWorkInProgress(currentChild,currentChild.pendingProps);workInProgress.child=newChild;newChild.return=workInProgress;while(currentChild.sibling!==null){currentChild=currentChild.sibling;newChild=newChild.sibling=createWorkInProgress(currentChild,currentChild.pendingProps);newChild.return=workInProgress;}newChild.sibling=null;}// Reset a workInProgress child set to prepare it for a second pass.
		function resetChildFibers(workInProgress,lanes){var child=workInProgress.child;while(child!==null){resetWorkInProgress(child,lanes);child=child.sibling;}}var NO_CONTEXT={};var contextStackCursor$1=createCursor(NO_CONTEXT);var contextFiberStackCursor=createCursor(NO_CONTEXT);var rootInstanceStackCursor=createCursor(NO_CONTEXT);function requiredContext(c){if(c===NO_CONTEXT){throw new Error('Expected host context to exist. This error is likely caused by a bug '+'in React. Please file an issue.');}return c;}function getRootHostContainer(){var rootInstance=requiredContext(rootInstanceStackCursor.current);return rootInstance;}function pushHostContainer(fiber,nextRootInstance){// Push current root instance onto the stack;
		// This allows us to reset root when portals are popped.
		push(rootInstanceStackCursor,nextRootInstance,fiber);// Track the context and the Fiber that provided it.
		// This enables us to pop only Fibers that provide unique contexts.
		push(contextFiberStackCursor,fiber,fiber);// Finally, we need to push the host context to the stack.
		// However, we can't just call getRootHostContext() and push it because
		// we'd have a different number of entries on the stack depending on
		// whether getRootHostContext() throws somewhere in renderer code or not.
		// So we push an empty value first. This lets us safely unwind on errors.
		push(contextStackCursor$1,NO_CONTEXT,fiber);var nextRootContext=getRootHostContext(nextRootInstance);// Now that we know this function doesn't throw, replace it.
		pop(contextStackCursor$1,fiber);push(contextStackCursor$1,nextRootContext,fiber);}function popHostContainer(fiber){pop(contextStackCursor$1,fiber);pop(contextFiberStackCursor,fiber);pop(rootInstanceStackCursor,fiber);}function getHostContext(){var context=requiredContext(contextStackCursor$1.current);return context;}function pushHostContext(fiber){requiredContext(rootInstanceStackCursor.current);var context=requiredContext(contextStackCursor$1.current);var nextContext=getChildHostContext(context,fiber.type);// Don't push this Fiber's context unless it's unique.
		if(context===nextContext){return;}// Track the context and the Fiber that provided it.
		// This enables us to pop only Fibers that provide unique contexts.
		push(contextFiberStackCursor,fiber,fiber);push(contextStackCursor$1,nextContext,fiber);}function popHostContext(fiber){// Do not pop unless this Fiber provided the current context.
		// pushHostContext() only pushes Fibers that provide unique contexts.
		if(contextFiberStackCursor.current!==fiber){return;}pop(contextStackCursor$1,fiber);pop(contextFiberStackCursor,fiber);}var DefaultSuspenseContext=0;// The Suspense Context is split into two parts. The lower bits is
		// inherited deeply down the subtree. The upper bits only affect
		// this immediate suspense boundary and gets reset each new
		// boundary or suspense list.
		var SubtreeSuspenseContextMask=1;// Subtree Flags:
		// InvisibleParentSuspenseContext indicates that one of our parent Suspense
		// boundaries is not currently showing visible main content.
		// Either because it is already showing a fallback or is not mounted at all.
		// We can use this to determine if it is desirable to trigger a fallback at
		// the parent. If not, then we might need to trigger undesirable boundaries
		// and/or suspend the commit to avoid hiding the parent content.
		var InvisibleParentSuspenseContext=1;// Shallow Flags:
		// ForceSuspenseFallback can be used by SuspenseList to force newly added
		// items into their fallback state during one of the render passes.
		var ForceSuspenseFallback=2;var suspenseStackCursor=createCursor(DefaultSuspenseContext);function hasSuspenseContext(parentContext,flag){return (parentContext&flag)!==0;}function setDefaultShallowSuspenseContext(parentContext){return parentContext&SubtreeSuspenseContextMask;}function setShallowSuspenseContext(parentContext,shallowContext){return parentContext&SubtreeSuspenseContextMask|shallowContext;}function addSubtreeSuspenseContext(parentContext,subtreeContext){return parentContext|subtreeContext;}function pushSuspenseContext(fiber,newContext){push(suspenseStackCursor,newContext,fiber);}function popSuspenseContext(fiber){pop(suspenseStackCursor,fiber);}function shouldCaptureSuspense(workInProgress,hasInvisibleParent){// If it was the primary children that just suspended, capture and render the
		// fallback. Otherwise, don't capture and bubble to the next boundary.
		var nextState=workInProgress.memoizedState;if(nextState!==null){if(nextState.dehydrated!==null){// A dehydrated boundary always captures.
		return true;}return false;}workInProgress.memoizedProps;// Regular boundaries always capture.
		{return true;}// If it's a boundary we should avoid, then we prefer to bubble up to the
		}function findFirstSuspended(row){var node=row;while(node!==null){if(node.tag===SuspenseComponent){var state=node.memoizedState;if(state!==null){var dehydrated=state.dehydrated;if(dehydrated===null||isSuspenseInstancePending(dehydrated)||isSuspenseInstanceFallback(dehydrated)){return node;}}}else if(node.tag===SuspenseListComponent&&// revealOrder undefined can't be trusted because it don't
		// keep track of whether it suspended or not.
		node.memoizedProps.revealOrder!==undefined){var didSuspend=(node.flags&DidCapture)!==NoFlags;if(didSuspend){return node;}}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===row){return null;}while(node.sibling===null){if(node.return===null||node.return===row){return null;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}return null;}var NoFlags$1=/*   */0;// Represents whether effect should fire.
		var HasEffect=/* */1;// Represents the phase in which the effect (not the clean-up) fires.
		var Insertion=/*  */2;var Layout=/*    */4;var Passive$1=/*   */8;// and should be reset before starting a new render.
		// This tracks which mutable sources need to be reset after a render.
		var workInProgressSources=[];function resetWorkInProgressVersions(){for(var i=0;i<workInProgressSources.length;i++){var mutableSource=workInProgressSources[i];{mutableSource._workInProgressVersionPrimary=null;}}workInProgressSources.length=0;}// This ensures that the version used for server rendering matches the one
		// that is eventually read during hydration.
		// If they don't match there's a potential tear and a full deopt render is required.
		function registerMutableSourceForHydration(root,mutableSource){var getVersion=mutableSource._getVersion;var version=getVersion(mutableSource._source);// TODO Clear this data once all pending hydration work is finished.
		// Retaining it forever may interfere with GC.
		if(root.mutableSourceEagerHydrationData==null){root.mutableSourceEagerHydrationData=[mutableSource,version];}else {root.mutableSourceEagerHydrationData.push(mutableSource,version);}}var ReactCurrentDispatcher$1=ReactSharedInternals.ReactCurrentDispatcher,ReactCurrentBatchConfig$2=ReactSharedInternals.ReactCurrentBatchConfig;var didWarnAboutMismatchedHooksForComponent;var didWarnUncachedGetSnapshot;{didWarnAboutMismatchedHooksForComponent=new Set();}// These are set right before calling the component.
		var renderLanes=NoLanes;// The work-in-progress fiber. I've named it differently to distinguish it from
		// the work-in-progress hook.
		var currentlyRenderingFiber$1=null;// Hooks are stored as a linked list on the fiber's memoizedState field. The
		// current hook list is the list that belongs to the current fiber. The
		// work-in-progress hook list is a new list that will be added to the
		// work-in-progress fiber.
		var currentHook=null;var workInProgressHook=null;// Whether an update was scheduled at any point during the render phase. This
		// does not get reset if we do another render pass; only when we're completely
		// finished evaluating this component. This is an optimization so we know
		// whether we need to clear render phase updates after a throw.
		var didScheduleRenderPhaseUpdate=false;// Where an update was scheduled only during the current render pass. This
		// gets reset after each attempt.
		// TODO: Maybe there's some way to consolidate this with
		// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
		var didScheduleRenderPhaseUpdateDuringThisPass=false;// Counts the number of useId hooks in this component.
		var localIdCounter=0;// Used for ids that are generated completely client-side (i.e. not during
		// hydration). This counter is global, so client ids are not stable across
		// render attempts.
		var globalClientIdCounter=0;var RE_RENDER_LIMIT=25;// In DEV, this is the name of the currently executing primitive hook
		var currentHookNameInDev=null;// In DEV, this list ensures that hooks are called in the same order between renders.
		// The list stores the order of hooks used during the initial render (mount).
		// Subsequent renders (updates) reference this list.
		var hookTypesDev=null;var hookTypesUpdateIndexDev=-1;// In DEV, this tracks whether currently rendering component needs to ignore
		// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
		// When true, such Hooks will always be "remounted". Only used during hot reload.
		var ignorePreviousDependencies=false;function mountHookTypesDev(){{var hookName=currentHookNameInDev;if(hookTypesDev===null){hookTypesDev=[hookName];}else {hookTypesDev.push(hookName);}}}function updateHookTypesDev(){{var hookName=currentHookNameInDev;if(hookTypesDev!==null){hookTypesUpdateIndexDev++;if(hookTypesDev[hookTypesUpdateIndexDev]!==hookName){warnOnHookMismatchInDev(hookName);}}}}function checkDepsAreArrayDev(deps){{if(deps!==undefined&&deps!==null&&!isArray(deps)){// Verify deps, but only on mount to avoid extra checks.
		// It's unlikely their type would change as usually you define them inline.
		error('%s received a final argument that is not an array (instead, received `%s`). When '+'specified, the final argument must be an array.',currentHookNameInDev,typeof deps);}}}function warnOnHookMismatchInDev(currentHookName){{var componentName=getComponentNameFromFiber(currentlyRenderingFiber$1);if(!didWarnAboutMismatchedHooksForComponent.has(componentName)){didWarnAboutMismatchedHooksForComponent.add(componentName);if(hookTypesDev!==null){var table='';var secondColumnStart=30;for(var i=0;i<=hookTypesUpdateIndexDev;i++){var oldHookName=hookTypesDev[i];var newHookName=i===hookTypesUpdateIndexDev?currentHookName:oldHookName;var row=i+1+". "+oldHookName;// Extra space so second column lines up
		// lol @ IE not supporting String#repeat
		while(row.length<secondColumnStart){row+=' ';}row+=newHookName+'\n';table+=row;}error('React has detected a change in the order of Hooks called by %s. '+'This will lead to bugs and errors if not fixed. '+'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n'+'   Previous render            Next render\n'+'   ------------------------------------------------------\n'+'%s'+'   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',componentName,table);}}}}function throwInvalidHookError(){throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for'+' one of the following reasons:\n'+'1. You might have mismatching versions of React and the renderer (such as React DOM)\n'+'2. You might be breaking the Rules of Hooks\n'+'3. You might have more than one copy of React in the same app\n'+'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');}function areHookInputsEqual(nextDeps,prevDeps){{if(ignorePreviousDependencies){// Only true when this component is being hot reloaded.
		return false;}}if(prevDeps===null){{error('%s received a final argument during this render, but not during '+'the previous render. Even though the final argument is optional, '+'its type cannot change between renders.',currentHookNameInDev);}return false;}{// Don't bother comparing lengths in prod because these arrays should be
		// passed inline.
		if(nextDeps.length!==prevDeps.length){error('The final argument passed to %s changed size between renders. The '+'order and size of this array must remain constant.\n\n'+'Previous: %s\n'+'Incoming: %s',currentHookNameInDev,"["+prevDeps.join(', ')+"]","["+nextDeps.join(', ')+"]");}}for(var i=0;i<prevDeps.length&&i<nextDeps.length;i++){if(objectIs(nextDeps[i],prevDeps[i])){continue;}return false;}return true;}function renderWithHooks(current,workInProgress,Component,props,secondArg,nextRenderLanes){renderLanes=nextRenderLanes;currentlyRenderingFiber$1=workInProgress;{hookTypesDev=current!==null?current._debugHookTypes:null;hookTypesUpdateIndexDev=-1;// Used for hot reloading:
		ignorePreviousDependencies=current!==null&&current.type!==workInProgress.type;}workInProgress.memoizedState=null;workInProgress.updateQueue=null;workInProgress.lanes=NoLanes;// The following should have already been reset
		// currentHook = null;
		// workInProgressHook = null;
		// didScheduleRenderPhaseUpdate = false;
		// localIdCounter = 0;
		// TODO Warn if no hooks are used at all during mount, then some are used during update.
		// Currently we will identify the update render as a mount because memoizedState === null.
		// This is tricky because it's valid for certain types of components (e.g. React.lazy)
		// Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
		// Non-stateful hooks (e.g. context) don't get added to memoizedState,
		// so memoizedState would be null during updates and mounts.
		{if(current!==null&&current.memoizedState!==null){ReactCurrentDispatcher$1.current=HooksDispatcherOnUpdateInDEV;}else if(hookTypesDev!==null){// This dispatcher handles an edge case where a component is updating,
		// but no stateful hooks have been used.
		// We want to match the production code behavior (which will use HooksDispatcherOnMount),
		// but with the extra DEV validation to ensure hooks ordering hasn't changed.
		// This dispatcher does that.
		ReactCurrentDispatcher$1.current=HooksDispatcherOnMountWithHookTypesInDEV;}else {ReactCurrentDispatcher$1.current=HooksDispatcherOnMountInDEV;}}var children=Component(props,secondArg);// Check if there was a render phase update
		if(didScheduleRenderPhaseUpdateDuringThisPass){// Keep rendering in a loop for as long as render phase updates continue to
		// be scheduled. Use a counter to prevent infinite loops.
		var numberOfReRenders=0;do{didScheduleRenderPhaseUpdateDuringThisPass=false;localIdCounter=0;if(numberOfReRenders>=RE_RENDER_LIMIT){throw new Error('Too many re-renders. React limits the number of renders to prevent '+'an infinite loop.');}numberOfReRenders+=1;{// Even when hot reloading, allow dependencies to stabilize
		// after first render to prevent infinite render phase updates.
		ignorePreviousDependencies=false;}// Start over from the beginning of the list
		currentHook=null;workInProgressHook=null;workInProgress.updateQueue=null;{// Also validate hook order for cascading updates.
		hookTypesUpdateIndexDev=-1;}ReactCurrentDispatcher$1.current=HooksDispatcherOnRerenderInDEV;children=Component(props,secondArg);}while(didScheduleRenderPhaseUpdateDuringThisPass);}// We can assume the previous dispatcher is always this one, since we set it
		// at the beginning of the render phase and there's no re-entrance.
		ReactCurrentDispatcher$1.current=ContextOnlyDispatcher;{workInProgress._debugHookTypes=hookTypesDev;}// This check uses currentHook so that it works the same in DEV and prod bundles.
		// hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
		var didRenderTooFewHooks=currentHook!==null&&currentHook.next!==null;renderLanes=NoLanes;currentlyRenderingFiber$1=null;currentHook=null;workInProgressHook=null;{currentHookNameInDev=null;hookTypesDev=null;hookTypesUpdateIndexDev=-1;// Confirm that a static flag was not added or removed since the last
		// render. If this fires, it suggests that we incorrectly reset the static
		// flags in some other part of the codebase. This has happened before, for
		// example, in the SuspenseList implementation.
		if(current!==null&&(current.flags&StaticMask)!==(workInProgress.flags&StaticMask)&&// Disable this warning in legacy mode, because legacy Suspense is weird
		// and creates false positives. To make this work in legacy mode, we'd
		// need to mark fibers that commit in an incomplete state, somehow. For
		// now I'll disable the warning that most of the bugs that would trigger
		// it are either exclusive to concurrent mode or exist in both.
		(current.mode&ConcurrentMode)!==NoMode){error('Internal React error: Expected static flag was missing. Please '+'notify the React team.');}}didScheduleRenderPhaseUpdate=false;// This is reset by checkDidRenderIdHook
		// localIdCounter = 0;
		if(didRenderTooFewHooks){throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental '+'early return statement.');}return children;}function checkDidRenderIdHook(){// This should be called immediately after every renderWithHooks call.
		// Conceptually, it's part of the return value of renderWithHooks; it's only a
		// separate function to avoid using an array tuple.
		var didRenderIdHook=localIdCounter!==0;localIdCounter=0;return didRenderIdHook;}function bailoutHooks(current,workInProgress,lanes){workInProgress.updateQueue=current.updateQueue;// TODO: Don't need to reset the flags here, because they're reset in the
		// complete phase (bubbleProperties).
		if((workInProgress.mode&StrictEffectsMode)!==NoMode){workInProgress.flags&=~(MountPassiveDev|MountLayoutDev|Passive|Update);}else {workInProgress.flags&=~(Passive|Update);}current.lanes=removeLanes(current.lanes,lanes);}function resetHooksAfterThrow(){// We can assume the previous dispatcher is always this one, since we set it
		// at the beginning of the render phase and there's no re-entrance.
		ReactCurrentDispatcher$1.current=ContextOnlyDispatcher;if(didScheduleRenderPhaseUpdate){// There were render phase updates. These are only valid for this render
		// phase, which we are now aborting. Remove the updates from the queues so
		// they do not persist to the next render. Do not remove updates from hooks
		// that weren't processed.
		//
		// Only reset the updates from the queue if it has a clone. If it does
		// not have a clone, that means it wasn't processed, and the updates were
		// scheduled before we entered the render phase.
		var hook=currentlyRenderingFiber$1.memoizedState;while(hook!==null){var queue=hook.queue;if(queue!==null){queue.pending=null;}hook=hook.next;}didScheduleRenderPhaseUpdate=false;}renderLanes=NoLanes;currentlyRenderingFiber$1=null;currentHook=null;workInProgressHook=null;{hookTypesDev=null;hookTypesUpdateIndexDev=-1;currentHookNameInDev=null;isUpdatingOpaqueValueInRenderPhase=false;}didScheduleRenderPhaseUpdateDuringThisPass=false;localIdCounter=0;}function mountWorkInProgressHook(){var hook={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};if(workInProgressHook===null){// This is the first hook in the list
		currentlyRenderingFiber$1.memoizedState=workInProgressHook=hook;}else {// Append to the end of the list
		workInProgressHook=workInProgressHook.next=hook;}return workInProgressHook;}function updateWorkInProgressHook(){// This function is used both for updates and for re-renders triggered by a
		// render phase update. It assumes there is either a current hook we can
		// clone, or a work-in-progress hook from a previous render pass that we can
		// use as a base. When we reach the end of the base list, we must switch to
		// the dispatcher used for mounts.
		var nextCurrentHook;if(currentHook===null){var current=currentlyRenderingFiber$1.alternate;if(current!==null){nextCurrentHook=current.memoizedState;}else {nextCurrentHook=null;}}else {nextCurrentHook=currentHook.next;}var nextWorkInProgressHook;if(workInProgressHook===null){nextWorkInProgressHook=currentlyRenderingFiber$1.memoizedState;}else {nextWorkInProgressHook=workInProgressHook.next;}if(nextWorkInProgressHook!==null){// There's already a work-in-progress. Reuse it.
		workInProgressHook=nextWorkInProgressHook;nextWorkInProgressHook=workInProgressHook.next;currentHook=nextCurrentHook;}else {// Clone from the current hook.
		if(nextCurrentHook===null){throw new Error('Rendered more hooks than during the previous render.');}currentHook=nextCurrentHook;var newHook={memoizedState:currentHook.memoizedState,baseState:currentHook.baseState,baseQueue:currentHook.baseQueue,queue:currentHook.queue,next:null};if(workInProgressHook===null){// This is the first hook in the list.
		currentlyRenderingFiber$1.memoizedState=workInProgressHook=newHook;}else {// Append to the end of the list.
		workInProgressHook=workInProgressHook.next=newHook;}}return workInProgressHook;}function createFunctionComponentUpdateQueue(){return {lastEffect:null,stores:null};}function basicStateReducer(state,action){// $FlowFixMe: Flow doesn't like mixed types
		return typeof action==='function'?action(state):action;}function mountReducer(reducer,initialArg,init){var hook=mountWorkInProgressHook();var initialState;if(init!==undefined){initialState=init(initialArg);}else {initialState=initialArg;}hook.memoizedState=hook.baseState=initialState;var queue={pending:null,interleaved:null,lanes:NoLanes,dispatch:null,lastRenderedReducer:reducer,lastRenderedState:initialState};hook.queue=queue;var dispatch=queue.dispatch=dispatchReducerAction.bind(null,currentlyRenderingFiber$1,queue);return [hook.memoizedState,dispatch];}function updateReducer(reducer,initialArg,init){var hook=updateWorkInProgressHook();var queue=hook.queue;if(queue===null){throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');}queue.lastRenderedReducer=reducer;var current=currentHook;// The last rebase update that is NOT part of the base state.
		var baseQueue=current.baseQueue;// The last pending update that hasn't been processed yet.
		var pendingQueue=queue.pending;if(pendingQueue!==null){// We have new updates that haven't been processed yet.
		// We'll add them to the base queue.
		if(baseQueue!==null){// Merge the pending queue and the base queue.
		var baseFirst=baseQueue.next;var pendingFirst=pendingQueue.next;baseQueue.next=pendingFirst;pendingQueue.next=baseFirst;}{if(current.baseQueue!==baseQueue){// Internal invariant that should never happen, but feasibly could in
		// the future if we implement resuming, or some form of that.
		error('Internal error: Expected work-in-progress queue to be a clone. '+'This is a bug in React.');}}current.baseQueue=baseQueue=pendingQueue;queue.pending=null;}if(baseQueue!==null){// We have a queue to process.
		var first=baseQueue.next;var newState=current.baseState;var newBaseState=null;var newBaseQueueFirst=null;var newBaseQueueLast=null;var update=first;do{var updateLane=update.lane;if(!isSubsetOfLanes(renderLanes,updateLane)){// Priority is insufficient. Skip this update. If this is the first
		// skipped update, the previous update/state is the new base
		// update/state.
		var clone={lane:updateLane,action:update.action,hasEagerState:update.hasEagerState,eagerState:update.eagerState,next:null};if(newBaseQueueLast===null){newBaseQueueFirst=newBaseQueueLast=clone;newBaseState=newState;}else {newBaseQueueLast=newBaseQueueLast.next=clone;}// Update the remaining priority in the queue.
		// TODO: Don't need to accumulate this. Instead, we can remove
		// renderLanes from the original lanes.
		currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,updateLane);markSkippedUpdateLanes(updateLane);}else {// This update does have sufficient priority.
		if(newBaseQueueLast!==null){var _clone={// This update is going to be committed so we never want uncommit
		// it. Using NoLane works because 0 is a subset of all bitmasks, so
		// this will never be skipped by the check above.
		lane:NoLane,action:update.action,hasEagerState:update.hasEagerState,eagerState:update.eagerState,next:null};newBaseQueueLast=newBaseQueueLast.next=_clone;}// Process this update.
		if(update.hasEagerState){// If this update is a state update (not a reducer) and was processed eagerly,
		// we can use the eagerly computed state
		newState=update.eagerState;}else {var action=update.action;newState=reducer(newState,action);}}update=update.next;}while(update!==null&&update!==first);if(newBaseQueueLast===null){newBaseState=newState;}else {newBaseQueueLast.next=newBaseQueueFirst;}// Mark that the fiber performed work, but only if the new state is
		// different from the current state.
		if(!objectIs(newState,hook.memoizedState)){markWorkInProgressReceivedUpdate();}hook.memoizedState=newState;hook.baseState=newBaseState;hook.baseQueue=newBaseQueueLast;queue.lastRenderedState=newState;}// Interleaved updates are stored on a separate queue. We aren't going to
		// process them during this render, but we do need to track which lanes
		// are remaining.
		var lastInterleaved=queue.interleaved;if(lastInterleaved!==null){var interleaved=lastInterleaved;do{var interleavedLane=interleaved.lane;currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,interleavedLane);markSkippedUpdateLanes(interleavedLane);interleaved=interleaved.next;}while(interleaved!==lastInterleaved);}else if(baseQueue===null){// `queue.lanes` is used for entangling transitions. We can set it back to
		// zero once the queue is empty.
		queue.lanes=NoLanes;}var dispatch=queue.dispatch;return [hook.memoizedState,dispatch];}function rerenderReducer(reducer,initialArg,init){var hook=updateWorkInProgressHook();var queue=hook.queue;if(queue===null){throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');}queue.lastRenderedReducer=reducer;// This is a re-render. Apply the new render phase updates to the previous
		// work-in-progress hook.
		var dispatch=queue.dispatch;var lastRenderPhaseUpdate=queue.pending;var newState=hook.memoizedState;if(lastRenderPhaseUpdate!==null){// The queue doesn't persist past this render pass.
		queue.pending=null;var firstRenderPhaseUpdate=lastRenderPhaseUpdate.next;var update=firstRenderPhaseUpdate;do{// Process this render phase update. We don't have to check the
		// priority because it will always be the same as the current
		// render's.
		var action=update.action;newState=reducer(newState,action);update=update.next;}while(update!==firstRenderPhaseUpdate);// Mark that the fiber performed work, but only if the new state is
		// different from the current state.
		if(!objectIs(newState,hook.memoizedState)){markWorkInProgressReceivedUpdate();}hook.memoizedState=newState;// Don't persist the state accumulated from the render phase updates to
		// the base state unless the queue is empty.
		// TODO: Not sure if this is the desired semantics, but it's what we
		// do for gDSFP. I can't remember why.
		if(hook.baseQueue===null){hook.baseState=newState;}queue.lastRenderedState=newState;}return [newState,dispatch];}function mountMutableSource(source,getSnapshot,subscribe){{return undefined;}}function updateMutableSource(source,getSnapshot,subscribe){{return undefined;}}function mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot){var fiber=currentlyRenderingFiber$1;var hook=mountWorkInProgressHook();var nextSnapshot;var isHydrating=getIsHydrating();if(isHydrating){if(getServerSnapshot===undefined){throw new Error('Missing getServerSnapshot, which is required for '+'server-rendered content. Will revert to client rendering.');}nextSnapshot=getServerSnapshot();{if(!didWarnUncachedGetSnapshot){if(nextSnapshot!==getServerSnapshot()){error('The result of getServerSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}}else {nextSnapshot=getSnapshot();{if(!didWarnUncachedGetSnapshot){var cachedSnapshot=getSnapshot();if(!objectIs(nextSnapshot,cachedSnapshot)){error('The result of getSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}// Unless we're rendering a blocking lane, schedule a consistency check.
		// Right before committing, we will walk the tree and check if any of the
		// stores were mutated.
		//
		// We won't do this if we're hydrating server-rendered content, because if
		// the content is stale, it's already visible anyway. Instead we'll patch
		// it up in a passive effect.
		var root=getWorkInProgressRoot();if(root===null){throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');}if(!includesBlockingLane(root,renderLanes)){pushStoreConsistencyCheck(fiber,getSnapshot,nextSnapshot);}}// Read the current snapshot from the store on every render. This breaks the
		// normal rules of React, and only works because store updates are
		// always synchronous.
		hook.memoizedState=nextSnapshot;var inst={value:nextSnapshot,getSnapshot:getSnapshot};hook.queue=inst;// Schedule an effect to subscribe to the store.
		mountEffect(subscribeToStore.bind(null,fiber,inst,subscribe),[subscribe]);// Schedule an effect to update the mutable instance fields. We will update
		// this whenever subscribe, getSnapshot, or value changes. Because there's no
		// clean-up function, and we track the deps correctly, we can call pushEffect
		// directly, without storing any additional state. For the same reason, we
		// don't need to set a static flag, either.
		// TODO: We can move this to the passive phase once we add a pre-commit
		// consistency check. See the next comment.
		fiber.flags|=Passive;pushEffect(HasEffect|Passive$1,updateStoreInstance.bind(null,fiber,inst,nextSnapshot,getSnapshot),undefined,null);return nextSnapshot;}function updateSyncExternalStore(subscribe,getSnapshot,getServerSnapshot){var fiber=currentlyRenderingFiber$1;var hook=updateWorkInProgressHook();// Read the current snapshot from the store on every render. This breaks the
		// normal rules of React, and only works because store updates are
		// always synchronous.
		var nextSnapshot=getSnapshot();{if(!didWarnUncachedGetSnapshot){var cachedSnapshot=getSnapshot();if(!objectIs(nextSnapshot,cachedSnapshot)){error('The result of getSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}var prevSnapshot=hook.memoizedState;var snapshotChanged=!objectIs(prevSnapshot,nextSnapshot);if(snapshotChanged){hook.memoizedState=nextSnapshot;markWorkInProgressReceivedUpdate();}var inst=hook.queue;updateEffect(subscribeToStore.bind(null,fiber,inst,subscribe),[subscribe]);// Whenever getSnapshot or subscribe changes, we need to check in the
		// commit phase if there was an interleaved mutation. In concurrent mode
		// this can happen all the time, but even in synchronous mode, an earlier
		// effect may have mutated the store.
		if(inst.getSnapshot!==getSnapshot||snapshotChanged||// Check if the susbcribe function changed. We can save some memory by
		// checking whether we scheduled a subscription effect above.
		workInProgressHook!==null&&workInProgressHook.memoizedState.tag&HasEffect){fiber.flags|=Passive;pushEffect(HasEffect|Passive$1,updateStoreInstance.bind(null,fiber,inst,nextSnapshot,getSnapshot),undefined,null);// Unless we're rendering a blocking lane, schedule a consistency check.
		// Right before committing, we will walk the tree and check if any of the
		// stores were mutated.
		var root=getWorkInProgressRoot();if(root===null){throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');}if(!includesBlockingLane(root,renderLanes)){pushStoreConsistencyCheck(fiber,getSnapshot,nextSnapshot);}}return nextSnapshot;}function pushStoreConsistencyCheck(fiber,getSnapshot,renderedSnapshot){fiber.flags|=StoreConsistency;var check={getSnapshot:getSnapshot,value:renderedSnapshot};var componentUpdateQueue=currentlyRenderingFiber$1.updateQueue;if(componentUpdateQueue===null){componentUpdateQueue=createFunctionComponentUpdateQueue();currentlyRenderingFiber$1.updateQueue=componentUpdateQueue;componentUpdateQueue.stores=[check];}else {var stores=componentUpdateQueue.stores;if(stores===null){componentUpdateQueue.stores=[check];}else {stores.push(check);}}}function updateStoreInstance(fiber,inst,nextSnapshot,getSnapshot){// These are updated in the passive phase
		inst.value=nextSnapshot;inst.getSnapshot=getSnapshot;// Something may have been mutated in between render and commit. This could
		// have been in an event that fired before the passive effects, or it could
		// have been in a layout effect. In that case, we would have used the old
		// snapsho and getSnapshot values to bail out. We need to check one more time.
		if(checkIfSnapshotChanged(inst)){// Force a re-render.
		forceStoreRerender(fiber);}}function subscribeToStore(fiber,inst,subscribe){var handleStoreChange=function(){// The store changed. Check if the snapshot changed since the last time we
		// read from the store.
		if(checkIfSnapshotChanged(inst)){// Force a re-render.
		forceStoreRerender(fiber);}};// Subscribe to the store and return a clean-up function.
		return subscribe(handleStoreChange);}function checkIfSnapshotChanged(inst){var latestGetSnapshot=inst.getSnapshot;var prevValue=inst.value;try{var nextValue=latestGetSnapshot();return !objectIs(prevValue,nextValue);}catch(error){return true;}}function forceStoreRerender(fiber){var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}function mountState(initialState){var hook=mountWorkInProgressHook();if(typeof initialState==='function'){// $FlowFixMe: Flow doesn't like mixed types
		initialState=initialState();}hook.memoizedState=hook.baseState=initialState;var queue={pending:null,interleaved:null,lanes:NoLanes,dispatch:null,lastRenderedReducer:basicStateReducer,lastRenderedState:initialState};hook.queue=queue;var dispatch=queue.dispatch=dispatchSetState.bind(null,currentlyRenderingFiber$1,queue);return [hook.memoizedState,dispatch];}function updateState(initialState){return updateReducer(basicStateReducer);}function rerenderState(initialState){return rerenderReducer(basicStateReducer);}function pushEffect(tag,create,destroy,deps){var effect={tag:tag,create:create,destroy:destroy,deps:deps,// Circular
		next:null};var componentUpdateQueue=currentlyRenderingFiber$1.updateQueue;if(componentUpdateQueue===null){componentUpdateQueue=createFunctionComponentUpdateQueue();currentlyRenderingFiber$1.updateQueue=componentUpdateQueue;componentUpdateQueue.lastEffect=effect.next=effect;}else {var lastEffect=componentUpdateQueue.lastEffect;if(lastEffect===null){componentUpdateQueue.lastEffect=effect.next=effect;}else {var firstEffect=lastEffect.next;lastEffect.next=effect;effect.next=firstEffect;componentUpdateQueue.lastEffect=effect;}}return effect;}function mountRef(initialValue){var hook=mountWorkInProgressHook();{var _ref2={current:initialValue};hook.memoizedState=_ref2;return _ref2;}}function updateRef(initialValue){var hook=updateWorkInProgressHook();return hook.memoizedState;}function mountEffectImpl(fiberFlags,hookFlags,create,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;currentlyRenderingFiber$1.flags|=fiberFlags;hook.memoizedState=pushEffect(HasEffect|hookFlags,create,undefined,nextDeps);}function updateEffectImpl(fiberFlags,hookFlags,create,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var destroy=undefined;if(currentHook!==null){var prevEffect=currentHook.memoizedState;destroy=prevEffect.destroy;if(nextDeps!==null){var prevDeps=prevEffect.deps;if(areHookInputsEqual(nextDeps,prevDeps)){hook.memoizedState=pushEffect(hookFlags,create,destroy,nextDeps);return;}}}currentlyRenderingFiber$1.flags|=fiberFlags;hook.memoizedState=pushEffect(HasEffect|hookFlags,create,destroy,nextDeps);}function mountEffect(create,deps){if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){return mountEffectImpl(MountPassiveDev|Passive|PassiveStatic,Passive$1,create,deps);}else {return mountEffectImpl(Passive|PassiveStatic,Passive$1,create,deps);}}function updateEffect(create,deps){return updateEffectImpl(Passive,Passive$1,create,deps);}function mountInsertionEffect(create,deps){return mountEffectImpl(Update,Insertion,create,deps);}function updateInsertionEffect(create,deps){return updateEffectImpl(Update,Insertion,create,deps);}function mountLayoutEffect(create,deps){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}return mountEffectImpl(fiberFlags,Layout,create,deps);}function updateLayoutEffect(create,deps){return updateEffectImpl(Update,Layout,create,deps);}function imperativeHandleEffect(create,ref){if(typeof ref==='function'){var refCallback=ref;var _inst=create();refCallback(_inst);return function(){refCallback(null);};}else if(ref!==null&&ref!==undefined){var refObject=ref;{if(!refObject.hasOwnProperty('current')){error('Expected useImperativeHandle() first argument to either be a '+'ref callback or React.createRef() object. Instead received: %s.','an object with keys {'+Object.keys(refObject).join(', ')+'}');}}var _inst2=create();refObject.current=_inst2;return function(){refObject.current=null;};}}function mountImperativeHandle(ref,create,deps){{if(typeof create!=='function'){error('Expected useImperativeHandle() second argument to be a function '+'that creates a handle. Instead received: %s.',create!==null?typeof create:'null');}}// TODO: If deps are provided, should we skip comparing the ref itself?
		var effectDeps=deps!==null&&deps!==undefined?deps.concat([ref]):null;var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}return mountEffectImpl(fiberFlags,Layout,imperativeHandleEffect.bind(null,create,ref),effectDeps);}function updateImperativeHandle(ref,create,deps){{if(typeof create!=='function'){error('Expected useImperativeHandle() second argument to be a function '+'that creates a handle. Instead received: %s.',create!==null?typeof create:'null');}}// TODO: If deps are provided, should we skip comparing the ref itself?
		var effectDeps=deps!==null&&deps!==undefined?deps.concat([ref]):null;return updateEffectImpl(Update,Layout,imperativeHandleEffect.bind(null,create,ref),effectDeps);}function mountDebugValue(value,formatterFn){// This hook is normally a no-op.
		// The react-debug-hooks package injects its own implementation
		// so that e.g. DevTools can display custom hook values.
		}var updateDebugValue=mountDebugValue;function mountCallback(callback,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;hook.memoizedState=[callback,nextDeps];return callback;}function updateCallback(callback,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var prevState=hook.memoizedState;if(prevState!==null){if(nextDeps!==null){var prevDeps=prevState[1];if(areHookInputsEqual(nextDeps,prevDeps)){return prevState[0];}}}hook.memoizedState=[callback,nextDeps];return callback;}function mountMemo(nextCreate,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var nextValue=nextCreate();hook.memoizedState=[nextValue,nextDeps];return nextValue;}function updateMemo(nextCreate,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var prevState=hook.memoizedState;if(prevState!==null){// Assume these are defined. If they're not, areHookInputsEqual will warn.
		if(nextDeps!==null){var prevDeps=prevState[1];if(areHookInputsEqual(nextDeps,prevDeps)){return prevState[0];}}}var nextValue=nextCreate();hook.memoizedState=[nextValue,nextDeps];return nextValue;}function mountDeferredValue(value){var hook=mountWorkInProgressHook();hook.memoizedState=value;return value;}function updateDeferredValue(value){var hook=updateWorkInProgressHook();var resolvedCurrentHook=currentHook;var prevValue=resolvedCurrentHook.memoizedState;return updateDeferredValueImpl(hook,prevValue,value);}function rerenderDeferredValue(value){var hook=updateWorkInProgressHook();if(currentHook===null){// This is a rerender during a mount.
		hook.memoizedState=value;return value;}else {// This is a rerender during an update.
		var prevValue=currentHook.memoizedState;return updateDeferredValueImpl(hook,prevValue,value);}}function updateDeferredValueImpl(hook,prevValue,value){var shouldDeferValue=!includesOnlyNonUrgentLanes(renderLanes);if(shouldDeferValue){// This is an urgent update. If the value has changed, keep using the
		// previous value and spawn a deferred render to update it later.
		if(!objectIs(value,prevValue)){// Schedule a deferred render
		var deferredLane=claimNextTransitionLane();currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,deferredLane);markSkippedUpdateLanes(deferredLane);// Set this to true to indicate that the rendered value is inconsistent
		// from the latest value. The name "baseState" doesn't really match how we
		// use it because we're reusing a state hook field instead of creating a
		// new one.
		hook.baseState=true;}// Reuse the previous value
		return prevValue;}else {// This is not an urgent update, so we can use the latest value regardless
		// of what it is. No need to defer it.
		// However, if we're currently inside a spawned render, then we need to mark
		// this as an update to prevent the fiber from bailing out.
		//
		// `baseState` is true when the current value is different from the rendered
		// value. The name doesn't really match how we use it because we're reusing
		// a state hook field instead of creating a new one.
		if(hook.baseState){// Flip this back to false.
		hook.baseState=false;markWorkInProgressReceivedUpdate();}hook.memoizedState=value;return value;}}function startTransition(setPending,callback,options){var previousPriority=getCurrentUpdatePriority();setCurrentUpdatePriority(higherEventPriority(previousPriority,ContinuousEventPriority));setPending(true);var prevTransition=ReactCurrentBatchConfig$2.transition;ReactCurrentBatchConfig$2.transition={};var currentTransition=ReactCurrentBatchConfig$2.transition;{ReactCurrentBatchConfig$2.transition._updatedFibers=new Set();}try{setPending(false);callback();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;{if(prevTransition===null&&currentTransition._updatedFibers){var updatedFibersCount=currentTransition._updatedFibers.size;if(updatedFibersCount>10){warn('Detected a large number of updates inside startTransition. '+'If this is due to a subscription please re-write it to use React provided hooks. '+'Otherwise concurrent mode guarantees are off the table.');}currentTransition._updatedFibers.clear();}}}}function mountTransition(){var _mountState=mountState(false),isPending=_mountState[0],setPending=_mountState[1];// The `start` method never changes.
		var start=startTransition.bind(null,setPending);var hook=mountWorkInProgressHook();hook.memoizedState=start;return [isPending,start];}function updateTransition(){var _updateState=updateState(),isPending=_updateState[0];var hook=updateWorkInProgressHook();var start=hook.memoizedState;return [isPending,start];}function rerenderTransition(){var _rerenderState=rerenderState(),isPending=_rerenderState[0];var hook=updateWorkInProgressHook();var start=hook.memoizedState;return [isPending,start];}var isUpdatingOpaqueValueInRenderPhase=false;function getIsUpdatingOpaqueValueInRenderPhaseInDEV(){{return isUpdatingOpaqueValueInRenderPhase;}}function mountId(){var hook=mountWorkInProgressHook();var root=getWorkInProgressRoot();// TODO: In Fizz, id generation is specific to each server config. Maybe we
		// should do this in Fiber, too? Deferring this decision for now because
		// there's no other place to store the prefix except for an internal field on
		// the public createRoot object, which the fiber tree does not currently have
		// a reference to.
		var identifierPrefix=root.identifierPrefix;var id;if(getIsHydrating()){var treeId=getTreeId();// Use a captial R prefix for server-generated ids.
		id=':'+identifierPrefix+'R'+treeId;// Unless this is the first id at this level, append a number at the end
		// that represents the position of this useId hook among all the useId
		// hooks for this fiber.
		var localId=localIdCounter++;if(localId>0){id+='H'+localId.toString(32);}id+=':';}else {// Use a lowercase r prefix for client-generated ids.
		var globalClientId=globalClientIdCounter++;id=':'+identifierPrefix+'r'+globalClientId.toString(32)+':';}hook.memoizedState=id;return id;}function updateId(){var hook=updateWorkInProgressHook();var id=hook.memoizedState;return id;}function dispatchReducerAction(fiber,queue,action){{if(typeof arguments[3]==='function'){error("State updates from the useState() and useReducer() Hooks don't support the "+'second callback argument. To execute a side effect after '+'rendering, declare it in the component body with useEffect().');}}var lane=requestUpdateLane(fiber);var update={lane:lane,action:action,hasEagerState:false,eagerState:null,next:null};if(isRenderPhaseUpdate(fiber)){enqueueRenderPhaseUpdate(queue,update);}else {var root=enqueueConcurrentHookUpdate(fiber,queue,update,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitionUpdate(root,queue,lane);}}markUpdateInDevTools(fiber,lane);}function dispatchSetState(fiber,queue,action){{if(typeof arguments[3]==='function'){error("State updates from the useState() and useReducer() Hooks don't support the "+'second callback argument. To execute a side effect after '+'rendering, declare it in the component body with useEffect().');}}var lane=requestUpdateLane(fiber);var update={lane:lane,action:action,hasEagerState:false,eagerState:null,next:null};if(isRenderPhaseUpdate(fiber)){enqueueRenderPhaseUpdate(queue,update);}else {var alternate=fiber.alternate;if(fiber.lanes===NoLanes&&(alternate===null||alternate.lanes===NoLanes)){// The queue is currently empty, which means we can eagerly compute the
		// next state before entering the render phase. If the new state is the
		// same as the current state, we may be able to bail out entirely.
		var lastRenderedReducer=queue.lastRenderedReducer;if(lastRenderedReducer!==null){var prevDispatcher;{prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;}try{var currentState=queue.lastRenderedState;var eagerState=lastRenderedReducer(currentState,action);// Stash the eagerly computed state, and the reducer used to compute
		// it, on the update object. If the reducer hasn't changed by the
		// time we enter the render phase, then the eager state can be used
		// without calling the reducer again.
		update.hasEagerState=true;update.eagerState=eagerState;if(objectIs(eagerState,currentState)){// Fast path. We can bail out without scheduling React to re-render.
		// It's still possible that we'll need to rebase this update later,
		// if the component re-renders for a different reason and by that
		// time the reducer has changed.
		// TODO: Do we still need to entangle transitions in this case?
		enqueueConcurrentHookUpdateAndEagerlyBailout(fiber,queue,update,lane);return;}}catch(error){// Suppress the error. It will throw again in the render phase.
		}finally{{ReactCurrentDispatcher$1.current=prevDispatcher;}}}}var root=enqueueConcurrentHookUpdate(fiber,queue,update,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitionUpdate(root,queue,lane);}}markUpdateInDevTools(fiber,lane);}function isRenderPhaseUpdate(fiber){var alternate=fiber.alternate;return fiber===currentlyRenderingFiber$1||alternate!==null&&alternate===currentlyRenderingFiber$1;}function enqueueRenderPhaseUpdate(queue,update){// This is a render phase update. Stash it in a lazily-created map of
		// queue -> linked list of updates. After this render pass, we'll restart
		// and apply the stashed updates on top of the work-in-progress hook.
		didScheduleRenderPhaseUpdateDuringThisPass=didScheduleRenderPhaseUpdate=true;var pending=queue.pending;if(pending===null){// This is the first update. Create a circular list.
		update.next=update;}else {update.next=pending.next;pending.next=update;}queue.pending=update;}// TODO: Move to ReactFiberConcurrentUpdates?
		function entangleTransitionUpdate(root,queue,lane){if(isTransitionLane(lane)){var queueLanes=queue.lanes;// If any entangled lanes are no longer pending on the root, then they
		// must have finished. We can remove them from the shared queue, which
		// represents a superset of the actually pending lanes. In some cases we
		// may entangle more than we need to, but that's OK. In fact it's worse if
		// we *don't* entangle when we should.
		queueLanes=intersectLanes(queueLanes,root.pendingLanes);// Entangle the new transition lane with the other transition lanes.
		var newQueueLanes=mergeLanes(queueLanes,lane);queue.lanes=newQueueLanes;// Even if queue.lanes already include lane, we don't know for certain if
		// the lane finished since the last time we entangled it. So we need to
		// entangle it again, just to be sure.
		markRootEntangled(root,newQueueLanes);}}function markUpdateInDevTools(fiber,lane,action){{markStateUpdateScheduled(fiber,lane);}}var ContextOnlyDispatcher={readContext:readContext,useCallback:throwInvalidHookError,useContext:throwInvalidHookError,useEffect:throwInvalidHookError,useImperativeHandle:throwInvalidHookError,useInsertionEffect:throwInvalidHookError,useLayoutEffect:throwInvalidHookError,useMemo:throwInvalidHookError,useReducer:throwInvalidHookError,useRef:throwInvalidHookError,useState:throwInvalidHookError,useDebugValue:throwInvalidHookError,useDeferredValue:throwInvalidHookError,useTransition:throwInvalidHookError,useMutableSource:throwInvalidHookError,useSyncExternalStore:throwInvalidHookError,useId:throwInvalidHookError,unstable_isNewReconciler:enableNewReconciler};var HooksDispatcherOnMountInDEV=null;var HooksDispatcherOnMountWithHookTypesInDEV=null;var HooksDispatcherOnUpdateInDEV=null;var HooksDispatcherOnRerenderInDEV=null;var InvalidNestedHooksDispatcherOnMountInDEV=null;var InvalidNestedHooksDispatcherOnUpdateInDEV=null;var InvalidNestedHooksDispatcherOnRerenderInDEV=null;{var warnInvalidContextAccess=function(){error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');};var warnInvalidHookAccess=function(){error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. '+'You can only call Hooks at the top level of your React function. '+'For more information, see '+'https://reactjs.org/link/rules-of-hooks');};HooksDispatcherOnMountInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';mountHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';mountHookTypesDev();checkDepsAreArrayDev(deps);var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';mountHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';mountHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';mountHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';mountHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';mountHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';mountHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';mountHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnMountWithHookTypesInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnUpdateInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return updateDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return updateTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnRerenderInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return rerenderReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return rerenderState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return rerenderDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return rerenderTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnMountInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();mountHookTypesDev();return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();mountHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();mountHookTypesDev();return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();mountHookTypesDev();return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();mountHookTypesDev();return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();mountHookTypesDev();return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();mountHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();mountHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();mountHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();mountHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();mountHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();mountHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();mountHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnUpdateInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();updateHookTypesDev();return updateDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();updateHookTypesDev();return updateTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnRerenderInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return rerenderReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return rerenderState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();updateHookTypesDev();return rerenderDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();updateHookTypesDev();return rerenderTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};}var now$1=Scheduler.unstable_now;var commitTime=0;var layoutEffectStartTime=-1;var profilerStartTime=-1;var passiveEffectStartTime=-1;/**
		 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
		 *
		 * The overall sequence is:
		 *   1. render
		 *   2. commit (and call `onRender`, `onCommit`)
		 *   3. check for nested updates
		 *   4. flush passive effects (and call `onPostCommit`)
		 *
		 * Nested updates are identified in step 3 above,
		 * but step 4 still applies to the work that was just committed.
		 * We use two flags to track nested updates then:
		 * one tracks whether the upcoming update is a nested update,
		 * and the other tracks whether the current update was a nested update.
		 * The first value gets synced to the second at the start of the render phase.
		 */var currentUpdateIsNested=false;var nestedUpdateScheduled=false;function isCurrentUpdateNested(){return currentUpdateIsNested;}function markNestedUpdateScheduled(){{nestedUpdateScheduled=true;}}function resetNestedUpdateFlag(){{currentUpdateIsNested=false;nestedUpdateScheduled=false;}}function syncNestedUpdateFlag(){{currentUpdateIsNested=nestedUpdateScheduled;nestedUpdateScheduled=false;}}function getCommitTime(){return commitTime;}function recordCommitTime(){commitTime=now$1();}function startProfilerTimer(fiber){profilerStartTime=now$1();if(fiber.actualStartTime<0){fiber.actualStartTime=now$1();}}function stopProfilerTimerIfRunning(fiber){profilerStartTime=-1;}function stopProfilerTimerIfRunningAndRecordDelta(fiber,overrideBaseTime){if(profilerStartTime>=0){var elapsedTime=now$1()-profilerStartTime;fiber.actualDuration+=elapsedTime;if(overrideBaseTime){fiber.selfBaseDuration=elapsedTime;}profilerStartTime=-1;}}function recordLayoutEffectDuration(fiber){if(layoutEffectStartTime>=0){var elapsedTime=now$1()-layoutEffectStartTime;layoutEffectStartTime=-1;// Store duration on the next nearest Profiler ancestor
		// Or the root (for the DevTools Profiler to read)
		var parentFiber=fiber.return;while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.effectDuration+=elapsedTime;return;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.effectDuration+=elapsedTime;return;}parentFiber=parentFiber.return;}}}function recordPassiveEffectDuration(fiber){if(passiveEffectStartTime>=0){var elapsedTime=now$1()-passiveEffectStartTime;passiveEffectStartTime=-1;// Store duration on the next nearest Profiler ancestor
		// Or the root (for the DevTools Profiler to read)
		var parentFiber=fiber.return;while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;if(root!==null){root.passiveEffectDuration+=elapsedTime;}return;case Profiler:var parentStateNode=parentFiber.stateNode;if(parentStateNode!==null){// Detached fibers have their state node cleared out.
		// In this case, the return pointer is also cleared out,
		// so we won't be able to report the time spent in this Profiler's subtree.
		parentStateNode.passiveEffectDuration+=elapsedTime;}return;}parentFiber=parentFiber.return;}}}function startLayoutEffectTimer(){layoutEffectStartTime=now$1();}function startPassiveEffectTimer(){passiveEffectStartTime=now$1();}function transferActualDuration(fiber){// Transfer time spent rendering these children so we don't lose it
		// after we rerender. This is used as a helper in special cases
		// where we should count the work of multiple passes.
		var child=fiber.child;while(child){fiber.actualDuration+=child.actualDuration;child=child.sibling;}}function createCapturedValueAtFiber(value,source){// If the value is an error, call this function immediately after it is thrown
		// so the stack is accurate.
		return {value:value,source:source,stack:getStackByFiberInDevAndProd(source),digest:null};}function createCapturedValue(value,digest,stack){return {value:value,source:null,stack:stack!=null?stack:null,digest:digest!=null?digest:null};}// This module is forked in different environments.
		// By default, return `true` to log errors to the console.
		// Forks can return `false` if this isn't desirable.
		function showErrorDialog(boundary,errorInfo){return true;}function logCapturedError(boundary,errorInfo){try{var logError=showErrorDialog(boundary,errorInfo);// Allow injected showErrorDialog() to prevent default console.error logging.
		// This enables renderers like ReactNative to better manage redbox behavior.
		if(logError===false){return;}var error=errorInfo.value;if(true){var source=errorInfo.source;var stack=errorInfo.stack;var componentStack=stack!==null?stack:'';// Browsers support silencing uncaught errors by calling
		// `preventDefault()` in window `error` handler.
		// We record this information as an expando on the error.
		if(error!=null&&error._suppressLogging){if(boundary.tag===ClassComponent){// The error is recoverable and was silenced.
		// Ignore it and don't print the stack addendum.
		// This is handy for testing error boundaries without noise.
		return;}// The error is fatal. Since the silencing might have
		// been accidental, we'll surface it anyway.
		// However, the browser would have silenced the original error
		// so we'll print it first, and then print the stack addendum.
		console['error'](error);// Don't transform to our wrapper
		// For a more detailed description of this block, see:
		// https://github.com/facebook/react/pull/13384
		}var componentName=source?getComponentNameFromFiber(source):null;var componentNameMessage=componentName?"The above error occurred in the <"+componentName+"> component:":'The above error occurred in one of your React components:';var errorBoundaryMessage;if(boundary.tag===HostRoot){errorBoundaryMessage='Consider adding an error boundary to your tree to customize error handling behavior.\n'+'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';}else {var errorBoundaryName=getComponentNameFromFiber(boundary)||'Anonymous';errorBoundaryMessage="React will try to recreate this component tree from scratch "+("using the error boundary you provided, "+errorBoundaryName+".");}var combinedMessage=componentNameMessage+"\n"+componentStack+"\n\n"+(""+errorBoundaryMessage);// In development, we provide our own message with just the component stack.
		// We don't include the original error message and JS stack because the browser
		// has already printed it. Even if the application swallows the error, it is still
		// displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
		console['error'](combinedMessage);// Don't transform to our wrapper
		}}catch(e){// This method must not throw, or React internal state will get messed up.
		// If console.error is overridden, or logCapturedError() shows a dialog that throws,
		// we want to report this error outside of the normal stack as a last resort.
		// https://github.com/facebook/react/issues/13188
		setTimeout(function(){throw e;});}}var PossiblyWeakMap$1=typeof WeakMap==='function'?WeakMap:Map;function createRootErrorUpdate(fiber,errorInfo,lane){var update=createUpdate(NoTimestamp,lane);// Unmount the root by rendering null.
		update.tag=CaptureUpdate;// Caution: React DevTools currently depends on this property
		// being called "element".
		update.payload={element:null};var error=errorInfo.value;update.callback=function(){onUncaughtError(error);logCapturedError(fiber,errorInfo);};return update;}function createClassErrorUpdate(fiber,errorInfo,lane){var update=createUpdate(NoTimestamp,lane);update.tag=CaptureUpdate;var getDerivedStateFromError=fiber.type.getDerivedStateFromError;if(typeof getDerivedStateFromError==='function'){var error$1=errorInfo.value;update.payload=function(){return getDerivedStateFromError(error$1);};update.callback=function(){{markFailedErrorBoundaryForHotReloading(fiber);}logCapturedError(fiber,errorInfo);};}var inst=fiber.stateNode;if(inst!==null&&typeof inst.componentDidCatch==='function'){update.callback=function callback(){{markFailedErrorBoundaryForHotReloading(fiber);}logCapturedError(fiber,errorInfo);if(typeof getDerivedStateFromError!=='function'){// To preserve the preexisting retry behavior of error boundaries,
		// we keep track of which ones already failed during this batch.
		// This gets reset before we yield back to the browser.
		// TODO: Warn in strict mode if getDerivedStateFromError is
		// not defined.
		markLegacyErrorBoundaryAsFailed(this);}var error$1=errorInfo.value;var stack=errorInfo.stack;this.componentDidCatch(error$1,{componentStack:stack!==null?stack:''});{if(typeof getDerivedStateFromError!=='function'){// If componentDidCatch is the only error boundary method defined,
		// then it needs to call setState to recover from errors.
		// If no state update is scheduled then the boundary will swallow the error.
		if(!includesSomeLane(fiber.lanes,SyncLane)){error('%s: Error boundaries should implement getDerivedStateFromError(). '+'In that method, return a state update to display an error message or fallback UI.',getComponentNameFromFiber(fiber)||'Unknown');}}}};}return update;}function attachPingListener(root,wakeable,lanes){// Attach a ping listener
		//
		// The data might resolve before we have a chance to commit the fallback. Or,
		// in the case of a refresh, we'll never commit a fallback. So we need to
		// attach a listener now. When it resolves ("pings"), we can decide whether to
		// try rendering the tree again.
		//
		// Only attach a listener if one does not already exist for the lanes
		// we're currently rendering (which acts like a "thread ID" here).
		//
		// We only need to do this in concurrent mode. Legacy Suspense always
		// commits fallbacks synchronously, so there are no pings.
		var pingCache=root.pingCache;var threadIDs;if(pingCache===null){pingCache=root.pingCache=new PossiblyWeakMap$1();threadIDs=new Set();pingCache.set(wakeable,threadIDs);}else {threadIDs=pingCache.get(wakeable);if(threadIDs===undefined){threadIDs=new Set();pingCache.set(wakeable,threadIDs);}}if(!threadIDs.has(lanes)){// Memoize using the thread ID to prevent redundant listeners.
		threadIDs.add(lanes);var ping=pingSuspendedRoot.bind(null,root,wakeable,lanes);{if(isDevToolsPresent){// If we have pending work still, restore the original updaters
		restorePendingUpdaters(root,lanes);}}wakeable.then(ping,ping);}}function attachRetryListener(suspenseBoundary,root,wakeable,lanes){// Retry listener
		//
		// If the fallback does commit, we need to attach a different type of
		// listener. This one schedules an update on the Suspense boundary to turn
		// the fallback state off.
		//
		// Stash the wakeable on the boundary fiber so we can access it in the
		// commit phase.
		//
		// When the wakeable resolves, we'll attempt to render the boundary
		// again ("retry").
		var wakeables=suspenseBoundary.updateQueue;if(wakeables===null){var updateQueue=new Set();updateQueue.add(wakeable);suspenseBoundary.updateQueue=updateQueue;}else {wakeables.add(wakeable);}}function resetSuspendedComponent(sourceFiber,rootRenderLanes){// A legacy mode Suspense quirk, only relevant to hook components.
		var tag=sourceFiber.tag;if((sourceFiber.mode&ConcurrentMode)===NoMode&&(tag===FunctionComponent||tag===ForwardRef||tag===SimpleMemoComponent)){var currentSource=sourceFiber.alternate;if(currentSource){sourceFiber.updateQueue=currentSource.updateQueue;sourceFiber.memoizedState=currentSource.memoizedState;sourceFiber.lanes=currentSource.lanes;}else {sourceFiber.updateQueue=null;sourceFiber.memoizedState=null;}}}function getNearestSuspenseBoundaryToCapture(returnFiber){var node=returnFiber;do{if(node.tag===SuspenseComponent&&shouldCaptureSuspense(node)){return node;}// This boundary already captured during this render. Continue to the next
		// boundary.
		node=node.return;}while(node!==null);return null;}function markSuspenseBoundaryShouldCapture(suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes){// This marks a Suspense boundary so that when we're unwinding the stack,
		// it captures the suspended "exception" and does a second (fallback) pass.
		if((suspenseBoundary.mode&ConcurrentMode)===NoMode){// Legacy Mode Suspense
		//
		// If the boundary is in legacy mode, we should *not*
		// suspend the commit. Pretend as if the suspended component rendered
		// null and keep rendering. When the Suspense boundary completes,
		// we'll do a second pass to render the fallback.
		if(suspenseBoundary===returnFiber){// Special case where we suspended while reconciling the children of
		// a Suspense boundary's inner Offscreen wrapper fiber. This happens
		// when a React.lazy component is a direct child of a
		// Suspense boundary.
		//
		// Suspense boundaries are implemented as multiple fibers, but they
		// are a single conceptual unit. The legacy mode behavior where we
		// pretend the suspended fiber committed as `null` won't work,
		// because in this case the "suspended" fiber is the inner
		// Offscreen wrapper.
		//
		// Because the contents of the boundary haven't started rendering
		// yet (i.e. nothing in the tree has partially rendered) we can
		// switch to the regular, concurrent mode behavior: mark the
		// boundary with ShouldCapture and enter the unwind phase.
		suspenseBoundary.flags|=ShouldCapture;}else {suspenseBoundary.flags|=DidCapture;sourceFiber.flags|=ForceUpdateForLegacySuspense;// We're going to commit this fiber even though it didn't complete.
		// But we shouldn't call any lifecycle methods or callbacks. Remove
		// all lifecycle effect tags.
		sourceFiber.flags&=~(LifecycleEffectMask|Incomplete);if(sourceFiber.tag===ClassComponent){var currentSourceFiber=sourceFiber.alternate;if(currentSourceFiber===null){// This is a new mount. Change the tag so it's not mistaken for a
		// completed class component. For example, we should not call
		// componentWillUnmount if it is deleted.
		sourceFiber.tag=IncompleteClassComponent;}else {// When we try rendering again, we should not reuse the current fiber,
		// since it's known to be in an inconsistent state. Use a force update to
		// prevent a bail out.
		var update=createUpdate(NoTimestamp,SyncLane);update.tag=ForceUpdate;enqueueUpdate(sourceFiber,update,SyncLane);}}// The source fiber did not complete. Mark it with Sync priority to
		// indicate that it still has pending work.
		sourceFiber.lanes=mergeLanes(sourceFiber.lanes,SyncLane);}return suspenseBoundary;}// Confirmed that the boundary is in a concurrent mode tree. Continue
		// with the normal suspend path.
		//
		// After this we'll use a set of heuristics to determine whether this
		// render pass will run to completion or restart or "suspend" the commit.
		// The actual logic for this is spread out in different places.
		//
		// This first principle is that if we're going to suspend when we complete
		// a root, then we should also restart if we get an update or ping that
		// might unsuspend it, and vice versa. The only reason to suspend is
		// because you think you might want to restart before committing. However,
		// it doesn't make sense to restart only while in the period we're suspended.
		//
		// Restarting too aggressively is also not good because it starves out any
		// intermediate loading state. So we use heuristics to determine when.
		// Suspense Heuristics
		//
		// If nothing threw a Promise or all the same fallbacks are already showing,
		// then don't suspend/restart.
		//
		// If this is an initial render of a new tree of Suspense boundaries and
		// those trigger a fallback, then don't suspend/restart. We want to ensure
		// that we can show the initial loading state as quickly as possible.
		//
		// If we hit a "Delayed" case, such as when we'd switch from content back into
		// a fallback, then we should always suspend/restart. Transitions apply
		// to this case. If none is defined, JND is used instead.
		//
		// If we're already showing a fallback and it gets "retried", allowing us to show
		// another level, but there's still an inner boundary that would show a fallback,
		// then we suspend/restart for 500ms since the last time we showed a fallback
		// anywhere in the tree. This effectively throttles progressive loading into a
		// consistent train of commits. This also gives us an opportunity to restart to
		// get to the completed state slightly earlier.
		//
		// If there's ambiguity due to batching it's resolved in preference of:
		// 1) "delayed", 2) "initial render", 3) "retry".
		//
		// We want to ensure that a "busy" state doesn't get force committed. We want to
		// ensure that new initial loading states can commit as soon as possible.
		suspenseBoundary.flags|=ShouldCapture;// TODO: I think we can remove this, since we now use `DidCapture` in
		// the begin phase to prevent an early bailout.
		suspenseBoundary.lanes=rootRenderLanes;return suspenseBoundary;}function throwException(root,returnFiber,sourceFiber,value,rootRenderLanes){// The source fiber did not complete.
		sourceFiber.flags|=Incomplete;{if(isDevToolsPresent){// If we have pending work still, restore the original updaters
		restorePendingUpdaters(root,rootRenderLanes);}}if(value!==null&&typeof value==='object'&&typeof value.then==='function'){// This is a wakeable. The component suspended.
		var wakeable=value;resetSuspendedComponent(sourceFiber);{if(getIsHydrating()&&sourceFiber.mode&ConcurrentMode){markDidThrowWhileHydratingDEV();}}var suspenseBoundary=getNearestSuspenseBoundaryToCapture(returnFiber);if(suspenseBoundary!==null){suspenseBoundary.flags&=~ForceClientRender;markSuspenseBoundaryShouldCapture(suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes);// We only attach ping listeners in concurrent mode. Legacy Suspense always
		// commits fallbacks synchronously, so there are no pings.
		if(suspenseBoundary.mode&ConcurrentMode){attachPingListener(root,wakeable,rootRenderLanes);}attachRetryListener(suspenseBoundary,root,wakeable);return;}else {// No boundary was found. Unless this is a sync update, this is OK.
		// We can suspend and wait for more data to arrive.
		if(!includesSyncLane(rootRenderLanes)){// This is not a sync update. Suspend. Since we're not activating a
		// Suspense boundary, this will unwind all the way to the root without
		// performing a second pass to render a fallback. (This is arguably how
		// refresh transitions should work, too, since we're not going to commit
		// the fallbacks anyway.)
		//
		// This case also applies to initial hydration.
		attachPingListener(root,wakeable,rootRenderLanes);renderDidSuspendDelayIfPossible();return;}// This is a sync/discrete update. We treat this case like an error
		// because discrete renders are expected to produce a complete tree
		// synchronously to maintain consistency with external state.
		var uncaughtSuspenseError=new Error('A component suspended while responding to synchronous input. This '+'will cause the UI to be replaced with a loading indicator. To '+'fix, updates that suspend should be wrapped '+'with startTransition.');// If we're outside a transition, fall through to the regular error path.
		// The error will be caught by the nearest suspense boundary.
		value=uncaughtSuspenseError;}}else {// This is a regular error, not a Suspense wakeable.
		if(getIsHydrating()&&sourceFiber.mode&ConcurrentMode){markDidThrowWhileHydratingDEV();var _suspenseBoundary=getNearestSuspenseBoundaryToCapture(returnFiber);// If the error was thrown during hydration, we may be able to recover by
		// discarding the dehydrated content and switching to a client render.
		// Instead of surfacing the error, find the nearest Suspense boundary
		// and render it again without hydration.
		if(_suspenseBoundary!==null){if((_suspenseBoundary.flags&ShouldCapture)===NoFlags){// Set a flag to indicate that we should try rendering the normal
		// children again, not the fallback.
		_suspenseBoundary.flags|=ForceClientRender;}markSuspenseBoundaryShouldCapture(_suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes);// Even though the user may not be affected by this error, we should
		// still log it so it can be fixed.
		queueHydrationError(createCapturedValueAtFiber(value,sourceFiber));return;}}}value=createCapturedValueAtFiber(value,sourceFiber);renderDidError(value);// We didn't find a boundary that could handle this type of exception. Start
		// over and traverse parent path again, this time treating the exception
		// as an error.
		var workInProgress=returnFiber;do{switch(workInProgress.tag){case HostRoot:{var _errorInfo=value;workInProgress.flags|=ShouldCapture;var lane=pickArbitraryLane(rootRenderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,lane);var update=createRootErrorUpdate(workInProgress,_errorInfo,lane);enqueueCapturedUpdate(workInProgress,update);return;}case ClassComponent:// Capture and retry
		var errorInfo=value;var ctor=workInProgress.type;var instance=workInProgress.stateNode;if((workInProgress.flags&DidCapture)===NoFlags&&(typeof ctor.getDerivedStateFromError==='function'||instance!==null&&typeof instance.componentDidCatch==='function'&&!isAlreadyFailedLegacyErrorBoundary(instance))){workInProgress.flags|=ShouldCapture;var _lane=pickArbitraryLane(rootRenderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,_lane);// Schedule the error boundary to re-render using updated state
		var _update=createClassErrorUpdate(workInProgress,errorInfo,_lane);enqueueCapturedUpdate(workInProgress,_update);return;}break;}workInProgress=workInProgress.return;}while(workInProgress!==null);}function getSuspendedCache(){{return null;}// This function is called when a Suspense boundary suspends. It returns the
		}var ReactCurrentOwner$1=ReactSharedInternals.ReactCurrentOwner;var didReceiveUpdate=false;var didWarnAboutBadClass;var didWarnAboutModulePatternComponent;var didWarnAboutContextTypeOnFunctionComponent;var didWarnAboutGetDerivedStateOnFunctionComponent;var didWarnAboutFunctionRefs;var didWarnAboutReassigningProps;var didWarnAboutRevealOrder;var didWarnAboutTailOptions;{didWarnAboutBadClass={};didWarnAboutModulePatternComponent={};didWarnAboutContextTypeOnFunctionComponent={};didWarnAboutGetDerivedStateOnFunctionComponent={};didWarnAboutFunctionRefs={};didWarnAboutReassigningProps=false;didWarnAboutRevealOrder={};didWarnAboutTailOptions={};}function reconcileChildren(current,workInProgress,nextChildren,renderLanes){if(current===null){// If this is a fresh new component that hasn't been rendered yet, we
		// won't update its child set by applying minimal side-effects. Instead,
		// we will add them all to the child before it gets rendered. That means
		// we can optimize this reconciliation pass by not tracking side-effects.
		workInProgress.child=mountChildFibers(workInProgress,null,nextChildren,renderLanes);}else {// If the current child is the same as the work in progress, it means that
		// we haven't yet started any work on these children. Therefore, we use
		// the clone algorithm to create a copy of all the current children.
		// If we had any progressed work already, that is invalid at this point so
		// let's throw it out.
		workInProgress.child=reconcileChildFibers(workInProgress,current.child,nextChildren,renderLanes);}}function forceUnmountCurrentAndReconcile(current,workInProgress,nextChildren,renderLanes){// This function is fork of reconcileChildren. It's used in cases where we
		// want to reconcile without matching against the existing set. This has the
		// effect of all current children being unmounted; even if the type and key
		// are the same, the old child is unmounted and a new child is created.
		//
		// To do this, we're going to go through the reconcile algorithm twice. In
		// the first pass, we schedule a deletion for all the current children by
		// passing null.
		workInProgress.child=reconcileChildFibers(workInProgress,current.child,null,renderLanes);// In the second pass, we mount the new children. The trick here is that we
		// pass null in place of where we usually pass the current child set. This has
		// the effect of remounting all children regardless of whether their
		// identities match.
		workInProgress.child=reconcileChildFibers(workInProgress,null,nextChildren,renderLanes);}function updateForwardRef(current,workInProgress,Component,nextProps,renderLanes){// TODO: current can be non-null here even if the component
		// hasn't yet mounted. This happens after the first render suspends.
		// We'll need to figure out if this is fine or can cause issues.
		{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(Component));}}}var render=Component.render;var ref=workInProgress.ref;// The rest is a fork of updateFunctionComponent
		var nextChildren;var hasId;prepareToReadContext(workInProgress,renderLanes);{markComponentRenderStarted(workInProgress);}{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);nextChildren=renderWithHooks(current,workInProgress,render,nextProps,ref,renderLanes);hasId=checkDidRenderIdHook();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{nextChildren=renderWithHooks(current,workInProgress,render,nextProps,ref,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}if(current!==null&&!didReceiveUpdate){bailoutHooks(current,workInProgress,renderLanes);return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateMemoComponent(current,workInProgress,Component,nextProps,renderLanes){if(current===null){var type=Component.type;if(isSimpleFunctionComponent(type)&&Component.compare===null&&// SimpleMemoComponent codepath doesn't resolve outer props either.
		Component.defaultProps===undefined){var resolvedType=type;{resolvedType=resolveFunctionForHotReloading(type);}// If this is a plain function component without default props,
		// and with only the default shallow comparison, we upgrade it
		// to a SimpleMemoComponent to allow fast path updates.
		workInProgress.tag=SimpleMemoComponent;workInProgress.type=resolvedType;{validateFunctionComponentInDev(workInProgress,type);}return updateSimpleMemoComponent(current,workInProgress,resolvedType,nextProps,renderLanes);}{var innerPropTypes=type.propTypes;if(innerPropTypes){// Inner memo component props aren't currently validated in createElement.
		// We could move it there, but we'd still need this for lazy code path.
		checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(type));}}var child=createFiberFromTypeAndProps(Component.type,null,nextProps,workInProgress,workInProgress.mode,renderLanes);child.ref=workInProgress.ref;child.return=workInProgress;workInProgress.child=child;return child;}{var _type=Component.type;var _innerPropTypes=_type.propTypes;if(_innerPropTypes){// Inner memo component props aren't currently validated in createElement.
		// We could move it there, but we'd still need this for lazy code path.
		checkPropTypes(_innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(_type));}}var currentChild=current.child;// This is always exactly one child
		var hasScheduledUpdateOrContext=checkScheduledUpdateOrContext(current,renderLanes);if(!hasScheduledUpdateOrContext){// This will be the props with resolved defaultProps,
		// unlike current.memoizedProps which will be the unresolved ones.
		var prevProps=currentChild.memoizedProps;// Default to shallow comparison
		var compare=Component.compare;compare=compare!==null?compare:shallowEqual;if(compare(prevProps,nextProps)&&current.ref===workInProgress.ref){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;var newChild=createWorkInProgress(currentChild,nextProps);newChild.ref=workInProgress.ref;newChild.return=workInProgress;workInProgress.child=newChild;return newChild;}function updateSimpleMemoComponent(current,workInProgress,Component,nextProps,renderLanes){// TODO: current can be non-null here even if the component
		// hasn't yet mounted. This happens when the inner render suspends.
		// We'll need to figure out if this is fine or can cause issues.
		{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var outerMemoType=workInProgress.elementType;if(outerMemoType.$$typeof===REACT_LAZY_TYPE){// We warn when you define propTypes on lazy()
		// so let's just skip over it to find memo() outer wrapper.
		// Inner props for memo are validated later.
		var lazyComponent=outerMemoType;var payload=lazyComponent._payload;var init=lazyComponent._init;try{outerMemoType=init(payload);}catch(x){outerMemoType=null;}// Inner propTypes will be validated in the function component path.
		var outerPropTypes=outerMemoType&&outerMemoType.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,nextProps,// Resolved (SimpleMemoComponent has no defaultProps)
		'prop',getComponentNameFromType(outerMemoType));}}}}if(current!==null){var prevProps=current.memoizedProps;if(shallowEqual(prevProps,nextProps)&&current.ref===workInProgress.ref&&// Prevent bailout if the implementation changed due to hot reload.
		workInProgress.type===current.type){didReceiveUpdate=false;// The props are shallowly equal. Reuse the previous props object, like we
		// would during a normal fiber bailout.
		//
		// We don't have strong guarantees that the props object is referentially
		// equal during updates where we can't bail out anyway — like if the props
		// are shallowly equal, but there's a local state or context update in the
		// same batch.
		//
		// However, as a principle, we should aim to make the behavior consistent
		// across different ways of memoizing a component. For example, React.memo
		// has a different internal Fiber layout if you pass a normal function
		// component (SimpleMemoComponent) versus if you pass a different type
		// like forwardRef (MemoComponent). But this is an implementation detail.
		// Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
		// affect whether the props object is reused during a bailout.
		workInProgress.pendingProps=nextProps=prevProps;if(!checkScheduledUpdateOrContext(current,renderLanes)){// The pending lanes were cleared at the beginning of beginWork. We're
		// about to bail out, but there might be other lanes that weren't
		// included in the current render. Usually, the priority level of the
		// remaining updates is accumulated during the evaluation of the
		// component (i.e. when processing the update queue). But since since
		// we're bailing out early *without* evaluating the component, we need
		// to account for it here, too. Reset to the value of the current fiber.
		// NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
		// because a MemoComponent fiber does not have hooks or an update queue;
		// rather, it wraps around an inner component, which may or may not
		// contains hooks.
		// TODO: Move the reset at in beginWork out of the common path so that
		// this is no longer necessary.
		workInProgress.lanes=current.lanes;return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}else if((current.flags&ForceUpdateForLegacySuspense)!==NoFlags){// This is a special case that only exists for legacy mode.
		// See https://github.com/facebook/react/pull/19216.
		didReceiveUpdate=true;}}}return updateFunctionComponent(current,workInProgress,Component,nextProps,renderLanes);}function updateOffscreenComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;var nextChildren=nextProps.children;var prevState=current!==null?current.memoizedState:null;if(nextProps.mode==='hidden'||enableLegacyHidden){// Rendering a hidden tree.
		if((workInProgress.mode&ConcurrentMode)===NoMode){// In legacy sync mode, don't defer the subtree. Render it now.
		// TODO: Consider how Offscreen should work with transitions in the future
		var nextState={baseLanes:NoLanes,cachePool:null,transitions:null};workInProgress.memoizedState=nextState;pushRenderLanes(workInProgress,renderLanes);}else if(!includesSomeLane(renderLanes,OffscreenLane)){var spawnedCachePool=null;// We're hidden, and we're not rendering at Offscreen. We will bail out
		// and resume this tree later.
		var nextBaseLanes;if(prevState!==null){var prevBaseLanes=prevState.baseLanes;nextBaseLanes=mergeLanes(prevBaseLanes,renderLanes);}else {nextBaseLanes=renderLanes;}// Schedule this fiber to re-render at offscreen priority. Then bailout.
		workInProgress.lanes=workInProgress.childLanes=laneToLanes(OffscreenLane);var _nextState={baseLanes:nextBaseLanes,cachePool:spawnedCachePool,transitions:null};workInProgress.memoizedState=_nextState;workInProgress.updateQueue=null;// to avoid a push/pop misalignment.
		pushRenderLanes(workInProgress,nextBaseLanes);return null;}else {// This is the second render. The surrounding visible content has already
		// committed. Now we resume rendering the hidden tree.
		// Rendering at offscreen, so we can clear the base lanes.
		var _nextState2={baseLanes:NoLanes,cachePool:null,transitions:null};workInProgress.memoizedState=_nextState2;// Push the lanes that were skipped when we bailed out.
		var subtreeRenderLanes=prevState!==null?prevState.baseLanes:renderLanes;pushRenderLanes(workInProgress,subtreeRenderLanes);}}else {// Rendering a visible tree.
		var _subtreeRenderLanes;if(prevState!==null){// We're going from hidden -> visible.
		_subtreeRenderLanes=mergeLanes(prevState.baseLanes,renderLanes);workInProgress.memoizedState=null;}else {// We weren't previously hidden, and we still aren't, so there's nothing
		// special to do. Need to push to the stack regardless, though, to avoid
		// a push/pop misalignment.
		_subtreeRenderLanes=renderLanes;}pushRenderLanes(workInProgress,_subtreeRenderLanes);}reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}// Note: These happen to have identical begin phases, for now. We shouldn't hold
		function updateFragment(current,workInProgress,renderLanes){var nextChildren=workInProgress.pendingProps;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateMode(current,workInProgress,renderLanes){var nextChildren=workInProgress.pendingProps.children;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateProfiler(current,workInProgress,renderLanes){{workInProgress.flags|=Update;{// Reset effect durations for the next eventual effect phase.
		// These are reset during render to allow the DevTools commit hook a chance to read them,
		var stateNode=workInProgress.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}}var nextProps=workInProgress.pendingProps;var nextChildren=nextProps.children;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function markRef(current,workInProgress){var ref=workInProgress.ref;if(current===null&&ref!==null||current!==null&&current.ref!==ref){// Schedule a Ref effect
		workInProgress.flags|=Ref;{workInProgress.flags|=RefStatic;}}}function updateFunctionComponent(current,workInProgress,Component,nextProps,renderLanes){{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(Component));}}}var context;{var unmaskedContext=getUnmaskedContext(workInProgress,Component,true);context=getMaskedContext(workInProgress,unmaskedContext);}var nextChildren;var hasId;prepareToReadContext(workInProgress,renderLanes);{markComponentRenderStarted(workInProgress);}{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);nextChildren=renderWithHooks(current,workInProgress,Component,nextProps,context,renderLanes);hasId=checkDidRenderIdHook();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{nextChildren=renderWithHooks(current,workInProgress,Component,nextProps,context,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}if(current!==null&&!didReceiveUpdate){bailoutHooks(current,workInProgress,renderLanes);return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateClassComponent(current,workInProgress,Component,nextProps,renderLanes){{// This is used by DevTools to force a boundary to error.
		switch(shouldError(workInProgress)){case false:{var _instance=workInProgress.stateNode;var ctor=workInProgress.type;// TODO This way of resetting the error boundary state is a hack.
		// Is there a better way to do this?
		var tempInstance=new ctor(workInProgress.memoizedProps,_instance.context);var state=tempInstance.state;_instance.updater.enqueueSetState(_instance,state,null);break;}case true:{workInProgress.flags|=DidCapture;workInProgress.flags|=ShouldCapture;// eslint-disable-next-line react-internal/prod-error-codes
		var error$1=new Error('Simulated error coming from DevTools');var lane=pickArbitraryLane(renderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,lane);// Schedule the error boundary to re-render using updated state
		var update=createClassErrorUpdate(workInProgress,createCapturedValueAtFiber(error$1,workInProgress),lane);enqueueCapturedUpdate(workInProgress,update);break;}}if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(Component));}}}// Push context providers early to prevent context stack mismatches.
		// During mounting we don't know the child context yet as the instance doesn't exist.
		// We will invalidate the child context in finishClassComponent() right after rendering.
		var hasContext;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else {hasContext=false;}prepareToReadContext(workInProgress,renderLanes);var instance=workInProgress.stateNode;var shouldUpdate;if(instance===null){resetSuspendedCurrentOnMountInLegacyMode(current,workInProgress);// In the initial pass we might need to construct the instance.
		constructClassInstance(workInProgress,Component,nextProps);mountClassInstance(workInProgress,Component,nextProps,renderLanes);shouldUpdate=true;}else if(current===null){// In a resume, we'll already have an instance we can reuse.
		shouldUpdate=resumeMountClassInstance(workInProgress,Component,nextProps,renderLanes);}else {shouldUpdate=updateClassInstance(current,workInProgress,Component,nextProps,renderLanes);}var nextUnitOfWork=finishClassComponent(current,workInProgress,Component,shouldUpdate,hasContext,renderLanes);{var inst=workInProgress.stateNode;if(shouldUpdate&&inst.props!==nextProps){if(!didWarnAboutReassigningProps){error('It looks like %s is reassigning its own `this.props` while rendering. '+'This is not supported and can lead to confusing bugs.',getComponentNameFromFiber(workInProgress)||'a component');}didWarnAboutReassigningProps=true;}}return nextUnitOfWork;}function finishClassComponent(current,workInProgress,Component,shouldUpdate,hasContext,renderLanes){// Refs should update even if shouldComponentUpdate returns false
		markRef(current,workInProgress);var didCaptureError=(workInProgress.flags&DidCapture)!==NoFlags;if(!shouldUpdate&&!didCaptureError){// Context providers should defer to sCU for rendering
		if(hasContext){invalidateContextProvider(workInProgress,Component,false);}return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}var instance=workInProgress.stateNode;// Rerender
		ReactCurrentOwner$1.current=workInProgress;var nextChildren;if(didCaptureError&&typeof Component.getDerivedStateFromError!=='function'){// If we captured an error, but getDerivedStateFromError is not defined,
		// unmount all the children. componentDidCatch will schedule an update to
		// re-render a fallback. This is temporary until we migrate everyone to
		// the new API.
		// TODO: Warn in a future release.
		nextChildren=null;{stopProfilerTimerIfRunning();}}else {{markComponentRenderStarted(workInProgress);}{setIsRendering(true);nextChildren=instance.render();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{instance.render();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;if(current!==null&&didCaptureError){// If we're recovering from an error, reconcile without reusing any of
		// the existing children. Conceptually, the normal children and the children
		// that are shown on error are two different sets, so we shouldn't reuse
		// normal children even if their identities match.
		forceUnmountCurrentAndReconcile(current,workInProgress,nextChildren,renderLanes);}else {reconcileChildren(current,workInProgress,nextChildren,renderLanes);}// Memoize state using the values we just used to render.
		// TODO: Restructure so we never read values from the instance.
		workInProgress.memoizedState=instance.state;// The context might have changed so we need to recalculate it.
		if(hasContext){invalidateContextProvider(workInProgress,Component,true);}return workInProgress.child;}function pushHostRootContext(workInProgress){var root=workInProgress.stateNode;if(root.pendingContext){pushTopLevelContextObject(workInProgress,root.pendingContext,root.pendingContext!==root.context);}else if(root.context){// Should always be set
		pushTopLevelContextObject(workInProgress,root.context,false);}pushHostContainer(workInProgress,root.containerInfo);}function updateHostRoot(current,workInProgress,renderLanes){pushHostRootContext(workInProgress);if(current===null){throw new Error('Should have a current fiber. This is a bug in React.');}var nextProps=workInProgress.pendingProps;var prevState=workInProgress.memoizedState;var prevChildren=prevState.element;cloneUpdateQueue(current,workInProgress);processUpdateQueue(workInProgress,nextProps,null,renderLanes);var nextState=workInProgress.memoizedState;workInProgress.stateNode;// being called "element".
		var nextChildren=nextState.element;if(prevState.isDehydrated){// This is a hydration root whose shell has not yet hydrated. We should
		// attempt to hydrate.
		// Flip isDehydrated to false to indicate that when this render
		// finishes, the root will no longer be dehydrated.
		var overrideState={element:nextChildren,isDehydrated:false,cache:nextState.cache,pendingSuspenseBoundaries:nextState.pendingSuspenseBoundaries,transitions:nextState.transitions};var updateQueue=workInProgress.updateQueue;// `baseState` can always be the last state because the root doesn't
		// have reducer functions so it doesn't need rebasing.
		updateQueue.baseState=overrideState;workInProgress.memoizedState=overrideState;if(workInProgress.flags&ForceClientRender){// Something errored during a previous attempt to hydrate the shell, so we
		// forced a client render.
		var recoverableError=createCapturedValueAtFiber(new Error('There was an error while hydrating. Because the error happened outside '+'of a Suspense boundary, the entire root will switch to '+'client rendering.'),workInProgress);return mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,recoverableError);}else if(nextChildren!==prevChildren){var _recoverableError=createCapturedValueAtFiber(new Error('This root received an early update, before anything was able '+'hydrate. Switched the entire root to client rendering.'),workInProgress);return mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,_recoverableError);}else {// The outermost shell has not hydrated yet. Start hydrating.
		enterHydrationState(workInProgress);var child=mountChildFibers(workInProgress,null,nextChildren,renderLanes);workInProgress.child=child;var node=child;while(node){// Mark each child as hydrating. This is a fast path to know whether this
		// tree is part of a hydrating tree. This is used to determine if a child
		// node has fully mounted yet, and for scheduling event replaying.
		// Conceptually this is similar to Placement in that a new subtree is
		// inserted into the React tree here. It just happens to not need DOM
		// mutations because it already exists.
		node.flags=node.flags&~Placement|Hydrating;node=node.sibling;}}}else {// Root is not dehydrated. Either this is a client-only root, or it
		// already hydrated.
		resetHydrationState();if(nextChildren===prevChildren){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}reconcileChildren(current,workInProgress,nextChildren,renderLanes);}return workInProgress.child;}function mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,recoverableError){// Revert to client rendering.
		resetHydrationState();queueHydrationError(recoverableError);workInProgress.flags|=ForceClientRender;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateHostComponent(current,workInProgress,renderLanes){pushHostContext(workInProgress);if(current===null){tryToClaimNextHydratableInstance(workInProgress);}var type=workInProgress.type;var nextProps=workInProgress.pendingProps;var prevProps=current!==null?current.memoizedProps:null;var nextChildren=nextProps.children;var isDirectTextChild=shouldSetTextContent(type,nextProps);if(isDirectTextChild){// We special case a direct text child of a host node. This is a common
		// case. We won't handle it as a reified child. We will instead handle
		// this in the host environment that also has access to this prop. That
		// avoids allocating another HostText fiber and traversing it.
		nextChildren=null;}else if(prevProps!==null&&shouldSetTextContent(type,prevProps)){// If we're switching from a direct text child to a normal child, or to
		// empty, we need to schedule the text content to be reset.
		workInProgress.flags|=ContentReset;}markRef(current,workInProgress);reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateHostText(current,workInProgress){if(current===null){tryToClaimNextHydratableInstance(workInProgress);}// Nothing to do here. This is terminal. We'll do the completion step
		// immediately after.
		return null;}function mountLazyComponent(_current,workInProgress,elementType,renderLanes){resetSuspendedCurrentOnMountInLegacyMode(_current,workInProgress);var props=workInProgress.pendingProps;var lazyComponent=elementType;var payload=lazyComponent._payload;var init=lazyComponent._init;var Component=init(payload);// Store the unwrapped component in the type.
		workInProgress.type=Component;var resolvedTag=workInProgress.tag=resolveLazyComponentTag(Component);var resolvedProps=resolveDefaultProps(Component,props);var child;switch(resolvedTag){case FunctionComponent:{{validateFunctionComponentInDev(workInProgress,Component);workInProgress.type=Component=resolveFunctionForHotReloading(Component);}child=updateFunctionComponent(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case ClassComponent:{{workInProgress.type=Component=resolveClassForHotReloading(Component);}child=updateClassComponent(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case ForwardRef:{{workInProgress.type=Component=resolveForwardRefForHotReloading(Component);}child=updateForwardRef(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case MemoComponent:{{if(workInProgress.type!==workInProgress.elementType){var outerPropTypes=Component.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,resolvedProps,// Resolved for outer only
		'prop',getComponentNameFromType(Component));}}}child=updateMemoComponent(null,workInProgress,Component,resolveDefaultProps(Component.type,resolvedProps),// The inner type can have defaults too
		renderLanes);return child;}}var hint='';{if(Component!==null&&typeof Component==='object'&&Component.$$typeof===REACT_LAZY_TYPE){hint=' Did you wrap a component in React.lazy() more than once?';}}// This message intentionally doesn't mention ForwardRef or MemoComponent
		// because the fact that it's a separate type of work is an
		// implementation detail.
		throw new Error("Element type is invalid. Received a promise that resolves to: "+Component+". "+("Lazy element type must resolve to a class or function."+hint));}function mountIncompleteClassComponent(_current,workInProgress,Component,nextProps,renderLanes){resetSuspendedCurrentOnMountInLegacyMode(_current,workInProgress);// Promote the fiber to a class and try rendering again.
		workInProgress.tag=ClassComponent;// The rest of this function is a fork of `updateClassComponent`
		// Push context providers early to prevent context stack mismatches.
		// During mounting we don't know the child context yet as the instance doesn't exist.
		// We will invalidate the child context in finishClassComponent() right after rendering.
		var hasContext;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else {hasContext=false;}prepareToReadContext(workInProgress,renderLanes);constructClassInstance(workInProgress,Component,nextProps);mountClassInstance(workInProgress,Component,nextProps,renderLanes);return finishClassComponent(null,workInProgress,Component,true,hasContext,renderLanes);}function mountIndeterminateComponent(_current,workInProgress,Component,renderLanes){resetSuspendedCurrentOnMountInLegacyMode(_current,workInProgress);var props=workInProgress.pendingProps;var context;{var unmaskedContext=getUnmaskedContext(workInProgress,Component,false);context=getMaskedContext(workInProgress,unmaskedContext);}prepareToReadContext(workInProgress,renderLanes);var value;var hasId;{markComponentRenderStarted(workInProgress);}{if(Component.prototype&&typeof Component.prototype.render==='function'){var componentName=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutBadClass[componentName]){error("The <%s /> component appears to have a render method, but doesn't extend React.Component. "+'This is likely to cause errors. Change %s to extend React.Component instead.',componentName,componentName);didWarnAboutBadClass[componentName]=true;}}if(workInProgress.mode&StrictLegacyMode){ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress,null);}setIsRendering(true);ReactCurrentOwner$1.current=workInProgress;value=renderWithHooks(null,workInProgress,Component,props,context,renderLanes);hasId=checkDidRenderIdHook();setIsRendering(false);}{markComponentRenderStopped();}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;{// Support for module components is deprecated and is removed behind a flag.
		// Whether or not it would crash later, we want to show a good message in DEV first.
		if(typeof value==='object'&&value!==null&&typeof value.render==='function'&&value.$$typeof===undefined){var _componentName=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutModulePatternComponent[_componentName]){error('The <%s /> component appears to be a function component that returns a class instance. '+'Change %s to a class that extends React.Component instead. '+"If you can't use a class try assigning the prototype on the function as a workaround. "+"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it "+'cannot be called with `new` by React.',_componentName,_componentName,_componentName);didWarnAboutModulePatternComponent[_componentName]=true;}}}if(// Run these checks in production only if the flag is off.
		// Eventually we'll delete this branch altogether.
		typeof value==='object'&&value!==null&&typeof value.render==='function'&&value.$$typeof===undefined){{var _componentName2=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutModulePatternComponent[_componentName2]){error('The <%s /> component appears to be a function component that returns a class instance. '+'Change %s to a class that extends React.Component instead. '+"If you can't use a class try assigning the prototype on the function as a workaround. "+"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it "+'cannot be called with `new` by React.',_componentName2,_componentName2,_componentName2);didWarnAboutModulePatternComponent[_componentName2]=true;}}// Proceed under the assumption that this is a class instance
		workInProgress.tag=ClassComponent;// Throw out any hooks that were used.
		workInProgress.memoizedState=null;workInProgress.updateQueue=null;// Push context providers early to prevent context stack mismatches.
		// During mounting we don't know the child context yet as the instance doesn't exist.
		// We will invalidate the child context in finishClassComponent() right after rendering.
		var hasContext=false;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else {hasContext=false;}workInProgress.memoizedState=value.state!==null&&value.state!==undefined?value.state:null;initializeUpdateQueue(workInProgress);adoptClassInstance(workInProgress,value);mountClassInstance(workInProgress,Component,props,renderLanes);return finishClassComponent(null,workInProgress,Component,true,hasContext,renderLanes);}else {// Proceed under the assumption that this is a function component
		workInProgress.tag=FunctionComponent;{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{value=renderWithHooks(null,workInProgress,Component,props,context,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}reconcileChildren(null,workInProgress,value,renderLanes);{validateFunctionComponentInDev(workInProgress,Component);}return workInProgress.child;}}function validateFunctionComponentInDev(workInProgress,Component){{if(Component){if(Component.childContextTypes){error('%s(...): childContextTypes cannot be defined on a function component.',Component.displayName||Component.name||'Component');}}if(workInProgress.ref!==null){var info='';var ownerName=getCurrentFiberOwnerNameInDevOrNull();if(ownerName){info+='\n\nCheck the render method of `'+ownerName+'`.';}var warningKey=ownerName||'';var debugSource=workInProgress._debugSource;if(debugSource){warningKey=debugSource.fileName+':'+debugSource.lineNumber;}if(!didWarnAboutFunctionRefs[warningKey]){didWarnAboutFunctionRefs[warningKey]=true;error('Function components cannot be given refs. '+'Attempts to access this ref will fail. '+'Did you mean to use React.forwardRef()?%s',info);}}if(typeof Component.getDerivedStateFromProps==='function'){var _componentName3=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]){error('%s: Function components do not support getDerivedStateFromProps.',_componentName3);didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]=true;}}if(typeof Component.contextType==='object'&&Component.contextType!==null){var _componentName4=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutContextTypeOnFunctionComponent[_componentName4]){error('%s: Function components do not support contextType.',_componentName4);didWarnAboutContextTypeOnFunctionComponent[_componentName4]=true;}}}}var SUSPENDED_MARKER={dehydrated:null,treeContext:null,retryLane:NoLane};function mountSuspenseOffscreenState(renderLanes){return {baseLanes:renderLanes,cachePool:getSuspendedCache(),transitions:null};}function updateSuspenseOffscreenState(prevOffscreenState,renderLanes){var cachePool=null;return {baseLanes:mergeLanes(prevOffscreenState.baseLanes,renderLanes),cachePool:cachePool,transitions:prevOffscreenState.transitions};}// TODO: Probably should inline this back
		function shouldRemainOnFallback(suspenseContext,current,workInProgress,renderLanes){// If we're already showing a fallback, there are cases where we need to
		// remain on that fallback regardless of whether the content has resolved.
		// For example, SuspenseList coordinates when nested content appears.
		if(current!==null){var suspenseState=current.memoizedState;if(suspenseState===null){// Currently showing content. Don't hide it, even if ForceSuspenseFallback
		// is true. More precise name might be "ForceRemainSuspenseFallback".
		// Note: This is a factoring smell. Can't remain on a fallback if there's
		// no fallback to remain on.
		return false;}}// Not currently showing content. Consult the Suspense context.
		return hasSuspenseContext(suspenseContext,ForceSuspenseFallback);}function getRemainingWorkInPrimaryTree(current,renderLanes){// TODO: Should not remove render lanes that were pinged during this render
		return removeLanes(current.childLanes,renderLanes);}function updateSuspenseComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;// This is used by DevTools to force a boundary to suspend.
		{if(shouldSuspend(workInProgress)){workInProgress.flags|=DidCapture;}}var suspenseContext=suspenseStackCursor.current;var showFallback=false;var didSuspend=(workInProgress.flags&DidCapture)!==NoFlags;if(didSuspend||shouldRemainOnFallback(suspenseContext,current)){// Something in this boundary's subtree already suspended. Switch to
		// rendering the fallback children.
		showFallback=true;workInProgress.flags&=~DidCapture;}else {// Attempting the main content
		if(current===null||current.memoizedState!==null){// This is a new mount or this boundary is already showing a fallback state.
		// Mark this subtree context as having at least one invisible parent that could
		// handle the fallback state.
		// Avoided boundaries are not considered since they cannot handle preferred fallback states.
		{suspenseContext=addSubtreeSuspenseContext(suspenseContext,InvisibleParentSuspenseContext);}}}suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);pushSuspenseContext(workInProgress,suspenseContext);// OK, the next part is confusing. We're about to reconcile the Suspense
		// boundary's children. This involves some custom reconciliation logic. Two
		// main reasons this is so complicated.
		//
		// First, Legacy Mode has different semantics for backwards compatibility. The
		// primary tree will commit in an inconsistent state, so when we do the
		// second pass to render the fallback, we do some exceedingly, uh, clever
		// hacks to make that not totally break. Like transferring effects and
		// deletions from hidden tree. In Concurrent Mode, it's much simpler,
		// because we bailout on the primary tree completely and leave it in its old
		// state, no effects. Same as what we do for Offscreen (except that
		// Offscreen doesn't have the first render pass).
		//
		// Second is hydration. During hydration, the Suspense fiber has a slightly
		// different layout, where the child points to a dehydrated fragment, which
		// contains the DOM rendered by the server.
		//
		// Third, even if you set all that aside, Suspense is like error boundaries in
		// that we first we try to render one tree, and if that fails, we render again
		// and switch to a different tree. Like a try/catch block. So we have to track
		// which branch we're currently rendering. Ideally we would model this using
		// a stack.
		if(current===null){// Initial mount
		// Special path for hydration
		// If we're currently hydrating, try to hydrate this boundary.
		tryToClaimNextHydratableInstance(workInProgress);// This could've been a dehydrated suspense component.
		var suspenseState=workInProgress.memoizedState;if(suspenseState!==null){var dehydrated=suspenseState.dehydrated;if(dehydrated!==null){return mountDehydratedSuspenseComponent(workInProgress,dehydrated);}}var nextPrimaryChildren=nextProps.children;var nextFallbackChildren=nextProps.fallback;if(showFallback){var fallbackFragment=mountSuspenseFallbackChildren(workInProgress,nextPrimaryChildren,nextFallbackChildren,renderLanes);var primaryChildFragment=workInProgress.child;primaryChildFragment.memoizedState=mountSuspenseOffscreenState(renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackFragment;}else {return mountSuspensePrimaryChildren(workInProgress,nextPrimaryChildren);}}else {// This is an update.
		// Special path for hydration
		var prevState=current.memoizedState;if(prevState!==null){var _dehydrated=prevState.dehydrated;if(_dehydrated!==null){return updateDehydratedSuspenseComponent(current,workInProgress,didSuspend,nextProps,_dehydrated,prevState,renderLanes);}}if(showFallback){var _nextFallbackChildren=nextProps.fallback;var _nextPrimaryChildren=nextProps.children;var fallbackChildFragment=updateSuspenseFallbackChildren(current,workInProgress,_nextPrimaryChildren,_nextFallbackChildren,renderLanes);var _primaryChildFragment2=workInProgress.child;var prevOffscreenState=current.child.memoizedState;_primaryChildFragment2.memoizedState=prevOffscreenState===null?mountSuspenseOffscreenState(renderLanes):updateSuspenseOffscreenState(prevOffscreenState,renderLanes);_primaryChildFragment2.childLanes=getRemainingWorkInPrimaryTree(current,renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackChildFragment;}else {var _nextPrimaryChildren2=nextProps.children;var _primaryChildFragment3=updateSuspensePrimaryChildren(current,workInProgress,_nextPrimaryChildren2,renderLanes);workInProgress.memoizedState=null;return _primaryChildFragment3;}}}function mountSuspensePrimaryChildren(workInProgress,primaryChildren,renderLanes){var mode=workInProgress.mode;var primaryChildProps={mode:'visible',children:primaryChildren};var primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,mode);primaryChildFragment.return=workInProgress;workInProgress.child=primaryChildFragment;return primaryChildFragment;}function mountSuspenseFallbackChildren(workInProgress,primaryChildren,fallbackChildren,renderLanes){var mode=workInProgress.mode;var progressedPrimaryFragment=workInProgress.child;var primaryChildProps={mode:'hidden',children:primaryChildren};var primaryChildFragment;var fallbackChildFragment;if((mode&ConcurrentMode)===NoMode&&progressedPrimaryFragment!==null){// In legacy mode, we commit the primary tree as if it successfully
		// completed, even though it's in an inconsistent state.
		primaryChildFragment=progressedPrimaryFragment;primaryChildFragment.childLanes=NoLanes;primaryChildFragment.pendingProps=primaryChildProps;if(workInProgress.mode&ProfileMode){// Reset the durations from the first pass so they aren't included in the
		// final amounts. This seems counterintuitive, since we're intentionally
		// not measuring part of the render phase, but this makes it match what we
		// do in Concurrent Mode.
		primaryChildFragment.actualDuration=0;primaryChildFragment.actualStartTime=-1;primaryChildFragment.selfBaseDuration=0;primaryChildFragment.treeBaseDuration=0;}fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);}else {primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,mode);fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);}primaryChildFragment.return=workInProgress;fallbackChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;return fallbackChildFragment;}function mountWorkInProgressOffscreenFiber(offscreenProps,mode,renderLanes){// The props argument to `createFiberFromOffscreen` is `any` typed, so we use
		// this wrapper function to constrain it.
		return createFiberFromOffscreen(offscreenProps,mode,NoLanes,null);}function updateWorkInProgressOffscreenFiber(current,offscreenProps){// The props argument to `createWorkInProgress` is `any` typed, so we use this
		// wrapper function to constrain it.
		return createWorkInProgress(current,offscreenProps);}function updateSuspensePrimaryChildren(current,workInProgress,primaryChildren,renderLanes){var currentPrimaryChildFragment=current.child;var currentFallbackChildFragment=currentPrimaryChildFragment.sibling;var primaryChildFragment=updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment,{mode:'visible',children:primaryChildren});if((workInProgress.mode&ConcurrentMode)===NoMode){primaryChildFragment.lanes=renderLanes;}primaryChildFragment.return=workInProgress;primaryChildFragment.sibling=null;if(currentFallbackChildFragment!==null){// Delete the fallback child fragment
		var deletions=workInProgress.deletions;if(deletions===null){workInProgress.deletions=[currentFallbackChildFragment];workInProgress.flags|=ChildDeletion;}else {deletions.push(currentFallbackChildFragment);}}workInProgress.child=primaryChildFragment;return primaryChildFragment;}function updateSuspenseFallbackChildren(current,workInProgress,primaryChildren,fallbackChildren,renderLanes){var mode=workInProgress.mode;var currentPrimaryChildFragment=current.child;var currentFallbackChildFragment=currentPrimaryChildFragment.sibling;var primaryChildProps={mode:'hidden',children:primaryChildren};var primaryChildFragment;if(// In legacy mode, we commit the primary tree as if it successfully
		// completed, even though it's in an inconsistent state.
		(mode&ConcurrentMode)===NoMode&&// Make sure we're on the second pass, i.e. the primary child fragment was
		// already cloned. In legacy mode, the only case where this isn't true is
		// when DevTools forces us to display a fallback; we skip the first render
		// pass entirely and go straight to rendering the fallback. (In Concurrent
		// Mode, SuspenseList can also trigger this scenario, but this is a legacy-
		// only codepath.)
		workInProgress.child!==currentPrimaryChildFragment){var progressedPrimaryFragment=workInProgress.child;primaryChildFragment=progressedPrimaryFragment;primaryChildFragment.childLanes=NoLanes;primaryChildFragment.pendingProps=primaryChildProps;if(workInProgress.mode&ProfileMode){// Reset the durations from the first pass so they aren't included in the
		// final amounts. This seems counterintuitive, since we're intentionally
		// not measuring part of the render phase, but this makes it match what we
		// do in Concurrent Mode.
		primaryChildFragment.actualDuration=0;primaryChildFragment.actualStartTime=-1;primaryChildFragment.selfBaseDuration=currentPrimaryChildFragment.selfBaseDuration;primaryChildFragment.treeBaseDuration=currentPrimaryChildFragment.treeBaseDuration;}// The fallback fiber was added as a deletion during the first pass.
		// However, since we're going to remain on the fallback, we no longer want
		// to delete it.
		workInProgress.deletions=null;}else {primaryChildFragment=updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment,primaryChildProps);// Since we're reusing a current tree, we need to reuse the flags, too.
		// (We don't do this in legacy mode, because in legacy mode we don't re-use
		// the current tree; see previous branch.)
		primaryChildFragment.subtreeFlags=currentPrimaryChildFragment.subtreeFlags&StaticMask;}var fallbackChildFragment;if(currentFallbackChildFragment!==null){fallbackChildFragment=createWorkInProgress(currentFallbackChildFragment,fallbackChildren);}else {fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);// Needs a placement effect because the parent (the Suspense boundary) already
		// mounted but this is a new fiber.
		fallbackChildFragment.flags|=Placement;}fallbackChildFragment.return=workInProgress;primaryChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;return fallbackChildFragment;}function retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,recoverableError){// Falling back to client rendering. Because this has performance
		// implications, it's considered a recoverable error, even though the user
		// likely won't observe anything wrong with the UI.
		//
		// The error is passed in as an argument to enforce that every caller provide
		// a custom message, or explicitly opt out (currently the only path that opts
		// out is legacy mode; every concurrent path provides an error).
		if(recoverableError!==null){queueHydrationError(recoverableError);}// This will add the old fiber to the deletion list
		reconcileChildFibers(workInProgress,current.child,null,renderLanes);// We're now not suspended nor dehydrated.
		var nextProps=workInProgress.pendingProps;var primaryChildren=nextProps.children;var primaryChildFragment=mountSuspensePrimaryChildren(workInProgress,primaryChildren);// Needs a placement effect because the parent (the Suspense boundary) already
		// mounted but this is a new fiber.
		primaryChildFragment.flags|=Placement;workInProgress.memoizedState=null;return primaryChildFragment;}function mountSuspenseFallbackAfterRetryWithoutHydrating(current,workInProgress,primaryChildren,fallbackChildren,renderLanes){var fiberMode=workInProgress.mode;var primaryChildProps={mode:'visible',children:primaryChildren};var primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,fiberMode);var fallbackChildFragment=createFiberFromFragment(fallbackChildren,fiberMode,renderLanes,null);// Needs a placement effect because the parent (the Suspense
		// boundary) already mounted but this is a new fiber.
		fallbackChildFragment.flags|=Placement;primaryChildFragment.return=workInProgress;fallbackChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;if((workInProgress.mode&ConcurrentMode)!==NoMode){// We will have dropped the effect list which contains the
		// deletion. We need to reconcile to delete the current child.
		reconcileChildFibers(workInProgress,current.child,null,renderLanes);}return fallbackChildFragment;}function mountDehydratedSuspenseComponent(workInProgress,suspenseInstance,renderLanes){// During the first pass, we'll bail out and not drill into the children.
		// Instead, we'll leave the content in place and try to hydrate it later.
		if((workInProgress.mode&ConcurrentMode)===NoMode){{error('Cannot hydrate Suspense in legacy mode. Switch from '+'ReactDOM.hydrate(element, container) to '+'ReactDOMClient.hydrateRoot(container, <App />)'+'.render(element) or remove the Suspense components from '+'the server rendered components.');}workInProgress.lanes=laneToLanes(SyncLane);}else if(isSuspenseInstanceFallback(suspenseInstance)){// This is a client-only boundary. Since we won't get any content from the server
		// for this, we need to schedule that at a higher priority based on when it would
		// have timed out. In theory we could render it in this pass but it would have the
		// wrong priority associated with it and will prevent hydration of parent path.
		// Instead, we'll leave work left on it to render it in a separate commit.
		// TODO This time should be the time at which the server rendered response that is
		// a parent to this boundary was displayed. However, since we currently don't have
		// a protocol to transfer that time, we'll just estimate it by using the current
		// time. This will mean that Suspense timeouts are slightly shifted to later than
		// they should be.
		// Schedule a normal pri update to render this content.
		workInProgress.lanes=laneToLanes(DefaultHydrationLane);}else {// We'll continue hydrating the rest at offscreen priority since we'll already
		// be showing the right content coming from the server, it is no rush.
		workInProgress.lanes=laneToLanes(OffscreenLane);}return null;}function updateDehydratedSuspenseComponent(current,workInProgress,didSuspend,nextProps,suspenseInstance,suspenseState,renderLanes){if(!didSuspend){// This is the first render pass. Attempt to hydrate.
		// We should never be hydrating at this point because it is the first pass,
		// but after we've already committed once.
		warnIfHydrating();if((workInProgress.mode&ConcurrentMode)===NoMode){return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,// TODO: When we delete legacy mode, we should make this error argument
		// required — every concurrent mode path that causes hydration to
		// de-opt to client rendering should have an error message.
		null);}if(isSuspenseInstanceFallback(suspenseInstance)){// This boundary is in a permanent fallback state. In this case, we'll never
		// get an update and we'll never be able to hydrate the final content. Let's just try the
		// client side render instead.
		var digest,message,stack;{var _getSuspenseInstanceF=getSuspenseInstanceFallbackErrorDetails(suspenseInstance);digest=_getSuspenseInstanceF.digest;message=_getSuspenseInstanceF.message;stack=_getSuspenseInstanceF.stack;}var error;if(message){// eslint-disable-next-line react-internal/prod-error-codes
		error=new Error(message);}else {error=new Error('The server could not finish this Suspense boundary, likely '+'due to an error during server rendering. Switched to '+'client rendering.');}var capturedValue=createCapturedValue(error,digest,stack);return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,capturedValue);}// any context has changed, we need to treat is as if the input might have changed.
		var hasContextChanged=includesSomeLane(renderLanes,current.childLanes);if(didReceiveUpdate||hasContextChanged){// This boundary has changed since the first render. This means that we are now unable to
		// hydrate it. We might still be able to hydrate it using a higher priority lane.
		var root=getWorkInProgressRoot();if(root!==null){var attemptHydrationAtLane=getBumpedLaneForHydration(root,renderLanes);if(attemptHydrationAtLane!==NoLane&&attemptHydrationAtLane!==suspenseState.retryLane){// Intentionally mutating since this render will get interrupted. This
		// is one of the very rare times where we mutate the current tree
		// during the render phase.
		suspenseState.retryLane=attemptHydrationAtLane;// TODO: Ideally this would inherit the event time of the current render
		var eventTime=NoTimestamp;enqueueConcurrentRenderForLane(current,attemptHydrationAtLane);scheduleUpdateOnFiber(root,current,attemptHydrationAtLane,eventTime);}}// If we have scheduled higher pri work above, this will probably just abort the render
		// since we now have higher priority work, but in case it doesn't, we need to prepare to
		// render something, if we time out. Even if that requires us to delete everything and
		// skip hydration.
		// Delay having to do this as long as the suspense timeout allows us.
		renderDidSuspendDelayIfPossible();var _capturedValue=createCapturedValue(new Error('This Suspense boundary received an update before it finished '+'hydrating. This caused the boundary to switch to client rendering. '+'The usual way to fix this is to wrap the original update '+'in startTransition.'));return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,_capturedValue);}else if(isSuspenseInstancePending(suspenseInstance)){// This component is still pending more data from the server, so we can't hydrate its
		// content. We treat it as if this component suspended itself. It might seem as if
		// we could just try to render it client-side instead. However, this will perform a
		// lot of unnecessary work and is unlikely to complete since it often will suspend
		// on missing data anyway. Additionally, the server might be able to render more
		// than we can on the client yet. In that case we'd end up with more fallback states
		// on the client than if we just leave it alone. If the server times out or errors
		// these should update this boundary to the permanent Fallback state instead.
		// Mark it as having captured (i.e. suspended).
		workInProgress.flags|=DidCapture;// Leave the child in place. I.e. the dehydrated fragment.
		workInProgress.child=current.child;// Register a callback to retry this boundary once the server has sent the result.
		var retry=retryDehydratedSuspenseBoundary.bind(null,current);registerSuspenseInstanceRetry(suspenseInstance,retry);return null;}else {// This is the first attempt.
		reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress,suspenseInstance,suspenseState.treeContext);var primaryChildren=nextProps.children;var primaryChildFragment=mountSuspensePrimaryChildren(workInProgress,primaryChildren);// Mark the children as hydrating. This is a fast path to know whether this
		// tree is part of a hydrating tree. This is used to determine if a child
		// node has fully mounted yet, and for scheduling event replaying.
		// Conceptually this is similar to Placement in that a new subtree is
		// inserted into the React tree here. It just happens to not need DOM
		// mutations because it already exists.
		primaryChildFragment.flags|=Hydrating;return primaryChildFragment;}}else {// This is the second render pass. We already attempted to hydrated, but
		// something either suspended or errored.
		if(workInProgress.flags&ForceClientRender){// Something errored during hydration. Try again without hydrating.
		workInProgress.flags&=~ForceClientRender;var _capturedValue2=createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. '+'Switched to client rendering.'));return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,_capturedValue2);}else if(workInProgress.memoizedState!==null){// Something suspended and we should still be in dehydrated mode.
		// Leave the existing child in place.
		workInProgress.child=current.child;// The dehydrated completion pass expects this flag to be there
		// but the normal suspense pass doesn't.
		workInProgress.flags|=DidCapture;return null;}else {// Suspended but we should no longer be in dehydrated mode.
		// Therefore we now have to render the fallback.
		var nextPrimaryChildren=nextProps.children;var nextFallbackChildren=nextProps.fallback;var fallbackChildFragment=mountSuspenseFallbackAfterRetryWithoutHydrating(current,workInProgress,nextPrimaryChildren,nextFallbackChildren,renderLanes);var _primaryChildFragment4=workInProgress.child;_primaryChildFragment4.memoizedState=mountSuspenseOffscreenState(renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackChildFragment;}}}function scheduleSuspenseWorkOnFiber(fiber,renderLanes,propagationRoot){fiber.lanes=mergeLanes(fiber.lanes,renderLanes);var alternate=fiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,renderLanes);}scheduleContextWorkOnParentPath(fiber.return,renderLanes,propagationRoot);}function propagateSuspenseContextChange(workInProgress,firstChild,renderLanes){// Mark any Suspense boundaries with fallbacks as having work to do.
		// If they were previously forced into fallbacks, they may now be able
		// to unblock.
		var node=firstChild;while(node!==null){if(node.tag===SuspenseComponent){var state=node.memoizedState;if(state!==null){scheduleSuspenseWorkOnFiber(node,renderLanes,workInProgress);}}else if(node.tag===SuspenseListComponent){// If the tail is hidden there might not be an Suspense boundaries
		// to schedule work on. In this case we have to schedule it on the
		// list itself.
		// We don't have to traverse to the children of the list since
		// the list will propagate the change when it rerenders.
		scheduleSuspenseWorkOnFiber(node,renderLanes,workInProgress);}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}function findLastContentRow(firstChild){// This is going to find the last row among these children that is already
		// showing content on the screen, as opposed to being in fallback state or
		// new. If a row has multiple Suspense boundaries, any of them being in the
		// fallback state, counts as the whole row being in a fallback state.
		// Note that the "rows" will be workInProgress, but any nested children
		// will still be current since we haven't rendered them yet. The mounted
		// order may not be the same as the new order. We use the new order.
		var row=firstChild;var lastContentRow=null;while(row!==null){var currentRow=row.alternate;// New rows can't be content rows.
		if(currentRow!==null&&findFirstSuspended(currentRow)===null){lastContentRow=row;}row=row.sibling;}return lastContentRow;}function validateRevealOrder(revealOrder){{if(revealOrder!==undefined&&revealOrder!=='forwards'&&revealOrder!=='backwards'&&revealOrder!=='together'&&!didWarnAboutRevealOrder[revealOrder]){didWarnAboutRevealOrder[revealOrder]=true;if(typeof revealOrder==='string'){switch(revealOrder.toLowerCase()){case'together':case'forwards':case'backwards':{error('"%s" is not a valid value for revealOrder on <SuspenseList />. '+'Use lowercase "%s" instead.',revealOrder,revealOrder.toLowerCase());break;}case'forward':case'backward':{error('"%s" is not a valid value for revealOrder on <SuspenseList />. '+'React uses the -s suffix in the spelling. Use "%ss" instead.',revealOrder,revealOrder.toLowerCase());break;}default:error('"%s" is not a supported revealOrder on <SuspenseList />. '+'Did you mean "together", "forwards" or "backwards"?',revealOrder);break;}}else {error('%s is not a supported value for revealOrder on <SuspenseList />. '+'Did you mean "together", "forwards" or "backwards"?',revealOrder);}}}}function validateTailOptions(tailMode,revealOrder){{if(tailMode!==undefined&&!didWarnAboutTailOptions[tailMode]){if(tailMode!=='collapsed'&&tailMode!=='hidden'){didWarnAboutTailOptions[tailMode]=true;error('"%s" is not a supported value for tail on <SuspenseList />. '+'Did you mean "collapsed" or "hidden"?',tailMode);}else if(revealOrder!=='forwards'&&revealOrder!=='backwards'){didWarnAboutTailOptions[tailMode]=true;error('<SuspenseList tail="%s" /> is only valid if revealOrder is '+'"forwards" or "backwards". '+'Did you mean to specify revealOrder="forwards"?',tailMode);}}}}function validateSuspenseListNestedChild(childSlot,index){{var isAnArray=isArray(childSlot);var isIterable=!isAnArray&&typeof getIteratorFn(childSlot)==='function';if(isAnArray||isIterable){var type=isAnArray?'array':'iterable';error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in '+'an additional SuspenseList to configure its revealOrder: '+'<SuspenseList revealOrder=...> ... '+'<SuspenseList revealOrder=...>{%s}</SuspenseList> ... '+'</SuspenseList>',type,index,type);return false;}}return true;}function validateSuspenseListChildren(children,revealOrder){{if((revealOrder==='forwards'||revealOrder==='backwards')&&children!==undefined&&children!==null&&children!==false){if(isArray(children)){for(var i=0;i<children.length;i++){if(!validateSuspenseListNestedChild(children[i],i)){return;}}}else {var iteratorFn=getIteratorFn(children);if(typeof iteratorFn==='function'){var childrenIterator=iteratorFn.call(children);if(childrenIterator){var step=childrenIterator.next();var _i=0;for(;!step.done;step=childrenIterator.next()){if(!validateSuspenseListNestedChild(step.value,_i)){return;}_i++;}}}else {error('A single row was passed to a <SuspenseList revealOrder="%s" />. '+'This is not useful since it needs multiple rows. '+'Did you mean to pass multiple children or an array?',revealOrder);}}}}}function initSuspenseListRenderState(workInProgress,isBackwards,tail,lastContentRow,tailMode){var renderState=workInProgress.memoizedState;if(renderState===null){workInProgress.memoizedState={isBackwards:isBackwards,rendering:null,renderingStartTime:0,last:lastContentRow,tail:tail,tailMode:tailMode};}else {// We can reuse the existing object from previous renders.
		renderState.isBackwards=isBackwards;renderState.rendering=null;renderState.renderingStartTime=0;renderState.last=lastContentRow;renderState.tail=tail;renderState.tailMode=tailMode;}}// This can end up rendering this component multiple passes.
		// The first pass splits the children fibers into two sets. A head and tail.
		// We first render the head. If anything is in fallback state, we do another
		// pass through beginWork to rerender all children (including the tail) with
		// the force suspend context. If the first render didn't have anything in
		// in fallback state. Then we render each row in the tail one-by-one.
		// That happens in the completeWork phase without going back to beginWork.
		function updateSuspenseListComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;var revealOrder=nextProps.revealOrder;var tailMode=nextProps.tail;var newChildren=nextProps.children;validateRevealOrder(revealOrder);validateTailOptions(tailMode,revealOrder);validateSuspenseListChildren(newChildren,revealOrder);reconcileChildren(current,workInProgress,newChildren,renderLanes);var suspenseContext=suspenseStackCursor.current;var shouldForceFallback=hasSuspenseContext(suspenseContext,ForceSuspenseFallback);if(shouldForceFallback){suspenseContext=setShallowSuspenseContext(suspenseContext,ForceSuspenseFallback);workInProgress.flags|=DidCapture;}else {var didSuspendBefore=current!==null&&(current.flags&DidCapture)!==NoFlags;if(didSuspendBefore){// If we previously forced a fallback, we need to schedule work
		// on any nested boundaries to let them know to try to render
		// again. This is the same as context updating.
		propagateSuspenseContextChange(workInProgress,workInProgress.child,renderLanes);}suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);}pushSuspenseContext(workInProgress,suspenseContext);if((workInProgress.mode&ConcurrentMode)===NoMode){// In legacy mode, SuspenseList doesn't work so we just
		// use make it a noop by treating it as the default revealOrder.
		workInProgress.memoizedState=null;}else {switch(revealOrder){case'forwards':{var lastContentRow=findLastContentRow(workInProgress.child);var tail;if(lastContentRow===null){// The whole list is part of the tail.
		// TODO: We could fast path by just rendering the tail now.
		tail=workInProgress.child;workInProgress.child=null;}else {// Disconnect the tail rows after the content row.
		// We're going to render them separately later.
		tail=lastContentRow.sibling;lastContentRow.sibling=null;}initSuspenseListRenderState(workInProgress,false,// isBackwards
		tail,lastContentRow,tailMode);break;}case'backwards':{// We're going to find the first row that has existing content.
		// At the same time we're going to reverse the list of everything
		// we pass in the meantime. That's going to be our tail in reverse
		// order.
		var _tail=null;var row=workInProgress.child;workInProgress.child=null;while(row!==null){var currentRow=row.alternate;// New rows can't be content rows.
		if(currentRow!==null&&findFirstSuspended(currentRow)===null){// This is the beginning of the main content.
		workInProgress.child=row;break;}var nextRow=row.sibling;row.sibling=_tail;_tail=row;row=nextRow;}// TODO: If workInProgress.child is null, we can continue on the tail immediately.
		initSuspenseListRenderState(workInProgress,true,// isBackwards
		_tail,null,// last
		tailMode);break;}case'together':{initSuspenseListRenderState(workInProgress,false,// isBackwards
		null,// tail
		null,// last
		undefined);break;}default:{// The default reveal order is the same as not having
		// a boundary.
		workInProgress.memoizedState=null;}}}return workInProgress.child;}function updatePortalComponent(current,workInProgress,renderLanes){pushHostContainer(workInProgress,workInProgress.stateNode.containerInfo);var nextChildren=workInProgress.pendingProps;if(current===null){// Portals are special because we don't append the children during mount
		// but at commit. Therefore we need to track insertions which the normal
		// flow doesn't do during mount. This doesn't happen at the root because
		// the root always starts with a "current" with a null child.
		// TODO: Consider unifying this with how the root works.
		workInProgress.child=reconcileChildFibers(workInProgress,null,nextChildren,renderLanes);}else {reconcileChildren(current,workInProgress,nextChildren,renderLanes);}return workInProgress.child;}var hasWarnedAboutUsingNoValuePropOnContextProvider=false;function updateContextProvider(current,workInProgress,renderLanes){var providerType=workInProgress.type;var context=providerType._context;var newProps=workInProgress.pendingProps;var oldProps=workInProgress.memoizedProps;var newValue=newProps.value;{if(!('value'in newProps)){if(!hasWarnedAboutUsingNoValuePropOnContextProvider){hasWarnedAboutUsingNoValuePropOnContextProvider=true;error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');}}var providerPropTypes=workInProgress.type.propTypes;if(providerPropTypes){checkPropTypes(providerPropTypes,newProps,'prop','Context.Provider');}}pushProvider(workInProgress,context,newValue);{if(oldProps!==null){var oldValue=oldProps.value;if(objectIs(oldValue,newValue)){// No change. Bailout early if children are the same.
		if(oldProps.children===newProps.children&&!hasContextChanged()){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}}else {// The context value changed. Search for matching consumers and schedule
		// them to update.
		propagateContextChange(workInProgress,context,renderLanes);}}}var newChildren=newProps.children;reconcileChildren(current,workInProgress,newChildren,renderLanes);return workInProgress.child;}var hasWarnedAboutUsingContextAsConsumer=false;function updateContextConsumer(current,workInProgress,renderLanes){var context=workInProgress.type;// The logic below for Context differs depending on PROD or DEV mode. In
		// DEV mode, we create a separate object for Context.Consumer that acts
		// like a proxy to Context. This proxy object adds unnecessary code in PROD
		// so we use the old behaviour (Context.Consumer references Context) to
		// reduce size and overhead. The separate object references context via
		// a property called "_context", which also gives us the ability to check
		// in DEV mode if this property exists or not and warn if it does not.
		{if(context._context===undefined){// This may be because it's a Context (rather than a Consumer).
		// Or it may be because it's older React where they're the same thing.
		// We only want to warn if we're sure it's a new React.
		if(context!==context.Consumer){if(!hasWarnedAboutUsingContextAsConsumer){hasWarnedAboutUsingContextAsConsumer=true;error('Rendering <Context> directly is not supported and will be removed in '+'a future major release. Did you mean to render <Context.Consumer> instead?');}}}else {context=context._context;}}var newProps=workInProgress.pendingProps;var render=newProps.children;{if(typeof render!=='function'){error('A context consumer was rendered with multiple children, or a child '+"that isn't a function. A context consumer expects a single child "+'that is a function. If you did pass a function, make sure there '+'is no trailing or leading whitespace around it.');}}prepareToReadContext(workInProgress,renderLanes);var newValue=readContext(context);{markComponentRenderStarted(workInProgress);}var newChildren;{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);newChildren=render(newValue);setIsRendering(false);}{markComponentRenderStopped();}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,newChildren,renderLanes);return workInProgress.child;}function markWorkInProgressReceivedUpdate(){didReceiveUpdate=true;}function resetSuspendedCurrentOnMountInLegacyMode(current,workInProgress){if((workInProgress.mode&ConcurrentMode)===NoMode){if(current!==null){// A lazy component only mounts if it suspended inside a non-
		// concurrent tree, in an inconsistent state. We want to treat it like
		// a new mount, even though an empty version of it already committed.
		// Disconnect the alternate pointers.
		current.alternate=null;workInProgress.alternate=null;// Since this is conceptually a new fiber, schedule a Placement effect
		workInProgress.flags|=Placement;}}}function bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes){if(current!==null){// Reuse previous dependencies
		workInProgress.dependencies=current.dependencies;}{// Don't update "base" render times for bailouts.
		stopProfilerTimerIfRunning();}markSkippedUpdateLanes(workInProgress.lanes);// Check if the children have any pending work.
		if(!includesSomeLane(renderLanes,workInProgress.childLanes)){// The children don't have any work either. We can skip them.
		// TODO: Once we add back resuming, we should check if the children are
		// a work-in-progress set. If so, we need to transfer their effects.
		{return null;}}// This fiber doesn't have work, but its subtree does. Clone the child
		// fibers and continue.
		cloneChildFibers(current,workInProgress);return workInProgress.child;}function remountFiber(current,oldWorkInProgress,newWorkInProgress){{var returnFiber=oldWorkInProgress.return;if(returnFiber===null){// eslint-disable-next-line react-internal/prod-error-codes
		throw new Error('Cannot swap the root fiber.');}// Disconnect from the old current.
		// It will get deleted.
		current.alternate=null;oldWorkInProgress.alternate=null;// Connect to the new tree.
		newWorkInProgress.index=oldWorkInProgress.index;newWorkInProgress.sibling=oldWorkInProgress.sibling;newWorkInProgress.return=oldWorkInProgress.return;newWorkInProgress.ref=oldWorkInProgress.ref;// Replace the child/sibling pointers above it.
		if(oldWorkInProgress===returnFiber.child){returnFiber.child=newWorkInProgress;}else {var prevSibling=returnFiber.child;if(prevSibling===null){// eslint-disable-next-line react-internal/prod-error-codes
		throw new Error('Expected parent to have a child.');}while(prevSibling.sibling!==oldWorkInProgress){prevSibling=prevSibling.sibling;if(prevSibling===null){// eslint-disable-next-line react-internal/prod-error-codes
		throw new Error('Expected to find the previous sibling.');}}prevSibling.sibling=newWorkInProgress;}// Delete the old fiber and place the new one.
		// Since the old fiber is disconnected, we have to schedule it manually.
		var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[current];returnFiber.flags|=ChildDeletion;}else {deletions.push(current);}newWorkInProgress.flags|=Placement;// Restart work from the new fiber.
		return newWorkInProgress;}}function checkScheduledUpdateOrContext(current,renderLanes){// Before performing an early bailout, we must check if there are pending
		// updates or context.
		var updateLanes=current.lanes;if(includesSomeLane(updateLanes,renderLanes)){return true;}// No pending update, but because context is propagated lazily, we need
		return false;}function attemptEarlyBailoutIfNoScheduledUpdate(current,workInProgress,renderLanes){// This fiber does not have any pending work. Bailout without entering
		// the begin phase. There's still some bookkeeping we that needs to be done
		// in this optimized path, mostly pushing stuff onto the stack.
		switch(workInProgress.tag){case HostRoot:pushHostRootContext(workInProgress);workInProgress.stateNode;resetHydrationState();break;case HostComponent:pushHostContext(workInProgress);break;case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){pushContextProvider(workInProgress);}break;}case HostPortal:pushHostContainer(workInProgress,workInProgress.stateNode.containerInfo);break;case ContextProvider:{var newValue=workInProgress.memoizedProps.value;var context=workInProgress.type._context;pushProvider(workInProgress,context,newValue);break;}case Profiler:{// Profiler should only call onRender when one of its descendants actually rendered.
		var hasChildWork=includesSomeLane(renderLanes,workInProgress.childLanes);if(hasChildWork){workInProgress.flags|=Update;}{// Reset effect durations for the next eventual effect phase.
		// These are reset during render to allow the DevTools commit hook a chance to read them,
		var stateNode=workInProgress.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}}break;case SuspenseComponent:{var state=workInProgress.memoizedState;if(state!==null){if(state.dehydrated!==null){pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));// We know that this component will suspend again because if it has
		// been unsuspended it has committed as a resolved Suspense component.
		// If it needs to be retried, it should have work scheduled on it.
		workInProgress.flags|=DidCapture;// We should never render the children of a dehydrated boundary until we
		// upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
		return null;}// If this boundary is currently timed out, we need to decide
		// whether to retry the primary children, or to skip over it and
		// go straight to the fallback. Check the priority of the primary
		// child fragment.
		var primaryChildFragment=workInProgress.child;var primaryChildLanes=primaryChildFragment.childLanes;if(includesSomeLane(renderLanes,primaryChildLanes)){// The primary children have pending work. Use the normal path
		// to attempt to render the primary children again.
		return updateSuspenseComponent(current,workInProgress,renderLanes);}else {// The primary child fragment does not have pending work marked
		// on it
		pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));// The primary children do not have pending work with sufficient
		// priority. Bailout.
		var child=bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);if(child!==null){// The fallback children have pending work. Skip over the
		// primary children and work on the fallback.
		return child.sibling;}else {// Note: We can return `null` here because we already checked
		// whether there were nested context consumers, via the call to
		// `bailoutOnAlreadyFinishedWork` above.
		return null;}}}else {pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));}break;}case SuspenseListComponent:{var didSuspendBefore=(current.flags&DidCapture)!==NoFlags;var _hasChildWork=includesSomeLane(renderLanes,workInProgress.childLanes);if(didSuspendBefore){if(_hasChildWork){// If something was in fallback state last time, and we have all the
		// same children then we're still in progressive loading state.
		// Something might get unblocked by state updates or retries in the
		// tree which will affect the tail. So we need to use the normal
		// path to compute the correct tail.
		return updateSuspenseListComponent(current,workInProgress,renderLanes);}// If none of the children had any work, that means that none of
		// them got retried so they'll still be blocked in the same way
		// as before. We can fast bail out.
		workInProgress.flags|=DidCapture;}// If nothing suspended before and we're rendering the same children,
		// then the tail doesn't matter. Anything new that suspends will work
		// in the "together" mode, so we can continue from the state we had.
		var renderState=workInProgress.memoizedState;if(renderState!==null){// Reset to the "together" mode in case we've started a different
		// update in the past but didn't complete it.
		renderState.rendering=null;renderState.tail=null;renderState.lastEffect=null;}pushSuspenseContext(workInProgress,suspenseStackCursor.current);if(_hasChildWork){break;}else {// If none of the children had any work, that means that none of
		// them got retried so they'll still be blocked in the same way
		// as before. We can fast bail out.
		return null;}}case OffscreenComponent:case LegacyHiddenComponent:{// Need to check if the tree still needs to be deferred. This is
		// almost identical to the logic used in the normal update path,
		// so we'll just enter that. The only difference is we'll bail out
		// at the next level instead of this one, because the child props
		// have not changed. Which is fine.
		// TODO: Probably should refactor `beginWork` to split the bailout
		// path from the normal path. I'm tempted to do a labeled break here
		// but I won't :)
		workInProgress.lanes=NoLanes;return updateOffscreenComponent(current,workInProgress,renderLanes);}}return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}function beginWork(current,workInProgress,renderLanes){{if(workInProgress._debugNeedsRemount&&current!==null){// This will restart the begin phase with a new fiber.
		return remountFiber(current,workInProgress,createFiberFromTypeAndProps(workInProgress.type,workInProgress.key,workInProgress.pendingProps,workInProgress._debugOwner||null,workInProgress.mode,workInProgress.lanes));}}if(current!==null){var oldProps=current.memoizedProps;var newProps=workInProgress.pendingProps;if(oldProps!==newProps||hasContextChanged()||// Force a re-render if the implementation changed due to hot reload:
		workInProgress.type!==current.type){// If props or context changed, mark the fiber as having performed work.
		// This may be unset if the props are determined to be equal later (memo).
		didReceiveUpdate=true;}else {// Neither props nor legacy context changes. Check if there's a pending
		// update or context change.
		var hasScheduledUpdateOrContext=checkScheduledUpdateOrContext(current,renderLanes);if(!hasScheduledUpdateOrContext&&// If this is the second pass of an error or suspense boundary, there
		// may not be work scheduled on `current`, so we check for this flag.
		(workInProgress.flags&DidCapture)===NoFlags){// No pending updates or context. Bail out now.
		didReceiveUpdate=false;return attemptEarlyBailoutIfNoScheduledUpdate(current,workInProgress,renderLanes);}if((current.flags&ForceUpdateForLegacySuspense)!==NoFlags){// This is a special case that only exists for legacy mode.
		// See https://github.com/facebook/react/pull/19216.
		didReceiveUpdate=true;}else {// An update was scheduled on this fiber, but there are no new props
		// nor legacy context. Set this to false. If an update queue or context
		// consumer produces a changed value, it will set this to true. Otherwise,
		// the component will assume the children have not changed and bail out.
		didReceiveUpdate=false;}}}else {didReceiveUpdate=false;if(getIsHydrating()&&isForkedChild(workInProgress)){// Check if this child belongs to a list of muliple children in
		// its parent.
		//
		// In a true multi-threaded implementation, we would render children on
		// parallel threads. This would represent the beginning of a new render
		// thread for this subtree.
		//
		// We only use this for id generation during hydration, which is why the
		// logic is located in this special branch.
		var slotIndex=workInProgress.index;var numberOfForks=getForksAtLevel();pushTreeId(workInProgress,numberOfForks,slotIndex);}}// Before entering the begin phase, clear pending update priority.
		// TODO: This assumes that we're about to evaluate the component and process
		// the update queue. However, there's an exception: SimpleMemoComponent
		// sometimes bails out later in the begin phase. This indicates that we should
		// move this assignment out of the common path and into each branch.
		workInProgress.lanes=NoLanes;switch(workInProgress.tag){case IndeterminateComponent:{return mountIndeterminateComponent(current,workInProgress,workInProgress.type,renderLanes);}case LazyComponent:{var elementType=workInProgress.elementType;return mountLazyComponent(current,workInProgress,elementType,renderLanes);}case FunctionComponent:{var Component=workInProgress.type;var unresolvedProps=workInProgress.pendingProps;var resolvedProps=workInProgress.elementType===Component?unresolvedProps:resolveDefaultProps(Component,unresolvedProps);return updateFunctionComponent(current,workInProgress,Component,resolvedProps,renderLanes);}case ClassComponent:{var _Component=workInProgress.type;var _unresolvedProps=workInProgress.pendingProps;var _resolvedProps=workInProgress.elementType===_Component?_unresolvedProps:resolveDefaultProps(_Component,_unresolvedProps);return updateClassComponent(current,workInProgress,_Component,_resolvedProps,renderLanes);}case HostRoot:return updateHostRoot(current,workInProgress,renderLanes);case HostComponent:return updateHostComponent(current,workInProgress,renderLanes);case HostText:return updateHostText(current,workInProgress);case SuspenseComponent:return updateSuspenseComponent(current,workInProgress,renderLanes);case HostPortal:return updatePortalComponent(current,workInProgress,renderLanes);case ForwardRef:{var type=workInProgress.type;var _unresolvedProps2=workInProgress.pendingProps;var _resolvedProps2=workInProgress.elementType===type?_unresolvedProps2:resolveDefaultProps(type,_unresolvedProps2);return updateForwardRef(current,workInProgress,type,_resolvedProps2,renderLanes);}case Fragment:return updateFragment(current,workInProgress,renderLanes);case Mode:return updateMode(current,workInProgress,renderLanes);case Profiler:return updateProfiler(current,workInProgress,renderLanes);case ContextProvider:return updateContextProvider(current,workInProgress,renderLanes);case ContextConsumer:return updateContextConsumer(current,workInProgress,renderLanes);case MemoComponent:{var _type2=workInProgress.type;var _unresolvedProps3=workInProgress.pendingProps;// Resolve outer props first, then resolve inner props.
		var _resolvedProps3=resolveDefaultProps(_type2,_unresolvedProps3);{if(workInProgress.type!==workInProgress.elementType){var outerPropTypes=_type2.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,_resolvedProps3,// Resolved for outer only
		'prop',getComponentNameFromType(_type2));}}}_resolvedProps3=resolveDefaultProps(_type2.type,_resolvedProps3);return updateMemoComponent(current,workInProgress,_type2,_resolvedProps3,renderLanes);}case SimpleMemoComponent:{return updateSimpleMemoComponent(current,workInProgress,workInProgress.type,workInProgress.pendingProps,renderLanes);}case IncompleteClassComponent:{var _Component2=workInProgress.type;var _unresolvedProps4=workInProgress.pendingProps;var _resolvedProps4=workInProgress.elementType===_Component2?_unresolvedProps4:resolveDefaultProps(_Component2,_unresolvedProps4);return mountIncompleteClassComponent(current,workInProgress,_Component2,_resolvedProps4,renderLanes);}case SuspenseListComponent:{return updateSuspenseListComponent(current,workInProgress,renderLanes);}case ScopeComponent:{break;}case OffscreenComponent:{return updateOffscreenComponent(current,workInProgress,renderLanes);}}throw new Error("Unknown unit of work tag ("+workInProgress.tag+"). This error is likely caused by a bug in "+'React. Please file an issue.');}function markUpdate(workInProgress){// Tag the fiber with an update effect. This turns a Placement into
		// a PlacementAndUpdate.
		workInProgress.flags|=Update;}function markRef$1(workInProgress){workInProgress.flags|=Ref;{workInProgress.flags|=RefStatic;}}var appendAllChildren;var updateHostContainer;var updateHostComponent$1;var updateHostText$1;{// Mutation mode
		appendAllChildren=function(parent,workInProgress,needsVisibilityToggle,isHidden){// We only have the top Fiber that was created but we need recurse down its
		// children to find all the terminal nodes.
		var node=workInProgress.child;while(node!==null){if(node.tag===HostComponent||node.tag===HostText){appendInitialChild(parent,node.stateNode);}else if(node.tag===HostPortal);else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}};updateHostContainer=function(current,workInProgress){// Noop
		};updateHostComponent$1=function(current,workInProgress,type,newProps,rootContainerInstance){// If we have an alternate, that means this is an update and we need to
		// schedule a side-effect to do the updates.
		var oldProps=current.memoizedProps;if(oldProps===newProps){// In mutation mode, this is sufficient for a bailout because
		// we won't touch this node even if children changed.
		return;}// If we get updated because one of our children updated, we don't
		// have newProps so we'll have to reuse them.
		// TODO: Split the update API as separate for the props vs. children.
		// Even better would be if children weren't special cased at all tho.
		var instance=workInProgress.stateNode;var currentHostContext=getHostContext();// TODO: Experiencing an error where oldProps is null. Suggests a host
		// component is hitting the resume path. Figure out why. Possibly
		// related to `hidden`.
		var updatePayload=prepareUpdate(instance,type,oldProps,newProps,rootContainerInstance,currentHostContext);// TODO: Type this specific to this type of component.
		workInProgress.updateQueue=updatePayload;// If the update payload indicates that there is a change or if there
		// is a new ref we mark this as an update. All the work is done in commitWork.
		if(updatePayload){markUpdate(workInProgress);}};updateHostText$1=function(current,workInProgress,oldText,newText){// If the text differs, mark it as an update. All the work in done in commitWork.
		if(oldText!==newText){markUpdate(workInProgress);}};}function cutOffTailIfNeeded(renderState,hasRenderedATailFallback){if(getIsHydrating()){// If we're hydrating, we should consume as many items as we can
		// so we don't leave any behind.
		return;}switch(renderState.tailMode){case'hidden':{// Any insertions at the end of the tail list after this point
		// should be invisible. If there are already mounted boundaries
		// anything before them are not considered for collapsing.
		// Therefore we need to go through the whole tail to find if
		// there are any.
		var tailNode=renderState.tail;var lastTailNode=null;while(tailNode!==null){if(tailNode.alternate!==null){lastTailNode=tailNode;}tailNode=tailNode.sibling;}// Next we're simply going to delete all insertions after the
		// last rendered item.
		if(lastTailNode===null){// All remaining items in the tail are insertions.
		renderState.tail=null;}else {// Detach the insertion after the last node that was already
		// inserted.
		lastTailNode.sibling=null;}break;}case'collapsed':{// Any insertions at the end of the tail list after this point
		// should be invisible. If there are already mounted boundaries
		// anything before them are not considered for collapsing.
		// Therefore we need to go through the whole tail to find if
		// there are any.
		var _tailNode=renderState.tail;var _lastTailNode=null;while(_tailNode!==null){if(_tailNode.alternate!==null){_lastTailNode=_tailNode;}_tailNode=_tailNode.sibling;}// Next we're simply going to delete all insertions after the
		// last rendered item.
		if(_lastTailNode===null){// All remaining items in the tail are insertions.
		if(!hasRenderedATailFallback&&renderState.tail!==null){// We suspended during the head. We want to show at least one
		// row at the tail. So we'll keep on and cut off the rest.
		renderState.tail.sibling=null;}else {renderState.tail=null;}}else {// Detach the insertion after the last node that was already
		// inserted.
		_lastTailNode.sibling=null;}break;}}}function bubbleProperties(completedWork){var didBailout=completedWork.alternate!==null&&completedWork.alternate.child===completedWork.child;var newChildLanes=NoLanes;var subtreeFlags=NoFlags;if(!didBailout){// Bubble up the earliest expiration time.
		if((completedWork.mode&ProfileMode)!==NoMode){// In profiling mode, resetChildExpirationTime is also used to reset
		// profiler durations.
		var actualDuration=completedWork.actualDuration;var treeBaseDuration=completedWork.selfBaseDuration;var child=completedWork.child;while(child!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(child.lanes,child.childLanes));subtreeFlags|=child.subtreeFlags;subtreeFlags|=child.flags;// When a fiber is cloned, its actualDuration is reset to 0. This value will
		// only be updated if work is done on the fiber (i.e. it doesn't bailout).
		// When work is done, it should bubble to the parent's actualDuration. If
		// the fiber has not been cloned though, (meaning no work was done), then
		// this value will reflect the amount of time spent working on a previous
		// render. In that case it should not bubble. We determine whether it was
		// cloned by comparing the child pointer.
		actualDuration+=child.actualDuration;treeBaseDuration+=child.treeBaseDuration;child=child.sibling;}completedWork.actualDuration=actualDuration;completedWork.treeBaseDuration=treeBaseDuration;}else {var _child=completedWork.child;while(_child!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child.lanes,_child.childLanes));subtreeFlags|=_child.subtreeFlags;subtreeFlags|=_child.flags;// Update the return pointer so the tree is consistent. This is a code
		// smell because it assumes the commit phase is never concurrent with
		// the render phase. Will address during refactor to alternate model.
		_child.return=completedWork;_child=_child.sibling;}}completedWork.subtreeFlags|=subtreeFlags;}else {// Bubble up the earliest expiration time.
		if((completedWork.mode&ProfileMode)!==NoMode){// In profiling mode, resetChildExpirationTime is also used to reset
		// profiler durations.
		var _treeBaseDuration=completedWork.selfBaseDuration;var _child2=completedWork.child;while(_child2!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child2.lanes,_child2.childLanes));// "Static" flags share the lifetime of the fiber/hook they belong to,
		// so we should bubble those up even during a bailout. All the other
		// flags have a lifetime only of a single render + commit, so we should
		// ignore them.
		subtreeFlags|=_child2.subtreeFlags&StaticMask;subtreeFlags|=_child2.flags&StaticMask;_treeBaseDuration+=_child2.treeBaseDuration;_child2=_child2.sibling;}completedWork.treeBaseDuration=_treeBaseDuration;}else {var _child3=completedWork.child;while(_child3!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child3.lanes,_child3.childLanes));// "Static" flags share the lifetime of the fiber/hook they belong to,
		// so we should bubble those up even during a bailout. All the other
		// flags have a lifetime only of a single render + commit, so we should
		// ignore them.
		subtreeFlags|=_child3.subtreeFlags&StaticMask;subtreeFlags|=_child3.flags&StaticMask;// Update the return pointer so the tree is consistent. This is a code
		// smell because it assumes the commit phase is never concurrent with
		// the render phase. Will address during refactor to alternate model.
		_child3.return=completedWork;_child3=_child3.sibling;}}completedWork.subtreeFlags|=subtreeFlags;}completedWork.childLanes=newChildLanes;return didBailout;}function completeDehydratedSuspenseBoundary(current,workInProgress,nextState){if(hasUnhydratedTailNodes()&&(workInProgress.mode&ConcurrentMode)!==NoMode&&(workInProgress.flags&DidCapture)===NoFlags){warnIfUnhydratedTailNodes(workInProgress);resetHydrationState();workInProgress.flags|=ForceClientRender|Incomplete|ShouldCapture;return false;}var wasHydrated=popHydrationState(workInProgress);if(nextState!==null&&nextState.dehydrated!==null){// We might be inside a hydration state the first time we're picking up this
		// Suspense boundary, and also after we've reentered it for further hydration.
		if(current===null){if(!wasHydrated){throw new Error('A dehydrated suspense component was completed without a hydrated node. '+'This is probably a bug in React.');}prepareToHydrateHostSuspenseInstance(workInProgress);bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){var isTimedOutSuspense=nextState!==null;if(isTimedOutSuspense){// Don't count time spent in a timed out Suspense subtree as part of the base duration.
		var primaryChildFragment=workInProgress.child;if(primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator
		workInProgress.treeBaseDuration-=primaryChildFragment.treeBaseDuration;}}}}return false;}else {// We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
		// state since we're now exiting out of it. popHydrationState doesn't do that for us.
		resetHydrationState();if((workInProgress.flags&DidCapture)===NoFlags){// This boundary did not suspend so it's now hydrated and unsuspended.
		workInProgress.memoizedState=null;}// If nothing suspended, we need to schedule an effect to mark this boundary
		// as having hydrated so events know that they're free to be invoked.
		// It's also a signal to replay events and the suspense callback.
		// If something suspended, schedule an effect to attach retry listeners.
		// So we might as well always mark this.
		workInProgress.flags|=Update;bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){var _isTimedOutSuspense=nextState!==null;if(_isTimedOutSuspense){// Don't count time spent in a timed out Suspense subtree as part of the base duration.
		var _primaryChildFragment=workInProgress.child;if(_primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator
		workInProgress.treeBaseDuration-=_primaryChildFragment.treeBaseDuration;}}}}return false;}}else {// Successfully completed this tree. If this was a forced client render,
		// there may have been recoverable errors during first hydration
		// attempt. If so, add them to a queue so we can log them in the
		// commit phase.
		upgradeHydrationErrorsToRecoverable();// Fall through to normal Suspense path
		return true;}}function completeWork(current,workInProgress,renderLanes){var newProps=workInProgress.pendingProps;// Note: This intentionally doesn't check if we're hydrating because comparing
		// to the current tree provider fiber is just as fast and less error-prone.
		// Ideally we would have a special version of the work loop only
		// for hydration.
		popTreeContext(workInProgress);switch(workInProgress.tag){case IndeterminateComponent:case LazyComponent:case SimpleMemoComponent:case FunctionComponent:case ForwardRef:case Fragment:case Mode:case Profiler:case ContextConsumer:case MemoComponent:bubbleProperties(workInProgress);return null;case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){popContext(workInProgress);}bubbleProperties(workInProgress);return null;}case HostRoot:{var fiberRoot=workInProgress.stateNode;popHostContainer(workInProgress);popTopLevelContextObject(workInProgress);resetWorkInProgressVersions();if(fiberRoot.pendingContext){fiberRoot.context=fiberRoot.pendingContext;fiberRoot.pendingContext=null;}if(current===null||current.child===null){// If we hydrated, pop so that we can delete any remaining children
		// that weren't hydrated.
		var wasHydrated=popHydrationState(workInProgress);if(wasHydrated){// If we hydrated, then we'll need to schedule an update for
		// the commit side-effects on the root.
		markUpdate(workInProgress);}else {if(current!==null){var prevState=current.memoizedState;if(// Check if this is a client root
		!prevState.isDehydrated||// Check if we reverted to client rendering (e.g. due to an error)
		(workInProgress.flags&ForceClientRender)!==NoFlags){// Schedule an effect to clear this container at the start of the
		// next commit. This handles the case of React rendering into a
		// container with previous children. It's also safe to do for
		// updates too, because current.child would only be null if the
		// previous render was null (so the container would already
		// be empty).
		workInProgress.flags|=Snapshot;// If this was a forced client render, there may have been
		// recoverable errors during first hydration attempt. If so, add
		// them to a queue so we can log them in the commit phase.
		upgradeHydrationErrorsToRecoverable();}}}}updateHostContainer(current,workInProgress);bubbleProperties(workInProgress);return null;}case HostComponent:{popHostContext(workInProgress);var rootContainerInstance=getRootHostContainer();var type=workInProgress.type;if(current!==null&&workInProgress.stateNode!=null){updateHostComponent$1(current,workInProgress,type,newProps,rootContainerInstance);if(current.ref!==workInProgress.ref){markRef$1(workInProgress);}}else {if(!newProps){if(workInProgress.stateNode===null){throw new Error('We must have new props for new mounts. This error is likely '+'caused by a bug in React. Please file an issue.');}// This can happen when we abort work.
		bubbleProperties(workInProgress);return null;}var currentHostContext=getHostContext();// TODO: Move createInstance to beginWork and keep it on a context
		// "stack" as the parent. Then append children as we go in beginWork
		// or completeWork depending on whether we want to add them top->down or
		// bottom->up. Top->down is faster in IE11.
		var _wasHydrated=popHydrationState(workInProgress);if(_wasHydrated){// TODO: Move this and createInstance step into the beginPhase
		// to consolidate.
		if(prepareToHydrateHostInstance(workInProgress,rootContainerInstance,currentHostContext)){// If changes to the hydrated node need to be applied at the
		// commit-phase we mark this as such.
		markUpdate(workInProgress);}}else {var instance=createInstance(type,newProps,rootContainerInstance,currentHostContext,workInProgress);appendAllChildren(instance,workInProgress,false,false);workInProgress.stateNode=instance;// Certain renderers require commit-time effects for initial mount.
		// (eg DOM renderer supports auto-focus for certain elements).
		// Make sure such renderers get scheduled for later work.
		if(finalizeInitialChildren(instance,type,newProps,rootContainerInstance)){markUpdate(workInProgress);}}if(workInProgress.ref!==null){// If there is a ref on a host node we need to schedule a callback
		markRef$1(workInProgress);}}bubbleProperties(workInProgress);return null;}case HostText:{var newText=newProps;if(current&&workInProgress.stateNode!=null){var oldText=current.memoizedProps;// If we have an alternate, that means this is an update and we need
		// to schedule a side-effect to do the updates.
		updateHostText$1(current,workInProgress,oldText,newText);}else {if(typeof newText!=='string'){if(workInProgress.stateNode===null){throw new Error('We must have new props for new mounts. This error is likely '+'caused by a bug in React. Please file an issue.');}// This can happen when we abort work.
		}var _rootContainerInstance=getRootHostContainer();var _currentHostContext=getHostContext();var _wasHydrated2=popHydrationState(workInProgress);if(_wasHydrated2){if(prepareToHydrateHostTextInstance(workInProgress)){markUpdate(workInProgress);}}else {workInProgress.stateNode=createTextInstance(newText,_rootContainerInstance,_currentHostContext,workInProgress);}}bubbleProperties(workInProgress);return null;}case SuspenseComponent:{popSuspenseContext(workInProgress);var nextState=workInProgress.memoizedState;// Special path for dehydrated boundaries. We may eventually move this
		// to its own fiber type so that we can add other kinds of hydration
		// boundaries that aren't associated with a Suspense tree. In anticipation
		// of such a refactor, all the hydration logic is contained in
		// this branch.
		if(current===null||current.memoizedState!==null&&current.memoizedState.dehydrated!==null){var fallthroughToNormalSuspensePath=completeDehydratedSuspenseBoundary(current,workInProgress,nextState);if(!fallthroughToNormalSuspensePath){if(workInProgress.flags&ShouldCapture){// Special case. There were remaining unhydrated nodes. We treat
		// this as a mismatch. Revert to client rendering.
		return workInProgress;}else {// Did not finish hydrating, either because this is the initial
		// render or because something suspended.
		return null;}}// Continue with the normal Suspense path.
		}if((workInProgress.flags&DidCapture)!==NoFlags){// Something suspended. Re-render with the fallback children.
		workInProgress.lanes=renderLanes;// Do not reset the effect list.
		if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}// Don't bubble properties in this case.
		return workInProgress;}var nextDidTimeout=nextState!==null;var prevDidTimeout=current!==null&&current.memoizedState!==null;// a passive effect, which is when we process the transitions
		if(nextDidTimeout!==prevDidTimeout){// an effect to toggle the subtree's visibility. When we switch from
		// fallback -> primary, the inner Offscreen fiber schedules this effect
		// as part of its normal complete phase. But when we switch from
		// primary -> fallback, the inner Offscreen fiber does not have a complete
		// phase. So we need to schedule its effect here.
		//
		// We also use this flag to connect/disconnect the effects, but the same
		// logic applies: when re-connecting, the Offscreen fiber's complete
		// phase will handle scheduling the effect. It's only when the fallback
		// is active that we have to do anything special.
		if(nextDidTimeout){var _offscreenFiber2=workInProgress.child;_offscreenFiber2.flags|=Visibility;// TODO: This will still suspend a synchronous tree if anything
		// in the concurrent tree already suspended during this render.
		// This is a known bug.
		if((workInProgress.mode&ConcurrentMode)!==NoMode){// TODO: Move this back to throwException because this is too late
		// if this is a large tree which is common for initial loads. We
		// don't know if we should restart a render or not until we get
		// this marker, and this is too late.
		// If this render already had a ping or lower pri updates,
		// and this is the first time we know we're going to suspend we
		// should be able to immediately restart from within throwException.
		var hasInvisibleChildContext=current===null&&(workInProgress.memoizedProps.unstable_avoidThisFallback!==true||!enableSuspenseAvoidThisFallback);if(hasInvisibleChildContext||hasSuspenseContext(suspenseStackCursor.current,InvisibleParentSuspenseContext)){// If this was in an invisible tree or a new render, then showing
		// this boundary is ok.
		renderDidSuspend();}else {// Otherwise, we're going to have to hide content so we should
		// suspend for longer if possible.
		renderDidSuspendDelayIfPossible();}}}}var wakeables=workInProgress.updateQueue;if(wakeables!==null){// Schedule an effect to attach a retry listener to the promise.
		// TODO: Move to passive phase
		workInProgress.flags|=Update;}bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){if(nextDidTimeout){// Don't count time spent in a timed out Suspense subtree as part of the base duration.
		var primaryChildFragment=workInProgress.child;if(primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator
		workInProgress.treeBaseDuration-=primaryChildFragment.treeBaseDuration;}}}}return null;}case HostPortal:popHostContainer(workInProgress);updateHostContainer(current,workInProgress);if(current===null){preparePortalMount(workInProgress.stateNode.containerInfo);}bubbleProperties(workInProgress);return null;case ContextProvider:// Pop provider fiber
		var context=workInProgress.type._context;popProvider(context,workInProgress);bubbleProperties(workInProgress);return null;case IncompleteClassComponent:{// Same as class component case. I put it down here so that the tags are
		// sequential to ensure this switch is compiled to a jump table.
		var _Component=workInProgress.type;if(isContextProvider(_Component)){popContext(workInProgress);}bubbleProperties(workInProgress);return null;}case SuspenseListComponent:{popSuspenseContext(workInProgress);var renderState=workInProgress.memoizedState;if(renderState===null){// We're running in the default, "independent" mode.
		// We don't do anything in this mode.
		bubbleProperties(workInProgress);return null;}var didSuspendAlready=(workInProgress.flags&DidCapture)!==NoFlags;var renderedTail=renderState.rendering;if(renderedTail===null){// We just rendered the head.
		if(!didSuspendAlready){// This is the first pass. We need to figure out if anything is still
		// suspended in the rendered set.
		// If new content unsuspended, but there's still some content that
		// didn't. Then we need to do a second pass that forces everything
		// to keep showing their fallbacks.
		// We might be suspended if something in this render pass suspended, or
		// something in the previous committed pass suspended. Otherwise,
		// there's no chance so we can skip the expensive call to
		// findFirstSuspended.
		var cannotBeSuspended=renderHasNotSuspendedYet()&&(current===null||(current.flags&DidCapture)===NoFlags);if(!cannotBeSuspended){var row=workInProgress.child;while(row!==null){var suspended=findFirstSuspended(row);if(suspended!==null){didSuspendAlready=true;workInProgress.flags|=DidCapture;cutOffTailIfNeeded(renderState,false);// If this is a newly suspended tree, it might not get committed as
		// part of the second pass. In that case nothing will subscribe to
		// its thenables. Instead, we'll transfer its thenables to the
		// SuspenseList so that it can retry if they resolve.
		// There might be multiple of these in the list but since we're
		// going to wait for all of them anyway, it doesn't really matter
		// which ones gets to ping. In theory we could get clever and keep
		// track of how many dependencies remain but it gets tricky because
		// in the meantime, we can add/remove/change items and dependencies.
		// We might bail out of the loop before finding any but that
		// doesn't matter since that means that the other boundaries that
		// we did find already has their listeners attached.
		var newThenables=suspended.updateQueue;if(newThenables!==null){workInProgress.updateQueue=newThenables;workInProgress.flags|=Update;}// Rerender the whole list, but this time, we'll force fallbacks
		// to stay in place.
		// Reset the effect flags before doing the second pass since that's now invalid.
		// Reset the child fibers to their original state.
		workInProgress.subtreeFlags=NoFlags;resetChildFibers(workInProgress,renderLanes);// Set up the Suspense Context to force suspense and immediately
		// rerender the children.
		pushSuspenseContext(workInProgress,setShallowSuspenseContext(suspenseStackCursor.current,ForceSuspenseFallback));// Don't bubble properties in this case.
		return workInProgress.child;}row=row.sibling;}}if(renderState.tail!==null&&now()>getRenderTargetTime()){// We have already passed our CPU deadline but we still have rows
		// left in the tail. We'll just give up further attempts to render
		// the main content and only render fallbacks.
		workInProgress.flags|=DidCapture;didSuspendAlready=true;cutOffTailIfNeeded(renderState,false);// Since nothing actually suspended, there will nothing to ping this
		// to get it started back up to attempt the next item. While in terms
		// of priority this work has the same priority as this current render,
		// it's not part of the same transition once the transition has
		// committed. If it's sync, we still want to yield so that it can be
		// painted. Conceptually, this is really the same as pinging.
		// We can use any RetryLane even if it's the one currently rendering
		// since we're leaving it behind on this node.
		workInProgress.lanes=SomeRetryLane;}}else {cutOffTailIfNeeded(renderState,false);}// Next we're going to render the tail.
		}else {// Append the rendered row to the child list.
		if(!didSuspendAlready){var _suspended=findFirstSuspended(renderedTail);if(_suspended!==null){workInProgress.flags|=DidCapture;didSuspendAlready=true;// Ensure we transfer the update queue to the parent so that it doesn't
		// get lost if this row ends up dropped during a second pass.
		var _newThenables=_suspended.updateQueue;if(_newThenables!==null){workInProgress.updateQueue=_newThenables;workInProgress.flags|=Update;}cutOffTailIfNeeded(renderState,true);// This might have been modified.
		if(renderState.tail===null&&renderState.tailMode==='hidden'&&!renderedTail.alternate&&!getIsHydrating()// We don't cut it if we're hydrating.
		){// We're done.
		bubbleProperties(workInProgress);return null;}}else if(// The time it took to render last row is greater than the remaining
		// time we have to render. So rendering one more row would likely
		// exceed it.
		now()*2-renderState.renderingStartTime>getRenderTargetTime()&&renderLanes!==OffscreenLane){// We have now passed our CPU deadline and we'll just give up further
		// attempts to render the main content and only render fallbacks.
		// The assumption is that this is usually faster.
		workInProgress.flags|=DidCapture;didSuspendAlready=true;cutOffTailIfNeeded(renderState,false);// Since nothing actually suspended, there will nothing to ping this
		// to get it started back up to attempt the next item. While in terms
		// of priority this work has the same priority as this current render,
		// it's not part of the same transition once the transition has
		// committed. If it's sync, we still want to yield so that it can be
		// painted. Conceptually, this is really the same as pinging.
		// We can use any RetryLane even if it's the one currently rendering
		// since we're leaving it behind on this node.
		workInProgress.lanes=SomeRetryLane;}}if(renderState.isBackwards){// The effect list of the backwards tail will have been added
		// to the end. This breaks the guarantee that life-cycles fire in
		// sibling order but that isn't a strong guarantee promised by React.
		// Especially since these might also just pop in during future commits.
		// Append to the beginning of the list.
		renderedTail.sibling=workInProgress.child;workInProgress.child=renderedTail;}else {var previousSibling=renderState.last;if(previousSibling!==null){previousSibling.sibling=renderedTail;}else {workInProgress.child=renderedTail;}renderState.last=renderedTail;}}if(renderState.tail!==null){// We still have tail rows to render.
		// Pop a row.
		var next=renderState.tail;renderState.rendering=next;renderState.tail=next.sibling;renderState.renderingStartTime=now();next.sibling=null;// Restore the context.
		// TODO: We can probably just avoid popping it instead and only
		// setting it the first time we go from not suspended to suspended.
		var suspenseContext=suspenseStackCursor.current;if(didSuspendAlready){suspenseContext=setShallowSuspenseContext(suspenseContext,ForceSuspenseFallback);}else {suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);}pushSuspenseContext(workInProgress,suspenseContext);// Do a pass over the next row.
		// Don't bubble properties in this case.
		return next;}bubbleProperties(workInProgress);return null;}case ScopeComponent:{break;}case OffscreenComponent:case LegacyHiddenComponent:{popRenderLanes(workInProgress);var _nextState=workInProgress.memoizedState;var nextIsHidden=_nextState!==null;if(current!==null){var _prevState=current.memoizedState;var prevIsHidden=_prevState!==null;if(prevIsHidden!==nextIsHidden&&// LegacyHidden doesn't do any hiding — it only pre-renders.
		!enableLegacyHidden){workInProgress.flags|=Visibility;}}if(!nextIsHidden||(workInProgress.mode&ConcurrentMode)===NoMode){bubbleProperties(workInProgress);}else {// Don't bubble properties for hidden children unless we're rendering
		// at offscreen priority.
		if(includesSomeLane(subtreeRenderLanes,OffscreenLane)){bubbleProperties(workInProgress);{// Check if there was an insertion or update in the hidden subtree.
		// If so, we need to hide those nodes in the commit phase, so
		// schedule a visibility effect.
		if(workInProgress.subtreeFlags&(Placement|Update)){workInProgress.flags|=Visibility;}}}}return null;}case CacheComponent:{return null;}case TracingMarkerComponent:{return null;}}throw new Error("Unknown unit of work tag ("+workInProgress.tag+"). This error is likely caused by a bug in "+'React. Please file an issue.');}function unwindWork(current,workInProgress,renderLanes){// Note: This intentionally doesn't check if we're hydrating because comparing
		// to the current tree provider fiber is just as fast and less error-prone.
		// Ideally we would have a special version of the work loop only
		// for hydration.
		popTreeContext(workInProgress);switch(workInProgress.tag){case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){popContext(workInProgress);}var flags=workInProgress.flags;if(flags&ShouldCapture){workInProgress.flags=flags&~ShouldCapture|DidCapture;if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}return workInProgress;}return null;}case HostRoot:{workInProgress.stateNode;popHostContainer(workInProgress);popTopLevelContextObject(workInProgress);resetWorkInProgressVersions();var _flags=workInProgress.flags;if((_flags&ShouldCapture)!==NoFlags&&(_flags&DidCapture)===NoFlags){// There was an error during render that wasn't captured by a suspense
		// boundary. Do a second pass on the root to unmount the children.
		workInProgress.flags=_flags&~ShouldCapture|DidCapture;return workInProgress;}// We unwound to the root without completing it. Exit.
		return null;}case HostComponent:{// TODO: popHydrationState
		popHostContext(workInProgress);return null;}case SuspenseComponent:{popSuspenseContext(workInProgress);var suspenseState=workInProgress.memoizedState;if(suspenseState!==null&&suspenseState.dehydrated!==null){if(workInProgress.alternate===null){throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in '+'React. Please file an issue.');}resetHydrationState();}var _flags2=workInProgress.flags;if(_flags2&ShouldCapture){workInProgress.flags=_flags2&~ShouldCapture|DidCapture;// Captured a suspense effect. Re-render the boundary.
		if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}return workInProgress;}return null;}case SuspenseListComponent:{popSuspenseContext(workInProgress);// SuspenseList doesn't actually catch anything. It should've been
		// caught by a nested boundary. If not, it should bubble through.
		return null;}case HostPortal:popHostContainer(workInProgress);return null;case ContextProvider:var context=workInProgress.type._context;popProvider(context,workInProgress);return null;case OffscreenComponent:case LegacyHiddenComponent:popRenderLanes(workInProgress);return null;case CacheComponent:return null;default:return null;}}function unwindInterruptedWork(current,interruptedWork,renderLanes){// Note: This intentionally doesn't check if we're hydrating because comparing
		// to the current tree provider fiber is just as fast and less error-prone.
		// Ideally we would have a special version of the work loop only
		// for hydration.
		popTreeContext(interruptedWork);switch(interruptedWork.tag){case ClassComponent:{var childContextTypes=interruptedWork.type.childContextTypes;if(childContextTypes!==null&&childContextTypes!==undefined){popContext(interruptedWork);}break;}case HostRoot:{interruptedWork.stateNode;popHostContainer(interruptedWork);popTopLevelContextObject(interruptedWork);resetWorkInProgressVersions();break;}case HostComponent:{popHostContext(interruptedWork);break;}case HostPortal:popHostContainer(interruptedWork);break;case SuspenseComponent:popSuspenseContext(interruptedWork);break;case SuspenseListComponent:popSuspenseContext(interruptedWork);break;case ContextProvider:var context=interruptedWork.type._context;popProvider(context,interruptedWork);break;case OffscreenComponent:case LegacyHiddenComponent:popRenderLanes(interruptedWork);break;}}var didWarnAboutUndefinedSnapshotBeforeUpdate=null;{didWarnAboutUndefinedSnapshotBeforeUpdate=new Set();}// Used during the commit phase to track the state of the Offscreen component stack.
		// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
		// Only used when enableSuspenseLayoutEffectSemantics is enabled.
		var offscreenSubtreeIsHidden=false;var offscreenSubtreeWasHidden=false;var PossiblyWeakSet=typeof WeakSet==='function'?WeakSet:Set;var nextEffect=null;// Used for Profiling builds to track updaters.
		var inProgressLanes=null;var inProgressRoot=null;function reportUncaughtErrorInDEV(error){// Wrapping each small part of the commit phase into a guarded
		// callback is a bit too slow (https://github.com/facebook/react/pull/21666).
		// But we rely on it to surface errors to DEV tools like overlays
		// (https://github.com/facebook/react/issues/21712).
		// As a compromise, rethrow only caught errors in a guard.
		{invokeGuardedCallback(null,function(){throw error;});clearCaughtError();}}var callComponentWillUnmountWithTimer=function(current,instance){instance.props=current.memoizedProps;instance.state=current.memoizedState;if(current.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentWillUnmount();}finally{recordLayoutEffectDuration(current);}}else {instance.componentWillUnmount();}};// Capture errors so they don't interrupt mounting.
		function safelyCallCommitHookLayoutEffectListMount(current,nearestMountedAncestor){try{commitHookEffectListMount(Layout,current);}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt unmounting.
		function safelyCallComponentWillUnmount(current,nearestMountedAncestor,instance){try{callComponentWillUnmountWithTimer(current,instance);}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt mounting.
		function safelyCallComponentDidMount(current,nearestMountedAncestor,instance){try{instance.componentDidMount();}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt mounting.
		function safelyAttachRef(current,nearestMountedAncestor){try{commitAttachRef(current);}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}function safelyDetachRef(current,nearestMountedAncestor){var ref=current.ref;if(ref!==null){if(typeof ref==='function'){var retVal;try{if(enableProfilerTimer&&enableProfilerCommitHooks&&current.mode&ProfileMode){try{startLayoutEffectTimer();retVal=ref(null);}finally{recordLayoutEffectDuration(current);}}else {retVal=ref(null);}}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}{if(typeof retVal==='function'){error('Unexpected return value from a callback ref in %s. '+'A callback ref should not return a function.',getComponentNameFromFiber(current));}}}else {ref.current=null;}}}function safelyCallDestroy(current,nearestMountedAncestor,destroy){try{destroy();}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}var shouldFireAfterActiveInstanceBlur=false;function commitBeforeMutationEffects(root,firstChild){prepareForCommit(root.containerInfo);nextEffect=firstChild;commitBeforeMutationEffects_begin();// We no longer need to track the active instance fiber
		var shouldFire=shouldFireAfterActiveInstanceBlur;shouldFireAfterActiveInstanceBlur=false;return shouldFire;}function commitBeforeMutationEffects_begin(){while(nextEffect!==null){var fiber=nextEffect;// This phase is only used for beforeActiveInstanceBlur.
		var child=fiber.child;if((fiber.subtreeFlags&BeforeMutationMask)!==NoFlags&&child!==null){child.return=fiber;nextEffect=child;}else {commitBeforeMutationEffects_complete();}}}function commitBeforeMutationEffects_complete(){while(nextEffect!==null){var fiber=nextEffect;setCurrentFiber(fiber);try{commitBeforeMutationEffectsOnFiber(fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitBeforeMutationEffectsOnFiber(finishedWork){var current=finishedWork.alternate;var flags=finishedWork.flags;if((flags&Snapshot)!==NoFlags){setCurrentFiber(finishedWork);switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{break;}case ClassComponent:{if(current!==null){var prevProps=current.memoizedProps;var prevState=current.memoizedState;var instance=finishedWork.stateNode;// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'getSnapshotBeforeUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'getSnapshotBeforeUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}var snapshot=instance.getSnapshotBeforeUpdate(finishedWork.elementType===finishedWork.type?prevProps:resolveDefaultProps(finishedWork.type,prevProps),prevState);{var didWarnSet=didWarnAboutUndefinedSnapshotBeforeUpdate;if(snapshot===undefined&&!didWarnSet.has(finishedWork.type)){didWarnSet.add(finishedWork.type);error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) '+'must be returned. You have returned undefined.',getComponentNameFromFiber(finishedWork));}}instance.__reactInternalSnapshotBeforeUpdate=snapshot;}break;}case HostRoot:{{var root=finishedWork.stateNode;clearContainer(root.containerInfo);}break;}case HostComponent:case HostText:case HostPortal:case IncompleteClassComponent:// Nothing to do for these component types
		break;default:{throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}}resetCurrentFiber();}}function commitHookEffectListUnmount(flags,finishedWork,nearestMountedAncestor){var updateQueue=finishedWork.updateQueue;var lastEffect=updateQueue!==null?updateQueue.lastEffect:null;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{if((effect.tag&flags)===flags){// Unmount
		var destroy=effect.destroy;effect.destroy=undefined;if(destroy!==undefined){{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectUnmountStarted(finishedWork);}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectUnmountStarted(finishedWork);}}{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(true);}}safelyCallDestroy(finishedWork,nearestMountedAncestor,destroy);{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(false);}}{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectUnmountStopped();}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectUnmountStopped();}}}}effect=effect.next;}while(effect!==firstEffect);}}function commitHookEffectListMount(flags,finishedWork){var updateQueue=finishedWork.updateQueue;var lastEffect=updateQueue!==null?updateQueue.lastEffect:null;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{if((effect.tag&flags)===flags){{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectMountStarted(finishedWork);}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectMountStarted(finishedWork);}}// Mount
		var create=effect.create;{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(true);}}effect.destroy=create();{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(false);}}{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectMountStopped();}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectMountStopped();}}{var destroy=effect.destroy;if(destroy!==undefined&&typeof destroy!=='function'){var hookName=void 0;if((effect.tag&Layout)!==NoFlags){hookName='useLayoutEffect';}else if((effect.tag&Insertion)!==NoFlags){hookName='useInsertionEffect';}else {hookName='useEffect';}var addendum=void 0;if(destroy===null){addendum=' You returned null. If your effect does not require clean '+'up, return undefined (or nothing).';}else if(typeof destroy.then==='function'){addendum='\n\nIt looks like you wrote '+hookName+'(async () => ...) or returned a Promise. '+'Instead, write the async function inside your effect '+'and call it immediately:\n\n'+hookName+'(() => {\n'+'  async function fetchData() {\n'+'    // You can await here\n'+'    const response = await MyAPI.getData(someId);\n'+'    // ...\n'+'  }\n'+'  fetchData();\n'+"}, [someId]); // Or [] if effect doesn't need props or state\n\n"+'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';}else {addendum=' You returned: '+destroy;}error('%s must not return anything besides a function, '+'which is used for clean-up.%s',hookName,addendum);}}}effect=effect.next;}while(effect!==firstEffect);}}function commitPassiveEffectDurations(finishedRoot,finishedWork){{// Only Profilers with work in their subtree will have an Update effect scheduled.
		if((finishedWork.flags&Update)!==NoFlags){switch(finishedWork.tag){case Profiler:{var passiveEffectDuration=finishedWork.stateNode.passiveEffectDuration;var _finishedWork$memoize=finishedWork.memoizedProps,id=_finishedWork$memoize.id,onPostCommit=_finishedWork$memoize.onPostCommit;// This value will still reflect the previous commit phase.
		// It does not get reset until the start of the next commit phase.
		var commitTime=getCommitTime();var phase=finishedWork.alternate===null?'mount':'update';{if(isCurrentUpdateNested()){phase='nested-update';}}if(typeof onPostCommit==='function'){onPostCommit(id,phase,passiveEffectDuration,commitTime);}// Bubble times to the next nearest ancestor Profiler.
		// After we process that Profiler, we'll bubble further up.
		var parentFiber=finishedWork.return;outer:while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.passiveEffectDuration+=passiveEffectDuration;break outer;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.passiveEffectDuration+=passiveEffectDuration;break outer;}parentFiber=parentFiber.return;}break;}}}}}function commitLayoutEffectOnFiber(finishedRoot,current,finishedWork,committedLanes){if((finishedWork.flags&LayoutMask)!==NoFlags){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(!offscreenSubtreeWasHidden){// At this point layout effects have already been destroyed (during mutation phase).
		// This is done to prevent sibling component effects from interfering with each other,
		// e.g. a destroy function in one component should never override a ref set
		// by a create function in another component during the same commit.
		if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListMount(Layout|HasEffect,finishedWork);}finally{recordLayoutEffectDuration(finishedWork);}}else {commitHookEffectListMount(Layout|HasEffect,finishedWork);}}break;}case ClassComponent:{var instance=finishedWork.stateNode;if(finishedWork.flags&Update){if(!offscreenSubtreeWasHidden){if(current===null){// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'componentDidMount. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'componentDidMount. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentDidMount();}finally{recordLayoutEffectDuration(finishedWork);}}else {instance.componentDidMount();}}else {var prevProps=finishedWork.elementType===finishedWork.type?current.memoizedProps:resolveDefaultProps(finishedWork.type,current.memoizedProps);var prevState=current.memoizedState;// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'componentDidUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'componentDidUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentDidUpdate(prevProps,prevState,instance.__reactInternalSnapshotBeforeUpdate);}finally{recordLayoutEffectDuration(finishedWork);}}else {instance.componentDidUpdate(prevProps,prevState,instance.__reactInternalSnapshotBeforeUpdate);}}}}// TODO: I think this is now always non-null by the time it reaches the
		// commit phase. Consider removing the type check.
		var updateQueue=finishedWork.updateQueue;if(updateQueue!==null){{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'processing the update queue. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'processing the update queue. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		commitUpdateQueue(finishedWork,updateQueue,instance);}break;}case HostRoot:{// TODO: I think this is now always non-null by the time it reaches the
		// commit phase. Consider removing the type check.
		var _updateQueue=finishedWork.updateQueue;if(_updateQueue!==null){var _instance=null;if(finishedWork.child!==null){switch(finishedWork.child.tag){case HostComponent:_instance=getPublicInstance(finishedWork.child.stateNode);break;case ClassComponent:_instance=finishedWork.child.stateNode;break;}}commitUpdateQueue(finishedWork,_updateQueue,_instance);}break;}case HostComponent:{var _instance2=finishedWork.stateNode;// Renderers may schedule work to be done after host components are mounted
		// (eg DOM renderer may schedule auto-focus for inputs and form controls).
		// These effects should only be committed when components are first mounted,
		// aka when there is no current/alternate.
		if(current===null&&finishedWork.flags&Update){var type=finishedWork.type;var props=finishedWork.memoizedProps;commitMount(_instance2,type,props);}break;}case HostText:{// We have no life-cycles associated with text.
		break;}case HostPortal:{// We have no life-cycles associated with portals.
		break;}case Profiler:{{var _finishedWork$memoize2=finishedWork.memoizedProps,onCommit=_finishedWork$memoize2.onCommit,onRender=_finishedWork$memoize2.onRender;var effectDuration=finishedWork.stateNode.effectDuration;var commitTime=getCommitTime();var phase=current===null?'mount':'update';{if(isCurrentUpdateNested()){phase='nested-update';}}if(typeof onRender==='function'){onRender(finishedWork.memoizedProps.id,phase,finishedWork.actualDuration,finishedWork.treeBaseDuration,finishedWork.actualStartTime,commitTime);}{if(typeof onCommit==='function'){onCommit(finishedWork.memoizedProps.id,phase,effectDuration,commitTime);}// Schedule a passive effect for this Profiler to call onPostCommit hooks.
		// This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
		// because the effect is also where times bubble to parent Profilers.
		enqueuePendingPassiveProfilerEffect(finishedWork);// Propagate layout effect durations to the next nearest Profiler ancestor.
		// Do not reset these values until the next render so DevTools has a chance to read them first.
		var parentFiber=finishedWork.return;outer:while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.effectDuration+=effectDuration;break outer;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.effectDuration+=effectDuration;break outer;}parentFiber=parentFiber.return;}}}break;}case SuspenseComponent:{commitSuspenseHydrationCallbacks(finishedRoot,finishedWork);break;}case SuspenseListComponent:case IncompleteClassComponent:case ScopeComponent:case OffscreenComponent:case LegacyHiddenComponent:case TracingMarkerComponent:{break;}default:throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}}if(!offscreenSubtreeWasHidden){{if(finishedWork.flags&Ref){commitAttachRef(finishedWork);}}}}function reappearLayoutEffectsOnFiber(node){// Turn on layout effects in a tree that previously disappeared.
		// TODO (Offscreen) Check: flags & LayoutStatic
		switch(node.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(node.mode&ProfileMode){try{startLayoutEffectTimer();safelyCallCommitHookLayoutEffectListMount(node,node.return);}finally{recordLayoutEffectDuration(node);}}else {safelyCallCommitHookLayoutEffectListMount(node,node.return);}break;}case ClassComponent:{var instance=node.stateNode;if(typeof instance.componentDidMount==='function'){safelyCallComponentDidMount(node,node.return,instance);}safelyAttachRef(node,node.return);break;}case HostComponent:{safelyAttachRef(node,node.return);break;}}}function hideOrUnhideAllChildren(finishedWork,isHidden){// Only hide or unhide the top-most host nodes.
		var hostSubtreeRoot=null;{// We only have the top Fiber that was inserted but we need to recurse down its
		// children to find all the terminal nodes.
		var node=finishedWork;while(true){if(node.tag===HostComponent){if(hostSubtreeRoot===null){hostSubtreeRoot=node;try{var instance=node.stateNode;if(isHidden){hideInstance(instance);}else {unhideInstance(node.stateNode,node.memoizedProps);}}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}else if(node.tag===HostText){if(hostSubtreeRoot===null){try{var _instance3=node.stateNode;if(isHidden){hideTextInstance(_instance3);}else {unhideTextInstance(_instance3,node.memoizedProps);}}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}else if((node.tag===OffscreenComponent||node.tag===LegacyHiddenComponent)&&node.memoizedState!==null&&node!==finishedWork);else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===finishedWork){return;}while(node.sibling===null){if(node.return===null||node.return===finishedWork){return;}if(hostSubtreeRoot===node){hostSubtreeRoot=null;}node=node.return;}if(hostSubtreeRoot===node){hostSubtreeRoot=null;}node.sibling.return=node.return;node=node.sibling;}}}function commitAttachRef(finishedWork){var ref=finishedWork.ref;if(ref!==null){var instance=finishedWork.stateNode;var instanceToUse;switch(finishedWork.tag){case HostComponent:instanceToUse=getPublicInstance(instance);break;default:instanceToUse=instance;}// Moved outside to ensure DCE works with this flag
		if(typeof ref==='function'){var retVal;if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();retVal=ref(instanceToUse);}finally{recordLayoutEffectDuration(finishedWork);}}else {retVal=ref(instanceToUse);}{if(typeof retVal==='function'){error('Unexpected return value from a callback ref in %s. '+'A callback ref should not return a function.',getComponentNameFromFiber(finishedWork));}}}else {{if(!ref.hasOwnProperty('current')){error('Unexpected ref object provided for %s. '+'Use either a ref-setter function or React.createRef().',getComponentNameFromFiber(finishedWork));}}ref.current=instanceToUse;}}}function detachFiberMutation(fiber){// Cut off the return pointer to disconnect it from the tree.
		// This enables us to detect and warn against state updates on an unmounted component.
		// It also prevents events from bubbling from within disconnected components.
		//
		// Ideally, we should also clear the child pointer of the parent alternate to let this
		// get GC:ed but we don't know which for sure which parent is the current
		// one so we'll settle for GC:ing the subtree of this child.
		// This child itself will be GC:ed when the parent updates the next time.
		//
		// Note that we can't clear child or sibling pointers yet.
		// They're needed for passive effects and for findDOMNode.
		// We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
		//
		// Don't reset the alternate yet, either. We need that so we can detach the
		// alternate's fields in the passive phase. Clearing the return pointer is
		// sufficient for findDOMNode semantics.
		var alternate=fiber.alternate;if(alternate!==null){alternate.return=null;}fiber.return=null;}function detachFiberAfterEffects(fiber){var alternate=fiber.alternate;if(alternate!==null){fiber.alternate=null;detachFiberAfterEffects(alternate);}// Note: Defensively using negation instead of < in case
		// `deletedTreeCleanUpLevel` is undefined.
		{// Clear cyclical Fiber fields. This level alone is designed to roughly
		// approximate the planned Fiber refactor. In that world, `setState` will be
		// bound to a special "instance" object instead of a Fiber. The Instance
		// object will not have any of these fields. It will only be connected to
		// the fiber tree via a single link at the root. So if this level alone is
		// sufficient to fix memory issues, that bodes well for our plans.
		fiber.child=null;fiber.deletions=null;fiber.sibling=null;// The `stateNode` is cyclical because on host nodes it points to the host
		// tree, which has its own pointers to children, parents, and siblings.
		// The other host nodes also point back to fibers, so we should detach that
		// one, too.
		if(fiber.tag===HostComponent){var hostInstance=fiber.stateNode;if(hostInstance!==null){detachDeletedInstance(hostInstance);}}fiber.stateNode=null;// I'm intentionally not clearing the `return` field in this level. We
		// already disconnect the `return` pointer at the root of the deleted
		// subtree (in `detachFiberMutation`). Besides, `return` by itself is not
		// cyclical — it's only cyclical when combined with `child`, `sibling`, and
		// `alternate`. But we'll clear it in the next level anyway, just in case.
		{fiber._debugOwner=null;}{// Theoretically, nothing in here should be necessary, because we already
		// disconnected the fiber from the tree. So even if something leaks this
		// particular fiber, it won't leak anything else
		//
		// The purpose of this branch is to be super aggressive so we can measure
		// if there's any difference in memory impact. If there is, that could
		// indicate a React leak we don't know about.
		fiber.return=null;fiber.dependencies=null;fiber.memoizedProps=null;fiber.memoizedState=null;fiber.pendingProps=null;fiber.stateNode=null;// TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
		fiber.updateQueue=null;}}}function getHostParentFiber(fiber){var parent=fiber.return;while(parent!==null){if(isHostParent(parent)){return parent;}parent=parent.return;}throw new Error('Expected to find a host parent. This error is likely caused by a bug '+'in React. Please file an issue.');}function isHostParent(fiber){return fiber.tag===HostComponent||fiber.tag===HostRoot||fiber.tag===HostPortal;}function getHostSibling(fiber){// We're going to search forward into the tree until we find a sibling host
		// node. Unfortunately, if multiple insertions are done in a row we have to
		// search past them. This leads to exponential search for the next sibling.
		// TODO: Find a more efficient way to do this.
		var node=fiber;siblings:while(true){// If we didn't find anything, let's try the next sibling.
		while(node.sibling===null){if(node.return===null||isHostParent(node.return)){// If we pop out of the root or hit the parent the fiber we are the
		// last sibling.
		return null;}node=node.return;}node.sibling.return=node.return;node=node.sibling;while(node.tag!==HostComponent&&node.tag!==HostText&&node.tag!==DehydratedFragment){// If it is not host node and, we might have a host node inside it.
		// Try to search down until we find one.
		if(node.flags&Placement){// If we don't have a child, try the siblings instead.
		continue siblings;}// If we don't have a child, try the siblings instead.
		// We also skip portals because they are not part of this host tree.
		if(node.child===null||node.tag===HostPortal){continue siblings;}else {node.child.return=node;node=node.child;}}// Check if this host node is stable or about to be placed.
		if(!(node.flags&Placement)){// Found it!
		return node.stateNode;}}}function commitPlacement(finishedWork){var parentFiber=getHostParentFiber(finishedWork);// Note: these two variables *must* always be updated together.
		switch(parentFiber.tag){case HostComponent:{var parent=parentFiber.stateNode;if(parentFiber.flags&ContentReset){// Reset the text content of the parent before doing any insertions
		resetTextContent(parent);// Clear ContentReset from the effect tag
		parentFiber.flags&=~ContentReset;}var before=getHostSibling(finishedWork);// We only have the top Fiber that was inserted but we need to recurse down its
		// children to find all the terminal nodes.
		insertOrAppendPlacementNode(finishedWork,before,parent);break;}case HostRoot:case HostPortal:{var _parent=parentFiber.stateNode.containerInfo;var _before=getHostSibling(finishedWork);insertOrAppendPlacementNodeIntoContainer(finishedWork,_before,_parent);break;}// eslint-disable-next-line-no-fallthrough
		default:throw new Error('Invalid host parent fiber. This error is likely caused by a bug '+'in React. Please file an issue.');}}function insertOrAppendPlacementNodeIntoContainer(node,before,parent){var tag=node.tag;var isHost=tag===HostComponent||tag===HostText;if(isHost){var stateNode=node.stateNode;if(before){insertInContainerBefore(parent,stateNode,before);}else {appendChildToContainer(parent,stateNode);}}else if(tag===HostPortal);else {var child=node.child;if(child!==null){insertOrAppendPlacementNodeIntoContainer(child,before,parent);var sibling=child.sibling;while(sibling!==null){insertOrAppendPlacementNodeIntoContainer(sibling,before,parent);sibling=sibling.sibling;}}}}function insertOrAppendPlacementNode(node,before,parent){var tag=node.tag;var isHost=tag===HostComponent||tag===HostText;if(isHost){var stateNode=node.stateNode;if(before){insertBefore(parent,stateNode,before);}else {appendChild(parent,stateNode);}}else if(tag===HostPortal);else {var child=node.child;if(child!==null){insertOrAppendPlacementNode(child,before,parent);var sibling=child.sibling;while(sibling!==null){insertOrAppendPlacementNode(sibling,before,parent);sibling=sibling.sibling;}}}}// These are tracked on the stack as we recursively traverse a
		// deleted subtree.
		// TODO: Update these during the whole mutation phase, not just during
		// a deletion.
		var hostParent=null;var hostParentIsContainer=false;function commitDeletionEffects(root,returnFiber,deletedFiber){{// We only have the top Fiber that was deleted but we need to recurse down its
		// children to find all the terminal nodes.
		// Recursively delete all host nodes from the parent, detach refs, clean
		// up mounted layout effects, and call componentWillUnmount.
		// We only need to remove the topmost host child in each branch. But then we
		// still need to keep traversing to unmount effects, refs, and cWU. TODO: We
		// could split this into two separate traversals functions, where the second
		// one doesn't include any removeChild logic. This is maybe the same
		// function as "disappearLayoutEffects" (or whatever that turns into after
		// the layout phase is refactored to use recursion).
		// Before starting, find the nearest host parent on the stack so we know
		// which instance/container to remove the children from.
		// TODO: Instead of searching up the fiber return path on every deletion, we
		// can track the nearest host component on the JS stack as we traverse the
		// tree during the commit phase. This would make insertions faster, too.
		var parent=returnFiber;findParent:while(parent!==null){switch(parent.tag){case HostComponent:{hostParent=parent.stateNode;hostParentIsContainer=false;break findParent;}case HostRoot:{hostParent=parent.stateNode.containerInfo;hostParentIsContainer=true;break findParent;}case HostPortal:{hostParent=parent.stateNode.containerInfo;hostParentIsContainer=true;break findParent;}}parent=parent.return;}if(hostParent===null){throw new Error('Expected to find a host parent. This error is likely caused by '+'a bug in React. Please file an issue.');}commitDeletionEffectsOnFiber(root,returnFiber,deletedFiber);hostParent=null;hostParentIsContainer=false;}detachFiberMutation(deletedFiber);}function recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,parent){// TODO: Use a static flag to skip trees that don't have unmount effects
		var child=parent.child;while(child!==null){commitDeletionEffectsOnFiber(finishedRoot,nearestMountedAncestor,child);child=child.sibling;}}function commitDeletionEffectsOnFiber(finishedRoot,nearestMountedAncestor,deletedFiber){onCommitUnmount(deletedFiber);// The cases in this outer switch modify the stack before they traverse
		// into their subtree. There are simpler cases in the inner switch
		// that don't modify the stack.
		switch(deletedFiber.tag){case HostComponent:{if(!offscreenSubtreeWasHidden){safelyDetachRef(deletedFiber,nearestMountedAncestor);}// Intentional fallthrough to next branch
		}// eslint-disable-next-line-no-fallthrough
		case HostText:{// We only need to remove the nearest host child. Set the host parent
		// to `null` on the stack to indicate that nested children don't
		// need to be removed.
		{var prevHostParent=hostParent;var prevHostParentIsContainer=hostParentIsContainer;hostParent=null;recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);hostParent=prevHostParent;hostParentIsContainer=prevHostParentIsContainer;if(hostParent!==null){// Now that all the child effects have unmounted, we can remove the
		// node from the tree.
		if(hostParentIsContainer){removeChildFromContainer(hostParent,deletedFiber.stateNode);}else {removeChild(hostParent,deletedFiber.stateNode);}}}return;}case DehydratedFragment:{// Delete the dehydrated suspense boundary and all of its content.
		{if(hostParent!==null){if(hostParentIsContainer){clearSuspenseBoundaryFromContainer(hostParent,deletedFiber.stateNode);}else {clearSuspenseBoundary(hostParent,deletedFiber.stateNode);}}}return;}case HostPortal:{{// When we go into a portal, it becomes the parent to remove from.
		var _prevHostParent=hostParent;var _prevHostParentIsContainer=hostParentIsContainer;hostParent=deletedFiber.stateNode.containerInfo;hostParentIsContainer=true;recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);hostParent=_prevHostParent;hostParentIsContainer=_prevHostParentIsContainer;}return;}case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{if(!offscreenSubtreeWasHidden){var updateQueue=deletedFiber.updateQueue;if(updateQueue!==null){var lastEffect=updateQueue.lastEffect;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{var _effect=effect,destroy=_effect.destroy,tag=_effect.tag;if(destroy!==undefined){if((tag&Insertion)!==NoFlags$1){safelyCallDestroy(deletedFiber,nearestMountedAncestor,destroy);}else if((tag&Layout)!==NoFlags$1){{markComponentLayoutEffectUnmountStarted(deletedFiber);}if(deletedFiber.mode&ProfileMode){startLayoutEffectTimer();safelyCallDestroy(deletedFiber,nearestMountedAncestor,destroy);recordLayoutEffectDuration(deletedFiber);}else {safelyCallDestroy(deletedFiber,nearestMountedAncestor,destroy);}{markComponentLayoutEffectUnmountStopped();}}}effect=effect.next;}while(effect!==firstEffect);}}}recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}case ClassComponent:{if(!offscreenSubtreeWasHidden){safelyDetachRef(deletedFiber,nearestMountedAncestor);var instance=deletedFiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(deletedFiber,nearestMountedAncestor,instance);}}recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}case ScopeComponent:{recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}case OffscreenComponent:{if(// TODO: Remove this dead flag
		deletedFiber.mode&ConcurrentMode){// If this offscreen component is hidden, we already unmounted it. Before
		// deleting the children, track that it's already unmounted so that we
		// don't attempt to unmount the effects again.
		// TODO: If the tree is hidden, in most cases we should be able to skip
		// over the nested children entirely. An exception is we haven't yet found
		// the topmost host node to delete, which we already track on the stack.
		// But the other case is portals, which need to be detached no matter how
		// deeply they are nested. We should use a subtree flag to track whether a
		// subtree includes a nested portal.
		var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden||deletedFiber.memoizedState!==null;recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;}else {recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);}break;}default:{recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}}}function commitSuspenseCallback(finishedWork){// TODO: Move this to passive phase
		finishedWork.memoizedState;}function commitSuspenseHydrationCallbacks(finishedRoot,finishedWork){var newState=finishedWork.memoizedState;if(newState===null){var current=finishedWork.alternate;if(current!==null){var prevState=current.memoizedState;if(prevState!==null){var suspenseInstance=prevState.dehydrated;if(suspenseInstance!==null){commitHydratedSuspenseInstance(suspenseInstance);}}}}}function attachSuspenseRetryListeners(finishedWork){// If this boundary just timed out, then it will have a set of wakeables.
		// For each wakeable, attach a listener so that when it resolves, React
		// attempts to re-render the boundary in the primary (pre-timeout) state.
		var wakeables=finishedWork.updateQueue;if(wakeables!==null){finishedWork.updateQueue=null;var retryCache=finishedWork.stateNode;if(retryCache===null){retryCache=finishedWork.stateNode=new PossiblyWeakSet();}wakeables.forEach(function(wakeable){// Memoize using the boundary fiber to prevent redundant listeners.
		var retry=resolveRetryWakeable.bind(null,finishedWork,wakeable);if(!retryCache.has(wakeable)){retryCache.add(wakeable);{if(isDevToolsPresent){if(inProgressLanes!==null&&inProgressRoot!==null){// If we have pending work still, associate the original updaters with it.
		restorePendingUpdaters(inProgressRoot,inProgressLanes);}else {throw Error('Expected finished root and lanes to be set. This is a bug in React.');}}}wakeable.then(retry,retry);}});}}// This function detects when a Suspense boundary goes from visible to hidden.
		function commitMutationEffects(root,finishedWork,committedLanes){inProgressLanes=committedLanes;inProgressRoot=root;setCurrentFiber(finishedWork);commitMutationEffectsOnFiber(finishedWork,root);setCurrentFiber(finishedWork);inProgressLanes=null;inProgressRoot=null;}function recursivelyTraverseMutationEffects(root,parentFiber,lanes){// Deletions effects can be scheduled on any fiber type. They need to happen
		// before the children effects hae fired.
		var deletions=parentFiber.deletions;if(deletions!==null){for(var i=0;i<deletions.length;i++){var childToDelete=deletions[i];try{commitDeletionEffects(root,parentFiber,childToDelete);}catch(error){captureCommitPhaseError(childToDelete,parentFiber,error);}}}var prevDebugFiber=getCurrentFiber();if(parentFiber.subtreeFlags&MutationMask){var child=parentFiber.child;while(child!==null){setCurrentFiber(child);commitMutationEffectsOnFiber(child,root);child=child.sibling;}}setCurrentFiber(prevDebugFiber);}function commitMutationEffectsOnFiber(finishedWork,root,lanes){var current=finishedWork.alternate;var flags=finishedWork.flags;// The effect flag should be checked *after* we refine the type of fiber,
		// because the fiber tag is more specific. An exception is any flag related
		// to reconcilation, because those can be set on all fiber types.
		switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){try{commitHookEffectListUnmount(Insertion|HasEffect,finishedWork,finishedWork.return);commitHookEffectListMount(Insertion|HasEffect,finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}// Layout effects are destroyed during the mutation phase so that all
		// destroy functions for all fibers are called before any create functions.
		// This prevents sibling component effects from interfering with each other,
		// e.g. a destroy function in one component should never override a ref set
		// by a create function in another component during the same commit.
		if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}recordLayoutEffectDuration(finishedWork);}else {try{commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}return;}case ClassComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Ref){if(current!==null){safelyDetachRef(current,current.return);}}return;}case HostComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Ref){if(current!==null){safelyDetachRef(current,current.return);}}{// TODO: ContentReset gets cleared by the children during the commit
		// phase. This is a refactor hazard because it means we must read
		// flags the flags after `commitReconciliationEffects` has already run;
		// the order matters. We should refactor so that ContentReset does not
		// rely on mutating the flag during commit. Like by setting a flag
		// during the render phase instead.
		if(finishedWork.flags&ContentReset){var instance=finishedWork.stateNode;try{resetTextContent(instance);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}if(flags&Update){var _instance4=finishedWork.stateNode;if(_instance4!=null){// Commit the work prepared earlier.
		var newProps=finishedWork.memoizedProps;// For hydration we reuse the update path but we treat the oldProps
		// as the newProps. The updatePayload will contain the real change in
		// this case.
		var oldProps=current!==null?current.memoizedProps:newProps;var type=finishedWork.type;// TODO: Type the updateQueue to be specific to host components.
		var updatePayload=finishedWork.updateQueue;finishedWork.updateQueue=null;if(updatePayload!==null){try{commitUpdate(_instance4,updatePayload,type,oldProps,newProps,finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}}}return;}case HostText:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){{if(finishedWork.stateNode===null){throw new Error('This should have a text node initialized. This error is likely '+'caused by a bug in React. Please file an issue.');}var textInstance=finishedWork.stateNode;var newText=finishedWork.memoizedProps;// For hydration we reuse the update path but we treat the oldProps
		// as the newProps. The updatePayload will contain the real change in
		// this case.
		var oldText=current!==null?current.memoizedProps:newText;try{commitTextUpdate(textInstance,oldText,newText);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}return;}case HostRoot:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){{if(current!==null){var prevRootState=current.memoizedState;if(prevRootState.isDehydrated){try{commitHydratedContainer(root.containerInfo);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}}}return;}case HostPortal:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);return;}case SuspenseComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);var offscreenFiber=finishedWork.child;if(offscreenFiber.flags&Visibility){var offscreenInstance=offscreenFiber.stateNode;var newState=offscreenFiber.memoizedState;var isHidden=newState!==null;// Track the current state on the Offscreen instance so we can
		// read it during an event
		offscreenInstance.isHidden=isHidden;if(isHidden){var wasHidden=offscreenFiber.alternate!==null&&offscreenFiber.alternate.memoizedState!==null;if(!wasHidden){// TODO: Move to passive phase
		markCommitTimeOfFallback();}}}if(flags&Update){try{commitSuspenseCallback(finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}attachSuspenseRetryListeners(finishedWork);}return;}case OffscreenComponent:{var _wasHidden=current!==null&&current.memoizedState!==null;if(// TODO: Remove this dead flag
		finishedWork.mode&ConcurrentMode){// Before committing the children, track on the stack whether this
		// offscreen subtree was already hidden, so that we don't unmount the
		// effects again.
		var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden||_wasHidden;recursivelyTraverseMutationEffects(root,finishedWork);offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;}else {recursivelyTraverseMutationEffects(root,finishedWork);}commitReconciliationEffects(finishedWork);if(flags&Visibility){var _offscreenInstance=finishedWork.stateNode;var _newState=finishedWork.memoizedState;var _isHidden=_newState!==null;var offscreenBoundary=finishedWork;// Track the current state on the Offscreen instance so we can
		// read it during an event
		_offscreenInstance.isHidden=_isHidden;{if(_isHidden){if(!_wasHidden){if((offscreenBoundary.mode&ConcurrentMode)!==NoMode){nextEffect=offscreenBoundary;var offscreenChild=offscreenBoundary.child;while(offscreenChild!==null){nextEffect=offscreenChild;disappearLayoutEffects_begin(offscreenChild);offscreenChild=offscreenChild.sibling;}}}}}{// TODO: This needs to run whenever there's an insertion or update
		// inside a hidden Offscreen tree.
		hideOrUnhideAllChildren(offscreenBoundary,_isHidden);}}return;}case SuspenseListComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){attachSuspenseRetryListeners(finishedWork);}return;}case ScopeComponent:{return;}default:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);return;}}}function commitReconciliationEffects(finishedWork){// Placement effects (insertions, reorders) can be scheduled on any fiber
		// type. They needs to happen after the children effects have fired, but
		// before the effects on this fiber have fired.
		var flags=finishedWork.flags;if(flags&Placement){try{commitPlacement(finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}// Clear the "placement" from effect tag so that we know that this is
		// inserted, before any life-cycles like componentDidMount gets called.
		// TODO: findDOMNode doesn't rely on this any more but isMounted does
		// and isMounted is deprecated anyway so we should be able to kill this.
		finishedWork.flags&=~Placement;}if(flags&Hydrating){finishedWork.flags&=~Hydrating;}}function commitLayoutEffects(finishedWork,root,committedLanes){inProgressLanes=committedLanes;inProgressRoot=root;nextEffect=finishedWork;commitLayoutEffects_begin(finishedWork,root,committedLanes);inProgressLanes=null;inProgressRoot=null;}function commitLayoutEffects_begin(subtreeRoot,root,committedLanes){// Suspense layout effects semantics don't change for legacy roots.
		var isModernRoot=(subtreeRoot.mode&ConcurrentMode)!==NoMode;while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if(fiber.tag===OffscreenComponent&&isModernRoot){// Keep track of the current Offscreen stack's state.
		var isHidden=fiber.memoizedState!==null;var newOffscreenSubtreeIsHidden=isHidden||offscreenSubtreeIsHidden;if(newOffscreenSubtreeIsHidden){// The Offscreen tree is hidden. Skip over its layout effects.
		commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);continue;}else {// TODO (Offscreen) Also check: subtreeFlags & LayoutMask
		var current=fiber.alternate;var wasHidden=current!==null&&current.memoizedState!==null;var newOffscreenSubtreeWasHidden=wasHidden||offscreenSubtreeWasHidden;var prevOffscreenSubtreeIsHidden=offscreenSubtreeIsHidden;var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;// Traverse the Offscreen subtree with the current Offscreen as the root.
		offscreenSubtreeIsHidden=newOffscreenSubtreeIsHidden;offscreenSubtreeWasHidden=newOffscreenSubtreeWasHidden;if(offscreenSubtreeWasHidden&&!prevOffscreenSubtreeWasHidden){// This is the root of a reappearing boundary. Turn its layout effects
		// back on.
		nextEffect=fiber;reappearLayoutEffects_begin(fiber);}var child=firstChild;while(child!==null){nextEffect=child;commitLayoutEffects_begin(child,// New root; bubble back up to here and stop.
		root,committedLanes);child=child.sibling;}// Restore Offscreen state and resume in our-progress traversal.
		nextEffect=fiber;offscreenSubtreeIsHidden=prevOffscreenSubtreeIsHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);continue;}}if((fiber.subtreeFlags&LayoutMask)!==NoFlags&&firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else {commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);}}}function commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&LayoutMask)!==NoFlags){var current=fiber.alternate;setCurrentFiber(fiber);try{commitLayoutEffectOnFiber(root,current,fiber,committedLanes);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();}if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function disappearLayoutEffects_begin(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;// TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{if(fiber.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout,fiber,fiber.return);}finally{recordLayoutEffectDuration(fiber);}}else {commitHookEffectListUnmount(Layout,fiber,fiber.return);}break;}case ClassComponent:{// TODO (Offscreen) Check: flags & RefStatic
		safelyDetachRef(fiber,fiber.return);var instance=fiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(fiber,fiber.return,instance);}break;}case HostComponent:{safelyDetachRef(fiber,fiber.return);break;}case OffscreenComponent:{// Check if this is a
		var isHidden=fiber.memoizedState!==null;if(isHidden){// Nested Offscreen tree is already hidden. Don't disappear
		// its effects.
		disappearLayoutEffects_complete(subtreeRoot);continue;}break;}}// TODO (Offscreen) Check: subtreeFlags & LayoutStatic
		if(firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else {disappearLayoutEffects_complete(subtreeRoot);}}}function disappearLayoutEffects_complete(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function reappearLayoutEffects_begin(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if(fiber.tag===OffscreenComponent){var isHidden=fiber.memoizedState!==null;if(isHidden){// Nested Offscreen tree is still hidden. Don't re-appear its effects.
		reappearLayoutEffects_complete(subtreeRoot);continue;}}// TODO (Offscreen) Check: subtreeFlags & LayoutStatic
		if(firstChild!==null){// This node may have been reused from a previous render, so we can't
		// assume its return pointer is correct.
		firstChild.return=fiber;nextEffect=firstChild;}else {reappearLayoutEffects_complete(subtreeRoot);}}}function reappearLayoutEffects_complete(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;// TODO (Offscreen) Check: flags & LayoutStatic
		setCurrentFiber(fiber);try{reappearLayoutEffectsOnFiber(fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){// This node may have been reused from a previous render, so we can't
		// assume its return pointer is correct.
		sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveMountEffects(root,finishedWork,committedLanes,committedTransitions){nextEffect=finishedWork;commitPassiveMountEffects_begin(finishedWork,root,committedLanes,committedTransitions);}function commitPassiveMountEffects_begin(subtreeRoot,root,committedLanes,committedTransitions){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if((fiber.subtreeFlags&PassiveMask)!==NoFlags&&firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else {commitPassiveMountEffects_complete(subtreeRoot,root,committedLanes,committedTransitions);}}}function commitPassiveMountEffects_complete(subtreeRoot,root,committedLanes,committedTransitions){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&Passive)!==NoFlags){setCurrentFiber(fiber);try{commitPassiveMountOnFiber(root,fiber,committedLanes,committedTransitions);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();}if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveMountOnFiber(finishedRoot,finishedWork,committedLanes,committedTransitions){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(finishedWork.mode&ProfileMode){startPassiveEffectTimer();try{commitHookEffectListMount(Passive$1|HasEffect,finishedWork);}finally{recordPassiveEffectDuration(finishedWork);}}else {commitHookEffectListMount(Passive$1|HasEffect,finishedWork);}break;}}}function commitPassiveUnmountEffects(firstChild){nextEffect=firstChild;commitPassiveUnmountEffects_begin();}function commitPassiveUnmountEffects_begin(){while(nextEffect!==null){var fiber=nextEffect;var child=fiber.child;if((nextEffect.flags&ChildDeletion)!==NoFlags){var deletions=fiber.deletions;if(deletions!==null){for(var i=0;i<deletions.length;i++){var fiberToDelete=deletions[i];nextEffect=fiberToDelete;commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete,fiber);}{// A fiber was deleted from this parent fiber, but it's still part of
		// the previous (alternate) parent fiber's list of children. Because
		// children are a linked list, an earlier sibling that's still alive
		// will be connected to the deleted fiber via its `alternate`:
		//
		//   live fiber
		//   --alternate--> previous live fiber
		//   --sibling--> deleted fiber
		//
		// We can't disconnect `alternate` on nodes that haven't been deleted
		// yet, but we can disconnect the `sibling` and `child` pointers.
		var previousFiber=fiber.alternate;if(previousFiber!==null){var detachedChild=previousFiber.child;if(detachedChild!==null){previousFiber.child=null;do{var detachedSibling=detachedChild.sibling;detachedChild.sibling=null;detachedChild=detachedSibling;}while(detachedChild!==null);}}}nextEffect=fiber;}}if((fiber.subtreeFlags&PassiveMask)!==NoFlags&&child!==null){child.return=fiber;nextEffect=child;}else {commitPassiveUnmountEffects_complete();}}}function commitPassiveUnmountEffects_complete(){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&Passive)!==NoFlags){setCurrentFiber(fiber);commitPassiveUnmountOnFiber(fiber);resetCurrentFiber();}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveUnmountOnFiber(finishedWork){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(finishedWork.mode&ProfileMode){startPassiveEffectTimer();commitHookEffectListUnmount(Passive$1|HasEffect,finishedWork,finishedWork.return);recordPassiveEffectDuration(finishedWork);}else {commitHookEffectListUnmount(Passive$1|HasEffect,finishedWork,finishedWork.return);}break;}}}function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot,nearestMountedAncestor){while(nextEffect!==null){var fiber=nextEffect;// Deletion effects fire in parent -> child order
		// TODO: Check if fiber has a PassiveStatic flag
		setCurrentFiber(fiber);commitPassiveUnmountInsideDeletedTreeOnFiber(fiber,nearestMountedAncestor);resetCurrentFiber();var child=fiber.child;// TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
		// do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
		if(child!==null){child.return=fiber;nextEffect=child;}else {commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);}}}function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var sibling=fiber.sibling;var returnFiber=fiber.return;{// Recursively traverse the entire deleted tree and clean up fiber fields.
		// This is more aggressive than ideal, and the long term goal is to only
		// have to detach the deleted tree at the root.
		detachFiberAfterEffects(fiber);if(fiber===deletedSubtreeRoot){nextEffect=null;return;}}if(sibling!==null){sibling.return=returnFiber;nextEffect=sibling;return;}nextEffect=returnFiber;}}function commitPassiveUnmountInsideDeletedTreeOnFiber(current,nearestMountedAncestor){switch(current.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(current.mode&ProfileMode){startPassiveEffectTimer();commitHookEffectListUnmount(Passive$1,current,nearestMountedAncestor);recordPassiveEffectDuration(current);}else {commitHookEffectListUnmount(Passive$1,current,nearestMountedAncestor);}break;}}}// TODO: Reuse reappearLayoutEffects traversal here?
		function invokeLayoutEffectMountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListMount(Layout|HasEffect,fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}case ClassComponent:{var instance=fiber.stateNode;try{instance.componentDidMount();}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}}}}function invokePassiveEffectMountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListMount(Passive$1|HasEffect,fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}}}}function invokeLayoutEffectUnmountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListUnmount(Layout|HasEffect,fiber,fiber.return);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}case ClassComponent:{var instance=fiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(fiber,fiber.return,instance);}break;}}}}function invokePassiveEffectUnmountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListUnmount(Passive$1|HasEffect,fiber,fiber.return);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}}}}}if(typeof Symbol==='function'&&Symbol.for){var symbolFor=Symbol.for;symbolFor('selector.component');symbolFor('selector.has_pseudo_class');symbolFor('selector.role');symbolFor('selector.test_id');symbolFor('selector.text');}var commitHooks=[];function onCommitRoot$1(){{commitHooks.forEach(function(commitHook){return commitHook();});}}var ReactCurrentActQueue=ReactSharedInternals.ReactCurrentActQueue;function isLegacyActEnvironment(fiber){{// Legacy mode. We preserve the behavior of React 17's act. It assumes an
		// act environment whenever `jest` is defined, but you can still turn off
		// spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
		// to false.
		var isReactActEnvironmentGlobal=// $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
		typeof IS_REACT_ACT_ENVIRONMENT!=='undefined'?IS_REACT_ACT_ENVIRONMENT:undefined;// $FlowExpectedError - Flow doesn't know about jest
		var jestIsDefined=typeof jest!=='undefined';return jestIsDefined&&isReactActEnvironmentGlobal!==false;}}function isConcurrentActEnvironment(){{var isReactActEnvironmentGlobal=// $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
		typeof IS_REACT_ACT_ENVIRONMENT!=='undefined'?IS_REACT_ACT_ENVIRONMENT:undefined;if(!isReactActEnvironmentGlobal&&ReactCurrentActQueue.current!==null){// TODO: Include link to relevant documentation page.
		error('The current testing environment is not configured to support '+'act(...)');}return isReactActEnvironmentGlobal;}}var ceil=Math.ceil;var ReactCurrentDispatcher$2=ReactSharedInternals.ReactCurrentDispatcher,ReactCurrentOwner$2=ReactSharedInternals.ReactCurrentOwner,ReactCurrentBatchConfig$3=ReactSharedInternals.ReactCurrentBatchConfig,ReactCurrentActQueue$1=ReactSharedInternals.ReactCurrentActQueue;var NoContext=/*             */0;var BatchedContext=/*               */1;var RenderContext=/*                */2;var CommitContext=/*                */4;var RootInProgress=0;var RootFatalErrored=1;var RootErrored=2;var RootSuspended=3;var RootSuspendedWithDelay=4;var RootCompleted=5;var RootDidNotComplete=6;// Describes where we are in the React execution stack
		var executionContext=NoContext;// The root we're working on
		var workInProgressRoot=null;// The fiber we're working on
		var workInProgress=null;// The lanes we're rendering
		var workInProgressRootRenderLanes=NoLanes;// Stack that allows components to change the render lanes for its subtree
		// This is a superset of the lanes we started working on at the root. The only
		// case where it's different from `workInProgressRootRenderLanes` is when we
		// enter a subtree that is hidden and needs to be unhidden: Suspense and
		// Offscreen component.
		//
		// Most things in the work loop should deal with workInProgressRootRenderLanes.
		// Most things in begin/complete phases should deal with subtreeRenderLanes.
		var subtreeRenderLanes=NoLanes;var subtreeRenderLanesCursor=createCursor(NoLanes);// Whether to root completed, errored, suspended, etc.
		var workInProgressRootExitStatus=RootInProgress;// A fatal error, if one is thrown
		var workInProgressRootFatalError=null;// "Included" lanes refer to lanes that were worked on during this render. It's
		// includes unprocessed updates, not work in bailed out children.
		var workInProgressRootSkippedLanes=NoLanes;// Lanes that were updated (in an interleaved event) during this render.
		var workInProgressRootInterleavedUpdatedLanes=NoLanes;// Lanes that were updated during the render phase (*not* an interleaved event).
		var workInProgressRootPingedLanes=NoLanes;// Errors that are thrown during the render phase.
		var workInProgressRootConcurrentErrors=null;// These are errors that we recovered from without surfacing them to the UI.
		// We will log them once the tree commits.
		var workInProgressRootRecoverableErrors=null;// The most recent time we committed a fallback. This lets us ensure a train
		// model where we don't commit new loading states in too quick succession.
		var globalMostRecentFallbackTime=0;var FALLBACK_THROTTLE_MS=500;// The absolute time for when we should start giving up on rendering
		// more and prefer CPU suspense heuristics instead.
		var workInProgressRootRenderTargetTime=Infinity;// How long a render is supposed to take before we start following CPU
		// suspense heuristics and opt out of rendering more content.
		var RENDER_TIMEOUT_MS=500;var workInProgressTransitions=null;function resetRenderTimer(){workInProgressRootRenderTargetTime=now()+RENDER_TIMEOUT_MS;}function getRenderTargetTime(){return workInProgressRootRenderTargetTime;}var hasUncaughtError=false;var firstUncaughtError=null;var legacyErrorBoundariesThatAlreadyFailed=null;// Only used when enableProfilerNestedUpdateScheduledHook is true;
		var rootDoesHavePassiveEffects=false;var rootWithPendingPassiveEffects=null;var pendingPassiveEffectsLanes=NoLanes;var pendingPassiveProfilerEffects=[];var pendingPassiveTransitions=null;// Use these to prevent an infinite loop of nested updates
		var NESTED_UPDATE_LIMIT=50;var nestedUpdateCount=0;var rootWithNestedUpdates=null;var isFlushingPassiveEffects=false;var didScheduleUpdateDuringPassiveEffects=false;var NESTED_PASSIVE_UPDATE_LIMIT=50;var nestedPassiveUpdateCount=0;var rootWithPassiveNestedUpdates=null;// If two updates are scheduled within the same event, we should treat their
		// event times as simultaneous, even if the actual clock time has advanced
		// between the first and second call.
		var currentEventTime=NoTimestamp;var currentEventTransitionLane=NoLanes;var isRunningInsertionEffect=false;function getWorkInProgressRoot(){return workInProgressRoot;}function requestEventTime(){if((executionContext&(RenderContext|CommitContext))!==NoContext){// We're inside React, so it's fine to read the actual time.
		return now();}// We're not inside React, so we may be in the middle of a browser event.
		if(currentEventTime!==NoTimestamp){// Use the same start time for all updates until we enter React again.
		return currentEventTime;}// This is the first update since React yielded. Compute a new start time.
		currentEventTime=now();return currentEventTime;}function requestUpdateLane(fiber){// Special cases
		var mode=fiber.mode;if((mode&ConcurrentMode)===NoMode){return SyncLane;}else if((executionContext&RenderContext)!==NoContext&&workInProgressRootRenderLanes!==NoLanes){// This is a render phase update. These are not officially supported. The
		// old behavior is to give this the same "thread" (lanes) as
		// whatever is currently rendering. So if you call `setState` on a component
		// that happens later in the same render, it will flush. Ideally, we want to
		// remove the special case and treat them as if they came from an
		// interleaved event. Regardless, this pattern is not officially supported.
		// This behavior is only a fallback. The flag only exists until we can roll
		// out the setState warning, since existing code might accidentally rely on
		// the current behavior.
		return pickArbitraryLane(workInProgressRootRenderLanes);}var isTransition=requestCurrentTransition()!==NoTransition;if(isTransition){if(ReactCurrentBatchConfig$3.transition!==null){var transition=ReactCurrentBatchConfig$3.transition;if(!transition._updatedFibers){transition._updatedFibers=new Set();}transition._updatedFibers.add(fiber);}// The algorithm for assigning an update to a lane should be stable for all
		// updates at the same priority within the same event. To do this, the
		// inputs to the algorithm must be the same.
		//
		// The trick we use is to cache the first of each of these inputs within an
		// event. Then reset the cached values once we can be sure the event is
		// over. Our heuristic for that is whenever we enter a concurrent work loop.
		if(currentEventTransitionLane===NoLane){// All transitions within the same event are assigned the same lane.
		currentEventTransitionLane=claimNextTransitionLane();}return currentEventTransitionLane;}// Updates originating inside certain React methods, like flushSync, have
		// their priority set by tracking it with a context variable.
		//
		// The opaque type returned by the host config is internally a lane, so we can
		// use that directly.
		// TODO: Move this type conversion to the event priority module.
		var updateLane=getCurrentUpdatePriority();if(updateLane!==NoLane){return updateLane;}// This update originated outside React. Ask the host environment for an
		// appropriate priority, based on the type of event.
		//
		// The opaque type returned by the host config is internally a lane, so we can
		// use that directly.
		// TODO: Move this type conversion to the event priority module.
		var eventLane=getCurrentEventPriority();return eventLane;}function requestRetryLane(fiber){// This is a fork of `requestUpdateLane` designed specifically for Suspense
		// "retries" — a special update that attempts to flip a Suspense boundary
		// from its placeholder state to its primary/resolved state.
		// Special cases
		var mode=fiber.mode;if((mode&ConcurrentMode)===NoMode){return SyncLane;}return claimNextRetryLane();}function scheduleUpdateOnFiber(root,fiber,lane,eventTime){checkForNestedUpdates();{if(isRunningInsertionEffect){error('useInsertionEffect must not schedule updates.');}}{if(isFlushingPassiveEffects){didScheduleUpdateDuringPassiveEffects=true;}}// Mark that the root has a pending update.
		markRootUpdated(root,lane,eventTime);if((executionContext&RenderContext)!==NoLanes&&root===workInProgressRoot){// This update was dispatched during the render phase. This is a mistake
		// if the update originates from user space (with the exception of local
		// hook updates, which are handled differently and don't reach this
		// function), but there are some internal React features that use this as
		// an implementation detail, like selective hydration.
		warnAboutRenderPhaseUpdatesInDEV(fiber);// Track lanes that were updated during the render phase
		}else {// This is a normal update, scheduled from outside the render phase. For
		// example, during an input event.
		{if(isDevToolsPresent){addFiberToLanesMap(root,fiber,lane);}}warnIfUpdatesNotWrappedWithActDEV(fiber);if(root===workInProgressRoot){// Received an update to a tree that's in the middle of rendering. Mark
		// that there was an interleaved update work on this root. Unless the
		// `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
		// phase update. In that case, we don't treat render phase updates as if
		// they were interleaved, for backwards compat reasons.
		if((executionContext&RenderContext)===NoContext){workInProgressRootInterleavedUpdatedLanes=mergeLanes(workInProgressRootInterleavedUpdatedLanes,lane);}if(workInProgressRootExitStatus===RootSuspendedWithDelay){// The root already suspended with a delay, which means this render
		// definitely won't finish. Since we have a new update, let's mark it as
		// suspended now, right before marking the incoming update. This has the
		// effect of interrupting the current render and switching to the update.
		// TODO: Make sure this doesn't override pings that happen while we've
		// already started rendering.
		markRootSuspended$1(root,workInProgressRootRenderLanes);}}ensureRootIsScheduled(root,eventTime);if(lane===SyncLane&&executionContext===NoContext&&(fiber.mode&ConcurrentMode)===NoMode&&// Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
		!ReactCurrentActQueue$1.isBatchingLegacy){// Flush the synchronous work now, unless we're already working or inside
		// a batch. This is intentionally inside scheduleUpdateOnFiber instead of
		// scheduleCallbackForFiber to preserve the ability to schedule a callback
		// without immediately flushing it. We only do this for user-initiated
		// updates, to preserve historical behavior of legacy mode.
		resetRenderTimer();flushSyncCallbacksOnlyInLegacyMode();}}}function scheduleInitialHydrationOnRoot(root,lane,eventTime){// This is a special fork of scheduleUpdateOnFiber that is only used to
		// schedule the initial hydration of a root that has just been created. Most
		// of the stuff in scheduleUpdateOnFiber can be skipped.
		//
		// The main reason for this separate path, though, is to distinguish the
		// initial children from subsequent updates. In fully client-rendered roots
		// (createRoot instead of hydrateRoot), all top-level renders are modeled as
		// updates, but hydration roots are special because the initial render must
		// match what was rendered on the server.
		var current=root.current;current.lanes=lane;markRootUpdated(root,lane,eventTime);ensureRootIsScheduled(root,eventTime);}function isUnsafeClassRenderPhaseUpdate(fiber){// Check if this is a render phase update. Only called by class components,
		// which special (deprecated) behavior for UNSAFE_componentWillReceive props.
		return(// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
		// decided not to enable it.
		(executionContext&RenderContext)!==NoContext);}// Use this function to schedule a task for a root. There's only one task per
		// root; if a task was already scheduled, we'll check to make sure the priority
		// of the existing task is the same as the priority of the next level that the
		// root has work on. This function is called on every update, and right before
		// exiting a task.
		function ensureRootIsScheduled(root,currentTime){var existingCallbackNode=root.callbackNode;// Check if any lanes are being starved by other work. If so, mark them as
		// expired so we know to work on those next.
		markStarvedLanesAsExpired(root,currentTime);// Determine the next lanes to work on, and their priority.
		var nextLanes=getNextLanes(root,root===workInProgressRoot?workInProgressRootRenderLanes:NoLanes);if(nextLanes===NoLanes){// Special case: There's nothing to work on.
		if(existingCallbackNode!==null){cancelCallback$1(existingCallbackNode);}root.callbackNode=null;root.callbackPriority=NoLane;return;}// We use the highest priority lane to represent the priority of the callback.
		var newCallbackPriority=getHighestPriorityLane(nextLanes);// Check if there's an existing task. We may be able to reuse it.
		var existingCallbackPriority=root.callbackPriority;if(existingCallbackPriority===newCallbackPriority&&// Special case related to `act`. If the currently scheduled task is a
		// Scheduler task, rather than an `act` task, cancel it and re-scheduled
		// on the `act` queue.
		!(ReactCurrentActQueue$1.current!==null&&existingCallbackNode!==fakeActCallbackNode)){{// If we're going to re-use an existing task, it needs to exist.
		// Assume that discrete update microtasks are non-cancellable and null.
		// TODO: Temporary until we confirm this warning is not fired.
		if(existingCallbackNode==null&&existingCallbackPriority!==SyncLane){error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');}}// The priority hasn't changed. We can reuse the existing task. Exit.
		return;}if(existingCallbackNode!=null){// Cancel the existing callback. We'll schedule a new one below.
		cancelCallback$1(existingCallbackNode);}// Schedule a new callback.
		var newCallbackNode;if(newCallbackPriority===SyncLane){// Special case: Sync React callbacks are scheduled on a special
		// internal queue
		if(root.tag===LegacyRoot){if(ReactCurrentActQueue$1.isBatchingLegacy!==null){ReactCurrentActQueue$1.didScheduleLegacyUpdate=true;}scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null,root));}else {scheduleSyncCallback(performSyncWorkOnRoot.bind(null,root));}{// Flush the queue in a microtask.
		if(ReactCurrentActQueue$1.current!==null){// Inside `act`, use our internal `act` queue so that these get flushed
		// at the end of the current scope even when using the sync version
		// of `act`.
		ReactCurrentActQueue$1.current.push(flushSyncCallbacks);}else {scheduleMicrotask(function(){// In Safari, appending an iframe forces microtasks to run.
		// https://github.com/facebook/react/issues/22459
		// We don't support running callbacks in the middle of render
		// or commit so we need to check against that.
		if((executionContext&(RenderContext|CommitContext))===NoContext){// Note that this would still prematurely flush the callbacks
		// if this happens outside render or commit phase (e.g. in an event).
		flushSyncCallbacks();}});}}newCallbackNode=null;}else {var schedulerPriorityLevel;switch(lanesToEventPriority(nextLanes)){case DiscreteEventPriority:schedulerPriorityLevel=ImmediatePriority;break;case ContinuousEventPriority:schedulerPriorityLevel=UserBlockingPriority;break;case DefaultEventPriority:schedulerPriorityLevel=NormalPriority;break;case IdleEventPriority:schedulerPriorityLevel=IdlePriority;break;default:schedulerPriorityLevel=NormalPriority;break;}newCallbackNode=scheduleCallback$1(schedulerPriorityLevel,performConcurrentWorkOnRoot.bind(null,root));}root.callbackPriority=newCallbackPriority;root.callbackNode=newCallbackNode;}// This is the entry point for every concurrent task, i.e. anything that
		// goes through Scheduler.
		function performConcurrentWorkOnRoot(root,didTimeout){{resetNestedUpdateFlag();}// Since we know we're in a React event, we can clear the current
		// event time. The next update will compute a new event time.
		currentEventTime=NoTimestamp;currentEventTransitionLane=NoLanes;if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}// Flush any pending passive effects before deciding which lanes to work on,
		// in case they schedule additional work.
		var originalCallbackNode=root.callbackNode;var didFlushPassiveEffects=flushPassiveEffects();if(didFlushPassiveEffects){// Something in the passive effect phase may have canceled the current task.
		// Check if the task node for this root was changed.
		if(root.callbackNode!==originalCallbackNode){// The current task was canceled. Exit. We don't need to call
		// `ensureRootIsScheduled` because the check above implies either that
		// there's a new task, or that there's no remaining work on this root.
		return null;}}// Determine the next lanes to work on, using the fields stored
		// on the root.
		var lanes=getNextLanes(root,root===workInProgressRoot?workInProgressRootRenderLanes:NoLanes);if(lanes===NoLanes){// Defensive coding. This is never expected to happen.
		return null;}// We disable time-slicing in some cases: if the work has been CPU-bound
		// for too long ("expired" work, to prevent starvation), or we're in
		// sync-updates-by-default mode.
		// TODO: We only check `didTimeout` defensively, to account for a Scheduler
		// bug we're still investigating. Once the bug in Scheduler is fixed,
		// we can remove this, since we track expiration ourselves.
		var shouldTimeSlice=!includesBlockingLane(root,lanes)&&!includesExpiredLane(root,lanes)&&!didTimeout;var exitStatus=shouldTimeSlice?renderRootConcurrent(root,lanes):renderRootSync(root,lanes);if(exitStatus!==RootInProgress){if(exitStatus===RootErrored){// If something threw an error, try rendering one more time. We'll
		// render synchronously to block concurrent data mutations, and we'll
		// includes all pending updates are included. If it still fails after
		// the second attempt, we'll give up and commit the resulting tree.
		var errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(errorRetryLanes!==NoLanes){lanes=errorRetryLanes;exitStatus=recoverFromConcurrentError(root,errorRetryLanes);}}if(exitStatus===RootFatalErrored){var fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now());throw fatalError;}if(exitStatus===RootDidNotComplete){// The render unwound without completing the tree. This happens in special
		// cases where need to exit the current render without producing a
		// consistent tree or committing.
		//
		// This should only happen during a concurrent render, not a discrete or
		// synchronous update. We should have already checked for this when we
		// unwound the stack.
		markRootSuspended$1(root,lanes);}else {// The render completed.
		// Check if this render may have yielded to a concurrent event, and if so,
		// confirm that any newly rendered stores are consistent.
		// TODO: It's possible that even a concurrent render may never have yielded
		// to the main thread, if it was fast enough, or if it expired. We could
		// skip the consistency check in that case, too.
		var renderWasConcurrent=!includesBlockingLane(root,lanes);var finishedWork=root.current.alternate;if(renderWasConcurrent&&!isRenderConsistentWithExternalStores(finishedWork)){// A store was mutated in an interleaved event. Render again,
		// synchronously, to block further mutations.
		exitStatus=renderRootSync(root,lanes);// We need to check again if something threw
		if(exitStatus===RootErrored){var _errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(_errorRetryLanes!==NoLanes){lanes=_errorRetryLanes;exitStatus=recoverFromConcurrentError(root,_errorRetryLanes);// We assume the tree is now consistent because we didn't yield to any
		// concurrent events.
		}}if(exitStatus===RootFatalErrored){var _fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now());throw _fatalError;}}// We now have a consistent tree. The next step is either to commit it,
		// or, if something suspended, wait to commit it after a timeout.
		root.finishedWork=finishedWork;root.finishedLanes=lanes;finishConcurrentRender(root,exitStatus,lanes);}}ensureRootIsScheduled(root,now());if(root.callbackNode===originalCallbackNode){// The task node scheduled for this root is the same one that's
		// currently executed. Need to return a continuation.
		return performConcurrentWorkOnRoot.bind(null,root);}return null;}function recoverFromConcurrentError(root,errorRetryLanes){// If an error occurred during hydration, discard server response and fall
		// back to client side render.
		// Before rendering again, save the errors from the previous attempt.
		var errorsFromFirstAttempt=workInProgressRootConcurrentErrors;if(isRootDehydrated(root)){// The shell failed to hydrate. Set a flag to force a client rendering
		// during the next attempt. To do this, we call prepareFreshStack now
		// to create the root work-in-progress fiber. This is a bit weird in terms
		// of factoring, because it relies on renderRootSync not calling
		// prepareFreshStack again in the call below, which happens because the
		// root and lanes haven't changed.
		//
		// TODO: I think what we should do is set ForceClientRender inside
		// throwException, like we do for nested Suspense boundaries. The reason
		// it's here instead is so we can switch to the synchronous work loop, too.
		// Something to consider for a future refactor.
		var rootWorkInProgress=prepareFreshStack(root,errorRetryLanes);rootWorkInProgress.flags|=ForceClientRender;{errorHydratingContainer(root.containerInfo);}}var exitStatus=renderRootSync(root,errorRetryLanes);if(exitStatus!==RootErrored){// Successfully finished rendering on retry
		// The errors from the failed first attempt have been recovered. Add
		// them to the collection of recoverable errors. We'll log them in the
		// commit phase.
		var errorsFromSecondAttempt=workInProgressRootRecoverableErrors;workInProgressRootRecoverableErrors=errorsFromFirstAttempt;// The errors from the second attempt should be queued after the errors
		// from the first attempt, to preserve the causal sequence.
		if(errorsFromSecondAttempt!==null){queueRecoverableErrors(errorsFromSecondAttempt);}}return exitStatus;}function queueRecoverableErrors(errors){if(workInProgressRootRecoverableErrors===null){workInProgressRootRecoverableErrors=errors;}else {workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors,errors);}}function finishConcurrentRender(root,exitStatus,lanes){switch(exitStatus){case RootInProgress:case RootFatalErrored:{throw new Error('Root did not complete. This is a bug in React.');}// Flow knows about invariant, so it complains if I add a break
		// statement, but eslint doesn't know about invariant, so it complains
		// if I do. eslint-disable-next-line no-fallthrough
		case RootErrored:{// We should have already attempted to retry this tree. If we reached
		// this point, it errored again. Commit it.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}case RootSuspended:{markRootSuspended$1(root,lanes);// We have an acceptable loading state. We need to figure out if we
		// should immediately commit it or wait a bit.
		if(includesOnlyRetries(lanes)&&// do not delay if we're inside an act() scope
		!shouldForceFlushFallbacksInDEV()){// This render only included retries, no updates. Throttle committing
		// retries so that we don't show too many loading states too quickly.
		var msUntilTimeout=globalMostRecentFallbackTime+FALLBACK_THROTTLE_MS-now();// Don't bother with a very short suspense time.
		if(msUntilTimeout>10){var nextLanes=getNextLanes(root,NoLanes);if(nextLanes!==NoLanes){// There's additional work on this root.
		break;}var suspendedLanes=root.suspendedLanes;if(!isSubsetOfLanes(suspendedLanes,lanes)){// We should prefer to render the fallback of at the last
		// suspended level. Ping the last suspended level to try
		// rendering it again.
		// FIXME: What if the suspended lanes are Idle? Should not restart.
		requestEventTime();markRootPinged(root,suspendedLanes);break;}// The render is suspended, it hasn't timed out, and there's no
		// lower priority work to do. Instead of committing the fallback
		// immediately, wait for more data to arrive.
		root.timeoutHandle=scheduleTimeout(commitRoot.bind(null,root,workInProgressRootRecoverableErrors,workInProgressTransitions),msUntilTimeout);break;}}// The work expired. Commit immediately.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}case RootSuspendedWithDelay:{markRootSuspended$1(root,lanes);if(includesOnlyTransitions(lanes)){// This is a transition, so we should exit without committing a
		// placeholder and without scheduling a timeout. Delay indefinitely
		// until we receive more data.
		break;}if(!shouldForceFlushFallbacksInDEV()){// This is not a transition, but we did trigger an avoided state.
		// Schedule a placeholder to display after a short delay, using the Just
		// Noticeable Difference.
		// TODO: Is the JND optimization worth the added complexity? If this is
		// the only reason we track the event time, then probably not.
		// Consider removing.
		var mostRecentEventTime=getMostRecentEventTime(root,lanes);var eventTimeMs=mostRecentEventTime;var timeElapsedMs=now()-eventTimeMs;var _msUntilTimeout=jnd(timeElapsedMs)-timeElapsedMs;// Don't bother with a very short suspense time.
		if(_msUntilTimeout>10){// Instead of committing the fallback immediately, wait for more data
		// to arrive.
		root.timeoutHandle=scheduleTimeout(commitRoot.bind(null,root,workInProgressRootRecoverableErrors,workInProgressTransitions),_msUntilTimeout);break;}}// Commit the placeholder.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}case RootCompleted:{// The work completed. Ready to commit.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}default:{throw new Error('Unknown root exit status.');}}}function isRenderConsistentWithExternalStores(finishedWork){// Search the rendered tree for external store reads, and check whether the
		// stores were mutated in a concurrent event. Intentionally using an iterative
		// loop instead of recursion so we can exit early.
		var node=finishedWork;while(true){if(node.flags&StoreConsistency){var updateQueue=node.updateQueue;if(updateQueue!==null){var checks=updateQueue.stores;if(checks!==null){for(var i=0;i<checks.length;i++){var check=checks[i];var getSnapshot=check.getSnapshot;var renderedValue=check.value;try{if(!objectIs(getSnapshot(),renderedValue)){// Found an inconsistent store.
		return false;}}catch(error){// If `getSnapshot` throws, return `false`. This will schedule
		// a re-render, and the error will be rethrown during render.
		return false;}}}}}var child=node.child;if(node.subtreeFlags&StoreConsistency&&child!==null){child.return=node;node=child;continue;}if(node===finishedWork){return true;}while(node.sibling===null){if(node.return===null||node.return===finishedWork){return true;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}// Flow doesn't know this is unreachable, but eslint does
		// eslint-disable-next-line no-unreachable
		return true;}function markRootSuspended$1(root,suspendedLanes){// When suspending, we should always exclude lanes that were pinged or (more
		// rarely, since we try to avoid it) updated during the render phase.
		// TODO: Lol maybe there's a better way to factor this besides this
		// obnoxiously named function :)
		suspendedLanes=removeLanes(suspendedLanes,workInProgressRootPingedLanes);suspendedLanes=removeLanes(suspendedLanes,workInProgressRootInterleavedUpdatedLanes);markRootSuspended(root,suspendedLanes);}// This is the entry point for synchronous tasks that don't go
		// through Scheduler
		function performSyncWorkOnRoot(root){{syncNestedUpdateFlag();}if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}flushPassiveEffects();var lanes=getNextLanes(root,NoLanes);if(!includesSomeLane(lanes,SyncLane)){// There's no remaining sync work left.
		ensureRootIsScheduled(root,now());return null;}var exitStatus=renderRootSync(root,lanes);if(root.tag!==LegacyRoot&&exitStatus===RootErrored){// If something threw an error, try rendering one more time. We'll render
		// synchronously to block concurrent data mutations, and we'll includes
		// all pending updates are included. If it still fails after the second
		// attempt, we'll give up and commit the resulting tree.
		var errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(errorRetryLanes!==NoLanes){lanes=errorRetryLanes;exitStatus=recoverFromConcurrentError(root,errorRetryLanes);}}if(exitStatus===RootFatalErrored){var fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now());throw fatalError;}if(exitStatus===RootDidNotComplete){throw new Error('Root did not complete. This is a bug in React.');}// We now have a consistent tree. Because this is a sync render, we
		// will commit it even if something suspended.
		var finishedWork=root.current.alternate;root.finishedWork=finishedWork;root.finishedLanes=lanes;commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);// Before exiting, make sure there's a callback scheduled for the next
		// pending level.
		ensureRootIsScheduled(root,now());return null;}function flushRoot(root,lanes){if(lanes!==NoLanes){markRootEntangled(root,mergeLanes(lanes,SyncLane));ensureRootIsScheduled(root,now());if((executionContext&(RenderContext|CommitContext))===NoContext){resetRenderTimer();flushSyncCallbacks();}}}function batchedUpdates$1(fn,a){var prevExecutionContext=executionContext;executionContext|=BatchedContext;try{return fn(a);}finally{executionContext=prevExecutionContext;// If there were legacy sync updates, flush them at the end of the outer
		// most batchedUpdates-like method.
		if(executionContext===NoContext&&// Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
		!ReactCurrentActQueue$1.isBatchingLegacy){resetRenderTimer();flushSyncCallbacksOnlyInLegacyMode();}}}function discreteUpdates(fn,a,b,c,d){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$3.transition;try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);return fn(a,b,c,d);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;if(executionContext===NoContext){resetRenderTimer();}}}// Overload the definition to the two valid signatures.
		// Warning, this opts-out of checking the function body.
		// eslint-disable-next-line no-redeclare
		function flushSync(fn){// In legacy mode, we flush pending passive effects at the beginning of the
		// next event, not at the end of the previous one.
		if(rootWithPendingPassiveEffects!==null&&rootWithPendingPassiveEffects.tag===LegacyRoot&&(executionContext&(RenderContext|CommitContext))===NoContext){flushPassiveEffects();}var prevExecutionContext=executionContext;executionContext|=BatchedContext;var prevTransition=ReactCurrentBatchConfig$3.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);if(fn){return fn();}else {return undefined;}}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;executionContext=prevExecutionContext;// Flush the immediate callbacks that were scheduled during this batch.
		// Note that this will happen even if batchedUpdates is higher up
		// the stack.
		if((executionContext&(RenderContext|CommitContext))===NoContext){flushSyncCallbacks();}}}function isAlreadyRendering(){// Used by the renderer to print a warning if certain APIs are called from
		// the wrong context.
		return (executionContext&(RenderContext|CommitContext))!==NoContext;}function pushRenderLanes(fiber,lanes){push(subtreeRenderLanesCursor,subtreeRenderLanes,fiber);subtreeRenderLanes=mergeLanes(subtreeRenderLanes,lanes);}function popRenderLanes(fiber){subtreeRenderLanes=subtreeRenderLanesCursor.current;pop(subtreeRenderLanesCursor,fiber);}function prepareFreshStack(root,lanes){root.finishedWork=null;root.finishedLanes=NoLanes;var timeoutHandle=root.timeoutHandle;if(timeoutHandle!==noTimeout){// The root previous suspended and scheduled a timeout to commit a fallback
		// state. Now that we have additional work, cancel the timeout.
		root.timeoutHandle=noTimeout;// $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
		cancelTimeout(timeoutHandle);}if(workInProgress!==null){var interruptedWork=workInProgress.return;while(interruptedWork!==null){var current=interruptedWork.alternate;unwindInterruptedWork(current,interruptedWork);interruptedWork=interruptedWork.return;}}workInProgressRoot=root;var rootWorkInProgress=createWorkInProgress(root.current,null);workInProgress=rootWorkInProgress;workInProgressRootRenderLanes=subtreeRenderLanes=lanes;workInProgressRootExitStatus=RootInProgress;workInProgressRootFatalError=null;workInProgressRootSkippedLanes=NoLanes;workInProgressRootInterleavedUpdatedLanes=NoLanes;workInProgressRootPingedLanes=NoLanes;workInProgressRootConcurrentErrors=null;workInProgressRootRecoverableErrors=null;finishQueueingConcurrentUpdates();{ReactStrictModeWarnings.discardPendingWarnings();}return rootWorkInProgress;}function handleError(root,thrownValue){do{var erroredWork=workInProgress;try{// Reset module-level state that was set during the render phase.
		resetContextDependencies();resetHooksAfterThrow();resetCurrentFiber();// TODO: I found and added this missing line while investigating a
		// separate issue. Write a regression test using string refs.
		ReactCurrentOwner$2.current=null;if(erroredWork===null||erroredWork.return===null){// Expected to be working on a non-root fiber. This is a fatal error
		// because there's no ancestor that can handle it; the root is
		// supposed to capture all errors that weren't caught by an error
		// boundary.
		workInProgressRootExitStatus=RootFatalErrored;workInProgressRootFatalError=thrownValue;// Set `workInProgress` to null. This represents advancing to the next
		// sibling, or the parent if there are no siblings. But since the root
		// has no siblings nor a parent, we set it to null. Usually this is
		// handled by `completeUnitOfWork` or `unwindWork`, but since we're
		// intentionally not calling those, we need set it here.
		// TODO: Consider calling `unwindWork` to pop the contexts.
		workInProgress=null;return;}if(enableProfilerTimer&&erroredWork.mode&ProfileMode){// Record the time spent rendering before an error was thrown. This
		// avoids inaccurate Profiler durations in the case of a
		// suspended render.
		stopProfilerTimerIfRunningAndRecordDelta(erroredWork,true);}if(enableSchedulingProfiler){markComponentRenderStopped();if(thrownValue!==null&&typeof thrownValue==='object'&&typeof thrownValue.then==='function'){var wakeable=thrownValue;markComponentSuspended(erroredWork,wakeable,workInProgressRootRenderLanes);}else {markComponentErrored(erroredWork,thrownValue,workInProgressRootRenderLanes);}}throwException(root,erroredWork.return,erroredWork,thrownValue,workInProgressRootRenderLanes);completeUnitOfWork(erroredWork);}catch(yetAnotherThrownValue){// Something in the return path also threw.
		thrownValue=yetAnotherThrownValue;if(workInProgress===erroredWork&&erroredWork!==null){// If this boundary has already errored, then we had trouble processing
		// the error. Bubble it to the next boundary.
		erroredWork=erroredWork.return;workInProgress=erroredWork;}else {erroredWork=workInProgress;}continue;}// Return to the normal work loop.
		return;}while(true);}function pushDispatcher(){var prevDispatcher=ReactCurrentDispatcher$2.current;ReactCurrentDispatcher$2.current=ContextOnlyDispatcher;if(prevDispatcher===null){// The React isomorphic package does not include a default dispatcher.
		// Instead the first renderer will lazily attach one, in order to give
		// nicer error messages.
		return ContextOnlyDispatcher;}else {return prevDispatcher;}}function popDispatcher(prevDispatcher){ReactCurrentDispatcher$2.current=prevDispatcher;}function markCommitTimeOfFallback(){globalMostRecentFallbackTime=now();}function markSkippedUpdateLanes(lane){workInProgressRootSkippedLanes=mergeLanes(lane,workInProgressRootSkippedLanes);}function renderDidSuspend(){if(workInProgressRootExitStatus===RootInProgress){workInProgressRootExitStatus=RootSuspended;}}function renderDidSuspendDelayIfPossible(){if(workInProgressRootExitStatus===RootInProgress||workInProgressRootExitStatus===RootSuspended||workInProgressRootExitStatus===RootErrored){workInProgressRootExitStatus=RootSuspendedWithDelay;}// Check if there are updates that we skipped tree that might have unblocked
		// this render.
		if(workInProgressRoot!==null&&(includesNonIdleWork(workInProgressRootSkippedLanes)||includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))){// Mark the current render as suspended so that we switch to working on
		// the updates that were skipped. Usually we only suspend at the end of
		// the render phase.
		// TODO: We should probably always mark the root as suspended immediately
		// (inside this function), since by suspending at the end of the render
		// phase introduces a potential mistake where we suspend lanes that were
		// pinged or updated while we were rendering.
		markRootSuspended$1(workInProgressRoot,workInProgressRootRenderLanes);}}function renderDidError(error){if(workInProgressRootExitStatus!==RootSuspendedWithDelay){workInProgressRootExitStatus=RootErrored;}if(workInProgressRootConcurrentErrors===null){workInProgressRootConcurrentErrors=[error];}else {workInProgressRootConcurrentErrors.push(error);}}// Called during render to determine if anything has suspended.
		// Returns false if we're not sure.
		function renderHasNotSuspendedYet(){// If something errored or completed, we can't really be sure,
		// so those are false.
		return workInProgressRootExitStatus===RootInProgress;}function renderRootSync(root,lanes){var prevExecutionContext=executionContext;executionContext|=RenderContext;var prevDispatcher=pushDispatcher();// If the root or lanes have changed, throw out the existing stack
		// and prepare a fresh one. Otherwise we'll continue where we left off.
		if(workInProgressRoot!==root||workInProgressRootRenderLanes!==lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;if(memoizedUpdaters.size>0){restorePendingUpdaters(root,workInProgressRootRenderLanes);memoizedUpdaters.clear();}// At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
		// If we bailout on this work, we'll move them back (like above).
		// It's important to move them now in case the work spawns more work at the same priority with different updaters.
		// That way we can keep the current update and future updates separate.
		movePendingFibersToMemoized(root,lanes);}}workInProgressTransitions=getTransitionsForLanes();prepareFreshStack(root,lanes);}{markRenderStarted(lanes);}do{try{workLoopSync();break;}catch(thrownValue){handleError(root,thrownValue);}}while(true);resetContextDependencies();executionContext=prevExecutionContext;popDispatcher(prevDispatcher);if(workInProgress!==null){// This is a sync render, so we should have finished the whole tree.
		throw new Error('Cannot commit an incomplete root. This error is likely caused by a '+'bug in React. Please file an issue.');}{markRenderStopped();}// Set this to null to indicate there's no in-progress render.
		workInProgressRoot=null;workInProgressRootRenderLanes=NoLanes;return workInProgressRootExitStatus;}// The work loop is an extremely hot path. Tell Closure not to inline it.
		/** @noinline */function workLoopSync(){// Already timed out, so perform work without checking if we need to yield.
		while(workInProgress!==null){performUnitOfWork(workInProgress);}}function renderRootConcurrent(root,lanes){var prevExecutionContext=executionContext;executionContext|=RenderContext;var prevDispatcher=pushDispatcher();// If the root or lanes have changed, throw out the existing stack
		// and prepare a fresh one. Otherwise we'll continue where we left off.
		if(workInProgressRoot!==root||workInProgressRootRenderLanes!==lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;if(memoizedUpdaters.size>0){restorePendingUpdaters(root,workInProgressRootRenderLanes);memoizedUpdaters.clear();}// At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
		// If we bailout on this work, we'll move them back (like above).
		// It's important to move them now in case the work spawns more work at the same priority with different updaters.
		// That way we can keep the current update and future updates separate.
		movePendingFibersToMemoized(root,lanes);}}workInProgressTransitions=getTransitionsForLanes();resetRenderTimer();prepareFreshStack(root,lanes);}{markRenderStarted(lanes);}do{try{workLoopConcurrent();break;}catch(thrownValue){handleError(root,thrownValue);}}while(true);resetContextDependencies();popDispatcher(prevDispatcher);executionContext=prevExecutionContext;if(workInProgress!==null){// Still work remaining.
		{markRenderYielded();}return RootInProgress;}else {// Completed the tree.
		{markRenderStopped();}// Set this to null to indicate there's no in-progress render.
		workInProgressRoot=null;workInProgressRootRenderLanes=NoLanes;// Return the final exit status.
		return workInProgressRootExitStatus;}}/** @noinline */function workLoopConcurrent(){// Perform work until Scheduler asks us to yield
		while(workInProgress!==null&&!shouldYield()){performUnitOfWork(workInProgress);}}function performUnitOfWork(unitOfWork){// The current, flushed, state of this fiber is the alternate. Ideally
		// nothing should rely on this, but relying on it here means that we don't
		// need an additional field on the work in progress.
		var current=unitOfWork.alternate;setCurrentFiber(unitOfWork);var next;if((unitOfWork.mode&ProfileMode)!==NoMode){startProfilerTimer(unitOfWork);next=beginWork$1(current,unitOfWork,subtreeRenderLanes);stopProfilerTimerIfRunningAndRecordDelta(unitOfWork,true);}else {next=beginWork$1(current,unitOfWork,subtreeRenderLanes);}resetCurrentFiber();unitOfWork.memoizedProps=unitOfWork.pendingProps;if(next===null){// If this doesn't spawn new work, complete the current work.
		completeUnitOfWork(unitOfWork);}else {workInProgress=next;}ReactCurrentOwner$2.current=null;}function completeUnitOfWork(unitOfWork){// Attempt to complete the current unit of work, then move to the next
		// sibling. If there are no more siblings, return to the parent fiber.
		var completedWork=unitOfWork;do{// The current, flushed, state of this fiber is the alternate. Ideally
		// nothing should rely on this, but relying on it here means that we don't
		// need an additional field on the work in progress.
		var current=completedWork.alternate;var returnFiber=completedWork.return;// Check if the work completed or if something threw.
		if((completedWork.flags&Incomplete)===NoFlags){setCurrentFiber(completedWork);var next=void 0;if((completedWork.mode&ProfileMode)===NoMode){next=completeWork(current,completedWork,subtreeRenderLanes);}else {startProfilerTimer(completedWork);next=completeWork(current,completedWork,subtreeRenderLanes);// Update render duration assuming we didn't error.
		stopProfilerTimerIfRunningAndRecordDelta(completedWork,false);}resetCurrentFiber();if(next!==null){// Completing this fiber spawned new work. Work on that next.
		workInProgress=next;return;}}else {// This fiber did not complete because something threw. Pop values off
		// the stack without entering the complete phase. If this is a boundary,
		// capture values if possible.
		var _next=unwindWork(current,completedWork);// Because this fiber did not complete, don't reset its lanes.
		if(_next!==null){// If completing this work spawned new work, do that next. We'll come
		// back here again.
		// Since we're restarting, remove anything that is not a host effect
		// from the effect tag.
		_next.flags&=HostEffectMask;workInProgress=_next;return;}if((completedWork.mode&ProfileMode)!==NoMode){// Record the render duration for the fiber that errored.
		stopProfilerTimerIfRunningAndRecordDelta(completedWork,false);// Include the time spent working on failed children before continuing.
		var actualDuration=completedWork.actualDuration;var child=completedWork.child;while(child!==null){actualDuration+=child.actualDuration;child=child.sibling;}completedWork.actualDuration=actualDuration;}if(returnFiber!==null){// Mark the parent fiber as incomplete and clear its subtree flags.
		returnFiber.flags|=Incomplete;returnFiber.subtreeFlags=NoFlags;returnFiber.deletions=null;}else {// We've unwound all the way to the root.
		workInProgressRootExitStatus=RootDidNotComplete;workInProgress=null;return;}}var siblingFiber=completedWork.sibling;if(siblingFiber!==null){// If there is more work to do in this returnFiber, do that next.
		workInProgress=siblingFiber;return;}// Otherwise, return to the parent
		completedWork=returnFiber;// Update the next thing we're working on in case something throws.
		workInProgress=completedWork;}while(completedWork!==null);// We've reached the root.
		if(workInProgressRootExitStatus===RootInProgress){workInProgressRootExitStatus=RootCompleted;}}function commitRoot(root,recoverableErrors,transitions){// TODO: This no longer makes any sense. We already wrap the mutation and
		// layout phases. Should be able to remove.
		var previousUpdateLanePriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$3.transition;try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);commitRootImpl(root,recoverableErrors,transitions,previousUpdateLanePriority);}finally{ReactCurrentBatchConfig$3.transition=prevTransition;setCurrentUpdatePriority(previousUpdateLanePriority);}return null;}function commitRootImpl(root,recoverableErrors,transitions,renderPriorityLevel){do{// `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
		// means `flushPassiveEffects` will sometimes result in additional
		// passive effects. So we need to keep flushing in a loop until there are
		// no more pending effects.
		// TODO: Might be better if `flushPassiveEffects` did not automatically
		// flush synchronous work at the end, to avoid factoring hazards like this.
		flushPassiveEffects();}while(rootWithPendingPassiveEffects!==null);flushRenderPhaseStrictModeWarningsInDEV();if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}var finishedWork=root.finishedWork;var lanes=root.finishedLanes;{markCommitStarted(lanes);}if(finishedWork===null){{markCommitStopped();}return null;}else {{if(lanes===NoLanes){error('root.finishedLanes should not be empty during a commit. This is a '+'bug in React.');}}}root.finishedWork=null;root.finishedLanes=NoLanes;if(finishedWork===root.current){throw new Error('Cannot commit the same tree as before. This error is likely caused by '+'a bug in React. Please file an issue.');}// commitRoot never returns a continuation; it always finishes synchronously.
		// So we can clear these now to allow a new callback to be scheduled.
		root.callbackNode=null;root.callbackPriority=NoLane;// Update the first and last pending times on this root. The new first
		// pending time is whatever is left on the root fiber.
		var remainingLanes=mergeLanes(finishedWork.lanes,finishedWork.childLanes);markRootFinished(root,remainingLanes);if(root===workInProgressRoot){// We can reset these now that they are finished.
		workInProgressRoot=null;workInProgress=null;workInProgressRootRenderLanes=NoLanes;}// If there are pending passive effects, schedule a callback to process them.
		// Do this as early as possible, so it is queued before anything else that
		// might get scheduled in the commit phase. (See #16714.)
		// TODO: Delete all other places that schedule the passive effect callback
		// They're redundant.
		if((finishedWork.subtreeFlags&PassiveMask)!==NoFlags||(finishedWork.flags&PassiveMask)!==NoFlags){if(!rootDoesHavePassiveEffects){rootDoesHavePassiveEffects=true;// to store it in pendingPassiveTransitions until they get processed
		// We need to pass this through as an argument to commitRoot
		// because workInProgressTransitions might have changed between
		// the previous render and commit if we throttle the commit
		// with setTimeout
		pendingPassiveTransitions=transitions;scheduleCallback$1(NormalPriority,function(){flushPassiveEffects();// This render triggered passive effects: release the root cache pool
		// *after* passive effects fire to avoid freeing a cache pool that may
		// be referenced by a node in the tree (HostRoot, Cache boundary etc)
		return null;});}}// Check if there are any effects in the whole tree.
		// TODO: This is left over from the effect list implementation, where we had
		// to check for the existence of `firstEffect` to satisfy Flow. I think the
		// only other reason this optimization exists is because it affects profiling.
		// Reconsider whether this is necessary.
		var subtreeHasEffects=(finishedWork.subtreeFlags&(BeforeMutationMask|MutationMask|LayoutMask|PassiveMask))!==NoFlags;var rootHasEffect=(finishedWork.flags&(BeforeMutationMask|MutationMask|LayoutMask|PassiveMask))!==NoFlags;if(subtreeHasEffects||rootHasEffect){var prevTransition=ReactCurrentBatchConfig$3.transition;ReactCurrentBatchConfig$3.transition=null;var previousPriority=getCurrentUpdatePriority();setCurrentUpdatePriority(DiscreteEventPriority);var prevExecutionContext=executionContext;executionContext|=CommitContext;// Reset this to null before calling lifecycles
		ReactCurrentOwner$2.current=null;// The commit phase is broken into several sub-phases. We do a separate pass
		// of the effect list for each phase: all mutation effects come before all
		// layout effects, and so on.
		// The first phase a "before mutation" phase. We use this phase to read the
		// state of the host tree right before we mutate it. This is where
		// getSnapshotBeforeUpdate is called.
		commitBeforeMutationEffects(root,finishedWork);{// Mark the current commit time to be shared by all Profilers in this
		// batch. This enables them to be grouped later.
		recordCommitTime();}commitMutationEffects(root,finishedWork,lanes);resetAfterCommit(root.containerInfo);// The work-in-progress tree is now the current tree. This must come after
		// the mutation phase, so that the previous tree is still current during
		// componentWillUnmount, but before the layout phase, so that the finished
		// work is current during componentDidMount/Update.
		root.current=finishedWork;// The next phase is the layout phase, where we call effects that read
		{markLayoutEffectsStarted(lanes);}commitLayoutEffects(finishedWork,root,lanes);{markLayoutEffectsStopped();}// opportunity to paint.
		requestPaint();executionContext=prevExecutionContext;// Reset the priority to the previous non-sync value.
		setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;}else {// No effects.
		root.current=finishedWork;// Measure these anyway so the flamegraph explicitly shows that there were
		// no effects.
		// TODO: Maybe there's a better way to report this.
		{recordCommitTime();}}var rootDidHavePassiveEffects=rootDoesHavePassiveEffects;if(rootDoesHavePassiveEffects){// This commit has passive effects. Stash a reference to them. But don't
		// schedule a callback until after flushing layout work.
		rootDoesHavePassiveEffects=false;rootWithPendingPassiveEffects=root;pendingPassiveEffectsLanes=lanes;}else {{nestedPassiveUpdateCount=0;rootWithPassiveNestedUpdates=null;}}// Read this again, since an effect might have updated it
		remainingLanes=root.pendingLanes;// Check if there's remaining work on this root
		// TODO: This is part of the `componentDidCatch` implementation. Its purpose
		// is to detect whether something might have called setState inside
		// `componentDidCatch`. The mechanism is known to be flawed because `setState`
		// inside `componentDidCatch` is itself flawed — that's why we recommend
		// `getDerivedStateFromError` instead. However, it could be improved by
		// checking if remainingLanes includes Sync work, instead of whether there's
		// any work remaining at all (which would also include stuff like Suspense
		// retries or transitions). It's been like this for a while, though, so fixing
		// it probably isn't that urgent.
		if(remainingLanes===NoLanes){// If there's no remaining work, we can clear the set of already failed
		// error boundaries.
		legacyErrorBoundariesThatAlreadyFailed=null;}{if(!rootDidHavePassiveEffects){commitDoubleInvokeEffectsInDEV(root.current,false);}}onCommitRoot(finishedWork.stateNode,renderPriorityLevel);{if(isDevToolsPresent){root.memoizedUpdaters.clear();}}{onCommitRoot$1();}// Always call this before exiting `commitRoot`, to ensure that any
		// additional work on this root is scheduled.
		ensureRootIsScheduled(root,now());if(recoverableErrors!==null){// There were errors during this render, but recovered from them without
		// needing to surface it to the UI. We log them here.
		var onRecoverableError=root.onRecoverableError;for(var i=0;i<recoverableErrors.length;i++){var recoverableError=recoverableErrors[i];var componentStack=recoverableError.stack;var digest=recoverableError.digest;onRecoverableError(recoverableError.value,{componentStack:componentStack,digest:digest});}}if(hasUncaughtError){hasUncaughtError=false;var error$1=firstUncaughtError;firstUncaughtError=null;throw error$1;}// If the passive effects are the result of a discrete render, flush them
		// synchronously at the end of the current task so that the result is
		// immediately observable. Otherwise, we assume that they are not
		// order-dependent and do not need to be observed by external systems, so we
		// can wait until after paint.
		// TODO: We can optimize this by not scheduling the callback earlier. Since we
		// currently schedule the callback in multiple places, will wait until those
		// are consolidated.
		if(includesSomeLane(pendingPassiveEffectsLanes,SyncLane)&&root.tag!==LegacyRoot){flushPassiveEffects();}// Read this again, since a passive effect might have updated it
		remainingLanes=root.pendingLanes;if(includesSomeLane(remainingLanes,SyncLane)){{markNestedUpdateScheduled();}// Count the number of times the root synchronously re-renders without
		// finishing. If there are too many, it indicates an infinite update loop.
		if(root===rootWithNestedUpdates){nestedUpdateCount++;}else {nestedUpdateCount=0;rootWithNestedUpdates=root;}}else {nestedUpdateCount=0;}// If layout work was scheduled, flush it now.
		flushSyncCallbacks();{markCommitStopped();}return null;}function flushPassiveEffects(){// Returns whether passive effects were flushed.
		// TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
		// probably just combine the two functions. I believe they were only separate
		// in the first place because we used to wrap it with
		// `Scheduler.runWithPriority`, which accepts a function. But now we track the
		// priority within React itself, so we can mutate the variable directly.
		if(rootWithPendingPassiveEffects!==null){var renderPriority=lanesToEventPriority(pendingPassiveEffectsLanes);var priority=lowerEventPriority(DefaultEventPriority,renderPriority);var prevTransition=ReactCurrentBatchConfig$3.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(priority);return flushPassiveEffectsImpl();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;// Once passive effects have run for the tree - giving components a
		}}return false;}function enqueuePendingPassiveProfilerEffect(fiber){{pendingPassiveProfilerEffects.push(fiber);if(!rootDoesHavePassiveEffects){rootDoesHavePassiveEffects=true;scheduleCallback$1(NormalPriority,function(){flushPassiveEffects();return null;});}}}function flushPassiveEffectsImpl(){if(rootWithPendingPassiveEffects===null){return false;}// Cache and clear the transitions flag
		var transitions=pendingPassiveTransitions;pendingPassiveTransitions=null;var root=rootWithPendingPassiveEffects;var lanes=pendingPassiveEffectsLanes;rootWithPendingPassiveEffects=null;// TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
		// Figure out why and fix it. It's not causing any known issues (probably
		// because it's only used for profiling), but it's a refactor hazard.
		pendingPassiveEffectsLanes=NoLanes;if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Cannot flush passive effects while already rendering.');}{isFlushingPassiveEffects=true;didScheduleUpdateDuringPassiveEffects=false;}{markPassiveEffectsStarted(lanes);}var prevExecutionContext=executionContext;executionContext|=CommitContext;commitPassiveUnmountEffects(root.current);commitPassiveMountEffects(root,root.current,lanes,transitions);// TODO: Move to commitPassiveMountEffects
		{var profilerEffects=pendingPassiveProfilerEffects;pendingPassiveProfilerEffects=[];for(var i=0;i<profilerEffects.length;i++){var _fiber=profilerEffects[i];commitPassiveEffectDurations(root,_fiber);}}{markPassiveEffectsStopped();}{commitDoubleInvokeEffectsInDEV(root.current,true);}executionContext=prevExecutionContext;flushSyncCallbacks();{// If additional passive effects were scheduled, increment a counter. If this
		// exceeds the limit, we'll fire a warning.
		if(didScheduleUpdateDuringPassiveEffects){if(root===rootWithPassiveNestedUpdates){nestedPassiveUpdateCount++;}else {nestedPassiveUpdateCount=0;rootWithPassiveNestedUpdates=root;}}else {nestedPassiveUpdateCount=0;}isFlushingPassiveEffects=false;didScheduleUpdateDuringPassiveEffects=false;}// TODO: Move to commitPassiveMountEffects
		onPostCommitRoot(root);{var stateNode=root.current.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}return true;}function isAlreadyFailedLegacyErrorBoundary(instance){return legacyErrorBoundariesThatAlreadyFailed!==null&&legacyErrorBoundariesThatAlreadyFailed.has(instance);}function markLegacyErrorBoundaryAsFailed(instance){if(legacyErrorBoundariesThatAlreadyFailed===null){legacyErrorBoundariesThatAlreadyFailed=new Set([instance]);}else {legacyErrorBoundariesThatAlreadyFailed.add(instance);}}function prepareToThrowUncaughtError(error){if(!hasUncaughtError){hasUncaughtError=true;firstUncaughtError=error;}}var onUncaughtError=prepareToThrowUncaughtError;function captureCommitPhaseErrorOnRoot(rootFiber,sourceFiber,error){var errorInfo=createCapturedValueAtFiber(error,sourceFiber);var update=createRootErrorUpdate(rootFiber,errorInfo,SyncLane);var root=enqueueUpdate(rootFiber,update,SyncLane);var eventTime=requestEventTime();if(root!==null){markRootUpdated(root,SyncLane,eventTime);ensureRootIsScheduled(root,eventTime);}}function captureCommitPhaseError(sourceFiber,nearestMountedAncestor,error$1){{reportUncaughtErrorInDEV(error$1);setIsRunningInsertionEffect(false);}if(sourceFiber.tag===HostRoot){// Error was thrown at the root. There is no parent, so the root
		// itself should capture it.
		captureCommitPhaseErrorOnRoot(sourceFiber,sourceFiber,error$1);return;}var fiber=null;{fiber=nearestMountedAncestor;}while(fiber!==null){if(fiber.tag===HostRoot){captureCommitPhaseErrorOnRoot(fiber,sourceFiber,error$1);return;}else if(fiber.tag===ClassComponent){var ctor=fiber.type;var instance=fiber.stateNode;if(typeof ctor.getDerivedStateFromError==='function'||typeof instance.componentDidCatch==='function'&&!isAlreadyFailedLegacyErrorBoundary(instance)){var errorInfo=createCapturedValueAtFiber(error$1,sourceFiber);var update=createClassErrorUpdate(fiber,errorInfo,SyncLane);var root=enqueueUpdate(fiber,update,SyncLane);var eventTime=requestEventTime();if(root!==null){markRootUpdated(root,SyncLane,eventTime);ensureRootIsScheduled(root,eventTime);}return;}}fiber=fiber.return;}{// TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
		// will fire for errors that are thrown by destroy functions inside deleted
		// trees. What it should instead do is propagate the error to the parent of
		// the deleted tree. In the meantime, do not add this warning to the
		// allowlist; this is only for our internal use.
		error('Internal React error: Attempted to capture a commit phase error '+'inside a detached tree. This indicates a bug in React. Likely '+'causes include deleting the same fiber more than once, committing an '+'already-finished tree, or an inconsistent return pointer.\n\n'+'Error message:\n\n%s',error$1);}}function pingSuspendedRoot(root,wakeable,pingedLanes){var pingCache=root.pingCache;if(pingCache!==null){// The wakeable resolved, so we no longer need to memoize, because it will
		// never be thrown again.
		pingCache.delete(wakeable);}var eventTime=requestEventTime();markRootPinged(root,pingedLanes);warnIfSuspenseResolutionNotWrappedWithActDEV(root);if(workInProgressRoot===root&&isSubsetOfLanes(workInProgressRootRenderLanes,pingedLanes)){// Received a ping at the same priority level at which we're currently
		// rendering. We might want to restart this render. This should mirror
		// the logic of whether or not a root suspends once it completes.
		// TODO: If we're rendering sync either due to Sync, Batched or expired,
		// we should probably never restart.
		// If we're suspended with delay, or if it's a retry, we'll always suspend
		// so we can always restart.
		if(workInProgressRootExitStatus===RootSuspendedWithDelay||workInProgressRootExitStatus===RootSuspended&&includesOnlyRetries(workInProgressRootRenderLanes)&&now()-globalMostRecentFallbackTime<FALLBACK_THROTTLE_MS){// Restart from the root.
		prepareFreshStack(root,NoLanes);}else {// Even though we can't restart right now, we might get an
		// opportunity later. So we mark this render as having a ping.
		workInProgressRootPingedLanes=mergeLanes(workInProgressRootPingedLanes,pingedLanes);}}ensureRootIsScheduled(root,eventTime);}function retryTimedOutBoundary(boundaryFiber,retryLane){// The boundary fiber (a Suspense component or SuspenseList component)
		// previously was rendered in its fallback state. One of the promises that
		// suspended it has resolved, which means at least part of the tree was
		// likely unblocked. Try rendering again, at a new lanes.
		if(retryLane===NoLane){// TODO: Assign this to `suspenseState.retryLane`? to avoid
		// unnecessary entanglement?
		retryLane=requestRetryLane(boundaryFiber);}// TODO: Special case idle priority?
		var eventTime=requestEventTime();var root=enqueueConcurrentRenderForLane(boundaryFiber,retryLane);if(root!==null){markRootUpdated(root,retryLane,eventTime);ensureRootIsScheduled(root,eventTime);}}function retryDehydratedSuspenseBoundary(boundaryFiber){var suspenseState=boundaryFiber.memoizedState;var retryLane=NoLane;if(suspenseState!==null){retryLane=suspenseState.retryLane;}retryTimedOutBoundary(boundaryFiber,retryLane);}function resolveRetryWakeable(boundaryFiber,wakeable){var retryLane=NoLane;// Default
		var retryCache;switch(boundaryFiber.tag){case SuspenseComponent:retryCache=boundaryFiber.stateNode;var suspenseState=boundaryFiber.memoizedState;if(suspenseState!==null){retryLane=suspenseState.retryLane;}break;case SuspenseListComponent:retryCache=boundaryFiber.stateNode;break;default:throw new Error('Pinged unknown suspense boundary type. '+'This is probably a bug in React.');}if(retryCache!==null){// The wakeable resolved, so we no longer need to memoize, because it will
		// never be thrown again.
		retryCache.delete(wakeable);}retryTimedOutBoundary(boundaryFiber,retryLane);}// Computes the next Just Noticeable Difference (JND) boundary.
		// The theory is that a person can't tell the difference between small differences in time.
		// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
		// difference in the experience. However, waiting for longer might mean that we can avoid
		// showing an intermediate loading state. The longer we have already waited, the harder it
		// is to tell small differences in time. Therefore, the longer we've already waited,
		// the longer we can wait additionally. At some point we have to give up though.
		// We pick a train model where the next boundary commits at a consistent schedule.
		// These particular numbers are vague estimates. We expect to adjust them based on research.
		function jnd(timeElapsed){return timeElapsed<120?120:timeElapsed<480?480:timeElapsed<1080?1080:timeElapsed<1920?1920:timeElapsed<3000?3000:timeElapsed<4320?4320:ceil(timeElapsed/1960)*1960;}function checkForNestedUpdates(){if(nestedUpdateCount>NESTED_UPDATE_LIMIT){nestedUpdateCount=0;rootWithNestedUpdates=null;throw new Error('Maximum update depth exceeded. This can happen when a component '+'repeatedly calls setState inside componentWillUpdate or '+'componentDidUpdate. React limits the number of nested updates to '+'prevent infinite loops.');}{if(nestedPassiveUpdateCount>NESTED_PASSIVE_UPDATE_LIMIT){nestedPassiveUpdateCount=0;rootWithPassiveNestedUpdates=null;error('Maximum update depth exceeded. This can happen when a component '+"calls setState inside useEffect, but useEffect either doesn't "+'have a dependency array, or one of the dependencies changes on '+'every render.');}}}function flushRenderPhaseStrictModeWarningsInDEV(){{ReactStrictModeWarnings.flushLegacyContextWarning();{ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();}}}function commitDoubleInvokeEffectsInDEV(fiber,hasPassiveEffects){{// TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
		// so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
		// Maybe not a big deal since this is DEV only behavior.
		setCurrentFiber(fiber);invokeEffectsInDev(fiber,MountLayoutDev,invokeLayoutEffectUnmountInDEV);if(hasPassiveEffects){invokeEffectsInDev(fiber,MountPassiveDev,invokePassiveEffectUnmountInDEV);}invokeEffectsInDev(fiber,MountLayoutDev,invokeLayoutEffectMountInDEV);if(hasPassiveEffects){invokeEffectsInDev(fiber,MountPassiveDev,invokePassiveEffectMountInDEV);}resetCurrentFiber();}}function invokeEffectsInDev(firstChild,fiberFlags,invokeEffectFn){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		var current=firstChild;var subtreeRoot=null;while(current!==null){var primarySubtreeFlag=current.subtreeFlags&fiberFlags;if(current!==subtreeRoot&&current.child!==null&&primarySubtreeFlag!==NoFlags){current=current.child;}else {if((current.flags&fiberFlags)!==NoFlags){invokeEffectFn(current);}if(current.sibling!==null){current=current.sibling;}else {current=subtreeRoot=current.return;}}}}}var didWarnStateUpdateForNotYetMountedComponent=null;function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber){{if((executionContext&RenderContext)!==NoContext){// We let the other warning about render phase updates deal with this one.
		return;}if(!(fiber.mode&ConcurrentMode)){return;}var tag=fiber.tag;if(tag!==IndeterminateComponent&&tag!==HostRoot&&tag!==ClassComponent&&tag!==FunctionComponent&&tag!==ForwardRef&&tag!==MemoComponent&&tag!==SimpleMemoComponent){// Only warn for user-defined components, not internal ones like Suspense.
		return;}// We show the whole stack but dedupe on the top component's name because
		// the problematic code almost always lies inside that component.
		var componentName=getComponentNameFromFiber(fiber)||'ReactComponent';if(didWarnStateUpdateForNotYetMountedComponent!==null){if(didWarnStateUpdateForNotYetMountedComponent.has(componentName)){return;}didWarnStateUpdateForNotYetMountedComponent.add(componentName);}else {didWarnStateUpdateForNotYetMountedComponent=new Set([componentName]);}var previousFiber=current;try{setCurrentFiber(fiber);error("Can't perform a React state update on a component that hasn't mounted yet. "+'This indicates that you have a side-effect in your render function that '+'asynchronously later calls tries to update the component. Move this work to '+'useEffect instead.');}finally{if(previousFiber){setCurrentFiber(fiber);}else {resetCurrentFiber();}}}}var beginWork$1;{var dummyFiber=null;beginWork$1=function(current,unitOfWork,lanes){// If a component throws an error, we replay it again in a synchronously
		// dispatched event, so that the debugger will treat it as an uncaught
		// error See ReactErrorUtils for more information.
		// Before entering the begin phase, copy the work-in-progress onto a dummy
		// fiber. If beginWork throws, we'll use this to reset the state.
		var originalWorkInProgressCopy=assignFiberPropertiesInDEV(dummyFiber,unitOfWork);try{return beginWork(current,unitOfWork,lanes);}catch(originalError){if(didSuspendOrErrorWhileHydratingDEV()||originalError!==null&&typeof originalError==='object'&&typeof originalError.then==='function'){// Don't replay promises.
		// Don't replay errors if we are hydrating and have already suspended or handled an error
		throw originalError;}// Keep this code in sync with handleError; any changes here must have
		// corresponding changes there.
		resetContextDependencies();resetHooksAfterThrow();// Don't reset current debug fiber, since we're about to work on the
		// same fiber again.
		// Unwind the failed stack frame
		unwindInterruptedWork(current,unitOfWork);// Restore the original properties of the fiber.
		assignFiberPropertiesInDEV(unitOfWork,originalWorkInProgressCopy);if(unitOfWork.mode&ProfileMode){// Reset the profiler timer.
		startProfilerTimer(unitOfWork);}// Run beginWork again.
		invokeGuardedCallback(null,beginWork,null,current,unitOfWork,lanes);if(hasCaughtError()){var replayError=clearCaughtError();if(typeof replayError==='object'&&replayError!==null&&replayError._suppressLogging&&typeof originalError==='object'&&originalError!==null&&!originalError._suppressLogging){// If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
		originalError._suppressLogging=true;}}// We always throw the original error in case the second render pass is not idempotent.
		// This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
		throw originalError;}};}var didWarnAboutUpdateInRender=false;var didWarnAboutUpdateInRenderForAnotherComponent;{didWarnAboutUpdateInRenderForAnotherComponent=new Set();}function warnAboutRenderPhaseUpdatesInDEV(fiber){{if(isRendering&&!getIsUpdatingOpaqueValueInRenderPhaseInDEV()){switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{var renderingComponentName=workInProgress&&getComponentNameFromFiber(workInProgress)||'Unknown';// Dedupe by the rendering component because it's the one that needs to be fixed.
		var dedupeKey=renderingComponentName;if(!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)){didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);var setStateComponentName=getComponentNameFromFiber(fiber)||'Unknown';error('Cannot update a component (`%s`) while rendering a '+'different component (`%s`). To locate the bad setState() call inside `%s`, '+'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',setStateComponentName,renderingComponentName,renderingComponentName);}break;}case ClassComponent:{if(!didWarnAboutUpdateInRender){error('Cannot update during an existing state transition (such as '+'within `render`). Render methods should be a pure '+'function of props and state.');didWarnAboutUpdateInRender=true;}break;}}}}}function restorePendingUpdaters(root,lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;memoizedUpdaters.forEach(function(schedulingFiber){addFiberToLanesMap(root,schedulingFiber,lanes);});// This function intentionally does not clear memoized updaters.
		// Those may still be relevant to the current commit
		// and a future one (e.g. Suspense).
		}}}var fakeActCallbackNode={};function scheduleCallback$1(priorityLevel,callback){{// If we're currently inside an `act` scope, bypass Scheduler and push to
		// the `act` queue instead.
		var actQueue=ReactCurrentActQueue$1.current;if(actQueue!==null){actQueue.push(callback);return fakeActCallbackNode;}else {return scheduleCallback(priorityLevel,callback);}}}function cancelCallback$1(callbackNode){if(callbackNode===fakeActCallbackNode){return;}// In production, always call Scheduler. This function will be stripped out.
		return cancelCallback(callbackNode);}function shouldForceFlushFallbacksInDEV(){// Never force flush in production. This function should get stripped out.
		return ReactCurrentActQueue$1.current!==null;}function warnIfUpdatesNotWrappedWithActDEV(fiber){{if(fiber.mode&ConcurrentMode){if(!isConcurrentActEnvironment()){// Not in an act environment. No need to warn.
		return;}}else {// Legacy mode has additional cases where we suppress a warning.
		if(!isLegacyActEnvironment()){// Not in an act environment. No need to warn.
		return;}if(executionContext!==NoContext){// Legacy mode doesn't warn if the update is batched, i.e.
		// batchedUpdates or flushSync.
		return;}if(fiber.tag!==FunctionComponent&&fiber.tag!==ForwardRef&&fiber.tag!==SimpleMemoComponent){// For backwards compatibility with pre-hooks code, legacy mode only
		// warns for updates that originate from a hook.
		return;}}if(ReactCurrentActQueue$1.current===null){var previousFiber=current;try{setCurrentFiber(fiber);error('An update to %s inside a test was not wrapped in act(...).\n\n'+'When testing, code that causes React state updates should be '+'wrapped into act(...):\n\n'+'act(() => {\n'+'  /* fire events that update state */\n'+'});\n'+'/* assert on the output */\n\n'+"This ensures that you're testing the behavior the user would see "+'in the browser.'+' Learn more at https://reactjs.org/link/wrap-tests-with-act',getComponentNameFromFiber(fiber));}finally{if(previousFiber){setCurrentFiber(fiber);}else {resetCurrentFiber();}}}}}function warnIfSuspenseResolutionNotWrappedWithActDEV(root){{if(root.tag!==LegacyRoot&&isConcurrentActEnvironment()&&ReactCurrentActQueue$1.current===null){error('A suspended resource finished loading inside a test, but the event '+'was not wrapped in act(...).\n\n'+'When testing, code that resolves suspended data should be wrapped '+'into act(...):\n\n'+'act(() => {\n'+'  /* finish loading suspended data */\n'+'});\n'+'/* assert on the output */\n\n'+"This ensures that you're testing the behavior the user would see "+'in the browser.'+' Learn more at https://reactjs.org/link/wrap-tests-with-act');}}}function setIsRunningInsertionEffect(isRunning){{isRunningInsertionEffect=isRunning;}}/* eslint-disable react-internal/prod-error-codes */var resolveFamily=null;// $FlowFixMe Flow gets confused by a WeakSet feature check below.
		var failedBoundaries=null;var setRefreshHandler=function(handler){{resolveFamily=handler;}};function resolveFunctionForHotReloading(type){{if(resolveFamily===null){// Hot reloading is disabled.
		return type;}var family=resolveFamily(type);if(family===undefined){return type;}// Use the latest known implementation.
		return family.current;}}function resolveClassForHotReloading(type){// No implementation differences.
		return resolveFunctionForHotReloading(type);}function resolveForwardRefForHotReloading(type){{if(resolveFamily===null){// Hot reloading is disabled.
		return type;}var family=resolveFamily(type);if(family===undefined){// Check if we're dealing with a real forwardRef. Don't want to crash early.
		if(type!==null&&type!==undefined&&typeof type.render==='function'){// ForwardRef is special because its resolved .type is an object,
		// but it's possible that we only have its inner render function in the map.
		// If that inner render function is different, we'll build a new forwardRef type.
		var currentRender=resolveFunctionForHotReloading(type.render);if(type.render!==currentRender){var syntheticType={$$typeof:REACT_FORWARD_REF_TYPE,render:currentRender};if(type.displayName!==undefined){syntheticType.displayName=type.displayName;}return syntheticType;}}return type;}// Use the latest known implementation.
		return family.current;}}function isCompatibleFamilyForHotReloading(fiber,element){{if(resolveFamily===null){// Hot reloading is disabled.
		return false;}var prevType=fiber.elementType;var nextType=element.type;// If we got here, we know types aren't === equal.
		var needsCompareFamilies=false;var $$typeofNextType=typeof nextType==='object'&&nextType!==null?nextType.$$typeof:null;switch(fiber.tag){case ClassComponent:{if(typeof nextType==='function'){needsCompareFamilies=true;}break;}case FunctionComponent:{if(typeof nextType==='function'){needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){// We don't know the inner type yet.
		// We're going to assume that the lazy inner type is stable,
		// and so it is sufficient to avoid reconciling it away.
		// We're not going to unwrap or actually use the new lazy type.
		needsCompareFamilies=true;}break;}case ForwardRef:{if($$typeofNextType===REACT_FORWARD_REF_TYPE){needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){needsCompareFamilies=true;}break;}case MemoComponent:case SimpleMemoComponent:{if($$typeofNextType===REACT_MEMO_TYPE){// TODO: if it was but can no longer be simple,
		// we shouldn't set this.
		needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){needsCompareFamilies=true;}break;}default:return false;}// Check if both types have a family and it's the same one.
		if(needsCompareFamilies){// Note: memo() and forwardRef() we'll compare outer rather than inner type.
		// This means both of them need to be registered to preserve state.
		// If we unwrapped and compared the inner types for wrappers instead,
		// then we would risk falsely saying two separate memo(Foo)
		// calls are equivalent because they wrap the same Foo function.
		var prevFamily=resolveFamily(prevType);if(prevFamily!==undefined&&prevFamily===resolveFamily(nextType)){return true;}}return false;}}function markFailedErrorBoundaryForHotReloading(fiber){{if(resolveFamily===null){// Hot reloading is disabled.
		return;}if(typeof WeakSet!=='function'){return;}if(failedBoundaries===null){failedBoundaries=new WeakSet();}failedBoundaries.add(fiber);}}var scheduleRefresh=function(root,update){{if(resolveFamily===null){// Hot reloading is disabled.
		return;}var staleFamilies=update.staleFamilies,updatedFamilies=update.updatedFamilies;flushPassiveEffects();flushSync(function(){scheduleFibersWithFamiliesRecursively(root.current,updatedFamilies,staleFamilies);});}};var scheduleRoot=function(root,element){{if(root.context!==emptyContextObject){// Super edge case: root has a legacy _renderSubtree context
		// but we don't know the parentComponent so we can't pass it.
		// Just ignore. We'll delete this with _renderSubtree code path later.
		return;}flushPassiveEffects();flushSync(function(){updateContainer(element,root,null,null);});}};function scheduleFibersWithFamiliesRecursively(fiber,updatedFamilies,staleFamilies){{var alternate=fiber.alternate,child=fiber.child,sibling=fiber.sibling,tag=fiber.tag,type=fiber.type;var candidateType=null;switch(tag){case FunctionComponent:case SimpleMemoComponent:case ClassComponent:candidateType=type;break;case ForwardRef:candidateType=type.render;break;}if(resolveFamily===null){throw new Error('Expected resolveFamily to be set during hot reload.');}var needsRender=false;var needsRemount=false;if(candidateType!==null){var family=resolveFamily(candidateType);if(family!==undefined){if(staleFamilies.has(family)){needsRemount=true;}else if(updatedFamilies.has(family)){if(tag===ClassComponent){needsRemount=true;}else {needsRender=true;}}}}if(failedBoundaries!==null){if(failedBoundaries.has(fiber)||alternate!==null&&failedBoundaries.has(alternate)){needsRemount=true;}}if(needsRemount){fiber._debugNeedsRemount=true;}if(needsRemount||needsRender){var _root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(_root!==null){scheduleUpdateOnFiber(_root,fiber,SyncLane,NoTimestamp);}}if(child!==null&&!needsRemount){scheduleFibersWithFamiliesRecursively(child,updatedFamilies,staleFamilies);}if(sibling!==null){scheduleFibersWithFamiliesRecursively(sibling,updatedFamilies,staleFamilies);}}}var findHostInstancesForRefresh=function(root,families){{var hostInstances=new Set();var types=new Set(families.map(function(family){return family.current;}));findHostInstancesForMatchingFibersRecursively(root.current,types,hostInstances);return hostInstances;}};function findHostInstancesForMatchingFibersRecursively(fiber,types,hostInstances){{var child=fiber.child,sibling=fiber.sibling,tag=fiber.tag,type=fiber.type;var candidateType=null;switch(tag){case FunctionComponent:case SimpleMemoComponent:case ClassComponent:candidateType=type;break;case ForwardRef:candidateType=type.render;break;}var didMatch=false;if(candidateType!==null){if(types.has(candidateType)){didMatch=true;}}if(didMatch){// We have a match. This only drills down to the closest host components.
		// There's no need to search deeper because for the purpose of giving
		// visual feedback, "flashing" outermost parent rectangles is sufficient.
		findHostInstancesForFiberShallowly(fiber,hostInstances);}else {// If there's no match, maybe there will be one further down in the child tree.
		if(child!==null){findHostInstancesForMatchingFibersRecursively(child,types,hostInstances);}}if(sibling!==null){findHostInstancesForMatchingFibersRecursively(sibling,types,hostInstances);}}}function findHostInstancesForFiberShallowly(fiber,hostInstances){{var foundHostInstances=findChildHostInstancesForFiberShallowly(fiber,hostInstances);if(foundHostInstances){return;}// If we didn't find any host children, fallback to closest host parent.
		var node=fiber;while(true){switch(node.tag){case HostComponent:hostInstances.add(node.stateNode);return;case HostPortal:hostInstances.add(node.stateNode.containerInfo);return;case HostRoot:hostInstances.add(node.stateNode.containerInfo);return;}if(node.return===null){throw new Error('Expected to reach root first.');}node=node.return;}}}function findChildHostInstancesForFiberShallowly(fiber,hostInstances){{var node=fiber;var foundHostInstances=false;while(true){if(node.tag===HostComponent){// We got a match.
		foundHostInstances=true;hostInstances.add(node.stateNode);// There may still be more, so keep searching.
		}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===fiber){return foundHostInstances;}while(node.sibling===null){if(node.return===null||node.return===fiber){return foundHostInstances;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}return false;}var hasBadMapPolyfill;{hasBadMapPolyfill=false;try{var nonExtensibleObject=Object.preventExtensions({});/* eslint-disable no-new */new Map([[nonExtensibleObject,null]]);new Set([nonExtensibleObject]);/* eslint-enable no-new */}catch(e){// TODO: Consider warning about bad polyfills
		hasBadMapPolyfill=true;}}function FiberNode(tag,pendingProps,key,mode){// Instance
		this.tag=tag;this.key=key;this.elementType=null;this.type=null;this.stateNode=null;// Fiber
		this.return=null;this.child=null;this.sibling=null;this.index=0;this.ref=null;this.pendingProps=pendingProps;this.memoizedProps=null;this.updateQueue=null;this.memoizedState=null;this.dependencies=null;this.mode=mode;// Effects
		this.flags=NoFlags;this.subtreeFlags=NoFlags;this.deletions=null;this.lanes=NoLanes;this.childLanes=NoLanes;this.alternate=null;{// Note: The following is done to avoid a v8 performance cliff.
		//
		// Initializing the fields below to smis and later updating them with
		// double values will cause Fibers to end up having separate shapes.
		// This behavior/bug has something to do with Object.preventExtension().
		// Fortunately this only impacts DEV builds.
		// Unfortunately it makes React unusably slow for some applications.
		// To work around this, initialize the fields below with doubles.
		//
		// Learn more about this here:
		// https://github.com/facebook/react/issues/14365
		// https://bugs.chromium.org/p/v8/issues/detail?id=8538
		this.actualDuration=Number.NaN;this.actualStartTime=Number.NaN;this.selfBaseDuration=Number.NaN;this.treeBaseDuration=Number.NaN;// It's okay to replace the initial doubles with smis after initialization.
		// This won't trigger the performance cliff mentioned above,
		// and it simplifies other profiler code (including DevTools).
		this.actualDuration=0;this.actualStartTime=-1;this.selfBaseDuration=0;this.treeBaseDuration=0;}{// This isn't directly used but is handy for debugging internals:
		this._debugSource=null;this._debugOwner=null;this._debugNeedsRemount=false;this._debugHookTypes=null;if(!hasBadMapPolyfill&&typeof Object.preventExtensions==='function'){Object.preventExtensions(this);}}}// This is a constructor function, rather than a POJO constructor, still
		// please ensure we do the following:
		// 1) Nobody should add any instance methods on this. Instance methods can be
		//    more difficult to predict when they get optimized and they are almost
		//    never inlined properly in static compilers.
		// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
		//    always know when it is a fiber.
		// 3) We might want to experiment with using numeric keys since they are easier
		//    to optimize in a non-JIT environment.
		// 4) We can easily go from a constructor to a createFiber object literal if that
		//    is faster.
		// 5) It should be easy to port this to a C struct and keep a C implementation
		//    compatible.
		var createFiber=function(tag,pendingProps,key,mode){// $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
		return new FiberNode(tag,pendingProps,key,mode);};function shouldConstruct$1(Component){var prototype=Component.prototype;return !!(prototype&&prototype.isReactComponent);}function isSimpleFunctionComponent(type){return typeof type==='function'&&!shouldConstruct$1(type)&&type.defaultProps===undefined;}function resolveLazyComponentTag(Component){if(typeof Component==='function'){return shouldConstruct$1(Component)?ClassComponent:FunctionComponent;}else if(Component!==undefined&&Component!==null){var $$typeof=Component.$$typeof;if($$typeof===REACT_FORWARD_REF_TYPE){return ForwardRef;}if($$typeof===REACT_MEMO_TYPE){return MemoComponent;}}return IndeterminateComponent;}// This is used to create an alternate fiber to do work on.
		function createWorkInProgress(current,pendingProps){var workInProgress=current.alternate;if(workInProgress===null){// We use a double buffering pooling technique because we know that we'll
		// only ever need at most two versions of a tree. We pool the "other" unused
		// node that we're free to reuse. This is lazily created to avoid allocating
		// extra objects for things that are never updated. It also allow us to
		// reclaim the extra memory if needed.
		workInProgress=createFiber(current.tag,pendingProps,current.key,current.mode);workInProgress.elementType=current.elementType;workInProgress.type=current.type;workInProgress.stateNode=current.stateNode;{// DEV-only fields
		workInProgress._debugSource=current._debugSource;workInProgress._debugOwner=current._debugOwner;workInProgress._debugHookTypes=current._debugHookTypes;}workInProgress.alternate=current;current.alternate=workInProgress;}else {workInProgress.pendingProps=pendingProps;// Needed because Blocks store data on type.
		workInProgress.type=current.type;// We already have an alternate.
		// Reset the effect tag.
		workInProgress.flags=NoFlags;// The effects are no longer valid.
		workInProgress.subtreeFlags=NoFlags;workInProgress.deletions=null;{// We intentionally reset, rather than copy, actualDuration & actualStartTime.
		// This prevents time from endlessly accumulating in new commits.
		// This has the downside of resetting values for different priority renders,
		// But works for yielding (the common case) and should support resuming.
		workInProgress.actualDuration=0;workInProgress.actualStartTime=-1;}}// Reset all effects except static ones.
		// Static effects are not specific to a render.
		workInProgress.flags=current.flags&StaticMask;workInProgress.childLanes=current.childLanes;workInProgress.lanes=current.lanes;workInProgress.child=current.child;workInProgress.memoizedProps=current.memoizedProps;workInProgress.memoizedState=current.memoizedState;workInProgress.updateQueue=current.updateQueue;// Clone the dependencies object. This is mutated during the render phase, so
		// it cannot be shared with the current fiber.
		var currentDependencies=current.dependencies;workInProgress.dependencies=currentDependencies===null?null:{lanes:currentDependencies.lanes,firstContext:currentDependencies.firstContext};// These will be overridden during the parent's reconciliation
		workInProgress.sibling=current.sibling;workInProgress.index=current.index;workInProgress.ref=current.ref;{workInProgress.selfBaseDuration=current.selfBaseDuration;workInProgress.treeBaseDuration=current.treeBaseDuration;}{workInProgress._debugNeedsRemount=current._debugNeedsRemount;switch(workInProgress.tag){case IndeterminateComponent:case FunctionComponent:case SimpleMemoComponent:workInProgress.type=resolveFunctionForHotReloading(current.type);break;case ClassComponent:workInProgress.type=resolveClassForHotReloading(current.type);break;case ForwardRef:workInProgress.type=resolveForwardRefForHotReloading(current.type);break;}}return workInProgress;}// Used to reuse a Fiber for a second pass.
		function resetWorkInProgress(workInProgress,renderLanes){// This resets the Fiber to what createFiber or createWorkInProgress would
		// have set the values to before during the first pass. Ideally this wouldn't
		// be necessary but unfortunately many code paths reads from the workInProgress
		// when they should be reading from current and writing to workInProgress.
		// We assume pendingProps, index, key, ref, return are still untouched to
		// avoid doing another reconciliation.
		// Reset the effect flags but keep any Placement tags, since that's something
		// that child fiber is setting, not the reconciliation.
		workInProgress.flags&=StaticMask|Placement;// The effects are no longer valid.
		var current=workInProgress.alternate;if(current===null){// Reset to createFiber's initial values.
		workInProgress.childLanes=NoLanes;workInProgress.lanes=renderLanes;workInProgress.child=null;workInProgress.subtreeFlags=NoFlags;workInProgress.memoizedProps=null;workInProgress.memoizedState=null;workInProgress.updateQueue=null;workInProgress.dependencies=null;workInProgress.stateNode=null;{// Note: We don't reset the actualTime counts. It's useful to accumulate
		// actual time across multiple render passes.
		workInProgress.selfBaseDuration=0;workInProgress.treeBaseDuration=0;}}else {// Reset to the cloned values that createWorkInProgress would've.
		workInProgress.childLanes=current.childLanes;workInProgress.lanes=current.lanes;workInProgress.child=current.child;workInProgress.subtreeFlags=NoFlags;workInProgress.deletions=null;workInProgress.memoizedProps=current.memoizedProps;workInProgress.memoizedState=current.memoizedState;workInProgress.updateQueue=current.updateQueue;// Needed because Blocks store data on type.
		workInProgress.type=current.type;// Clone the dependencies object. This is mutated during the render phase, so
		// it cannot be shared with the current fiber.
		var currentDependencies=current.dependencies;workInProgress.dependencies=currentDependencies===null?null:{lanes:currentDependencies.lanes,firstContext:currentDependencies.firstContext};{// Note: We don't reset the actualTime counts. It's useful to accumulate
		// actual time across multiple render passes.
		workInProgress.selfBaseDuration=current.selfBaseDuration;workInProgress.treeBaseDuration=current.treeBaseDuration;}}return workInProgress;}function createHostRootFiber(tag,isStrictMode,concurrentUpdatesByDefaultOverride){var mode;if(tag===ConcurrentRoot){mode=ConcurrentMode;if(isStrictMode===true){mode|=StrictLegacyMode;{mode|=StrictEffectsMode;}}}else {mode=NoMode;}if(isDevToolsPresent){// Always collect profile timings when DevTools are present.
		// This enables DevTools to start capturing timing at any point–
		// Without some nodes in the tree having empty base times.
		mode|=ProfileMode;}return createFiber(HostRoot,null,null,mode);}function createFiberFromTypeAndProps(type,// React$ElementType
		key,pendingProps,owner,mode,lanes){var fiberTag=IndeterminateComponent;// The resolved type is set if we know what the final type will be. I.e. it's not lazy.
		var resolvedType=type;if(typeof type==='function'){if(shouldConstruct$1(type)){fiberTag=ClassComponent;{resolvedType=resolveClassForHotReloading(resolvedType);}}else {{resolvedType=resolveFunctionForHotReloading(resolvedType);}}}else if(typeof type==='string'){fiberTag=HostComponent;}else {getTag:switch(type){case REACT_FRAGMENT_TYPE:return createFiberFromFragment(pendingProps.children,mode,lanes,key);case REACT_STRICT_MODE_TYPE:fiberTag=Mode;mode|=StrictLegacyMode;if((mode&ConcurrentMode)!==NoMode){// Strict effects should never run on legacy roots
		mode|=StrictEffectsMode;}break;case REACT_PROFILER_TYPE:return createFiberFromProfiler(pendingProps,mode,lanes,key);case REACT_SUSPENSE_TYPE:return createFiberFromSuspense(pendingProps,mode,lanes,key);case REACT_SUSPENSE_LIST_TYPE:return createFiberFromSuspenseList(pendingProps,mode,lanes,key);case REACT_OFFSCREEN_TYPE:return createFiberFromOffscreen(pendingProps,mode,lanes,key);case REACT_LEGACY_HIDDEN_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_SCOPE_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_CACHE_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_TRACING_MARKER_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_DEBUG_TRACING_MODE_TYPE:// eslint-disable-next-line no-fallthrough
		default:{if(typeof type==='object'&&type!==null){switch(type.$$typeof){case REACT_PROVIDER_TYPE:fiberTag=ContextProvider;break getTag;case REACT_CONTEXT_TYPE:// This is a consumer
		fiberTag=ContextConsumer;break getTag;case REACT_FORWARD_REF_TYPE:fiberTag=ForwardRef;{resolvedType=resolveForwardRefForHotReloading(resolvedType);}break getTag;case REACT_MEMO_TYPE:fiberTag=MemoComponent;break getTag;case REACT_LAZY_TYPE:fiberTag=LazyComponent;resolvedType=null;break getTag;}}var info='';{if(type===undefined||typeof type==='object'&&type!==null&&Object.keys(type).length===0){info+=' You likely forgot to export your component from the file '+"it's defined in, or you might have mixed up default and "+'named imports.';}var ownerName=owner?getComponentNameFromFiber(owner):null;if(ownerName){info+='\n\nCheck the render method of `'+ownerName+'`.';}}throw new Error('Element type is invalid: expected a string (for built-in '+'components) or a class/function (for composite components) '+("but got: "+(type==null?type:typeof type)+"."+info));}}}var fiber=createFiber(fiberTag,pendingProps,key,mode);fiber.elementType=type;fiber.type=resolvedType;fiber.lanes=lanes;{fiber._debugOwner=owner;}return fiber;}function createFiberFromElement(element,mode,lanes){var owner=null;{owner=element._owner;}var type=element.type;var key=element.key;var pendingProps=element.props;var fiber=createFiberFromTypeAndProps(type,key,pendingProps,owner,mode,lanes);{fiber._debugSource=element._source;fiber._debugOwner=element._owner;}return fiber;}function createFiberFromFragment(elements,mode,lanes,key){var fiber=createFiber(Fragment,elements,key,mode);fiber.lanes=lanes;return fiber;}function createFiberFromProfiler(pendingProps,mode,lanes,key){{if(typeof pendingProps.id!=='string'){error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.',typeof pendingProps.id);}}var fiber=createFiber(Profiler,pendingProps,key,mode|ProfileMode);fiber.elementType=REACT_PROFILER_TYPE;fiber.lanes=lanes;{fiber.stateNode={effectDuration:0,passiveEffectDuration:0};}return fiber;}function createFiberFromSuspense(pendingProps,mode,lanes,key){var fiber=createFiber(SuspenseComponent,pendingProps,key,mode);fiber.elementType=REACT_SUSPENSE_TYPE;fiber.lanes=lanes;return fiber;}function createFiberFromSuspenseList(pendingProps,mode,lanes,key){var fiber=createFiber(SuspenseListComponent,pendingProps,key,mode);fiber.elementType=REACT_SUSPENSE_LIST_TYPE;fiber.lanes=lanes;return fiber;}function createFiberFromOffscreen(pendingProps,mode,lanes,key){var fiber=createFiber(OffscreenComponent,pendingProps,key,mode);fiber.elementType=REACT_OFFSCREEN_TYPE;fiber.lanes=lanes;var primaryChildInstance={isHidden:false};fiber.stateNode=primaryChildInstance;return fiber;}function createFiberFromText(content,mode,lanes){var fiber=createFiber(HostText,content,null,mode);fiber.lanes=lanes;return fiber;}function createFiberFromHostInstanceForDeletion(){var fiber=createFiber(HostComponent,null,null,NoMode);fiber.elementType='DELETED';return fiber;}function createFiberFromDehydratedFragment(dehydratedNode){var fiber=createFiber(DehydratedFragment,null,null,NoMode);fiber.stateNode=dehydratedNode;return fiber;}function createFiberFromPortal(portal,mode,lanes){var pendingProps=portal.children!==null?portal.children:[];var fiber=createFiber(HostPortal,pendingProps,portal.key,mode);fiber.lanes=lanes;fiber.stateNode={containerInfo:portal.containerInfo,pendingChildren:null,// Used by persistent updates
		implementation:portal.implementation};return fiber;}// Used for stashing WIP properties to replay failed work in DEV.
		function assignFiberPropertiesInDEV(target,source){if(target===null){// This Fiber's initial properties will always be overwritten.
		// We only use a Fiber to ensure the same hidden class so DEV isn't slow.
		target=createFiber(IndeterminateComponent,null,null,NoMode);}// This is intentionally written as a list of all properties.
		// We tried to use Object.assign() instead but this is called in
		// the hottest path, and Object.assign() was too slow:
		// https://github.com/facebook/react/issues/12502
		// This code is DEV-only so size is not a concern.
		target.tag=source.tag;target.key=source.key;target.elementType=source.elementType;target.type=source.type;target.stateNode=source.stateNode;target.return=source.return;target.child=source.child;target.sibling=source.sibling;target.index=source.index;target.ref=source.ref;target.pendingProps=source.pendingProps;target.memoizedProps=source.memoizedProps;target.updateQueue=source.updateQueue;target.memoizedState=source.memoizedState;target.dependencies=source.dependencies;target.mode=source.mode;target.flags=source.flags;target.subtreeFlags=source.subtreeFlags;target.deletions=source.deletions;target.lanes=source.lanes;target.childLanes=source.childLanes;target.alternate=source.alternate;{target.actualDuration=source.actualDuration;target.actualStartTime=source.actualStartTime;target.selfBaseDuration=source.selfBaseDuration;target.treeBaseDuration=source.treeBaseDuration;}target._debugSource=source._debugSource;target._debugOwner=source._debugOwner;target._debugNeedsRemount=source._debugNeedsRemount;target._debugHookTypes=source._debugHookTypes;return target;}function FiberRootNode(containerInfo,tag,hydrate,identifierPrefix,onRecoverableError){this.tag=tag;this.containerInfo=containerInfo;this.pendingChildren=null;this.current=null;this.pingCache=null;this.finishedWork=null;this.timeoutHandle=noTimeout;this.context=null;this.pendingContext=null;this.callbackNode=null;this.callbackPriority=NoLane;this.eventTimes=createLaneMap(NoLanes);this.expirationTimes=createLaneMap(NoTimestamp);this.pendingLanes=NoLanes;this.suspendedLanes=NoLanes;this.pingedLanes=NoLanes;this.expiredLanes=NoLanes;this.mutableReadLanes=NoLanes;this.finishedLanes=NoLanes;this.entangledLanes=NoLanes;this.entanglements=createLaneMap(NoLanes);this.identifierPrefix=identifierPrefix;this.onRecoverableError=onRecoverableError;{this.mutableSourceEagerHydrationData=null;}{this.effectDuration=0;this.passiveEffectDuration=0;}{this.memoizedUpdaters=new Set();var pendingUpdatersLaneMap=this.pendingUpdatersLaneMap=[];for(var _i=0;_i<TotalLanes;_i++){pendingUpdatersLaneMap.push(new Set());}}{switch(tag){case ConcurrentRoot:this._debugRootType=hydrate?'hydrateRoot()':'createRoot()';break;case LegacyRoot:this._debugRootType=hydrate?'hydrate()':'render()';break;}}}function createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,// TODO: We have several of these arguments that are conceptually part of the
		// host config, but because they are passed in at runtime, we have to thread
		// them through the root constructor. Perhaps we should put them all into a
		// single type, like a DynamicHostConfig that is defined by the renderer.
		identifierPrefix,onRecoverableError,transitionCallbacks){var root=new FiberRootNode(containerInfo,tag,hydrate,identifierPrefix,onRecoverableError);// stateNode is any.
		var uninitializedFiber=createHostRootFiber(tag,isStrictMode);root.current=uninitializedFiber;uninitializedFiber.stateNode=root;{var _initialState={element:initialChildren,isDehydrated:hydrate,cache:null,// not enabled yet
		transitions:null,pendingSuspenseBoundaries:null};uninitializedFiber.memoizedState=_initialState;}initializeUpdateQueue(uninitializedFiber);return root;}var ReactVersion='18.2.0';function createPortal(children,containerInfo,// TODO: figure out the API for cross-renderer implementation.
		implementation){var key=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;{checkKeyStringCoercion(key);}return {// This tag allow us to uniquely identify this as a React Portal
		$$typeof:REACT_PORTAL_TYPE,key:key==null?null:''+key,children:children,containerInfo:containerInfo,implementation:implementation};}var didWarnAboutNestedUpdates;var didWarnAboutFindNodeInStrictMode;{didWarnAboutNestedUpdates=false;didWarnAboutFindNodeInStrictMode={};}function getContextForSubtree(parentComponent){if(!parentComponent){return emptyContextObject;}var fiber=get(parentComponent);var parentContext=findCurrentUnmaskedContext(fiber);if(fiber.tag===ClassComponent){var Component=fiber.type;if(isContextProvider(Component)){return processChildContext(fiber,Component,parentContext);}}return parentContext;}function findHostInstanceWithWarning(component,methodName){{var fiber=get(component);if(fiber===undefined){if(typeof component.render==='function'){throw new Error('Unable to find node on an unmounted component.');}else {var keys=Object.keys(component).join(',');throw new Error("Argument appears to not be a ReactComponent. Keys: "+keys);}}var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}if(hostFiber.mode&StrictLegacyMode){var componentName=getComponentNameFromFiber(fiber)||'Component';if(!didWarnAboutFindNodeInStrictMode[componentName]){didWarnAboutFindNodeInStrictMode[componentName]=true;var previousFiber=current;try{setCurrentFiber(hostFiber);if(fiber.mode&StrictLegacyMode){error('%s is deprecated in StrictMode. '+'%s was passed an instance of %s which is inside StrictMode. '+'Instead, add a ref directly to the element you want to reference. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-find-node',methodName,methodName,componentName);}else {error('%s is deprecated in StrictMode. '+'%s was passed an instance of %s which renders StrictMode children. '+'Instead, add a ref directly to the element you want to reference. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-find-node',methodName,methodName,componentName);}}finally{// Ideally this should reset to previous but this shouldn't be called in
		// render and there's another warning for that anyway.
		if(previousFiber){setCurrentFiber(previousFiber);}else {resetCurrentFiber();}}}}return hostFiber.stateNode;}}function createContainer(containerInfo,tag,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError,transitionCallbacks){var hydrate=false;var initialChildren=null;return createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);}function createHydrationContainer(initialChildren,// TODO: Remove `callback` when we delete legacy mode.
		callback,containerInfo,tag,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError,transitionCallbacks){var hydrate=true;var root=createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);// TODO: Move this to FiberRoot constructor
		root.context=getContextForSubtree(null);// Schedule the initial render. In a hydration root, this is different from
		// a regular update because the initial render must match was was rendered
		// on the server.
		// NOTE: This update intentionally doesn't have a payload. We're only using
		// the update to schedule work on the root fiber (and, for legacy roots, to
		// enqueue the callback if one is provided).
		var current=root.current;var eventTime=requestEventTime();var lane=requestUpdateLane(current);var update=createUpdate(eventTime,lane);update.callback=callback!==undefined&&callback!==null?callback:null;enqueueUpdate(current,update,lane);scheduleInitialHydrationOnRoot(root,lane,eventTime);return root;}function updateContainer(element,container,parentComponent,callback){{onScheduleRoot(container,element);}var current$1=container.current;var eventTime=requestEventTime();var lane=requestUpdateLane(current$1);{markRenderScheduled(lane);}var context=getContextForSubtree(parentComponent);if(container.context===null){container.context=context;}else {container.pendingContext=context;}{if(isRendering&&current!==null&&!didWarnAboutNestedUpdates){didWarnAboutNestedUpdates=true;error('Render methods should be a pure function of props and state; '+'triggering nested component updates from render is not allowed. '+'If necessary, trigger nested updates in componentDidUpdate.\n\n'+'Check the render method of %s.',getComponentNameFromFiber(current)||'Unknown');}}var update=createUpdate(eventTime,lane);// Caution: React DevTools currently depends on this property
		// being called "element".
		update.payload={element:element};callback=callback===undefined?null:callback;if(callback!==null){{if(typeof callback!=='function'){error('render(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callback);}}update.callback=callback;}var root=enqueueUpdate(current$1,update,lane);if(root!==null){scheduleUpdateOnFiber(root,current$1,lane,eventTime);entangleTransitions(root,current$1,lane);}return lane;}function getPublicRootInstance(container){var containerFiber=container.current;if(!containerFiber.child){return null;}switch(containerFiber.child.tag){case HostComponent:return getPublicInstance(containerFiber.child.stateNode);default:return containerFiber.child.stateNode;}}function attemptSynchronousHydration$1(fiber){switch(fiber.tag){case HostRoot:{var root=fiber.stateNode;if(isRootDehydrated(root)){// Flush the first scheduled "update".
		var lanes=getHighestPriorityPendingLanes(root);flushRoot(root,lanes);}break;}case SuspenseComponent:{flushSync(function(){var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,SyncLane,eventTime);}});// If we're still blocked after this, we need to increase
		// the priority of any promises resolving within this
		// boundary so that they next attempt also has higher pri.
		var retryLane=SyncLane;markRetryLaneIfNotHydrated(fiber,retryLane);break;}}}function markRetryLaneImpl(fiber,retryLane){var suspenseState=fiber.memoizedState;if(suspenseState!==null&&suspenseState.dehydrated!==null){suspenseState.retryLane=higherPriorityLane(suspenseState.retryLane,retryLane);}}// Increases the priority of thenables when they resolve within this boundary.
		function markRetryLaneIfNotHydrated(fiber,retryLane){markRetryLaneImpl(fiber,retryLane);var alternate=fiber.alternate;if(alternate){markRetryLaneImpl(alternate,retryLane);}}function attemptContinuousHydration$1(fiber){if(fiber.tag!==SuspenseComponent){// We ignore HostRoots here because we can't increase
		// their priority and they should not suspend on I/O,
		// since you have to wrap anything that might suspend in
		// Suspense.
		return;}var lane=SelectiveHydrationLane;var root=enqueueConcurrentRenderForLane(fiber,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);}markRetryLaneIfNotHydrated(fiber,lane);}function attemptHydrationAtCurrentPriority$1(fiber){if(fiber.tag!==SuspenseComponent){// We ignore HostRoots here because we can't increase
		// their priority other than synchronously flush it.
		return;}var lane=requestUpdateLane(fiber);var root=enqueueConcurrentRenderForLane(fiber,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);}markRetryLaneIfNotHydrated(fiber,lane);}function findHostInstanceWithNoPortals(fiber){var hostFiber=findCurrentHostFiberWithNoPortals(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}var shouldErrorImpl=function(fiber){return null;};function shouldError(fiber){return shouldErrorImpl(fiber);}var shouldSuspendImpl=function(fiber){return false;};function shouldSuspend(fiber){return shouldSuspendImpl(fiber);}var overrideHookState=null;var overrideHookStateDeletePath=null;var overrideHookStateRenamePath=null;var overrideProps=null;var overridePropsDeletePath=null;var overridePropsRenamePath=null;var scheduleUpdate=null;var setErrorHandler=null;var setSuspenseHandler=null;{var copyWithDeleteImpl=function(obj,path,index){var key=path[index];var updated=isArray(obj)?obj.slice():assign({},obj);if(index+1===path.length){if(isArray(updated)){updated.splice(key,1);}else {delete updated[key];}return updated;}// $FlowFixMe number or string is fine here
		updated[key]=copyWithDeleteImpl(obj[key],path,index+1);return updated;};var copyWithDelete=function(obj,path){return copyWithDeleteImpl(obj,path,0);};var copyWithRenameImpl=function(obj,oldPath,newPath,index){var oldKey=oldPath[index];var updated=isArray(obj)?obj.slice():assign({},obj);if(index+1===oldPath.length){var newKey=newPath[index];// $FlowFixMe number or string is fine here
		updated[newKey]=updated[oldKey];if(isArray(updated)){updated.splice(oldKey,1);}else {delete updated[oldKey];}}else {// $FlowFixMe number or string is fine here
		updated[oldKey]=copyWithRenameImpl(// $FlowFixMe number or string is fine here
		obj[oldKey],oldPath,newPath,index+1);}return updated;};var copyWithRename=function(obj,oldPath,newPath){if(oldPath.length!==newPath.length){warn('copyWithRename() expects paths of the same length');return;}else {for(var i=0;i<newPath.length-1;i++){if(oldPath[i]!==newPath[i]){warn('copyWithRename() expects paths to be the same except for the deepest key');return;}}}return copyWithRenameImpl(obj,oldPath,newPath,0);};var copyWithSetImpl=function(obj,path,index,value){if(index>=path.length){return value;}var key=path[index];var updated=isArray(obj)?obj.slice():assign({},obj);// $FlowFixMe number or string is fine here
		updated[key]=copyWithSetImpl(obj[key],path,index+1,value);return updated;};var copyWithSet=function(obj,path,value){return copyWithSetImpl(obj,path,0,value);};var findHook=function(fiber,id){// For now, the "id" of stateful hooks is just the stateful hook index.
		// This may change in the future with e.g. nested hooks.
		var currentHook=fiber.memoizedState;while(currentHook!==null&&id>0){currentHook=currentHook.next;id--;}return currentHook;};// Support DevTools editable values for useState and useReducer.
		overrideHookState=function(fiber,id,path,value){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithSet(hook.memoizedState,path,value);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,
		// because there is no update we can add for useReducer hooks that won't trigger an error.
		// (There's no appropriate action type for DevTools overrides.)
		// As a result though, React will see the scheduled update as a noop and bailout.
		// Shallow cloning props works as a workaround for now to bypass the bailout check.
		fiber.memoizedProps=assign({},fiber.memoizedProps);var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}};overrideHookStateDeletePath=function(fiber,id,path){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithDelete(hook.memoizedState,path);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,
		// because there is no update we can add for useReducer hooks that won't trigger an error.
		// (There's no appropriate action type for DevTools overrides.)
		// As a result though, React will see the scheduled update as a noop and bailout.
		// Shallow cloning props works as a workaround for now to bypass the bailout check.
		fiber.memoizedProps=assign({},fiber.memoizedProps);var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}};overrideHookStateRenamePath=function(fiber,id,oldPath,newPath){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithRename(hook.memoizedState,oldPath,newPath);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,
		// because there is no update we can add for useReducer hooks that won't trigger an error.
		// (There's no appropriate action type for DevTools overrides.)
		// As a result though, React will see the scheduled update as a noop and bailout.
		// Shallow cloning props works as a workaround for now to bypass the bailout check.
		fiber.memoizedProps=assign({},fiber.memoizedProps);var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}};// Support DevTools props for function components, forwardRef, memo, host components, etc.
		overrideProps=function(fiber,path,value){fiber.pendingProps=copyWithSet(fiber.memoizedProps,path,value);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};overridePropsDeletePath=function(fiber,path){fiber.pendingProps=copyWithDelete(fiber.memoizedProps,path);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};overridePropsRenamePath=function(fiber,oldPath,newPath){fiber.pendingProps=copyWithRename(fiber.memoizedProps,oldPath,newPath);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};scheduleUpdate=function(fiber){var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};setErrorHandler=function(newShouldErrorImpl){shouldErrorImpl=newShouldErrorImpl;};setSuspenseHandler=function(newShouldSuspendImpl){shouldSuspendImpl=newShouldSuspendImpl;};}function findHostInstanceByFiber(fiber){var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}function emptyFindFiberByHostInstance(instance){return null;}function getCurrentFiberForDevTools(){return current;}function injectIntoDevTools(devToolsConfig){var findFiberByHostInstance=devToolsConfig.findFiberByHostInstance;var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;return injectInternals({bundleType:devToolsConfig.bundleType,version:devToolsConfig.version,rendererPackageName:devToolsConfig.rendererPackageName,rendererConfig:devToolsConfig.rendererConfig,overrideHookState:overrideHookState,overrideHookStateDeletePath:overrideHookStateDeletePath,overrideHookStateRenamePath:overrideHookStateRenamePath,overrideProps:overrideProps,overridePropsDeletePath:overridePropsDeletePath,overridePropsRenamePath:overridePropsRenamePath,setErrorHandler:setErrorHandler,setSuspenseHandler:setSuspenseHandler,scheduleUpdate:scheduleUpdate,currentDispatcherRef:ReactCurrentDispatcher,findHostInstanceByFiber:findHostInstanceByFiber,findFiberByHostInstance:findFiberByHostInstance||emptyFindFiberByHostInstance,// React Refresh
		findHostInstancesForRefresh:findHostInstancesForRefresh,scheduleRefresh:scheduleRefresh,scheduleRoot:scheduleRoot,setRefreshHandler:setRefreshHandler,// Enables DevTools to append owner stacks to error messages in DEV mode.
		getCurrentFiber:getCurrentFiberForDevTools,// Enables DevTools to detect reconciler version rather than renderer version
		// which may not match for third party renderers.
		reconcilerVersion:ReactVersion});}/* global reportError */var defaultOnRecoverableError=typeof reportError==='function'?// In modern browsers, reportError will dispatch an error event,
		// emulating an uncaught JavaScript error.
		reportError:function(error){// In older browsers and test environments, fallback to console.error.
		// eslint-disable-next-line react-internal/no-production-logging
		console['error'](error);};function ReactDOMRoot(internalRoot){this._internalRoot=internalRoot;}ReactDOMHydrationRoot.prototype.render=ReactDOMRoot.prototype.render=function(children){var root=this._internalRoot;if(root===null){throw new Error('Cannot update an unmounted root.');}{if(typeof arguments[1]==='function'){error('render(...): does not support the second callback argument. '+'To execute a side effect after rendering, declare it in a component body with useEffect().');}else if(isValidContainer(arguments[1])){error('You passed a container to the second argument of root.render(...). '+"You don't need to pass it again since you already passed it to create the root.");}else if(typeof arguments[1]!=='undefined'){error('You passed a second argument to root.render(...) but it only accepts '+'one argument.');}var container=root.containerInfo;if(container.nodeType!==COMMENT_NODE){var hostInstance=findHostInstanceWithNoPortals(root.current);if(hostInstance){if(hostInstance.parentNode!==container){error('render(...): It looks like the React-rendered content of the '+'root container was removed without using React. This is not '+'supported and will cause errors. Instead, call '+"root.unmount() to empty a root's container.");}}}}updateContainer(children,root,null,null);};ReactDOMHydrationRoot.prototype.unmount=ReactDOMRoot.prototype.unmount=function(){{if(typeof arguments[0]==='function'){error('unmount(...): does not support a callback argument. '+'To execute a side effect after rendering, declare it in a component body with useEffect().');}}var root=this._internalRoot;if(root!==null){this._internalRoot=null;var container=root.containerInfo;{if(isAlreadyRendering()){error('Attempted to synchronously unmount a root while React was already '+'rendering. React cannot finish unmounting the root until the '+'current render has completed, which may lead to a race condition.');}}flushSync(function(){updateContainer(null,root,null,null);});unmarkContainerAsRoot(container);}};function createRoot(container,options){if(!isValidContainer(container)){throw new Error('createRoot(...): Target container is not a DOM element.');}warnIfReactDOMContainerInDEV(container);var isStrictMode=false;var concurrentUpdatesByDefaultOverride=false;var identifierPrefix='';var onRecoverableError=defaultOnRecoverableError;if(options!==null&&options!==undefined){{if(options.hydrate){warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');}else {if(typeof options==='object'&&options!==null&&options.$$typeof===REACT_ELEMENT_TYPE){error('You passed a JSX element to createRoot. You probably meant to '+'call root.render instead. '+'Example usage:\n\n'+'  let root = createRoot(domContainer);\n'+'  root.render(<App />);');}}}if(options.unstable_strictMode===true){isStrictMode=true;}if(options.identifierPrefix!==undefined){identifierPrefix=options.identifierPrefix;}if(options.onRecoverableError!==undefined){onRecoverableError=options.onRecoverableError;}if(options.transitionCallbacks!==undefined){options.transitionCallbacks;}}var root=createContainer(container,ConcurrentRoot,null,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);markContainerAsRoot(root.current,container);var rootContainerElement=container.nodeType===COMMENT_NODE?container.parentNode:container;listenToAllSupportedEvents(rootContainerElement);return new ReactDOMRoot(root);}function ReactDOMHydrationRoot(internalRoot){this._internalRoot=internalRoot;}function scheduleHydration(target){if(target){queueExplicitHydrationTarget(target);}}ReactDOMHydrationRoot.prototype.unstable_scheduleHydration=scheduleHydration;function hydrateRoot(container,initialChildren,options){if(!isValidContainer(container)){throw new Error('hydrateRoot(...): Target container is not a DOM element.');}warnIfReactDOMContainerInDEV(container);{if(initialChildren===undefined){error('Must provide initial children as second argument to hydrateRoot. '+'Example usage: hydrateRoot(domContainer, <App />)');}}// For now we reuse the whole bag of options since they contain
		// the hydration callbacks.
		var hydrationCallbacks=options!=null?options:null;// TODO: Delete this option
		var mutableSources=options!=null&&options.hydratedSources||null;var isStrictMode=false;var concurrentUpdatesByDefaultOverride=false;var identifierPrefix='';var onRecoverableError=defaultOnRecoverableError;if(options!==null&&options!==undefined){if(options.unstable_strictMode===true){isStrictMode=true;}if(options.identifierPrefix!==undefined){identifierPrefix=options.identifierPrefix;}if(options.onRecoverableError!==undefined){onRecoverableError=options.onRecoverableError;}}var root=createHydrationContainer(initialChildren,null,container,ConcurrentRoot,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);markContainerAsRoot(root.current,container);// This can't be a comment node since hydration doesn't work on comment nodes anyway.
		listenToAllSupportedEvents(container);if(mutableSources){for(var i=0;i<mutableSources.length;i++){var mutableSource=mutableSources[i];registerMutableSourceForHydration(root,mutableSource);}}return new ReactDOMHydrationRoot(root);}function isValidContainer(node){return !!(node&&(node.nodeType===ELEMENT_NODE||node.nodeType===DOCUMENT_NODE||node.nodeType===DOCUMENT_FRAGMENT_NODE||!disableCommentsAsDOMContainers));}// TODO: Remove this function which also includes comment nodes.
		// We only use it in places that are currently more relaxed.
		function isValidContainerLegacy(node){return !!(node&&(node.nodeType===ELEMENT_NODE||node.nodeType===DOCUMENT_NODE||node.nodeType===DOCUMENT_FRAGMENT_NODE||node.nodeType===COMMENT_NODE&&node.nodeValue===' react-mount-point-unstable '));}function warnIfReactDOMContainerInDEV(container){{if(container.nodeType===ELEMENT_NODE&&container.tagName&&container.tagName.toUpperCase()==='BODY'){error('createRoot(): Creating roots directly with document.body is '+'discouraged, since its children are often manipulated by third-party '+'scripts and browser extensions. This may lead to subtle '+'reconciliation issues. Try using a container element created '+'for your app.');}if(isContainerMarkedAsRoot(container)){if(container._reactRootContainer){error('You are calling ReactDOMClient.createRoot() on a container that was previously '+'passed to ReactDOM.render(). This is not supported.');}else {error('You are calling ReactDOMClient.createRoot() on a container that '+'has already been passed to createRoot() before. Instead, call '+'root.render() on the existing root instead if you want to update it.');}}}}var ReactCurrentOwner$3=ReactSharedInternals.ReactCurrentOwner;var topLevelUpdateWarnings;{topLevelUpdateWarnings=function(container){if(container._reactRootContainer&&container.nodeType!==COMMENT_NODE){var hostInstance=findHostInstanceWithNoPortals(container._reactRootContainer.current);if(hostInstance){if(hostInstance.parentNode!==container){error('render(...): It looks like the React-rendered content of this '+'container was removed without using React. This is not '+'supported and will cause errors. Instead, call '+'ReactDOM.unmountComponentAtNode to empty a container.');}}}var isRootRenderedBySomeReact=!!container._reactRootContainer;var rootEl=getReactRootElementInContainer(container);var hasNonRootReactChild=!!(rootEl&&getInstanceFromNode(rootEl));if(hasNonRootReactChild&&!isRootRenderedBySomeReact){error('render(...): Replacing React-rendered children with a new root '+'component. If you intended to update the children of this node, '+'you should instead have the existing children update their state '+'and render the new components instead of calling ReactDOM.render.');}if(container.nodeType===ELEMENT_NODE&&container.tagName&&container.tagName.toUpperCase()==='BODY'){error('render(): Rendering components directly into document.body is '+'discouraged, since its children are often manipulated by third-party '+'scripts and browser extensions. This may lead to subtle '+'reconciliation issues. Try rendering into a container element created '+'for your app.');}};}function getReactRootElementInContainer(container){if(!container){return null;}if(container.nodeType===DOCUMENT_NODE){return container.documentElement;}else {return container.firstChild;}}function noopOnRecoverableError(){// This isn't reachable because onRecoverableError isn't called in the
		// legacy API.
		}function legacyCreateRootFromDOMContainer(container,initialChildren,parentComponent,callback,isHydrationContainer){if(isHydrationContainer){if(typeof callback==='function'){var originalCallback=callback;callback=function(){var instance=getPublicRootInstance(root);originalCallback.call(instance);};}var root=createHydrationContainer(initialChildren,callback,container,LegacyRoot,null,// hydrationCallbacks
		false,// isStrictMode
		false,// concurrentUpdatesByDefaultOverride,
		'',// identifierPrefix
		noopOnRecoverableError);container._reactRootContainer=root;markContainerAsRoot(root.current,container);var rootContainerElement=container.nodeType===COMMENT_NODE?container.parentNode:container;listenToAllSupportedEvents(rootContainerElement);flushSync();return root;}else {// First clear any existing content.
		var rootSibling;while(rootSibling=container.lastChild){container.removeChild(rootSibling);}if(typeof callback==='function'){var _originalCallback=callback;callback=function(){var instance=getPublicRootInstance(_root);_originalCallback.call(instance);};}var _root=createContainer(container,LegacyRoot,null,// hydrationCallbacks
		false,// isStrictMode
		false,// concurrentUpdatesByDefaultOverride,
		'',// identifierPrefix
		noopOnRecoverableError);container._reactRootContainer=_root;markContainerAsRoot(_root.current,container);var _rootContainerElement=container.nodeType===COMMENT_NODE?container.parentNode:container;listenToAllSupportedEvents(_rootContainerElement);// Initial mount should not be batched.
		flushSync(function(){updateContainer(initialChildren,_root,parentComponent,callback);});return _root;}}function warnOnInvalidCallback$1(callback,callerName){{if(callback!==null&&typeof callback!=='function'){error('%s(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callerName,callback);}}}function legacyRenderSubtreeIntoContainer(parentComponent,children,container,forceHydrate,callback){{topLevelUpdateWarnings(container);warnOnInvalidCallback$1(callback===undefined?null:callback,'render');}var maybeRoot=container._reactRootContainer;var root;if(!maybeRoot){// Initial mount
		root=legacyCreateRootFromDOMContainer(container,children,parentComponent,callback,forceHydrate);}else {root=maybeRoot;if(typeof callback==='function'){var originalCallback=callback;callback=function(){var instance=getPublicRootInstance(root);originalCallback.call(instance);};}// Update
		updateContainer(children,root,parentComponent,callback);}return getPublicRootInstance(root);}function findDOMNode(componentOrElement){{var owner=ReactCurrentOwner$3.current;if(owner!==null&&owner.stateNode!==null){var warnedAboutRefsInRender=owner.stateNode._warnedAboutRefsInRender;if(!warnedAboutRefsInRender){error('%s is accessing findDOMNode inside its render(). '+'render() should be a pure function of props and state. It should '+'never access something that requires stale data from the previous '+'render, such as refs. Move this logic to componentDidMount and '+'componentDidUpdate instead.',getComponentNameFromType(owner.type)||'A component');}owner.stateNode._warnedAboutRefsInRender=true;}}if(componentOrElement==null){return null;}if(componentOrElement.nodeType===ELEMENT_NODE){return componentOrElement;}{return findHostInstanceWithWarning(componentOrElement,'findDOMNode');}}function hydrate(element,container,callback){{error('ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot '+'instead. Until you switch to the new API, your app will behave as '+"if it's running React 17. Learn "+'more: https://reactjs.org/link/switch-to-createroot');}if(!isValidContainerLegacy(container)){throw new Error('Target container is not a DOM element.');}{var isModernRoot=isContainerMarkedAsRoot(container)&&container._reactRootContainer===undefined;if(isModernRoot){error('You are calling ReactDOM.hydrate() on a container that was previously '+'passed to ReactDOMClient.createRoot(). This is not supported. '+'Did you mean to call hydrateRoot(container, element)?');}}// TODO: throw or warn if we couldn't hydrate?
		return legacyRenderSubtreeIntoContainer(null,element,container,true,callback);}function render(element,container,callback){{error('ReactDOM.render is no longer supported in React 18. Use createRoot '+'instead. Until you switch to the new API, your app will behave as '+"if it's running React 17. Learn "+'more: https://reactjs.org/link/switch-to-createroot');}if(!isValidContainerLegacy(container)){throw new Error('Target container is not a DOM element.');}{var isModernRoot=isContainerMarkedAsRoot(container)&&container._reactRootContainer===undefined;if(isModernRoot){error('You are calling ReactDOM.render() on a container that was previously '+'passed to ReactDOMClient.createRoot(). This is not supported. '+'Did you mean to call root.render(element)?');}}return legacyRenderSubtreeIntoContainer(null,element,container,false,callback);}function unstable_renderSubtreeIntoContainer(parentComponent,element,containerNode,callback){{error('ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported '+'in React 18. Consider using a portal instead. Until you switch to '+"the createRoot API, your app will behave as if it's running React "+'17. Learn more: https://reactjs.org/link/switch-to-createroot');}if(!isValidContainerLegacy(containerNode)){throw new Error('Target container is not a DOM element.');}if(parentComponent==null||!has(parentComponent)){throw new Error('parentComponent must be a valid React Component');}return legacyRenderSubtreeIntoContainer(parentComponent,element,containerNode,false,callback);}function unmountComponentAtNode(container){if(!isValidContainerLegacy(container)){throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');}{var isModernRoot=isContainerMarkedAsRoot(container)&&container._reactRootContainer===undefined;if(isModernRoot){error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously '+'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?');}}if(container._reactRootContainer){{var rootEl=getReactRootElementInContainer(container);var renderedByDifferentReact=rootEl&&!getInstanceFromNode(rootEl);if(renderedByDifferentReact){error("unmountComponentAtNode(): The node you're attempting to unmount "+'was rendered by another copy of React.');}}// Unmount should not be batched.
		flushSync(function(){legacyRenderSubtreeIntoContainer(null,null,container,false,function(){// $FlowFixMe This should probably use `delete container._reactRootContainer`
		container._reactRootContainer=null;unmarkContainerAsRoot(container);});});// If you call unmountComponentAtNode twice in quick succession, you'll
		// get `true` twice. That's probably fine?
		return true;}else {{var _rootEl=getReactRootElementInContainer(container);var hasNonRootReactChild=!!(_rootEl&&getInstanceFromNode(_rootEl));// Check if the container itself is a React root node.
		var isContainerReactRoot=container.nodeType===ELEMENT_NODE&&isValidContainerLegacy(container.parentNode)&&!!container.parentNode._reactRootContainer;if(hasNonRootReactChild){error("unmountComponentAtNode(): The node you're attempting to unmount "+'was rendered by React and is not a top-level container. %s',isContainerReactRoot?'You may have accidentally passed in a React root node instead '+'of its container.':'Instead, have the parent component update its state and '+'rerender in order to remove this component.');}}return false;}}setAttemptSynchronousHydration(attemptSynchronousHydration$1);setAttemptContinuousHydration(attemptContinuousHydration$1);setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);setGetCurrentUpdatePriority(getCurrentUpdatePriority);setAttemptHydrationAtPriority(runWithPriority);{if(typeof Map!=='function'||// $FlowIssue Flow incorrectly thinks Map has no prototype
		Map.prototype==null||typeof Map.prototype.forEach!=='function'||typeof Set!=='function'||// $FlowIssue Flow incorrectly thinks Set has no prototype
		Set.prototype==null||typeof Set.prototype.clear!=='function'||typeof Set.prototype.forEach!=='function'){error('React depends on Map and Set built-in types. Make sure that you load a '+'polyfill in older browsers. https://reactjs.org/link/react-polyfills');}}setRestoreImplementation(restoreControlledState$3);setBatchingImplementation(batchedUpdates$1,discreteUpdates,flushSync);function createPortal$1(children,container){var key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!isValidContainer(container)){throw new Error('Target container is not a DOM element.');}// TODO: pass ReactDOM portal implementation as third argument
		// $FlowFixMe The Flow type is opaque but there's no way to actually create it.
		return createPortal(children,container,null,key);}function renderSubtreeIntoContainer(parentComponent,element,containerNode,callback){return unstable_renderSubtreeIntoContainer(parentComponent,element,containerNode,callback);}var Internals={usingClientEntryPoint:false,// Keep in sync with ReactTestUtils.js.
		// This is an array for better minification.
		Events:[getInstanceFromNode,getNodeFromInstance,getFiberCurrentPropsFromNode,enqueueStateRestore,restoreStateIfNeeded,batchedUpdates$1]};function createRoot$1(container,options){{if(!Internals.usingClientEntryPoint&&!false){error('You are importing createRoot from "react-dom" which is not supported. '+'You should instead import it from "react-dom/client".');}}return createRoot(container,options);}function hydrateRoot$1(container,initialChildren,options){{if(!Internals.usingClientEntryPoint&&!false){error('You are importing hydrateRoot from "react-dom" which is not supported. '+'You should instead import it from "react-dom/client".');}}return hydrateRoot(container,initialChildren,options);}// Overload the definition to the two valid signatures.
		// Warning, this opts-out of checking the function body.
		// eslint-disable-next-line no-redeclare
		function flushSync$1(fn){{if(isAlreadyRendering()){error('flushSync was called from inside a lifecycle method. React cannot '+'flush when React is already rendering. Consider moving this call to '+'a scheduler task or micro task.');}}return flushSync(fn);}var foundDevTools=injectIntoDevTools({findFiberByHostInstance:getClosestInstanceFromNode,bundleType:1,version:ReactVersion,rendererPackageName:'react-dom'});{if(!foundDevTools&&canUseDOM&&window.top===window.self){// If we're in Chrome or Firefox, provide a download link if not installed.
		if(navigator.userAgent.indexOf('Chrome')>-1&&navigator.userAgent.indexOf('Edge')===-1||navigator.userAgent.indexOf('Firefox')>-1){var protocol=window.location.protocol;// Don't warn in exotic cases like chrome-extension://.
		if(/^(https?|file):$/.test(protocol)){// eslint-disable-next-line react-internal/no-production-logging
		console.info('%cDownload the React DevTools '+'for a better development experience: '+'https://reactjs.org/link/react-devtools'+(protocol==='file:'?'\nYou might need to use a local HTTP server (instead of file://): '+'https://reactjs.org/link/react-devtools-faq':''),'font-weight:bold');}}}}reactDom_development.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Internals;reactDom_development.createPortal=createPortal$1;reactDom_development.createRoot=createRoot$1;reactDom_development.findDOMNode=findDOMNode;reactDom_development.flushSync=flushSync$1;reactDom_development.hydrate=hydrate;reactDom_development.hydrateRoot=hydrateRoot$1;reactDom_development.render=render;reactDom_development.unmountComponentAtNode=unmountComponentAtNode;reactDom_development.unstable_batchedUpdates=batchedUpdates$1;reactDom_development.unstable_renderSubtreeIntoContainer=renderSubtreeIntoContainer;reactDom_development.version=ReactVersion;/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined'&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop==='function'){__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());}})();}
		return reactDom_development;
	}

	{
	  reactDom.exports = requireReactDom_development();
	}

	var reactDomExports = reactDom.exports;

	var createRoot;

	var m = reactDomExports;
	{
	  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
	  createRoot = function (c, o) {
	    i.usingClientEntryPoint = true;
	    try {
	      return m.createRoot(c, o);
	    } finally {
	      i.usingClientEntryPoint = false;
	    }
	  };
	}

	const common = {
	  black: '#000',
	  white: '#fff'
	};
	var common$1 = common;

	const red = {
	  50: '#ffebee',
	  100: '#ffcdd2',
	  200: '#ef9a9a',
	  300: '#e57373',
	  400: '#ef5350',
	  500: '#f44336',
	  600: '#e53935',
	  700: '#d32f2f',
	  800: '#c62828',
	  900: '#b71c1c',
	  A100: '#ff8a80',
	  A200: '#ff5252',
	  A400: '#ff1744',
	  A700: '#d50000'
	};
	var red$1 = red;

	const purple = {
	  50: '#f3e5f5',
	  100: '#e1bee7',
	  200: '#ce93d8',
	  300: '#ba68c8',
	  400: '#ab47bc',
	  500: '#9c27b0',
	  600: '#8e24aa',
	  700: '#7b1fa2',
	  800: '#6a1b9a',
	  900: '#4a148c',
	  A100: '#ea80fc',
	  A200: '#e040fb',
	  A400: '#d500f9',
	  A700: '#aa00ff'
	};
	var purple$1 = purple;

	const blue = {
	  50: '#e3f2fd',
	  100: '#bbdefb',
	  200: '#90caf9',
	  300: '#64b5f6',
	  400: '#42a5f5',
	  500: '#2196f3',
	  600: '#1e88e5',
	  700: '#1976d2',
	  800: '#1565c0',
	  900: '#0d47a1',
	  A100: '#82b1ff',
	  A200: '#448aff',
	  A400: '#2979ff',
	  A700: '#2962ff'
	};
	var blue$1 = blue;

	const lightBlue = {
	  50: '#e1f5fe',
	  100: '#b3e5fc',
	  200: '#81d4fa',
	  300: '#4fc3f7',
	  400: '#29b6f6',
	  500: '#03a9f4',
	  600: '#039be5',
	  700: '#0288d1',
	  800: '#0277bd',
	  900: '#01579b',
	  A100: '#80d8ff',
	  A200: '#40c4ff',
	  A400: '#00b0ff',
	  A700: '#0091ea'
	};
	var lightBlue$1 = lightBlue;

	const green = {
	  50: '#e8f5e9',
	  100: '#c8e6c9',
	  200: '#a5d6a7',
	  300: '#81c784',
	  400: '#66bb6a',
	  500: '#4caf50',
	  600: '#43a047',
	  700: '#388e3c',
	  800: '#2e7d32',
	  900: '#1b5e20',
	  A100: '#b9f6ca',
	  A200: '#69f0ae',
	  A400: '#00e676',
	  A700: '#00c853'
	};
	var green$1 = green;

	const orange = {
	  50: '#fff3e0',
	  100: '#ffe0b2',
	  200: '#ffcc80',
	  300: '#ffb74d',
	  400: '#ffa726',
	  500: '#ff9800',
	  600: '#fb8c00',
	  700: '#f57c00',
	  800: '#ef6c00',
	  900: '#e65100',
	  A100: '#ffd180',
	  A200: '#ffab40',
	  A400: '#ff9100',
	  A700: '#ff6d00'
	};
	var orange$1 = orange;

	const grey = {
	  50: '#fafafa',
	  100: '#f5f5f5',
	  200: '#eeeeee',
	  300: '#e0e0e0',
	  400: '#bdbdbd',
	  500: '#9e9e9e',
	  600: '#757575',
	  700: '#616161',
	  800: '#424242',
	  900: '#212121',
	  A100: '#f5f5f5',
	  A200: '#eeeeee',
	  A400: '#bdbdbd',
	  A700: '#616161'
	};
	var grey$1 = grey;

	/**
	 * WARNING: Don't import this directly.
	 * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.
	 * @param {number} code
	 */
	function formatMuiErrorMessage$1(code) {
	  // Apply babel-plugin-transform-template-literals in loose mode
	  // loose mode is safe if we're concatenating primitives
	  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose
	  /* eslint-disable prefer-template */
	  let url = 'https://mui.com/production-error/?code=' + code;
	  for (let i = 1; i < arguments.length; i += 1) {
	    // rest params over-transpile for this case
	    // eslint-disable-next-line prefer-rest-params
	    url += '&args[]=' + encodeURIComponent(arguments[i]);
	  }
	  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';
	  /* eslint-enable prefer-template */
	}

	var formatMuiErrorMessage = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': formatMuiErrorMessage$1
	});

	var THEME_ID = '$$material';

	function _extends$2() {
	  _extends$2 = Object.assign ? Object.assign.bind() : function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	    return target;
	  };
	  return _extends$2.apply(this, arguments);
	}

	function _objectWithoutPropertiesLoose$1(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	  return target;
	}

	function memoize$1(fn) {
	  var cache = Object.create(null);
	  return function (arg) {
	    if (cache[arg] === undefined) cache[arg] = fn(arg);
	    return cache[arg];
	  };
	}

	var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

	var isPropValid = /* #__PURE__ */memoize$1(function (prop) {
	  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
	  /* o */ && prop.charCodeAt(1) === 110
	  /* n */ && prop.charCodeAt(2) < 91;
	}
	/* Z+1 */);

	/*

	Based off glamor's StyleSheet, thanks Sunil ❤️

	high performance StyleSheet for css-in-js systems

	- uses multiple style tags behind the scenes for millions of rules
	- uses `insertRule` for appending in production for *much* faster performance

	// usage

	import { StyleSheet } from '@emotion/sheet'

	let styleSheet = new StyleSheet({ key: '', container: document.head })

	styleSheet.insert('#box { border: 1px solid red; }')
	- appends a css rule into the stylesheet

	styleSheet.flush()
	- empties the stylesheet of all its contents

	*/
	// $FlowFixMe
	function sheetForTag(tag) {
	  if (tag.sheet) {
	    // $FlowFixMe
	    return tag.sheet;
	  } // this weirdness brought to you by firefox

	  /* istanbul ignore next */

	  for (var i = 0; i < document.styleSheets.length; i++) {
	    if (document.styleSheets[i].ownerNode === tag) {
	      // $FlowFixMe
	      return document.styleSheets[i];
	    }
	  }
	}
	function createStyleElement(options) {
	  var tag = document.createElement('style');
	  tag.setAttribute('data-emotion', options.key);
	  if (options.nonce !== undefined) {
	    tag.setAttribute('nonce', options.nonce);
	  }
	  tag.appendChild(document.createTextNode(''));
	  tag.setAttribute('data-s', '');
	  return tag;
	}
	var StyleSheet = /*#__PURE__*/function () {
	  // Using Node instead of HTMLElement since container may be a ShadowRoot
	  function StyleSheet(options) {
	    var _this = this;
	    this._insertTag = function (tag) {
	      var before;
	      if (_this.tags.length === 0) {
	        if (_this.insertionPoint) {
	          before = _this.insertionPoint.nextSibling;
	        } else if (_this.prepend) {
	          before = _this.container.firstChild;
	        } else {
	          before = _this.before;
	        }
	      } else {
	        before = _this.tags[_this.tags.length - 1].nextSibling;
	      }
	      _this.container.insertBefore(tag, before);
	      _this.tags.push(tag);
	    };
	    this.isSpeedy = options.speedy === undefined ? "development" === 'production' : options.speedy;
	    this.tags = [];
	    this.ctr = 0;
	    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

	    this.key = options.key;
	    this.container = options.container;
	    this.prepend = options.prepend;
	    this.insertionPoint = options.insertionPoint;
	    this.before = null;
	  }
	  var _proto = StyleSheet.prototype;
	  _proto.hydrate = function hydrate(nodes) {
	    nodes.forEach(this._insertTag);
	  };
	  _proto.insert = function insert(rule) {
	    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
	    // it's 1 in dev because we insert source maps that map a single rule to a location
	    // and you can only have one source map per style tag
	    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
	      this._insertTag(createStyleElement(this));
	    }
	    var tag = this.tags[this.tags.length - 1];
	    {
	      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;
	      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {
	        // this would only cause problem in speedy mode
	        // but we don't want enabling speedy to affect the observable behavior
	        // so we report this error at all times
	        console.error("You're attempting to insert the following rule:\n" + rule + '\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');
	      }
	      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;
	    }
	    if (this.isSpeedy) {
	      var sheet = sheetForTag(tag);
	      try {
	        // this is the ultrafast version, works across browsers
	        // the big drawback is that the css won't be editable in devtools
	        sheet.insertRule(rule, sheet.cssRules.length);
	      } catch (e) {
	        if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {
	          console.error("There was a problem inserting the following rule: \"" + rule + "\"", e);
	        }
	      }
	    } else {
	      tag.appendChild(document.createTextNode(rule));
	    }
	    this.ctr++;
	  };
	  _proto.flush = function flush() {
	    // $FlowFixMe
	    this.tags.forEach(function (tag) {
	      return tag.parentNode && tag.parentNode.removeChild(tag);
	    });
	    this.tags = [];
	    this.ctr = 0;
	    {
	      this._alreadyInsertedOrderInsensitiveRule = false;
	    }
	  };
	  return StyleSheet;
	}();

	var MS = '-ms-';
	var MOZ = '-moz-';
	var WEBKIT = '-webkit-';
	var COMMENT = 'comm';
	var RULESET = 'rule';
	var DECLARATION = 'decl';
	var IMPORT = '@import';
	var KEYFRAMES = '@keyframes';
	var LAYER = '@layer';

	/**
	 * @param {number}
	 * @return {number}
	 */
	var abs = Math.abs;

	/**
	 * @param {number}
	 * @return {string}
	 */
	var from = String.fromCharCode;

	/**
	 * @param {object}
	 * @return {object}
	 */
	var assign = Object.assign;

	/**
	 * @param {string} value
	 * @param {number} length
	 * @return {number}
	 */
	function hash(value, length) {
	  return charat(value, 0) ^ 45 ? (((length << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
	}

	/**
	 * @param {string} value
	 * @return {string}
	 */
	function trim(value) {
	  return value.trim();
	}

	/**
	 * @param {string} value
	 * @param {RegExp} pattern
	 * @return {string?}
	 */
	function match(value, pattern) {
	  return (value = pattern.exec(value)) ? value[0] : value;
	}

	/**
	 * @param {string} value
	 * @param {(string|RegExp)} pattern
	 * @param {string} replacement
	 * @return {string}
	 */
	function replace(value, pattern, replacement) {
	  return value.replace(pattern, replacement);
	}

	/**
	 * @param {string} value
	 * @param {string} search
	 * @return {number}
	 */
	function indexof(value, search) {
	  return value.indexOf(search);
	}

	/**
	 * @param {string} value
	 * @param {number} index
	 * @return {number}
	 */
	function charat(value, index) {
	  return value.charCodeAt(index) | 0;
	}

	/**
	 * @param {string} value
	 * @param {number} begin
	 * @param {number} end
	 * @return {string}
	 */
	function substr(value, begin, end) {
	  return value.slice(begin, end);
	}

	/**
	 * @param {string} value
	 * @return {number}
	 */
	function strlen(value) {
	  return value.length;
	}

	/**
	 * @param {any[]} value
	 * @return {number}
	 */
	function sizeof(value) {
	  return value.length;
	}

	/**
	 * @param {any} value
	 * @param {any[]} array
	 * @return {any}
	 */
	function append(value, array) {
	  return array.push(value), value;
	}

	/**
	 * @param {string[]} array
	 * @param {function} callback
	 * @return {string}
	 */
	function combine(array, callback) {
	  return array.map(callback).join('');
	}

	var line = 1;
	var column = 1;
	var length = 0;
	var position = 0;
	var character = 0;
	var characters = '';

	/**
	 * @param {string} value
	 * @param {object | null} root
	 * @param {object | null} parent
	 * @param {string} type
	 * @param {string[] | string} props
	 * @param {object[] | string} children
	 * @param {number} length
	 */
	function node(value, root, parent, type, props, children, length) {
	  return {
	    value: value,
	    root: root,
	    parent: parent,
	    type: type,
	    props: props,
	    children: children,
	    line: line,
	    column: column,
	    length: length,
	    return: ''
	  };
	}

	/**
	 * @param {object} root
	 * @param {object} props
	 * @return {object}
	 */
	function copy(root, props) {
	  return assign(node('', null, null, '', null, null, 0), root, {
	    length: -root.length
	  }, props);
	}

	/**
	 * @return {number}
	 */
	function char() {
	  return character;
	}

	/**
	 * @return {number}
	 */
	function prev() {
	  character = position > 0 ? charat(characters, --position) : 0;
	  if (column--, character === 10) column = 1, line--;
	  return character;
	}

	/**
	 * @return {number}
	 */
	function next() {
	  character = position < length ? charat(characters, position++) : 0;
	  if (column++, character === 10) column = 1, line++;
	  return character;
	}

	/**
	 * @return {number}
	 */
	function peek() {
	  return charat(characters, position);
	}

	/**
	 * @return {number}
	 */
	function caret() {
	  return position;
	}

	/**
	 * @param {number} begin
	 * @param {number} end
	 * @return {string}
	 */
	function slice(begin, end) {
	  return substr(characters, begin, end);
	}

	/**
	 * @param {number} type
	 * @return {number}
	 */
	function token(type) {
	  switch (type) {
	    // \0 \t \n \r \s whitespace token
	    case 0:
	    case 9:
	    case 10:
	    case 13:
	    case 32:
	      return 5;
	    // ! + , / > @ ~ isolate token
	    case 33:
	    case 43:
	    case 44:
	    case 47:
	    case 62:
	    case 64:
	    case 126:
	    // ; { } breakpoint token
	    case 59:
	    case 123:
	    case 125:
	      return 4;
	    // : accompanied token
	    case 58:
	      return 3;
	    // " ' ( [ opening delimit token
	    case 34:
	    case 39:
	    case 40:
	    case 91:
	      return 2;
	    // ) ] closing delimit token
	    case 41:
	    case 93:
	      return 1;
	  }
	  return 0;
	}

	/**
	 * @param {string} value
	 * @return {any[]}
	 */
	function alloc(value) {
	  return line = column = 1, length = strlen(characters = value), position = 0, [];
	}

	/**
	 * @param {any} value
	 * @return {any}
	 */
	function dealloc(value) {
	  return characters = '', value;
	}

	/**
	 * @param {number} type
	 * @return {string}
	 */
	function delimit(type) {
	  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
	}

	/**
	 * @param {number} type
	 * @return {string}
	 */
	function whitespace(type) {
	  while (character = peek()) if (character < 33) next();else break;
	  return token(type) > 2 || token(character) > 3 ? '' : ' ';
	}

	/**
	 * @param {number} index
	 * @param {number} count
	 * @return {string}
	 */
	function escaping(index, count) {
	  while (--count && next())
	  // not 0-9 A-F a-f
	  if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97) break;
	  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
	}

	/**
	 * @param {number} type
	 * @return {number}
	 */
	function delimiter(type) {
	  while (next()) switch (character) {
	    // ] ) " '
	    case type:
	      return position;
	    // " '
	    case 34:
	    case 39:
	      if (type !== 34 && type !== 39) delimiter(character);
	      break;
	    // (
	    case 40:
	      if (type === 41) delimiter(type);
	      break;
	    // \
	    case 92:
	      next();
	      break;
	  }
	  return position;
	}

	/**
	 * @param {number} type
	 * @param {number} index
	 * @return {number}
	 */
	function commenter(type, index) {
	  while (next())
	  // //
	  if (type + character === 47 + 10) break;
	  // /*
	  else if (type + character === 42 + 42 && peek() === 47) break;
	  return '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next());
	}

	/**
	 * @param {number} index
	 * @return {string}
	 */
	function identifier(index) {
	  while (!token(peek())) next();
	  return slice(index, position);
	}

	/**
	 * @param {string} value
	 * @return {object[]}
	 */
	function compile(value) {
	  return dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value));
	}

	/**
	 * @param {string} value
	 * @param {object} root
	 * @param {object?} parent
	 * @param {string[]} rule
	 * @param {string[]} rules
	 * @param {string[]} rulesets
	 * @param {number[]} pseudo
	 * @param {number[]} points
	 * @param {string[]} declarations
	 * @return {object}
	 */
	function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
	  var index = 0;
	  var offset = 0;
	  var length = pseudo;
	  var atrule = 0;
	  var property = 0;
	  var previous = 0;
	  var variable = 1;
	  var scanning = 1;
	  var ampersand = 1;
	  var character = 0;
	  var type = '';
	  var props = rules;
	  var children = rulesets;
	  var reference = rule;
	  var characters = type;
	  while (scanning) switch (previous = character, character = next()) {
	    // (
	    case 40:
	      if (previous != 108 && charat(characters, length - 1) == 58) {
	        if (indexof(characters += replace(delimit(character), '&', '&\f'), '&\f') != -1) ampersand = -1;
	        break;
	      }
	    // " ' [
	    case 34:
	    case 39:
	    case 91:
	      characters += delimit(character);
	      break;
	    // \t \n \r \s
	    case 9:
	    case 10:
	    case 13:
	    case 32:
	      characters += whitespace(previous);
	      break;
	    // \
	    case 92:
	      characters += escaping(caret() - 1, 7);
	      continue;
	    // /
	    case 47:
	      switch (peek()) {
	        case 42:
	        case 47:
	          append(comment(commenter(next(), caret()), root, parent), declarations);
	          break;
	        default:
	          characters += '/';
	      }
	      break;
	    // {
	    case 123 * variable:
	      points[index++] = strlen(characters) * ampersand;
	    // } ; \0
	    case 125 * variable:
	    case 59:
	    case 0:
	      switch (character) {
	        // \0 }
	        case 0:
	        case 125:
	          scanning = 0;
	        // ;
	        case 59 + offset:
	          if (ampersand == -1) characters = replace(characters, /\f/g, '');
	          if (property > 0 && strlen(characters) - length) append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations);
	          break;
	        // @ ;
	        case 59:
	          characters += ';';
	        // { rule/at-rule
	        default:
	          append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets);
	          if (character === 123) if (offset === 0) parse(characters, root, reference, reference, props, rulesets, length, points, children);else switch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {
	            // d l m s
	            case 100:
	            case 108:
	            case 109:
	            case 115:
	              parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children);
	              break;
	            default:
	              parse(characters, reference, reference, reference, [''], children, 0, points, children);
	          }
	      }
	      index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo;
	      break;
	    // :
	    case 58:
	      length = 1 + strlen(characters), property = previous;
	    default:
	      if (variable < 1) if (character == 123) --variable;else if (character == 125 && variable++ == 0 && prev() == 125) continue;
	      switch (characters += from(character), character * variable) {
	        // &
	        case 38:
	          ampersand = offset > 0 ? 1 : (characters += '\f', -1);
	          break;
	        // ,
	        case 44:
	          points[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1;
	          break;
	        // @
	        case 64:
	          // -
	          if (peek() === 45) characters += delimit(next());
	          atrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++;
	          break;
	        // -
	        case 45:
	          if (previous === 45 && strlen(characters) == 2) variable = 0;
	      }
	  }
	  return rulesets;
	}

	/**
	 * @param {string} value
	 * @param {object} root
	 * @param {object?} parent
	 * @param {number} index
	 * @param {number} offset
	 * @param {string[]} rules
	 * @param {number[]} points
	 * @param {string} type
	 * @param {string[]} props
	 * @param {string[]} children
	 * @param {number} length
	 * @return {object}
	 */
	function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length) {
	  var post = offset - 1;
	  var rule = offset === 0 ? rules : [''];
	  var size = sizeof(rule);
	  for (var i = 0, j = 0, k = 0; i < index; ++i) for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x) if (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\f/g, rule[x]))) props[k++] = z;
	  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length);
	}

	/**
	 * @param {number} value
	 * @param {object} root
	 * @param {object?} parent
	 * @return {object}
	 */
	function comment(value, root, parent) {
	  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
	}

	/**
	 * @param {string} value
	 * @param {object} root
	 * @param {object?} parent
	 * @param {number} length
	 * @return {object}
	 */
	function declaration(value, root, parent, length) {
	  return node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length);
	}

	/**
	 * @param {object[]} children
	 * @param {function} callback
	 * @return {string}
	 */
	function serialize(children, callback) {
	  var output = '';
	  var length = sizeof(children);
	  for (var i = 0; i < length; i++) output += callback(children[i], i, children, callback) || '';
	  return output;
	}

	/**
	 * @param {object} element
	 * @param {number} index
	 * @param {object[]} children
	 * @param {function} callback
	 * @return {string}
	 */
	function stringify(element, index, children, callback) {
	  switch (element.type) {
	    case LAYER:
	      if (element.children.length) break;
	    case IMPORT:
	    case DECLARATION:
	      return element.return = element.return || element.value;
	    case COMMENT:
	      return '';
	    case KEYFRAMES:
	      return element.return = element.value + '{' + serialize(element.children, callback) + '}';
	    case RULESET:
	      element.value = element.props.join(',');
	  }
	  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : '';
	}

	/**
	 * @param {function[]} collection
	 * @return {function}
	 */
	function middleware(collection) {
	  var length = sizeof(collection);
	  return function (element, index, children, callback) {
	    var output = '';
	    for (var i = 0; i < length; i++) output += collection[i](element, index, children, callback) || '';
	    return output;
	  };
	}

	var weakMemoize = function weakMemoize(func) {
	  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps
	  var cache = new WeakMap();
	  return function (arg) {
	    if (cache.has(arg)) {
	      // $FlowFixMe
	      return cache.get(arg);
	    }
	    var ret = func(arg);
	    cache.set(arg, ret);
	    return ret;
	  };
	};

	var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
	  var previous = 0;
	  var character = 0;
	  while (true) {
	    previous = character;
	    character = peek(); // &\f

	    if (previous === 38 && character === 12) {
	      points[index] = 1;
	    }
	    if (token(character)) {
	      break;
	    }
	    next();
	  }
	  return slice(begin, position);
	};
	var toRules = function toRules(parsed, points) {
	  // pretend we've started with a comma
	  var index = -1;
	  var character = 44;
	  do {
	    switch (token(character)) {
	      case 0:
	        // &\f
	        if (character === 38 && peek() === 12) {
	          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
	          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
	          // and when it should just concatenate the outer and inner selectors
	          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
	          points[index] = 1;
	        }
	        parsed[index] += identifierWithPointTracking(position - 1, points, index);
	        break;
	      case 2:
	        parsed[index] += delimit(character);
	        break;
	      case 4:
	        // comma
	        if (character === 44) {
	          // colon
	          parsed[++index] = peek() === 58 ? '&\f' : '';
	          points[index] = parsed[index].length;
	          break;
	        }

	      // fallthrough

	      default:
	        parsed[index] += from(character);
	    }
	  } while (character = next());
	  return parsed;
	};
	var getRules = function getRules(value, points) {
	  return dealloc(toRules(alloc(value), points));
	}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11

	var fixedElements = /* #__PURE__ */new WeakMap();
	var compat = function compat(element) {
	  if (element.type !== 'rule' || !element.parent ||
	  // positive .length indicates that this rule contains pseudo
	  // negative .length indicates that this rule has been already prefixed
	  element.length < 1) {
	    return;
	  }
	  var value = element.value,
	    parent = element.parent;
	  var isImplicitRule = element.column === parent.column && element.line === parent.line;
	  while (parent.type !== 'rule') {
	    parent = parent.parent;
	    if (!parent) return;
	  } // short-circuit for the simplest case

	  if (element.props.length === 1 && value.charCodeAt(0) !== 58
	  /* colon */ && !fixedElements.get(parent)) {
	    return;
	  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
	  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"

	  if (isImplicitRule) {
	    return;
	  }
	  fixedElements.set(element, true);
	  var points = [];
	  var rules = getRules(value, points);
	  var parentRules = parent.props;
	  for (var i = 0, k = 0; i < rules.length; i++) {
	    for (var j = 0; j < parentRules.length; j++, k++) {
	      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
	    }
	  }
	};
	var removeLabel = function removeLabel(element) {
	  if (element.type === 'decl') {
	    var value = element.value;
	    if (
	    // charcode for l
	    value.charCodeAt(0) === 108 &&
	    // charcode for b
	    value.charCodeAt(2) === 98) {
	      // this ignores label
	      element["return"] = '';
	      element.value = '';
	    }
	  }
	};
	var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';
	var isIgnoringComment = function isIgnoringComment(element) {
	  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
	};
	var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
	  return function (element, index, children) {
	    if (element.type !== 'rule' || cache.compat) return;
	    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
	    if (unsafePseudoClasses) {
	      var isNested = !!element.parent; // in nested rules comments become children of the "auto-inserted" rule and that's always the `element.parent`
	      //
	      // considering this input:
	      // .a {
	      //   .b /* comm */ {}
	      //   color: hotpink;
	      // }
	      // we get output corresponding to this:
	      // .a {
	      //   & {
	      //     /* comm */
	      //     color: hotpink;
	      //   }
	      //   .b {}
	      // }

	      var commentContainer = isNested ? element.parent.children :
	      // global rule at the root level
	      children;
	      for (var i = commentContainer.length - 1; i >= 0; i--) {
	        var node = commentContainer[i];
	        if (node.line < element.line) {
	          break;
	        } // it is quite weird but comments are *usually* put at `column: element.column - 1`
	        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that
	        // this will also match inputs like this:
	        // .a {
	        //   /* comm */
	        //   .b {}
	        // }
	        //
	        // but that is fine
	        //
	        // it would be the easiest to change the placement of the comment to be the first child of the rule:
	        // .a {
	        //   .b { /* comm */ }
	        // }
	        // with such inputs we wouldn't have to search for the comment at all
	        // TODO: consider changing this comment placement in the next major version

	        if (node.column < element.column) {
	          if (isIgnoringComment(node)) {
	            return;
	          }
	          break;
	        }
	      }
	      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
	        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
	      });
	    }
	  };
	};
	var isImportRule = function isImportRule(element) {
	  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
	};
	var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
	  for (var i = index - 1; i >= 0; i--) {
	    if (!isImportRule(children[i])) {
	      return true;
	    }
	  }
	  return false;
	}; // use this to remove incorrect elements from further processing
	// so they don't get handed to the `sheet` (or anything else)
	// as that could potentially lead to additional logs which in turn could be overhelming to the user

	var nullifyElement = function nullifyElement(element) {
	  element.type = '';
	  element.value = '';
	  element["return"] = '';
	  element.children = '';
	  element.props = '';
	};
	var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
	  if (!isImportRule(element)) {
	    return;
	  }
	  if (element.parent) {
	    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
	    nullifyElement(element);
	  } else if (isPrependedWithRegularRules(index, children)) {
	    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
	    nullifyElement(element);
	  }
	};

	/* eslint-disable no-fallthrough */

	function prefix(value, length) {
	  switch (hash(value, length)) {
	    // color-adjust
	    case 5103:
	      return WEBKIT + 'print-' + value + value;
	    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)

	    case 5737:
	    case 4201:
	    case 3177:
	    case 3433:
	    case 1641:
	    case 4457:
	    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break

	    case 5572:
	    case 6356:
	    case 5844:
	    case 3191:
	    case 6645:
	    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,

	    case 6391:
	    case 5879:
	    case 5623:
	    case 6135:
	    case 4599:
	    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)

	    case 4215:
	    case 6389:
	    case 5109:
	    case 5365:
	    case 5621:
	    case 3829:
	      return WEBKIT + value + value;
	    // appearance, user-select, transform, hyphens, text-size-adjust

	    case 5349:
	    case 4246:
	    case 4810:
	    case 6968:
	    case 2756:
	      return WEBKIT + value + MOZ + value + MS + value + value;
	    // flex, flex-direction

	    case 6828:
	    case 4268:
	      return WEBKIT + value + MS + value + value;
	    // order

	    case 6165:
	      return WEBKIT + value + MS + 'flex-' + value + value;
	    // align-items

	    case 5187:
	      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;
	    // align-self

	    case 5443:
	      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;
	    // align-content

	    case 4675:
	      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;
	    // flex-shrink

	    case 5548:
	      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;
	    // flex-basis

	    case 5292:
	      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;
	    // flex-grow

	    case 6060:
	      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;
	    // transition

	    case 4554:
	      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;
	    // cursor

	    case 6187:
	      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;
	    // background, background-image

	    case 5495:
	    case 3959:
	      return replace(value, /(image-set\([^]*)/, WEBKIT + '$1' + '$`$1');
	    // justify-content

	    case 4968:
	      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;
	    // (margin|padding)-inline-(start|end)

	    case 4095:
	    case 3583:
	    case 4068:
	    case 2532:
	      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;
	    // (min|max)?(width|height|inline-size|block-size)

	    case 8116:
	    case 7059:
	    case 5753:
	    case 5535:
	    case 5445:
	    case 5701:
	    case 4933:
	    case 4677:
	    case 5533:
	    case 5789:
	    case 5021:
	    case 4765:
	      // stretch, max-content, min-content, fill-available
	      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {
	        // (m)ax-content, (m)in-content
	        case 109:
	          // -
	          if (charat(value, length + 4) !== 45) break;
	        // (f)ill-available, (f)it-content

	        case 102:
	          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
	        // (s)tretch

	        case 115:
	          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;
	      }
	      break;
	    // position: sticky

	    case 4949:
	      // (s)ticky?
	      if (charat(value, length + 1) !== 115) break;
	    // display: (flex|inline-flex)

	    case 6444:
	      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
	        // stic(k)y
	        case 107:
	          return replace(value, ':', ':' + WEBKIT) + value;
	        // (inline-)?fl(e)x

	        case 101:
	          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;
	      }
	      break;
	    // writing-mode

	    case 5936:
	      switch (charat(value, length + 11)) {
	        // vertical-l(r)
	        case 114:
	          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
	        // vertical-r(l)

	        case 108:
	          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
	        // horizontal(-)tb

	        case 45:
	          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
	      }
	      return WEBKIT + value + MS + value + value;
	  }
	  return value;
	}
	var prefixer = function prefixer(element, index, children, callback) {
	  if (element.length > -1) if (!element["return"]) switch (element.type) {
	    case DECLARATION:
	      element["return"] = prefix(element.value, element.length);
	      break;
	    case KEYFRAMES:
	      return serialize([copy(element, {
	        value: replace(element.value, '@', '@' + WEBKIT)
	      })], callback);
	    case RULESET:
	      if (element.length) return combine(element.props, function (value) {
	        switch (match(value, /(::plac\w+|:read-\w+)/)) {
	          // :read-(only|write)
	          case ':read-only':
	          case ':read-write':
	            return serialize([copy(element, {
	              props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')]
	            })], callback);
	          // :placeholder

	          case '::placeholder':
	            return serialize([copy(element, {
	              props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')]
	            }), copy(element, {
	              props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')]
	            }), copy(element, {
	              props: [replace(value, /:(plac\w+)/, MS + 'input-$1')]
	            })], callback);
	        }
	        return '';
	      });
	  }
	};
	var isBrowser$5 = typeof document !== 'undefined';
	var getServerStylisCache = isBrowser$5 ? undefined : weakMemoize(function () {
	  return memoize$1(function () {
	    var cache = {};
	    return function (name) {
	      return cache[name];
	    };
	  });
	});
	var defaultStylisPlugins = [prefixer];
	var createCache = function createCache(options) {
	  var key = options.key;
	  if (!key) {
	    throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\n" + "If multiple caches share the same key they might \"fight\" for each other's style elements.");
	  }
	  if (isBrowser$5 && key === 'css') {
	    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
	    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
	    // note this very very intentionally targets all style elements regardless of the key to ensure
	    // that creating a cache works inside of render of a React component

	    Array.prototype.forEach.call(ssrStyles, function (node) {
	      // we want to only move elements which have a space in the data-emotion attribute value
	      // because that indicates that it is an Emotion 11 server-side rendered style elements
	      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
	      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
	      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
	      // will not result in the Emotion 10 styles being destroyed
	      var dataEmotionAttribute = node.getAttribute('data-emotion');
	      if (dataEmotionAttribute.indexOf(' ') === -1) {
	        return;
	      }
	      document.head.appendChild(node);
	      node.setAttribute('data-s', '');
	    });
	  }
	  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
	  {
	    // $FlowFixMe
	    if (/[^a-z-]/.test(key)) {
	      throw new Error("Emotion key must only contain lower case alphabetical characters and - but \"" + key + "\" was passed");
	    }
	  }
	  var inserted = {};
	  var container;
	  var nodesToHydrate = [];
	  if (isBrowser$5) {
	    container = options.container || document.head;
	    Array.prototype.forEach.call(
	    // this means we will ignore elements which don't have a space in them which
	    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
	    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
	      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

	      for (var i = 1; i < attrib.length; i++) {
	        inserted[attrib[i]] = true;
	      }
	      nodesToHydrate.push(node);
	    });
	  }
	  var _insert;
	  var omnipresentPlugins = [compat, removeLabel];
	  {
	    omnipresentPlugins.push(createUnsafeSelectorsAlarm({
	      get compat() {
	        return cache.compat;
	      }
	    }), incorrectImportAlarm);
	  }
	  if (isBrowser$5) {
	    var currentSheet;
	    var finalizingPlugins = [stringify, function (element) {
	      if (!element.root) {
	        if (element["return"]) {
	          currentSheet.insert(element["return"]);
	        } else if (element.value && element.type !== COMMENT) {
	          // insert empty rule in non-production environments
	          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet
	          currentSheet.insert(element.value + "{}");
	        }
	      }
	    } ];
	    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
	    var stylis = function stylis(styles) {
	      return serialize(compile(styles), serializer);
	    };
	    _insert = function insert(selector, serialized, sheet, shouldCache) {
	      currentSheet = sheet;
	      if (serialized.map !== undefined) {
	        currentSheet = {
	          insert: function insert(rule) {
	            sheet.insert(rule + serialized.map);
	          }
	        };
	      }
	      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
	      if (shouldCache) {
	        cache.inserted[serialized.name] = true;
	      }
	    };
	  } else {
	    var _finalizingPlugins = [stringify];
	    var _serializer = middleware(omnipresentPlugins.concat(stylisPlugins, _finalizingPlugins));
	    var _stylis = function _stylis(styles) {
	      return serialize(compile(styles), _serializer);
	    }; // $FlowFixMe

	    var serverStylisCache = getServerStylisCache(stylisPlugins)(key);
	    var getRules = function getRules(selector, serialized) {
	      var name = serialized.name;
	      if (serverStylisCache[name] === undefined) {
	        serverStylisCache[name] = _stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
	      }
	      return serverStylisCache[name];
	    };
	    _insert = function _insert(selector, serialized, sheet, shouldCache) {
	      var name = serialized.name;
	      var rules = getRules(selector, serialized);
	      if (cache.compat === undefined) {
	        // in regular mode, we don't set the styles on the inserted cache
	        // since we don't need to and that would be wasting memory
	        // we return them so that they are rendered in a style tag
	        if (shouldCache) {
	          cache.inserted[name] = true;
	        }
	        if (
	        // using === development instead of !== production
	        // because if people do ssr in tests, the source maps showing up would be annoying
	        serialized.map !== undefined) {
	          return rules + serialized.map;
	        }
	        return rules;
	      } else {
	        // in compat mode, we put the styles on the inserted cache so
	        // that emotion-server can pull out the styles
	        // except when we don't want to cache it which was in Global but now
	        // is nowhere but we don't want to do a major right now
	        // and just in case we're going to leave the case here
	        // it's also not affecting client side bundle size
	        // so it's really not a big deal
	        if (shouldCache) {
	          cache.inserted[name] = rules;
	        } else {
	          return rules;
	        }
	      }
	    };
	  }
	  var cache = {
	    key: key,
	    sheet: new StyleSheet({
	      key: key,
	      container: container,
	      nonce: options.nonce,
	      speedy: options.speedy,
	      prepend: options.prepend,
	      insertionPoint: options.insertionPoint
	    }),
	    nonce: options.nonce,
	    inserted: inserted,
	    registered: {},
	    insert: _insert
	  };
	  cache.sheet.hydrate(nodesToHydrate);
	  return cache;
	};

	var reactIs$4 = {exports: {}};

	var reactIs_development$3 = {};

	/** @license React v16.13.1
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactIs_development$2;

	function requireReactIs_development$2 () {
		if (hasRequiredReactIs_development$2) return reactIs_development$3;
		hasRequiredReactIs_development$2 = 1;

		{
		  (function () {

		    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		    // nor polyfill, then a plain number is used for performance.
		    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
		    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
		    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
		    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
		    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
		    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
		    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
		    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
		    // (unstable) APIs that have been removed. Can we remove the symbols?

		    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
		    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
		    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
		    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
		    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
		    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
		    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
		    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
		    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
		    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
		    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
		    function isValidElementType(type) {
		      return typeof type === 'string' || typeof type === 'function' ||
		      // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
		      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
		    }
		    function typeOf(object) {
		      if (typeof object === 'object' && object !== null) {
		        var $$typeof = object.$$typeof;
		        switch ($$typeof) {
		          case REACT_ELEMENT_TYPE:
		            var type = object.type;
		            switch (type) {
		              case REACT_ASYNC_MODE_TYPE:
		              case REACT_CONCURRENT_MODE_TYPE:
		              case REACT_FRAGMENT_TYPE:
		              case REACT_PROFILER_TYPE:
		              case REACT_STRICT_MODE_TYPE:
		              case REACT_SUSPENSE_TYPE:
		                return type;
		              default:
		                var $$typeofType = type && type.$$typeof;
		                switch ($$typeofType) {
		                  case REACT_CONTEXT_TYPE:
		                  case REACT_FORWARD_REF_TYPE:
		                  case REACT_LAZY_TYPE:
		                  case REACT_MEMO_TYPE:
		                  case REACT_PROVIDER_TYPE:
		                    return $$typeofType;
		                  default:
		                    return $$typeof;
		                }
		            }
		          case REACT_PORTAL_TYPE:
		            return $$typeof;
		        }
		      }
		      return undefined;
		    } // AsyncMode is deprecated along with isAsyncMode

		    var AsyncMode = REACT_ASYNC_MODE_TYPE;
		    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		    var ContextConsumer = REACT_CONTEXT_TYPE;
		    var ContextProvider = REACT_PROVIDER_TYPE;
		    var Element = REACT_ELEMENT_TYPE;
		    var ForwardRef = REACT_FORWARD_REF_TYPE;
		    var Fragment = REACT_FRAGMENT_TYPE;
		    var Lazy = REACT_LAZY_TYPE;
		    var Memo = REACT_MEMO_TYPE;
		    var Portal = REACT_PORTAL_TYPE;
		    var Profiler = REACT_PROFILER_TYPE;
		    var StrictMode = REACT_STRICT_MODE_TYPE;
		    var Suspense = REACT_SUSPENSE_TYPE;
		    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

		    function isAsyncMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
		          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
		        }
		      }
		      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
		    }
		    function isConcurrentMode(object) {
		      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		    }
		    function isContextConsumer(object) {
		      return typeOf(object) === REACT_CONTEXT_TYPE;
		    }
		    function isContextProvider(object) {
		      return typeOf(object) === REACT_PROVIDER_TYPE;
		    }
		    function isElement(object) {
		      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		    }
		    function isForwardRef(object) {
		      return typeOf(object) === REACT_FORWARD_REF_TYPE;
		    }
		    function isFragment(object) {
		      return typeOf(object) === REACT_FRAGMENT_TYPE;
		    }
		    function isLazy(object) {
		      return typeOf(object) === REACT_LAZY_TYPE;
		    }
		    function isMemo(object) {
		      return typeOf(object) === REACT_MEMO_TYPE;
		    }
		    function isPortal(object) {
		      return typeOf(object) === REACT_PORTAL_TYPE;
		    }
		    function isProfiler(object) {
		      return typeOf(object) === REACT_PROFILER_TYPE;
		    }
		    function isStrictMode(object) {
		      return typeOf(object) === REACT_STRICT_MODE_TYPE;
		    }
		    function isSuspense(object) {
		      return typeOf(object) === REACT_SUSPENSE_TYPE;
		    }
		    reactIs_development$3.AsyncMode = AsyncMode;
		    reactIs_development$3.ConcurrentMode = ConcurrentMode;
		    reactIs_development$3.ContextConsumer = ContextConsumer;
		    reactIs_development$3.ContextProvider = ContextProvider;
		    reactIs_development$3.Element = Element;
		    reactIs_development$3.ForwardRef = ForwardRef;
		    reactIs_development$3.Fragment = Fragment;
		    reactIs_development$3.Lazy = Lazy;
		    reactIs_development$3.Memo = Memo;
		    reactIs_development$3.Portal = Portal;
		    reactIs_development$3.Profiler = Profiler;
		    reactIs_development$3.StrictMode = StrictMode;
		    reactIs_development$3.Suspense = Suspense;
		    reactIs_development$3.isAsyncMode = isAsyncMode;
		    reactIs_development$3.isConcurrentMode = isConcurrentMode;
		    reactIs_development$3.isContextConsumer = isContextConsumer;
		    reactIs_development$3.isContextProvider = isContextProvider;
		    reactIs_development$3.isElement = isElement;
		    reactIs_development$3.isForwardRef = isForwardRef;
		    reactIs_development$3.isFragment = isFragment;
		    reactIs_development$3.isLazy = isLazy;
		    reactIs_development$3.isMemo = isMemo;
		    reactIs_development$3.isPortal = isPortal;
		    reactIs_development$3.isProfiler = isProfiler;
		    reactIs_development$3.isStrictMode = isStrictMode;
		    reactIs_development$3.isSuspense = isSuspense;
		    reactIs_development$3.isValidElementType = isValidElementType;
		    reactIs_development$3.typeOf = typeOf;
		  })();
		}
		return reactIs_development$3;
	}

	{
	  reactIs$4.exports = requireReactIs_development$2();
	}

	var reactIsExports$1 = reactIs$4.exports;

	var reactIs$3 = reactIsExports$1;
	var FORWARD_REF_STATICS = {
	  '$$typeof': true,
	  render: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true
	};
	var MEMO_STATICS = {
	  '$$typeof': true,
	  compare: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true,
	  type: true
	};
	var TYPE_STATICS = {};
	TYPE_STATICS[reactIs$3.ForwardRef] = FORWARD_REF_STATICS;
	TYPE_STATICS[reactIs$3.Memo] = MEMO_STATICS;

	var isBrowser$4 = typeof document !== 'undefined';
	function getRegisteredStyles(registered, registeredStyles, classNames) {
	  var rawClassName = '';
	  classNames.split(' ').forEach(function (className) {
	    if (registered[className] !== undefined) {
	      registeredStyles.push(registered[className] + ";");
	    } else {
	      rawClassName += className + " ";
	    }
	  });
	  return rawClassName;
	}
	var registerStyles = function registerStyles(cache, serialized, isStringTag) {
	  var className = cache.key + "-" + serialized.name;
	  if (
	  // we only need to add the styles to the registered cache if the
	  // class name could be used further down
	  // the tree but if it's a string tag, we know it won't
	  // so we don't have to add it to registered cache.
	  // this improves memory usage since we can avoid storing the whole style string
	  (isStringTag === false ||
	  // we need to always store it if we're in compat mode and
	  // in node since emotion-server relies on whether a style is in
	  // the registered cache to know whether a style is global or not
	  // also, note that this check will be dead code eliminated in the browser
	  isBrowser$4 === false && cache.compat !== undefined) && cache.registered[className] === undefined) {
	    cache.registered[className] = serialized.styles;
	  }
	};
	var insertStyles = function insertStyles(cache, serialized, isStringTag) {
	  registerStyles(cache, serialized, isStringTag);
	  var className = cache.key + "-" + serialized.name;
	  if (cache.inserted[serialized.name] === undefined) {
	    var stylesForSSR = '';
	    var current = serialized;
	    do {
	      var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
	      if (!isBrowser$4 && maybeStyles !== undefined) {
	        stylesForSSR += maybeStyles;
	      }
	      current = current.next;
	    } while (current !== undefined);
	    if (!isBrowser$4 && stylesForSSR.length !== 0) {
	      return stylesForSSR;
	    }
	  }
	};

	/* eslint-disable */
	// Inspired by https://github.com/garycourt/murmurhash-js
	// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
	function murmur2(str) {
	  // 'm' and 'r' are mixing constants generated offline.
	  // They're not really 'magic', they just happen to work well.
	  // const m = 0x5bd1e995;
	  // const r = 24;
	  // Initialize the hash
	  var h = 0; // Mix 4 bytes at a time into the hash

	  var k,
	    i = 0,
	    len = str.length;
	  for (; len >= 4; ++i, len -= 4) {
	    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
	    k = /* Math.imul(k, m): */
	    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
	    k ^= /* k >>> r: */
	    k >>> 24;
	    h = /* Math.imul(k, m): */
	    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^ /* Math.imul(h, m): */
	    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
	  } // Handle the last few bytes of the input array

	  switch (len) {
	    case 3:
	      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
	    case 2:
	      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
	    case 1:
	      h ^= str.charCodeAt(i) & 0xff;
	      h = /* Math.imul(h, m): */
	      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
	  } // Do a few final mixes of the hash to ensure the last few
	  // bytes are well-incorporated.

	  h ^= h >>> 13;
	  h = /* Math.imul(h, m): */
	  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
	  return ((h ^ h >>> 15) >>> 0).toString(36);
	}

	var unitlessKeys = {
	  animationIterationCount: 1,
	  aspectRatio: 1,
	  borderImageOutset: 1,
	  borderImageSlice: 1,
	  borderImageWidth: 1,
	  boxFlex: 1,
	  boxFlexGroup: 1,
	  boxOrdinalGroup: 1,
	  columnCount: 1,
	  columns: 1,
	  flex: 1,
	  flexGrow: 1,
	  flexPositive: 1,
	  flexShrink: 1,
	  flexNegative: 1,
	  flexOrder: 1,
	  gridRow: 1,
	  gridRowEnd: 1,
	  gridRowSpan: 1,
	  gridRowStart: 1,
	  gridColumn: 1,
	  gridColumnEnd: 1,
	  gridColumnSpan: 1,
	  gridColumnStart: 1,
	  msGridRow: 1,
	  msGridRowSpan: 1,
	  msGridColumn: 1,
	  msGridColumnSpan: 1,
	  fontWeight: 1,
	  lineHeight: 1,
	  opacity: 1,
	  order: 1,
	  orphans: 1,
	  tabSize: 1,
	  widows: 1,
	  zIndex: 1,
	  zoom: 1,
	  WebkitLineClamp: 1,
	  // SVG-related properties
	  fillOpacity: 1,
	  floodOpacity: 1,
	  stopOpacity: 1,
	  strokeDasharray: 1,
	  strokeDashoffset: 1,
	  strokeMiterlimit: 1,
	  strokeOpacity: 1,
	  strokeWidth: 1
	};

	var ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
	var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
	var hyphenateRegex = /[A-Z]|^ms/g;
	var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
	var isCustomProperty = function isCustomProperty(property) {
	  return property.charCodeAt(1) === 45;
	};
	var isProcessableValue = function isProcessableValue(value) {
	  return value != null && typeof value !== 'boolean';
	};
	var processStyleName = /* #__PURE__ */memoize$1(function (styleName) {
	  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
	});
	var processStyleValue = function processStyleValue(key, value) {
	  switch (key) {
	    case 'animation':
	    case 'animationName':
	      {
	        if (typeof value === 'string') {
	          return value.replace(animationRegex, function (match, p1, p2) {
	            cursor = {
	              name: p1,
	              styles: p2,
	              next: cursor
	            };
	            return p1;
	          });
	        }
	      }
	  }
	  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
	    return value + 'px';
	  }
	  return value;
	};
	{
	  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
	  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];
	  var oldProcessStyleValue = processStyleValue;
	  var msPattern = /^-ms-/;
	  var hyphenPattern = /-(.)/g;
	  var hyphenatedCache = {};
	  processStyleValue = function processStyleValue(key, value) {
	    if (key === 'content') {
	      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
	        throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
	      }
	    }
	    var processed = oldProcessStyleValue(key, value);
	    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {
	      hyphenatedCache[key] = true;
	      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {
	        return _char.toUpperCase();
	      }) + "?");
	    }
	    return processed;
	  };
	}
	var noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';
	function handleInterpolation(mergedProps, registered, interpolation) {
	  if (interpolation == null) {
	    return '';
	  }
	  if (interpolation.__emotion_styles !== undefined) {
	    if (interpolation.toString() === 'NO_COMPONENT_SELECTOR') {
	      throw new Error(noComponentSelectorMessage);
	    }
	    return interpolation;
	  }
	  switch (typeof interpolation) {
	    case 'boolean':
	      {
	        return '';
	      }
	    case 'object':
	      {
	        if (interpolation.anim === 1) {
	          cursor = {
	            name: interpolation.name,
	            styles: interpolation.styles,
	            next: cursor
	          };
	          return interpolation.name;
	        }
	        if (interpolation.styles !== undefined) {
	          var next = interpolation.next;
	          if (next !== undefined) {
	            // not the most efficient thing ever but this is a pretty rare case
	            // and there will be very few iterations of this generally
	            while (next !== undefined) {
	              cursor = {
	                name: next.name,
	                styles: next.styles,
	                next: cursor
	              };
	              next = next.next;
	            }
	          }
	          var styles = interpolation.styles + ";";
	          if (interpolation.map !== undefined) {
	            styles += interpolation.map;
	          }
	          return styles;
	        }
	        return createStringFromObject(mergedProps, registered, interpolation);
	      }
	    case 'function':
	      {
	        if (mergedProps !== undefined) {
	          var previousCursor = cursor;
	          var result = interpolation(mergedProps);
	          cursor = previousCursor;
	          return handleInterpolation(mergedProps, registered, result);
	        } else {
	          console.error('Functions that are interpolated in css calls will be stringified.\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\n' + 'It can be called directly with props or interpolated in a styled call like this\n' + "let SomeComponent = styled('div')`${dynamicStyle}`");
	        }
	        break;
	      }
	    case 'string':
	      {
	        var matched = [];
	        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {
	          var fakeVarName = "animation" + matched.length;
	          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, '') + "`");
	          return "${" + fakeVarName + "}";
	        });
	        if (matched.length) {
	          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\n' + 'Instead of doing this:\n\n' + [].concat(matched, ["`" + replaced + "`"]).join('\n') + '\n\nYou should wrap it with `css` like this:\n\n' + ("css`" + replaced + "`"));
	        }
	      }
	      break;
	  } // finalize string values (regular strings and functions interpolated into css calls)

	  if (registered == null) {
	    return interpolation;
	  }
	  var cached = registered[interpolation];
	  return cached !== undefined ? cached : interpolation;
	}
	function createStringFromObject(mergedProps, registered, obj) {
	  var string = '';
	  if (Array.isArray(obj)) {
	    for (var i = 0; i < obj.length; i++) {
	      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
	    }
	  } else {
	    for (var _key in obj) {
	      var value = obj[_key];
	      if (typeof value !== 'object') {
	        if (registered != null && registered[value] !== undefined) {
	          string += _key + "{" + registered[value] + "}";
	        } else if (isProcessableValue(value)) {
	          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
	        }
	      } else {
	        if (_key === 'NO_COMPONENT_SELECTOR' && "development" !== 'production') {
	          throw new Error(noComponentSelectorMessage);
	        }
	        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
	          for (var _i = 0; _i < value.length; _i++) {
	            if (isProcessableValue(value[_i])) {
	              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
	            }
	          }
	        } else {
	          var interpolated = handleInterpolation(mergedProps, registered, value);
	          switch (_key) {
	            case 'animation':
	            case 'animationName':
	              {
	                string += processStyleName(_key) + ":" + interpolated + ";";
	                break;
	              }
	            default:
	              {
	                if (_key === 'undefined') {
	                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
	                }
	                string += _key + "{" + interpolated + "}";
	              }
	          }
	        }
	      }
	    }
	  }
	  return string;
	}
	var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
	var sourceMapPattern;
	{
	  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
	} // this is the cursor for keyframes
	// keyframes are stored on the SerializedStyles object as a linked list

	var cursor;
	var serializeStyles = function serializeStyles(args, registered, mergedProps) {
	  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
	    return args[0];
	  }
	  var stringMode = true;
	  var styles = '';
	  cursor = undefined;
	  var strings = args[0];
	  if (strings == null || strings.raw === undefined) {
	    stringMode = false;
	    styles += handleInterpolation(mergedProps, registered, strings);
	  } else {
	    if (strings[0] === undefined) {
	      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1);
	    }
	    styles += strings[0];
	  } // we start at 1 since we've already handled the first arg

	  for (var i = 1; i < args.length; i++) {
	    styles += handleInterpolation(mergedProps, registered, args[i]);
	    if (stringMode) {
	      if (strings[i] === undefined) {
	        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1);
	      }
	      styles += strings[i];
	    }
	  }
	  var sourceMap;
	  {
	    styles = styles.replace(sourceMapPattern, function (match) {
	      sourceMap = match;
	      return '';
	    });
	  } // using a global regex with .exec is stateful so lastIndex has to be reset each time

	  labelPattern.lastIndex = 0;
	  var identifierName = '';
	  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

	  while ((match = labelPattern.exec(styles)) !== null) {
	    identifierName += '-' +
	    // $FlowFixMe we know it's not null
	    match[1];
	  }
	  var name = murmur2(styles) + identifierName;
	  {
	    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)
	    return {
	      name: name,
	      styles: styles,
	      map: sourceMap,
	      next: cursor,
	      toString: function toString() {
	        return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
	      }
	    };
	  }
	};

	var isBrowser$3 = typeof document !== 'undefined';
	var syncFallback = function syncFallback(create) {
	  return create();
	};
	var useInsertionEffect = React$1['useInsertion' + 'Effect'] ? React$1['useInsertion' + 'Effect'] : false;
	var useInsertionEffectAlwaysWithSyncFallback = !isBrowser$3 ? syncFallback : useInsertionEffect || syncFallback;
	var useInsertionEffectWithLayoutFallback = useInsertionEffect || reactExports.useLayoutEffect;

	var isBrowser$2 = typeof document !== 'undefined';
	var hasOwn = {}.hasOwnProperty;
	var EmotionCacheContext = /* #__PURE__ */reactExports.createContext(
	// we're doing this to avoid preconstruct's dead code elimination in this one case
	// because this module is primarily intended for the browser and node
	// but it's also required in react native and similar environments sometimes
	// and we could have a special build just for that
	// but this is much easier and the native packages
	// might use a different theme context in the future anyway
	typeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({
	  key: 'css'
	}) : null);
	{
	  EmotionCacheContext.displayName = 'EmotionCacheContext';
	}
	var CacheProvider = EmotionCacheContext.Provider;
	var withEmotionCache = function withEmotionCache(func) {
	  // $FlowFixMe
	  return /*#__PURE__*/reactExports.forwardRef(function (props, ref) {
	    // the cache will never be null in the browser
	    var cache = reactExports.useContext(EmotionCacheContext);
	    return func(props, cache, ref);
	  });
	};
	if (!isBrowser$2) {
	  withEmotionCache = function withEmotionCache(func) {
	    return function (props) {
	      var cache = reactExports.useContext(EmotionCacheContext);
	      if (cache === null) {
	        // yes, we're potentially creating this on every render
	        // it doesn't actually matter though since it's only on the server
	        // so there will only every be a single render
	        // that could change in the future because of suspense and etc. but for now,
	        // this works and i don't want to optimise for a future thing that we aren't sure about
	        cache = createCache({
	          key: 'css'
	        });
	        return /*#__PURE__*/reactExports.createElement(EmotionCacheContext.Provider, {
	          value: cache
	        }, func(props, cache));
	      } else {
	        return func(props, cache);
	      }
	    };
	  };
	}
	var ThemeContext = /* #__PURE__ */reactExports.createContext({});
	{
	  ThemeContext.displayName = 'EmotionThemeContext';
	}
	var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
	var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';
	var Insertion$2 = function Insertion(_ref) {
	  var cache = _ref.cache,
	    serialized = _ref.serialized,
	    isStringTag = _ref.isStringTag;
	  registerStyles(cache, serialized, isStringTag);
	  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
	    return insertStyles(cache, serialized, isStringTag);
	  });
	  if (!isBrowser$2 && rules !== undefined) {
	    var _ref2;
	    var serializedNames = serialized.name;
	    var next = serialized.next;
	    while (next !== undefined) {
	      serializedNames += ' ' + next.name;
	      next = next.next;
	    }
	    return /*#__PURE__*/reactExports.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref2.nonce = cache.sheet.nonce, _ref2));
	  }
	  return null;
	};
	var Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {
	  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
	  // not passing the registered cache to serializeStyles because it would
	  // make certain babel optimisations not possible

	  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
	    cssProp = cache.registered[cssProp];
	  }
	  var WrappedComponent = props[typePropName];
	  var registeredStyles = [cssProp];
	  var className = '';
	  if (typeof props.className === 'string') {
	    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
	  } else if (props.className != null) {
	    className = props.className + " ";
	  }
	  var serialized = serializeStyles(registeredStyles, undefined, reactExports.useContext(ThemeContext));
	  if (serialized.name.indexOf('-') === -1) {
	    var labelFromStack = props[labelPropName];
	    if (labelFromStack) {
	      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);
	    }
	  }
	  className += cache.key + "-" + serialized.name;
	  var newProps = {};
	  for (var key in props) {
	    if (hasOwn.call(props, key) && key !== 'css' && key !== typePropName && (key !== labelPropName)) {
	      newProps[key] = props[key];
	    }
	  }
	  newProps.ref = ref;
	  newProps.className = className;
	  return /*#__PURE__*/reactExports.createElement(reactExports.Fragment, null, /*#__PURE__*/reactExports.createElement(Insertion$2, {
	    cache: cache,
	    serialized: serialized,
	    isStringTag: typeof WrappedComponent === 'string'
	  }), /*#__PURE__*/reactExports.createElement(WrappedComponent, newProps));
	});
	{
	  Emotion.displayName = 'EmotionCssPropInternal';
	}

	var pkg = {
	  name: "@emotion/react",
	  version: "11.11.4",
	  main: "dist/emotion-react.cjs.js",
	  module: "dist/emotion-react.esm.js",
	  browser: {
	    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
	  },
	  exports: {
	    ".": {
	      module: {
	        worker: "./dist/emotion-react.worker.esm.js",
	        browser: "./dist/emotion-react.browser.esm.js",
	        "default": "./dist/emotion-react.esm.js"
	      },
	      "import": "./dist/emotion-react.cjs.mjs",
	      "default": "./dist/emotion-react.cjs.js"
	    },
	    "./jsx-runtime": {
	      module: {
	        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
	        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
	        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
	      },
	      "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs",
	      "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
	    },
	    "./_isolated-hnrs": {
	      module: {
	        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
	        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
	        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
	      },
	      "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs",
	      "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
	    },
	    "./jsx-dev-runtime": {
	      module: {
	        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
	        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
	        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
	      },
	      "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs",
	      "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
	    },
	    "./package.json": "./package.json",
	    "./types/css-prop": "./types/css-prop.d.ts",
	    "./macro": {
	      types: {
	        "import": "./macro.d.mts",
	        "default": "./macro.d.ts"
	      },
	      "default": "./macro.js"
	    }
	  },
	  types: "types/index.d.ts",
	  files: ["src", "dist", "jsx-runtime", "jsx-dev-runtime", "_isolated-hnrs", "types/*.d.ts", "macro.*"],
	  sideEffects: false,
	  author: "Emotion Contributors",
	  license: "MIT",
	  scripts: {
	    "test:typescript": "dtslint types"
	  },
	  dependencies: {
	    "@babel/runtime": "^7.18.3",
	    "@emotion/babel-plugin": "^11.11.0",
	    "@emotion/cache": "^11.11.0",
	    "@emotion/serialize": "^1.1.3",
	    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.1",
	    "@emotion/utils": "^1.2.1",
	    "@emotion/weak-memoize": "^0.3.1",
	    "hoist-non-react-statics": "^3.3.1"
	  },
	  peerDependencies: {
	    react: ">=16.8.0"
	  },
	  peerDependenciesMeta: {
	    "@types/react": {
	      optional: true
	    }
	  },
	  devDependencies: {
	    "@definitelytyped/dtslint": "0.0.112",
	    "@emotion/css": "11.11.2",
	    "@emotion/css-prettifier": "1.1.3",
	    "@emotion/server": "11.11.0",
	    "@emotion/styled": "11.11.0",
	    "html-tag-names": "^1.1.2",
	    react: "16.14.0",
	    "svg-tag-names": "^1.1.1",
	    typescript: "^4.5.5"
	  },
	  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
	  publishConfig: {
	    access: "public"
	  },
	  "umd:main": "dist/emotion-react.umd.min.js",
	  preconstruct: {
	    entrypoints: ["./index.js", "./jsx-runtime.js", "./jsx-dev-runtime.js", "./_isolated-hnrs.js"],
	    umdName: "emotionReact",
	    exports: {
	      envConditions: ["browser", "worker"],
	      extra: {
	        "./types/css-prop": "./types/css-prop.d.ts",
	        "./macro": {
	          types: {
	            "import": "./macro.d.mts",
	            "default": "./macro.d.ts"
	          },
	          "default": "./macro.js"
	        }
	      }
	    }
	  }
	};
	var warnedAboutCssPropForGlobal = false; // maintain place over rerenders.
	// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
	// initial client-side render from SSR, use place of hydrating tag

	var Global = /* #__PURE__ */withEmotionCache(function (props, cache) {
	  if (!warnedAboutCssPropForGlobal && (
	  // check for className as well since the user is
	  // probably using the custom createElement which
	  // means it will be turned into a className prop
	  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used
	  props.className || props.css)) {
	    console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
	    warnedAboutCssPropForGlobal = true;
	  }
	  var styles = props.styles;
	  var serialized = serializeStyles([styles], undefined, reactExports.useContext(ThemeContext));
	  if (!isBrowser$2) {
	    var _ref;
	    var serializedNames = serialized.name;
	    var serializedStyles = serialized.styles;
	    var next = serialized.next;
	    while (next !== undefined) {
	      serializedNames += ' ' + next.name;
	      serializedStyles += next.styles;
	      next = next.next;
	    }
	    var shouldCache = cache.compat === true;
	    var rules = cache.insert("", {
	      name: serializedNames,
	      styles: serializedStyles
	    }, cache.sheet, shouldCache);
	    if (shouldCache) {
	      return null;
	    }
	    return /*#__PURE__*/reactExports.createElement("style", (_ref = {}, _ref["data-emotion"] = cache.key + "-global " + serializedNames, _ref.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref.nonce = cache.sheet.nonce, _ref));
	  } // yes, i know these hooks are used conditionally
	  // but it is based on a constant that will never change at runtime
	  // it's effectively like having two implementations and switching them out
	  // so it's not actually breaking anything

	  var sheetRef = reactExports.useRef();
	  useInsertionEffectWithLayoutFallback(function () {
	    var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675

	    var sheet = new cache.sheet.constructor({
	      key: key,
	      nonce: cache.sheet.nonce,
	      container: cache.sheet.container,
	      speedy: cache.sheet.isSpeedy
	    });
	    var rehydrating = false; // $FlowFixMe

	    var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");
	    if (cache.sheet.tags.length) {
	      sheet.before = cache.sheet.tags[0];
	    }
	    if (node !== null) {
	      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

	      node.setAttribute('data-emotion', key);
	      sheet.hydrate([node]);
	    }
	    sheetRef.current = [sheet, rehydrating];
	    return function () {
	      sheet.flush();
	    };
	  }, [cache]);
	  useInsertionEffectWithLayoutFallback(function () {
	    var sheetRefCurrent = sheetRef.current;
	    var sheet = sheetRefCurrent[0],
	      rehydrating = sheetRefCurrent[1];
	    if (rehydrating) {
	      sheetRefCurrent[1] = false;
	      return;
	    }
	    if (serialized.next !== undefined) {
	      // insert keyframes
	      insertStyles(cache, serialized.next, true);
	    }
	    if (sheet.tags.length) {
	      // if this doesn't exist then it will be null so the style element will be appended
	      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
	      sheet.before = element;
	      sheet.flush();
	    }
	    cache.insert("", serialized, sheet, false);
	  }, [cache, serialized.name]);
	  return null;
	});
	{
	  Global.displayName = 'EmotionGlobal';
	}
	function css() {
	  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	  return serializeStyles(args);
	}
	var keyframes = function keyframes() {
	  var insertable = css.apply(void 0, arguments);
	  var name = "animation-" + insertable.name; // $FlowFixMe

	  return {
	    name: name,
	    styles: "@keyframes " + name + "{" + insertable.styles + "}",
	    anim: 1,
	    toString: function toString() {
	      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
	    }
	  };
	};
	var classnames = function classnames(args) {
	  var len = args.length;
	  var i = 0;
	  var cls = '';
	  for (; i < len; i++) {
	    var arg = args[i];
	    if (arg == null) continue;
	    var toAdd = void 0;
	    switch (typeof arg) {
	      case 'boolean':
	        break;
	      case 'object':
	        {
	          if (Array.isArray(arg)) {
	            toAdd = classnames(arg);
	          } else {
	            if (arg.styles !== undefined && arg.name !== undefined) {
	              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');
	            }
	            toAdd = '';
	            for (var k in arg) {
	              if (arg[k] && k) {
	                toAdd && (toAdd += ' ');
	                toAdd += k;
	              }
	            }
	          }
	          break;
	        }
	      default:
	        {
	          toAdd = arg;
	        }
	    }
	    if (toAdd) {
	      cls && (cls += ' ');
	      cls += toAdd;
	    }
	  }
	  return cls;
	};
	function merge$1(registered, css, className) {
	  var registeredStyles = [];
	  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
	  if (registeredStyles.length < 2) {
	    return className;
	  }
	  return rawClassName + css(registeredStyles);
	}
	var Insertion$1 = function Insertion(_ref) {
	  var cache = _ref.cache,
	    serializedArr = _ref.serializedArr;
	  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
	    var rules = '';
	    for (var i = 0; i < serializedArr.length; i++) {
	      var res = insertStyles(cache, serializedArr[i], false);
	      if (!isBrowser$2 && res !== undefined) {
	        rules += res;
	      }
	    }
	    if (!isBrowser$2) {
	      return rules;
	    }
	  });
	  if (!isBrowser$2 && rules.length !== 0) {
	    var _ref2;
	    return /*#__PURE__*/reactExports.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedArr.map(function (serialized) {
	      return serialized.name;
	    }).join(' '), _ref2.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref2.nonce = cache.sheet.nonce, _ref2));
	  }
	  return null;
	};
	var ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {
	  var hasRendered = false;
	  var serializedArr = [];
	  var css = function css() {
	    if (hasRendered && "development" !== 'production') {
	      throw new Error('css can only be used during render');
	    }
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	    var serialized = serializeStyles(args, cache.registered);
	    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`

	    registerStyles(cache, serialized, false);
	    return cache.key + "-" + serialized.name;
	  };
	  var cx = function cx() {
	    if (hasRendered && "development" !== 'production') {
	      throw new Error('cx can only be used during render');
	    }
	    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }
	    return merge$1(cache.registered, css, classnames(args));
	  };
	  var content = {
	    css: css,
	    cx: cx,
	    theme: reactExports.useContext(ThemeContext)
	  };
	  var ele = props.children(content);
	  hasRendered = true;
	  return /*#__PURE__*/reactExports.createElement(reactExports.Fragment, null, /*#__PURE__*/reactExports.createElement(Insertion$1, {
	    cache: cache,
	    serializedArr: serializedArr
	  }), ele);
	});
	{
	  ClassNames.displayName = 'EmotionClassNames';
	}
	{
	  var isBrowser$1 = typeof document !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked

	  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';
	  if (isBrowser$1 && !isTestEnv) {
	    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later
	    var globalContext =
	    // $FlowIgnore
	    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef
	    : isBrowser$1 ? window : global;
	    var globalKey = "__EMOTION_REACT_" + pkg.version.split('.')[0] + "__";
	    if (globalContext[globalKey]) {
	      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');
	    }
	    globalContext[globalKey] = true;
	  }
	}

	var testOmitPropsOnStringTag = isPropValid;
	var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
	  return key !== 'theme';
	};
	var getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {
	  return typeof tag === 'string' &&
	  // 96 is one less than the char code
	  // for "a" so this is checking that
	  // it's a lowercase character
	  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
	};
	var composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {
	  var shouldForwardProp;
	  if (options) {
	    var optionsShouldForwardProp = options.shouldForwardProp;
	    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {
	      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
	    } : optionsShouldForwardProp;
	  }
	  if (typeof shouldForwardProp !== 'function' && isReal) {
	    shouldForwardProp = tag.__emotion_forwardProp;
	  }
	  return shouldForwardProp;
	};
	var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
	var isBrowser = typeof document !== 'undefined';
	var Insertion = function Insertion(_ref) {
	  var cache = _ref.cache,
	    serialized = _ref.serialized,
	    isStringTag = _ref.isStringTag;
	  registerStyles(cache, serialized, isStringTag);
	  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
	    return insertStyles(cache, serialized, isStringTag);
	  });
	  if (!isBrowser && rules !== undefined) {
	    var _ref2;
	    var serializedNames = serialized.name;
	    var next = serialized.next;
	    while (next !== undefined) {
	      serializedNames += ' ' + next.name;
	      next = next.next;
	    }
	    return /*#__PURE__*/reactExports.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref2.nonce = cache.sheet.nonce, _ref2));
	  }
	  return null;
	};
	var createStyled$2 = function createStyled(tag, options) {
	  {
	    if (tag === undefined) {
	      throw new Error('You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.');
	    }
	  }
	  var isReal = tag.__emotion_real === tag;
	  var baseTag = isReal && tag.__emotion_base || tag;
	  var identifierName;
	  var targetClassName;
	  if (options !== undefined) {
	    identifierName = options.label;
	    targetClassName = options.target;
	  }
	  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);
	  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);
	  var shouldUseAs = !defaultShouldForwardProp('as');
	  return function () {
	    var args = arguments;
	    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];
	    if (identifierName !== undefined) {
	      styles.push("label:" + identifierName + ";");
	    }
	    if (args[0] == null || args[0].raw === undefined) {
	      styles.push.apply(styles, args);
	    } else {
	      if (args[0][0] === undefined) {
	        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
	      }
	      styles.push(args[0][0]);
	      var len = args.length;
	      var i = 1;
	      for (; i < len; i++) {
	        if (args[0][i] === undefined) {
	          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
	        }
	        styles.push(args[i], args[0][i]);
	      }
	    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class

	    var Styled = withEmotionCache(function (props, cache, ref) {
	      var FinalTag = shouldUseAs && props.as || baseTag;
	      var className = '';
	      var classInterpolations = [];
	      var mergedProps = props;
	      if (props.theme == null) {
	        mergedProps = {};
	        for (var key in props) {
	          mergedProps[key] = props[key];
	        }
	        mergedProps.theme = reactExports.useContext(ThemeContext);
	      }
	      if (typeof props.className === 'string') {
	        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);
	      } else if (props.className != null) {
	        className = props.className + " ";
	      }
	      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);
	      className += cache.key + "-" + serialized.name;
	      if (targetClassName !== undefined) {
	        className += " " + targetClassName;
	      }
	      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
	      var newProps = {};
	      for (var _key in props) {
	        if (shouldUseAs && _key === 'as') continue;
	        if (
	        // $FlowFixMe
	        finalShouldForwardProp(_key)) {
	          newProps[_key] = props[_key];
	        }
	      }
	      newProps.className = className;
	      newProps.ref = ref;
	      return /*#__PURE__*/reactExports.createElement(reactExports.Fragment, null, /*#__PURE__*/reactExports.createElement(Insertion, {
	        cache: cache,
	        serialized: serialized,
	        isStringTag: typeof FinalTag === 'string'
	      }), /*#__PURE__*/reactExports.createElement(FinalTag, newProps));
	    });
	    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
	    Styled.defaultProps = tag.defaultProps;
	    Styled.__emotion_real = Styled;
	    Styled.__emotion_base = baseTag;
	    Styled.__emotion_styles = styles;
	    Styled.__emotion_forwardProp = shouldForwardProp;
	    Object.defineProperty(Styled, 'toString', {
	      value: function value() {
	        if (targetClassName === undefined && "development" !== 'production') {
	          return 'NO_COMPONENT_SELECTOR';
	        } // $FlowFixMe: coerce undefined to string

	        return "." + targetClassName;
	      }
	    });
	    Styled.withComponent = function (nextTag, nextOptions) {
	      return createStyled(nextTag, _extends$2({}, options, nextOptions, {
	        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
	      })).apply(void 0, styles);
	    };
	    return Styled;
	  };
	};

	var tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',
	// SVG
	'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
	var newStyled = createStyled$2.bind();
	tags.forEach(function (tagName) {
	  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type
	  newStyled[tagName] = newStyled(tagName);
	});

	var propTypes$2 = {exports: {}};

	var reactIs$2 = {exports: {}};

	var reactIs_development$2 = {};

	/** @license React v16.13.1
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactIs_development$1;

	function requireReactIs_development$1 () {
		if (hasRequiredReactIs_development$1) return reactIs_development$2;
		hasRequiredReactIs_development$1 = 1;

		{
		  (function () {

		    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		    // nor polyfill, then a plain number is used for performance.
		    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
		    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
		    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
		    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
		    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
		    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
		    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
		    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
		    // (unstable) APIs that have been removed. Can we remove the symbols?

		    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
		    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
		    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
		    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
		    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
		    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
		    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
		    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
		    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
		    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
		    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
		    function isValidElementType(type) {
		      return typeof type === 'string' || typeof type === 'function' ||
		      // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
		      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
		    }
		    function typeOf(object) {
		      if (typeof object === 'object' && object !== null) {
		        var $$typeof = object.$$typeof;
		        switch ($$typeof) {
		          case REACT_ELEMENT_TYPE:
		            var type = object.type;
		            switch (type) {
		              case REACT_ASYNC_MODE_TYPE:
		              case REACT_CONCURRENT_MODE_TYPE:
		              case REACT_FRAGMENT_TYPE:
		              case REACT_PROFILER_TYPE:
		              case REACT_STRICT_MODE_TYPE:
		              case REACT_SUSPENSE_TYPE:
		                return type;
		              default:
		                var $$typeofType = type && type.$$typeof;
		                switch ($$typeofType) {
		                  case REACT_CONTEXT_TYPE:
		                  case REACT_FORWARD_REF_TYPE:
		                  case REACT_LAZY_TYPE:
		                  case REACT_MEMO_TYPE:
		                  case REACT_PROVIDER_TYPE:
		                    return $$typeofType;
		                  default:
		                    return $$typeof;
		                }
		            }
		          case REACT_PORTAL_TYPE:
		            return $$typeof;
		        }
		      }
		      return undefined;
		    } // AsyncMode is deprecated along with isAsyncMode

		    var AsyncMode = REACT_ASYNC_MODE_TYPE;
		    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		    var ContextConsumer = REACT_CONTEXT_TYPE;
		    var ContextProvider = REACT_PROVIDER_TYPE;
		    var Element = REACT_ELEMENT_TYPE;
		    var ForwardRef = REACT_FORWARD_REF_TYPE;
		    var Fragment = REACT_FRAGMENT_TYPE;
		    var Lazy = REACT_LAZY_TYPE;
		    var Memo = REACT_MEMO_TYPE;
		    var Portal = REACT_PORTAL_TYPE;
		    var Profiler = REACT_PROFILER_TYPE;
		    var StrictMode = REACT_STRICT_MODE_TYPE;
		    var Suspense = REACT_SUSPENSE_TYPE;
		    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

		    function isAsyncMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
		          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
		        }
		      }
		      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
		    }
		    function isConcurrentMode(object) {
		      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		    }
		    function isContextConsumer(object) {
		      return typeOf(object) === REACT_CONTEXT_TYPE;
		    }
		    function isContextProvider(object) {
		      return typeOf(object) === REACT_PROVIDER_TYPE;
		    }
		    function isElement(object) {
		      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		    }
		    function isForwardRef(object) {
		      return typeOf(object) === REACT_FORWARD_REF_TYPE;
		    }
		    function isFragment(object) {
		      return typeOf(object) === REACT_FRAGMENT_TYPE;
		    }
		    function isLazy(object) {
		      return typeOf(object) === REACT_LAZY_TYPE;
		    }
		    function isMemo(object) {
		      return typeOf(object) === REACT_MEMO_TYPE;
		    }
		    function isPortal(object) {
		      return typeOf(object) === REACT_PORTAL_TYPE;
		    }
		    function isProfiler(object) {
		      return typeOf(object) === REACT_PROFILER_TYPE;
		    }
		    function isStrictMode(object) {
		      return typeOf(object) === REACT_STRICT_MODE_TYPE;
		    }
		    function isSuspense(object) {
		      return typeOf(object) === REACT_SUSPENSE_TYPE;
		    }
		    reactIs_development$2.AsyncMode = AsyncMode;
		    reactIs_development$2.ConcurrentMode = ConcurrentMode;
		    reactIs_development$2.ContextConsumer = ContextConsumer;
		    reactIs_development$2.ContextProvider = ContextProvider;
		    reactIs_development$2.Element = Element;
		    reactIs_development$2.ForwardRef = ForwardRef;
		    reactIs_development$2.Fragment = Fragment;
		    reactIs_development$2.Lazy = Lazy;
		    reactIs_development$2.Memo = Memo;
		    reactIs_development$2.Portal = Portal;
		    reactIs_development$2.Profiler = Profiler;
		    reactIs_development$2.StrictMode = StrictMode;
		    reactIs_development$2.Suspense = Suspense;
		    reactIs_development$2.isAsyncMode = isAsyncMode;
		    reactIs_development$2.isConcurrentMode = isConcurrentMode;
		    reactIs_development$2.isContextConsumer = isContextConsumer;
		    reactIs_development$2.isContextProvider = isContextProvider;
		    reactIs_development$2.isElement = isElement;
		    reactIs_development$2.isForwardRef = isForwardRef;
		    reactIs_development$2.isFragment = isFragment;
		    reactIs_development$2.isLazy = isLazy;
		    reactIs_development$2.isMemo = isMemo;
		    reactIs_development$2.isPortal = isPortal;
		    reactIs_development$2.isProfiler = isProfiler;
		    reactIs_development$2.isStrictMode = isStrictMode;
		    reactIs_development$2.isSuspense = isSuspense;
		    reactIs_development$2.isValidElementType = isValidElementType;
		    reactIs_development$2.typeOf = typeOf;
		  })();
		}
		return reactIs_development$2;
	}

	var hasRequiredReactIs;

	function requireReactIs () {
		if (hasRequiredReactIs) return reactIs$2.exports;
		hasRequiredReactIs = 1;

		{
		  reactIs$2.exports = requireReactIs_development$1();
		}
		return reactIs$2.exports;
	}

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	var objectAssign$1;
	var hasRequiredObjectAssign;

	function requireObjectAssign () {
		if (hasRequiredObjectAssign) return objectAssign$1;
		hasRequiredObjectAssign = 1;

		/* eslint-disable no-unused-vars */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;
		function toObject(val) {
		  if (val === null || val === undefined) {
		    throw new TypeError('Object.assign cannot be called with null or undefined');
		  }
		  return Object(val);
		}
		function shouldUseNative() {
		  try {
		    if (!Object.assign) {
		      return false;
		    }

		    // Detect buggy property enumeration order in older V8 versions.

		    // https://bugs.chromium.org/p/v8/issues/detail?id=4118
		    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
		    test1[5] = 'de';
		    if (Object.getOwnPropertyNames(test1)[0] === '5') {
		      return false;
		    }

		    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
		    var test2 = {};
		    for (var i = 0; i < 10; i++) {
		      test2['_' + String.fromCharCode(i)] = i;
		    }
		    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
		      return test2[n];
		    });
		    if (order2.join('') !== '0123456789') {
		      return false;
		    }

		    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
		    var test3 = {};
		    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
		      test3[letter] = letter;
		    });
		    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
		      return false;
		    }
		    return true;
		  } catch (err) {
		    // We don't expect any of the above to throw, but better to be safe.
		    return false;
		  }
		}
		objectAssign$1 = shouldUseNative() ? Object.assign : function (target, source) {
		  var from;
		  var to = toObject(target);
		  var symbols;
		  for (var s = 1; s < arguments.length; s++) {
		    from = Object(arguments[s]);
		    for (var key in from) {
		      if (hasOwnProperty.call(from, key)) {
		        to[key] = from[key];
		      }
		    }
		    if (getOwnPropertySymbols) {
		      symbols = getOwnPropertySymbols(from);
		      for (var i = 0; i < symbols.length; i++) {
		        if (propIsEnumerable.call(from, symbols[i])) {
		          to[symbols[i]] = from[symbols[i]];
		        }
		      }
		    }
		  }
		  return to;
		};
		return objectAssign$1;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var ReactPropTypesSecret_1$1;
	var hasRequiredReactPropTypesSecret;

	function requireReactPropTypesSecret () {
		if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1$1;
		hasRequiredReactPropTypesSecret = 1;

		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
		ReactPropTypesSecret_1$1 = ReactPropTypesSecret;
		return ReactPropTypesSecret_1$1;
	}

	var has$2;
	var hasRequiredHas;

	function requireHas () {
		if (hasRequiredHas) return has$2;
		hasRequiredHas = 1;
		has$2 = Function.call.bind(Object.prototype.hasOwnProperty);
		return has$2;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var checkPropTypes_1$1;
	var hasRequiredCheckPropTypes;

	function requireCheckPropTypes () {
		if (hasRequiredCheckPropTypes) return checkPropTypes_1$1;
		hasRequiredCheckPropTypes = 1;

		var printWarning = function () {};
		{
		  var ReactPropTypesSecret = requireReactPropTypesSecret();
		  var loggedTypeFailures = {};
		  var has = requireHas();
		  printWarning = function (text) {
		    var message = 'Warning: ' + text;
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {/**/}
		  };
		}

		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?Function} getStack Returns the component stack.
		 * @private
		 */
		function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
		  {
		    for (var typeSpecName in typeSpecs) {
		      if (has(typeSpecs, typeSpecName)) {
		        var error;
		        // Prop type validation may throw. In case they do, we don't want to
		        // fail the render phase where it didn't fail before. So we log it.
		        // After these have been cleaned up, we'll let them throw.
		        try {
		          // This is intentionally an invariant that gets caught. It's the same
		          // behavior as without this statement except with a better message.
		          if (typeof typeSpecs[typeSpecName] !== 'function') {
		            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
		            err.name = 'Invariant Violation';
		            throw err;
		          }
		          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		        } catch (ex) {
		          error = ex;
		        }
		        if (error && !(error instanceof Error)) {
		          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
		        }
		        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		          // Only monitor this failure once because there tends to be a lot of the
		          // same error.
		          loggedTypeFailures[error.message] = true;
		          var stack = getStack ? getStack() : '';
		          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
		        }
		      }
		    }
		  }
		}

		/**
		 * Resets warning cache when testing.
		 *
		 * @private
		 */
		checkPropTypes.resetWarningCache = function () {
		  {
		    loggedTypeFailures = {};
		  }
		};
		checkPropTypes_1$1 = checkPropTypes;
		return checkPropTypes_1$1;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var factoryWithTypeCheckers$1;
	var hasRequiredFactoryWithTypeCheckers;

	function requireFactoryWithTypeCheckers () {
		if (hasRequiredFactoryWithTypeCheckers) return factoryWithTypeCheckers$1;
		hasRequiredFactoryWithTypeCheckers = 1;

		var ReactIs = requireReactIs();
		var assign = requireObjectAssign();
		var ReactPropTypesSecret = requireReactPropTypesSecret();
		var has = requireHas();
		var checkPropTypes = requireCheckPropTypes();
		var printWarning = function () {};
		{
		  printWarning = function (text) {
		    var message = 'Warning: ' + text;
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };
		}
		function emptyFunctionThatReturnsNull() {
		  return null;
		}
		factoryWithTypeCheckers$1 = function (isValidElement, throwOnDirectAccess) {
		  /* global Symbol */
		  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

		  /**
		   * Returns the iterator method function contained on the iterable object.
		   *
		   * Be sure to invoke the function with the iterable as context:
		   *
		   *     var iteratorFn = getIteratorFn(myIterable);
		   *     if (iteratorFn) {
		   *       var iterator = iteratorFn.call(myIterable);
		   *       ...
		   *     }
		   *
		   * @param {?object} maybeIterable
		   * @return {?function}
		   */
		  function getIteratorFn(maybeIterable) {
		    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		    if (typeof iteratorFn === 'function') {
		      return iteratorFn;
		    }
		  }

		  /**
		   * Collection of methods that allow declaration and validation of props that are
		   * supplied to React components. Example usage:
		   *
		   *   var Props = require('ReactPropTypes');
		   *   var MyArticle = React.createClass({
		   *     propTypes: {
		   *       // An optional string prop named "description".
		   *       description: Props.string,
		   *
		   *       // A required enum prop named "category".
		   *       category: Props.oneOf(['News','Photos']).isRequired,
		   *
		   *       // A prop named "dialog" that requires an instance of Dialog.
		   *       dialog: Props.instanceOf(Dialog).isRequired
		   *     },
		   *     render: function() { ... }
		   *   });
		   *
		   * A more formal specification of how these methods are used:
		   *
		   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		   *   decl := ReactPropTypes.{type}(.isRequired)?
		   *
		   * Each and every declaration produces a function with the same signature. This
		   * allows the creation of custom validation functions. For example:
		   *
		   *  var MyLink = React.createClass({
		   *    propTypes: {
		   *      // An optional string or URI prop named "href".
		   *      href: function(props, propName, componentName) {
		   *        var propValue = props[propName];
		   *        if (propValue != null && typeof propValue !== 'string' &&
		   *            !(propValue instanceof URI)) {
		   *          return new Error(
		   *            'Expected a string or an URI for ' + propName + ' in ' +
		   *            componentName
		   *          );
		   *        }
		   *      }
		   *    },
		   *    render: function() {...}
		   *  });
		   *
		   * @internal
		   */

		  var ANONYMOUS = '<<anonymous>>';

		  // Important!
		  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
		  var ReactPropTypes = {
		    array: createPrimitiveTypeChecker('array'),
		    bigint: createPrimitiveTypeChecker('bigint'),
		    bool: createPrimitiveTypeChecker('boolean'),
		    func: createPrimitiveTypeChecker('function'),
		    number: createPrimitiveTypeChecker('number'),
		    object: createPrimitiveTypeChecker('object'),
		    string: createPrimitiveTypeChecker('string'),
		    symbol: createPrimitiveTypeChecker('symbol'),
		    any: createAnyTypeChecker(),
		    arrayOf: createArrayOfTypeChecker,
		    element: createElementTypeChecker(),
		    elementType: createElementTypeTypeChecker(),
		    instanceOf: createInstanceTypeChecker,
		    node: createNodeChecker(),
		    objectOf: createObjectOfTypeChecker,
		    oneOf: createEnumTypeChecker,
		    oneOfType: createUnionTypeChecker,
		    shape: createShapeTypeChecker,
		    exact: createStrictShapeTypeChecker
		  };

		  /**
		   * inlined Object.is polyfill to avoid requiring consumers ship their own
		   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		   */
		  /*eslint-disable no-self-compare*/
		  function is(x, y) {
		    // SameValue algorithm
		    if (x === y) {
		      // Steps 1-5, 7-10
		      // Steps 6.b-6.e: +0 != -0
		      return x !== 0 || 1 / x === 1 / y;
		    } else {
		      // Step 6.a: NaN == NaN
		      return x !== x && y !== y;
		    }
		  }
		  /*eslint-enable no-self-compare*/

		  /**
		   * We use an Error-like object for backward compatibility as people may call
		   * PropTypes directly and inspect their output. However, we don't use real
		   * Errors anymore. We don't inspect their stack anyway, and creating them
		   * is prohibitively expensive if they are created too often, such as what
		   * happens in oneOfType() for any type before the one that matched.
		   */
		  function PropTypeError(message, data) {
		    this.message = message;
		    this.data = data && typeof data === 'object' ? data : {};
		    this.stack = '';
		  }
		  // Make `instanceof Error` still work for returned errors.
		  PropTypeError.prototype = Error.prototype;
		  function createChainableTypeChecker(validate) {
		    {
		      var manualPropTypeCallCache = {};
		      var manualPropTypeWarningCount = 0;
		    }
		    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
		      componentName = componentName || ANONYMOUS;
		      propFullName = propFullName || propName;
		      if (secret !== ReactPropTypesSecret) {
		        if (throwOnDirectAccess) {
		          // New behavior only for users of `prop-types` package
		          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
		          err.name = 'Invariant Violation';
		          throw err;
		        } else if (typeof console !== 'undefined') {
		          // Old behavior for people using React.PropTypes
		          var cacheKey = componentName + ':' + propName;
		          if (!manualPropTypeCallCache[cacheKey] &&
		          // Avoid spamming the console because they are often not actionable except for lib authors
		          manualPropTypeWarningCount < 3) {
		            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
		            manualPropTypeCallCache[cacheKey] = true;
		            manualPropTypeWarningCount++;
		          }
		        }
		      }
		      if (props[propName] == null) {
		        if (isRequired) {
		          if (props[propName] === null) {
		            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
		          }
		          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
		        }
		        return null;
		      } else {
		        return validate(props, propName, componentName, location, propFullName);
		      }
		    }
		    var chainedCheckType = checkType.bind(null, false);
		    chainedCheckType.isRequired = checkType.bind(null, true);
		    return chainedCheckType;
		  }
		  function createPrimitiveTypeChecker(expectedType) {
		    function validate(props, propName, componentName, location, propFullName, secret) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== expectedType) {
		        // `propValue` being instance of, say, date/regexp, pass the 'object'
		        // check, but we can offer a more precise error message here rather than
		        // 'of type `object`'.
		        var preciseType = getPreciseType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
		          expectedType: expectedType
		        });
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createAnyTypeChecker() {
		    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
		  }
		  function createArrayOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
		      }
		      var propValue = props[propName];
		      if (!Array.isArray(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
		      }
		      for (var i = 0; i < propValue.length; i++) {
		        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
		        if (error instanceof Error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createElementTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!isValidElement(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createElementTypeTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!ReactIs.isValidElementType(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createInstanceTypeChecker(expectedClass) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!(props[propName] instanceof expectedClass)) {
		        var expectedClassName = expectedClass.name || ANONYMOUS;
		        var actualClassName = getClassName(props[propName]);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createEnumTypeChecker(expectedValues) {
		    if (!Array.isArray(expectedValues)) {
		      {
		        if (arguments.length > 1) {
		          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
		        } else {
		          printWarning('Invalid argument supplied to oneOf, expected an array.');
		        }
		      }
		      return emptyFunctionThatReturnsNull;
		    }
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      for (var i = 0; i < expectedValues.length; i++) {
		        if (is(propValue, expectedValues[i])) {
		          return null;
		        }
		      }
		      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
		        var type = getPreciseType(value);
		        if (type === 'symbol') {
		          return String(value);
		        }
		        return value;
		      });
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createObjectOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
		      }
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
		      }
		      for (var key in propValue) {
		        if (has(propValue, key)) {
		          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		          if (error instanceof Error) {
		            return error;
		          }
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createUnionTypeChecker(arrayOfTypeCheckers) {
		    if (!Array.isArray(arrayOfTypeCheckers)) {
		      printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') ;
		      return emptyFunctionThatReturnsNull;
		    }
		    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		      var checker = arrayOfTypeCheckers[i];
		      if (typeof checker !== 'function') {
		        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
		        return emptyFunctionThatReturnsNull;
		      }
		    }
		    function validate(props, propName, componentName, location, propFullName) {
		      var expectedTypes = [];
		      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		        var checker = arrayOfTypeCheckers[i];
		        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
		        if (checkerResult == null) {
		          return null;
		        }
		        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
		          expectedTypes.push(checkerResult.data.expectedType);
		        }
		      }
		      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createNodeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!isNode(props[propName])) {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function invalidValidatorError(componentName, location, propFullName, key, type) {
		    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
		  }
		  function createShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      for (var key in shapeTypes) {
		        var checker = shapeTypes[key];
		        if (typeof checker !== 'function') {
		          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createStrictShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      // We need to check all keys in case some are required but missing from props.
		      var allKeys = assign({}, props[propName], shapeTypes);
		      for (var key in allKeys) {
		        var checker = shapeTypes[key];
		        if (has(shapeTypes, key) && typeof checker !== 'function') {
		          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
		        }
		        if (!checker) {
		          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function isNode(propValue) {
		    switch (typeof propValue) {
		      case 'number':
		      case 'string':
		      case 'undefined':
		        return true;
		      case 'boolean':
		        return !propValue;
		      case 'object':
		        if (Array.isArray(propValue)) {
		          return propValue.every(isNode);
		        }
		        if (propValue === null || isValidElement(propValue)) {
		          return true;
		        }
		        var iteratorFn = getIteratorFn(propValue);
		        if (iteratorFn) {
		          var iterator = iteratorFn.call(propValue);
		          var step;
		          if (iteratorFn !== propValue.entries) {
		            while (!(step = iterator.next()).done) {
		              if (!isNode(step.value)) {
		                return false;
		              }
		            }
		          } else {
		            // Iterator will provide entry [k,v] tuples rather than values.
		            while (!(step = iterator.next()).done) {
		              var entry = step.value;
		              if (entry) {
		                if (!isNode(entry[1])) {
		                  return false;
		                }
		              }
		            }
		          }
		        } else {
		          return false;
		        }
		        return true;
		      default:
		        return false;
		    }
		  }
		  function isSymbol(propType, propValue) {
		    // Native Symbol.
		    if (propType === 'symbol') {
		      return true;
		    }

		    // falsy value can't be a Symbol
		    if (!propValue) {
		      return false;
		    }

		    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		    if (propValue['@@toStringTag'] === 'Symbol') {
		      return true;
		    }

		    // Fallback for non-spec compliant Symbols which are polyfilled.
		    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
		      return true;
		    }
		    return false;
		  }

		  // Equivalent of `typeof` but with special handling for array and regexp.
		  function getPropType(propValue) {
		    var propType = typeof propValue;
		    if (Array.isArray(propValue)) {
		      return 'array';
		    }
		    if (propValue instanceof RegExp) {
		      // Old webkits (at least until Android 4.0) return 'function' rather than
		      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
		      // passes PropTypes.object.
		      return 'object';
		    }
		    if (isSymbol(propType, propValue)) {
		      return 'symbol';
		    }
		    return propType;
		  }

		  // This handles more types than `getPropType`. Only used for error messages.
		  // See `createPrimitiveTypeChecker`.
		  function getPreciseType(propValue) {
		    if (typeof propValue === 'undefined' || propValue === null) {
		      return '' + propValue;
		    }
		    var propType = getPropType(propValue);
		    if (propType === 'object') {
		      if (propValue instanceof Date) {
		        return 'date';
		      } else if (propValue instanceof RegExp) {
		        return 'regexp';
		      }
		    }
		    return propType;
		  }

		  // Returns a string that is postfixed to a warning about an invalid type.
		  // For example, "undefined" or "of type array"
		  function getPostfixForTypeWarning(value) {
		    var type = getPreciseType(value);
		    switch (type) {
		      case 'array':
		      case 'object':
		        return 'an ' + type;
		      case 'boolean':
		      case 'date':
		      case 'regexp':
		        return 'a ' + type;
		      default:
		        return type;
		    }
		  }

		  // Returns class name of the object, if any.
		  function getClassName(propValue) {
		    if (!propValue.constructor || !propValue.constructor.name) {
		      return ANONYMOUS;
		    }
		    return propValue.constructor.name;
		  }
		  ReactPropTypes.checkPropTypes = checkPropTypes;
		  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
		  ReactPropTypes.PropTypes = ReactPropTypes;
		  return ReactPropTypes;
		};
		return factoryWithTypeCheckers$1;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	{
	  var ReactIs = requireReactIs();

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  propTypes$2.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
	}

	var propTypesExports = propTypes$2.exports;
	var PropTypes = /*@__PURE__*/getDefaultExportFromCjs(propTypesExports);

	var jsxRuntime = {exports: {}};

	var reactJsxRuntime_development = {};

	/**
	 * @license React
	 * react-jsx-runtime.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactJsxRuntime_development;

	function requireReactJsxRuntime_development () {
		if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;
		hasRequiredReactJsxRuntime_development = 1;

		{
		  (function () {

		    var React = reactExports;

		    // ATTENTION
		    // When adding new symbols to this file,
		    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
		    // The Symbol used to tag the ReactElement-like types.
		    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
		    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
		    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
		    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
		    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
		    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
		    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
		    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
		    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
		    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
		    var REACT_MEMO_TYPE = Symbol.for('react.memo');
		    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
		    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
		    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
		    var FAUX_ITERATOR_SYMBOL = '@@iterator';
		    function getIteratorFn(maybeIterable) {
		      if (maybeIterable === null || typeof maybeIterable !== 'object') {
		        return null;
		      }
		      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
		      if (typeof maybeIterator === 'function') {
		        return maybeIterator;
		      }
		      return null;
		    }
		    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
		    function error(format) {
		      {
		        {
		          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
		            args[_key2 - 1] = arguments[_key2];
		          }
		          printWarning('error', format, args);
		        }
		      }
		    }
		    function printWarning(level, format, args) {
		      // When changing this logic, you might want to also
		      // update consoleWithStackDev.www.js as well.
		      {
		        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
		        var stack = ReactDebugCurrentFrame.getStackAddendum();
		        if (stack !== '') {
		          format += '%s';
		          args = args.concat([stack]);
		        } // eslint-disable-next-line react-internal/safe-string-coercion

		        var argsWithFormat = args.map(function (item) {
		          return String(item);
		        }); // Careful: RN currently depends on this prefix

		        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
		        // breaks IE9: https://github.com/facebook/react/issues/13610
		        // eslint-disable-next-line react-internal/no-production-logging

		        Function.prototype.apply.call(console[level], console, argsWithFormat);
		      }
		    }

		    // -----------------------------------------------------------------------------

		    var enableScopeAPI = false; // Experimental Create Event Handle API.
		    var enableCacheElement = false;
		    var enableTransitionTracing = false; // No known bugs, but needs performance testing

		    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
		    // stuff. Intended to enable React core members to more easily debug scheduling
		    // issues in DEV builds.

		    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

		    var REACT_MODULE_REFERENCE;
		    {
		      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
		    }
		    function isValidElementType(type) {
		      if (typeof type === 'string' || typeof type === 'function') {
		        return true;
		      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).

		      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
		        return true;
		      }
		      if (typeof type === 'object' && type !== null) {
		        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||
		        // This needs to include all possible module reference object
		        // types supported by any Flight configuration anywhere since
		        // we don't know which Flight build this will end up being used
		        // with.
		        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
		          return true;
		        }
		      }
		      return false;
		    }
		    function getWrappedName(outerType, innerType, wrapperName) {
		      var displayName = outerType.displayName;
		      if (displayName) {
		        return displayName;
		      }
		      var functionName = innerType.displayName || innerType.name || '';
		      return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
		    } // Keep in sync with react-reconciler/getComponentNameFromFiber

		    function getContextName(type) {
		      return type.displayName || 'Context';
		    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.

		    function getComponentNameFromType(type) {
		      if (type == null) {
		        // Host root, text node or just invalid type.
		        return null;
		      }
		      {
		        if (typeof type.tag === 'number') {
		          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
		        }
		      }
		      if (typeof type === 'function') {
		        return type.displayName || type.name || null;
		      }
		      if (typeof type === 'string') {
		        return type;
		      }
		      switch (type) {
		        case REACT_FRAGMENT_TYPE:
		          return 'Fragment';
		        case REACT_PORTAL_TYPE:
		          return 'Portal';
		        case REACT_PROFILER_TYPE:
		          return 'Profiler';
		        case REACT_STRICT_MODE_TYPE:
		          return 'StrictMode';
		        case REACT_SUSPENSE_TYPE:
		          return 'Suspense';
		        case REACT_SUSPENSE_LIST_TYPE:
		          return 'SuspenseList';
		      }
		      if (typeof type === 'object') {
		        switch (type.$$typeof) {
		          case REACT_CONTEXT_TYPE:
		            var context = type;
		            return getContextName(context) + '.Consumer';
		          case REACT_PROVIDER_TYPE:
		            var provider = type;
		            return getContextName(provider._context) + '.Provider';
		          case REACT_FORWARD_REF_TYPE:
		            return getWrappedName(type, type.render, 'ForwardRef');
		          case REACT_MEMO_TYPE:
		            var outerName = type.displayName || null;
		            if (outerName !== null) {
		              return outerName;
		            }
		            return getComponentNameFromType(type.type) || 'Memo';
		          case REACT_LAZY_TYPE:
		            {
		              var lazyComponent = type;
		              var payload = lazyComponent._payload;
		              var init = lazyComponent._init;
		              try {
		                return getComponentNameFromType(init(payload));
		              } catch (x) {
		                return null;
		              }
		            }

		          // eslint-disable-next-line no-fallthrough
		        }
		      }
		      return null;
		    }
		    var assign = Object.assign;

		    // Helpers to patch console.logs to avoid logging during side-effect free
		    // replaying on render function. This currently only patches the object
		    // lazily which won't cover if the log function was extracted eagerly.
		    // We could also eagerly patch the method.
		    var disabledDepth = 0;
		    var prevLog;
		    var prevInfo;
		    var prevWarn;
		    var prevError;
		    var prevGroup;
		    var prevGroupCollapsed;
		    var prevGroupEnd;
		    function disabledLog() {}
		    disabledLog.__reactDisabledLog = true;
		    function disableLogs() {
		      {
		        if (disabledDepth === 0) {
		          /* eslint-disable react-internal/no-production-logging */
		          prevLog = console.log;
		          prevInfo = console.info;
		          prevWarn = console.warn;
		          prevError = console.error;
		          prevGroup = console.group;
		          prevGroupCollapsed = console.groupCollapsed;
		          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

		          var props = {
		            configurable: true,
		            enumerable: true,
		            value: disabledLog,
		            writable: true
		          }; // $FlowFixMe Flow thinks console is immutable.

		          Object.defineProperties(console, {
		            info: props,
		            log: props,
		            warn: props,
		            error: props,
		            group: props,
		            groupCollapsed: props,
		            groupEnd: props
		          });
		          /* eslint-enable react-internal/no-production-logging */
		        }
		        disabledDepth++;
		      }
		    }
		    function reenableLogs() {
		      {
		        disabledDepth--;
		        if (disabledDepth === 0) {
		          /* eslint-disable react-internal/no-production-logging */
		          var props = {
		            configurable: true,
		            enumerable: true,
		            writable: true
		          }; // $FlowFixMe Flow thinks console is immutable.

		          Object.defineProperties(console, {
		            log: assign({}, props, {
		              value: prevLog
		            }),
		            info: assign({}, props, {
		              value: prevInfo
		            }),
		            warn: assign({}, props, {
		              value: prevWarn
		            }),
		            error: assign({}, props, {
		              value: prevError
		            }),
		            group: assign({}, props, {
		              value: prevGroup
		            }),
		            groupCollapsed: assign({}, props, {
		              value: prevGroupCollapsed
		            }),
		            groupEnd: assign({}, props, {
		              value: prevGroupEnd
		            })
		          });
		          /* eslint-enable react-internal/no-production-logging */
		        }
		        if (disabledDepth < 0) {
		          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
		        }
		      }
		    }
		    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
		    var prefix;
		    function describeBuiltInComponentFrame(name, source, ownerFn) {
		      {
		        if (prefix === undefined) {
		          // Extract the VM specific prefix used by each line.
		          try {
		            throw Error();
		          } catch (x) {
		            var match = x.stack.trim().match(/\n( *(at )?)/);
		            prefix = match && match[1] || '';
		          }
		        } // We use the prefix to ensure our stacks line up with native stack frames.

		        return '\n' + prefix + name;
		      }
		    }
		    var reentry = false;
		    var componentFrameCache;
		    {
		      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
		      componentFrameCache = new PossiblyWeakMap();
		    }
		    function describeNativeComponentFrame(fn, construct) {
		      // If something asked for a stack inside a fake render, it should get ignored.
		      if (!fn || reentry) {
		        return '';
		      }
		      {
		        var frame = componentFrameCache.get(fn);
		        if (frame !== undefined) {
		          return frame;
		        }
		      }
		      var control;
		      reentry = true;
		      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

		      Error.prepareStackTrace = undefined;
		      var previousDispatcher;
		      {
		        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
		        // for warnings.

		        ReactCurrentDispatcher.current = null;
		        disableLogs();
		      }
		      try {
		        // This should throw.
		        if (construct) {
		          // Something should be setting the props in the constructor.
		          var Fake = function () {
		            throw Error();
		          }; // $FlowFixMe

		          Object.defineProperty(Fake.prototype, 'props', {
		            set: function () {
		              // We use a throwing setter instead of frozen or non-writable props
		              // because that won't throw in a non-strict mode function.
		              throw Error();
		            }
		          });
		          if (typeof Reflect === 'object' && Reflect.construct) {
		            // We construct a different control for this case to include any extra
		            // frames added by the construct call.
		            try {
		              Reflect.construct(Fake, []);
		            } catch (x) {
		              control = x;
		            }
		            Reflect.construct(fn, [], Fake);
		          } else {
		            try {
		              Fake.call();
		            } catch (x) {
		              control = x;
		            }
		            fn.call(Fake.prototype);
		          }
		        } else {
		          try {
		            throw Error();
		          } catch (x) {
		            control = x;
		          }
		          fn();
		        }
		      } catch (sample) {
		        // This is inlined manually because closure doesn't do it for us.
		        if (sample && control && typeof sample.stack === 'string') {
		          // This extracts the first frame from the sample that isn't also in the control.
		          // Skipping one frame that we assume is the frame that calls the two.
		          var sampleLines = sample.stack.split('\n');
		          var controlLines = control.stack.split('\n');
		          var s = sampleLines.length - 1;
		          var c = controlLines.length - 1;
		          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
		            // We expect at least one stack frame to be shared.
		            // Typically this will be the root most one. However, stack frames may be
		            // cut off due to maximum stack limits. In this case, one maybe cut off
		            // earlier than the other. We assume that the sample is longer or the same
		            // and there for cut off earlier. So we should find the root most frame in
		            // the sample somewhere in the control.
		            c--;
		          }
		          for (; s >= 1 && c >= 0; s--, c--) {
		            // Next we find the first one that isn't the same which should be the
		            // frame that called our sample function and the control.
		            if (sampleLines[s] !== controlLines[c]) {
		              // In V8, the first line is describing the message but other VMs don't.
		              // If we're about to return the first line, and the control is also on the same
		              // line, that's a pretty good indicator that our sample threw at same line as
		              // the control. I.e. before we entered the sample frame. So we ignore this result.
		              // This can happen if you passed a class to function component, or non-function.
		              if (s !== 1 || c !== 1) {
		                do {
		                  s--;
		                  c--; // We may still have similar intermediate frames from the construct call.
		                  // The next one that isn't the same should be our match though.

		                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
		                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
		                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
		                    // but we have a user-provided "displayName"
		                    // splice it in to make the stack more readable.

		                    if (fn.displayName && _frame.includes('<anonymous>')) {
		                      _frame = _frame.replace('<anonymous>', fn.displayName);
		                    }
		                    {
		                      if (typeof fn === 'function') {
		                        componentFrameCache.set(fn, _frame);
		                      }
		                    } // Return the line we found.

		                    return _frame;
		                  }
		                } while (s >= 1 && c >= 0);
		              }
		              break;
		            }
		          }
		        }
		      } finally {
		        reentry = false;
		        {
		          ReactCurrentDispatcher.current = previousDispatcher;
		          reenableLogs();
		        }
		        Error.prepareStackTrace = previousPrepareStackTrace;
		      } // Fallback to just using the name if we couldn't make it throw.

		      var name = fn ? fn.displayName || fn.name : '';
		      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
		      {
		        if (typeof fn === 'function') {
		          componentFrameCache.set(fn, syntheticFrame);
		        }
		      }
		      return syntheticFrame;
		    }
		    function describeFunctionComponentFrame(fn, source, ownerFn) {
		      {
		        return describeNativeComponentFrame(fn, false);
		      }
		    }
		    function shouldConstruct(Component) {
		      var prototype = Component.prototype;
		      return !!(prototype && prototype.isReactComponent);
		    }
		    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
		      if (type == null) {
		        return '';
		      }
		      if (typeof type === 'function') {
		        {
		          return describeNativeComponentFrame(type, shouldConstruct(type));
		        }
		      }
		      if (typeof type === 'string') {
		        return describeBuiltInComponentFrame(type);
		      }
		      switch (type) {
		        case REACT_SUSPENSE_TYPE:
		          return describeBuiltInComponentFrame('Suspense');
		        case REACT_SUSPENSE_LIST_TYPE:
		          return describeBuiltInComponentFrame('SuspenseList');
		      }
		      if (typeof type === 'object') {
		        switch (type.$$typeof) {
		          case REACT_FORWARD_REF_TYPE:
		            return describeFunctionComponentFrame(type.render);
		          case REACT_MEMO_TYPE:
		            // Memo may contain any component type so we recursively resolve it.
		            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
		          case REACT_LAZY_TYPE:
		            {
		              var lazyComponent = type;
		              var payload = lazyComponent._payload;
		              var init = lazyComponent._init;
		              try {
		                // Lazy may contain any component type so we recursively resolve it.
		                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
		              } catch (x) {}
		            }
		        }
		      }
		      return '';
		    }
		    var hasOwnProperty = Object.prototype.hasOwnProperty;
		    var loggedTypeFailures = {};
		    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
		    function setCurrentlyValidatingElement(element) {
		      {
		        if (element) {
		          var owner = element._owner;
		          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
		          ReactDebugCurrentFrame.setExtraStackFrame(stack);
		        } else {
		          ReactDebugCurrentFrame.setExtraStackFrame(null);
		        }
		      }
		    }
		    function checkPropTypes(typeSpecs, values, location, componentName, element) {
		      {
		        // $FlowFixMe This is okay but Flow doesn't know it.
		        var has = Function.call.bind(hasOwnProperty);
		        for (var typeSpecName in typeSpecs) {
		          if (has(typeSpecs, typeSpecName)) {
		            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
		            // fail the render phase where it didn't fail before. So we log it.
		            // After these have been cleaned up, we'll let them throw.

		            try {
		              // This is intentionally an invariant that gets caught. It's the same
		              // behavior as without this statement except with a better message.
		              if (typeof typeSpecs[typeSpecName] !== 'function') {
		                // eslint-disable-next-line react-internal/prod-error-codes
		                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
		                err.name = 'Invariant Violation';
		                throw err;
		              }
		              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
		            } catch (ex) {
		              error$1 = ex;
		            }
		            if (error$1 && !(error$1 instanceof Error)) {
		              setCurrentlyValidatingElement(element);
		              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
		              setCurrentlyValidatingElement(null);
		            }
		            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
		              // Only monitor this failure once because there tends to be a lot of the
		              // same error.
		              loggedTypeFailures[error$1.message] = true;
		              setCurrentlyValidatingElement(element);
		              error('Failed %s type: %s', location, error$1.message);
		              setCurrentlyValidatingElement(null);
		            }
		          }
		        }
		      }
		    }
		    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

		    function isArray(a) {
		      return isArrayImpl(a);
		    }

		    /*
		     * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
		     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
		     *
		     * The functions in this module will throw an easier-to-understand,
		     * easier-to-debug exception with a clear errors message message explaining the
		     * problem. (Instead of a confusing exception thrown inside the implementation
		     * of the `value` object).
		     */
		    // $FlowFixMe only called in DEV, so void return is not possible.
		    function typeName(value) {
		      {
		        // toStringTag is needed for namespaced types like Temporal.Instant
		        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
		        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
		        return type;
		      }
		    } // $FlowFixMe only called in DEV, so void return is not possible.

		    function willCoercionThrow(value) {
		      {
		        try {
		          testStringCoercion(value);
		          return false;
		        } catch (e) {
		          return true;
		        }
		      }
		    }
		    function testStringCoercion(value) {
		      // If you ended up here by following an exception call stack, here's what's
		      // happened: you supplied an object or symbol value to React (as a prop, key,
		      // DOM attribute, CSS property, string ref, etc.) and when React tried to
		      // coerce it to a string using `'' + value`, an exception was thrown.
		      //
		      // The most common types that will cause this exception are `Symbol` instances
		      // and Temporal objects like `Temporal.Instant`. But any object that has a
		      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
		      // exception. (Library authors do this to prevent users from using built-in
		      // numeric operators like `+` or comparison operators like `>=` because custom
		      // methods are needed to perform accurate arithmetic or comparison.)
		      //
		      // To fix the problem, coerce this object or symbol value to a string before
		      // passing it to React. The most reliable way is usually `String(value)`.
		      //
		      // To find which value is throwing, check the browser or debugger console.
		      // Before this exception was thrown, there should be `console.error` output
		      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
		      // problem and how that type was used: key, atrribute, input value prop, etc.
		      // In most cases, this console output also shows the component and its
		      // ancestor components where the exception happened.
		      //
		      // eslint-disable-next-line react-internal/safe-string-coercion
		      return '' + value;
		    }
		    function checkKeyStringCoercion(value) {
		      {
		        if (willCoercionThrow(value)) {
		          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
		          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
		        }
		      }
		    }
		    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
		    var RESERVED_PROPS = {
		      key: true,
		      ref: true,
		      __self: true,
		      __source: true
		    };
		    var specialPropKeyWarningShown;
		    var specialPropRefWarningShown;
		    var didWarnAboutStringRefs;
		    {
		      didWarnAboutStringRefs = {};
		    }
		    function hasValidRef(config) {
		      {
		        if (hasOwnProperty.call(config, 'ref')) {
		          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
		          if (getter && getter.isReactWarning) {
		            return false;
		          }
		        }
		      }
		      return config.ref !== undefined;
		    }
		    function hasValidKey(config) {
		      {
		        if (hasOwnProperty.call(config, 'key')) {
		          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
		          if (getter && getter.isReactWarning) {
		            return false;
		          }
		        }
		      }
		      return config.key !== undefined;
		    }
		    function warnIfStringRefCannotBeAutoConverted(config, self) {
		      {
		        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
		          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
		          if (!didWarnAboutStringRefs[componentName]) {
		            error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
		            didWarnAboutStringRefs[componentName] = true;
		          }
		        }
		      }
		    }
		    function defineKeyPropWarningGetter(props, displayName) {
		      {
		        var warnAboutAccessingKey = function () {
		          if (!specialPropKeyWarningShown) {
		            specialPropKeyWarningShown = true;
		            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
		          }
		        };
		        warnAboutAccessingKey.isReactWarning = true;
		        Object.defineProperty(props, 'key', {
		          get: warnAboutAccessingKey,
		          configurable: true
		        });
		      }
		    }
		    function defineRefPropWarningGetter(props, displayName) {
		      {
		        var warnAboutAccessingRef = function () {
		          if (!specialPropRefWarningShown) {
		            specialPropRefWarningShown = true;
		            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
		          }
		        };
		        warnAboutAccessingRef.isReactWarning = true;
		        Object.defineProperty(props, 'ref', {
		          get: warnAboutAccessingRef,
		          configurable: true
		        });
		      }
		    }
		    /**
		     * Factory method to create a new React element. This no longer adheres to
		     * the class pattern, so do not use new to call it. Also, instanceof check
		     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
		     * if something is a React Element.
		     *
		     * @param {*} type
		     * @param {*} props
		     * @param {*} key
		     * @param {string|object} ref
		     * @param {*} owner
		     * @param {*} self A *temporary* helper to detect places where `this` is
		     * different from the `owner` when React.createElement is called, so that we
		     * can warn. We want to get rid of owner and replace string `ref`s with arrow
		     * functions, and as long as `this` and owner are the same, there will be no
		     * change in behavior.
		     * @param {*} source An annotation object (added by a transpiler or otherwise)
		     * indicating filename, line number, and/or other information.
		     * @internal
		     */

		    var ReactElement = function (type, key, ref, self, source, owner, props) {
		      var element = {
		        // This tag allows us to uniquely identify this as a React Element
		        $$typeof: REACT_ELEMENT_TYPE,
		        // Built-in properties that belong on the element
		        type: type,
		        key: key,
		        ref: ref,
		        props: props,
		        // Record the component responsible for creating this element.
		        _owner: owner
		      };
		      {
		        // The validation flag is currently mutative. We put it on
		        // an external backing store so that we can freeze the whole object.
		        // This can be replaced with a WeakMap once they are implemented in
		        // commonly used development environments.
		        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
		        // the validation flag non-enumerable (where possible, which should
		        // include every environment we run tests in), so the test framework
		        // ignores it.

		        Object.defineProperty(element._store, 'validated', {
		          configurable: false,
		          enumerable: false,
		          writable: true,
		          value: false
		        }); // self and source are DEV only properties.

		        Object.defineProperty(element, '_self', {
		          configurable: false,
		          enumerable: false,
		          writable: false,
		          value: self
		        }); // Two elements created in two different places should be considered
		        // equal for testing purposes and therefore we hide it from enumeration.

		        Object.defineProperty(element, '_source', {
		          configurable: false,
		          enumerable: false,
		          writable: false,
		          value: source
		        });
		        if (Object.freeze) {
		          Object.freeze(element.props);
		          Object.freeze(element);
		        }
		      }
		      return element;
		    };
		    /**
		     * https://github.com/reactjs/rfcs/pull/107
		     * @param {*} type
		     * @param {object} props
		     * @param {string} key
		     */

		    function jsxDEV(type, config, maybeKey, source, self) {
		      {
		        var propName; // Reserved names are extracted

		        var props = {};
		        var key = null;
		        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
		        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
		        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
		        // but as an intermediary step, we will use jsxDEV for everything except
		        // <div {...props} key="Hi" />, because we aren't currently able to tell if
		        // key is explicitly declared to be undefined or not.

		        if (maybeKey !== undefined) {
		          {
		            checkKeyStringCoercion(maybeKey);
		          }
		          key = '' + maybeKey;
		        }
		        if (hasValidKey(config)) {
		          {
		            checkKeyStringCoercion(config.key);
		          }
		          key = '' + config.key;
		        }
		        if (hasValidRef(config)) {
		          ref = config.ref;
		          warnIfStringRefCannotBeAutoConverted(config, self);
		        } // Remaining properties are added to a new props object

		        for (propName in config) {
		          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
		            props[propName] = config[propName];
		          }
		        } // Resolve default props

		        if (type && type.defaultProps) {
		          var defaultProps = type.defaultProps;
		          for (propName in defaultProps) {
		            if (props[propName] === undefined) {
		              props[propName] = defaultProps[propName];
		            }
		          }
		        }
		        if (key || ref) {
		          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
		          if (key) {
		            defineKeyPropWarningGetter(props, displayName);
		          }
		          if (ref) {
		            defineRefPropWarningGetter(props, displayName);
		          }
		        }
		        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
		      }
		    }
		    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
		    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
		    function setCurrentlyValidatingElement$1(element) {
		      {
		        if (element) {
		          var owner = element._owner;
		          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
		          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
		        } else {
		          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
		        }
		      }
		    }
		    var propTypesMisspellWarningShown;
		    {
		      propTypesMisspellWarningShown = false;
		    }
		    /**
		     * Verifies the object is a ReactElement.
		     * See https://reactjs.org/docs/react-api.html#isvalidelement
		     * @param {?object} object
		     * @return {boolean} True if `object` is a ReactElement.
		     * @final
		     */

		    function isValidElement(object) {
		      {
		        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		      }
		    }
		    function getDeclarationErrorAddendum() {
		      {
		        if (ReactCurrentOwner$1.current) {
		          var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
		          if (name) {
		            return '\n\nCheck the render method of `' + name + '`.';
		          }
		        }
		        return '';
		      }
		    }
		    function getSourceInfoErrorAddendum(source) {
		      {
		        if (source !== undefined) {
		          var fileName = source.fileName.replace(/^.*[\\\/]/, '');
		          var lineNumber = source.lineNumber;
		          return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
		        }
		        return '';
		      }
		    }
		    /**
		     * Warn if there's no key explicitly set on dynamic arrays of children or
		     * object keys are not valid. This allows us to keep track of children between
		     * updates.
		     */

		    var ownerHasKeyUseWarning = {};
		    function getCurrentComponentErrorInfo(parentType) {
		      {
		        var info = getDeclarationErrorAddendum();
		        if (!info) {
		          var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
		          if (parentName) {
		            info = "\n\nCheck the top-level render call using <" + parentName + ">.";
		          }
		        }
		        return info;
		      }
		    }
		    /**
		     * Warn if the element doesn't have an explicit key assigned to it.
		     * This element is in an array. The array could grow and shrink or be
		     * reordered. All children that haven't already been validated are required to
		     * have a "key" property assigned to it. Error statuses are cached so a warning
		     * will only be shown once.
		     *
		     * @internal
		     * @param {ReactElement} element Element that requires a key.
		     * @param {*} parentType element's parent's type.
		     */

		    function validateExplicitKey(element, parentType) {
		      {
		        if (!element._store || element._store.validated || element.key != null) {
		          return;
		        }
		        element._store.validated = true;
		        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
		        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
		          return;
		        }
		        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
		        // property, it may be the creator of the child that's responsible for
		        // assigning it a key.

		        var childOwner = '';
		        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
		          // Give the component that originally created this child.
		          childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
		        }
		        setCurrentlyValidatingElement$1(element);
		        error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
		        setCurrentlyValidatingElement$1(null);
		      }
		    }
		    /**
		     * Ensure that every element either is passed in a static location, in an
		     * array with an explicit keys property defined, or in an object literal
		     * with valid key property.
		     *
		     * @internal
		     * @param {ReactNode} node Statically passed child of any type.
		     * @param {*} parentType node's parent's type.
		     */

		    function validateChildKeys(node, parentType) {
		      {
		        if (typeof node !== 'object') {
		          return;
		        }
		        if (isArray(node)) {
		          for (var i = 0; i < node.length; i++) {
		            var child = node[i];
		            if (isValidElement(child)) {
		              validateExplicitKey(child, parentType);
		            }
		          }
		        } else if (isValidElement(node)) {
		          // This element was passed in a valid location.
		          if (node._store) {
		            node._store.validated = true;
		          }
		        } else if (node) {
		          var iteratorFn = getIteratorFn(node);
		          if (typeof iteratorFn === 'function') {
		            // Entry iterators used to provide implicit keys,
		            // but now we print a separate warning for them later.
		            if (iteratorFn !== node.entries) {
		              var iterator = iteratorFn.call(node);
		              var step;
		              while (!(step = iterator.next()).done) {
		                if (isValidElement(step.value)) {
		                  validateExplicitKey(step.value, parentType);
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    /**
		     * Given an element, validate that its props follow the propTypes definition,
		     * provided by the type.
		     *
		     * @param {ReactElement} element
		     */

		    function validatePropTypes(element) {
		      {
		        var type = element.type;
		        if (type === null || type === undefined || typeof type === 'string') {
		          return;
		        }
		        var propTypes;
		        if (typeof type === 'function') {
		          propTypes = type.propTypes;
		        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
		        // Note: Memo only checks outer props here.
		        // Inner props are checked in the reconciler.
		        type.$$typeof === REACT_MEMO_TYPE)) {
		          propTypes = type.propTypes;
		        } else {
		          return;
		        }
		        if (propTypes) {
		          // Intentionally inside to avoid triggering lazy initializers:
		          var name = getComponentNameFromType(type);
		          checkPropTypes(propTypes, element.props, 'prop', name, element);
		        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
		          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

		          var _name = getComponentNameFromType(type);
		          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
		        }
		        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
		          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
		        }
		      }
		    }
		    /**
		     * Given a fragment, validate that it can only be provided with fragment props
		     * @param {ReactElement} fragment
		     */

		    function validateFragmentProps(fragment) {
		      {
		        var keys = Object.keys(fragment.props);
		        for (var i = 0; i < keys.length; i++) {
		          var key = keys[i];
		          if (key !== 'children' && key !== 'key') {
		            setCurrentlyValidatingElement$1(fragment);
		            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
		            setCurrentlyValidatingElement$1(null);
		            break;
		          }
		        }
		        if (fragment.ref !== null) {
		          setCurrentlyValidatingElement$1(fragment);
		          error('Invalid attribute `ref` supplied to `React.Fragment`.');
		          setCurrentlyValidatingElement$1(null);
		        }
		      }
		    }
		    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
		      {
		        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
		        // succeed and there will likely be errors in render.

		        if (!validType) {
		          var info = '';
		          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
		            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
		          }
		          var sourceInfo = getSourceInfoErrorAddendum(source);
		          if (sourceInfo) {
		            info += sourceInfo;
		          } else {
		            info += getDeclarationErrorAddendum();
		          }
		          var typeString;
		          if (type === null) {
		            typeString = 'null';
		          } else if (isArray(type)) {
		            typeString = 'array';
		          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
		            typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
		            info = ' Did you accidentally export a JSX literal instead of a component?';
		          } else {
		            typeString = typeof type;
		          }
		          error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
		        }
		        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
		        // TODO: Drop this when these are no longer allowed as the type argument.

		        if (element == null) {
		          return element;
		        } // Skip key warning if the type isn't valid since our key validation logic
		        // doesn't expect a non-string/function type and can throw confusing errors.
		        // We don't want exception behavior to differ between dev and prod.
		        // (Rendering will throw with a helpful message and as soon as the type is
		        // fixed, the key warnings will appear.)

		        if (validType) {
		          var children = props.children;
		          if (children !== undefined) {
		            if (isStaticChildren) {
		              if (isArray(children)) {
		                for (var i = 0; i < children.length; i++) {
		                  validateChildKeys(children[i], type);
		                }
		                if (Object.freeze) {
		                  Object.freeze(children);
		                }
		              } else {
		                error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
		              }
		            } else {
		              validateChildKeys(children, type);
		            }
		          }
		        }
		        if (type === REACT_FRAGMENT_TYPE) {
		          validateFragmentProps(element);
		        } else {
		          validatePropTypes(element);
		        }
		        return element;
		      }
		    } // These two functions exist to still get child warnings in dev
		    // even with the prod transform. This means that jsxDEV is purely
		    // opt-in behavior for better messages but that we won't stop
		    // giving you warnings if you use production apis.

		    function jsxWithValidationStatic(type, props, key) {
		      {
		        return jsxWithValidation(type, props, key, true);
		      }
		    }
		    function jsxWithValidationDynamic(type, props, key) {
		      {
		        return jsxWithValidation(type, props, key, false);
		      }
		    }
		    var jsx = jsxWithValidationDynamic; // we may want to special case jsxs internally to take advantage of static children.
		    // for now we can ship identical prod functions

		    var jsxs = jsxWithValidationStatic;
		    reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;
		    reactJsxRuntime_development.jsx = jsx;
		    reactJsxRuntime_development.jsxs = jsxs;
		  })();
		}
		return reactJsxRuntime_development;
	}

	{
	  jsxRuntime.exports = requireReactJsxRuntime_development();
	}

	var jsxRuntimeExports = jsxRuntime.exports;

	let cache;
	if (typeof document === 'object') {
	  cache = createCache({
	    key: 'css',
	    prepend: true
	  });
	}
	function StyledEngineProvider(props) {
	  const {
	    injectFirst,
	    children
	  } = props;
	  return injectFirst && cache ? /*#__PURE__*/jsxRuntimeExports.jsx(CacheProvider, {
	    value: cache,
	    children: children
	  }) : children;
	}
	StyledEngineProvider.propTypes = {
	  /**
	   * Your component tree.
	   */
	  children: PropTypes.node,
	  /**
	   * By default, the styles are injected last in the <head> element of the page.
	   * As a result, they gain more specificity than any other style sheet.
	   * If you want to override MUI's styles, set this prop.
	   */
	  injectFirst: PropTypes.bool
	} ;

	function isEmpty$2(obj) {
	  return obj === undefined || obj === null || Object.keys(obj).length === 0;
	}
	function GlobalStyles$2(props) {
	  const {
	    styles,
	    defaultTheme = {}
	  } = props;
	  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty$2(themeInput) ? defaultTheme : themeInput) : styles;
	  return /*#__PURE__*/jsxRuntimeExports.jsx(Global, {
	    styles: globalStyles
	  });
	}
	GlobalStyles$2.propTypes = {
	  defaultTheme: PropTypes.object,
	  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])
	} ;

	/**
	 * @mui/styled-engine v5.15.11
	 *
	 * @license MIT
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	function styled$2(tag, options) {
	  const stylesFactory = newStyled(tag, options);
	  {
	    return (...styles) => {
	      const component = typeof tag === 'string' ? `"${tag}"` : 'component';
	      if (styles.length === 0) {
	        console.error([`MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join('\n'));
	      } else if (styles.some(style => style === undefined)) {
	        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
	      }
	      return stylesFactory(...styles);
	    };
	  }
	}

	// eslint-disable-next-line @typescript-eslint/naming-convention
	const internal_processStyles = (tag, processor) => {
	  // Emotion attaches all the styles as `__emotion_styles`.
	  // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186
	  if (Array.isArray(tag.__emotion_styles)) {
	    tag.__emotion_styles = processor(tag.__emotion_styles);
	  }
	};

	var styledEngine = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': styled$2,
		internal_processStyles: internal_processStyles,
		ThemeContext: ThemeContext,
		keyframes: keyframes,
		css: css,
		StyledEngineProvider: StyledEngineProvider,
		GlobalStyles: GlobalStyles$2
	});

	// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js
	function isPlainObject(item) {
	  if (typeof item !== 'object' || item === null) {
	    return false;
	  }
	  const prototype = Object.getPrototypeOf(item);
	  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);
	}
	function deepClone(source) {
	  if (!isPlainObject(source)) {
	    return source;
	  }
	  const output = {};
	  Object.keys(source).forEach(key => {
	    output[key] = deepClone(source[key]);
	  });
	  return output;
	}
	function deepmerge$1(target, source, options = {
	  clone: true
	}) {
	  const output = options.clone ? _extends$2({}, target) : target;
	  if (isPlainObject(target) && isPlainObject(source)) {
	    Object.keys(source).forEach(key => {
	      // Avoid prototype pollution
	      if (key === '__proto__') {
	        return;
	      }
	      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
	        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
	        output[key] = deepmerge$1(target[key], source[key], options);
	      } else if (options.clone) {
	        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
	      } else {
	        output[key] = source[key];
	      }
	    });
	  }
	  return output;
	}

	var deepmerge = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': deepmerge$1,
		isPlainObject: isPlainObject
	});

	const _excluded$f = ["values", "unit", "step"];
	const sortBreakpointsValues = values => {
	  const breakpointsAsArray = Object.keys(values).map(key => ({
	    key,
	    val: values[key]
	  })) || [];
	  // Sort in ascending order
	  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);
	  return breakpointsAsArray.reduce((acc, obj) => {
	    return _extends$2({}, acc, {
	      [obj.key]: obj.val
	    });
	  }, {});
	};

	// Keep in mind that @media is inclusive by the CSS specification.
	function createBreakpoints(breakpoints) {
	  const {
	      // The breakpoint **start** at this value.
	      // For instance with the first breakpoint xs: [xs, sm).
	      values = {
	        xs: 0,
	        // phone
	        sm: 600,
	        // tablet
	        md: 900,
	        // small laptop
	        lg: 1200,
	        // desktop
	        xl: 1536 // large screen
	      },
	      unit = 'px',
	      step = 5
	    } = breakpoints,
	    other = _objectWithoutPropertiesLoose$1(breakpoints, _excluded$f);
	  const sortedValues = sortBreakpointsValues(values);
	  const keys = Object.keys(sortedValues);
	  function up(key) {
	    const value = typeof values[key] === 'number' ? values[key] : key;
	    return `@media (min-width:${value}${unit})`;
	  }
	  function down(key) {
	    const value = typeof values[key] === 'number' ? values[key] : key;
	    return `@media (max-width:${value - step / 100}${unit})`;
	  }
	  function between(start, end) {
	    const endIndex = keys.indexOf(end);
	    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;
	  }
	  function only(key) {
	    if (keys.indexOf(key) + 1 < keys.length) {
	      return between(key, keys[keys.indexOf(key) + 1]);
	    }
	    return up(key);
	  }
	  function not(key) {
	    // handle first and last key separately, for better readability
	    const keyIndex = keys.indexOf(key);
	    if (keyIndex === 0) {
	      return up(keys[1]);
	    }
	    if (keyIndex === keys.length - 1) {
	      return down(keys[keyIndex]);
	    }
	    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');
	  }
	  return _extends$2({
	    keys,
	    values: sortedValues,
	    up,
	    down,
	    between,
	    only,
	    not,
	    unit
	  }, other);
	}

	const shape = {
	  borderRadius: 4
	};
	var shape$1 = shape;

	const responsivePropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.object, PropTypes.array]) ;
	var responsivePropType$1 = responsivePropType;

	function merge(acc, item) {
	  if (!item) {
	    return acc;
	  }
	  return deepmerge$1(acc, item, {
	    clone: false // No need to clone deep, it's way faster.
	  });
	}

	// The breakpoint **start** at this value.
	// For instance with the first breakpoint xs: [xs, sm[.
	const values$1 = {
	  xs: 0,
	  // phone
	  sm: 600,
	  // tablet
	  md: 900,
	  // small laptop
	  lg: 1200,
	  // desktop
	  xl: 1536 // large screen
	};
	const defaultBreakpoints = {
	  // Sorted ASC by size. That's important.
	  // It can't be configured as it's used statically for propTypes.
	  keys: ['xs', 'sm', 'md', 'lg', 'xl'],
	  up: key => `@media (min-width:${values$1[key]}px)`
	};
	function handleBreakpoints(props, propValue, styleFromPropValue) {
	  const theme = props.theme || {};
	  if (Array.isArray(propValue)) {
	    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
	    return propValue.reduce((acc, item, index) => {
	      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
	      return acc;
	    }, {});
	  }
	  if (typeof propValue === 'object') {
	    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
	    return Object.keys(propValue).reduce((acc, breakpoint) => {
	      // key is breakpoint
	      if (Object.keys(themeBreakpoints.values || values$1).indexOf(breakpoint) !== -1) {
	        const mediaKey = themeBreakpoints.up(breakpoint);
	        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
	      } else {
	        const cssKey = breakpoint;
	        acc[cssKey] = propValue[cssKey];
	      }
	      return acc;
	    }, {});
	  }
	  const output = styleFromPropValue(propValue);
	  return output;
	}
	function createEmptyBreakpointObject(breakpointsInput = {}) {
	  var _breakpointsInput$key;
	  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
	    const breakpointStyleKey = breakpointsInput.up(key);
	    acc[breakpointStyleKey] = {};
	    return acc;
	  }, {});
	  return breakpointsInOrder || {};
	}
	function removeUnusedBreakpoints(breakpointKeys, style) {
	  return breakpointKeys.reduce((acc, key) => {
	    const breakpointOutput = acc[key];
	    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
	    if (isBreakpointUnused) {
	      delete acc[key];
	    }
	    return acc;
	  }, style);
	}

	// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
	//
	// A strict capitalization should uppercase the first letter of each word in the sentence.
	// We only handle the first word.
	function capitalize$1(string) {
	  if (typeof string !== 'string') {
	    throw new Error(`MUI: \`capitalize(string)\` expects a string argument.` );
	  }
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

	var capitalize = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': capitalize$1
	});

	function getPath(obj, path, checkVars = true) {
	  if (!path || typeof path !== 'string') {
	    return null;
	  }

	  // Check if CSS variables are used
	  if (obj && obj.vars && checkVars) {
	    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
	    if (val != null) {
	      return val;
	    }
	  }
	  return path.split('.').reduce((acc, item) => {
	    if (acc && acc[item] != null) {
	      return acc[item];
	    }
	    return null;
	  }, obj);
	}
	function getStyleValue$1(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
	  let value;
	  if (typeof themeMapping === 'function') {
	    value = themeMapping(propValueFinal);
	  } else if (Array.isArray(themeMapping)) {
	    value = themeMapping[propValueFinal] || userValue;
	  } else {
	    value = getPath(themeMapping, propValueFinal) || userValue;
	  }
	  if (transform) {
	    value = transform(value, userValue, themeMapping);
	  }
	  return value;
	}
	function style$1(options) {
	  const {
	    prop,
	    cssProperty = options.prop,
	    themeKey,
	    transform
	  } = options;

	  // false positive
	  // eslint-disable-next-line react/function-component-definition
	  const fn = props => {
	    if (props[prop] == null) {
	      return null;
	    }
	    const propValue = props[prop];
	    const theme = props.theme;
	    const themeMapping = getPath(theme, themeKey) || {};
	    const styleFromPropValue = propValueFinal => {
	      let value = getStyleValue$1(themeMapping, transform, propValueFinal);
	      if (propValueFinal === value && typeof propValueFinal === 'string') {
	        // Haven't found value
	        value = getStyleValue$1(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize$1(propValueFinal)}`, propValueFinal);
	      }
	      if (cssProperty === false) {
	        return value;
	      }
	      return {
	        [cssProperty]: value
	      };
	    };
	    return handleBreakpoints(props, propValue, styleFromPropValue);
	  };
	  fn.propTypes = {
	    [prop]: responsivePropType$1
	  } ;
	  fn.filterProps = [prop];
	  return fn;
	}

	function memoize(fn) {
	  const cache = {};
	  return arg => {
	    if (cache[arg] === undefined) {
	      cache[arg] = fn(arg);
	    }
	    return cache[arg];
	  };
	}

	const properties = {
	  m: 'margin',
	  p: 'padding'
	};
	const directions = {
	  t: 'Top',
	  r: 'Right',
	  b: 'Bottom',
	  l: 'Left',
	  x: ['Left', 'Right'],
	  y: ['Top', 'Bottom']
	};
	const aliases = {
	  marginX: 'mx',
	  marginY: 'my',
	  paddingX: 'px',
	  paddingY: 'py'
	};

	// memoize() impact:
	// From 300,000 ops/sec
	// To 350,000 ops/sec
	const getCssProperties = memoize(prop => {
	  // It's not a shorthand notation.
	  if (prop.length > 2) {
	    if (aliases[prop]) {
	      prop = aliases[prop];
	    } else {
	      return [prop];
	    }
	  }
	  const [a, b] = prop.split('');
	  const property = properties[a];
	  const direction = directions[b] || '';
	  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];
	});
	const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];
	const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];
	const spacingKeys = [...marginKeys, ...paddingKeys];
	function createUnaryUnit(theme, themeKey, defaultValue, propName) {
	  var _getPath;
	  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;
	  if (typeof themeSpacing === 'number') {
	    return abs => {
	      if (typeof abs === 'string') {
	        return abs;
	      }
	      {
	        if (typeof abs !== 'number') {
	          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);
	        }
	      }
	      return themeSpacing * abs;
	    };
	  }
	  if (Array.isArray(themeSpacing)) {
	    return abs => {
	      if (typeof abs === 'string') {
	        return abs;
	      }
	      {
	        if (!Number.isInteger(abs)) {
	          console.error([`MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`].join('\n'));
	        } else if (abs > themeSpacing.length - 1) {
	          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\n'));
	        }
	      }
	      return themeSpacing[abs];
	    };
	  }
	  if (typeof themeSpacing === 'function') {
	    return themeSpacing;
	  }
	  {
	    console.error([`MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\n'));
	  }
	  return () => undefined;
	}
	function createUnarySpacing(theme) {
	  return createUnaryUnit(theme, 'spacing', 8, 'spacing');
	}
	function getValue(transformer, propValue) {
	  if (typeof propValue === 'string' || propValue == null) {
	    return propValue;
	  }
	  const abs = Math.abs(propValue);
	  const transformed = transformer(abs);
	  if (propValue >= 0) {
	    return transformed;
	  }
	  if (typeof transformed === 'number') {
	    return -transformed;
	  }
	  return `-${transformed}`;
	}
	function getStyleFromPropValue(cssProperties, transformer) {
	  return propValue => cssProperties.reduce((acc, cssProperty) => {
	    acc[cssProperty] = getValue(transformer, propValue);
	    return acc;
	  }, {});
	}
	function resolveCssProperty(props, keys, prop, transformer) {
	  // Using a hash computation over an array iteration could be faster, but with only 28 items,
	  // it's doesn't worth the bundle size.
	  if (keys.indexOf(prop) === -1) {
	    return null;
	  }
	  const cssProperties = getCssProperties(prop);
	  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
	  const propValue = props[prop];
	  return handleBreakpoints(props, propValue, styleFromPropValue);
	}
	function style(props, keys) {
	  const transformer = createUnarySpacing(props.theme);
	  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});
	}
	function margin(props) {
	  return style(props, marginKeys);
	}
	margin.propTypes = marginKeys.reduce((obj, key) => {
	  obj[key] = responsivePropType$1;
	  return obj;
	}, {}) ;
	margin.filterProps = marginKeys;
	function padding(props) {
	  return style(props, paddingKeys);
	}
	padding.propTypes = paddingKeys.reduce((obj, key) => {
	  obj[key] = responsivePropType$1;
	  return obj;
	}, {}) ;
	padding.filterProps = paddingKeys;
	spacingKeys.reduce((obj, key) => {
	  obj[key] = responsivePropType$1;
	  return obj;
	}, {}) ;

	// The different signatures imply different meaning for their arguments that can't be expressed structurally.
	// We express the difference with variable names.

	function createSpacing(spacingInput = 8) {
	  // Already transformed.
	  if (spacingInput.mui) {
	    return spacingInput;
	  }

	  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
	  // Smaller components, such as icons, can align to a 4dp grid.
	  // https://m2.material.io/design/layout/understanding-layout.html
	  const transform = createUnarySpacing({
	    spacing: spacingInput
	  });
	  const spacing = (...argsInput) => {
	    {
	      if (!(argsInput.length <= 4)) {
	        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
	      }
	    }
	    const args = argsInput.length === 0 ? [1] : argsInput;
	    return args.map(argument => {
	      const output = transform(argument);
	      return typeof output === 'number' ? `${output}px` : output;
	    }).join(' ');
	  };
	  spacing.mui = true;
	  return spacing;
	}

	function compose(...styles) {
	  const handlers = styles.reduce((acc, style) => {
	    style.filterProps.forEach(prop => {
	      acc[prop] = style;
	    });
	    return acc;
	  }, {});

	  // false positive
	  // eslint-disable-next-line react/function-component-definition
	  const fn = props => {
	    return Object.keys(props).reduce((acc, prop) => {
	      if (handlers[prop]) {
	        return merge(acc, handlers[prop](props));
	      }
	      return acc;
	    }, {});
	  };
	  fn.propTypes = styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) ;
	  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);
	  return fn;
	}

	function borderTransform(value) {
	  if (typeof value !== 'number') {
	    return value;
	  }
	  return `${value}px solid`;
	}
	function createBorderStyle(prop, transform) {
	  return style$1({
	    prop,
	    themeKey: 'borders',
	    transform
	  });
	}
	const border = createBorderStyle('border', borderTransform);
	const borderTop = createBorderStyle('borderTop', borderTransform);
	const borderRight = createBorderStyle('borderRight', borderTransform);
	const borderBottom = createBorderStyle('borderBottom', borderTransform);
	const borderLeft = createBorderStyle('borderLeft', borderTransform);
	const borderColor = createBorderStyle('borderColor');
	const borderTopColor = createBorderStyle('borderTopColor');
	const borderRightColor = createBorderStyle('borderRightColor');
	const borderBottomColor = createBorderStyle('borderBottomColor');
	const borderLeftColor = createBorderStyle('borderLeftColor');
	const outline = createBorderStyle('outline', borderTransform);
	const outlineColor = createBorderStyle('outlineColor');

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const borderRadius = props => {
	  if (props.borderRadius !== undefined && props.borderRadius !== null) {
	    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');
	    const styleFromPropValue = propValue => ({
	      borderRadius: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);
	  }
	  return null;
	};
	borderRadius.propTypes = {
	  borderRadius: responsivePropType$1
	} ;
	borderRadius.filterProps = ['borderRadius'];
	compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, outline, outlineColor);

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const gap = props => {
	  if (props.gap !== undefined && props.gap !== null) {
	    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');
	    const styleFromPropValue = propValue => ({
	      gap: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.gap, styleFromPropValue);
	  }
	  return null;
	};
	gap.propTypes = {
	  gap: responsivePropType$1
	} ;
	gap.filterProps = ['gap'];

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const columnGap = props => {
	  if (props.columnGap !== undefined && props.columnGap !== null) {
	    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');
	    const styleFromPropValue = propValue => ({
	      columnGap: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.columnGap, styleFromPropValue);
	  }
	  return null;
	};
	columnGap.propTypes = {
	  columnGap: responsivePropType$1
	} ;
	columnGap.filterProps = ['columnGap'];

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const rowGap = props => {
	  if (props.rowGap !== undefined && props.rowGap !== null) {
	    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');
	    const styleFromPropValue = propValue => ({
	      rowGap: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.rowGap, styleFromPropValue);
	  }
	  return null;
	};
	rowGap.propTypes = {
	  rowGap: responsivePropType$1
	} ;
	rowGap.filterProps = ['rowGap'];
	const gridColumn = style$1({
	  prop: 'gridColumn'
	});
	const gridRow = style$1({
	  prop: 'gridRow'
	});
	const gridAutoFlow = style$1({
	  prop: 'gridAutoFlow'
	});
	const gridAutoColumns = style$1({
	  prop: 'gridAutoColumns'
	});
	const gridAutoRows = style$1({
	  prop: 'gridAutoRows'
	});
	const gridTemplateColumns = style$1({
	  prop: 'gridTemplateColumns'
	});
	const gridTemplateRows = style$1({
	  prop: 'gridTemplateRows'
	});
	const gridTemplateAreas = style$1({
	  prop: 'gridTemplateAreas'
	});
	const gridArea = style$1({
	  prop: 'gridArea'
	});
	compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);

	function paletteTransform(value, userValue) {
	  if (userValue === 'grey') {
	    return userValue;
	  }
	  return value;
	}
	const color = style$1({
	  prop: 'color',
	  themeKey: 'palette',
	  transform: paletteTransform
	});
	const bgcolor = style$1({
	  prop: 'bgcolor',
	  cssProperty: 'backgroundColor',
	  themeKey: 'palette',
	  transform: paletteTransform
	});
	const backgroundColor = style$1({
	  prop: 'backgroundColor',
	  themeKey: 'palette',
	  transform: paletteTransform
	});
	compose(color, bgcolor, backgroundColor);

	function sizingTransform(value) {
	  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
	}
	const width = style$1({
	  prop: 'width',
	  transform: sizingTransform
	});
	const maxWidth = props => {
	  if (props.maxWidth !== undefined && props.maxWidth !== null) {
	    const styleFromPropValue = propValue => {
	      var _props$theme, _props$theme2;
	      const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || values$1[propValue];
	      if (!breakpoint) {
	        return {
	          maxWidth: sizingTransform(propValue)
	        };
	      }
	      if (((_props$theme2 = props.theme) == null || (_props$theme2 = _props$theme2.breakpoints) == null ? void 0 : _props$theme2.unit) !== 'px') {
	        return {
	          maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`
	        };
	      }
	      return {
	        maxWidth: breakpoint
	      };
	    };
	    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);
	  }
	  return null;
	};
	maxWidth.filterProps = ['maxWidth'];
	const minWidth = style$1({
	  prop: 'minWidth',
	  transform: sizingTransform
	});
	const height = style$1({
	  prop: 'height',
	  transform: sizingTransform
	});
	const maxHeight = style$1({
	  prop: 'maxHeight',
	  transform: sizingTransform
	});
	const minHeight = style$1({
	  prop: 'minHeight',
	  transform: sizingTransform
	});
	style$1({
	  prop: 'size',
	  cssProperty: 'width',
	  transform: sizingTransform
	});
	style$1({
	  prop: 'size',
	  cssProperty: 'height',
	  transform: sizingTransform
	});
	const boxSizing = style$1({
	  prop: 'boxSizing'
	});
	compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);

	const defaultSxConfig = {
	  // borders
	  border: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderTop: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderRight: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderBottom: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderLeft: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderColor: {
	    themeKey: 'palette'
	  },
	  borderTopColor: {
	    themeKey: 'palette'
	  },
	  borderRightColor: {
	    themeKey: 'palette'
	  },
	  borderBottomColor: {
	    themeKey: 'palette'
	  },
	  borderLeftColor: {
	    themeKey: 'palette'
	  },
	  outline: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  outlineColor: {
	    themeKey: 'palette'
	  },
	  borderRadius: {
	    themeKey: 'shape.borderRadius',
	    style: borderRadius
	  },
	  // palette
	  color: {
	    themeKey: 'palette',
	    transform: paletteTransform
	  },
	  bgcolor: {
	    themeKey: 'palette',
	    cssProperty: 'backgroundColor',
	    transform: paletteTransform
	  },
	  backgroundColor: {
	    themeKey: 'palette',
	    transform: paletteTransform
	  },
	  // spacing
	  p: {
	    style: padding
	  },
	  pt: {
	    style: padding
	  },
	  pr: {
	    style: padding
	  },
	  pb: {
	    style: padding
	  },
	  pl: {
	    style: padding
	  },
	  px: {
	    style: padding
	  },
	  py: {
	    style: padding
	  },
	  padding: {
	    style: padding
	  },
	  paddingTop: {
	    style: padding
	  },
	  paddingRight: {
	    style: padding
	  },
	  paddingBottom: {
	    style: padding
	  },
	  paddingLeft: {
	    style: padding
	  },
	  paddingX: {
	    style: padding
	  },
	  paddingY: {
	    style: padding
	  },
	  paddingInline: {
	    style: padding
	  },
	  paddingInlineStart: {
	    style: padding
	  },
	  paddingInlineEnd: {
	    style: padding
	  },
	  paddingBlock: {
	    style: padding
	  },
	  paddingBlockStart: {
	    style: padding
	  },
	  paddingBlockEnd: {
	    style: padding
	  },
	  m: {
	    style: margin
	  },
	  mt: {
	    style: margin
	  },
	  mr: {
	    style: margin
	  },
	  mb: {
	    style: margin
	  },
	  ml: {
	    style: margin
	  },
	  mx: {
	    style: margin
	  },
	  my: {
	    style: margin
	  },
	  margin: {
	    style: margin
	  },
	  marginTop: {
	    style: margin
	  },
	  marginRight: {
	    style: margin
	  },
	  marginBottom: {
	    style: margin
	  },
	  marginLeft: {
	    style: margin
	  },
	  marginX: {
	    style: margin
	  },
	  marginY: {
	    style: margin
	  },
	  marginInline: {
	    style: margin
	  },
	  marginInlineStart: {
	    style: margin
	  },
	  marginInlineEnd: {
	    style: margin
	  },
	  marginBlock: {
	    style: margin
	  },
	  marginBlockStart: {
	    style: margin
	  },
	  marginBlockEnd: {
	    style: margin
	  },
	  // display
	  displayPrint: {
	    cssProperty: false,
	    transform: value => ({
	      '@media print': {
	        display: value
	      }
	    })
	  },
	  display: {},
	  overflow: {},
	  textOverflow: {},
	  visibility: {},
	  whiteSpace: {},
	  // flexbox
	  flexBasis: {},
	  flexDirection: {},
	  flexWrap: {},
	  justifyContent: {},
	  alignItems: {},
	  alignContent: {},
	  order: {},
	  flex: {},
	  flexGrow: {},
	  flexShrink: {},
	  alignSelf: {},
	  justifyItems: {},
	  justifySelf: {},
	  // grid
	  gap: {
	    style: gap
	  },
	  rowGap: {
	    style: rowGap
	  },
	  columnGap: {
	    style: columnGap
	  },
	  gridColumn: {},
	  gridRow: {},
	  gridAutoFlow: {},
	  gridAutoColumns: {},
	  gridAutoRows: {},
	  gridTemplateColumns: {},
	  gridTemplateRows: {},
	  gridTemplateAreas: {},
	  gridArea: {},
	  // positions
	  position: {},
	  zIndex: {
	    themeKey: 'zIndex'
	  },
	  top: {},
	  right: {},
	  bottom: {},
	  left: {},
	  // shadows
	  boxShadow: {
	    themeKey: 'shadows'
	  },
	  // sizing
	  width: {
	    transform: sizingTransform
	  },
	  maxWidth: {
	    style: maxWidth
	  },
	  minWidth: {
	    transform: sizingTransform
	  },
	  height: {
	    transform: sizingTransform
	  },
	  maxHeight: {
	    transform: sizingTransform
	  },
	  minHeight: {
	    transform: sizingTransform
	  },
	  boxSizing: {},
	  // typography
	  fontFamily: {
	    themeKey: 'typography'
	  },
	  fontSize: {
	    themeKey: 'typography'
	  },
	  fontStyle: {
	    themeKey: 'typography'
	  },
	  fontWeight: {
	    themeKey: 'typography'
	  },
	  letterSpacing: {},
	  textTransform: {},
	  lineHeight: {},
	  textAlign: {},
	  typography: {
	    cssProperty: false,
	    themeKey: 'typography'
	  }
	};
	var defaultSxConfig$1 = defaultSxConfig;

	function objectsHaveSameKeys(...objects) {
	  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
	  const union = new Set(allKeys);
	  return objects.every(object => union.size === Object.keys(object).length);
	}
	function callIfFn(maybeFn, arg) {
	  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
	}

	// eslint-disable-next-line @typescript-eslint/naming-convention
	function unstable_createStyleFunctionSx() {
	  function getThemeValue(prop, val, theme, config) {
	    const props = {
	      [prop]: val,
	      theme
	    };
	    const options = config[prop];
	    if (!options) {
	      return {
	        [prop]: val
	      };
	    }
	    const {
	      cssProperty = prop,
	      themeKey,
	      transform,
	      style
	    } = options;
	    if (val == null) {
	      return null;
	    }

	    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123
	    if (themeKey === 'typography' && val === 'inherit') {
	      return {
	        [prop]: val
	      };
	    }
	    const themeMapping = getPath(theme, themeKey) || {};
	    if (style) {
	      return style(props);
	    }
	    const styleFromPropValue = propValueFinal => {
	      let value = getStyleValue$1(themeMapping, transform, propValueFinal);
	      if (propValueFinal === value && typeof propValueFinal === 'string') {
	        // Haven't found value
	        value = getStyleValue$1(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize$1(propValueFinal)}`, propValueFinal);
	      }
	      if (cssProperty === false) {
	        return value;
	      }
	      return {
	        [cssProperty]: value
	      };
	    };
	    return handleBreakpoints(props, val, styleFromPropValue);
	  }
	  function styleFunctionSx(props) {
	    var _theme$unstable_sxCon;
	    const {
	      sx,
	      theme = {}
	    } = props || {};
	    if (!sx) {
	      return null; // Emotion & styled-components will neglect null
	    }
	    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig$1;

	    /*
	     * Receive `sxInput` as object or callback
	     * and then recursively check keys & values to create media query object styles.
	     * (the result will be used in `styled`)
	     */
	    function traverse(sxInput) {
	      let sxObject = sxInput;
	      if (typeof sxInput === 'function') {
	        sxObject = sxInput(theme);
	      } else if (typeof sxInput !== 'object') {
	        // value
	        return sxInput;
	      }
	      if (!sxObject) {
	        return null;
	      }
	      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);
	      const breakpointsKeys = Object.keys(emptyBreakpoints);
	      let css = emptyBreakpoints;
	      Object.keys(sxObject).forEach(styleKey => {
	        const value = callIfFn(sxObject[styleKey], theme);
	        if (value !== null && value !== undefined) {
	          if (typeof value === 'object') {
	            if (config[styleKey]) {
	              css = merge(css, getThemeValue(styleKey, value, theme, config));
	            } else {
	              const breakpointsValues = handleBreakpoints({
	                theme
	              }, value, x => ({
	                [styleKey]: x
	              }));
	              if (objectsHaveSameKeys(breakpointsValues, value)) {
	                css[styleKey] = styleFunctionSx({
	                  sx: value,
	                  theme
	                });
	              } else {
	                css = merge(css, breakpointsValues);
	              }
	            }
	          } else {
	            css = merge(css, getThemeValue(styleKey, value, theme, config));
	          }
	        }
	      });
	      return removeUnusedBreakpoints(breakpointsKeys, css);
	    }
	    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
	  }
	  return styleFunctionSx;
	}
	const styleFunctionSx$1 = unstable_createStyleFunctionSx();
	styleFunctionSx$1.filterProps = ['sx'];
	var styleFunctionSx$2 = styleFunctionSx$1;

	/**
	 * A universal utility to style components with multiple color modes. Always use it from the theme object.
	 * It works with:
	 *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)
	 *  - [CSS theme variables](https://mui.com/material-ui/experimental-api/css-theme-variables/overview/)
	 *  - Zero-runtime engine
	 *
	 * Tips: Use an array over object spread and place `theme.applyStyles()` last.
	 *
	 * ✅ [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]
	 *
	 * 🚫 { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}
	 *
	 * @example
	 * 1. using with `styled`:
	 * ```jsx
	 *   const Component = styled('div')(({ theme }) => [
	 *     { background: '#e5e5e5' },
	 *     theme.applyStyles('dark', {
	 *       background: '#1c1c1c',
	 *       color: '#fff',
	 *     }),
	 *   ]);
	 * ```
	 *
	 * @example
	 * 2. using with `sx` prop:
	 * ```jsx
	 *   <Box sx={theme => [
	 *     { background: '#e5e5e5' },
	 *     theme.applyStyles('dark', {
	 *        background: '#1c1c1c',
	 *        color: '#fff',
	 *      }),
	 *     ]}
	 *   />
	 * ```
	 *
	 * @example
	 * 3. theming a component:
	 * ```jsx
	 *   extendTheme({
	 *     components: {
	 *       MuiButton: {
	 *         styleOverrides: {
	 *           root: ({ theme }) => [
	 *             { background: '#e5e5e5' },
	 *             theme.applyStyles('dark', {
	 *               background: '#1c1c1c',
	 *               color: '#fff',
	 *             }),
	 *           ],
	 *         },
	 *       }
	 *     }
	 *   })
	 *```
	 */
	function applyStyles(key, styles) {
	  // @ts-expect-error this is 'any' type
	  const theme = this;
	  if (theme.vars && typeof theme.getColorSchemeSelector === 'function') {
	    // If CssVarsProvider is used as a provider,
	    // returns '* :where([data-mui-color-scheme="light|dark"]) &'
	    const selector = theme.getColorSchemeSelector(key).replace(/(\[[^\]]+\])/, '*:where($1)');
	    return {
	      [selector]: styles
	    };
	  }
	  if (theme.palette.mode === key) {
	    return styles;
	  }
	  return {};
	}

	const _excluded$e = ["breakpoints", "palette", "spacing", "shape"];
	function createTheme$2(options = {}, ...args) {
	  const {
	      breakpoints: breakpointsInput = {},
	      palette: paletteInput = {},
	      spacing: spacingInput,
	      shape: shapeInput = {}
	    } = options,
	    other = _objectWithoutPropertiesLoose$1(options, _excluded$e);
	  const breakpoints = createBreakpoints(breakpointsInput);
	  const spacing = createSpacing(spacingInput);
	  let muiTheme = deepmerge$1({
	    breakpoints,
	    direction: 'ltr',
	    components: {},
	    // Inject component definitions.
	    palette: _extends$2({
	      mode: 'light'
	    }, paletteInput),
	    spacing,
	    shape: _extends$2({}, shape$1, shapeInput)
	  }, other);
	  muiTheme.applyStyles = applyStyles;
	  muiTheme = args.reduce((acc, argument) => deepmerge$1(acc, argument), muiTheme);
	  muiTheme.unstable_sxConfig = _extends$2({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
	  muiTheme.unstable_sx = function sx(props) {
	    return styleFunctionSx$2({
	      sx: props,
	      theme: this
	    });
	  };
	  return muiTheme;
	}

	var createTheme$1 = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': createTheme$2,
		private_createBreakpoints: createBreakpoints,
		unstable_applyStyles: applyStyles
	});

	function isObjectEmpty(obj) {
	  return Object.keys(obj).length === 0;
	}
	function useTheme$1(defaultTheme = null) {
	  const contextTheme = reactExports.useContext(ThemeContext);
	  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
	}

	const systemDefaultTheme$1 = createTheme$2();
	function useTheme(defaultTheme = systemDefaultTheme$1) {
	  return useTheme$1(defaultTheme);
	}

	function GlobalStyles$1({
	  styles,
	  themeId,
	  defaultTheme = {}
	}) {
	  const upperTheme = useTheme(defaultTheme);
	  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;
	  return /*#__PURE__*/jsxRuntimeExports.jsx(GlobalStyles$2, {
	    styles: globalStyles
	  });
	}
	GlobalStyles$1.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * @ignore
	   */
	  defaultTheme: PropTypes.object,
	  /**
	   * @ignore
	   */
	  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),
	  /**
	   * @ignore
	   */
	  themeId: PropTypes.string
	} ;

	const _excluded$d = ["sx"];
	const splitProps = props => {
	  var _props$theme$unstable, _props$theme;
	  const result = {
	    systemProps: {},
	    otherProps: {}
	  };
	  const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig$1;
	  Object.keys(props).forEach(prop => {
	    if (config[prop]) {
	      result.systemProps[prop] = props[prop];
	    } else {
	      result.otherProps[prop] = props[prop];
	    }
	  });
	  return result;
	};
	function extendSxProp(props) {
	  const {
	      sx: inSx
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$d);
	  const {
	    systemProps,
	    otherProps
	  } = splitProps(other);
	  let finalSx;
	  if (Array.isArray(inSx)) {
	    finalSx = [systemProps, ...inSx];
	  } else if (typeof inSx === 'function') {
	    finalSx = (...args) => {
	      const result = inSx(...args);
	      if (!isPlainObject(result)) {
	        return systemProps;
	      }
	      return _extends$2({}, systemProps, result);
	    };
	  } else {
	    finalSx = _extends$2({}, systemProps, inSx);
	  }
	  return _extends$2({}, otherProps, {
	    sx: finalSx
	  });
	}

	var styleFunctionSx = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': styleFunctionSx$2,
		unstable_createStyleFunctionSx: unstable_createStyleFunctionSx,
		extendSxProp: extendSxProp,
		unstable_defaultSxConfig: defaultSxConfig$1
	});

	const defaultGenerator = componentName => componentName;
	const createClassNameGenerator = () => {
	  let generate = defaultGenerator;
	  return {
	    configure(generator) {
	      generate = generator;
	    },
	    generate(componentName) {
	      return generate(componentName);
	    },
	    reset() {
	      generate = defaultGenerator;
	    }
	  };
	};
	const ClassNameGenerator = createClassNameGenerator();
	var ClassNameGenerator$1 = ClassNameGenerator;

	function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}

	const _excluded$c = ["className", "component"];
	function createBox(options = {}) {
	  const {
	    themeId,
	    defaultTheme,
	    defaultClassName = 'MuiBox-root',
	    generateClassName
	  } = options;
	  const BoxRoot = styled$2('div', {
	    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'
	  })(styleFunctionSx$2);
	  const Box = /*#__PURE__*/reactExports.forwardRef(function Box(inProps, ref) {
	    const theme = useTheme(defaultTheme);
	    const _extendSxProp = extendSxProp(inProps),
	      {
	        className,
	        component = 'div'
	      } = _extendSxProp,
	      other = _objectWithoutPropertiesLoose$1(_extendSxProp, _excluded$c);
	    return /*#__PURE__*/jsxRuntimeExports.jsx(BoxRoot, _extends$2({
	      as: component,
	      ref: ref,
	      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
	      theme: themeId ? theme[themeId] || theme : theme
	    }, other));
	  });
	  return Box;
	}

	const globalStateClasses = {
	  active: 'active',
	  checked: 'checked',
	  completed: 'completed',
	  disabled: 'disabled',
	  error: 'error',
	  expanded: 'expanded',
	  focused: 'focused',
	  focusVisible: 'focusVisible',
	  open: 'open',
	  readOnly: 'readOnly',
	  required: 'required',
	  selected: 'selected'
	};
	function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {
	  const globalStateClass = globalStateClasses[slot];
	  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator$1.generate(componentName)}-${slot}`;
	}

	function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {
	  const result = {};
	  slots.forEach(slot => {
	    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);
	  });
	  return result;
	}

	var reactIs$1 = {exports: {}};

	var reactIs_development$1 = {};

	/**
	 * @license React
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactIs_development;

	function requireReactIs_development () {
		if (hasRequiredReactIs_development) return reactIs_development$1;
		hasRequiredReactIs_development = 1;

		{
		  (function () {

		    // ATTENTION
		    // When adding new symbols to this file,
		    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
		    // The Symbol used to tag the ReactElement-like types.
		    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
		    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
		    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
		    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
		    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
		    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
		    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
		    var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
		    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
		    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
		    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
		    var REACT_MEMO_TYPE = Symbol.for('react.memo');
		    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
		    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');

		    // -----------------------------------------------------------------------------

		    var enableScopeAPI = false; // Experimental Create Event Handle API.
		    var enableCacheElement = false;
		    var enableTransitionTracing = false; // No known bugs, but needs performance testing

		    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
		    // stuff. Intended to enable React core members to more easily debug scheduling
		    // issues in DEV builds.

		    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

		    var REACT_MODULE_REFERENCE;
		    {
		      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
		    }
		    function isValidElementType(type) {
		      if (typeof type === 'string' || typeof type === 'function') {
		        return true;
		      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).

		      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
		        return true;
		      }
		      if (typeof type === 'object' && type !== null) {
		        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||
		        // This needs to include all possible module reference object
		        // types supported by any Flight configuration anywhere since
		        // we don't know which Flight build this will end up being used
		        // with.
		        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
		          return true;
		        }
		      }
		      return false;
		    }
		    function typeOf(object) {
		      if (typeof object === 'object' && object !== null) {
		        var $$typeof = object.$$typeof;
		        switch ($$typeof) {
		          case REACT_ELEMENT_TYPE:
		            var type = object.type;
		            switch (type) {
		              case REACT_FRAGMENT_TYPE:
		              case REACT_PROFILER_TYPE:
		              case REACT_STRICT_MODE_TYPE:
		              case REACT_SUSPENSE_TYPE:
		              case REACT_SUSPENSE_LIST_TYPE:
		                return type;
		              default:
		                var $$typeofType = type && type.$$typeof;
		                switch ($$typeofType) {
		                  case REACT_SERVER_CONTEXT_TYPE:
		                  case REACT_CONTEXT_TYPE:
		                  case REACT_FORWARD_REF_TYPE:
		                  case REACT_LAZY_TYPE:
		                  case REACT_MEMO_TYPE:
		                  case REACT_PROVIDER_TYPE:
		                    return $$typeofType;
		                  default:
		                    return $$typeof;
		                }
		            }
		          case REACT_PORTAL_TYPE:
		            return $$typeof;
		        }
		      }
		      return undefined;
		    }
		    var ContextConsumer = REACT_CONTEXT_TYPE;
		    var ContextProvider = REACT_PROVIDER_TYPE;
		    var Element = REACT_ELEMENT_TYPE;
		    var ForwardRef = REACT_FORWARD_REF_TYPE;
		    var Fragment = REACT_FRAGMENT_TYPE;
		    var Lazy = REACT_LAZY_TYPE;
		    var Memo = REACT_MEMO_TYPE;
		    var Portal = REACT_PORTAL_TYPE;
		    var Profiler = REACT_PROFILER_TYPE;
		    var StrictMode = REACT_STRICT_MODE_TYPE;
		    var Suspense = REACT_SUSPENSE_TYPE;
		    var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
		    var hasWarnedAboutDeprecatedIsAsyncMode = false;
		    var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated

		    function isAsyncMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
		          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
		        }
		      }
		      return false;
		    }
		    function isConcurrentMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
		          hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
		        }
		      }
		      return false;
		    }
		    function isContextConsumer(object) {
		      return typeOf(object) === REACT_CONTEXT_TYPE;
		    }
		    function isContextProvider(object) {
		      return typeOf(object) === REACT_PROVIDER_TYPE;
		    }
		    function isElement(object) {
		      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		    }
		    function isForwardRef(object) {
		      return typeOf(object) === REACT_FORWARD_REF_TYPE;
		    }
		    function isFragment(object) {
		      return typeOf(object) === REACT_FRAGMENT_TYPE;
		    }
		    function isLazy(object) {
		      return typeOf(object) === REACT_LAZY_TYPE;
		    }
		    function isMemo(object) {
		      return typeOf(object) === REACT_MEMO_TYPE;
		    }
		    function isPortal(object) {
		      return typeOf(object) === REACT_PORTAL_TYPE;
		    }
		    function isProfiler(object) {
		      return typeOf(object) === REACT_PROFILER_TYPE;
		    }
		    function isStrictMode(object) {
		      return typeOf(object) === REACT_STRICT_MODE_TYPE;
		    }
		    function isSuspense(object) {
		      return typeOf(object) === REACT_SUSPENSE_TYPE;
		    }
		    function isSuspenseList(object) {
		      return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
		    }
		    reactIs_development$1.ContextConsumer = ContextConsumer;
		    reactIs_development$1.ContextProvider = ContextProvider;
		    reactIs_development$1.Element = Element;
		    reactIs_development$1.ForwardRef = ForwardRef;
		    reactIs_development$1.Fragment = Fragment;
		    reactIs_development$1.Lazy = Lazy;
		    reactIs_development$1.Memo = Memo;
		    reactIs_development$1.Portal = Portal;
		    reactIs_development$1.Profiler = Profiler;
		    reactIs_development$1.StrictMode = StrictMode;
		    reactIs_development$1.Suspense = Suspense;
		    reactIs_development$1.SuspenseList = SuspenseList;
		    reactIs_development$1.isAsyncMode = isAsyncMode;
		    reactIs_development$1.isConcurrentMode = isConcurrentMode;
		    reactIs_development$1.isContextConsumer = isContextConsumer;
		    reactIs_development$1.isContextProvider = isContextProvider;
		    reactIs_development$1.isElement = isElement;
		    reactIs_development$1.isForwardRef = isForwardRef;
		    reactIs_development$1.isFragment = isFragment;
		    reactIs_development$1.isLazy = isLazy;
		    reactIs_development$1.isMemo = isMemo;
		    reactIs_development$1.isPortal = isPortal;
		    reactIs_development$1.isProfiler = isProfiler;
		    reactIs_development$1.isStrictMode = isStrictMode;
		    reactIs_development$1.isSuspense = isSuspense;
		    reactIs_development$1.isSuspenseList = isSuspenseList;
		    reactIs_development$1.isValidElementType = isValidElementType;
		    reactIs_development$1.typeOf = typeOf;
		  })();
		}
		return reactIs_development$1;
	}

	{
	  reactIs$1.exports = requireReactIs_development();
	}

	var reactIsExports = reactIs$1.exports;

	// Simplified polyfill for IE11 support
	// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3
	const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
	function getFunctionName(fn) {
	  const match = `${fn}`.match(fnNameMatchRegex);
	  const name = match && match[1];
	  return name || '';
	}
	function getFunctionComponentName(Component, fallback = '') {
	  return Component.displayName || Component.name || getFunctionName(Component) || fallback;
	}
	function getWrappedName(outerType, innerType, wrapperName) {
	  const functionName = getFunctionComponentName(innerType);
	  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);
	}

	/**
	 * cherry-pick from
	 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
	 * originally forked from recompose/getDisplayName with added IE11 support
	 */
	function getDisplayName$1(Component) {
	  if (Component == null) {
	    return undefined;
	  }
	  if (typeof Component === 'string') {
	    return Component;
	  }
	  if (typeof Component === 'function') {
	    return getFunctionComponentName(Component, 'Component');
	  }

	  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`
	  if (typeof Component === 'object') {
	    switch (Component.$$typeof) {
	      case reactIsExports.ForwardRef:
	        return getWrappedName(Component, Component.render, 'ForwardRef');
	      case reactIsExports.Memo:
	        return getWrappedName(Component, Component.type, 'memo');
	      default:
	        return undefined;
	    }
	  }
	  return undefined;
	}

	var getDisplayName = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': getDisplayName$1,
		getFunctionName: getFunctionName
	});

	/**
	 * Add keys, values of `defaultProps` that does not exist in `props`
	 * @param {object} defaultProps
	 * @param {object} props
	 * @returns {object} resolved props
	 */
	function resolveProps(defaultProps, props) {
	  const output = _extends$2({}, props);
	  Object.keys(defaultProps).forEach(propName => {
	    if (propName.toString().match(/^(components|slots)$/)) {
	      output[propName] = _extends$2({}, defaultProps[propName], output[propName]);
	    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {
	      const defaultSlotProps = defaultProps[propName] || {};
	      const slotProps = props[propName];
	      output[propName] = {};
	      if (!slotProps || !Object.keys(slotProps)) {
	        // Reduce the iteration if the slot props is empty
	        output[propName] = defaultSlotProps;
	      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {
	        // Reduce the iteration if the default slot props is empty
	        output[propName] = slotProps;
	      } else {
	        output[propName] = _extends$2({}, slotProps);
	        Object.keys(defaultSlotProps).forEach(slotPropName => {
	          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
	        });
	      }
	    } else if (output[propName] === undefined) {
	      output[propName] = defaultProps[propName];
	    }
	  });
	  return output;
	}

	function getThemeProps(params) {
	  const {
	    theme,
	    name,
	    props
	  } = params;
	  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
	    return props;
	  }
	  return resolveProps(theme.components[name].defaultProps, props);
	}

	function useThemeProps$1({
	  props,
	  name,
	  defaultTheme,
	  themeId
	}) {
	  let theme = useTheme(defaultTheme);
	  if (themeId) {
	    theme = theme[themeId] || theme;
	  }
	  const mergedProps = getThemeProps({
	    theme,
	    name,
	    props
	  });
	  return mergedProps;
	}

	/**
	 * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.
	 * This is useful for effects that are only needed for client-side rendering but not for SSR.
	 *
	 * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
	 * and confirm it doesn't apply to your use-case.
	 */
	const useEnhancedEffect = typeof window !== 'undefined' ? reactExports.useLayoutEffect : reactExports.useEffect;
	var useEnhancedEffect$1 = useEnhancedEffect;

	function clamp$1(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {
	  return Math.max(min, Math.min(val, max));
	}

	var clamp = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': clamp$1
	});

	function chainPropTypes(propType1, propType2) {
	  return function validate(...args) {
	    return propType1(...args) || propType2(...args);
	  };
	}

	function isClassComponent(elementType) {
	  // elementType.prototype?.isReactComponent
	  const {
	    prototype = {}
	  } = elementType;
	  return Boolean(prototype.isReactComponent);
	}
	function elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {
	  const propValue = props[propName];
	  const safePropName = propFullName || propName;
	  if (propValue == null ||
	  // When server-side rendering React doesn't warn either.
	  // This is not an accurate check for SSR.
	  // This is only in place for emotion compat.
	  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
	  typeof window === 'undefined') {
	    return null;
	  }
	  let warningHint;

	  /**
	   * Blacklisting instead of whitelisting
	   *
	   * Blacklisting will miss some components, such as React.Fragment. Those will at least
	   * trigger a warning in React.
	   * We can't whitelist because there is no safe way to detect React.forwardRef
	   * or class components. "Safe" means there's no public API.
	   *
	   */
	  if (typeof propValue === 'function' && !isClassComponent(propValue)) {
	    warningHint = 'Did you accidentally provide a plain function component instead?';
	  }
	  if (warningHint !== undefined) {
	    return new Error(`Invalid ${location} \`${safePropName}\` supplied to \`${componentName}\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');
	  }
	  return null;
	}
	var elementTypeAcceptingRef$1 = chainPropTypes(PropTypes.elementType, elementTypeAcceptingRef);

	const refType = PropTypes.oneOfType([PropTypes.func, PropTypes.object]);
	var refType$1 = refType;

	// Corresponds to 10 frames at 60 Hz.
	// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
	function debounce(func, wait = 166) {
	  let timeout;
	  function debounced(...args) {
	    const later = () => {
	      // @ts-ignore
	      func.apply(this, args);
	    };
	    clearTimeout(timeout);
	    timeout = setTimeout(later, wait);
	  }
	  debounced.clear = () => {
	    clearTimeout(timeout);
	  };
	  return debounced;
	}

	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}

	function ownerWindow(node) {
	  const doc = ownerDocument(node);
	  return doc.defaultView || window;
	}

	/**
	 * TODO v5: consider making it private
	 *
	 * passes {value} to {ref}
	 *
	 * WARNING: Be sure to only call this inside a callback that is passed as a ref.
	 * Otherwise, make sure to cleanup the previous {ref} if it changes. See
	 * https://github.com/mui/material-ui/issues/13539
	 *
	 * Useful if you want to expose the ref of an inner component to the public API
	 * while still using it inside the component.
	 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
	 */
	function setRef(ref, value) {
	  if (typeof ref === 'function') {
	    ref(value);
	  } else if (ref) {
	    ref.current = value;
	  }
	}

	/**
	 * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892
	 * See RFC in https://github.com/reactjs/rfcs/pull/220
	 */

	function useEventCallback(fn) {
	  const ref = reactExports.useRef(fn);
	  useEnhancedEffect$1(() => {
	    ref.current = fn;
	  });
	  return reactExports.useRef((...args) =>
	  // @ts-expect-error hide `this`
	  (0, ref.current)(...args)).current;
	}

	function useForkRef(...refs) {
	  /**
	   * This will create a new function if the refs passed to this hook change and are all defined.
	   * This means react will call the old forkRef with `null` and the new forkRef
	   * with the ref. Cleanup naturally emerges from this behavior.
	   */
	  return reactExports.useMemo(() => {
	    if (refs.every(ref => ref == null)) {
	      return null;
	    }
	    return instance => {
	      refs.forEach(ref => {
	        setRef(ref, instance);
	      });
	    };
	    // eslint-disable-next-line react-hooks/exhaustive-deps
	  }, refs);
	}

	const UNINITIALIZED = {};

	/**
	 * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional
	 * initialization argument, so the initialization function doesn't need to be an inline closure.
	 *
	 * @usage
	 *   const ref = useLazyRef(sortColumns, columns)
	 */
	function useLazyRef(init, initArg) {
	  const ref = reactExports.useRef(UNINITIALIZED);
	  if (ref.current === UNINITIALIZED) {
	    ref.current = init(initArg);
	  }
	  return ref;
	}

	const EMPTY = [];

	/**
	 * A React.useEffect equivalent that runs once, when the component is mounted.
	 */
	function useOnMount(fn) {
	  /* eslint-disable react-hooks/exhaustive-deps */
	  reactExports.useEffect(fn, EMPTY);
	  /* eslint-enable react-hooks/exhaustive-deps */
	}

	class Timeout {
	  constructor() {
	    this.currentId = 0;
	    this.clear = () => {
	      if (this.currentId !== 0) {
	        clearTimeout(this.currentId);
	        this.currentId = 0;
	      }
	    };
	    this.disposeEffect = () => {
	      return this.clear;
	    };
	  }
	  static create() {
	    return new Timeout();
	  }
	  /**
	   * Executes `fn` after `delay`, clearing any previously scheduled call.
	   */
	  start(delay, fn) {
	    this.clear();
	    this.currentId = setTimeout(() => {
	      this.currentId = 0;
	      fn();
	    }, delay);
	  }
	}
	function useTimeout() {
	  const timeout = useLazyRef(Timeout.create).current;
	  useOnMount(timeout.disposeEffect);
	  return timeout;
	}

	let hadKeyboardEvent = true;
	let hadFocusVisibleRecently = false;
	const hadFocusVisibleRecentlyTimeout = new Timeout();
	const inputTypesWhitelist = {
	  text: true,
	  search: true,
	  url: true,
	  tel: true,
	  email: true,
	  password: true,
	  number: true,
	  date: true,
	  month: true,
	  week: true,
	  time: true,
	  datetime: true,
	  'datetime-local': true
	};

	/**
	 * Computes whether the given element should automatically trigger the
	 * `focus-visible` class being added, i.e. whether it should always match
	 * `:focus-visible` when focused.
	 * @param {Element} node
	 * @returns {boolean}
	 */
	function focusTriggersKeyboardModality(node) {
	  const {
	    type,
	    tagName
	  } = node;
	  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {
	    return true;
	  }
	  if (tagName === 'TEXTAREA' && !node.readOnly) {
	    return true;
	  }
	  if (node.isContentEditable) {
	    return true;
	  }
	  return false;
	}

	/**
	 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
	 * If the most recent user interaction was via the keyboard;
	 * and the key press did not include a meta, alt/option, or control key;
	 * then the modality is keyboard. Otherwise, the modality is not keyboard.
	 * @param {KeyboardEvent} event
	 */
	function handleKeyDown(event) {
	  if (event.metaKey || event.altKey || event.ctrlKey) {
	    return;
	  }
	  hadKeyboardEvent = true;
	}

	/**
	 * If at any point a user clicks with a pointing device, ensure that we change
	 * the modality away from keyboard.
	 * This avoids the situation where a user presses a key on an already focused
	 * element, and then clicks on a different element, focusing it with a
	 * pointing device, while we still think we're in keyboard modality.
	 */
	function handlePointerDown() {
	  hadKeyboardEvent = false;
	}
	function handleVisibilityChange() {
	  if (this.visibilityState === 'hidden') {
	    // If the tab becomes active again, the browser will handle calling focus
	    // on the element (Safari actually calls it twice).
	    // If this tab change caused a blur on an element with focus-visible,
	    // re-apply the class when the user switches back to the tab.
	    if (hadFocusVisibleRecently) {
	      hadKeyboardEvent = true;
	    }
	  }
	}
	function prepare(doc) {
	  doc.addEventListener('keydown', handleKeyDown, true);
	  doc.addEventListener('mousedown', handlePointerDown, true);
	  doc.addEventListener('pointerdown', handlePointerDown, true);
	  doc.addEventListener('touchstart', handlePointerDown, true);
	  doc.addEventListener('visibilitychange', handleVisibilityChange, true);
	}
	function isFocusVisible(event) {
	  const {
	    target
	  } = event;
	  try {
	    return target.matches(':focus-visible');
	  } catch (error) {
	    // Browsers not implementing :focus-visible will throw a SyntaxError.
	    // We use our own heuristic for those browsers.
	    // Rethrow might be better if it's not the expected error but do we really
	    // want to crash if focus-visible malfunctioned?
	  }

	  // No need for validFocusTarget check. The user does that by attaching it to
	  // focusable events only.
	  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
	}
	function useIsFocusVisible() {
	  const ref = reactExports.useCallback(node => {
	    if (node != null) {
	      prepare(node.ownerDocument);
	    }
	  }, []);
	  const isFocusVisibleRef = reactExports.useRef(false);

	  /**
	   * Should be called if a blur event is fired
	   */
	  function handleBlurVisible() {
	    // checking against potential state variable does not suffice if we focus and blur synchronously.
	    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.
	    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.
	    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751
	    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).
	    if (isFocusVisibleRef.current) {
	      // To detect a tab/window switch, we look for a blur event followed
	      // rapidly by a visibility change.
	      // If we don't see a visibility change within 100ms, it's probably a
	      // regular focus change.
	      hadFocusVisibleRecently = true;
	      hadFocusVisibleRecentlyTimeout.start(100, () => {
	        hadFocusVisibleRecently = false;
	      });
	      isFocusVisibleRef.current = false;
	      return true;
	    }
	    return false;
	  }

	  /**
	   * Should be called if a blur event is fired
	   */
	  function handleFocusVisible(event) {
	    if (isFocusVisible(event)) {
	      isFocusVisibleRef.current = true;
	      return true;
	    }
	    return false;
	  }
	  return {
	    isFocusVisibleRef,
	    onFocus: handleFocusVisible,
	    onBlur: handleBlurVisible,
	    ref
	  };
	}

	function composeClasses(slots, getUtilityClass, classes = undefined) {
	  const output = {};
	  Object.keys(slots).forEach(
	  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
	  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
	  slot => {
	    output[slot] = slots[slot].reduce((acc, key) => {
	      if (key) {
	        const utilityClass = getUtilityClass(key);
	        if (utilityClass !== '') {
	          acc.push(utilityClass);
	        }
	        if (classes && classes[key]) {
	          acc.push(classes[key]);
	        }
	      }
	      return acc;
	    }, []).join(' ');
	  });
	  return output;
	}

	function createMixins(breakpoints, mixins) {
	  return _extends$2({
	    toolbar: {
	      minHeight: 56,
	      [breakpoints.up('xs')]: {
	        '@media (orientation: landscape)': {
	          minHeight: 48
	        }
	      },
	      [breakpoints.up('sm')]: {
	        minHeight: 64
	      }
	    }
	  }, mixins);
	}

	var colorManipulator = {};

	var interopRequireDefault = {exports: {}};

	interopRequireDefault.exports;

	(function (module) {
		function _interopRequireDefault(obj) {
		  return obj && obj.__esModule ? obj : {
		    "default": obj
		  };
		}
		module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (interopRequireDefault));

	var interopRequireDefaultExports = interopRequireDefault.exports;

	var require$$1$1 = /*@__PURE__*/getAugmentedNamespace(formatMuiErrorMessage);

	var require$$2 = /*@__PURE__*/getAugmentedNamespace(clamp);

	var _interopRequireDefault$1 = interopRequireDefaultExports;
	Object.defineProperty(colorManipulator, "__esModule", {
	  value: true
	});
	var alpha_1 = colorManipulator.alpha = alpha;
	colorManipulator.blend = blend;
	colorManipulator.colorChannel = void 0;
	var darken_1 = colorManipulator.darken = darken;
	colorManipulator.decomposeColor = decomposeColor;
	colorManipulator.emphasize = emphasize;
	var getContrastRatio_1 = colorManipulator.getContrastRatio = getContrastRatio;
	colorManipulator.getLuminance = getLuminance;
	colorManipulator.hexToRgb = hexToRgb;
	colorManipulator.hslToRgb = hslToRgb;
	var lighten_1 = colorManipulator.lighten = lighten;
	colorManipulator.private_safeAlpha = private_safeAlpha;
	colorManipulator.private_safeColorChannel = void 0;
	colorManipulator.private_safeDarken = private_safeDarken;
	colorManipulator.private_safeEmphasize = private_safeEmphasize;
	colorManipulator.private_safeLighten = private_safeLighten;
	colorManipulator.recomposeColor = recomposeColor;
	colorManipulator.rgbToHex = rgbToHex;
	_interopRequireDefault$1(require$$1$1);
	var _clamp = _interopRequireDefault$1(require$$2);
	/* eslint-disable @typescript-eslint/naming-convention */

	/**
	 * Returns a number whose value is limited to the given range.
	 * @param {number} value The value to be clamped
	 * @param {number} min The lower boundary of the output range
	 * @param {number} max The upper boundary of the output range
	 * @returns {number} A number in the range [min, max]
	 */
	function clampWrapper(value, min = 0, max = 1) {
	  {
	    if (value < min || value > max) {
	      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);
	    }
	  }
	  return (0, _clamp.default)(value, min, max);
	}

	/**
	 * Converts a color from CSS hex format to CSS rgb format.
	 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
	 * @returns {string} A CSS rgb color string
	 */
	function hexToRgb(color) {
	  color = color.slice(1);
	  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');
	  let colors = color.match(re);
	  if (colors && colors[0].length === 1) {
	    colors = colors.map(n => n + n);
	  }
	  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {
    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
  }).join(', ')})` : '';
	}
	function intToHex(int) {
	  const hex = int.toString(16);
	  return hex.length === 1 ? `0${hex}` : hex;
	}

	/**
	 * Returns an object with the type and values of a color.
	 *
	 * Note: Does not support rgb % values.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @returns {object} - A MUI color object: {type: string, values: number[]}
	 */
	function decomposeColor(color) {
	  // Idempotent
	  if (color.type) {
	    return color;
	  }
	  if (color.charAt(0) === '#') {
	    return decomposeColor(hexToRgb(color));
	  }
	  const marker = color.indexOf('(');
	  const type = color.substring(0, marker);
	  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {
	    throw new Error(`MUI: Unsupported \`${color}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` );
	  }
	  let values = color.substring(marker + 1, color.length - 1);
	  let colorSpace;
	  if (type === 'color') {
	    values = values.split(' ');
	    colorSpace = values.shift();
	    if (values.length === 4 && values[3].charAt(0) === '/') {
	      values[3] = values[3].slice(1);
	    }
	    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {
	      throw new Error(`MUI: unsupported \`${colorSpace}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` );
	    }
	  } else {
	    values = values.split(',');
	  }
	  values = values.map(value => parseFloat(value));
	  return {
	    type,
	    values,
	    colorSpace
	  };
	}

	/**
	 * Returns a channel created from the input color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @returns {string} - The channel for the color, that can be used in rgba or hsla colors
	 */
	const colorChannel = color => {
	  const decomposedColor = decomposeColor(color);
	  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');
	};
	colorManipulator.colorChannel = colorChannel;
	const private_safeColorChannel = (color, warning) => {
	  try {
	    return colorChannel(color);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	};

	/**
	 * Converts a color object with type and values to a string.
	 * @param {object} color - Decomposed color
	 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'
	 * @param {array} color.values - [n,n,n] or [n,n,n,n]
	 * @returns {string} A CSS color string
	 */
	colorManipulator.private_safeColorChannel = private_safeColorChannel;
	function recomposeColor(color) {
	  const {
	    type,
	    colorSpace
	  } = color;
	  let {
	    values
	  } = color;
	  if (type.indexOf('rgb') !== -1) {
	    // Only convert the first 3 values to int (i.e. not alpha)
	    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);
	  } else if (type.indexOf('hsl') !== -1) {
	    values[1] = `${values[1]}%`;
	    values[2] = `${values[2]}%`;
	  }
	  if (type.indexOf('color') !== -1) {
	    values = `${colorSpace} ${values.join(' ')}`;
	  } else {
	    values = `${values.join(', ')}`;
	  }
	  return `${type}(${values})`;
	}

	/**
	 * Converts a color from CSS rgb format to CSS hex format.
	 * @param {string} color - RGB color, i.e. rgb(n, n, n)
	 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
	 */
	function rgbToHex(color) {
	  // Idempotent
	  if (color.indexOf('#') === 0) {
	    return color;
	  }
	  const {
	    values
	  } = decomposeColor(color);
	  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;
	}

	/**
	 * Converts a color from hsl format to rgb format.
	 * @param {string} color - HSL color values
	 * @returns {string} rgb color values
	 */
	function hslToRgb(color) {
	  color = decomposeColor(color);
	  const {
	    values
	  } = color;
	  const h = values[0];
	  const s = values[1] / 100;
	  const l = values[2] / 100;
	  const a = s * Math.min(l, 1 - l);
	  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
	  let type = 'rgb';
	  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
	  if (color.type === 'hsla') {
	    type += 'a';
	    rgb.push(values[3]);
	  }
	  return recomposeColor({
	    type,
	    values: rgb
	  });
	}
	/**
	 * The relative brightness of any point in a color space,
	 * normalized to 0 for darkest black and 1 for lightest white.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @returns {number} The relative brightness of the color in the range 0 - 1
	 */
	function getLuminance(color) {
	  color = decomposeColor(color);
	  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;
	  rgb = rgb.map(val => {
	    if (color.type !== 'color') {
	      val /= 255; // normalized
	    }
	    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
	  });

	  // Truncate at 3 digits
	  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
	}

	/**
	 * Calculates the contrast ratio between two colors.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} A contrast ratio value in the range 0 - 21.
	 */
	function getContrastRatio(foreground, background) {
	  const lumA = getLuminance(foreground);
	  const lumB = getLuminance(background);
	  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
	}

	/**
	 * Sets the absolute transparency of a color.
	 * Any existing alpha values are overwritten.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} value - value to set the alpha channel to in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function alpha(color, value) {
	  color = decomposeColor(color);
	  value = clampWrapper(value);
	  if (color.type === 'rgb' || color.type === 'hsl') {
	    color.type += 'a';
	  }
	  if (color.type === 'color') {
	    color.values[3] = `/${value}`;
	  } else {
	    color.values[3] = value;
	  }
	  return recomposeColor(color);
	}
	function private_safeAlpha(color, value, warning) {
	  try {
	    return alpha(color, value);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Darkens a color.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function darken(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clampWrapper(coefficient);
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] *= 1 - coefficient;
	  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {
	    for (let i = 0; i < 3; i += 1) {
	      color.values[i] *= 1 - coefficient;
	    }
	  }
	  return recomposeColor(color);
	}
	function private_safeDarken(color, coefficient, warning) {
	  try {
	    return darken(color, coefficient);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Lightens a color.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function lighten(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clampWrapper(coefficient);
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] += (100 - color.values[2]) * coefficient;
	  } else if (color.type.indexOf('rgb') !== -1) {
	    for (let i = 0; i < 3; i += 1) {
	      color.values[i] += (255 - color.values[i]) * coefficient;
	    }
	  } else if (color.type.indexOf('color') !== -1) {
	    for (let i = 0; i < 3; i += 1) {
	      color.values[i] += (1 - color.values[i]) * coefficient;
	    }
	  }
	  return recomposeColor(color);
	}
	function private_safeLighten(color, coefficient, warning) {
	  try {
	    return lighten(color, coefficient);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Darken or lighten a color, depending on its luminance.
	 * Light colors are darkened, dark colors are lightened.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function emphasize(color, coefficient = 0.15) {
	  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
	}
	function private_safeEmphasize(color, coefficient, warning) {
	  try {
	    return private_safeEmphasize(color, coefficient);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Blend a transparent overlay color with a background color, resulting in a single
	 * RGB color.
	 * @param {string} background - CSS color
	 * @param {string} overlay - CSS color
	 * @param {number} opacity - Opacity multiplier in the range 0 - 1
	 * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.
	 */
	function blend(background, overlay, opacity, gamma = 1.0) {
	  const blendChannel = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);
	  const backgroundColor = decomposeColor(background);
	  const overlayColor = decomposeColor(overlay);
	  const rgb = [blendChannel(backgroundColor.values[0], overlayColor.values[0]), blendChannel(backgroundColor.values[1], overlayColor.values[1]), blendChannel(backgroundColor.values[2], overlayColor.values[2])];
	  return recomposeColor({
	    type: 'rgb',
	    values: rgb
	  });
	}

	const _excluded$b = ["mode", "contrastThreshold", "tonalOffset"];
	const light = {
	  // The colors used to style the text.
	  text: {
	    // The most important text.
	    primary: 'rgba(0, 0, 0, 0.87)',
	    // Secondary text.
	    secondary: 'rgba(0, 0, 0, 0.6)',
	    // Disabled text have even lower visual prominence.
	    disabled: 'rgba(0, 0, 0, 0.38)'
	  },
	  // The color used to divide different elements.
	  divider: 'rgba(0, 0, 0, 0.12)',
	  // The background colors used to style the surfaces.
	  // Consistency between these values is important.
	  background: {
	    paper: common$1.white,
	    default: common$1.white
	  },
	  // The colors used to style the action elements.
	  action: {
	    // The color of an active action like an icon button.
	    active: 'rgba(0, 0, 0, 0.54)',
	    // The color of an hovered action.
	    hover: 'rgba(0, 0, 0, 0.04)',
	    hoverOpacity: 0.04,
	    // The color of a selected action.
	    selected: 'rgba(0, 0, 0, 0.08)',
	    selectedOpacity: 0.08,
	    // The color of a disabled action.
	    disabled: 'rgba(0, 0, 0, 0.26)',
	    // The background color of a disabled action.
	    disabledBackground: 'rgba(0, 0, 0, 0.12)',
	    disabledOpacity: 0.38,
	    focus: 'rgba(0, 0, 0, 0.12)',
	    focusOpacity: 0.12,
	    activatedOpacity: 0.12
	  }
	};
	const dark = {
	  text: {
	    primary: common$1.white,
	    secondary: 'rgba(255, 255, 255, 0.7)',
	    disabled: 'rgba(255, 255, 255, 0.5)',
	    icon: 'rgba(255, 255, 255, 0.5)'
	  },
	  divider: 'rgba(255, 255, 255, 0.12)',
	  background: {
	    paper: '#121212',
	    default: '#121212'
	  },
	  action: {
	    active: common$1.white,
	    hover: 'rgba(255, 255, 255, 0.08)',
	    hoverOpacity: 0.08,
	    selected: 'rgba(255, 255, 255, 0.16)',
	    selectedOpacity: 0.16,
	    disabled: 'rgba(255, 255, 255, 0.3)',
	    disabledBackground: 'rgba(255, 255, 255, 0.12)',
	    disabledOpacity: 0.38,
	    focus: 'rgba(255, 255, 255, 0.12)',
	    focusOpacity: 0.12,
	    activatedOpacity: 0.24
	  }
	};
	function addLightOrDark(intent, direction, shade, tonalOffset) {
	  const tonalOffsetLight = tonalOffset.light || tonalOffset;
	  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
	  if (!intent[direction]) {
	    if (intent.hasOwnProperty(shade)) {
	      intent[direction] = intent[shade];
	    } else if (direction === 'light') {
	      intent.light = lighten_1(intent.main, tonalOffsetLight);
	    } else if (direction === 'dark') {
	      intent.dark = darken_1(intent.main, tonalOffsetDark);
	    }
	  }
	}
	function getDefaultPrimary(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: blue$1[200],
	      light: blue$1[50],
	      dark: blue$1[400]
	    };
	  }
	  return {
	    main: blue$1[700],
	    light: blue$1[400],
	    dark: blue$1[800]
	  };
	}
	function getDefaultSecondary(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: purple$1[200],
	      light: purple$1[50],
	      dark: purple$1[400]
	    };
	  }
	  return {
	    main: purple$1[500],
	    light: purple$1[300],
	    dark: purple$1[700]
	  };
	}
	function getDefaultError(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: red$1[500],
	      light: red$1[300],
	      dark: red$1[700]
	    };
	  }
	  return {
	    main: red$1[700],
	    light: red$1[400],
	    dark: red$1[800]
	  };
	}
	function getDefaultInfo(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: lightBlue$1[400],
	      light: lightBlue$1[300],
	      dark: lightBlue$1[700]
	    };
	  }
	  return {
	    main: lightBlue$1[700],
	    light: lightBlue$1[500],
	    dark: lightBlue$1[900]
	  };
	}
	function getDefaultSuccess(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: green$1[400],
	      light: green$1[300],
	      dark: green$1[700]
	    };
	  }
	  return {
	    main: green$1[800],
	    light: green$1[500],
	    dark: green$1[900]
	  };
	}
	function getDefaultWarning(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: orange$1[400],
	      light: orange$1[300],
	      dark: orange$1[700]
	    };
	  }
	  return {
	    main: '#ed6c02',
	    // closest to orange[800] that pass 3:1.
	    light: orange$1[500],
	    dark: orange$1[900]
	  };
	}
	function createPalette(palette) {
	  const {
	      mode = 'light',
	      contrastThreshold = 3,
	      tonalOffset = 0.2
	    } = palette,
	    other = _objectWithoutPropertiesLoose$1(palette, _excluded$b);
	  const primary = palette.primary || getDefaultPrimary(mode);
	  const secondary = palette.secondary || getDefaultSecondary(mode);
	  const error = palette.error || getDefaultError(mode);
	  const info = palette.info || getDefaultInfo(mode);
	  const success = palette.success || getDefaultSuccess(mode);
	  const warning = palette.warning || getDefaultWarning(mode);

	  // Use the same logic as
	  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
	  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
	  function getContrastText(background) {
	    const contrastText = getContrastRatio_1(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
	    {
	      const contrast = getContrastRatio_1(background, contrastText);
	      if (contrast < 3) {
	        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\n'));
	      }
	    }
	    return contrastText;
	  }
	  const augmentColor = ({
	    color,
	    name,
	    mainShade = 500,
	    lightShade = 300,
	    darkShade = 700
	  }) => {
	    color = _extends$2({}, color);
	    if (!color.main && color[mainShade]) {
	      color.main = color[mainShade];
	    }
	    if (!color.hasOwnProperty('main')) {
	      throw new Error(`MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` );
	    }
	    if (typeof color.main !== 'string') {
	      throw new Error(`MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` );
	    }
	    addLightOrDark(color, 'light', lightShade, tonalOffset);
	    addLightOrDark(color, 'dark', darkShade, tonalOffset);
	    if (!color.contrastText) {
	      color.contrastText = getContrastText(color.main);
	    }
	    return color;
	  };
	  const modes = {
	    dark,
	    light
	  };
	  {
	    if (!modes[mode]) {
	      console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
	    }
	  }
	  const paletteOutput = deepmerge$1(_extends$2({
	    // A collection of common colors.
	    common: _extends$2({}, common$1),
	    // prevent mutable object.
	    // The palette mode, can be light or dark.
	    mode,
	    // The colors used to represent primary interface elements for a user.
	    primary: augmentColor({
	      color: primary,
	      name: 'primary'
	    }),
	    // The colors used to represent secondary interface elements for a user.
	    secondary: augmentColor({
	      color: secondary,
	      name: 'secondary',
	      mainShade: 'A400',
	      lightShade: 'A200',
	      darkShade: 'A700'
	    }),
	    // The colors used to represent interface elements that the user should be made aware of.
	    error: augmentColor({
	      color: error,
	      name: 'error'
	    }),
	    // The colors used to represent potentially dangerous actions or important messages.
	    warning: augmentColor({
	      color: warning,
	      name: 'warning'
	    }),
	    // The colors used to present information to the user that is neutral and not necessarily important.
	    info: augmentColor({
	      color: info,
	      name: 'info'
	    }),
	    // The colors used to indicate the successful completion of an action that user triggered.
	    success: augmentColor({
	      color: success,
	      name: 'success'
	    }),
	    // The grey colors.
	    grey: grey$1,
	    // Used by `getContrastText()` to maximize the contrast between
	    // the background and the text.
	    contrastThreshold,
	    // Takes a background color and returns the text color that maximizes the contrast.
	    getContrastText,
	    // Generate a rich color object.
	    augmentColor,
	    // Used by the functions below to shift a color's luminance by approximately
	    // two indexes within its tonal palette.
	    // E.g., shift from Red 500 to Red 300 or Red 700.
	    tonalOffset
	  }, modes[mode]), other);
	  return paletteOutput;
	}

	const _excluded$a = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
	function round(value) {
	  return Math.round(value * 1e5) / 1e5;
	}
	const caseAllCaps = {
	  textTransform: 'uppercase'
	};
	const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';

	/**
	 * @see @link{https://m2.material.io/design/typography/the-type-system.html}
	 * @see @link{https://m2.material.io/design/typography/understanding-typography.html}
	 */
	function createTypography(palette, typography) {
	  const _ref = typeof typography === 'function' ? typography(palette) : typography,
	    {
	      fontFamily = defaultFontFamily,
	      // The default font size of the Material Specification.
	      fontSize = 14,
	      // px
	      fontWeightLight = 300,
	      fontWeightRegular = 400,
	      fontWeightMedium = 500,
	      fontWeightBold = 700,
	      // Tell MUI what's the font-size on the html element.
	      // 16px is the default font-size used by browsers.
	      htmlFontSize = 16,
	      // Apply the CSS properties to all the variants.
	      allVariants,
	      pxToRem: pxToRem2
	    } = _ref,
	    other = _objectWithoutPropertiesLoose$1(_ref, _excluded$a);
	  {
	    if (typeof fontSize !== 'number') {
	      console.error('MUI: `fontSize` is required to be a number.');
	    }
	    if (typeof htmlFontSize !== 'number') {
	      console.error('MUI: `htmlFontSize` is required to be a number.');
	    }
	  }
	  const coef = fontSize / 14;
	  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);
	  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends$2({
	    fontFamily,
	    fontWeight,
	    fontSize: pxToRem(size),
	    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
	    lineHeight
	  }, fontFamily === defaultFontFamily ? {
	    letterSpacing: `${round(letterSpacing / size)}em`
	  } : {}, casing, allVariants);
	  const variants = {
	    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
	    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
	    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
	    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
	    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
	    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
	    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
	    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
	    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
	    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
	    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
	    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
	    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
	    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
	    inherit: {
	      fontFamily: 'inherit',
	      fontWeight: 'inherit',
	      fontSize: 'inherit',
	      lineHeight: 'inherit',
	      letterSpacing: 'inherit'
	    }
	  };
	  return deepmerge$1(_extends$2({
	    htmlFontSize,
	    pxToRem,
	    fontFamily,
	    fontSize,
	    fontWeightLight,
	    fontWeightRegular,
	    fontWeightMedium,
	    fontWeightBold
	  }, variants), other, {
	    clone: false // No need to clone deep
	  });
	}

	const shadowKeyUmbraOpacity = 0.2;
	const shadowKeyPenumbraOpacity = 0.14;
	const shadowAmbientShadowOpacity = 0.12;
	function createShadow(...px) {
	  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');
	}

	// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
	const shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
	var shadows$1 = shadows;

	const _excluded$9 = ["duration", "easing", "delay"];
	// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
	// to learn the context in which each easing should be used.
	const easing = {
	  // This is the most common easing curve.
	  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
	  // Objects enter the screen at full velocity from off-screen and
	  // slowly decelerate to a resting point.
	  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
	  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
	  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
	  // The sharp curve is used by objects that may return to the screen at any time.
	  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
	};

	// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
	// to learn when use what timing
	const duration = {
	  shortest: 150,
	  shorter: 200,
	  short: 250,
	  // most basic recommended timing
	  standard: 300,
	  // this is to be used in complex animations
	  complex: 375,
	  // recommended when something is entering screen
	  enteringScreen: 225,
	  // recommended when something is leaving screen
	  leavingScreen: 195
	};
	function formatMs(milliseconds) {
	  return `${Math.round(milliseconds)}ms`;
	}
	function getAutoHeightDuration(height) {
	  if (!height) {
	    return 0;
	  }
	  const constant = height / 36;

	  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
	  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
	}
	function createTransitions(inputTransitions) {
	  const mergedEasing = _extends$2({}, easing, inputTransitions.easing);
	  const mergedDuration = _extends$2({}, duration, inputTransitions.duration);
	  const create = (props = ['all'], options = {}) => {
	    const {
	        duration: durationOption = mergedDuration.standard,
	        easing: easingOption = mergedEasing.easeInOut,
	        delay = 0
	      } = options,
	      other = _objectWithoutPropertiesLoose$1(options, _excluded$9);
	    {
	      const isString = value => typeof value === 'string';
	      // IE11 support, replace with Number.isNaN
	      // eslint-disable-next-line no-restricted-globals
	      const isNumber = value => !isNaN(parseFloat(value));
	      if (!isString(props) && !Array.isArray(props)) {
	        console.error('MUI: Argument "props" must be a string or Array.');
	      }
	      if (!isNumber(durationOption) && !isString(durationOption)) {
	        console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
	      }
	      if (!isString(easingOption)) {
	        console.error('MUI: Argument "easing" must be a string.');
	      }
	      if (!isNumber(delay) && !isString(delay)) {
	        console.error('MUI: Argument "delay" must be a number or a string.');
	      }
	      if (typeof options !== 'object') {
	        console.error(['MUI: Secong argument of transition.create must be an object.', "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join('\n'));
	      }
	      if (Object.keys(other).length !== 0) {
	        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);
	      }
	    }
	    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');
	  };
	  return _extends$2({
	    getAutoHeightDuration,
	    create
	  }, inputTransitions, {
	    easing: mergedEasing,
	    duration: mergedDuration
	  });
	}

	// We need to centralize the zIndex definitions as they work
	// like global values in the browser.
	const zIndex = {
	  mobileStepper: 1000,
	  fab: 1050,
	  speedDial: 1050,
	  appBar: 1100,
	  drawer: 1200,
	  modal: 1300,
	  snackbar: 1400,
	  tooltip: 1500
	};
	var zIndex$1 = zIndex;

	const _excluded$8 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
	function createTheme(options = {}, ...args) {
	  const {
	      mixins: mixinsInput = {},
	      palette: paletteInput = {},
	      transitions: transitionsInput = {},
	      typography: typographyInput = {}
	    } = options,
	    other = _objectWithoutPropertiesLoose$1(options, _excluded$8);
	  if (options.vars) {
	    throw new Error(`MUI: \`vars\` is a private field used for CSS variables support.
Please use another name.` );
	  }
	  const palette = createPalette(paletteInput);
	  const systemTheme = createTheme$2(options);
	  let muiTheme = deepmerge$1(systemTheme, {
	    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
	    palette,
	    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
	    shadows: shadows$1.slice(),
	    typography: createTypography(palette, typographyInput),
	    transitions: createTransitions(transitionsInput),
	    zIndex: _extends$2({}, zIndex$1)
	  });
	  muiTheme = deepmerge$1(muiTheme, other);
	  muiTheme = args.reduce((acc, argument) => deepmerge$1(acc, argument), muiTheme);
	  {
	    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.
	    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];
	    const traverse = (node, component) => {
	      let key;

	      // eslint-disable-next-line guard-for-in, no-restricted-syntax
	      for (key in node) {
	        const child = node[key];
	        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
	          {
	            const stateClass = generateUtilityClass('', key);
	            console.error([`MUI: The \`${component}\` component increases ` + `the CSS specificity of the \`${key}\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
	              root: {
	                [`&.${stateClass}`]: child
	              }
	            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\n'));
	          }
	          // Remove the style to prevent global conflicts.
	          node[key] = {};
	        }
	      }
	    };
	    Object.keys(muiTheme.components).forEach(component => {
	      const styleOverrides = muiTheme.components[component].styleOverrides;
	      if (styleOverrides && component.indexOf('Mui') === 0) {
	        traverse(styleOverrides, component);
	      }
	    });
	  }
	  muiTheme.unstable_sxConfig = _extends$2({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
	  muiTheme.unstable_sx = function sx(props) {
	    return styleFunctionSx$2({
	      sx: props,
	      theme: this
	    });
	  };
	  return muiTheme;
	}

	const defaultTheme$1 = createTheme();
	var defaultTheme$2 = defaultTheme$1;

	function useThemeProps({
	  props,
	  name
	}) {
	  return useThemeProps$1({
	    props,
	    name,
	    defaultTheme: defaultTheme$2,
	    themeId: THEME_ID
	  });
	}

	var createStyled$1 = {};

	var _extends$1 = {exports: {}};

	_extends$1.exports;

	var hasRequired_extends;

	function require_extends () {
		if (hasRequired_extends) return _extends$1.exports;
		hasRequired_extends = 1;
		(function (module) {
			function _extends() {
			  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
			    for (var i = 1; i < arguments.length; i++) {
			      var source = arguments[i];
			      for (var key in source) {
			        if (Object.prototype.hasOwnProperty.call(source, key)) {
			          target[key] = source[key];
			        }
			      }
			    }
			    return target;
			  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
			  return _extends.apply(this, arguments);
			}
			module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports; 
		} (_extends$1));
		return _extends$1.exports;
	}

	var objectWithoutPropertiesLoose = {exports: {}};

	objectWithoutPropertiesLoose.exports;

	var hasRequiredObjectWithoutPropertiesLoose;

	function requireObjectWithoutPropertiesLoose () {
		if (hasRequiredObjectWithoutPropertiesLoose) return objectWithoutPropertiesLoose.exports;
		hasRequiredObjectWithoutPropertiesLoose = 1;
		(function (module) {
			function _objectWithoutPropertiesLoose(source, excluded) {
			  if (source == null) return {};
			  var target = {};
			  var sourceKeys = Object.keys(source);
			  var key, i;
			  for (i = 0; i < sourceKeys.length; i++) {
			    key = sourceKeys[i];
			    if (excluded.indexOf(key) >= 0) continue;
			    target[key] = source[key];
			  }
			  return target;
			}
			module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports; 
		} (objectWithoutPropertiesLoose));
		return objectWithoutPropertiesLoose.exports;
	}

	var require$$1 = /*@__PURE__*/getAugmentedNamespace(styledEngine);

	var require$$4 = /*@__PURE__*/getAugmentedNamespace(deepmerge);

	var require$$5 = /*@__PURE__*/getAugmentedNamespace(capitalize);

	var require$$6 = /*@__PURE__*/getAugmentedNamespace(getDisplayName);

	var require$$7 = /*@__PURE__*/getAugmentedNamespace(createTheme$1);

	var require$$8 = /*@__PURE__*/getAugmentedNamespace(styleFunctionSx);

	var _interopRequireDefault = interopRequireDefaultExports;
	Object.defineProperty(createStyled$1, "__esModule", {
	  value: true
	});
	var _default$1 = createStyled$1.default = createStyled;
	var shouldForwardProp_1 = createStyled$1.shouldForwardProp = shouldForwardProp;
	createStyled$1.systemDefaultTheme = void 0;
	var _extends2 = _interopRequireDefault(require_extends());
	var _objectWithoutPropertiesLoose2 = _interopRequireDefault(requireObjectWithoutPropertiesLoose());
	var _styledEngine = _interopRequireWildcard(require$$1);
	var _deepmerge = require$$4;
	var _capitalize = _interopRequireDefault(require$$5);
	var _getDisplayName = _interopRequireDefault(require$$6);
	var _createTheme = _interopRequireDefault(require$$7);
	var _styleFunctionSx = _interopRequireDefault(require$$8);
	const _excluded$7 = ["ownerState"],
	  _excluded2 = ["variants"],
	  _excluded3 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
	/* eslint-disable no-underscore-dangle */
	function _getRequireWildcardCache(e) {
	  if ("function" != typeof WeakMap) return null;
	  var r = new WeakMap(),
	    t = new WeakMap();
	  return (_getRequireWildcardCache = function (e) {
	    return e ? t : r;
	  })(e);
	}
	function _interopRequireWildcard(e, r) {
	  if (!r && e && e.__esModule) return e;
	  if (null === e || "object" != typeof e && "function" != typeof e) return {
	    default: e
	  };
	  var t = _getRequireWildcardCache(r);
	  if (t && t.has(e)) return t.get(e);
	  var n = {
	      __proto__: null
	    },
	    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
	  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
	    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
	    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
	  }
	  return n.default = e, t && t.set(e, n), n;
	}
	function isEmpty$1(obj) {
	  return Object.keys(obj).length === 0;
	}

	// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40
	function isStringTag(tag) {
	  return typeof tag === 'string' &&
	  // 96 is one less than the char code
	  // for "a" so this is checking that
	  // it's a lowercase character
	  tag.charCodeAt(0) > 96;
	}

	// Update /system/styled/#api in case if this changes
	function shouldForwardProp(prop) {
	  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
	}
	const systemDefaultTheme = createStyled$1.systemDefaultTheme = (0, _createTheme.default)();
	const lowercaseFirstLetter = string => {
	  if (!string) {
	    return string;
	  }
	  return string.charAt(0).toLowerCase() + string.slice(1);
	};
	function resolveTheme({
	  defaultTheme,
	  theme,
	  themeId
	}) {
	  return isEmpty$1(theme) ? defaultTheme : theme[themeId] || theme;
	}
	function defaultOverridesResolver(slot) {
	  if (!slot) {
	    return null;
	  }
	  return (props, styles) => styles[slot];
	}
	function processStyleArg(callableStyle, _ref) {
	  let {
	      ownerState
	    } = _ref,
	    props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded$7);
	  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle((0, _extends2.default)({
	    ownerState
	  }, props)) : callableStyle;
	  if (Array.isArray(resolvedStylesArg)) {
	    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, (0, _extends2.default)({
	      ownerState
	    }, props)));
	  }
	  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {
	    const {
	        variants = []
	      } = resolvedStylesArg,
	      otherStyles = (0, _objectWithoutPropertiesLoose2.default)(resolvedStylesArg, _excluded2);
	    let result = otherStyles;
	    variants.forEach(variant => {
	      let isMatch = true;
	      if (typeof variant.props === 'function') {
	        isMatch = variant.props((0, _extends2.default)({
	          ownerState
	        }, props, ownerState));
	      } else {
	        Object.keys(variant.props).forEach(key => {
	          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {
	            isMatch = false;
	          }
	        });
	      }
	      if (isMatch) {
	        if (!Array.isArray(result)) {
	          result = [result];
	        }
	        result.push(typeof variant.style === 'function' ? variant.style((0, _extends2.default)({
	          ownerState
	        }, props, ownerState)) : variant.style);
	      }
	    });
	    return result;
	  }
	  return resolvedStylesArg;
	}
	function createStyled(input = {}) {
	  const {
	    themeId,
	    defaultTheme = systemDefaultTheme,
	    rootShouldForwardProp = shouldForwardProp,
	    slotShouldForwardProp = shouldForwardProp
	  } = input;
	  const systemSx = props => {
	    return (0, _styleFunctionSx.default)((0, _extends2.default)({}, props, {
	      theme: resolveTheme((0, _extends2.default)({}, props, {
	        defaultTheme,
	        themeId
	      }))
	    }));
	  };
	  systemSx.__mui_systemSx = true;
	  return (tag, inputOptions = {}) => {
	    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.
	    (0, _styledEngine.internal_processStyles)(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));
	    const {
	        name: componentName,
	        slot: componentSlot,
	        skipVariantsResolver: inputSkipVariantsResolver,
	        skipSx: inputSkipSx,
	        // TODO v6: remove `lowercaseFirstLetter()` in the next major release
	        // For more details: https://github.com/mui/material-ui/pull/37908
	        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))
	      } = inputOptions,
	      options = (0, _objectWithoutPropertiesLoose2.default)(inputOptions, _excluded3);

	    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
	    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :
	    // TODO v6: remove `Root` in the next major release
	    // For more details: https://github.com/mui/material-ui/pull/37908
	    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;
	    const skipSx = inputSkipSx || false;
	    let label;
	    {
	      if (componentName) {
	        // TODO v6: remove `lowercaseFirstLetter()` in the next major release
	        // For more details: https://github.com/mui/material-ui/pull/37908
	        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;
	      }
	    }
	    let shouldForwardPropOption = shouldForwardProp;

	    // TODO v6: remove `Root` in the next major release
	    // For more details: https://github.com/mui/material-ui/pull/37908
	    if (componentSlot === 'Root' || componentSlot === 'root') {
	      shouldForwardPropOption = rootShouldForwardProp;
	    } else if (componentSlot) {
	      // any other slot specified
	      shouldForwardPropOption = slotShouldForwardProp;
	    } else if (isStringTag(tag)) {
	      // for string (html) tag, preserve the behavior in emotion & styled-components.
	      shouldForwardPropOption = undefined;
	    }
	    const defaultStyledResolver = (0, _styledEngine.default)(tag, (0, _extends2.default)({
	      shouldForwardProp: shouldForwardPropOption,
	      label
	    }, options));
	    const transformStyleArg = stylesArg => {
	      // On the server Emotion doesn't use React.forwardRef for creating components, so the created
	      // component stays as a function. This condition makes sure that we do not interpolate functions
	      // which are basically components used as a selectors.
	      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || (0, _deepmerge.isPlainObject)(stylesArg)) {
	        return props => processStyleArg(stylesArg, (0, _extends2.default)({}, props, {
	          theme: resolveTheme({
	            theme: props.theme,
	            defaultTheme,
	            themeId
	          })
	        }));
	      }
	      return stylesArg;
	    };
	    const muiStyledResolver = (styleArg, ...expressions) => {
	      let transformedStyleArg = transformStyleArg(styleArg);
	      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];
	      if (componentName && overridesResolver) {
	        expressionsWithDefaultTheme.push(props => {
	          const theme = resolveTheme((0, _extends2.default)({}, props, {
	            defaultTheme,
	            themeId
	          }));
	          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {
	            return null;
	          }
	          const styleOverrides = theme.components[componentName].styleOverrides;
	          const resolvedStyleOverrides = {};
	          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly
	          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {
	            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, (0, _extends2.default)({}, props, {
	              theme
	            }));
	          });
	          return overridesResolver(props, resolvedStyleOverrides);
	        });
	      }
	      if (componentName && !skipVariantsResolver) {
	        expressionsWithDefaultTheme.push(props => {
	          var _theme$components;
	          const theme = resolveTheme((0, _extends2.default)({}, props, {
	            defaultTheme,
	            themeId
	          }));
	          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;
	          return processStyleArg({
	            variants: themeVariants
	          }, (0, _extends2.default)({}, props, {
	            theme
	          }));
	        });
	      }
	      if (!skipSx) {
	        expressionsWithDefaultTheme.push(systemSx);
	      }
	      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
	      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
	        const placeholders = new Array(numOfCustomFnsApplied).fill('');
	        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.
	        transformedStyleArg = [...styleArg, ...placeholders];
	        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
	      }
	      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
	      {
	        let displayName;
	        if (componentName) {
	          displayName = `${componentName}${(0, _capitalize.default)(componentSlot || '')}`;
	        }
	        if (displayName === undefined) {
	          displayName = `Styled(${(0, _getDisplayName.default)(tag)})`;
	        }
	        Component.displayName = displayName;
	      }
	      if (tag.muiName) {
	        Component.muiName = tag.muiName;
	      }
	      return Component;
	    };
	    if (defaultStyledResolver.withConfig) {
	      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
	    }
	    return muiStyledResolver;
	  };
	}

	const rootShouldForwardProp = prop => shouldForwardProp_1(prop) && prop !== 'classes';
	const styled = _default$1({
	  themeId: THEME_ID,
	  defaultTheme: defaultTheme$2,
	  rootShouldForwardProp
	});
	var styled$1 = styled;

	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	  return _setPrototypeOf(o, p);
	}

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  _setPrototypeOf(subClass, superClass);
	}

	var TransitionGroupContext = /*#__PURE__*/React.createContext(null);

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	  return self;
	}

	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */

	function getChildMapping(children, mapFn) {
	  var mapper = function mapper(child) {
	    return mapFn && /*#__PURE__*/reactExports.isValidElement(child) ? mapFn(child) : child;
	  };
	  var result = Object.create(null);
	  if (children) reactExports.Children.map(children, function (c) {
	    return c;
	  }).forEach(function (child) {
	    // run the map function here instead so that the key is the computed one
	    result[child.key] = mapper(child);
	  });
	  return result;
	}
	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */

	function mergeChildMappings(prev, next) {
	  prev = prev || {};
	  next = next || {};
	  function getValueForKey(key) {
	    return key in next ? next[key] : prev[key];
	  } // For each key of `next`, the list of keys to insert before that key in
	  // the combined list

	  var nextKeysPending = Object.create(null);
	  var pendingKeys = [];
	  for (var prevKey in prev) {
	    if (prevKey in next) {
	      if (pendingKeys.length) {
	        nextKeysPending[prevKey] = pendingKeys;
	        pendingKeys = [];
	      }
	    } else {
	      pendingKeys.push(prevKey);
	    }
	  }
	  var i;
	  var childMapping = {};
	  for (var nextKey in next) {
	    if (nextKeysPending[nextKey]) {
	      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	        var pendingNextKey = nextKeysPending[nextKey][i];
	        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	      }
	    }
	    childMapping[nextKey] = getValueForKey(nextKey);
	  } // Finally, add the keys which didn't appear before any key in `next`

	  for (i = 0; i < pendingKeys.length; i++) {
	    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	  }
	  return childMapping;
	}
	function getProp(child, prop, props) {
	  return props[prop] != null ? props[prop] : child.props[prop];
	}
	function getInitialChildMapping(props, onExited) {
	  return getChildMapping(props.children, function (child) {
	    return /*#__PURE__*/reactExports.cloneElement(child, {
	      onExited: onExited.bind(null, child),
	      in: true,
	      appear: getProp(child, 'appear', props),
	      enter: getProp(child, 'enter', props),
	      exit: getProp(child, 'exit', props)
	    });
	  });
	}
	function getNextChildMapping(nextProps, prevChildMapping, onExited) {
	  var nextChildMapping = getChildMapping(nextProps.children);
	  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
	  Object.keys(children).forEach(function (key) {
	    var child = children[key];
	    if (! /*#__PURE__*/reactExports.isValidElement(child)) return;
	    var hasPrev = (key in prevChildMapping);
	    var hasNext = (key in nextChildMapping);
	    var prevChild = prevChildMapping[key];
	    var isLeaving = /*#__PURE__*/reactExports.isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)

	    if (hasNext && (!hasPrev || isLeaving)) {
	      // console.log('entering', key)
	      children[key] = /*#__PURE__*/reactExports.cloneElement(child, {
	        onExited: onExited.bind(null, child),
	        in: true,
	        exit: getProp(child, 'exit', nextProps),
	        enter: getProp(child, 'enter', nextProps)
	      });
	    } else if (!hasNext && hasPrev && !isLeaving) {
	      // item is old (exiting)
	      // console.log('leaving', key)
	      children[key] = /*#__PURE__*/reactExports.cloneElement(child, {
	        in: false
	      });
	    } else if (hasNext && hasPrev && /*#__PURE__*/reactExports.isValidElement(prevChild)) {
	      // item hasn't changed transition states
	      // copy over the last transition props;
	      // console.log('unchanged', key)
	      children[key] = /*#__PURE__*/reactExports.cloneElement(child, {
	        onExited: onExited.bind(null, child),
	        in: prevChild.props.in,
	        exit: getProp(child, 'exit', nextProps),
	        enter: getProp(child, 'enter', nextProps)
	      });
	    }
	  });
	  return children;
	}

	var values = Object.values || function (obj) {
	  return Object.keys(obj).map(function (k) {
	    return obj[k];
	  });
	};
	var defaultProps = {
	  component: 'div',
	  childFactory: function childFactory(child) {
	    return child;
	  }
	};
	/**
	 * The `<TransitionGroup>` component manages a set of transition components
	 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
	 * components, `<TransitionGroup>` is a state machine for managing the mounting
	 * and unmounting of components over time.
	 *
	 * Consider the example below. As items are removed or added to the TodoList the
	 * `in` prop is toggled automatically by the `<TransitionGroup>`.
	 *
	 * Note that `<TransitionGroup>`  does not define any animation behavior!
	 * Exactly _how_ a list item animates is up to the individual transition
	 * component. This means you can mix and match animations across different list
	 * items.
	 */

	var TransitionGroup = /*#__PURE__*/function (_React$Component) {
	  _inheritsLoose(TransitionGroup, _React$Component);
	  function TransitionGroup(props, context) {
	    var _this;
	    _this = _React$Component.call(this, props, context) || this;
	    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear

	    _this.state = {
	      contextValue: {
	        isMounting: true
	      },
	      handleExited: handleExited,
	      firstRender: true
	    };
	    return _this;
	  }
	  var _proto = TransitionGroup.prototype;
	  _proto.componentDidMount = function componentDidMount() {
	    this.mounted = true;
	    this.setState({
	      contextValue: {
	        isMounting: false
	      }
	    });
	  };
	  _proto.componentWillUnmount = function componentWillUnmount() {
	    this.mounted = false;
	  };
	  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
	    var prevChildMapping = _ref.children,
	      handleExited = _ref.handleExited,
	      firstRender = _ref.firstRender;
	    return {
	      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
	      firstRender: false
	    };
	  } // node is `undefined` when user provided `nodeRef` prop
	  ;
	  _proto.handleExited = function handleExited(child, node) {
	    var currentChildMapping = getChildMapping(this.props.children);
	    if (child.key in currentChildMapping) return;
	    if (child.props.onExited) {
	      child.props.onExited(node);
	    }
	    if (this.mounted) {
	      this.setState(function (state) {
	        var children = _extends$2({}, state.children);
	        delete children[child.key];
	        return {
	          children: children
	        };
	      });
	    }
	  };
	  _proto.render = function render() {
	    var _this$props = this.props,
	      Component = _this$props.component,
	      childFactory = _this$props.childFactory,
	      props = _objectWithoutPropertiesLoose$1(_this$props, ["component", "childFactory"]);
	    var contextValue = this.state.contextValue;
	    var children = values(this.state.children).map(childFactory);
	    delete props.appear;
	    delete props.enter;
	    delete props.exit;
	    if (Component === null) {
	      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {
	        value: contextValue
	      }, children);
	    }
	    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {
	      value: contextValue
	    }, /*#__PURE__*/React.createElement(Component, props, children));
	  };
	  return TransitionGroup;
	}(React.Component);
	TransitionGroup.propTypes = {
	  /**
	   * `<TransitionGroup>` renders a `<div>` by default. You can change this
	   * behavior by providing a `component` prop.
	   * If you use React v16+ and would like to avoid a wrapping `<div>` element
	   * you can pass in `component={null}`. This is useful if the wrapping div
	   * borks your css styles.
	   */
	  component: PropTypes.any,
	  /**
	   * A set of `<Transition>` components, that are toggled `in` and out as they
	   * leave. the `<TransitionGroup>` will inject specific transition props, so
	   * remember to spread them through if you are wrapping the `<Transition>` as
	   * with our `<Fade>` example.
	   *
	   * While this component is meant for multiple `Transition` or `CSSTransition`
	   * children, sometimes you may want to have a single transition child with
	   * content that you want to be transitioned out and in when you change it
	   * (e.g. routes, images etc.) In that case you can change the `key` prop of
	   * the transition child as you change its content, this will cause
	   * `TransitionGroup` to transition the child out and back in.
	   */
	  children: PropTypes.node,
	  /**
	   * A convenience prop that enables or disables appear animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  appear: PropTypes.bool,
	  /**
	   * A convenience prop that enables or disables enter animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  enter: PropTypes.bool,
	  /**
	   * A convenience prop that enables or disables exit animations
	   * for all children. Note that specifying this will override any defaults set
	   * on individual children Transitions.
	   */
	  exit: PropTypes.bool,
	  /**
	   * You may need to apply reactive updates to a child as it is exiting.
	   * This is generally done by using `cloneElement` however in the case of an exiting
	   * child the element has already been removed and not accessible to the consumer.
	   *
	   * If you do need to update a child as it leaves you can provide a `childFactory`
	   * to wrap every child, even the ones that are leaving.
	   *
	   * @type Function(child: ReactElement) -> ReactElement
	   */
	  childFactory: PropTypes.func
	} ;
	TransitionGroup.defaultProps = defaultProps;
	var TransitionGroup$1 = TransitionGroup;

	/**
	 * Determines if a given element is a DOM element name (i.e. not a React component).
	 */
	function isHostComponent(element) {
	  return typeof element === 'string';
	}

	function Ripple(props) {
	  const {
	    className,
	    classes,
	    pulsate = false,
	    rippleX,
	    rippleY,
	    rippleSize,
	    in: inProp,
	    onExited,
	    timeout
	  } = props;
	  const [leaving, setLeaving] = reactExports.useState(false);
	  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
	  const rippleStyles = {
	    width: rippleSize,
	    height: rippleSize,
	    top: -(rippleSize / 2) + rippleY,
	    left: -(rippleSize / 2) + rippleX
	  };
	  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
	  if (!inProp && !leaving) {
	    setLeaving(true);
	  }
	  reactExports.useEffect(() => {
	    if (!inProp && onExited != null) {
	      // react-transition-group#onExited
	      const timeoutId = setTimeout(onExited, timeout);
	      return () => {
	        clearTimeout(timeoutId);
	      };
	    }
	    return undefined;
	  }, [onExited, inProp, timeout]);
	  return /*#__PURE__*/jsxRuntimeExports.jsx("span", {
	    className: rippleClassName,
	    style: rippleStyles,
	    children: /*#__PURE__*/jsxRuntimeExports.jsx("span", {
	      className: childClassName
	    })
	  });
	}
	Ripple.propTypes = {
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object.isRequired,
	  className: PropTypes.string,
	  /**
	   * @ignore - injected from TransitionGroup
	   */
	  in: PropTypes.bool,
	  /**
	   * @ignore - injected from TransitionGroup
	   */
	  onExited: PropTypes.func,
	  /**
	   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
	   */
	  pulsate: PropTypes.bool,
	  /**
	   * Diameter of the ripple.
	   */
	  rippleSize: PropTypes.number,
	  /**
	   * Horizontal position of the ripple center.
	   */
	  rippleX: PropTypes.number,
	  /**
	   * Vertical position of the ripple center.
	   */
	  rippleY: PropTypes.number,
	  /**
	   * exit delay
	   */
	  timeout: PropTypes.number.isRequired
	} ;

	const touchRippleClasses = generateUtilityClasses('MuiTouchRipple', ['root', 'ripple', 'rippleVisible', 'ripplePulsate', 'child', 'childLeaving', 'childPulsate']);
	var touchRippleClasses$1 = touchRippleClasses;

	const _excluded$6 = ["center", "classes", "className"];
	let _ = t => t,
	  _t,
	  _t2,
	  _t3,
	  _t4;
	const DURATION = 550;
	const DELAY_RIPPLE = 80;
	const enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`));
	const exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`));
	const pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`));
	const TouchRippleRoot = styled$1('span', {
	  name: 'MuiTouchRipple',
	  slot: 'Root'
	})({
	  overflow: 'hidden',
	  pointerEvents: 'none',
	  position: 'absolute',
	  zIndex: 0,
	  top: 0,
	  right: 0,
	  bottom: 0,
	  left: 0,
	  borderRadius: 'inherit'
	});

	// This `styled()` function invokes keyframes. `styled-components` only supports keyframes
	// in string templates. Do not convert these styles in JS object as it will break.
	const TouchRippleRipple = styled$1(Ripple, {
	  name: 'MuiTouchRipple',
	  slot: 'Ripple'
	})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
	  theme
	}) => theme.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
	  theme
	}) => theme.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
	  theme
	}) => theme.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
	  theme
	}) => theme.transitions.easing.easeInOut);

	/**
	 * @ignore - internal component.
	 *
	 * TODO v5: Make private
	 */
	const TouchRipple = /*#__PURE__*/reactExports.forwardRef(function TouchRipple(inProps, ref) {
	  const props = useThemeProps({
	    props: inProps,
	    name: 'MuiTouchRipple'
	  });
	  const {
	      center: centerProp = false,
	      classes = {},
	      className
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$6);
	  const [ripples, setRipples] = reactExports.useState([]);
	  const nextKey = reactExports.useRef(0);
	  const rippleCallback = reactExports.useRef(null);
	  reactExports.useEffect(() => {
	    if (rippleCallback.current) {
	      rippleCallback.current();
	      rippleCallback.current = null;
	    }
	  }, [ripples]);

	  // Used to filter out mouse emulated events on mobile.
	  const ignoringMouseDown = reactExports.useRef(false);
	  // We use a timer in order to only show the ripples for touch "click" like events.
	  // We don't want to display the ripple for touch scroll events.
	  const startTimer = useTimeout();

	  // This is the hook called once the previous timeout is ready.
	  const startTimerCommit = reactExports.useRef(null);
	  const container = reactExports.useRef(null);
	  const startCommit = reactExports.useCallback(params => {
	    const {
	      pulsate,
	      rippleX,
	      rippleY,
	      rippleSize,
	      cb
	    } = params;
	    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/jsxRuntimeExports.jsx(TouchRippleRipple, {
	      classes: {
	        ripple: clsx(classes.ripple, touchRippleClasses$1.ripple),
	        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses$1.rippleVisible),
	        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses$1.ripplePulsate),
	        child: clsx(classes.child, touchRippleClasses$1.child),
	        childLeaving: clsx(classes.childLeaving, touchRippleClasses$1.childLeaving),
	        childPulsate: clsx(classes.childPulsate, touchRippleClasses$1.childPulsate)
	      },
	      timeout: DURATION,
	      pulsate: pulsate,
	      rippleX: rippleX,
	      rippleY: rippleY,
	      rippleSize: rippleSize
	    }, nextKey.current)]);
	    nextKey.current += 1;
	    rippleCallback.current = cb;
	  }, [classes]);
	  const start = reactExports.useCallback((event = {}, options = {}, cb = () => {}) => {
	    const {
	      pulsate = false,
	      center = centerProp || options.pulsate,
	      fakeElement = false // For test purposes
	    } = options;
	    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {
	      ignoringMouseDown.current = false;
	      return;
	    }
	    if ((event == null ? void 0 : event.type) === 'touchstart') {
	      ignoringMouseDown.current = true;
	    }
	    const element = fakeElement ? null : container.current;
	    const rect = element ? element.getBoundingClientRect() : {
	      width: 0,
	      height: 0,
	      left: 0,
	      top: 0
	    };

	    // Get the size of the ripple
	    let rippleX;
	    let rippleY;
	    let rippleSize;
	    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
	      rippleX = Math.round(rect.width / 2);
	      rippleY = Math.round(rect.height / 2);
	    } else {
	      const {
	        clientX,
	        clientY
	      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;
	      rippleX = Math.round(clientX - rect.left);
	      rippleY = Math.round(clientY - rect.top);
	    }
	    if (center) {
	      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);

	      // For some reason the animation is broken on Mobile Chrome if the size is even.
	      if (rippleSize % 2 === 0) {
	        rippleSize += 1;
	      }
	    } else {
	      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
	      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
	      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);
	    }

	    // Touche devices
	    if (event != null && event.touches) {
	      // check that this isn't another touchstart due to multitouch
	      // otherwise we will only clear a single timer when unmounting while two
	      // are running
	      if (startTimerCommit.current === null) {
	        // Prepare the ripple effect.
	        startTimerCommit.current = () => {
	          startCommit({
	            pulsate,
	            rippleX,
	            rippleY,
	            rippleSize,
	            cb
	          });
	        };
	        // Delay the execution of the ripple effect.
	        // We have to make a tradeoff with this delay value.
	        startTimer.start(DELAY_RIPPLE, () => {
	          if (startTimerCommit.current) {
	            startTimerCommit.current();
	            startTimerCommit.current = null;
	          }
	        });
	      }
	    } else {
	      startCommit({
	        pulsate,
	        rippleX,
	        rippleY,
	        rippleSize,
	        cb
	      });
	    }
	  }, [centerProp, startCommit, startTimer]);
	  const pulsate = reactExports.useCallback(() => {
	    start({}, {
	      pulsate: true
	    });
	  }, [start]);
	  const stop = reactExports.useCallback((event, cb) => {
	    startTimer.clear();

	    // The touch interaction occurs too quickly.
	    // We still want to show ripple effect.
	    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {
	      startTimerCommit.current();
	      startTimerCommit.current = null;
	      startTimer.start(0, () => {
	        stop(event, cb);
	      });
	      return;
	    }
	    startTimerCommit.current = null;
	    setRipples(oldRipples => {
	      if (oldRipples.length > 0) {
	        return oldRipples.slice(1);
	      }
	      return oldRipples;
	    });
	    rippleCallback.current = cb;
	  }, [startTimer]);
	  reactExports.useImperativeHandle(ref, () => ({
	    pulsate,
	    start,
	    stop
	  }), [pulsate, start, stop]);
	  return /*#__PURE__*/jsxRuntimeExports.jsx(TouchRippleRoot, _extends$2({
	    className: clsx(touchRippleClasses$1.root, classes.root, className),
	    ref: container
	  }, other, {
	    children: /*#__PURE__*/jsxRuntimeExports.jsx(TransitionGroup$1, {
	      component: null,
	      exit: true,
	      children: ripples
	    })
	  }));
	});
	TouchRipple.propTypes = {
	  /**
	   * If `true`, the ripple starts at the center of the component
	   * rather than at the point of interaction.
	   */
	  center: PropTypes.bool,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * @ignore
	   */
	  className: PropTypes.string
	} ;
	var TouchRipple$1 = TouchRipple;

	function getButtonBaseUtilityClass(slot) {
	  return generateUtilityClass('MuiButtonBase', slot);
	}
	const buttonBaseClasses = generateUtilityClasses('MuiButtonBase', ['root', 'disabled', 'focusVisible']);
	var buttonBaseClasses$1 = buttonBaseClasses;

	const _excluded$5 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"];
	const useUtilityClasses$4 = ownerState => {
	  const {
	    disabled,
	    focusVisible,
	    focusVisibleClassName,
	    classes
	  } = ownerState;
	  const slots = {
	    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']
	  };
	  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);
	  if (focusVisible && focusVisibleClassName) {
	    composedClasses.root += ` ${focusVisibleClassName}`;
	  }
	  return composedClasses;
	};
	const ButtonBaseRoot = styled$1('button', {
	  name: 'MuiButtonBase',
	  slot: 'Root',
	  overridesResolver: (props, styles) => styles.root
	})({
	  display: 'inline-flex',
	  alignItems: 'center',
	  justifyContent: 'center',
	  position: 'relative',
	  boxSizing: 'border-box',
	  WebkitTapHighlightColor: 'transparent',
	  backgroundColor: 'transparent',
	  // Reset default value
	  // We disable the focus ring for mouse, touch and keyboard users.
	  outline: 0,
	  border: 0,
	  margin: 0,
	  // Remove the margin in Safari
	  borderRadius: 0,
	  padding: 0,
	  // Remove the padding in Firefox
	  cursor: 'pointer',
	  userSelect: 'none',
	  verticalAlign: 'middle',
	  MozAppearance: 'none',
	  // Reset
	  WebkitAppearance: 'none',
	  // Reset
	  textDecoration: 'none',
	  // So we take precedent over the style of a native <a /> element.
	  color: 'inherit',
	  '&::-moz-focus-inner': {
	    borderStyle: 'none' // Remove Firefox dotted outline.
	  },
	  [`&.${buttonBaseClasses$1.disabled}`]: {
	    pointerEvents: 'none',
	    // Disable link interactions
	    cursor: 'default'
	  },
	  '@media print': {
	    colorAdjust: 'exact'
	  }
	});

	/**
	 * `ButtonBase` contains as few styles as possible.
	 * It aims to be a simple building block for creating a button.
	 * It contains a load of style reset and some focus/ripple logic.
	 */
	const ButtonBase = /*#__PURE__*/reactExports.forwardRef(function ButtonBase(inProps, ref) {
	  const props = useThemeProps({
	    props: inProps,
	    name: 'MuiButtonBase'
	  });
	  const {
	      action,
	      centerRipple = false,
	      children,
	      className,
	      component = 'button',
	      disabled = false,
	      disableRipple = false,
	      disableTouchRipple = false,
	      focusRipple = false,
	      LinkComponent = 'a',
	      onBlur,
	      onClick,
	      onContextMenu,
	      onDragLeave,
	      onFocus,
	      onFocusVisible,
	      onKeyDown,
	      onKeyUp,
	      onMouseDown,
	      onMouseLeave,
	      onMouseUp,
	      onTouchEnd,
	      onTouchMove,
	      onTouchStart,
	      tabIndex = 0,
	      TouchRippleProps,
	      touchRippleRef,
	      type
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$5);
	  const buttonRef = reactExports.useRef(null);
	  const rippleRef = reactExports.useRef(null);
	  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);
	  const {
	    isFocusVisibleRef,
	    onFocus: handleFocusVisible,
	    onBlur: handleBlurVisible,
	    ref: focusVisibleRef
	  } = useIsFocusVisible();
	  const [focusVisible, setFocusVisible] = reactExports.useState(false);
	  if (disabled && focusVisible) {
	    setFocusVisible(false);
	  }
	  reactExports.useImperativeHandle(action, () => ({
	    focusVisible: () => {
	      setFocusVisible(true);
	      buttonRef.current.focus();
	    }
	  }), []);
	  const [mountedState, setMountedState] = reactExports.useState(false);
	  reactExports.useEffect(() => {
	    setMountedState(true);
	  }, []);
	  const enableTouchRipple = mountedState && !disableRipple && !disabled;
	  reactExports.useEffect(() => {
	    if (focusVisible && focusRipple && !disableRipple && mountedState) {
	      rippleRef.current.pulsate();
	    }
	  }, [disableRipple, focusRipple, focusVisible, mountedState]);
	  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {
	    return useEventCallback(event => {
	      if (eventCallback) {
	        eventCallback(event);
	      }
	      const ignore = skipRippleAction;
	      if (!ignore && rippleRef.current) {
	        rippleRef.current[rippleAction](event);
	      }
	      return true;
	    });
	  }
	  const handleMouseDown = useRippleHandler('start', onMouseDown);
	  const handleContextMenu = useRippleHandler('stop', onContextMenu);
	  const handleDragLeave = useRippleHandler('stop', onDragLeave);
	  const handleMouseUp = useRippleHandler('stop', onMouseUp);
	  const handleMouseLeave = useRippleHandler('stop', event => {
	    if (focusVisible) {
	      event.preventDefault();
	    }
	    if (onMouseLeave) {
	      onMouseLeave(event);
	    }
	  });
	  const handleTouchStart = useRippleHandler('start', onTouchStart);
	  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);
	  const handleTouchMove = useRippleHandler('stop', onTouchMove);
	  const handleBlur = useRippleHandler('stop', event => {
	    handleBlurVisible(event);
	    if (isFocusVisibleRef.current === false) {
	      setFocusVisible(false);
	    }
	    if (onBlur) {
	      onBlur(event);
	    }
	  }, false);
	  const handleFocus = useEventCallback(event => {
	    // Fix for https://github.com/facebook/react/issues/7769
	    if (!buttonRef.current) {
	      buttonRef.current = event.currentTarget;
	    }
	    handleFocusVisible(event);
	    if (isFocusVisibleRef.current === true) {
	      setFocusVisible(true);
	      if (onFocusVisible) {
	        onFocusVisible(event);
	      }
	    }
	    if (onFocus) {
	      onFocus(event);
	    }
	  });
	  const isNonNativeButton = () => {
	    const button = buttonRef.current;
	    return component && component !== 'button' && !(button.tagName === 'A' && button.href);
	  };

	  /**
	   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat
	   */
	  const keydownRef = reactExports.useRef(false);
	  const handleKeyDown = useEventCallback(event => {
	    // Check if key is already down to avoid repeats being counted as multiple activations
	    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {
	      keydownRef.current = true;
	      rippleRef.current.stop(event, () => {
	        rippleRef.current.start(event);
	      });
	    }
	    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {
	      event.preventDefault();
	    }
	    if (onKeyDown) {
	      onKeyDown(event);
	    }

	    // Keyboard accessibility for non interactive elements
	    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {
	      event.preventDefault();
	      if (onClick) {
	        onClick(event);
	      }
	    }
	  });
	  const handleKeyUp = useEventCallback(event => {
	    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed
	    // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0
	    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {
	      keydownRef.current = false;
	      rippleRef.current.stop(event, () => {
	        rippleRef.current.pulsate(event);
	      });
	    }
	    if (onKeyUp) {
	      onKeyUp(event);
	    }

	    // Keyboard accessibility for non interactive elements
	    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {
	      onClick(event);
	    }
	  });
	  let ComponentProp = component;
	  if (ComponentProp === 'button' && (other.href || other.to)) {
	    ComponentProp = LinkComponent;
	  }
	  const buttonProps = {};
	  if (ComponentProp === 'button') {
	    buttonProps.type = type === undefined ? 'button' : type;
	    buttonProps.disabled = disabled;
	  } else {
	    if (!other.href && !other.to) {
	      buttonProps.role = 'button';
	    }
	    if (disabled) {
	      buttonProps['aria-disabled'] = disabled;
	    }
	  }
	  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);
	  {
	    // eslint-disable-next-line react-hooks/rules-of-hooks
	    reactExports.useEffect(() => {
	      if (enableTouchRipple && !rippleRef.current) {
	        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\n'));
	      }
	    }, [enableTouchRipple]);
	  }
	  const ownerState = _extends$2({}, props, {
	    centerRipple,
	    component,
	    disabled,
	    disableRipple,
	    disableTouchRipple,
	    focusRipple,
	    tabIndex,
	    focusVisible
	  });
	  const classes = useUtilityClasses$4(ownerState);
	  return /*#__PURE__*/jsxRuntimeExports.jsxs(ButtonBaseRoot, _extends$2({
	    as: ComponentProp,
	    className: clsx(classes.root, className),
	    ownerState: ownerState,
	    onBlur: handleBlur,
	    onClick: onClick,
	    onContextMenu: handleContextMenu,
	    onFocus: handleFocus,
	    onKeyDown: handleKeyDown,
	    onKeyUp: handleKeyUp,
	    onMouseDown: handleMouseDown,
	    onMouseLeave: handleMouseLeave,
	    onMouseUp: handleMouseUp,
	    onDragLeave: handleDragLeave,
	    onTouchEnd: handleTouchEnd,
	    onTouchMove: handleTouchMove,
	    onTouchStart: handleTouchStart,
	    ref: handleRef,
	    tabIndex: disabled ? -1 : tabIndex,
	    type: type
	  }, buttonProps, other, {
	    children: [children, enableTouchRipple ? /*#__PURE__*/
	    /* TouchRipple is only needed client-side, x2 boost on the server. */
	    jsxRuntimeExports.jsx(TouchRipple$1, _extends$2({
	      ref: handleRippleRef,
	      center: centerRipple
	    }, TouchRippleProps)) : null]
	  }));
	});
	ButtonBase.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * A ref for imperative actions.
	   * It currently only supports `focusVisible()` action.
	   */
	  action: refType$1,
	  /**
	   * If `true`, the ripples are centered.
	   * They won't start at the cursor interaction position.
	   * @default false
	   */
	  centerRipple: PropTypes.bool,
	  /**
	   * The content of the component.
	   */
	  children: PropTypes.node,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * @ignore
	   */
	  className: PropTypes.string,
	  /**
	   * The component used for the root node.
	   * Either a string to use a HTML element or a component.
	   */
	  component: elementTypeAcceptingRef$1,
	  /**
	   * If `true`, the component is disabled.
	   * @default false
	   */
	  disabled: PropTypes.bool,
	  /**
	   * If `true`, the ripple effect is disabled.
	   *
	   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
	   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
	   * @default false
	   */
	  disableRipple: PropTypes.bool,
	  /**
	   * If `true`, the touch ripple effect is disabled.
	   * @default false
	   */
	  disableTouchRipple: PropTypes.bool,
	  /**
	   * If `true`, the base button will have a keyboard focus ripple.
	   * @default false
	   */
	  focusRipple: PropTypes.bool,
	  /**
	   * This prop can help identify which element has keyboard focus.
	   * The class name will be applied when the element gains the focus through keyboard interaction.
	   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
	   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
	   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
	   * if needed.
	   */
	  focusVisibleClassName: PropTypes.string,
	  /**
	   * @ignore
	   */
	  href: PropTypes /* @typescript-to-proptypes-ignore */.any,
	  /**
	   * The component used to render a link when the `href` prop is provided.
	   * @default 'a'
	   */
	  LinkComponent: PropTypes.elementType,
	  /**
	   * @ignore
	   */
	  onBlur: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onClick: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onContextMenu: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onDragLeave: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onFocus: PropTypes.func,
	  /**
	   * Callback fired when the component is focused with a keyboard.
	   * We trigger a `onFocus` callback too.
	   */
	  onFocusVisible: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onKeyDown: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onKeyUp: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onMouseDown: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onMouseLeave: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onMouseUp: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onTouchEnd: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onTouchMove: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onTouchStart: PropTypes.func,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
	  /**
	   * @default 0
	   */
	  tabIndex: PropTypes.number,
	  /**
	   * Props applied to the `TouchRipple` element.
	   */
	  TouchRippleProps: PropTypes.object,
	  /**
	   * A ref that points to the `TouchRipple` element.
	   */
	  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({
	    current: PropTypes.shape({
	      pulsate: PropTypes.func.isRequired,
	      start: PropTypes.func.isRequired,
	      stop: PropTypes.func.isRequired
	    })
	  })]),
	  /**
	   * @ignore
	   */
	  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])
	} ;
	var ButtonBase$1 = ButtonBase;

	const _excluded$4 = ["onChange", "maxRows", "minRows", "style", "value"];
	function getStyleValue(value) {
	  return parseInt(value, 10) || 0;
	}
	const styles = {
	  shadow: {
	    // Visibility needed to hide the extra text area on iPads
	    visibility: 'hidden',
	    // Remove from the content flow
	    position: 'absolute',
	    // Ignore the scrollbar width
	    overflow: 'hidden',
	    height: 0,
	    top: 0,
	    left: 0,
	    // Create a new layer, increase the isolation of the computed values
	    transform: 'translateZ(0)'
	  }
	};
	function isEmpty(obj) {
	  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflowing;
	}

	/**
	 *
	 * Demos:
	 *
	 * - [Textarea Autosize](https://mui.com/base-ui/react-textarea-autosize/)
	 * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)
	 *
	 * API:
	 *
	 * - [TextareaAutosize API](https://mui.com/base-ui/react-textarea-autosize/components-api/#textarea-autosize)
	 */
	const TextareaAutosize = /*#__PURE__*/reactExports.forwardRef(function TextareaAutosize(props, forwardedRef) {
	  const {
	      onChange,
	      maxRows,
	      minRows = 1,
	      style,
	      value
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$4);
	  const {
	    current: isControlled
	  } = reactExports.useRef(value != null);
	  const inputRef = reactExports.useRef(null);
	  const handleRef = useForkRef(forwardedRef, inputRef);
	  const shadowRef = reactExports.useRef(null);
	  const calculateTextareaStyles = reactExports.useCallback(() => {
	    const input = inputRef.current;
	    const containerWindow = ownerWindow(input);
	    const computedStyle = containerWindow.getComputedStyle(input);

	    // If input's width is shrunk and it's not visible, don't sync height.
	    if (computedStyle.width === '0px') {
	      return {
	        outerHeightStyle: 0,
	        overflowing: false
	      };
	    }
	    const inputShallow = shadowRef.current;
	    inputShallow.style.width = computedStyle.width;
	    inputShallow.value = input.value || props.placeholder || 'x';
	    if (inputShallow.value.slice(-1) === '\n') {
	      // Certain fonts which overflow the line height will cause the textarea
	      // to report a different scrollHeight depending on whether the last line
	      // is empty. Make it non-empty to avoid this issue.
	      inputShallow.value += ' ';
	    }
	    const boxSizing = computedStyle.boxSizing;
	    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);
	    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);

	    // The height of the inner content
	    const innerHeight = inputShallow.scrollHeight;

	    // Measure height of a textarea with a single row
	    inputShallow.value = 'x';
	    const singleRowHeight = inputShallow.scrollHeight;

	    // The height of the outer content
	    let outerHeight = innerHeight;
	    if (minRows) {
	      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
	    }
	    if (maxRows) {
	      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
	    }
	    outerHeight = Math.max(outerHeight, singleRowHeight);

	    // Take the box sizing into account for applying this value as a style.
	    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);
	    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;
	    return {
	      outerHeightStyle,
	      overflowing
	    };
	  }, [maxRows, minRows, props.placeholder]);
	  const syncHeight = reactExports.useCallback(() => {
	    const textareaStyles = calculateTextareaStyles();
	    if (isEmpty(textareaStyles)) {
	      return;
	    }
	    const input = inputRef.current;
	    input.style.height = `${textareaStyles.outerHeightStyle}px`;
	    input.style.overflow = textareaStyles.overflowing ? 'hidden' : '';
	  }, [calculateTextareaStyles]);
	  useEnhancedEffect$1(() => {
	    const handleResize = () => {
	      syncHeight();
	    };
	    // Workaround a "ResizeObserver loop completed with undelivered notifications" error
	    // in test.
	    // Note that we might need to use this logic in production per https://github.com/WICG/resize-observer/issues/38
	    // Also see https://github.com/mui/mui-x/issues/8733
	    let rAF;
	    const debounceHandleResize = debounce(handleResize);
	    const input = inputRef.current;
	    const containerWindow = ownerWindow(input);
	    containerWindow.addEventListener('resize', debounceHandleResize);
	    let resizeObserver;
	    if (typeof ResizeObserver !== 'undefined') {
	      resizeObserver = new ResizeObserver(handleResize);
	      resizeObserver.observe(input);
	    }
	    return () => {
	      debounceHandleResize.clear();
	      cancelAnimationFrame(rAF);
	      containerWindow.removeEventListener('resize', debounceHandleResize);
	      if (resizeObserver) {
	        resizeObserver.disconnect();
	      }
	    };
	  }, [calculateTextareaStyles, syncHeight]);
	  useEnhancedEffect$1(() => {
	    syncHeight();
	  });
	  const handleChange = event => {
	    if (!isControlled) {
	      syncHeight();
	    }
	    if (onChange) {
	      onChange(event);
	    }
	  };
	  return /*#__PURE__*/jsxRuntimeExports.jsxs(reactExports.Fragment, {
	    children: [/*#__PURE__*/jsxRuntimeExports.jsx("textarea", _extends$2({
	      value: value,
	      onChange: handleChange,
	      ref: handleRef
	      // Apply the rows prop to get a "correct" first SSR paint
	      ,

	      rows: minRows
	    }, other)), /*#__PURE__*/jsxRuntimeExports.jsx("textarea", {
	      "aria-hidden": true,
	      className: props.className,
	      readOnly: true,
	      ref: shadowRef,
	      tabIndex: -1,
	      style: _extends$2({}, styles.shadow, style, {
	        paddingTop: 0,
	        paddingBottom: 0
	      })
	    })]
	  });
	});
	TextareaAutosize.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * @ignore
	   */
	  className: PropTypes.string,
	  /**
	   * Maximum number of rows to display.
	   */
	  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * Minimum number of rows to display.
	   * @default 1
	   */
	  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * @ignore
	   */
	  onChange: PropTypes.func,
	  /**
	   * @ignore
	   */
	  placeholder: PropTypes.string,
	  /**
	   * @ignore
	   */
	  style: PropTypes.object,
	  /**
	   * @ignore
	   */
	  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])
	} ;

	function getTypographyUtilityClass(slot) {
	  return generateUtilityClass('MuiTypography', slot);
	}
	generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);

	const _excluded$3 = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];
	const useUtilityClasses$3 = ownerState => {
	  const {
	    align,
	    gutterBottom,
	    noWrap,
	    paragraph,
	    variant,
	    classes
	  } = ownerState;
	  const slots = {
	    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize$1(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']
	  };
	  return composeClasses(slots, getTypographyUtilityClass, classes);
	};
	const TypographyRoot = styled$1('span', {
	  name: 'MuiTypography',
	  slot: 'Root',
	  overridesResolver: (props, styles) => {
	    const {
	      ownerState
	    } = props;
	    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize$1(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];
	  }
	})(({
	  theme,
	  ownerState
	}) => _extends$2({
	  margin: 0
	}, ownerState.variant === 'inherit' && {
	  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
	  font: 'inherit'
	}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {
	  textAlign: ownerState.align
	}, ownerState.noWrap && {
	  overflow: 'hidden',
	  textOverflow: 'ellipsis',
	  whiteSpace: 'nowrap'
	}, ownerState.gutterBottom && {
	  marginBottom: '0.35em'
	}, ownerState.paragraph && {
	  marginBottom: 16
	}));
	const defaultVariantMapping = {
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  subtitle1: 'h6',
	  subtitle2: 'h6',
	  body1: 'p',
	  body2: 'p',
	  inherit: 'p'
	};

	// TODO v6: deprecate these color values in v5.x and remove the transformation in v6
	const colorTransformations = {
	  primary: 'primary.main',
	  textPrimary: 'text.primary',
	  secondary: 'secondary.main',
	  textSecondary: 'text.secondary',
	  error: 'error.main'
	};
	const transformDeprecatedColors = color => {
	  return colorTransformations[color] || color;
	};
	const Typography = /*#__PURE__*/reactExports.forwardRef(function Typography(inProps, ref) {
	  const themeProps = useThemeProps({
	    props: inProps,
	    name: 'MuiTypography'
	  });
	  const color = transformDeprecatedColors(themeProps.color);
	  const props = extendSxProp(_extends$2({}, themeProps, {
	    color
	  }));
	  const {
	      align = 'inherit',
	      className,
	      component,
	      gutterBottom = false,
	      noWrap = false,
	      paragraph = false,
	      variant = 'body1',
	      variantMapping = defaultVariantMapping
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$3);
	  const ownerState = _extends$2({}, props, {
	    align,
	    color,
	    className,
	    component,
	    gutterBottom,
	    noWrap,
	    paragraph,
	    variant,
	    variantMapping
	  });
	  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
	  const classes = useUtilityClasses$3(ownerState);
	  return /*#__PURE__*/jsxRuntimeExports.jsx(TypographyRoot, _extends$2({
	    as: Component,
	    ref: ref,
	    ownerState: ownerState,
	    className: clsx(classes.root, className)
	  }, other));
	});
	Typography.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * Set the text-align on the component.
	   * @default 'inherit'
	   */
	  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),
	  /**
	   * The content of the component.
	   */
	  children: PropTypes.node,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * @ignore
	   */
	  className: PropTypes.string,
	  /**
	   * The component used for the root node.
	   * Either a string to use a HTML element or a component.
	   */
	  component: PropTypes.elementType,
	  /**
	   * If `true`, the text will have a bottom margin.
	   * @default false
	   */
	  gutterBottom: PropTypes.bool,
	  /**
	   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
	   *
	   * Note that text overflow can only happen with block or inline-block level elements
	   * (the element needs to have a width in order to overflow).
	   * @default false
	   */
	  noWrap: PropTypes.bool,
	  /**
	   * If `true`, the element will be a paragraph element.
	   * @default false
	   */
	  paragraph: PropTypes.bool,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
	  /**
	   * Applies the theme typography styles.
	   * @default 'body1'
	   */
	  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),
	  /**
	   * The component maps the variant prop to a range of different HTML element types.
	   * For instance, subtitle1 to `<h6>`.
	   * If you wish to change that mapping, you can provide your own.
	   * Alternatively, you can use the `component` prop.
	   * @default {
	   *   h1: 'h1',
	   *   h2: 'h2',
	   *   h3: 'h3',
	   *   h4: 'h4',
	   *   h5: 'h5',
	   *   h6: 'h6',
	   *   subtitle1: 'h6',
	   *   subtitle2: 'h6',
	   *   body1: 'p',
	   *   body2: 'p',
	   *   inherit: 'p',
	   * }
	   */
	  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object
	} ;
	var Typography$1 = Typography;

	function formControlState({
	  props,
	  states,
	  muiFormControl
	}) {
	  return states.reduce((acc, state) => {
	    acc[state] = props[state];
	    if (muiFormControl) {
	      if (typeof props[state] === 'undefined') {
	        acc[state] = muiFormControl[state];
	      }
	    }
	    return acc;
	  }, {});
	}

	/**
	 * @ignore - internal component.
	 */
	const FormControlContext = /*#__PURE__*/reactExports.createContext(undefined);
	{
	  FormControlContext.displayName = 'FormControlContext';
	}
	var FormControlContext$1 = FormControlContext;

	function useFormControl() {
	  return reactExports.useContext(FormControlContext$1);
	}

	function GlobalStyles(props) {
	  return /*#__PURE__*/jsxRuntimeExports.jsx(GlobalStyles$1, _extends$2({}, props, {
	    defaultTheme: defaultTheme$2,
	    themeId: THEME_ID
	  }));
	}
	GlobalStyles.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * The styles you want to apply globally.
	   */
	  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])
	} ;

	// Supports determination of isControlled().
	// Controlled input accepts its current value as a prop.
	//
	// @see https://facebook.github.io/react/docs/forms.html#controlled-components
	// @param value
	// @returns {boolean} true if string (including '') or number (including zero)
	function hasValue(value) {
	  return value != null && !(Array.isArray(value) && value.length === 0);
	}

	// Determine if field is empty or filled.
	// Response determines if label is presented above field or as placeholder.
	//
	// @param obj
	// @param SSR
	// @returns {boolean} False when not present or empty string.
	//                    True when any number or string with length.
	function isFilled(obj, SSR = false) {
	  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
	}

	function getInputBaseUtilityClass(slot) {
	  return generateUtilityClass('MuiInputBase', slot);
	}
	const inputBaseClasses = generateUtilityClasses('MuiInputBase', ['root', 'formControl', 'focused', 'disabled', 'adornedStart', 'adornedEnd', 'error', 'sizeSmall', 'multiline', 'colorSecondary', 'fullWidth', 'hiddenLabel', 'readOnly', 'input', 'inputSizeSmall', 'inputMultiline', 'inputTypeSearch', 'inputAdornedStart', 'inputAdornedEnd', 'inputHiddenLabel']);
	var inputBaseClasses$1 = inputBaseClasses;

	const _excluded$2 = ["aria-describedby", "autoComplete", "autoFocus", "className", "color", "components", "componentsProps", "defaultValue", "disabled", "disableInjectingGlobalStyles", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "maxRows", "minRows", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "size", "slotProps", "slots", "startAdornment", "type", "value"];
	const rootOverridesResolver = (props, styles) => {
	  const {
	    ownerState
	  } = props;
	  return [styles.root, ownerState.formControl && styles.formControl, ownerState.startAdornment && styles.adornedStart, ownerState.endAdornment && styles.adornedEnd, ownerState.error && styles.error, ownerState.size === 'small' && styles.sizeSmall, ownerState.multiline && styles.multiline, ownerState.color && styles[`color${capitalize$1(ownerState.color)}`], ownerState.fullWidth && styles.fullWidth, ownerState.hiddenLabel && styles.hiddenLabel];
	};
	const inputOverridesResolver = (props, styles) => {
	  const {
	    ownerState
	  } = props;
	  return [styles.input, ownerState.size === 'small' && styles.inputSizeSmall, ownerState.multiline && styles.inputMultiline, ownerState.type === 'search' && styles.inputTypeSearch, ownerState.startAdornment && styles.inputAdornedStart, ownerState.endAdornment && styles.inputAdornedEnd, ownerState.hiddenLabel && styles.inputHiddenLabel];
	};
	const useUtilityClasses$2 = ownerState => {
	  const {
	    classes,
	    color,
	    disabled,
	    error,
	    endAdornment,
	    focused,
	    formControl,
	    fullWidth,
	    hiddenLabel,
	    multiline,
	    readOnly,
	    size,
	    startAdornment,
	    type
	  } = ownerState;
	  const slots = {
	    root: ['root', `color${capitalize$1(color)}`, disabled && 'disabled', error && 'error', fullWidth && 'fullWidth', focused && 'focused', formControl && 'formControl', size && size !== 'medium' && `size${capitalize$1(size)}`, multiline && 'multiline', startAdornment && 'adornedStart', endAdornment && 'adornedEnd', hiddenLabel && 'hiddenLabel', readOnly && 'readOnly'],
	    input: ['input', disabled && 'disabled', type === 'search' && 'inputTypeSearch', multiline && 'inputMultiline', size === 'small' && 'inputSizeSmall', hiddenLabel && 'inputHiddenLabel', startAdornment && 'inputAdornedStart', endAdornment && 'inputAdornedEnd', readOnly && 'readOnly']
	  };
	  return composeClasses(slots, getInputBaseUtilityClass, classes);
	};
	const InputBaseRoot = styled$1('div', {
	  name: 'MuiInputBase',
	  slot: 'Root',
	  overridesResolver: rootOverridesResolver
	})(({
	  theme,
	  ownerState
	}) => _extends$2({}, theme.typography.body1, {
	  color: (theme.vars || theme).palette.text.primary,
	  lineHeight: '1.4375em',
	  // 23px
	  boxSizing: 'border-box',
	  // Prevent padding issue with fullWidth.
	  position: 'relative',
	  cursor: 'text',
	  display: 'inline-flex',
	  alignItems: 'center',
	  [`&.${inputBaseClasses$1.disabled}`]: {
	    color: (theme.vars || theme).palette.text.disabled,
	    cursor: 'default'
	  }
	}, ownerState.multiline && _extends$2({
	  padding: '4px 0 5px'
	}, ownerState.size === 'small' && {
	  paddingTop: 1
	}), ownerState.fullWidth && {
	  width: '100%'
	}));
	const InputBaseComponent = styled$1('input', {
	  name: 'MuiInputBase',
	  slot: 'Input',
	  overridesResolver: inputOverridesResolver
	})(({
	  theme,
	  ownerState
	}) => {
	  const light = theme.palette.mode === 'light';
	  const placeholder = _extends$2({
	    color: 'currentColor'
	  }, theme.vars ? {
	    opacity: theme.vars.opacity.inputPlaceholder
	  } : {
	    opacity: light ? 0.42 : 0.5
	  }, {
	    transition: theme.transitions.create('opacity', {
	      duration: theme.transitions.duration.shorter
	    })
	  });
	  const placeholderHidden = {
	    opacity: '0 !important'
	  };
	  const placeholderVisible = theme.vars ? {
	    opacity: theme.vars.opacity.inputPlaceholder
	  } : {
	    opacity: light ? 0.42 : 0.5
	  };
	  return _extends$2({
	    font: 'inherit',
	    letterSpacing: 'inherit',
	    color: 'currentColor',
	    padding: '4px 0 5px',
	    border: 0,
	    boxSizing: 'content-box',
	    background: 'none',
	    height: '1.4375em',
	    // Reset 23pxthe native input line-height
	    margin: 0,
	    // Reset for Safari
	    WebkitTapHighlightColor: 'transparent',
	    display: 'block',
	    // Make the flex item shrink with Firefox
	    minWidth: 0,
	    width: '100%',
	    // Fix IE11 width issue
	    animationName: 'mui-auto-fill-cancel',
	    animationDuration: '10ms',
	    '&::-webkit-input-placeholder': placeholder,
	    '&::-moz-placeholder': placeholder,
	    // Firefox 19+
	    '&:-ms-input-placeholder': placeholder,
	    // IE11
	    '&::-ms-input-placeholder': placeholder,
	    // Edge
	    '&:focus': {
	      outline: 0
	    },
	    // Reset Firefox invalid required input style
	    '&:invalid': {
	      boxShadow: 'none'
	    },
	    '&::-webkit-search-decoration': {
	      // Remove the padding when type=search.
	      WebkitAppearance: 'none'
	    },
	    // Show and hide the placeholder logic
	    [`label[data-shrink=false] + .${inputBaseClasses$1.formControl} &`]: {
	      '&::-webkit-input-placeholder': placeholderHidden,
	      '&::-moz-placeholder': placeholderHidden,
	      // Firefox 19+
	      '&:-ms-input-placeholder': placeholderHidden,
	      // IE11
	      '&::-ms-input-placeholder': placeholderHidden,
	      // Edge
	      '&:focus::-webkit-input-placeholder': placeholderVisible,
	      '&:focus::-moz-placeholder': placeholderVisible,
	      // Firefox 19+
	      '&:focus:-ms-input-placeholder': placeholderVisible,
	      // IE11
	      '&:focus::-ms-input-placeholder': placeholderVisible // Edge
	    },
	    [`&.${inputBaseClasses$1.disabled}`]: {
	      opacity: 1,
	      // Reset iOS opacity
	      WebkitTextFillColor: (theme.vars || theme).palette.text.disabled // Fix opacity Safari bug
	    },
	    '&:-webkit-autofill': {
	      animationDuration: '5000s',
	      animationName: 'mui-auto-fill'
	    }
	  }, ownerState.size === 'small' && {
	    paddingTop: 1
	  }, ownerState.multiline && {
	    height: 'auto',
	    resize: 'none',
	    padding: 0,
	    paddingTop: 0
	  }, ownerState.type === 'search' && {
	    // Improve type search style.
	    MozAppearance: 'textfield'
	  });
	});
	const inputGlobalStyles = /*#__PURE__*/jsxRuntimeExports.jsx(GlobalStyles, {
	  styles: {
	    '@keyframes mui-auto-fill': {
	      from: {
	        display: 'block'
	      }
	    },
	    '@keyframes mui-auto-fill-cancel': {
	      from: {
	        display: 'block'
	      }
	    }
	  }
	});

	/**
	 * `InputBase` contains as few styles as possible.
	 * It aims to be a simple building block for creating an input.
	 * It contains a load of style reset and some state logic.
	 */
	const InputBase = /*#__PURE__*/reactExports.forwardRef(function InputBase(inProps, ref) {
	  var _slotProps$input;
	  const props = useThemeProps({
	    props: inProps,
	    name: 'MuiInputBase'
	  });
	  const {
	      'aria-describedby': ariaDescribedby,
	      autoComplete,
	      autoFocus,
	      className,
	      components = {},
	      componentsProps = {},
	      defaultValue,
	      disabled,
	      disableInjectingGlobalStyles,
	      endAdornment,
	      fullWidth = false,
	      id,
	      inputComponent = 'input',
	      inputProps: inputPropsProp = {},
	      inputRef: inputRefProp,
	      maxRows,
	      minRows,
	      multiline = false,
	      name,
	      onBlur,
	      onChange,
	      onClick,
	      onFocus,
	      onKeyDown,
	      onKeyUp,
	      placeholder,
	      readOnly,
	      renderSuffix,
	      rows,
	      slotProps = {},
	      slots = {},
	      startAdornment,
	      type = 'text',
	      value: valueProp
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$2);
	  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;
	  const {
	    current: isControlled
	  } = reactExports.useRef(value != null);
	  const inputRef = reactExports.useRef();
	  const handleInputRefWarning = reactExports.useCallback(instance => {
	    {
	      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {
	        console.error(['MUI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\n'));
	      }
	    }
	  }, []);
	  const handleInputRef = useForkRef(inputRef, inputRefProp, inputPropsProp.ref, handleInputRefWarning);
	  const [focused, setFocused] = reactExports.useState(false);
	  const muiFormControl = useFormControl();
	  {
	    // eslint-disable-next-line react-hooks/rules-of-hooks
	    reactExports.useEffect(() => {
	      if (muiFormControl) {
	        return muiFormControl.registerEffect();
	      }
	      return undefined;
	    }, [muiFormControl]);
	  }
	  const fcs = formControlState({
	    props,
	    muiFormControl,
	    states: ['color', 'disabled', 'error', 'hiddenLabel', 'size', 'required', 'filled']
	  });
	  fcs.focused = muiFormControl ? muiFormControl.focused : focused;

	  // The blur won't fire when the disabled state is set on a focused input.
	  // We need to book keep the focused state manually.
	  reactExports.useEffect(() => {
	    if (!muiFormControl && disabled && focused) {
	      setFocused(false);
	      if (onBlur) {
	        onBlur();
	      }
	    }
	  }, [muiFormControl, disabled, focused, onBlur]);
	  const onFilled = muiFormControl && muiFormControl.onFilled;
	  const onEmpty = muiFormControl && muiFormControl.onEmpty;
	  const checkDirty = reactExports.useCallback(obj => {
	    if (isFilled(obj)) {
	      if (onFilled) {
	        onFilled();
	      }
	    } else if (onEmpty) {
	      onEmpty();
	    }
	  }, [onFilled, onEmpty]);
	  useEnhancedEffect$1(() => {
	    if (isControlled) {
	      checkDirty({
	        value
	      });
	    }
	  }, [value, checkDirty, isControlled]);
	  const handleFocus = event => {
	    // Fix a bug with IE11 where the focus/blur events are triggered
	    // while the component is disabled.
	    if (fcs.disabled) {
	      event.stopPropagation();
	      return;
	    }
	    if (onFocus) {
	      onFocus(event);
	    }
	    if (inputPropsProp.onFocus) {
	      inputPropsProp.onFocus(event);
	    }
	    if (muiFormControl && muiFormControl.onFocus) {
	      muiFormControl.onFocus(event);
	    } else {
	      setFocused(true);
	    }
	  };
	  const handleBlur = event => {
	    if (onBlur) {
	      onBlur(event);
	    }
	    if (inputPropsProp.onBlur) {
	      inputPropsProp.onBlur(event);
	    }
	    if (muiFormControl && muiFormControl.onBlur) {
	      muiFormControl.onBlur(event);
	    } else {
	      setFocused(false);
	    }
	  };
	  const handleChange = (event, ...args) => {
	    if (!isControlled) {
	      const element = event.target || inputRef.current;
	      if (element == null) {
	        throw new Error(`MUI: Expected valid input target. Did you use a custom \`inputComponent\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` );
	      }
	      checkDirty({
	        value: element.value
	      });
	    }
	    if (inputPropsProp.onChange) {
	      inputPropsProp.onChange(event, ...args);
	    }

	    // Perform in the willUpdate
	    if (onChange) {
	      onChange(event, ...args);
	    }
	  };

	  // Check the input state on mount, in case it was filled by the user
	  // or auto filled by the browser before the hydration (for SSR).
	  reactExports.useEffect(() => {
	    checkDirty(inputRef.current);
	    // eslint-disable-next-line react-hooks/exhaustive-deps
	  }, []);
	  const handleClick = event => {
	    if (inputRef.current && event.currentTarget === event.target) {
	      inputRef.current.focus();
	    }
	    if (onClick) {
	      onClick(event);
	    }
	  };
	  let InputComponent = inputComponent;
	  let inputProps = inputPropsProp;
	  if (multiline && InputComponent === 'input') {
	    if (rows) {
	      {
	        if (minRows || maxRows) {
	          console.warn('MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');
	        }
	      }
	      inputProps = _extends$2({
	        type: undefined,
	        minRows: rows,
	        maxRows: rows
	      }, inputProps);
	    } else {
	      inputProps = _extends$2({
	        type: undefined,
	        maxRows,
	        minRows
	      }, inputProps);
	    }
	    InputComponent = TextareaAutosize;
	  }
	  const handleAutoFill = event => {
	    // Provide a fake value as Chrome might not let you access it for security reasons.
	    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {
	      value: 'x'
	    });
	  };
	  reactExports.useEffect(() => {
	    if (muiFormControl) {
	      muiFormControl.setAdornedStart(Boolean(startAdornment));
	    }
	  }, [muiFormControl, startAdornment]);
	  const ownerState = _extends$2({}, props, {
	    color: fcs.color || 'primary',
	    disabled: fcs.disabled,
	    endAdornment,
	    error: fcs.error,
	    focused: fcs.focused,
	    formControl: muiFormControl,
	    fullWidth,
	    hiddenLabel: fcs.hiddenLabel,
	    multiline,
	    size: fcs.size,
	    startAdornment,
	    type
	  });
	  const classes = useUtilityClasses$2(ownerState);
	  const Root = slots.root || components.Root || InputBaseRoot;
	  const rootProps = slotProps.root || componentsProps.root || {};
	  const Input = slots.input || components.Input || InputBaseComponent;
	  inputProps = _extends$2({}, inputProps, (_slotProps$input = slotProps.input) != null ? _slotProps$input : componentsProps.input);
	  return /*#__PURE__*/jsxRuntimeExports.jsxs(reactExports.Fragment, {
	    children: [!disableInjectingGlobalStyles && inputGlobalStyles, /*#__PURE__*/jsxRuntimeExports.jsxs(Root, _extends$2({}, rootProps, !isHostComponent(Root) && {
	      ownerState: _extends$2({}, ownerState, rootProps.ownerState)
	    }, {
	      ref: ref,
	      onClick: handleClick
	    }, other, {
	      className: clsx(classes.root, rootProps.className, className, readOnly && 'MuiInputBase-readOnly'),
	      children: [startAdornment, /*#__PURE__*/jsxRuntimeExports.jsx(FormControlContext$1.Provider, {
	        value: null,
	        children: /*#__PURE__*/jsxRuntimeExports.jsx(Input, _extends$2({
	          ownerState: ownerState,
	          "aria-invalid": fcs.error,
	          "aria-describedby": ariaDescribedby,
	          autoComplete: autoComplete,
	          autoFocus: autoFocus,
	          defaultValue: defaultValue,
	          disabled: fcs.disabled,
	          id: id,
	          onAnimationStart: handleAutoFill,
	          name: name,
	          placeholder: placeholder,
	          readOnly: readOnly,
	          required: fcs.required,
	          rows: rows,
	          value: value,
	          onKeyDown: onKeyDown,
	          onKeyUp: onKeyUp,
	          type: type
	        }, inputProps, !isHostComponent(Input) && {
	          as: InputComponent,
	          ownerState: _extends$2({}, ownerState, inputProps.ownerState)
	        }, {
	          ref: handleInputRef,
	          className: clsx(classes.input, inputProps.className, readOnly && 'MuiInputBase-readOnly'),
	          onBlur: handleBlur,
	          onChange: handleChange,
	          onFocus: handleFocus
	        }))
	      }), endAdornment, renderSuffix ? renderSuffix(_extends$2({}, fcs, {
	        startAdornment
	      })) : null]
	    }))]
	  });
	});
	InputBase.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * @ignore
	   */
	  'aria-describedby': PropTypes.string,
	  /**
	   * This prop helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
	   */
	  autoComplete: PropTypes.string,
	  /**
	   * If `true`, the `input` element is focused during the first mount.
	   */
	  autoFocus: PropTypes.bool,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * @ignore
	   */
	  className: PropTypes.string,
	  /**
	   * The color of the component.
	   * It supports both default and custom theme colors, which can be added as shown in the
	   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
	   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
	   */
	  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),
	  /**
	   * The components used for each slot inside.
	   *
	   * This prop is an alias for the `slots` prop.
	   * It's recommended to use the `slots` prop instead.
	   *
	   * @default {}
	   */
	  components: PropTypes.shape({
	    Input: PropTypes.elementType,
	    Root: PropTypes.elementType
	  }),
	  /**
	   * The extra props for the slot components.
	   * You can override the existing props or add new ones.
	   *
	   * This prop is an alias for the `slotProps` prop.
	   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
	   *
	   * @default {}
	   */
	  componentsProps: PropTypes.shape({
	    input: PropTypes.object,
	    root: PropTypes.object
	  }),
	  /**
	   * The default value. Use when the component is not controlled.
	   */
	  defaultValue: PropTypes.any,
	  /**
	   * If `true`, the component is disabled.
	   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
	   */
	  disabled: PropTypes.bool,
	  /**
	   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
	   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
	   * @default false
	   */
	  disableInjectingGlobalStyles: PropTypes.bool,
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: PropTypes.node,
	  /**
	   * If `true`, the `input` will indicate an error.
	   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
	   */
	  error: PropTypes.bool,
	  /**
	   * If `true`, the `input` will take up the full width of its container.
	   * @default false
	   */
	  fullWidth: PropTypes.bool,
	  /**
	   * The id of the `input` element.
	   */
	  id: PropTypes.string,
	  /**
	   * The component used for the `input` element.
	   * Either a string to use a HTML element or a component.
	   * @default 'input'
	   */
	  inputComponent: elementTypeAcceptingRef$1,
	  /**
	   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
	   * @default {}
	   */
	  inputProps: PropTypes.object,
	  /**
	   * Pass a ref to the `input` element.
	   */
	  inputRef: refType$1,
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
	   */
	  margin: PropTypes.oneOf(['dense', 'none']),
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * Minimum number of rows to display when multiline option is set to true.
	   */
	  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
	   * @default false
	   */
	  multiline: PropTypes.bool,
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: PropTypes.string,
	  /**
	   * Callback fired when the `input` is blurred.
	   *
	   * Notice that the first argument (event) might be undefined.
	   */
	  onBlur: PropTypes.func,
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value` (string).
	   */
	  onChange: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onClick: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onFocus: PropTypes.func,
	  /**
	   * Callback fired when the `input` doesn't satisfy its constraints.
	   */
	  onInvalid: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onKeyDown: PropTypes.func,
	  /**
	   * @ignore
	   */
	  onKeyUp: PropTypes.func,
	  /**
	   * The short hint displayed in the `input` before the user enters a value.
	   */
	  placeholder: PropTypes.string,
	  /**
	   * It prevents the user from changing the value of the field
	   * (not from interacting with the field).
	   */
	  readOnly: PropTypes.bool,
	  /**
	   * @ignore
	   */
	  renderSuffix: PropTypes.func,
	  /**
	   * If `true`, the `input` element is required.
	   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
	   */
	  required: PropTypes.bool,
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * The size of the component.
	   */
	  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),
	  /**
	   * The extra props for the slot components.
	   * You can override the existing props or add new ones.
	   *
	   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
	   *
	   * @default {}
	   */
	  slotProps: PropTypes.shape({
	    input: PropTypes.object,
	    root: PropTypes.object
	  }),
	  /**
	   * The components used for each slot inside.
	   *
	   * This prop is an alias for the `components` prop, which will be deprecated in the future.
	   *
	   * @default {}
	   */
	  slots: PropTypes.shape({
	    input: PropTypes.elementType,
	    root: PropTypes.elementType
	  }),
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: PropTypes.node,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
	  /**
	   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
	   * @default 'text'
	   */
	  type: PropTypes.string,
	  /**
	   * The value of the `input` element, required for a controlled component.
	   */
	  value: PropTypes.any
	} ;
	var InputBase$1 = InputBase;

	function getInputUtilityClass(slot) {
	  return generateUtilityClass('MuiInput', slot);
	}
	const inputClasses = _extends$2({}, inputBaseClasses$1, generateUtilityClasses('MuiInput', ['root', 'underline', 'input']));
	var inputClasses$1 = inputClasses;

	const boxClasses = generateUtilityClasses('MuiBox', ['root']);
	var boxClasses$1 = boxClasses;

	const defaultTheme = createTheme();
	const Box = createBox({
	  themeId: THEME_ID,
	  defaultTheme,
	  defaultClassName: boxClasses$1.root,
	  generateClassName: ClassNameGenerator$1.generate
	});
	Box.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * @ignore
	   */
	  children: PropTypes.node,
	  /**
	   * The component used for the root node.
	   * Either a string to use a HTML element or a component.
	   */
	  component: PropTypes.elementType,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])
	} ;
	var Box$1 = Box;

	function getButtonUtilityClass(slot) {
	  return generateUtilityClass('MuiButton', slot);
	}
	const buttonClasses = generateUtilityClasses('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'textSuccess', 'textError', 'textInfo', 'textWarning', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'outlinedSuccess', 'outlinedError', 'outlinedInfo', 'outlinedWarning', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'containedSuccess', 'containedError', 'containedInfo', 'containedWarning', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);
	var buttonClasses$1 = buttonClasses;

	/**
	 * @ignore - internal component.
	 */
	const ButtonGroupContext = /*#__PURE__*/reactExports.createContext({});
	{
	  ButtonGroupContext.displayName = 'ButtonGroupContext';
	}
	var ButtonGroupContext$1 = ButtonGroupContext;

	/**
	 * @ignore - internal component.
	 */
	const ButtonGroupButtonContext = /*#__PURE__*/reactExports.createContext(undefined);
	{
	  ButtonGroupButtonContext.displayName = 'ButtonGroupButtonContext';
	}
	var ButtonGroupButtonContext$1 = ButtonGroupButtonContext;

	const _excluded$1 = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"];
	const useUtilityClasses$1 = ownerState => {
	  const {
	    color,
	    disableElevation,
	    fullWidth,
	    size,
	    variant,
	    classes
	  } = ownerState;
	  const slots = {
	    root: ['root', variant, `${variant}${capitalize$1(color)}`, `size${capitalize$1(size)}`, `${variant}Size${capitalize$1(size)}`, color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],
	    label: ['label'],
	    startIcon: ['startIcon', `iconSize${capitalize$1(size)}`],
	    endIcon: ['endIcon', `iconSize${capitalize$1(size)}`]
	  };
	  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);
	  return _extends$2({}, classes, composedClasses);
	};
	const commonIconStyles = ownerState => _extends$2({}, ownerState.size === 'small' && {
	  '& > *:nth-of-type(1)': {
	    fontSize: 18
	  }
	}, ownerState.size === 'medium' && {
	  '& > *:nth-of-type(1)': {
	    fontSize: 20
	  }
	}, ownerState.size === 'large' && {
	  '& > *:nth-of-type(1)': {
	    fontSize: 22
	  }
	});
	const ButtonRoot = styled$1(ButtonBase$1, {
	  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',
	  name: 'MuiButton',
	  slot: 'Root',
	  overridesResolver: (props, styles) => {
	    const {
	      ownerState
	    } = props;
	    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize$1(ownerState.color)}`], styles[`size${capitalize$1(ownerState.size)}`], styles[`${ownerState.variant}Size${capitalize$1(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];
	  }
	})(({
	  theme,
	  ownerState
	}) => {
	  var _theme$palette$getCon, _theme$palette;
	  const inheritContainedBackgroundColor = theme.palette.mode === 'light' ? theme.palette.grey[300] : theme.palette.grey[800];
	  const inheritContainedHoverBackgroundColor = theme.palette.mode === 'light' ? theme.palette.grey.A100 : theme.palette.grey[700];
	  return _extends$2({}, theme.typography.button, {
	    minWidth: 64,
	    padding: '6px 16px',
	    borderRadius: (theme.vars || theme).shape.borderRadius,
	    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {
	      duration: theme.transitions.duration.short
	    }),
	    '&:hover': _extends$2({
	      textDecoration: 'none',
	      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha_1(theme.palette.text.primary, theme.palette.action.hoverOpacity),
	      // Reset on touch devices, it doesn't add specificity
	      '@media (hover: none)': {
	        backgroundColor: 'transparent'
	      }
	    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
	      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha_1(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
	      // Reset on touch devices, it doesn't add specificity
	      '@media (hover: none)': {
	        backgroundColor: 'transparent'
	      }
	    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {
	      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,
	      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha_1(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
	      // Reset on touch devices, it doesn't add specificity
	      '@media (hover: none)': {
	        backgroundColor: 'transparent'
	      }
	    }, ownerState.variant === 'contained' && {
	      backgroundColor: theme.vars ? theme.vars.palette.Button.inheritContainedHoverBg : inheritContainedHoverBackgroundColor,
	      boxShadow: (theme.vars || theme).shadows[4],
	      // Reset on touch devices, it doesn't add specificity
	      '@media (hover: none)': {
	        boxShadow: (theme.vars || theme).shadows[2],
	        backgroundColor: (theme.vars || theme).palette.grey[300]
	      }
	    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
	      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,
	      // Reset on touch devices, it doesn't add specificity
	      '@media (hover: none)': {
	        backgroundColor: (theme.vars || theme).palette[ownerState.color].main
	      }
	    }),
	    '&:active': _extends$2({}, ownerState.variant === 'contained' && {
	      boxShadow: (theme.vars || theme).shadows[8]
	    }),
	    [`&.${buttonClasses$1.focusVisible}`]: _extends$2({}, ownerState.variant === 'contained' && {
	      boxShadow: (theme.vars || theme).shadows[6]
	    }),
	    [`&.${buttonClasses$1.disabled}`]: _extends$2({
	      color: (theme.vars || theme).palette.action.disabled
	    }, ownerState.variant === 'outlined' && {
	      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`
	    }, ownerState.variant === 'contained' && {
	      color: (theme.vars || theme).palette.action.disabled,
	      boxShadow: (theme.vars || theme).shadows[0],
	      backgroundColor: (theme.vars || theme).palette.action.disabledBackground
	    })
	  }, ownerState.variant === 'text' && {
	    padding: '6px 8px'
	  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
	    color: (theme.vars || theme).palette[ownerState.color].main
	  }, ownerState.variant === 'outlined' && {
	    padding: '5px 15px',
	    border: '1px solid currentColor'
	  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {
	    color: (theme.vars || theme).palette[ownerState.color].main,
	    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha_1(theme.palette[ownerState.color].main, 0.5)}`
	  }, ownerState.variant === 'contained' && {
	    color: theme.vars ?
	    // this is safe because grey does not change between default light/dark mode
	    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),
	    backgroundColor: theme.vars ? theme.vars.palette.Button.inheritContainedBg : inheritContainedBackgroundColor,
	    boxShadow: (theme.vars || theme).shadows[2]
	  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
	    color: (theme.vars || theme).palette[ownerState.color].contrastText,
	    backgroundColor: (theme.vars || theme).palette[ownerState.color].main
	  }, ownerState.color === 'inherit' && {
	    color: 'inherit',
	    borderColor: 'currentColor'
	  }, ownerState.size === 'small' && ownerState.variant === 'text' && {
	    padding: '4px 5px',
	    fontSize: theme.typography.pxToRem(13)
	  }, ownerState.size === 'large' && ownerState.variant === 'text' && {
	    padding: '8px 11px',
	    fontSize: theme.typography.pxToRem(15)
	  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {
	    padding: '3px 9px',
	    fontSize: theme.typography.pxToRem(13)
	  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {
	    padding: '7px 21px',
	    fontSize: theme.typography.pxToRem(15)
	  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {
	    padding: '4px 10px',
	    fontSize: theme.typography.pxToRem(13)
	  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {
	    padding: '8px 22px',
	    fontSize: theme.typography.pxToRem(15)
	  }, ownerState.fullWidth && {
	    width: '100%'
	  });
	}, ({
	  ownerState
	}) => ownerState.disableElevation && {
	  boxShadow: 'none',
	  '&:hover': {
	    boxShadow: 'none'
	  },
	  [`&.${buttonClasses$1.focusVisible}`]: {
	    boxShadow: 'none'
	  },
	  '&:active': {
	    boxShadow: 'none'
	  },
	  [`&.${buttonClasses$1.disabled}`]: {
	    boxShadow: 'none'
	  }
	});
	const ButtonStartIcon = styled$1('span', {
	  name: 'MuiButton',
	  slot: 'StartIcon',
	  overridesResolver: (props, styles) => {
	    const {
	      ownerState
	    } = props;
	    return [styles.startIcon, styles[`iconSize${capitalize$1(ownerState.size)}`]];
	  }
	})(({
	  ownerState
	}) => _extends$2({
	  display: 'inherit',
	  marginRight: 8,
	  marginLeft: -4
	}, ownerState.size === 'small' && {
	  marginLeft: -2
	}, commonIconStyles(ownerState)));
	const ButtonEndIcon = styled$1('span', {
	  name: 'MuiButton',
	  slot: 'EndIcon',
	  overridesResolver: (props, styles) => {
	    const {
	      ownerState
	    } = props;
	    return [styles.endIcon, styles[`iconSize${capitalize$1(ownerState.size)}`]];
	  }
	})(({
	  ownerState
	}) => _extends$2({
	  display: 'inherit',
	  marginRight: -4,
	  marginLeft: 8
	}, ownerState.size === 'small' && {
	  marginRight: -2
	}, commonIconStyles(ownerState)));
	const Button = /*#__PURE__*/reactExports.forwardRef(function Button(inProps, ref) {
	  // props priority: `inProps` > `contextProps` > `themeDefaultProps`
	  const contextProps = reactExports.useContext(ButtonGroupContext$1);
	  const buttonGroupButtonContextPositionClassName = reactExports.useContext(ButtonGroupButtonContext$1);
	  const resolvedProps = resolveProps(contextProps, inProps);
	  const props = useThemeProps({
	    props: resolvedProps,
	    name: 'MuiButton'
	  });
	  const {
	      children,
	      color = 'primary',
	      component = 'button',
	      className,
	      disabled = false,
	      disableElevation = false,
	      disableFocusRipple = false,
	      endIcon: endIconProp,
	      focusVisibleClassName,
	      fullWidth = false,
	      size = 'medium',
	      startIcon: startIconProp,
	      type,
	      variant = 'text'
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$1);
	  const ownerState = _extends$2({}, props, {
	    color,
	    component,
	    disabled,
	    disableElevation,
	    disableFocusRipple,
	    fullWidth,
	    size,
	    type,
	    variant
	  });
	  const classes = useUtilityClasses$1(ownerState);
	  const startIcon = startIconProp && /*#__PURE__*/jsxRuntimeExports.jsx(ButtonStartIcon, {
	    className: classes.startIcon,
	    ownerState: ownerState,
	    children: startIconProp
	  });
	  const endIcon = endIconProp && /*#__PURE__*/jsxRuntimeExports.jsx(ButtonEndIcon, {
	    className: classes.endIcon,
	    ownerState: ownerState,
	    children: endIconProp
	  });
	  const positionClassName = buttonGroupButtonContextPositionClassName || '';
	  return /*#__PURE__*/jsxRuntimeExports.jsxs(ButtonRoot, _extends$2({
	    ownerState: ownerState,
	    className: clsx(contextProps.className, classes.root, className, positionClassName),
	    component: component,
	    disabled: disabled,
	    focusRipple: !disableFocusRipple,
	    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),
	    ref: ref,
	    type: type
	  }, other, {
	    classes: classes,
	    children: [startIcon, children, endIcon]
	  }));
	});
	Button.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * The content of the component.
	   */
	  children: PropTypes.node,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * @ignore
	   */
	  className: PropTypes.string,
	  /**
	   * The color of the component.
	   * It supports both default and custom theme colors, which can be added as shown in the
	   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
	   * @default 'primary'
	   */
	  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning']), PropTypes.string]),
	  /**
	   * The component used for the root node.
	   * Either a string to use a HTML element or a component.
	   */
	  component: PropTypes.elementType,
	  /**
	   * If `true`, the component is disabled.
	   * @default false
	   */
	  disabled: PropTypes.bool,
	  /**
	   * If `true`, no elevation is used.
	   * @default false
	   */
	  disableElevation: PropTypes.bool,
	  /**
	   * If `true`, the  keyboard focus ripple is disabled.
	   * @default false
	   */
	  disableFocusRipple: PropTypes.bool,
	  /**
	   * If `true`, the ripple effect is disabled.
	   *
	   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
	   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
	   * @default false
	   */
	  disableRipple: PropTypes.bool,
	  /**
	   * Element placed after the children.
	   */
	  endIcon: PropTypes.node,
	  /**
	   * @ignore
	   */
	  focusVisibleClassName: PropTypes.string,
	  /**
	   * If `true`, the button will take up the full width of its container.
	   * @default false
	   */
	  fullWidth: PropTypes.bool,
	  /**
	   * The URL to link to when the button is clicked.
	   * If defined, an `a` element will be used as the root node.
	   */
	  href: PropTypes.string,
	  /**
	   * The size of the component.
	   * `small` is equivalent to the dense button styling.
	   * @default 'medium'
	   */
	  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),
	  /**
	   * Element placed before the children.
	   */
	  startIcon: PropTypes.node,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
	  /**
	   * @ignore
	   */
	  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),
	  /**
	   * The variant to use.
	   * @default 'text'
	   */
	  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])
	} ;
	var Button$1 = Button;

	const _excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "slotProps", "slots", "type"];
	const useUtilityClasses = ownerState => {
	  const {
	    classes,
	    disableUnderline
	  } = ownerState;
	  const slots = {
	    root: ['root', !disableUnderline && 'underline'],
	    input: ['input']
	  };
	  const composedClasses = composeClasses(slots, getInputUtilityClass, classes);
	  return _extends$2({}, classes, composedClasses);
	};
	const InputRoot = styled$1(InputBaseRoot, {
	  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',
	  name: 'MuiInput',
	  slot: 'Root',
	  overridesResolver: (props, styles) => {
	    const {
	      ownerState
	    } = props;
	    return [...rootOverridesResolver(props, styles), !ownerState.disableUnderline && styles.underline];
	  }
	})(({
	  theme,
	  ownerState
	}) => {
	  const light = theme.palette.mode === 'light';
	  let bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
	  if (theme.vars) {
	    bottomLineColor = `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})`;
	  }
	  return _extends$2({
	    position: 'relative'
	  }, ownerState.formControl && {
	    'label + &': {
	      marginTop: 16
	    }
	  }, !ownerState.disableUnderline && {
	    '&::after': {
	      borderBottom: `2px solid ${(theme.vars || theme).palette[ownerState.color].main}`,
	      left: 0,
	      bottom: 0,
	      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
	      content: '""',
	      position: 'absolute',
	      right: 0,
	      transform: 'scaleX(0)',
	      transition: theme.transitions.create('transform', {
	        duration: theme.transitions.duration.shorter,
	        easing: theme.transitions.easing.easeOut
	      }),
	      pointerEvents: 'none' // Transparent to the hover style.
	    },
	    [`&.${inputClasses$1.focused}:after`]: {
	      // translateX(0) is a workaround for Safari transform scale bug
	      // See https://github.com/mui/material-ui/issues/31766
	      transform: 'scaleX(1) translateX(0)'
	    },
	    [`&.${inputClasses$1.error}`]: {
	      '&::before, &::after': {
	        borderBottomColor: (theme.vars || theme).palette.error.main
	      }
	    },
	    '&::before': {
	      borderBottom: `1px solid ${bottomLineColor}`,
	      left: 0,
	      bottom: 0,
	      // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
	      content: '"\\00a0"',
	      position: 'absolute',
	      right: 0,
	      transition: theme.transitions.create('border-bottom-color', {
	        duration: theme.transitions.duration.shorter
	      }),
	      pointerEvents: 'none' // Transparent to the hover style.
	    },
	    [`&:hover:not(.${inputClasses$1.disabled}, .${inputClasses$1.error}):before`]: {
	      borderBottom: `2px solid ${(theme.vars || theme).palette.text.primary}`,
	      // Reset on touch devices, it doesn't add specificity
	      '@media (hover: none)': {
	        borderBottom: `1px solid ${bottomLineColor}`
	      }
	    },
	    [`&.${inputClasses$1.disabled}:before`]: {
	      borderBottomStyle: 'dotted'
	    }
	  });
	});
	const InputInput = styled$1(InputBaseComponent, {
	  name: 'MuiInput',
	  slot: 'Input',
	  overridesResolver: inputOverridesResolver
	})({});
	const Input = /*#__PURE__*/reactExports.forwardRef(function Input(inProps, ref) {
	  var _ref, _slots$root, _ref2, _slots$input;
	  const props = useThemeProps({
	    props: inProps,
	    name: 'MuiInput'
	  });
	  const {
	      disableUnderline,
	      components = {},
	      componentsProps: componentsPropsProp,
	      fullWidth = false,
	      inputComponent = 'input',
	      multiline = false,
	      slotProps,
	      slots = {},
	      type = 'text'
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded);
	  const classes = useUtilityClasses(props);
	  const ownerState = {
	    disableUnderline
	  };
	  const inputComponentsProps = {
	    root: {
	      ownerState
	    }
	  };
	  const componentsProps = (slotProps != null ? slotProps : componentsPropsProp) ? deepmerge$1(slotProps != null ? slotProps : componentsPropsProp, inputComponentsProps) : inputComponentsProps;
	  const RootSlot = (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : InputRoot;
	  const InputSlot = (_ref2 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref2 : InputInput;
	  return /*#__PURE__*/jsxRuntimeExports.jsx(InputBase$1, _extends$2({
	    slots: {
	      root: RootSlot,
	      input: InputSlot
	    },
	    slotProps: componentsProps,
	    fullWidth: fullWidth,
	    inputComponent: inputComponent,
	    multiline: multiline,
	    ref: ref,
	    type: type
	  }, other, {
	    classes: classes
	  }));
	});
	Input.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * This prop helps users to fill forms faster, especially on mobile devices.
	   * The name can be confusing, as it's more like an autofill.
	   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
	   */
	  autoComplete: PropTypes.string,
	  /**
	   * If `true`, the `input` element is focused during the first mount.
	   */
	  autoFocus: PropTypes.bool,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * The color of the component.
	   * It supports both default and custom theme colors, which can be added as shown in the
	   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
	   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
	   */
	  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),
	  /**
	   * The components used for each slot inside.
	   *
	   * This prop is an alias for the `slots` prop.
	   * It's recommended to use the `slots` prop instead.
	   *
	   * @default {}
	   */
	  components: PropTypes.shape({
	    Input: PropTypes.elementType,
	    Root: PropTypes.elementType
	  }),
	  /**
	   * The extra props for the slot components.
	   * You can override the existing props or add new ones.
	   *
	   * This prop is an alias for the `slotProps` prop.
	   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
	   *
	   * @default {}
	   */
	  componentsProps: PropTypes.shape({
	    input: PropTypes.object,
	    root: PropTypes.object
	  }),
	  /**
	   * The default value. Use when the component is not controlled.
	   */
	  defaultValue: PropTypes.any,
	  /**
	   * If `true`, the component is disabled.
	   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
	   */
	  disabled: PropTypes.bool,
	  /**
	   * If `true`, the `input` will not have an underline.
	   */
	  disableUnderline: PropTypes.bool,
	  /**
	   * End `InputAdornment` for this component.
	   */
	  endAdornment: PropTypes.node,
	  /**
	   * If `true`, the `input` will indicate an error.
	   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
	   */
	  error: PropTypes.bool,
	  /**
	   * If `true`, the `input` will take up the full width of its container.
	   * @default false
	   */
	  fullWidth: PropTypes.bool,
	  /**
	   * The id of the `input` element.
	   */
	  id: PropTypes.string,
	  /**
	   * The component used for the `input` element.
	   * Either a string to use a HTML element or a component.
	   * @default 'input'
	   */
	  inputComponent: PropTypes.elementType,
	  /**
	   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
	   * @default {}
	   */
	  inputProps: PropTypes.object,
	  /**
	   * Pass a ref to the `input` element.
	   */
	  inputRef: refType$1,
	  /**
	   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
	   * FormControl.
	   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
	   */
	  margin: PropTypes.oneOf(['dense', 'none']),
	  /**
	   * Maximum number of rows to display when multiline option is set to true.
	   */
	  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * Minimum number of rows to display when multiline option is set to true.
	   */
	  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.
	   * @default false
	   */
	  multiline: PropTypes.bool,
	  /**
	   * Name attribute of the `input` element.
	   */
	  name: PropTypes.string,
	  /**
	   * Callback fired when the value is changed.
	   *
	   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
	   * You can pull out the new value by accessing `event.target.value` (string).
	   */
	  onChange: PropTypes.func,
	  /**
	   * The short hint displayed in the `input` before the user enters a value.
	   */
	  placeholder: PropTypes.string,
	  /**
	   * It prevents the user from changing the value of the field
	   * (not from interacting with the field).
	   */
	  readOnly: PropTypes.bool,
	  /**
	   * If `true`, the `input` element is required.
	   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
	   */
	  required: PropTypes.bool,
	  /**
	   * Number of rows to display when multiline option is set to true.
	   */
	  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
	  /**
	   * The extra props for the slot components.
	   * You can override the existing props or add new ones.
	   *
	   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
	   *
	   * @default {}
	   */
	  slotProps: PropTypes.shape({
	    input: PropTypes.object,
	    root: PropTypes.object
	  }),
	  /**
	   * The components used for each slot inside.
	   *
	   * This prop is an alias for the `components` prop, which will be deprecated in the future.
	   *
	   * @default {}
	   */
	  slots: PropTypes.shape({
	    input: PropTypes.elementType,
	    root: PropTypes.elementType
	  }),
	  /**
	   * Start `InputAdornment` for this component.
	   */
	  startAdornment: PropTypes.node,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
	  /**
	   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
	   * @default 'text'
	   */
	  type: PropTypes.string,
	  /**
	   * The value of the `input` element, required for a controlled component.
	   */
	  value: PropTypes.any
	} ;
	Input.muiName = 'Input';
	var Input$1 = Input;

	const Text = styled$1(Typography$1)(({
	  color = "var(--Main-White)",
	  size = 24,
	  opacity = 1,
	  weight = 400
	}) => ({
	  color,
	  fontSize: size,
	  opacity,
	  fontWeight: weight,
	  fontFamily: "American Typewriter",
	  lineHeight: "1",
	  textAlign: "center"
	}));

	const TheButton = styled$1(Button$1)(({
	  color = "var(--Main-Red)"
	}) => ({
	  backgroundColor: color,
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "center",
	  justifyContent: "center",
	  borderRadius: 10,
	  padding: "12px 24px",
	  width: "calc(100% - 48px)",
	  textTransform: "none",
	  "&:disabled": {
	    opacity: 0.5
	  },
	  "&:hover": {
	    backgroundColor: color
	  }
	}));
	const NameButton = styled$1(TheButton)(({
	  selected = false,
	  selectedColor = "var(--Main-White)",
	  borderColor = "var(--Main-White)"
	}) => ({
	  backgroundColor: selected ? selectedColor : "transparent",
	  border: `1px solid ${borderColor}`,
	  "&:hover": {
	    backgroundColor: selected ? selectedColor : "transparent"
	  }
	}));

	var lottie$1 = {exports: {}};

	lottie$1.exports;

	(function (module, exports) {
		typeof navigator!=="undefined"&&function(global,factory){module.exports=factory();}(commonjsGlobal,function(){var svgNS='http://www.w3.org/2000/svg';var locationHref='';var _useWebWorker=false;var initialDefaultFrame=-999999;var setWebWorker=function setWebWorker(flag){_useWebWorker=!!flag;};var getWebWorker=function getWebWorker(){return _useWebWorker;};var setLocationHref=function setLocationHref(value){locationHref=value;};var getLocationHref=function getLocationHref(){return locationHref;};function createTag(type){// return {appendChild:function(){},setAttribute:function(){},style:{}}
		return document.createElement(type);}function extendPrototype(sources,destination){var i;var len=sources.length;var sourcePrototype;for(i=0;i<len;i+=1){sourcePrototype=sources[i].prototype;for(var attr in sourcePrototype){if(Object.prototype.hasOwnProperty.call(sourcePrototype,attr))destination.prototype[attr]=sourcePrototype[attr];}}}function getDescriptor(object,prop){return Object.getOwnPropertyDescriptor(object,prop);}function createProxyFunction(prototype){function ProxyFunction(){}ProxyFunction.prototype=prototype;return ProxyFunction;}// import Howl from '../../3rd_party/howler';
		var audioControllerFactory=function(){function AudioController(audioFactory){this.audios=[];this.audioFactory=audioFactory;this._volume=1;this._isMuted=false;}AudioController.prototype={addAudio:function addAudio(audio){this.audios.push(audio);},pause:function pause(){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].pause();}},resume:function resume(){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].resume();}},setRate:function setRate(rateValue){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].setRate(rateValue);}},createAudio:function createAudio(assetPath){if(this.audioFactory){return this.audioFactory(assetPath);}if(window.Howl){return new window.Howl({src:[assetPath]});}return {isPlaying:false,play:function play(){this.isPlaying=true;},seek:function seek(){this.isPlaying=false;},playing:function playing(){},rate:function rate(){},setVolume:function setVolume(){}};},setAudioFactory:function setAudioFactory(audioFactory){this.audioFactory=audioFactory;},setVolume:function setVolume(value){this._volume=value;this._updateVolume();},mute:function mute(){this._isMuted=true;this._updateVolume();},unmute:function unmute(){this._isMuted=false;this._updateVolume();},getVolume:function getVolume(){return this._volume;},_updateVolume:function _updateVolume(){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].volume(this._volume*(this._isMuted?0:1));}}};return function(){return new AudioController();};}();var createTypedArray=function(){function createRegularArray(type,len){var i=0;var arr=[];var value;switch(type){case'int16':case'uint8c':value=1;break;default:value=1.1;break;}for(i=0;i<len;i+=1){arr.push(value);}return arr;}function createTypedArrayFactory(type,len){if(type==='float32'){return new Float32Array(len);}if(type==='int16'){return new Int16Array(len);}if(type==='uint8c'){return new Uint8ClampedArray(len);}return createRegularArray(type,len);}if(typeof Uint8ClampedArray==='function'&&typeof Float32Array==='function'){return createTypedArrayFactory;}return createRegularArray;}();function createSizedArray(len){return Array.apply(null,{length:len});}function _typeof$6(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$6=function _typeof(obj){return typeof obj;};}else {_typeof$6=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$6(obj);}var subframeEnabled=true;var expressionsPlugin=null;var expressionsInterfaces=null;var idPrefix$1='';var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var bmPow=Math.pow;var bmSqrt=Math.sqrt;var bmFloor=Math.floor;var bmMax=Math.max;var bmMin=Math.min;var BMMath={};(function(){var propertyNames=['abs','acos','acosh','asin','asinh','atan','atanh','atan2','ceil','cbrt','expm1','clz32','cos','cosh','exp','floor','fround','hypot','imul','log','log1p','log2','log10','max','min','pow','random','round','sign','sin','sinh','sqrt','tan','tanh','trunc','E','LN10','LN2','LOG10E','LOG2E','PI','SQRT1_2','SQRT2'];var i;var len=propertyNames.length;for(i=0;i<len;i+=1){BMMath[propertyNames[i]]=Math[propertyNames[i]];}})();BMMath.random=Math.random;BMMath.abs=function(val){var tOfVal=_typeof$6(val);if(tOfVal==='object'&&val.length){var absArr=createSizedArray(val.length);var i;var len=val.length;for(i=0;i<len;i+=1){absArr[i]=Math.abs(val[i]);}return absArr;}return Math.abs(val);};var defaultCurveSegments=150;var degToRads=Math.PI/180;var roundCorner=0.5519;function styleDiv(element){element.style.position='absolute';element.style.top=0;element.style.left=0;element.style.display='block';element.style.transformOrigin='0 0';element.style.webkitTransformOrigin='0 0';element.style.backfaceVisibility='visible';element.style.webkitBackfaceVisibility='visible';element.style.transformStyle='preserve-3d';element.style.webkitTransformStyle='preserve-3d';element.style.mozTransformStyle='preserve-3d';}function BMEnterFrameEvent(type,currentTime,totalTime,frameMultiplier){this.type=type;this.currentTime=currentTime;this.totalTime=totalTime;this.direction=frameMultiplier<0?-1:1;}function BMCompleteEvent(type,frameMultiplier){this.type=type;this.direction=frameMultiplier<0?-1:1;}function BMCompleteLoopEvent(type,totalLoops,currentLoop,frameMultiplier){this.type=type;this.currentLoop=currentLoop;this.totalLoops=totalLoops;this.direction=frameMultiplier<0?-1:1;}function BMSegmentStartEvent(type,firstFrame,totalFrames){this.type=type;this.firstFrame=firstFrame;this.totalFrames=totalFrames;}function BMDestroyEvent(type,target){this.type=type;this.target=target;}function BMRenderFrameErrorEvent(nativeError,currentTime){this.type='renderFrameError';this.nativeError=nativeError;this.currentTime=currentTime;}function BMConfigErrorEvent(nativeError){this.type='configError';this.nativeError=nativeError;}var createElementID=function(){var _count=0;return function createID(){_count+=1;return idPrefix$1+'__lottie_element_'+_count;};}();function HSVtoRGB(h,s,v){var r;var g;var b;var i;var f;var p;var q;var t;i=Math.floor(h*6);f=h*6-i;p=v*(1-s);q=v*(1-f*s);t=v*(1-(1-f)*s);switch(i%6){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break;}return [r,g,b];}function RGBtoHSV(r,g,b){var max=Math.max(r,g,b);var min=Math.min(r,g,b);var d=max-min;var h;var s=max===0?0:d/max;var v=max/255;switch(max){case min:h=0;break;case r:h=g-b+d*(g<b?6:0);h/=6*d;break;case g:h=b-r+d*2;h/=6*d;break;case b:h=r-g+d*4;h/=6*d;break;}return [h,s,v];}function addSaturationToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[1]+=offset;if(hsv[1]>1){hsv[1]=1;}else if(hsv[1]<=0){hsv[1]=0;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}function addBrightnessToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[2]+=offset;if(hsv[2]>1){hsv[2]=1;}else if(hsv[2]<0){hsv[2]=0;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}function addHueToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[0]+=offset/360;if(hsv[0]>1){hsv[0]-=1;}else if(hsv[0]<0){hsv[0]+=1;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}var rgbToHex=function(){var colorMap=[];var i;var hex;for(i=0;i<256;i+=1){hex=i.toString(16);colorMap[i]=hex.length===1?'0'+hex:hex;}return function(r,g,b){if(r<0){r=0;}if(g<0){g=0;}if(b<0){b=0;}return '#'+colorMap[r]+colorMap[g]+colorMap[b];};}();var setSubframeEnabled=function setSubframeEnabled(flag){subframeEnabled=!!flag;};var getSubframeEnabled=function getSubframeEnabled(){return subframeEnabled;};var setExpressionsPlugin=function setExpressionsPlugin(value){expressionsPlugin=value;};var getExpressionsPlugin=function getExpressionsPlugin(){return expressionsPlugin;};var setExpressionInterfaces=function setExpressionInterfaces(value){expressionsInterfaces=value;};var getExpressionInterfaces=function getExpressionInterfaces(){return expressionsInterfaces;};var setDefaultCurveSegments=function setDefaultCurveSegments(value){defaultCurveSegments=value;};var getDefaultCurveSegments=function getDefaultCurveSegments(){return defaultCurveSegments;};var setIdPrefix=function setIdPrefix(value){idPrefix$1=value;};function createNS(type){// return {appendChild:function(){},setAttribute:function(){},style:{}}
		return document.createElementNS(svgNS,type);}function _typeof$5(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$5=function _typeof(obj){return typeof obj;};}else {_typeof$5=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$5(obj);}var dataManager=function(){var _counterId=1;var processes=[];var workerFn;var workerInstance;var workerProxy={onmessage:function onmessage(){},postMessage:function postMessage(path){workerFn({data:path});}};var _workerSelf={postMessage:function postMessage(data){workerProxy.onmessage({data:data});}};function createWorker(fn){if(window.Worker&&window.Blob&&getWebWorker()){var blob=new Blob(['var _workerSelf = self; self.onmessage = ',fn.toString()],{type:'text/javascript'});// var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });
		var url=URL.createObjectURL(blob);return new Worker(url);}workerFn=fn;return workerProxy;}function setupWorker(){if(!workerInstance){workerInstance=createWorker(function workerStart(e){function dataFunctionManager(){function completeLayers(layers,comps){var layerData;var i;var len=layers.length;var j;var jLen;var k;var kLen;for(i=0;i<len;i+=1){layerData=layers[i];if('ks'in layerData&&!layerData.completed){layerData.completed=true;if(layerData.hasMask){var maskProps=layerData.masksProperties;jLen=maskProps.length;for(j=0;j<jLen;j+=1){if(maskProps[j].pt.k.i){convertPathsToAbsoluteValues(maskProps[j].pt.k);}else {kLen=maskProps[j].pt.k.length;for(k=0;k<kLen;k+=1){if(maskProps[j].pt.k[k].s){convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);}if(maskProps[j].pt.k[k].e){convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);}}}}}if(layerData.ty===0){layerData.layers=findCompLayers(layerData.refId,comps);completeLayers(layerData.layers,comps);}else if(layerData.ty===4){completeShapes(layerData.shapes);}else if(layerData.ty===5){completeText(layerData);}}}}function completeChars(chars,assets){if(chars){var i=0;var len=chars.length;for(i=0;i<len;i+=1){if(chars[i].t===1){// var compData = findComp(chars[i].data.refId, assets);
		chars[i].data.layers=findCompLayers(chars[i].data.refId,assets);// chars[i].data.ip = 0;
		// chars[i].data.op = 99999;
		// chars[i].data.st = 0;
		// chars[i].data.sr = 1;
		// chars[i].w = compData.w;
		// chars[i].data.ks = {
		//   a: { k: [0, 0, 0], a: 0 },
		//   p: { k: [0, -compData.h, 0], a: 0 },
		//   r: { k: 0, a: 0 },
		//   s: { k: [100, 100], a: 0 },
		//   o: { k: 100, a: 0 },
		// };
		completeLayers(chars[i].data.layers,assets);}}}}function findComp(id,comps){var i=0;var len=comps.length;while(i<len){if(comps[i].id===id){return comps[i];}i+=1;}return null;}function findCompLayers(id,comps){var comp=findComp(id,comps);if(comp){if(!comp.layers.__used){comp.layers.__used=true;return comp.layers;}return JSON.parse(JSON.stringify(comp.layers));}return null;}function completeShapes(arr){var i;var len=arr.length;var j;var jLen;for(i=len-1;i>=0;i-=1){if(arr[i].ty==='sh'){if(arr[i].ks.k.i){convertPathsToAbsoluteValues(arr[i].ks.k);}else {jLen=arr[i].ks.k.length;for(j=0;j<jLen;j+=1){if(arr[i].ks.k[j].s){convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);}if(arr[i].ks.k[j].e){convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);}}}}else if(arr[i].ty==='gr'){completeShapes(arr[i].it);}}}function convertPathsToAbsoluteValues(path){var i;var len=path.i.length;for(i=0;i<len;i+=1){path.i[i][0]+=path.v[i][0];path.i[i][1]+=path.v[i][1];path.o[i][0]+=path.v[i][0];path.o[i][1]+=path.v[i][1];}}function checkVersion(minimum,animVersionString){var animVersion=animVersionString?animVersionString.split('.'):[100,100,100];if(minimum[0]>animVersion[0]){return true;}if(animVersion[0]>minimum[0]){return false;}if(minimum[1]>animVersion[1]){return true;}if(animVersion[1]>minimum[1]){return false;}if(minimum[2]>animVersion[2]){return true;}if(animVersion[2]>minimum[2]){return false;}return null;}var checkText=function(){var minimumVersion=[4,4,14];function updateTextLayer(textLayer){var documentData=textLayer.t.d;textLayer.t.d={k:[{s:documentData,t:0}]};}function iterateLayers(layers){var i;var len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===5){updateTextLayer(layers[i]);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkChars=function(){var minimumVersion=[4,7,99];return function(animationData){if(animationData.chars&&!checkVersion(minimumVersion,animationData.v)){var i;var len=animationData.chars.length;for(i=0;i<len;i+=1){var charData=animationData.chars[i];if(charData.data&&charData.data.shapes){completeShapes(charData.data.shapes);charData.data.ip=0;charData.data.op=99999;charData.data.st=0;charData.data.sr=1;charData.data.ks={p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0}};if(!animationData.chars[i].t){charData.data.shapes.push({ty:'no'});charData.data.shapes[0].it.push({p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0},sk:{k:0,a:0},sa:{k:0,a:0},ty:'tr'});}}}}};}();var checkPathProperties=function(){var minimumVersion=[5,7,15];function updateTextLayer(textLayer){var pathData=textLayer.t.p;if(typeof pathData.a==='number'){pathData.a={a:0,k:pathData.a};}if(typeof pathData.p==='number'){pathData.p={a:0,k:pathData.p};}if(typeof pathData.r==='number'){pathData.r={a:0,k:pathData.r};}}function iterateLayers(layers){var i;var len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===5){updateTextLayer(layers[i]);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkColors=function(){var minimumVersion=[4,1,9];function iterateShapes(shapes){var i;var len=shapes.length;var j;var jLen;for(i=0;i<len;i+=1){if(shapes[i].ty==='gr'){iterateShapes(shapes[i].it);}else if(shapes[i].ty==='fl'||shapes[i].ty==='st'){if(shapes[i].c.k&&shapes[i].c.k[0].i){jLen=shapes[i].c.k.length;for(j=0;j<jLen;j+=1){if(shapes[i].c.k[j].s){shapes[i].c.k[j].s[0]/=255;shapes[i].c.k[j].s[1]/=255;shapes[i].c.k[j].s[2]/=255;shapes[i].c.k[j].s[3]/=255;}if(shapes[i].c.k[j].e){shapes[i].c.k[j].e[0]/=255;shapes[i].c.k[j].e[1]/=255;shapes[i].c.k[j].e[2]/=255;shapes[i].c.k[j].e[3]/=255;}}}else {shapes[i].c.k[0]/=255;shapes[i].c.k[1]/=255;shapes[i].c.k[2]/=255;shapes[i].c.k[3]/=255;}}}}function iterateLayers(layers){var i;var len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===4){iterateShapes(layers[i].shapes);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkShapes=function(){var minimumVersion=[4,4,18];function completeClosingShapes(arr){var i;var len=arr.length;var j;var jLen;for(i=len-1;i>=0;i-=1){if(arr[i].ty==='sh'){if(arr[i].ks.k.i){arr[i].ks.k.c=arr[i].closed;}else {jLen=arr[i].ks.k.length;for(j=0;j<jLen;j+=1){if(arr[i].ks.k[j].s){arr[i].ks.k[j].s[0].c=arr[i].closed;}if(arr[i].ks.k[j].e){arr[i].ks.k[j].e[0].c=arr[i].closed;}}}}else if(arr[i].ty==='gr'){completeClosingShapes(arr[i].it);}}}function iterateLayers(layers){var layerData;var i;var len=layers.length;var j;var jLen;var k;var kLen;for(i=0;i<len;i+=1){layerData=layers[i];if(layerData.hasMask){var maskProps=layerData.masksProperties;jLen=maskProps.length;for(j=0;j<jLen;j+=1){if(maskProps[j].pt.k.i){maskProps[j].pt.k.c=maskProps[j].cl;}else {kLen=maskProps[j].pt.k.length;for(k=0;k<kLen;k+=1){if(maskProps[j].pt.k[k].s){maskProps[j].pt.k[k].s[0].c=maskProps[j].cl;}if(maskProps[j].pt.k[k].e){maskProps[j].pt.k[k].e[0].c=maskProps[j].cl;}}}}}if(layerData.ty===4){completeClosingShapes(layerData.shapes);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();function completeData(animationData){if(animationData.__complete){return;}checkColors(animationData);checkText(animationData);checkChars(animationData);checkPathProperties(animationData);checkShapes(animationData);completeLayers(animationData.layers,animationData.assets);completeChars(animationData.chars,animationData.assets);animationData.__complete=true;}function completeText(data){if(data.t.a.length===0&&!('m'in data.t.p));}var moduleOb={};moduleOb.completeData=completeData;moduleOb.checkColors=checkColors;moduleOb.checkChars=checkChars;moduleOb.checkPathProperties=checkPathProperties;moduleOb.checkShapes=checkShapes;moduleOb.completeLayers=completeLayers;return moduleOb;}if(!_workerSelf.dataManager){_workerSelf.dataManager=dataFunctionManager();}if(!_workerSelf.assetLoader){_workerSelf.assetLoader=function(){function formatResponse(xhr){// using typeof doubles the time of execution of this method,
		// so if available, it's better to use the header to validate the type
		var contentTypeHeader=xhr.getResponseHeader('content-type');if(contentTypeHeader&&xhr.responseType==='json'&&contentTypeHeader.indexOf('json')!==-1){return xhr.response;}if(xhr.response&&_typeof$5(xhr.response)==='object'){return xhr.response;}if(xhr.response&&typeof xhr.response==='string'){return JSON.parse(xhr.response);}if(xhr.responseText){return JSON.parse(xhr.responseText);}return null;}function loadAsset(path,fullPath,callback,errorCallback){var response;var xhr=new XMLHttpRequest();// set responseType after calling open or IE will break.
		try{// This crashes on Android WebView prior to KitKat
		xhr.responseType='json';}catch(err){}// eslint-disable-line no-empty
		xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200){response=formatResponse(xhr);callback(response);}else {try{response=formatResponse(xhr);callback(response);}catch(err){if(errorCallback){errorCallback(err);}}}}};try{// Hack to workaround banner validation
		xhr.open(['G','E','T'].join(''),path,true);}catch(error){// Hack to workaround banner validation
		xhr.open(['G','E','T'].join(''),fullPath+'/'+path,true);}xhr.send();}return {load:loadAsset};}();}if(e.data.type==='loadAnimation'){_workerSelf.assetLoader.load(e.data.path,e.data.fullPath,function(data){_workerSelf.dataManager.completeData(data);_workerSelf.postMessage({id:e.data.id,payload:data,status:'success'});},function(){_workerSelf.postMessage({id:e.data.id,status:'error'});});}else if(e.data.type==='complete'){var animation=e.data.animation;_workerSelf.dataManager.completeData(animation);_workerSelf.postMessage({id:e.data.id,payload:animation,status:'success'});}else if(e.data.type==='loadData'){_workerSelf.assetLoader.load(e.data.path,e.data.fullPath,function(data){_workerSelf.postMessage({id:e.data.id,payload:data,status:'success'});},function(){_workerSelf.postMessage({id:e.data.id,status:'error'});});}});workerInstance.onmessage=function(event){var data=event.data;var id=data.id;var process=processes[id];processes[id]=null;if(data.status==='success'){process.onComplete(data.payload);}else if(process.onError){process.onError();}};}}function createProcess(onComplete,onError){_counterId+=1;var id='processId_'+_counterId;processes[id]={onComplete:onComplete,onError:onError};return id;}function loadAnimation(path,onComplete,onError){setupWorker();var processId=createProcess(onComplete,onError);workerInstance.postMessage({type:'loadAnimation',path:path,fullPath:window.location.origin+window.location.pathname,id:processId});}function loadData(path,onComplete,onError){setupWorker();var processId=createProcess(onComplete,onError);workerInstance.postMessage({type:'loadData',path:path,fullPath:window.location.origin+window.location.pathname,id:processId});}function completeAnimation(anim,onComplete,onError){setupWorker();var processId=createProcess(onComplete,onError);workerInstance.postMessage({type:'complete',animation:anim,id:processId});}return {loadAnimation:loadAnimation,loadData:loadData,completeAnimation:completeAnimation};}();var ImagePreloader=function(){var proxyImage=function(){var canvas=createTag('canvas');canvas.width=1;canvas.height=1;var ctx=canvas.getContext('2d');ctx.fillStyle='rgba(0,0,0,0)';ctx.fillRect(0,0,1,1);return canvas;}();function imageLoaded(){this.loadedAssets+=1;if(this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages){if(this.imagesLoadedCb){this.imagesLoadedCb(null);}}}function footageLoaded(){this.loadedFootagesCount+=1;if(this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages){if(this.imagesLoadedCb){this.imagesLoadedCb(null);}}}function getAssetsPath(assetData,assetsPath,originalPath){var path='';if(assetData.e){path=assetData.p;}else if(assetsPath){var imagePath=assetData.p;if(imagePath.indexOf('images/')!==-1){imagePath=imagePath.split('/')[1];}path=assetsPath+imagePath;}else {path=originalPath;path+=assetData.u?assetData.u:'';path+=assetData.p;}return path;}function testImageLoaded(img){var _count=0;var intervalId=setInterval(function(){var box=img.getBBox();if(box.width||_count>500){this._imageLoaded();clearInterval(intervalId);}_count+=1;}.bind(this),50);}function createImageData(assetData){var path=getAssetsPath(assetData,this.assetsPath,this.path);var img=createNS('image');if(isSafari){this.testImageLoaded(img);}else {img.addEventListener('load',this._imageLoaded,false);}img.addEventListener('error',function(){ob.img=proxyImage;this._imageLoaded();}.bind(this),false);img.setAttributeNS('http://www.w3.org/1999/xlink','href',path);if(this._elementHelper.append){this._elementHelper.append(img);}else {this._elementHelper.appendChild(img);}var ob={img:img,assetData:assetData};return ob;}function createImgData(assetData){var path=getAssetsPath(assetData,this.assetsPath,this.path);var img=createTag('img');img.crossOrigin='anonymous';img.addEventListener('load',this._imageLoaded,false);img.addEventListener('error',function(){ob.img=proxyImage;this._imageLoaded();}.bind(this),false);img.src=path;var ob={img:img,assetData:assetData};return ob;}function createFootageData(data){var ob={assetData:data};var path=getAssetsPath(data,this.assetsPath,this.path);dataManager.loadData(path,function(footageData){ob.img=footageData;this._footageLoaded();}.bind(this),function(){ob.img={};this._footageLoaded();}.bind(this));return ob;}function loadAssets(assets,cb){this.imagesLoadedCb=cb;var i;var len=assets.length;for(i=0;i<len;i+=1){if(!assets[i].layers){if(!assets[i].t||assets[i].t==='seq'){this.totalImages+=1;this.images.push(this._createImageData(assets[i]));}else if(assets[i].t===3){this.totalFootages+=1;this.images.push(this.createFootageData(assets[i]));}}}}function setPath(path){this.path=path||'';}function setAssetsPath(path){this.assetsPath=path||'';}function getAsset(assetData){var i=0;var len=this.images.length;while(i<len){if(this.images[i].assetData===assetData){return this.images[i].img;}i+=1;}return null;}function destroy(){this.imagesLoadedCb=null;this.images.length=0;}function loadedImages(){return this.totalImages===this.loadedAssets;}function loadedFootages(){return this.totalFootages===this.loadedFootagesCount;}function setCacheType(type,elementHelper){if(type==='svg'){this._elementHelper=elementHelper;this._createImageData=this.createImageData.bind(this);}else {this._createImageData=this.createImgData.bind(this);}}function ImagePreloaderFactory(){this._imageLoaded=imageLoaded.bind(this);this._footageLoaded=footageLoaded.bind(this);this.testImageLoaded=testImageLoaded.bind(this);this.createFootageData=createFootageData.bind(this);this.assetsPath='';this.path='';this.totalImages=0;this.totalFootages=0;this.loadedAssets=0;this.loadedFootagesCount=0;this.imagesLoadedCb=null;this.images=[];}ImagePreloaderFactory.prototype={loadAssets:loadAssets,setAssetsPath:setAssetsPath,setPath:setPath,loadedImages:loadedImages,loadedFootages:loadedFootages,destroy:destroy,getAsset:getAsset,createImgData:createImgData,createImageData:createImageData,imageLoaded:imageLoaded,footageLoaded:footageLoaded,setCacheType:setCacheType};return ImagePreloaderFactory;}();function BaseEvent(){}BaseEvent.prototype={triggerEvent:function triggerEvent(eventName,args){if(this._cbs[eventName]){var callbacks=this._cbs[eventName];for(var i=0;i<callbacks.length;i+=1){callbacks[i](args);}}},addEventListener:function addEventListener(eventName,callback){if(!this._cbs[eventName]){this._cbs[eventName]=[];}this._cbs[eventName].push(callback);return function(){this.removeEventListener(eventName,callback);}.bind(this);},removeEventListener:function removeEventListener(eventName,callback){if(!callback){this._cbs[eventName]=null;}else if(this._cbs[eventName]){var i=0;var len=this._cbs[eventName].length;while(i<len){if(this._cbs[eventName][i]===callback){this._cbs[eventName].splice(i,1);i-=1;len-=1;}i+=1;}if(!this._cbs[eventName].length){this._cbs[eventName]=null;}}}};var markerParser=function(){function parsePayloadLines(payload){var lines=payload.split('\r\n');var keys={};var line;var keysCount=0;for(var i=0;i<lines.length;i+=1){line=lines[i].split(':');if(line.length===2){keys[line[0]]=line[1].trim();keysCount+=1;}}if(keysCount===0){throw new Error();}return keys;}return function(_markers){var markers=[];for(var i=0;i<_markers.length;i+=1){var _marker=_markers[i];var markerData={time:_marker.tm,duration:_marker.dr};try{markerData.payload=JSON.parse(_markers[i].cm);}catch(_){try{markerData.payload=parsePayloadLines(_markers[i].cm);}catch(__){markerData.payload={name:_markers[i].cm};}}markers.push(markerData);}return markers;};}();var ProjectInterface=function(){function registerComposition(comp){this.compositions.push(comp);}return function(){function _thisProjectFunction(name){var i=0;var len=this.compositions.length;while(i<len){if(this.compositions[i].data&&this.compositions[i].data.nm===name){if(this.compositions[i].prepareFrame&&this.compositions[i].data.xt){this.compositions[i].prepareFrame(this.currentFrame);}return this.compositions[i].compInterface;}i+=1;}return null;}_thisProjectFunction.compositions=[];_thisProjectFunction.currentFrame=0;_thisProjectFunction.registerComposition=registerComposition;return _thisProjectFunction;};}();var renderers={};var registerRenderer=function registerRenderer(key,value){renderers[key]=value;};function getRenderer(key){return renderers[key];}function getRegisteredRenderer(){// Returns canvas by default for compatibility
		if(renderers.canvas){return 'canvas';}// Returns any renderer that is registered
		for(var key in renderers){if(renderers[key]){return key;}}return '';}function _typeof$4(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$4=function _typeof(obj){return typeof obj;};}else {_typeof$4=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$4(obj);}var AnimationItem=function AnimationItem(){this._cbs=[];this.name='';this.path='';this.isLoaded=false;this.currentFrame=0;this.currentRawFrame=0;this.firstFrame=0;this.totalFrames=0;this.frameRate=0;this.frameMult=0;this.playSpeed=1;this.playDirection=1;this.playCount=0;this.animationData={};this.assets=[];this.isPaused=true;this.autoplay=false;this.loop=true;this.renderer=null;this.animationID=createElementID();this.assetsPath='';this.timeCompleted=0;this.segmentPos=0;this.isSubframeEnabled=getSubframeEnabled();this.segments=[];this._idle=true;this._completedLoop=false;this.projectInterface=ProjectInterface();this.imagePreloader=new ImagePreloader();this.audioController=audioControllerFactory();this.markers=[];this.configAnimation=this.configAnimation.bind(this);this.onSetupError=this.onSetupError.bind(this);this.onSegmentComplete=this.onSegmentComplete.bind(this);this.drawnFrameEvent=new BMEnterFrameEvent('drawnFrame',0,0,0);this.expressionsPlugin=getExpressionsPlugin();};extendPrototype([BaseEvent],AnimationItem);AnimationItem.prototype.setParams=function(params){if(params.wrapper||params.container){this.wrapper=params.wrapper||params.container;}var animType='svg';if(params.animType){animType=params.animType;}else if(params.renderer){animType=params.renderer;}var RendererClass=getRenderer(animType);this.renderer=new RendererClass(this,params.rendererSettings);this.imagePreloader.setCacheType(animType,this.renderer.globalData.defs);this.renderer.setProjectInterface(this.projectInterface);this.animType=animType;if(params.loop===''||params.loop===null||params.loop===undefined||params.loop===true){this.loop=true;}else if(params.loop===false){this.loop=false;}else {this.loop=parseInt(params.loop,10);}this.autoplay='autoplay'in params?params.autoplay:true;this.name=params.name?params.name:'';this.autoloadSegments=Object.prototype.hasOwnProperty.call(params,'autoloadSegments')?params.autoloadSegments:true;this.assetsPath=params.assetsPath;this.initialSegment=params.initialSegment;if(params.audioFactory){this.audioController.setAudioFactory(params.audioFactory);}if(params.animationData){this.setupAnimation(params.animationData);}else if(params.path){if(params.path.lastIndexOf('\\')!==-1){this.path=params.path.substr(0,params.path.lastIndexOf('\\')+1);}else {this.path=params.path.substr(0,params.path.lastIndexOf('/')+1);}this.fileName=params.path.substr(params.path.lastIndexOf('/')+1);this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf('.json'));dataManager.loadAnimation(params.path,this.configAnimation,this.onSetupError);}};AnimationItem.prototype.onSetupError=function(){this.trigger('data_failed');};AnimationItem.prototype.setupAnimation=function(data){dataManager.completeAnimation(data,this.configAnimation);};AnimationItem.prototype.setData=function(wrapper,animationData){if(animationData){if(_typeof$4(animationData)!=='object'){animationData=JSON.parse(animationData);}}var params={wrapper:wrapper,animationData:animationData};var wrapperAttributes=wrapper.attributes;params.path=wrapperAttributes.getNamedItem('data-animation-path')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-animation-path').value:wrapperAttributes.getNamedItem('data-bm-path')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-path').value:wrapperAttributes.getNamedItem('bm-path')?wrapperAttributes.getNamedItem('bm-path').value:'';params.animType=wrapperAttributes.getNamedItem('data-anim-type')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-type').value:wrapperAttributes.getNamedItem('data-bm-type')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-type').value:wrapperAttributes.getNamedItem('bm-type')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('bm-type').value:wrapperAttributes.getNamedItem('data-bm-renderer')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-renderer').value:wrapperAttributes.getNamedItem('bm-renderer')?wrapperAttributes.getNamedItem('bm-renderer').value:getRegisteredRenderer()||'canvas';var loop=wrapperAttributes.getNamedItem('data-anim-loop')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-loop').value:wrapperAttributes.getNamedItem('data-bm-loop')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-loop').value:wrapperAttributes.getNamedItem('bm-loop')?wrapperAttributes.getNamedItem('bm-loop').value:'';if(loop==='false'){params.loop=false;}else if(loop==='true'){params.loop=true;}else if(loop!==''){params.loop=parseInt(loop,10);}var autoplay=wrapperAttributes.getNamedItem('data-anim-autoplay')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-autoplay').value:wrapperAttributes.getNamedItem('data-bm-autoplay')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-autoplay').value:wrapperAttributes.getNamedItem('bm-autoplay')?wrapperAttributes.getNamedItem('bm-autoplay').value:true;params.autoplay=autoplay!=='false';params.name=wrapperAttributes.getNamedItem('data-name')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-name').value:wrapperAttributes.getNamedItem('data-bm-name')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-name').value:wrapperAttributes.getNamedItem('bm-name')?wrapperAttributes.getNamedItem('bm-name').value:'';var prerender=wrapperAttributes.getNamedItem('data-anim-prerender')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-prerender').value:wrapperAttributes.getNamedItem('data-bm-prerender')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-prerender').value:wrapperAttributes.getNamedItem('bm-prerender')?wrapperAttributes.getNamedItem('bm-prerender').value:'';if(prerender==='false'){params.prerender=false;}if(!params.path){this.trigger('destroy');}else {this.setParams(params);}};AnimationItem.prototype.includeLayers=function(data){if(data.op>this.animationData.op){this.animationData.op=data.op;this.totalFrames=Math.floor(data.op-this.animationData.ip);}var layers=this.animationData.layers;var i;var len=layers.length;var newLayers=data.layers;var j;var jLen=newLayers.length;for(j=0;j<jLen;j+=1){i=0;while(i<len){if(layers[i].id===newLayers[j].id){layers[i]=newLayers[j];break;}i+=1;}}if(data.chars||data.fonts){this.renderer.globalData.fontManager.addChars(data.chars);this.renderer.globalData.fontManager.addFonts(data.fonts,this.renderer.globalData.defs);}if(data.assets){len=data.assets.length;for(i=0;i<len;i+=1){this.animationData.assets.push(data.assets[i]);}}this.animationData.__complete=false;dataManager.completeAnimation(this.animationData,this.onSegmentComplete);};AnimationItem.prototype.onSegmentComplete=function(data){this.animationData=data;var expressionsPlugin=getExpressionsPlugin();if(expressionsPlugin){expressionsPlugin.initExpressions(this);}this.loadNextSegment();};AnimationItem.prototype.loadNextSegment=function(){var segments=this.animationData.segments;if(!segments||segments.length===0||!this.autoloadSegments){this.trigger('data_ready');this.timeCompleted=this.totalFrames;return;}var segment=segments.shift();this.timeCompleted=segment.time*this.frameRate;var segmentPath=this.path+this.fileName+'_'+this.segmentPos+'.json';this.segmentPos+=1;dataManager.loadData(segmentPath,this.includeLayers.bind(this),function(){this.trigger('data_failed');}.bind(this));};AnimationItem.prototype.loadSegments=function(){var segments=this.animationData.segments;if(!segments){this.timeCompleted=this.totalFrames;}this.loadNextSegment();};AnimationItem.prototype.imagesLoaded=function(){this.trigger('loaded_images');this.checkLoaded();};AnimationItem.prototype.preloadImages=function(){this.imagePreloader.setAssetsPath(this.assetsPath);this.imagePreloader.setPath(this.path);this.imagePreloader.loadAssets(this.animationData.assets,this.imagesLoaded.bind(this));};AnimationItem.prototype.configAnimation=function(animData){if(!this.renderer){return;}try{this.animationData=animData;if(this.initialSegment){this.totalFrames=Math.floor(this.initialSegment[1]-this.initialSegment[0]);this.firstFrame=Math.round(this.initialSegment[0]);}else {this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip);this.firstFrame=Math.round(this.animationData.ip);}this.renderer.configAnimation(animData);if(!animData.assets){animData.assets=[];}this.assets=this.animationData.assets;this.frameRate=this.animationData.fr;this.frameMult=this.animationData.fr/1000;this.renderer.searchExtraCompositions(animData.assets);this.markers=markerParser(animData.markers||[]);this.trigger('config_ready');this.preloadImages();this.loadSegments();this.updaFrameModifier();this.waitForFontsLoaded();if(this.isPaused){this.audioController.pause();}}catch(error){this.triggerConfigError(error);}};AnimationItem.prototype.waitForFontsLoaded=function(){if(!this.renderer){return;}if(this.renderer.globalData.fontManager.isLoaded){this.checkLoaded();}else {setTimeout(this.waitForFontsLoaded.bind(this),20);}};AnimationItem.prototype.checkLoaded=function(){if(!this.isLoaded&&this.renderer.globalData.fontManager.isLoaded&&(this.imagePreloader.loadedImages()||this.renderer.rendererType!=='canvas')&&this.imagePreloader.loadedFootages()){this.isLoaded=true;var expressionsPlugin=getExpressionsPlugin();if(expressionsPlugin){expressionsPlugin.initExpressions(this);}this.renderer.initItems();setTimeout(function(){this.trigger('DOMLoaded');}.bind(this),0);this.gotoFrame();if(this.autoplay){this.play();}}};AnimationItem.prototype.resize=function(width,height){// Adding this validation for backwards compatibility in case an event object was being passed down
		var _width=typeof width==='number'?width:undefined;var _height=typeof height==='number'?height:undefined;this.renderer.updateContainerSize(_width,_height);};AnimationItem.prototype.setSubframe=function(flag){this.isSubframeEnabled=!!flag;};AnimationItem.prototype.gotoFrame=function(){this.currentFrame=this.isSubframeEnabled?this.currentRawFrame:~~this.currentRawFrame;// eslint-disable-line no-bitwise
		if(this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted){this.currentFrame=this.timeCompleted;}this.trigger('enterFrame');this.renderFrame();this.trigger('drawnFrame');};AnimationItem.prototype.renderFrame=function(){if(this.isLoaded===false||!this.renderer){return;}try{if(this.expressionsPlugin){this.expressionsPlugin.resetFrame();}this.renderer.renderFrame(this.currentFrame+this.firstFrame);}catch(error){this.triggerRenderFrameError(error);}};AnimationItem.prototype.play=function(name){if(name&&this.name!==name){return;}if(this.isPaused===true){this.isPaused=false;this.trigger('_play');this.audioController.resume();if(this._idle){this._idle=false;this.trigger('_active');}}};AnimationItem.prototype.pause=function(name){if(name&&this.name!==name){return;}if(this.isPaused===false){this.isPaused=true;this.trigger('_pause');this._idle=true;this.trigger('_idle');this.audioController.pause();}};AnimationItem.prototype.togglePause=function(name){if(name&&this.name!==name){return;}if(this.isPaused===true){this.play();}else {this.pause();}};AnimationItem.prototype.stop=function(name){if(name&&this.name!==name){return;}this.pause();this.playCount=0;this._completedLoop=false;this.setCurrentRawFrameValue(0);};AnimationItem.prototype.getMarkerData=function(markerName){var marker;for(var i=0;i<this.markers.length;i+=1){marker=this.markers[i];if(marker.payload&&marker.payload.name===markerName){return marker;}}return null;};AnimationItem.prototype.goToAndStop=function(value,isFrame,name){if(name&&this.name!==name){return;}var numValue=Number(value);if(isNaN(numValue)){var marker=this.getMarkerData(value);if(marker){this.goToAndStop(marker.time,true);}}else if(isFrame){this.setCurrentRawFrameValue(value);}else {this.setCurrentRawFrameValue(value*this.frameModifier);}this.pause();};AnimationItem.prototype.goToAndPlay=function(value,isFrame,name){if(name&&this.name!==name){return;}var numValue=Number(value);if(isNaN(numValue)){var marker=this.getMarkerData(value);if(marker){if(!marker.duration){this.goToAndStop(marker.time,true);}else {this.playSegments([marker.time,marker.time+marker.duration],true);}}}else {this.goToAndStop(numValue,isFrame,name);}this.play();};AnimationItem.prototype.advanceTime=function(value){if(this.isPaused===true||this.isLoaded===false){return;}var nextValue=this.currentRawFrame+value*this.frameModifier;var _isComplete=false;// Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
		// If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
		if(nextValue>=this.totalFrames-1&&this.frameModifier>0){if(!this.loop||this.playCount===this.loop){if(!this.checkSegments(nextValue>this.totalFrames?nextValue%this.totalFrames:0)){_isComplete=true;nextValue=this.totalFrames-1;}}else if(nextValue>=this.totalFrames){this.playCount+=1;if(!this.checkSegments(nextValue%this.totalFrames)){this.setCurrentRawFrameValue(nextValue%this.totalFrames);this._completedLoop=true;this.trigger('loopComplete');}}else {this.setCurrentRawFrameValue(nextValue);}}else if(nextValue<0){if(!this.checkSegments(nextValue%this.totalFrames)){if(this.loop&&!(this.playCount--<=0&&this.loop!==true)){// eslint-disable-line no-plusplus
		this.setCurrentRawFrameValue(this.totalFrames+nextValue%this.totalFrames);if(!this._completedLoop){this._completedLoop=true;}else {this.trigger('loopComplete');}}else {_isComplete=true;nextValue=0;}}}else {this.setCurrentRawFrameValue(nextValue);}if(_isComplete){this.setCurrentRawFrameValue(nextValue);this.pause();this.trigger('complete');}};AnimationItem.prototype.adjustSegment=function(arr,offset){this.playCount=0;if(arr[1]<arr[0]){if(this.frameModifier>0){if(this.playSpeed<0){this.setSpeed(-this.playSpeed);}else {this.setDirection(-1);}}this.totalFrames=arr[0]-arr[1];this.timeCompleted=this.totalFrames;this.firstFrame=arr[1];this.setCurrentRawFrameValue(this.totalFrames-0.001-offset);}else if(arr[1]>arr[0]){if(this.frameModifier<0){if(this.playSpeed<0){this.setSpeed(-this.playSpeed);}else {this.setDirection(1);}}this.totalFrames=arr[1]-arr[0];this.timeCompleted=this.totalFrames;this.firstFrame=arr[0];this.setCurrentRawFrameValue(0.001+offset);}this.trigger('segmentStart');};AnimationItem.prototype.setSegment=function(init,end){var pendingFrame=-1;if(this.isPaused){if(this.currentRawFrame+this.firstFrame<init){pendingFrame=init;}else if(this.currentRawFrame+this.firstFrame>end){pendingFrame=end-init;}}this.firstFrame=init;this.totalFrames=end-init;this.timeCompleted=this.totalFrames;if(pendingFrame!==-1){this.goToAndStop(pendingFrame,true);}};AnimationItem.prototype.playSegments=function(arr,forceFlag){if(forceFlag){this.segments.length=0;}if(_typeof$4(arr[0])==='object'){var i;var len=arr.length;for(i=0;i<len;i+=1){this.segments.push(arr[i]);}}else {this.segments.push(arr);}if(this.segments.length&&forceFlag){this.adjustSegment(this.segments.shift(),0);}if(this.isPaused){this.play();}};AnimationItem.prototype.resetSegments=function(forceFlag){this.segments.length=0;this.segments.push([this.animationData.ip,this.animationData.op]);if(forceFlag){this.checkSegments(0);}};AnimationItem.prototype.checkSegments=function(offset){if(this.segments.length){this.adjustSegment(this.segments.shift(),offset);return true;}return false;};AnimationItem.prototype.destroy=function(name){if(name&&this.name!==name||!this.renderer){return;}this.renderer.destroy();this.imagePreloader.destroy();this.trigger('destroy');this._cbs=null;this.onEnterFrame=null;this.onLoopComplete=null;this.onComplete=null;this.onSegmentStart=null;this.onDestroy=null;this.renderer=null;this.expressionsPlugin=null;this.imagePreloader=null;this.projectInterface=null;};AnimationItem.prototype.setCurrentRawFrameValue=function(value){this.currentRawFrame=value;this.gotoFrame();};AnimationItem.prototype.setSpeed=function(val){this.playSpeed=val;this.updaFrameModifier();};AnimationItem.prototype.setDirection=function(val){this.playDirection=val<0?-1:1;this.updaFrameModifier();};AnimationItem.prototype.setLoop=function(isLooping){this.loop=isLooping;};AnimationItem.prototype.setVolume=function(val,name){if(name&&this.name!==name){return;}this.audioController.setVolume(val);};AnimationItem.prototype.getVolume=function(){return this.audioController.getVolume();};AnimationItem.prototype.mute=function(name){if(name&&this.name!==name){return;}this.audioController.mute();};AnimationItem.prototype.unmute=function(name){if(name&&this.name!==name){return;}this.audioController.unmute();};AnimationItem.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection;this.audioController.setRate(this.playSpeed*this.playDirection);};AnimationItem.prototype.getPath=function(){return this.path;};AnimationItem.prototype.getAssetsPath=function(assetData){var path='';if(assetData.e){path=assetData.p;}else if(this.assetsPath){var imagePath=assetData.p;if(imagePath.indexOf('images/')!==-1){imagePath=imagePath.split('/')[1];}path=this.assetsPath+imagePath;}else {path=this.path;path+=assetData.u?assetData.u:'';path+=assetData.p;}return path;};AnimationItem.prototype.getAssetData=function(id){var i=0;var len=this.assets.length;while(i<len){if(id===this.assets[i].id){return this.assets[i];}i+=1;}return null;};AnimationItem.prototype.hide=function(){this.renderer.hide();};AnimationItem.prototype.show=function(){this.renderer.show();};AnimationItem.prototype.getDuration=function(isFrame){return isFrame?this.totalFrames:this.totalFrames/this.frameRate;};AnimationItem.prototype.updateDocumentData=function(path,documentData,index){try{var element=this.renderer.getElementByPath(path);element.updateDocumentData(documentData,index);}catch(error){// TODO: decide how to handle catch case
		}};AnimationItem.prototype.trigger=function(name){if(this._cbs&&this._cbs[name]){switch(name){case'enterFrame':this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));break;case'drawnFrame':this.drawnFrameEvent.currentTime=this.currentFrame;this.drawnFrameEvent.totalTime=this.totalFrames;this.drawnFrameEvent.direction=this.frameModifier;this.triggerEvent(name,this.drawnFrameEvent);break;case'loopComplete':this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));break;case'complete':this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));break;case'segmentStart':this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));break;case'destroy':this.triggerEvent(name,new BMDestroyEvent(name,this));break;default:this.triggerEvent(name);}}if(name==='enterFrame'&&this.onEnterFrame){this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));}if(name==='loopComplete'&&this.onLoopComplete){this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));}if(name==='complete'&&this.onComplete){this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));}if(name==='segmentStart'&&this.onSegmentStart){this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));}if(name==='destroy'&&this.onDestroy){this.onDestroy.call(this,new BMDestroyEvent(name,this));}};AnimationItem.prototype.triggerRenderFrameError=function(nativeError){var error=new BMRenderFrameErrorEvent(nativeError,this.currentFrame);this.triggerEvent('error',error);if(this.onError){this.onError.call(this,error);}};AnimationItem.prototype.triggerConfigError=function(nativeError){var error=new BMConfigErrorEvent(nativeError,this.currentFrame);this.triggerEvent('error',error);if(this.onError){this.onError.call(this,error);}};var animationManager=function(){var moduleOb={};var registeredAnimations=[];var initTime=0;var len=0;var playingAnimationsNum=0;var _stopped=true;var _isFrozen=false;function removeElement(ev){var i=0;var animItem=ev.target;while(i<len){if(registeredAnimations[i].animation===animItem){registeredAnimations.splice(i,1);i-=1;len-=1;if(!animItem.isPaused){subtractPlayingCount();}}i+=1;}}function registerAnimation(element,animationData){if(!element){return null;}var i=0;while(i<len){if(registeredAnimations[i].elem===element&&registeredAnimations[i].elem!==null){return registeredAnimations[i].animation;}i+=1;}var animItem=new AnimationItem();setupAnimation(animItem,element);animItem.setData(element,animationData);return animItem;}function getRegisteredAnimations(){var i;var lenAnims=registeredAnimations.length;var animations=[];for(i=0;i<lenAnims;i+=1){animations.push(registeredAnimations[i].animation);}return animations;}function addPlayingCount(){playingAnimationsNum+=1;activate();}function subtractPlayingCount(){playingAnimationsNum-=1;}function setupAnimation(animItem,element){animItem.addEventListener('destroy',removeElement);animItem.addEventListener('_active',addPlayingCount);animItem.addEventListener('_idle',subtractPlayingCount);registeredAnimations.push({elem:element,animation:animItem});len+=1;}function loadAnimation(params){var animItem=new AnimationItem();setupAnimation(animItem,null);animItem.setParams(params);return animItem;}function setSpeed(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setSpeed(val,animation);}}function setDirection(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setDirection(val,animation);}}function play(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.play(animation);}}function resume(nowTime){var elapsedTime=nowTime-initTime;var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.advanceTime(elapsedTime);}initTime=nowTime;if(playingAnimationsNum&&!_isFrozen){window.requestAnimationFrame(resume);}else {_stopped=true;}}function first(nowTime){initTime=nowTime;window.requestAnimationFrame(resume);}function pause(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.pause(animation);}}function goToAndStop(value,isFrame,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);}}function stop(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.stop(animation);}}function togglePause(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.togglePause(animation);}}function destroy(animation){var i;for(i=len-1;i>=0;i-=1){registeredAnimations[i].animation.destroy(animation);}}function searchAnimations(animationData,standalone,renderer){var animElements=[].concat([].slice.call(document.getElementsByClassName('lottie')),[].slice.call(document.getElementsByClassName('bodymovin')));var i;var lenAnims=animElements.length;for(i=0;i<lenAnims;i+=1){if(renderer){animElements[i].setAttribute('data-bm-type',renderer);}registerAnimation(animElements[i],animationData);}if(standalone&&lenAnims===0){if(!renderer){renderer='svg';}var body=document.getElementsByTagName('body')[0];body.innerText='';var div=createTag('div');div.style.width='100%';div.style.height='100%';div.setAttribute('data-bm-type',renderer);body.appendChild(div);registerAnimation(div,animationData);}}function resize(){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.resize();}}function activate(){if(!_isFrozen&&playingAnimationsNum){if(_stopped){window.requestAnimationFrame(first);_stopped=false;}}}function freeze(){_isFrozen=true;}function unfreeze(){_isFrozen=false;activate();}function setVolume(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setVolume(val,animation);}}function mute(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.mute(animation);}}function unmute(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.unmute(animation);}}moduleOb.registerAnimation=registerAnimation;moduleOb.loadAnimation=loadAnimation;moduleOb.setSpeed=setSpeed;moduleOb.setDirection=setDirection;moduleOb.play=play;moduleOb.pause=pause;moduleOb.stop=stop;moduleOb.togglePause=togglePause;moduleOb.searchAnimations=searchAnimations;moduleOb.resize=resize;// moduleOb.start = start;
		moduleOb.goToAndStop=goToAndStop;moduleOb.destroy=destroy;moduleOb.freeze=freeze;moduleOb.unfreeze=unfreeze;moduleOb.setVolume=setVolume;moduleOb.mute=mute;moduleOb.unmute=unmute;moduleOb.getRegisteredAnimations=getRegisteredAnimations;return moduleOb;}();/* eslint-disable */var BezierFactory=function(){/**
		       * BezierEasing - use bezier curve for transition easing function
		       * by Gaëtan Renaudeau 2014 - 2015 – MIT License
		       *
		       * Credits: is based on Firefox's nsSMILKeySpline.cpp
		       * Usage:
		       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
		       * spline.get(x) => returns the easing value | x must be in [0, 1] range
		       *
		       */var ob={};ob.getBezierEasing=getBezierEasing;var beziers={};function getBezierEasing(a,b,c,d,nm){var str=nm||('bez_'+a+'_'+b+'_'+c+'_'+d).replace(/\./g,'p');if(beziers[str]){return beziers[str];}var bezEasing=new BezierEasing([a,b,c,d]);beziers[str]=bezEasing;return bezEasing;}// These values are established by empiricism with tests (tradeoff: performance VS precision)
		var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var float32ArraySupported=typeof Float32Array==='function';function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}function C(aA1){return 3.0*aA1;}// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
		function calcBezier(aT,aA1,aA2){return ((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
		function getSlope(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}function binarySubdivide(aX,aA,aB,mX1,mX2){var currentX,currentT,i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else {aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0)return aGuessT;var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}/**
		       * points is an array of [ mX1, mY1, mX2, mY2 ]
		       */function BezierEasing(points){this._p=points;this._mSampleValues=float32ArraySupported?new Float32Array(kSplineTableSize):new Array(kSplineTableSize);this._precomputed=false;this.get=this.get.bind(this);}BezierEasing.prototype={get:function get(x){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];if(!this._precomputed)this._precompute();if(mX1===mY1&&mX2===mY2)return x;// linear
		// Because JavaScript number are imprecise, we should guarantee the extremes are right.
		if(x===0)return 0;if(x===1)return 1;return calcBezier(this._getTForX(x),mY1,mY2);},// Private part
		_precompute:function _precompute(){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];this._precomputed=true;if(mX1!==mY1||mX2!==mY2){this._calcSampleValues();}},_calcSampleValues:function _calcSampleValues(){var mX1=this._p[0],mX2=this._p[2];for(var i=0;i<kSplineTableSize;++i){this._mSampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}},/**
		           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
		           */_getTForX:function _getTForX(aX){var mX1=this._p[0],mX2=this._p[2],mSampleValues=this._mSampleValues;var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&mSampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;// Interpolate to provide an initial guess for t
		var dist=(aX-mSampleValues[currentSample])/(mSampleValues[currentSample+1]-mSampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}if(initialSlope===0.0){return guessForT;}return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};return ob;}();var pooling=function(){function _double(arr){return arr.concat(createSizedArray(arr.length));}return {"double":_double};}();var poolFactory=function(){return function(initialLength,_create,_release){var _length=0;var _maxLength=initialLength;var pool=createSizedArray(_maxLength);var ob={newElement:newElement,release:release};function newElement(){var element;if(_length){_length-=1;element=pool[_length];}else {element=_create();}return element;}function release(element){if(_length===_maxLength){pool=pooling["double"](pool);_maxLength*=2;}if(_release){_release(element);}pool[_length]=element;_length+=1;}return ob;};}();var bezierLengthPool=function(){function create(){return {addedLength:0,percents:createTypedArray('float32',getDefaultCurveSegments()),lengths:createTypedArray('float32',getDefaultCurveSegments())};}return poolFactory(8,create);}();var segmentsLengthPool=function(){function create(){return {lengths:[],totalLength:0};}function release(element){var i;var len=element.lengths.length;for(i=0;i<len;i+=1){bezierLengthPool.release(element.lengths[i]);}element.lengths.length=0;}return poolFactory(8,create,release);}();function bezFunction(){var math=Math;function pointOnLine2D(x1,y1,x2,y2,x3,y3){var det1=x1*y2+y1*x3+x2*y3-x3*y2-y3*x1-x2*y1;return det1>-0.001&&det1<0.001;}function pointOnLine3D(x1,y1,z1,x2,y2,z2,x3,y3,z3){if(z1===0&&z2===0&&z3===0){return pointOnLine2D(x1,y1,x2,y2,x3,y3);}var dist1=math.sqrt(math.pow(x2-x1,2)+math.pow(y2-y1,2)+math.pow(z2-z1,2));var dist2=math.sqrt(math.pow(x3-x1,2)+math.pow(y3-y1,2)+math.pow(z3-z1,2));var dist3=math.sqrt(math.pow(x3-x2,2)+math.pow(y3-y2,2)+math.pow(z3-z2,2));var diffDist;if(dist1>dist2){if(dist1>dist3){diffDist=dist1-dist2-dist3;}else {diffDist=dist3-dist2-dist1;}}else if(dist3>dist2){diffDist=dist3-dist2-dist1;}else {diffDist=dist2-dist1-dist3;}return diffDist>-0.0001&&diffDist<0.0001;}var getBezierLength=function(){return function(pt1,pt2,pt3,pt4){var curveSegments=getDefaultCurveSegments();var k;var i;var len;var ptCoord;var perc;var addedLength=0;var ptDistance;var point=[];var lastPoint=[];var lengthData=bezierLengthPool.newElement();len=pt3.length;for(k=0;k<curveSegments;k+=1){perc=k/(curveSegments-1);ptDistance=0;for(i=0;i<len;i+=1){ptCoord=bmPow(1-perc,3)*pt1[i]+3*bmPow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bmPow(perc,2)*pt4[i]+bmPow(perc,3)*pt2[i];point[i]=ptCoord;if(lastPoint[i]!==null){ptDistance+=bmPow(point[i]-lastPoint[i],2);}lastPoint[i]=point[i];}if(ptDistance){ptDistance=bmSqrt(ptDistance);addedLength+=ptDistance;}lengthData.percents[k]=perc;lengthData.lengths[k]=addedLength;}lengthData.addedLength=addedLength;return lengthData;};}();function getSegmentsLength(shapeData){var segmentsLength=segmentsLengthPool.newElement();var closed=shapeData.c;var pathV=shapeData.v;var pathO=shapeData.o;var pathI=shapeData.i;var i;var len=shapeData._length;var lengths=segmentsLength.lengths;var totalLength=0;for(i=0;i<len-1;i+=1){lengths[i]=getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);totalLength+=lengths[i].addedLength;}if(closed&&len){lengths[i]=getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);totalLength+=lengths[i].addedLength;}segmentsLength.totalLength=totalLength;return segmentsLength;}function BezierData(length){this.segmentLength=0;this.points=new Array(length);}function PointData(partial,point){this.partialLength=partial;this.point=point;}var buildBezierData=function(){var storedData={};return function(pt1,pt2,pt3,pt4){var bezierName=(pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\./g,'p');if(!storedData[bezierName]){var curveSegments=getDefaultCurveSegments();var k;var i;var len;var ptCoord;var perc;var addedLength=0;var ptDistance;var point;var lastPoint=null;if(pt1.length===2&&(pt1[0]!==pt2[0]||pt1[1]!==pt2[1])&&pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1])&&pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){curveSegments=2;}var bezierData=new BezierData(curveSegments);len=pt3.length;for(k=0;k<curveSegments;k+=1){point=createSizedArray(len);perc=k/(curveSegments-1);ptDistance=0;for(i=0;i<len;i+=1){ptCoord=bmPow(1-perc,3)*pt1[i]+3*bmPow(1-perc,2)*perc*(pt1[i]+pt3[i])+3*(1-perc)*bmPow(perc,2)*(pt2[i]+pt4[i])+bmPow(perc,3)*pt2[i];point[i]=ptCoord;if(lastPoint!==null){ptDistance+=bmPow(point[i]-lastPoint[i],2);}}ptDistance=bmSqrt(ptDistance);addedLength+=ptDistance;bezierData.points[k]=new PointData(ptDistance,point);lastPoint=point;}bezierData.segmentLength=addedLength;storedData[bezierName]=bezierData;}return storedData[bezierName];};}();function getDistancePerc(perc,bezierData){var percents=bezierData.percents;var lengths=bezierData.lengths;var len=percents.length;var initPos=bmFloor((len-1)*perc);var lengthPos=perc*bezierData.addedLength;var lPerc=0;if(initPos===len-1||initPos===0||lengthPos===lengths[initPos]){return percents[initPos];}var dir=lengths[initPos]>lengthPos?-1:1;var flag=true;while(flag){if(lengths[initPos]<=lengthPos&&lengths[initPos+1]>lengthPos){lPerc=(lengthPos-lengths[initPos])/(lengths[initPos+1]-lengths[initPos]);flag=false;}else {initPos+=dir;}if(initPos<0||initPos>=len-1){// FIX for TypedArrays that don't store floating point values with enough accuracy
		if(initPos===len-1){return percents[initPos];}flag=false;}}return percents[initPos]+(percents[initPos+1]-percents[initPos])*lPerc;}function getPointInSegment(pt1,pt2,pt3,pt4,percent,bezierData){var t1=getDistancePerc(percent,bezierData);var u1=1-t1;var ptX=math.round((u1*u1*u1*pt1[0]+(t1*u1*u1+u1*t1*u1+u1*u1*t1)*pt3[0]+(t1*t1*u1+u1*t1*t1+t1*u1*t1)*pt4[0]+t1*t1*t1*pt2[0])*1000)/1000;var ptY=math.round((u1*u1*u1*pt1[1]+(t1*u1*u1+u1*t1*u1+u1*u1*t1)*pt3[1]+(t1*t1*u1+u1*t1*t1+t1*u1*t1)*pt4[1]+t1*t1*t1*pt2[1])*1000)/1000;return [ptX,ptY];}var bezierSegmentPoints=createTypedArray('float32',8);function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc,bezierData){if(startPerc<0){startPerc=0;}else if(startPerc>1){startPerc=1;}var t0=getDistancePerc(startPerc,bezierData);endPerc=endPerc>1?1:endPerc;var t1=getDistancePerc(endPerc,bezierData);var i;var len=pt1.length;var u0=1-t0;var u1=1-t1;var u0u0u0=u0*u0*u0;var t0u0u0_3=t0*u0*u0*3;// eslint-disable-line camelcase
		var t0t0u0_3=t0*t0*u0*3;// eslint-disable-line camelcase
		var t0t0t0=t0*t0*t0;//
		var u0u0u1=u0*u0*u1;var t0u0u1_3=t0*u0*u1+u0*t0*u1+u0*u0*t1;// eslint-disable-line camelcase
		var t0t0u1_3=t0*t0*u1+u0*t0*t1+t0*u0*t1;// eslint-disable-line camelcase
		var t0t0t1=t0*t0*t1;//
		var u0u1u1=u0*u1*u1;var t0u1u1_3=t0*u1*u1+u0*t1*u1+u0*u1*t1;// eslint-disable-line camelcase
		var t0t1u1_3=t0*t1*u1+u0*t1*t1+t0*u1*t1;// eslint-disable-line camelcase
		var t0t1t1=t0*t1*t1;//
		var u1u1u1=u1*u1*u1;var t1u1u1_3=t1*u1*u1+u1*t1*u1+u1*u1*t1;// eslint-disable-line camelcase
		var t1t1u1_3=t1*t1*u1+u1*t1*t1+t1*u1*t1;// eslint-disable-line camelcase
		var t1t1t1=t1*t1*t1;for(i=0;i<len;i+=1){bezierSegmentPoints[i*4]=math.round((u0u0u0*pt1[i]+t0u0u0_3*pt3[i]+t0t0u0_3*pt4[i]+t0t0t0*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		bezierSegmentPoints[i*4+1]=math.round((u0u0u1*pt1[i]+t0u0u1_3*pt3[i]+t0t0u1_3*pt4[i]+t0t0t1*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		bezierSegmentPoints[i*4+2]=math.round((u0u1u1*pt1[i]+t0u1u1_3*pt3[i]+t0t1u1_3*pt4[i]+t0t1t1*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		bezierSegmentPoints[i*4+3]=math.round((u1u1u1*pt1[i]+t1u1u1_3*pt3[i]+t1t1u1_3*pt4[i]+t1t1t1*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		}return bezierSegmentPoints;}return {getSegmentsLength:getSegmentsLength,getNewSegment:getNewSegment,getPointInSegment:getPointInSegment,buildBezierData:buildBezierData,pointOnLine2D:pointOnLine2D,pointOnLine3D:pointOnLine3D};}var bez=bezFunction();var initFrame=initialDefaultFrame;var mathAbs=Math.abs;function interpolateValue(frameNum,caching){var offsetTime=this.offsetTime;var newValue;if(this.propType==='multidimensional'){newValue=createTypedArray('float32',this.pv.length);}var iterationIndex=caching.lastIndex;var i=iterationIndex;var len=this.keyframes.length-1;var flag=true;var keyData;var nextKeyData;var keyframeMetadata;while(flag){keyData=this.keyframes[i];nextKeyData=this.keyframes[i+1];if(i===len-1&&frameNum>=nextKeyData.t-offsetTime){if(keyData.h){keyData=nextKeyData;}iterationIndex=0;break;}if(nextKeyData.t-offsetTime>frameNum){iterationIndex=i;break;}if(i<len-1){i+=1;}else {iterationIndex=0;flag=false;}}keyframeMetadata=this.keyframesMetadata[i]||{};var k;var kLen;var perc;var jLen;var j;var fnc;var nextKeyTime=nextKeyData.t-offsetTime;var keyTime=keyData.t-offsetTime;var endValue;if(keyData.to){if(!keyframeMetadata.bezierData){keyframeMetadata.bezierData=bez.buildBezierData(keyData.s,nextKeyData.s||keyData.e,keyData.to,keyData.ti);}var bezierData=keyframeMetadata.bezierData;if(frameNum>=nextKeyTime||frameNum<keyTime){var ind=frameNum>=nextKeyTime?bezierData.points.length-1:0;kLen=bezierData.points[ind].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[ind].point[k];}// caching._lastKeyframeIndex = -1;
		}else {if(keyframeMetadata.__fnct){fnc=keyframeMetadata.__fnct;}else {fnc=BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;keyframeMetadata.__fnct=fnc;}perc=fnc((frameNum-keyTime)/(nextKeyTime-keyTime));var distanceInLine=bezierData.segmentLength*perc;var segmentPerc;var addedLength=caching.lastFrame<frameNum&&caching._lastKeyframeIndex===i?caching._lastAddedLength:0;j=caching.lastFrame<frameNum&&caching._lastKeyframeIndex===i?caching._lastPoint:0;flag=true;jLen=bezierData.points.length;while(flag){addedLength+=bezierData.points[j].partialLength;if(distanceInLine===0||perc===0||j===bezierData.points.length-1){kLen=bezierData.points[j].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[j].point[k];}break;}else if(distanceInLine>=addedLength&&distanceInLine<addedLength+bezierData.points[j+1].partialLength){segmentPerc=(distanceInLine-addedLength)/bezierData.points[j+1].partialLength;kLen=bezierData.points[j].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[j].point[k]+(bezierData.points[j+1].point[k]-bezierData.points[j].point[k])*segmentPerc;}break;}if(j<jLen-1){j+=1;}else {flag=false;}}caching._lastPoint=j;caching._lastAddedLength=addedLength-bezierData.points[j].partialLength;caching._lastKeyframeIndex=i;}}else {var outX;var outY;var inX;var inY;var keyValue;len=keyData.s.length;endValue=nextKeyData.s||keyData.e;if(this.sh&&keyData.h!==1){if(frameNum>=nextKeyTime){newValue[0]=endValue[0];newValue[1]=endValue[1];newValue[2]=endValue[2];}else if(frameNum<=keyTime){newValue[0]=keyData.s[0];newValue[1]=keyData.s[1];newValue[2]=keyData.s[2];}else {var quatStart=createQuaternion(keyData.s);var quatEnd=createQuaternion(endValue);var time=(frameNum-keyTime)/(nextKeyTime-keyTime);quaternionToEuler(newValue,slerp(quatStart,quatEnd,time));}}else {for(i=0;i<len;i+=1){if(keyData.h!==1){if(frameNum>=nextKeyTime){perc=1;}else if(frameNum<keyTime){perc=0;}else {if(keyData.o.x.constructor===Array){if(!keyframeMetadata.__fnct){keyframeMetadata.__fnct=[];}if(!keyframeMetadata.__fnct[i]){outX=keyData.o.x[i]===undefined?keyData.o.x[0]:keyData.o.x[i];outY=keyData.o.y[i]===undefined?keyData.o.y[0]:keyData.o.y[i];inX=keyData.i.x[i]===undefined?keyData.i.x[0]:keyData.i.x[i];inY=keyData.i.y[i]===undefined?keyData.i.y[0]:keyData.i.y[i];fnc=BezierFactory.getBezierEasing(outX,outY,inX,inY).get;keyframeMetadata.__fnct[i]=fnc;}else {fnc=keyframeMetadata.__fnct[i];}}else if(!keyframeMetadata.__fnct){outX=keyData.o.x;outY=keyData.o.y;inX=keyData.i.x;inY=keyData.i.y;fnc=BezierFactory.getBezierEasing(outX,outY,inX,inY).get;keyData.keyframeMetadata=fnc;}else {fnc=keyframeMetadata.__fnct;}perc=fnc((frameNum-keyTime)/(nextKeyTime-keyTime));}}endValue=nextKeyData.s||keyData.e;keyValue=keyData.h===1?keyData.s[i]:keyData.s[i]+(endValue[i]-keyData.s[i])*perc;if(this.propType==='multidimensional'){newValue[i]=keyValue;}else {newValue=keyValue;}}}}caching.lastIndex=iterationIndex;return newValue;}// based on @Toji's https://github.com/toji/gl-matrix/
		function slerp(a,b,t){var out=[];var ax=a[0];var ay=a[1];var az=a[2];var aw=a[3];var bx=b[0];var by=b[1];var bz=b[2];var bw=b[3];var omega;var cosom;var sinom;var scale0;var scale1;cosom=ax*bx+ay*by+az*bz+aw*bw;if(cosom<0.0){cosom=-cosom;bx=-bx;by=-by;bz=-bz;bw=-bw;}if(1.0-cosom>0.000001){omega=Math.acos(cosom);sinom=Math.sin(omega);scale0=Math.sin((1.0-t)*omega)/sinom;scale1=Math.sin(t*omega)/sinom;}else {scale0=1.0-t;scale1=t;}out[0]=scale0*ax+scale1*bx;out[1]=scale0*ay+scale1*by;out[2]=scale0*az+scale1*bz;out[3]=scale0*aw+scale1*bw;return out;}function quaternionToEuler(out,quat){var qx=quat[0];var qy=quat[1];var qz=quat[2];var qw=quat[3];var heading=Math.atan2(2*qy*qw-2*qx*qz,1-2*qy*qy-2*qz*qz);var attitude=Math.asin(2*qx*qy+2*qz*qw);var bank=Math.atan2(2*qx*qw-2*qy*qz,1-2*qx*qx-2*qz*qz);out[0]=heading/degToRads;out[1]=attitude/degToRads;out[2]=bank/degToRads;}function createQuaternion(values){var heading=values[0]*degToRads;var attitude=values[1]*degToRads;var bank=values[2]*degToRads;var c1=Math.cos(heading/2);var c2=Math.cos(attitude/2);var c3=Math.cos(bank/2);var s1=Math.sin(heading/2);var s2=Math.sin(attitude/2);var s3=Math.sin(bank/2);var w=c1*c2*c3-s1*s2*s3;var x=s1*s2*c3+c1*c2*s3;var y=s1*c2*c3+c1*s2*s3;var z=c1*s2*c3-s1*c2*s3;return [x,y,z,w];}function getValueAtCurrentTime(){var frameNum=this.comp.renderedFrame-this.offsetTime;var initTime=this.keyframes[0].t-this.offsetTime;var endTime=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(frameNum===this._caching.lastFrame||this._caching.lastFrame!==initFrame&&(this._caching.lastFrame>=endTime&&frameNum>=endTime||this._caching.lastFrame<initTime&&frameNum<initTime))){if(this._caching.lastFrame>=frameNum){this._caching._lastKeyframeIndex=-1;this._caching.lastIndex=0;}var renderResult=this.interpolateValue(frameNum,this._caching);this.pv=renderResult;}this._caching.lastFrame=frameNum;return this.pv;}function setVValue(val){var multipliedValue;if(this.propType==='unidimensional'){multipliedValue=val*this.mult;if(mathAbs(this.v-multipliedValue)>0.00001){this.v=multipliedValue;this._mdf=true;}}else {var i=0;var len=this.v.length;while(i<len){multipliedValue=val[i]*this.mult;if(mathAbs(this.v[i]-multipliedValue)>0.00001){this.v[i]=multipliedValue;this._mdf=true;}i+=1;}}}function processEffectsSequence(){if(this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length){return;}if(this.lock){this.setVValue(this.pv);return;}this.lock=true;this._mdf=this._isFirstFrame;var i;var len=this.effectsSequence.length;var finalValue=this.kf?this.pv:this.data.k;for(i=0;i<len;i+=1){finalValue=this.effectsSequence[i](finalValue);}this.setVValue(finalValue);this._isFirstFrame=false;this.lock=false;this.frameId=this.elem.globalData.frameId;}function addEffect(effectFunction){this.effectsSequence.push(effectFunction);this.container.addDynamicProperty(this);}function ValueProperty(elem,data,mult,container){this.propType='unidimensional';this.mult=mult||1;this.data=data;this.v=mult?data.k*mult:data.k;this.pv=data.k;this._mdf=false;this.elem=elem;this.container=container;this.comp=elem.comp;this.k=false;this.kf=false;this.vel=0;this.effectsSequence=[];this._isFirstFrame=true;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.addEffect=addEffect;}function MultiDimensionalProperty(elem,data,mult,container){this.propType='multidimensional';this.mult=mult||1;this.data=data;this._mdf=false;this.elem=elem;this.container=container;this.comp=elem.comp;this.k=false;this.kf=false;this.frameId=-1;var i;var len=data.k.length;this.v=createTypedArray('float32',len);this.pv=createTypedArray('float32',len);this.vel=createTypedArray('float32',len);for(i=0;i<len;i+=1){this.v[i]=data.k[i]*this.mult;this.pv[i]=data.k[i];}this._isFirstFrame=true;this.effectsSequence=[];this.getValue=processEffectsSequence;this.setVValue=setVValue;this.addEffect=addEffect;}function KeyframedValueProperty(elem,data,mult,container){this.propType='unidimensional';this.keyframes=data.k;this.keyframesMetadata=[];this.offsetTime=elem.data.st;this.frameId=-1;this._caching={lastFrame:initFrame,lastIndex:0,value:0,_lastKeyframeIndex:-1};this.k=true;this.kf=true;this.data=data;this.mult=mult||1;this.elem=elem;this.container=container;this.comp=elem.comp;this.v=initFrame;this.pv=initFrame;this._isFirstFrame=true;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.interpolateValue=interpolateValue;this.effectsSequence=[getValueAtCurrentTime.bind(this)];this.addEffect=addEffect;}function KeyframedMultidimensionalProperty(elem,data,mult,container){this.propType='multidimensional';var i;var len=data.k.length;var s;var e;var to;var ti;for(i=0;i<len-1;i+=1){if(data.k[i].to&&data.k[i].s&&data.k[i+1]&&data.k[i+1].s){s=data.k[i].s;e=data.k[i+1].s;to=data.k[i].to;ti=data.k[i].ti;if(s.length===2&&!(s[0]===e[0]&&s[1]===e[1])&&bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0]+to[0],s[1]+to[1])&&bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0]+ti[0],e[1]+ti[1])||s.length===3&&!(s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])&&bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0]+to[0],s[1]+to[1],s[2]+to[2])&&bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0]+ti[0],e[1]+ti[1],e[2]+ti[2])){data.k[i].to=null;data.k[i].ti=null;}if(s[0]===e[0]&&s[1]===e[1]&&to[0]===0&&to[1]===0&&ti[0]===0&&ti[1]===0){if(s.length===2||s[2]===e[2]&&to[2]===0&&ti[2]===0){data.k[i].to=null;data.k[i].ti=null;}}}}this.effectsSequence=[getValueAtCurrentTime.bind(this)];this.data=data;this.keyframes=data.k;this.keyframesMetadata=[];this.offsetTime=elem.data.st;this.k=true;this.kf=true;this._isFirstFrame=true;this.mult=mult||1;this.elem=elem;this.container=container;this.comp=elem.comp;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.interpolateValue=interpolateValue;this.frameId=-1;var arrLen=data.k[0].s.length;this.v=createTypedArray('float32',arrLen);this.pv=createTypedArray('float32',arrLen);for(i=0;i<arrLen;i+=1){this.v[i]=initFrame;this.pv[i]=initFrame;}this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32',arrLen)};this.addEffect=addEffect;}var PropertyFactory=function(){function getProp(elem,data,type,mult,container){if(data.sid){data=elem.globalData.slotManager.getProp(data);}var p;if(!data.k.length){p=new ValueProperty(elem,data,mult,container);}else if(typeof data.k[0]==='number'){p=new MultiDimensionalProperty(elem,data,mult,container);}else {switch(type){case 0:p=new KeyframedValueProperty(elem,data,mult,container);break;case 1:p=new KeyframedMultidimensionalProperty(elem,data,mult,container);break;}}if(p.effectsSequence.length){container.addDynamicProperty(p);}return p;}var ob={getProp:getProp};return ob;}();function DynamicPropertyContainer(){}DynamicPropertyContainer.prototype={addDynamicProperty:function addDynamicProperty(prop){if(this.dynamicProperties.indexOf(prop)===-1){this.dynamicProperties.push(prop);this.container.addDynamicProperty(this);this._isAnimated=true;}},iterateDynamicProperties:function iterateDynamicProperties(){this._mdf=false;var i;var len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();if(this.dynamicProperties[i]._mdf){this._mdf=true;}}},initDynamicPropertyContainer:function initDynamicPropertyContainer(container){this.container=container;this.dynamicProperties=[];this._mdf=false;this._isAnimated=false;}};var pointPool=function(){function create(){return createTypedArray('float32',2);}return poolFactory(8,create);}();function ShapePath(){this.c=false;this._length=0;this._maxLength=8;this.v=createSizedArray(this._maxLength);this.o=createSizedArray(this._maxLength);this.i=createSizedArray(this._maxLength);}ShapePath.prototype.setPathData=function(closed,len){this.c=closed;this.setLength(len);var i=0;while(i<len){this.v[i]=pointPool.newElement();this.o[i]=pointPool.newElement();this.i[i]=pointPool.newElement();i+=1;}};ShapePath.prototype.setLength=function(len){while(this._maxLength<len){this.doubleArrayLength();}this._length=len;};ShapePath.prototype.doubleArrayLength=function(){this.v=this.v.concat(createSizedArray(this._maxLength));this.i=this.i.concat(createSizedArray(this._maxLength));this.o=this.o.concat(createSizedArray(this._maxLength));this._maxLength*=2;};ShapePath.prototype.setXYAt=function(x,y,type,pos,replace){var arr;this._length=Math.max(this._length,pos+1);if(this._length>=this._maxLength){this.doubleArrayLength();}switch(type){case'v':arr=this.v;break;case'i':arr=this.i;break;case'o':arr=this.o;break;default:arr=[];break;}if(!arr[pos]||arr[pos]&&!replace){arr[pos]=pointPool.newElement();}arr[pos][0]=x;arr[pos][1]=y;};ShapePath.prototype.setTripleAt=function(vX,vY,oX,oY,iX,iY,pos,replace){this.setXYAt(vX,vY,'v',pos,replace);this.setXYAt(oX,oY,'o',pos,replace);this.setXYAt(iX,iY,'i',pos,replace);};ShapePath.prototype.reverse=function(){var newPath=new ShapePath();newPath.setPathData(this.c,this._length);var vertices=this.v;var outPoints=this.o;var inPoints=this.i;var init=0;if(this.c){newPath.setTripleAt(vertices[0][0],vertices[0][1],inPoints[0][0],inPoints[0][1],outPoints[0][0],outPoints[0][1],0,false);init=1;}var cnt=this._length-1;var len=this._length;var i;for(i=init;i<len;i+=1){newPath.setTripleAt(vertices[cnt][0],vertices[cnt][1],inPoints[cnt][0],inPoints[cnt][1],outPoints[cnt][0],outPoints[cnt][1],i,false);cnt-=1;}return newPath;};ShapePath.prototype.length=function(){return this._length;};var shapePool=function(){function create(){return new ShapePath();}function release(shapePath){var len=shapePath._length;var i;for(i=0;i<len;i+=1){pointPool.release(shapePath.v[i]);pointPool.release(shapePath.i[i]);pointPool.release(shapePath.o[i]);shapePath.v[i]=null;shapePath.i[i]=null;shapePath.o[i]=null;}shapePath._length=0;shapePath.c=false;}function clone(shape){var cloned=factory.newElement();var i;var len=shape._length===undefined?shape.v.length:shape._length;cloned.setLength(len);cloned.c=shape.c;for(i=0;i<len;i+=1){cloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1],i);}return cloned;}var factory=poolFactory(4,create,release);factory.clone=clone;return factory;}();function ShapeCollection(){this._length=0;this._maxLength=4;this.shapes=createSizedArray(this._maxLength);}ShapeCollection.prototype.addShape=function(shapeData){if(this._length===this._maxLength){this.shapes=this.shapes.concat(createSizedArray(this._maxLength));this._maxLength*=2;}this.shapes[this._length]=shapeData;this._length+=1;};ShapeCollection.prototype.releaseShapes=function(){var i;for(i=0;i<this._length;i+=1){shapePool.release(this.shapes[i]);}this._length=0;};var shapeCollectionPool=function(){var ob={newShapeCollection:newShapeCollection,release:release};var _length=0;var _maxLength=4;var pool=createSizedArray(_maxLength);function newShapeCollection(){var shapeCollection;if(_length){_length-=1;shapeCollection=pool[_length];}else {shapeCollection=new ShapeCollection();}return shapeCollection;}function release(shapeCollection){var i;var len=shapeCollection._length;for(i=0;i<len;i+=1){shapePool.release(shapeCollection.shapes[i]);}shapeCollection._length=0;if(_length===_maxLength){pool=pooling["double"](pool);_maxLength*=2;}pool[_length]=shapeCollection;_length+=1;}return ob;}();var ShapePropertyFactory=function(){var initFrame=-999999;function interpolateShape(frameNum,previousValue,caching){var iterationIndex=caching.lastIndex;var keyPropS;var keyPropE;var isHold;var j;var k;var jLen;var kLen;var perc;var vertexValue;var kf=this.keyframes;if(frameNum<kf[0].t-this.offsetTime){keyPropS=kf[0].s[0];isHold=true;iterationIndex=0;}else if(frameNum>=kf[kf.length-1].t-this.offsetTime){keyPropS=kf[kf.length-1].s?kf[kf.length-1].s[0]:kf[kf.length-2].e[0];/* if(kf[kf.length - 1].s){
		                  keyPropS = kf[kf.length - 1].s[0];
		              }else{
		                  keyPropS = kf[kf.length - 2].e[0];
		              } */isHold=true;}else {var i=iterationIndex;var len=kf.length-1;var flag=true;var keyData;var nextKeyData;var keyframeMetadata;while(flag){keyData=kf[i];nextKeyData=kf[i+1];if(nextKeyData.t-this.offsetTime>frameNum){break;}if(i<len-1){i+=1;}else {flag=false;}}keyframeMetadata=this.keyframesMetadata[i]||{};isHold=keyData.h===1;iterationIndex=i;if(!isHold){if(frameNum>=nextKeyData.t-this.offsetTime){perc=1;}else if(frameNum<keyData.t-this.offsetTime){perc=0;}else {var fnc;if(keyframeMetadata.__fnct){fnc=keyframeMetadata.__fnct;}else {fnc=BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;keyframeMetadata.__fnct=fnc;}perc=fnc((frameNum-(keyData.t-this.offsetTime))/(nextKeyData.t-this.offsetTime-(keyData.t-this.offsetTime)));}keyPropE=nextKeyData.s?nextKeyData.s[0]:keyData.e[0];}keyPropS=keyData.s[0];}jLen=previousValue._length;kLen=keyPropS.i[0].length;caching.lastIndex=iterationIndex;for(j=0;j<jLen;j+=1){for(k=0;k<kLen;k+=1){vertexValue=isHold?keyPropS.i[j][k]:keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;previousValue.i[j][k]=vertexValue;vertexValue=isHold?keyPropS.o[j][k]:keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;previousValue.o[j][k]=vertexValue;vertexValue=isHold?keyPropS.v[j][k]:keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;previousValue.v[j][k]=vertexValue;}}}function interpolateShapeCurrentTime(){var frameNum=this.comp.renderedFrame-this.offsetTime;var initTime=this.keyframes[0].t-this.offsetTime;var endTime=this.keyframes[this.keyframes.length-1].t-this.offsetTime;var lastFrame=this._caching.lastFrame;if(!(lastFrame!==initFrame&&(lastFrame<initTime&&frameNum<initTime||lastFrame>endTime&&frameNum>endTime))){/// /
		this._caching.lastIndex=lastFrame<frameNum?this._caching.lastIndex:0;this.interpolateShape(frameNum,this.pv,this._caching);/// /
		}this._caching.lastFrame=frameNum;return this.pv;}function resetShape(){this.paths=this.localShapeCollection;}function shapesEqual(shape1,shape2){if(shape1._length!==shape2._length||shape1.c!==shape2.c){return false;}var i;var len=shape1._length;for(i=0;i<len;i+=1){if(shape1.v[i][0]!==shape2.v[i][0]||shape1.v[i][1]!==shape2.v[i][1]||shape1.o[i][0]!==shape2.o[i][0]||shape1.o[i][1]!==shape2.o[i][1]||shape1.i[i][0]!==shape2.i[i][0]||shape1.i[i][1]!==shape2.i[i][1]){return false;}}return true;}function setVValue(newPath){if(!shapesEqual(this.v,newPath)){this.v=shapePool.clone(newPath);this.localShapeCollection.releaseShapes();this.localShapeCollection.addShape(this.v);this._mdf=true;this.paths=this.localShapeCollection;}}function processEffectsSequence(){if(this.elem.globalData.frameId===this.frameId){return;}if(!this.effectsSequence.length){this._mdf=false;return;}if(this.lock){this.setVValue(this.pv);return;}this.lock=true;this._mdf=false;var finalValue;if(this.kf){finalValue=this.pv;}else if(this.data.ks){finalValue=this.data.ks.k;}else {finalValue=this.data.pt.k;}var i;var len=this.effectsSequence.length;for(i=0;i<len;i+=1){finalValue=this.effectsSequence[i](finalValue);}this.setVValue(finalValue);this.lock=false;this.frameId=this.elem.globalData.frameId;}function ShapeProperty(elem,data,type){this.propType='shape';this.comp=elem.comp;this.container=elem;this.elem=elem;this.data=data;this.k=false;this.kf=false;this._mdf=false;var pathData=type===3?data.pt.k:data.ks.k;this.v=shapePool.clone(pathData);this.pv=shapePool.clone(this.v);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.paths=this.localShapeCollection;this.paths.addShape(this.v);this.reset=resetShape;this.effectsSequence=[];}function addEffect(effectFunction){this.effectsSequence.push(effectFunction);this.container.addDynamicProperty(this);}ShapeProperty.prototype.interpolateShape=interpolateShape;ShapeProperty.prototype.getValue=processEffectsSequence;ShapeProperty.prototype.setVValue=setVValue;ShapeProperty.prototype.addEffect=addEffect;function KeyframedShapeProperty(elem,data,type){this.propType='shape';this.comp=elem.comp;this.elem=elem;this.container=elem;this.offsetTime=elem.data.st;this.keyframes=type===3?data.pt.k:data.ks.k;this.keyframesMetadata=[];this.k=true;this.kf=true;var len=this.keyframes[0].s[0].i.length;this.v=shapePool.newElement();this.v.setPathData(this.keyframes[0].s[0].c,len);this.pv=shapePool.clone(this.v);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.paths=this.localShapeCollection;this.paths.addShape(this.v);this.lastFrame=initFrame;this.reset=resetShape;this._caching={lastFrame:initFrame,lastIndex:0};this.effectsSequence=[interpolateShapeCurrentTime.bind(this)];}KeyframedShapeProperty.prototype.getValue=processEffectsSequence;KeyframedShapeProperty.prototype.interpolateShape=interpolateShape;KeyframedShapeProperty.prototype.setVValue=setVValue;KeyframedShapeProperty.prototype.addEffect=addEffect;var EllShapeProperty=function(){var cPoint=roundCorner;function EllShapePropertyFactory(elem,data){this.v=shapePool.newElement();this.v.setPathData(true,4);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.paths=this.localShapeCollection;this.localShapeCollection.addShape(this.v);this.d=data.d;this.elem=elem;this.comp=elem.comp;this.frameId=-1;this.initDynamicPropertyContainer(elem);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.s=PropertyFactory.getProp(elem,data.s,1,0,this);if(this.dynamicProperties.length){this.k=true;}else {this.k=false;this.convertEllToPath();}}EllShapePropertyFactory.prototype={reset:resetShape,getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertEllToPath();}},convertEllToPath:function convertEllToPath(){var p0=this.p.v[0];var p1=this.p.v[1];var s0=this.s.v[0]/2;var s1=this.s.v[1]/2;var _cw=this.d!==3;var _v=this.v;_v.v[0][0]=p0;_v.v[0][1]=p1-s1;_v.v[1][0]=_cw?p0+s0:p0-s0;_v.v[1][1]=p1;_v.v[2][0]=p0;_v.v[2][1]=p1+s1;_v.v[3][0]=_cw?p0-s0:p0+s0;_v.v[3][1]=p1;_v.i[0][0]=_cw?p0-s0*cPoint:p0+s0*cPoint;_v.i[0][1]=p1-s1;_v.i[1][0]=_cw?p0+s0:p0-s0;_v.i[1][1]=p1-s1*cPoint;_v.i[2][0]=_cw?p0+s0*cPoint:p0-s0*cPoint;_v.i[2][1]=p1+s1;_v.i[3][0]=_cw?p0-s0:p0+s0;_v.i[3][1]=p1+s1*cPoint;_v.o[0][0]=_cw?p0+s0*cPoint:p0-s0*cPoint;_v.o[0][1]=p1-s1;_v.o[1][0]=_cw?p0+s0:p0-s0;_v.o[1][1]=p1+s1*cPoint;_v.o[2][0]=_cw?p0-s0*cPoint:p0+s0*cPoint;_v.o[2][1]=p1+s1;_v.o[3][0]=_cw?p0-s0:p0+s0;_v.o[3][1]=p1-s1*cPoint;}};extendPrototype([DynamicPropertyContainer],EllShapePropertyFactory);return EllShapePropertyFactory;}();var StarShapeProperty=function(){function StarShapePropertyFactory(elem,data){this.v=shapePool.newElement();this.v.setPathData(true,0);this.elem=elem;this.comp=elem.comp;this.data=data;this.frameId=-1;this.d=data.d;this.initDynamicPropertyContainer(elem);if(data.sy===1){this.ir=PropertyFactory.getProp(elem,data.ir,0,0,this);this.is=PropertyFactory.getProp(elem,data.is,0,0.01,this);this.convertToPath=this.convertStarToPath;}else {this.convertToPath=this.convertPolygonToPath;}this.pt=PropertyFactory.getProp(elem,data.pt,0,0,this);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.r=PropertyFactory.getProp(elem,data.r,0,degToRads,this);this.or=PropertyFactory.getProp(elem,data.or,0,0,this);this.os=PropertyFactory.getProp(elem,data.os,0,0.01,this);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.localShapeCollection.addShape(this.v);this.paths=this.localShapeCollection;if(this.dynamicProperties.length){this.k=true;}else {this.k=false;this.convertToPath();}}StarShapePropertyFactory.prototype={reset:resetShape,getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertToPath();}},convertStarToPath:function convertStarToPath(){var numPts=Math.floor(this.pt.v)*2;var angle=Math.PI*2/numPts;/* this.v.v.length = numPts;
		                  this.v.i.length = numPts;
		                  this.v.o.length = numPts; */var longFlag=true;var longRad=this.or.v;var shortRad=this.ir.v;var longRound=this.os.v;var shortRound=this.is.v;var longPerimSegment=2*Math.PI*longRad/(numPts*2);var shortPerimSegment=2*Math.PI*shortRad/(numPts*2);var i;var rad;var roundness;var perimSegment;var currentAng=-Math.PI/2;currentAng+=this.r.v;var dir=this.data.d===3?-1:1;this.v._length=0;for(i=0;i<numPts;i+=1){rad=longFlag?longRad:shortRad;roundness=longFlag?longRound:shortRound;perimSegment=longFlag?longPerimSegment:shortPerimSegment;var x=rad*Math.cos(currentAng);var y=rad*Math.sin(currentAng);var ox=x===0&&y===0?0:y/Math.sqrt(x*x+y*y);var oy=x===0&&y===0?0:-x/Math.sqrt(x*x+y*y);x+=+this.p.v[0];y+=+this.p.v[1];this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir,i,true);/* this.v.v[i] = [x,y];
		                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
		                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
		                      this.v._length = numPts; */longFlag=!longFlag;currentAng+=angle*dir;}},convertPolygonToPath:function convertPolygonToPath(){var numPts=Math.floor(this.pt.v);var angle=Math.PI*2/numPts;var rad=this.or.v;var roundness=this.os.v;var perimSegment=2*Math.PI*rad/(numPts*4);var i;var currentAng=-Math.PI*0.5;var dir=this.data.d===3?-1:1;currentAng+=this.r.v;this.v._length=0;for(i=0;i<numPts;i+=1){var x=rad*Math.cos(currentAng);var y=rad*Math.sin(currentAng);var ox=x===0&&y===0?0:y/Math.sqrt(x*x+y*y);var oy=x===0&&y===0?0:-x/Math.sqrt(x*x+y*y);x+=+this.p.v[0];y+=+this.p.v[1];this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir,i,true);currentAng+=angle*dir;}this.paths.length=0;this.paths[0]=this.v;}};extendPrototype([DynamicPropertyContainer],StarShapePropertyFactory);return StarShapePropertyFactory;}();var RectShapeProperty=function(){function RectShapePropertyFactory(elem,data){this.v=shapePool.newElement();this.v.c=true;this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.localShapeCollection.addShape(this.v);this.paths=this.localShapeCollection;this.elem=elem;this.comp=elem.comp;this.frameId=-1;this.d=data.d;this.initDynamicPropertyContainer(elem);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.s=PropertyFactory.getProp(elem,data.s,1,0,this);this.r=PropertyFactory.getProp(elem,data.r,0,0,this);if(this.dynamicProperties.length){this.k=true;}else {this.k=false;this.convertRectToPath();}}RectShapePropertyFactory.prototype={convertRectToPath:function convertRectToPath(){var p0=this.p.v[0];var p1=this.p.v[1];var v0=this.s.v[0]/2;var v1=this.s.v[1]/2;var round=bmMin(v0,v1,this.r.v);var cPoint=round*(1-roundCorner);this.v._length=0;if(this.d===2||this.d===1){this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,0,true);this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,p0+v0,p1+v1-round,1,true);if(round!==0){this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2,true);this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3,true);this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4,true);this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5,true);this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6,true);this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7,true);}else {this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);}}else {this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0,true);if(round!==0){this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1,true);this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2,true);this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3,true);this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4,true);this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5,true);this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6,true);this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7,true);}else {this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1,true);this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2,true);this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3,true);}}},getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertRectToPath();}},reset:resetShape};extendPrototype([DynamicPropertyContainer],RectShapePropertyFactory);return RectShapePropertyFactory;}();function getShapeProp(elem,data,type){var prop;if(type===3||type===4){var dataProp=type===3?data.pt:data.ks;var keys=dataProp.k;if(keys.length){prop=new KeyframedShapeProperty(elem,data,type);}else {prop=new ShapeProperty(elem,data,type);}}else if(type===5){prop=new RectShapeProperty(elem,data);}else if(type===6){prop=new EllShapeProperty(elem,data);}else if(type===7){prop=new StarShapeProperty(elem,data);}if(prop.k){elem.addDynamicProperty(prop);}return prop;}function getConstructorFunction(){return ShapeProperty;}function getKeyframedConstructorFunction(){return KeyframedShapeProperty;}var ob={};ob.getShapeProp=getShapeProp;ob.getConstructorFunction=getConstructorFunction;ob.getKeyframedConstructorFunction=getKeyframedConstructorFunction;return ob;}();/*!
		   Transformation Matrix v2.0
		   (c) Epistemex 2014-2015
		   www.epistemex.com
		   By Ken Fyrstenberg
		   Contributions by leeoniya.
		   License: MIT, header required.
		   */ /**
		   * 2D transformation matrix object initialized with identity matrix.
		   *
		   * The matrix can synchronize a canvas context by supplying the context
		   * as an argument, or later apply current absolute transform to an
		   * existing context.
		   *
		   * All values are handled as floating point values.
		   *
		   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
		   * @prop {number} a - scale x
		   * @prop {number} b - shear y
		   * @prop {number} c - shear x
		   * @prop {number} d - scale y
		   * @prop {number} e - translate x
		   * @prop {number} f - translate y
		   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
		   * @constructor
		   */var Matrix=function(){var _cos=Math.cos;var _sin=Math.sin;var _tan=Math.tan;var _rnd=Math.round;function reset(){this.props[0]=1;this.props[1]=0;this.props[2]=0;this.props[3]=0;this.props[4]=0;this.props[5]=1;this.props[6]=0;this.props[7]=0;this.props[8]=0;this.props[9]=0;this.props[10]=1;this.props[11]=0;this.props[12]=0;this.props[13]=0;this.props[14]=0;this.props[15]=1;return this;}function rotate(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);}function rotateX(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(1,0,0,0,0,mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1);}function rotateY(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,0,mSin,0,0,1,0,0,-mSin,0,mCos,0,0,0,0,1);}function rotateZ(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);}function shear(sx,sy){return this._t(1,sy,sx,1,0,0);}function skew(ax,ay){return this.shear(_tan(ax),_tan(ay));}function skewFromAxis(ax,angle){var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,mSin,0,0,-mSin,mCos,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,_tan(ax),1,0,0,0,0,1,0,0,0,0,1)._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);// return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
		}function scale(sx,sy,sz){if(!sz&&sz!==0){sz=1;}if(sx===1&&sy===1&&sz===1){return this;}return this._t(sx,0,0,0,0,sy,0,0,0,0,sz,0,0,0,0,1);}function setTransform(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.props[0]=a;this.props[1]=b;this.props[2]=c;this.props[3]=d;this.props[4]=e;this.props[5]=f;this.props[6]=g;this.props[7]=h;this.props[8]=i;this.props[9]=j;this.props[10]=k;this.props[11]=l;this.props[12]=m;this.props[13]=n;this.props[14]=o;this.props[15]=p;return this;}function translate(tx,ty,tz){tz=tz||0;if(tx!==0||ty!==0||tz!==0){return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);}return this;}function transform(a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2){var _p=this.props;if(a2===1&&b2===0&&c2===0&&d2===0&&e2===0&&f2===1&&g2===0&&h2===0&&i2===0&&j2===0&&k2===1&&l2===0){// NOTE: commenting this condition because TurboFan deoptimizes code when present
		// if(m2 !== 0 || n2 !== 0 || o2 !== 0){
		_p[12]=_p[12]*a2+_p[15]*m2;_p[13]=_p[13]*f2+_p[15]*n2;_p[14]=_p[14]*k2+_p[15]*o2;_p[15]*=p2;// }
		this._identityCalculated=false;return this;}var a1=_p[0];var b1=_p[1];var c1=_p[2];var d1=_p[3];var e1=_p[4];var f1=_p[5];var g1=_p[6];var h1=_p[7];var i1=_p[8];var j1=_p[9];var k1=_p[10];var l1=_p[11];var m1=_p[12];var n1=_p[13];var o1=_p[14];var p1=_p[15];/* matrix order (canvas compatible):
		           * ace
		           * bdf
		           * 001
		           */_p[0]=a1*a2+b1*e2+c1*i2+d1*m2;_p[1]=a1*b2+b1*f2+c1*j2+d1*n2;_p[2]=a1*c2+b1*g2+c1*k2+d1*o2;_p[3]=a1*d2+b1*h2+c1*l2+d1*p2;_p[4]=e1*a2+f1*e2+g1*i2+h1*m2;_p[5]=e1*b2+f1*f2+g1*j2+h1*n2;_p[6]=e1*c2+f1*g2+g1*k2+h1*o2;_p[7]=e1*d2+f1*h2+g1*l2+h1*p2;_p[8]=i1*a2+j1*e2+k1*i2+l1*m2;_p[9]=i1*b2+j1*f2+k1*j2+l1*n2;_p[10]=i1*c2+j1*g2+k1*k2+l1*o2;_p[11]=i1*d2+j1*h2+k1*l2+l1*p2;_p[12]=m1*a2+n1*e2+o1*i2+p1*m2;_p[13]=m1*b2+n1*f2+o1*j2+p1*n2;_p[14]=m1*c2+n1*g2+o1*k2+p1*o2;_p[15]=m1*d2+n1*h2+o1*l2+p1*p2;this._identityCalculated=false;return this;}function multiply(matrix){var matrixProps=matrix.props;return this.transform(matrixProps[0],matrixProps[1],matrixProps[2],matrixProps[3],matrixProps[4],matrixProps[5],matrixProps[6],matrixProps[7],matrixProps[8],matrixProps[9],matrixProps[10],matrixProps[11],matrixProps[12],matrixProps[13],matrixProps[14],matrixProps[15]);}function isIdentity(){if(!this._identityCalculated){this._identity=!(this.props[0]!==1||this.props[1]!==0||this.props[2]!==0||this.props[3]!==0||this.props[4]!==0||this.props[5]!==1||this.props[6]!==0||this.props[7]!==0||this.props[8]!==0||this.props[9]!==0||this.props[10]!==1||this.props[11]!==0||this.props[12]!==0||this.props[13]!==0||this.props[14]!==0||this.props[15]!==1);this._identityCalculated=true;}return this._identity;}function equals(matr){var i=0;while(i<16){if(matr.props[i]!==this.props[i]){return false;}i+=1;}return true;}function clone(matr){var i;for(i=0;i<16;i+=1){matr.props[i]=this.props[i];}return matr;}function cloneFromProps(props){var i;for(i=0;i<16;i+=1){this.props[i]=props[i];}}function applyToPoint(x,y,z){return {x:x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12],y:x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13],z:x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14]};/* return {
		           x: x * me.a + y * me.c + me.e,
		           y: x * me.b + y * me.d + me.f
		           }; */}function applyToX(x,y,z){return x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12];}function applyToY(x,y,z){return x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13];}function applyToZ(x,y,z){return x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14];}function getInverseMatrix(){var determinant=this.props[0]*this.props[5]-this.props[1]*this.props[4];var a=this.props[5]/determinant;var b=-this.props[1]/determinant;var c=-this.props[4]/determinant;var d=this.props[0]/determinant;var e=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/determinant;var f=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/determinant;var inverseMatrix=new Matrix();inverseMatrix.props[0]=a;inverseMatrix.props[1]=b;inverseMatrix.props[4]=c;inverseMatrix.props[5]=d;inverseMatrix.props[12]=e;inverseMatrix.props[13]=f;return inverseMatrix;}function inversePoint(pt){var inverseMatrix=this.getInverseMatrix();return inverseMatrix.applyToPointArray(pt[0],pt[1],pt[2]||0);}function inversePoints(pts){var i;var len=pts.length;var retPts=[];for(i=0;i<len;i+=1){retPts[i]=inversePoint(pts[i]);}return retPts;}function applyToTriplePoints(pt1,pt2,pt3){var arr=createTypedArray('float32',6);if(this.isIdentity()){arr[0]=pt1[0];arr[1]=pt1[1];arr[2]=pt2[0];arr[3]=pt2[1];arr[4]=pt3[0];arr[5]=pt3[1];}else {var p0=this.props[0];var p1=this.props[1];var p4=this.props[4];var p5=this.props[5];var p12=this.props[12];var p13=this.props[13];arr[0]=pt1[0]*p0+pt1[1]*p4+p12;arr[1]=pt1[0]*p1+pt1[1]*p5+p13;arr[2]=pt2[0]*p0+pt2[1]*p4+p12;arr[3]=pt2[0]*p1+pt2[1]*p5+p13;arr[4]=pt3[0]*p0+pt3[1]*p4+p12;arr[5]=pt3[0]*p1+pt3[1]*p5+p13;}return arr;}function applyToPointArray(x,y,z){var arr;if(this.isIdentity()){arr=[x,y,z];}else {arr=[x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12],x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13],x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14]];}return arr;}function applyToPointStringified(x,y){if(this.isIdentity()){return x+','+y;}var _p=this.props;return Math.round((x*_p[0]+y*_p[4]+_p[12])*100)/100+','+Math.round((x*_p[1]+y*_p[5]+_p[13])*100)/100;}function toCSS(){// Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
		/* if(this.isIdentity()) {
		              return '';
		          } */var i=0;var props=this.props;var cssValue='matrix3d(';var v=10000;while(i<16){cssValue+=_rnd(props[i]*v)/v;cssValue+=i===15?')':',';i+=1;}return cssValue;}function roundMatrixProperty(val){var v=10000;if(val<0.000001&&val>0||val>-0.000001&&val<0){return _rnd(val*v)/v;}return val;}function to2dCSS(){// Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
		/* if(this.isIdentity()) {
		              return '';
		          } */var props=this.props;var _a=roundMatrixProperty(props[0]);var _b=roundMatrixProperty(props[1]);var _c=roundMatrixProperty(props[4]);var _d=roundMatrixProperty(props[5]);var _e=roundMatrixProperty(props[12]);var _f=roundMatrixProperty(props[13]);return 'matrix('+_a+','+_b+','+_c+','+_d+','+_e+','+_f+')';}return function(){this.reset=reset;this.rotate=rotate;this.rotateX=rotateX;this.rotateY=rotateY;this.rotateZ=rotateZ;this.skew=skew;this.skewFromAxis=skewFromAxis;this.shear=shear;this.scale=scale;this.setTransform=setTransform;this.translate=translate;this.transform=transform;this.multiply=multiply;this.applyToPoint=applyToPoint;this.applyToX=applyToX;this.applyToY=applyToY;this.applyToZ=applyToZ;this.applyToPointArray=applyToPointArray;this.applyToTriplePoints=applyToTriplePoints;this.applyToPointStringified=applyToPointStringified;this.toCSS=toCSS;this.to2dCSS=to2dCSS;this.clone=clone;this.cloneFromProps=cloneFromProps;this.equals=equals;this.inversePoints=inversePoints;this.inversePoint=inversePoint;this.getInverseMatrix=getInverseMatrix;this._t=this.transform;this.isIdentity=isIdentity;this._identity=true;this._identityCalculated=false;this.props=createTypedArray('float32',16);this.reset();};}();function _typeof$3(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$3=function _typeof(obj){return typeof obj;};}else {_typeof$3=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$3(obj);}var lottie={};function setLocation(href){setLocationHref(href);}function searchAnimations(){{animationManager.searchAnimations();}}function setSubframeRendering(flag){setSubframeEnabled(flag);}function setPrefix(prefix){setIdPrefix(prefix);}function loadAnimation(params){return animationManager.loadAnimation(params);}function setQuality(value){if(typeof value==='string'){switch(value){case'high':setDefaultCurveSegments(200);break;default:case'medium':setDefaultCurveSegments(50);break;case'low':setDefaultCurveSegments(10);break;}}else if(!isNaN(value)&&value>1){setDefaultCurveSegments(value);}}function inBrowser(){return typeof navigator!=='undefined';}function installPlugin(type,plugin){if(type==='expressions'){setExpressionsPlugin(plugin);}}function getFactory(name){switch(name){case'propertyFactory':return PropertyFactory;case'shapePropertyFactory':return ShapePropertyFactory;case'matrix':return Matrix;default:return null;}}lottie.play=animationManager.play;lottie.pause=animationManager.pause;lottie.setLocationHref=setLocation;lottie.togglePause=animationManager.togglePause;lottie.setSpeed=animationManager.setSpeed;lottie.setDirection=animationManager.setDirection;lottie.stop=animationManager.stop;lottie.searchAnimations=searchAnimations;lottie.registerAnimation=animationManager.registerAnimation;lottie.loadAnimation=loadAnimation;lottie.setSubframeRendering=setSubframeRendering;lottie.resize=animationManager.resize;// lottie.start = start;
		lottie.goToAndStop=animationManager.goToAndStop;lottie.destroy=animationManager.destroy;lottie.setQuality=setQuality;lottie.inBrowser=inBrowser;lottie.installPlugin=installPlugin;lottie.freeze=animationManager.freeze;lottie.unfreeze=animationManager.unfreeze;lottie.setVolume=animationManager.setVolume;lottie.mute=animationManager.mute;lottie.unmute=animationManager.unmute;lottie.getRegisteredAnimations=animationManager.getRegisteredAnimations;lottie.useWebWorker=setWebWorker;lottie.setIDPrefix=setPrefix;lottie.__getFactory=getFactory;lottie.version='5.12.2';function checkReady(){if(document.readyState==='complete'){clearInterval(readyStateCheckInterval);searchAnimations();}}function getQueryVariable(variable){var vars=queryString.split('&');for(var i=0;i<vars.length;i+=1){var pair=vars[i].split('=');if(decodeURIComponent(pair[0])==variable){// eslint-disable-line eqeqeq
		return decodeURIComponent(pair[1]);}}return null;}var queryString='';{var scripts=document.getElementsByTagName('script');var index=scripts.length-1;var myScript=scripts[index]||{src:''};queryString=myScript.src?myScript.src.replace(/^[^\?]+\??/,''):'';// eslint-disable-line no-useless-escape
		getQueryVariable('renderer');}var readyStateCheckInterval=setInterval(checkReady,100);// this adds bodymovin to the window object for backwards compatibility
		try{if(!(('object'==="undefined"?"undefined":_typeof$3(exports))==='object'&&'object'!=='undefined')&&!(typeof undefined==='function'&&undefined.amd)// eslint-disable-line no-undef
		){window.bodymovin=lottie;}}catch(err){//
		}var ShapeModifiers=function(){var ob={};var modifiers={};ob.registerModifier=registerModifier;ob.getModifier=getModifier;function registerModifier(nm,factory){if(!modifiers[nm]){modifiers[nm]=factory;}}function getModifier(nm,elem,data){return new modifiers[nm](elem,data);}return ob;}();function ShapeModifier(){}ShapeModifier.prototype.initModifierProperties=function(){};ShapeModifier.prototype.addShapeToModifier=function(){};ShapeModifier.prototype.addShape=function(data){if(!this.closed){// Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
		data.sh.container.addDynamicProperty(data.sh);var shapeData={shape:data.sh,data:data,localShapeCollection:shapeCollectionPool.newShapeCollection()};this.shapes.push(shapeData);this.addShapeToModifier(shapeData);if(this._isAnimated){data.setAsAnimated();}}};ShapeModifier.prototype.init=function(elem,data){this.shapes=[];this.elem=elem;this.initDynamicPropertyContainer(elem);this.initModifierProperties(elem,data);this.frameId=initialDefaultFrame;this.closed=false;this.k=false;if(this.dynamicProperties.length){this.k=true;}else {this.getValue(true);}};ShapeModifier.prototype.processKeys=function(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();};extendPrototype([DynamicPropertyContainer],ShapeModifier);function TrimModifier(){}extendPrototype([ShapeModifier],TrimModifier);TrimModifier.prototype.initModifierProperties=function(elem,data){this.s=PropertyFactory.getProp(elem,data.s,0,0.01,this);this.e=PropertyFactory.getProp(elem,data.e,0,0.01,this);this.o=PropertyFactory.getProp(elem,data.o,0,0,this);this.sValue=0;this.eValue=0;this.getValue=this.processKeys;this.m=data.m;this._isAnimated=!!this.s.effectsSequence.length||!!this.e.effectsSequence.length||!!this.o.effectsSequence.length;};TrimModifier.prototype.addShapeToModifier=function(shapeData){shapeData.pathsData=[];};TrimModifier.prototype.calculateShapeEdges=function(s,e,shapeLength,addedLength,totalModifierLength){var segments=[];if(e<=1){segments.push({s:s,e:e});}else if(s>=1){segments.push({s:s-1,e:e-1});}else {segments.push({s:s,e:1});segments.push({s:0,e:e-1});}var shapeSegments=[];var i;var len=segments.length;var segmentOb;for(i=0;i<len;i+=1){segmentOb=segments[i];if(!(segmentOb.e*totalModifierLength<addedLength||segmentOb.s*totalModifierLength>addedLength+shapeLength)){var shapeS;var shapeE;if(segmentOb.s*totalModifierLength<=addedLength){shapeS=0;}else {shapeS=(segmentOb.s*totalModifierLength-addedLength)/shapeLength;}if(segmentOb.e*totalModifierLength>=addedLength+shapeLength){shapeE=1;}else {shapeE=(segmentOb.e*totalModifierLength-addedLength)/shapeLength;}shapeSegments.push([shapeS,shapeE]);}}if(!shapeSegments.length){shapeSegments.push([0,0]);}return shapeSegments;};TrimModifier.prototype.releasePathsData=function(pathsData){var i;var len=pathsData.length;for(i=0;i<len;i+=1){segmentsLengthPool.release(pathsData[i]);}pathsData.length=0;return pathsData;};TrimModifier.prototype.processShapes=function(_isFirstFrame){var s;var e;if(this._mdf||_isFirstFrame){var o=this.o.v%360/360;if(o<0){o+=1;}if(this.s.v>1){s=1+o;}else if(this.s.v<0){s=0+o;}else {s=this.s.v+o;}if(this.e.v>1){e=1+o;}else if(this.e.v<0){e=0+o;}else {e=this.e.v+o;}if(s>e){var _s=s;s=e;e=_s;}s=Math.round(s*10000)*0.0001;e=Math.round(e*10000)*0.0001;this.sValue=s;this.eValue=e;}else {s=this.sValue;e=this.eValue;}var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var pathsData;var pathData;var totalShapeLength;var totalModifierLength=0;if(e===s){for(i=0;i<len;i+=1){this.shapes[i].localShapeCollection.releaseShapes();this.shapes[i].shape._mdf=true;this.shapes[i].shape.paths=this.shapes[i].localShapeCollection;if(this._mdf){this.shapes[i].pathsData.length=0;}}}else if(!(e===1&&s===0||e===0&&s===1)){var segments=[];var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];// if shape hasn't changed and trim properties haven't changed, cached previous path can be used
		if(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame&&this.m!==2){shapeData.shape.paths=shapeData.localShapeCollection;}else {shapePaths=shapeData.shape.paths;jLen=shapePaths._length;totalShapeLength=0;if(!shapeData.shape._mdf&&shapeData.pathsData.length){totalShapeLength=shapeData.totalShapeLength;}else {pathsData=this.releasePathsData(shapeData.pathsData);for(j=0;j<jLen;j+=1){pathData=bez.getSegmentsLength(shapePaths.shapes[j]);pathsData.push(pathData);totalShapeLength+=pathData.totalLength;}shapeData.totalShapeLength=totalShapeLength;shapeData.pathsData=pathsData;}totalModifierLength+=totalShapeLength;shapeData.shape._mdf=true;}}var shapeS=s;var shapeE=e;var addedLength=0;var edges;for(i=len-1;i>=0;i-=1){shapeData=this.shapes[i];if(shapeData.shape._mdf){localShapeCollection=shapeData.localShapeCollection;localShapeCollection.releaseShapes();// if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
		if(this.m===2&&len>1){edges=this.calculateShapeEdges(s,e,shapeData.totalShapeLength,addedLength,totalModifierLength);addedLength+=shapeData.totalShapeLength;}else {edges=[[shapeS,shapeE]];}jLen=edges.length;for(j=0;j<jLen;j+=1){shapeS=edges[j][0];shapeE=edges[j][1];segments.length=0;if(shapeE<=1){segments.push({s:shapeData.totalShapeLength*shapeS,e:shapeData.totalShapeLength*shapeE});}else if(shapeS>=1){segments.push({s:shapeData.totalShapeLength*(shapeS-1),e:shapeData.totalShapeLength*(shapeE-1)});}else {segments.push({s:shapeData.totalShapeLength*shapeS,e:shapeData.totalShapeLength});segments.push({s:0,e:shapeData.totalShapeLength*(shapeE-1)});}var newShapesData=this.addShapes(shapeData,segments[0]);if(segments[0].s!==segments[0].e){if(segments.length>1){var lastShapeInCollection=shapeData.shape.paths.shapes[shapeData.shape.paths._length-1];if(lastShapeInCollection.c){var lastShape=newShapesData.pop();this.addPaths(newShapesData,localShapeCollection);newShapesData=this.addShapes(shapeData,segments[1],lastShape);}else {this.addPaths(newShapesData,localShapeCollection);newShapesData=this.addShapes(shapeData,segments[1]);}}this.addPaths(newShapesData,localShapeCollection);}}shapeData.shape.paths=localShapeCollection;}}}else if(this._mdf){for(i=0;i<len;i+=1){// Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
		// Don't remove this even if it's losing cached info.
		this.shapes[i].pathsData.length=0;this.shapes[i].shape._mdf=true;}}};TrimModifier.prototype.addPaths=function(newPaths,localShapeCollection){var i;var len=newPaths.length;for(i=0;i<len;i+=1){localShapeCollection.addShape(newPaths[i]);}};TrimModifier.prototype.addSegment=function(pt1,pt2,pt3,pt4,shapePath,pos,newShape){shapePath.setXYAt(pt2[0],pt2[1],'o',pos);shapePath.setXYAt(pt3[0],pt3[1],'i',pos+1);if(newShape){shapePath.setXYAt(pt1[0],pt1[1],'v',pos);}shapePath.setXYAt(pt4[0],pt4[1],'v',pos+1);};TrimModifier.prototype.addSegmentFromArray=function(points,shapePath,pos,newShape){shapePath.setXYAt(points[1],points[5],'o',pos);shapePath.setXYAt(points[2],points[6],'i',pos+1);if(newShape){shapePath.setXYAt(points[0],points[4],'v',pos);}shapePath.setXYAt(points[3],points[7],'v',pos+1);};TrimModifier.prototype.addShapes=function(shapeData,shapeSegment,shapePath){var pathsData=shapeData.pathsData;var shapePaths=shapeData.shape.paths.shapes;var i;var len=shapeData.shape.paths._length;var j;var jLen;var addedLength=0;var currentLengthData;var segmentCount;var lengths;var segment;var shapes=[];var initPos;var newShape=true;if(!shapePath){shapePath=shapePool.newElement();segmentCount=0;initPos=0;}else {segmentCount=shapePath._length;initPos=shapePath._length;}shapes.push(shapePath);for(i=0;i<len;i+=1){lengths=pathsData[i].lengths;shapePath.c=shapePaths[i].c;jLen=shapePaths[i].c?lengths.length:lengths.length+1;for(j=1;j<jLen;j+=1){currentLengthData=lengths[j-1];if(addedLength+currentLengthData.addedLength<shapeSegment.s){addedLength+=currentLengthData.addedLength;shapePath.c=false;}else if(addedLength>shapeSegment.e){shapePath.c=false;break;}else {if(shapeSegment.s<=addedLength&&shapeSegment.e>=addedLength+currentLengthData.addedLength){this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);newShape=false;}else {segment=bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j],(shapeSegment.s-addedLength)/currentLengthData.addedLength,(shapeSegment.e-addedLength)/currentLengthData.addedLength,lengths[j-1]);this.addSegmentFromArray(segment,shapePath,segmentCount,newShape);// this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
		newShape=false;shapePath.c=false;}addedLength+=currentLengthData.addedLength;segmentCount+=1;}}if(shapePaths[i].c&&lengths.length){currentLengthData=lengths[j-1];if(addedLength<=shapeSegment.e){var segmentLength=lengths[j-1].addedLength;if(shapeSegment.s<=addedLength&&shapeSegment.e>=addedLength+segmentLength){this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);newShape=false;}else {segment=bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0],(shapeSegment.s-addedLength)/segmentLength,(shapeSegment.e-addedLength)/segmentLength,lengths[j-1]);this.addSegmentFromArray(segment,shapePath,segmentCount,newShape);// this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
		newShape=false;shapePath.c=false;}}else {shapePath.c=false;}addedLength+=currentLengthData.addedLength;segmentCount+=1;}if(shapePath._length){shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);shapePath.setXYAt(shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1],'o',shapePath._length-1);}if(addedLength>shapeSegment.e){break;}if(i<len-1){shapePath=shapePool.newElement();newShape=true;shapes.push(shapePath);segmentCount=0;}}return shapes;};function PuckerAndBloatModifier(){}extendPrototype([ShapeModifier],PuckerAndBloatModifier);PuckerAndBloatModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.amount=PropertyFactory.getProp(elem,data.a,0,null,this);this._isAnimated=!!this.amount.effectsSequence.length;};PuckerAndBloatModifier.prototype.processPath=function(path,amount){var percent=amount/100;var centerPoint=[0,0];var pathLength=path._length;var i=0;for(i=0;i<pathLength;i+=1){centerPoint[0]+=path.v[i][0];centerPoint[1]+=path.v[i][1];}centerPoint[0]/=pathLength;centerPoint[1]/=pathLength;var clonedPath=shapePool.newElement();clonedPath.c=path.c;var vX;var vY;var oX;var oY;var iX;var iY;for(i=0;i<pathLength;i+=1){vX=path.v[i][0]+(centerPoint[0]-path.v[i][0])*percent;vY=path.v[i][1]+(centerPoint[1]-path.v[i][1])*percent;oX=path.o[i][0]+(centerPoint[0]-path.o[i][0])*-percent;oY=path.o[i][1]+(centerPoint[1]-path.o[i][1])*-percent;iX=path.i[i][0]+(centerPoint[0]-path.i[i][0])*-percent;iY=path.i[i][1]+(centerPoint[1]-path.i[i][1])*-percent;clonedPath.setTripleAt(vX,vY,oX,oY,iX,iY,i);}return clonedPath;};PuckerAndBloatModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var amount=this.amount.v;if(amount!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],amount));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};var TransformPropertyFactory=function(){var defaultVector=[0,0];function applyToMatrix(mat){var _mdf=this._mdf;this.iterateDynamicProperties();this._mdf=this._mdf||_mdf;if(this.a){mat.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);}if(this.s){mat.scale(this.s.v[0],this.s.v[1],this.s.v[2]);}if(this.sk){mat.skewFromAxis(-this.sk.v,this.sa.v);}if(this.r){mat.rotate(-this.r.v);}else {mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);}if(this.data.p.s){if(this.data.p.z){mat.translate(this.px.v,this.py.v,-this.pz.v);}else {mat.translate(this.px.v,this.py.v,0);}}else {mat.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}}function processKeys(forceRender){if(this.elem.globalData.frameId===this.frameId){return;}if(this._isDirty){this.precalculateMatrix();this._isDirty=false;}this.iterateDynamicProperties();if(this._mdf||forceRender){var frameRate;this.v.cloneFromProps(this.pre.props);if(this.appliedTransformations<1){this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);}if(this.appliedTransformations<2){this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);}if(this.sk&&this.appliedTransformations<3){this.v.skewFromAxis(-this.sk.v,this.sa.v);}if(this.r&&this.appliedTransformations<4){this.v.rotate(-this.r.v);}else if(!this.r&&this.appliedTransformations<4){this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);}if(this.autoOriented){var v1;var v2;frameRate=this.elem.globalData.frameRate;if(this.p&&this.p.keyframes&&this.p.getValueAtTime){if(this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t){v1=this.p.getValueAtTime((this.p.keyframes[0].t+0.01)/frameRate,0);v2=this.p.getValueAtTime(this.p.keyframes[0].t/frameRate,0);}else if(this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t){v1=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/frameRate,0);v2=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-0.05)/frameRate,0);}else {v1=this.p.pv;v2=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-0.01)/frameRate,this.p.offsetTime);}}else if(this.px&&this.px.keyframes&&this.py.keyframes&&this.px.getValueAtTime&&this.py.getValueAtTime){v1=[];v2=[];var px=this.px;var py=this.py;if(px._caching.lastFrame+px.offsetTime<=px.keyframes[0].t){v1[0]=px.getValueAtTime((px.keyframes[0].t+0.01)/frameRate,0);v1[1]=py.getValueAtTime((py.keyframes[0].t+0.01)/frameRate,0);v2[0]=px.getValueAtTime(px.keyframes[0].t/frameRate,0);v2[1]=py.getValueAtTime(py.keyframes[0].t/frameRate,0);}else if(px._caching.lastFrame+px.offsetTime>=px.keyframes[px.keyframes.length-1].t){v1[0]=px.getValueAtTime(px.keyframes[px.keyframes.length-1].t/frameRate,0);v1[1]=py.getValueAtTime(py.keyframes[py.keyframes.length-1].t/frameRate,0);v2[0]=px.getValueAtTime((px.keyframes[px.keyframes.length-1].t-0.01)/frameRate,0);v2[1]=py.getValueAtTime((py.keyframes[py.keyframes.length-1].t-0.01)/frameRate,0);}else {v1=[px.pv,py.pv];v2[0]=px.getValueAtTime((px._caching.lastFrame+px.offsetTime-0.01)/frameRate,px.offsetTime);v2[1]=py.getValueAtTime((py._caching.lastFrame+py.offsetTime-0.01)/frameRate,py.offsetTime);}}else {v2=defaultVector;v1=v2;}this.v.rotate(-Math.atan2(v1[1]-v2[1],v1[0]-v2[0]));}if(this.data.p&&this.data.p.s){if(this.data.p.z){this.v.translate(this.px.v,this.py.v,-this.pz.v);}else {this.v.translate(this.px.v,this.py.v,0);}}else {this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}}this.frameId=this.elem.globalData.frameId;}function precalculateMatrix(){this.appliedTransformations=0;this.pre.reset();if(!this.a.effectsSequence.length){this.pre.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);this.appliedTransformations=1;}else {return;}if(!this.s.effectsSequence.length){this.pre.scale(this.s.v[0],this.s.v[1],this.s.v[2]);this.appliedTransformations=2;}else {return;}if(this.sk){if(!this.sk.effectsSequence.length&&!this.sa.effectsSequence.length){this.pre.skewFromAxis(-this.sk.v,this.sa.v);this.appliedTransformations=3;}else {return;}}if(this.r){if(!this.r.effectsSequence.length){this.pre.rotate(-this.r.v);this.appliedTransformations=4;}}else if(!this.rz.effectsSequence.length&&!this.ry.effectsSequence.length&&!this.rx.effectsSequence.length&&!this.or.effectsSequence.length){this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);this.appliedTransformations=4;}}function autoOrient(){//
		// var prevP = this.getValueAtTime();
		}function addDynamicProperty(prop){this._addDynamicProperty(prop);this.elem.addDynamicProperty(prop);this._isDirty=true;}function TransformProperty(elem,data,container){this.elem=elem;this.frameId=-1;this.propType='transform';this.data=data;this.v=new Matrix();// Precalculated matrix with non animated properties
		this.pre=new Matrix();this.appliedTransformations=0;this.initDynamicPropertyContainer(container||elem);if(data.p&&data.p.s){this.px=PropertyFactory.getProp(elem,data.p.x,0,0,this);this.py=PropertyFactory.getProp(elem,data.p.y,0,0,this);if(data.p.z){this.pz=PropertyFactory.getProp(elem,data.p.z,0,0,this);}}else {this.p=PropertyFactory.getProp(elem,data.p||{k:[0,0,0]},1,0,this);}if(data.rx){this.rx=PropertyFactory.getProp(elem,data.rx,0,degToRads,this);this.ry=PropertyFactory.getProp(elem,data.ry,0,degToRads,this);this.rz=PropertyFactory.getProp(elem,data.rz,0,degToRads,this);if(data.or.k[0].ti){var i;var len=data.or.k.length;for(i=0;i<len;i+=1){data.or.k[i].to=null;data.or.k[i].ti=null;}}this.or=PropertyFactory.getProp(elem,data.or,1,degToRads,this);// sh Indicates it needs to be capped between -180 and 180
		this.or.sh=true;}else {this.r=PropertyFactory.getProp(elem,data.r||{k:0},0,degToRads,this);}if(data.sk){this.sk=PropertyFactory.getProp(elem,data.sk,0,degToRads,this);this.sa=PropertyFactory.getProp(elem,data.sa,0,degToRads,this);}this.a=PropertyFactory.getProp(elem,data.a||{k:[0,0,0]},1,0,this);this.s=PropertyFactory.getProp(elem,data.s||{k:[100,100,100]},1,0.01,this);// Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
		if(data.o){this.o=PropertyFactory.getProp(elem,data.o,0,0.01,elem);}else {this.o={_mdf:false,v:1};}this._isDirty=true;if(!this.dynamicProperties.length){this.getValue(true);}}TransformProperty.prototype={applyToMatrix:applyToMatrix,getValue:processKeys,precalculateMatrix:precalculateMatrix,autoOrient:autoOrient};extendPrototype([DynamicPropertyContainer],TransformProperty);TransformProperty.prototype.addDynamicProperty=addDynamicProperty;TransformProperty.prototype._addDynamicProperty=DynamicPropertyContainer.prototype.addDynamicProperty;function getTransformProperty(elem,data,container){return new TransformProperty(elem,data,container);}return {getTransformProperty:getTransformProperty};}();function RepeaterModifier(){}extendPrototype([ShapeModifier],RepeaterModifier);RepeaterModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.c=PropertyFactory.getProp(elem,data.c,0,null,this);this.o=PropertyFactory.getProp(elem,data.o,0,null,this);this.tr=TransformPropertyFactory.getTransformProperty(elem,data.tr,this);this.so=PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);this.eo=PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);this.data=data;if(!this.dynamicProperties.length){this.getValue(true);}this._isAnimated=!!this.dynamicProperties.length;this.pMatrix=new Matrix();this.rMatrix=new Matrix();this.sMatrix=new Matrix();this.tMatrix=new Matrix();this.matrix=new Matrix();};RepeaterModifier.prototype.applyTransforms=function(pMatrix,rMatrix,sMatrix,transform,perc,inv){var dir=inv?-1:1;var scaleX=transform.s.v[0]+(1-transform.s.v[0])*(1-perc);var scaleY=transform.s.v[1]+(1-transform.s.v[1])*(1-perc);pMatrix.translate(transform.p.v[0]*dir*perc,transform.p.v[1]*dir*perc,transform.p.v[2]);rMatrix.translate(-transform.a.v[0],-transform.a.v[1],transform.a.v[2]);rMatrix.rotate(-transform.r.v*dir*perc);rMatrix.translate(transform.a.v[0],transform.a.v[1],transform.a.v[2]);sMatrix.translate(-transform.a.v[0],-transform.a.v[1],transform.a.v[2]);sMatrix.scale(inv?1/scaleX:scaleX,inv?1/scaleY:scaleY);sMatrix.translate(transform.a.v[0],transform.a.v[1],transform.a.v[2]);};RepeaterModifier.prototype.init=function(elem,arr,pos,elemsData){this.elem=elem;this.arr=arr;this.pos=pos;this.elemsData=elemsData;this._currentCopies=0;this._elements=[];this._groups=[];this.frameId=-1;this.initDynamicPropertyContainer(elem);this.initModifierProperties(elem,arr[pos]);while(pos>0){pos-=1;// this._elements.unshift(arr.splice(pos,1)[0]);
		this._elements.unshift(arr[pos]);}if(this.dynamicProperties.length){this.k=true;}else {this.getValue(true);}};RepeaterModifier.prototype.resetElements=function(elements){var i;var len=elements.length;for(i=0;i<len;i+=1){elements[i]._processed=false;if(elements[i].ty==='gr'){this.resetElements(elements[i].it);}}};RepeaterModifier.prototype.cloneElements=function(elements){var newElements=JSON.parse(JSON.stringify(elements));this.resetElements(newElements);return newElements;};RepeaterModifier.prototype.changeGroupRender=function(elements,renderFlag){var i;var len=elements.length;for(i=0;i<len;i+=1){elements[i]._render=renderFlag;if(elements[i].ty==='gr'){this.changeGroupRender(elements[i].it,renderFlag);}}};RepeaterModifier.prototype.processShapes=function(_isFirstFrame){var items;var itemsTransform;var i;var dir;var cont;var hasReloaded=false;if(this._mdf||_isFirstFrame){var copies=Math.ceil(this.c.v);if(this._groups.length<copies){while(this._groups.length<copies){var group={it:this.cloneElements(this._elements),ty:'gr'};group.it.push({a:{a:0,ix:1,k:[0,0]},nm:'Transform',o:{a:0,ix:7,k:100},p:{a:0,ix:2,k:[0,0]},r:{a:1,ix:6,k:[{s:0,e:0,t:0},{s:0,e:0,t:1}]},s:{a:0,ix:3,k:[100,100]},sa:{a:0,ix:5,k:0},sk:{a:0,ix:4,k:0},ty:'tr'});this.arr.splice(0,0,group);this._groups.splice(0,0,group);this._currentCopies+=1;}this.elem.reloadShapes();hasReloaded=true;}cont=0;var renderFlag;for(i=0;i<=this._groups.length-1;i+=1){renderFlag=cont<copies;this._groups[i]._render=renderFlag;this.changeGroupRender(this._groups[i].it,renderFlag);if(!renderFlag){var elems=this.elemsData[i].it;var transformData=elems[elems.length-1];if(transformData.transform.op.v!==0){transformData.transform.op._mdf=true;transformData.transform.op.v=0;}else {transformData.transform.op._mdf=false;}}cont+=1;}this._currentCopies=copies;/// /
		var offset=this.o.v;var offsetModulo=offset%1;var roundOffset=offset>0?Math.floor(offset):Math.ceil(offset);var pProps=this.pMatrix.props;var rProps=this.rMatrix.props;var sProps=this.sMatrix.props;this.pMatrix.reset();this.rMatrix.reset();this.sMatrix.reset();this.tMatrix.reset();this.matrix.reset();var iteration=0;if(offset>0){while(iteration<roundOffset){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,false);iteration+=1;}if(offsetModulo){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,offsetModulo,false);iteration+=offsetModulo;}}else if(offset<0){while(iteration>roundOffset){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,true);iteration-=1;}if(offsetModulo){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-offsetModulo,true);iteration-=offsetModulo;}}i=this.data.m===1?0:this._currentCopies-1;dir=this.data.m===1?1:-1;cont=this._currentCopies;var j;var jLen;while(cont){items=this.elemsData[i].it;itemsTransform=items[items.length-1].transform.mProps.v.props;jLen=itemsTransform.length;items[items.length-1].transform.mProps._mdf=true;items[items.length-1].transform.op._mdf=true;items[items.length-1].transform.op.v=this._currentCopies===1?this.so.v:this.so.v+(this.eo.v-this.so.v)*(i/(this._currentCopies-1));if(iteration!==0){if(i!==0&&dir===1||i!==this._currentCopies-1&&dir===-1){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,false);}this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);for(j=0;j<jLen;j+=1){itemsTransform[j]=this.matrix.props[j];}this.matrix.reset();}else {this.matrix.reset();for(j=0;j<jLen;j+=1){itemsTransform[j]=this.matrix.props[j];}}iteration+=1;cont-=1;i+=dir;}}else {cont=this._currentCopies;i=0;dir=1;while(cont){items=this.elemsData[i].it;itemsTransform=items[items.length-1].transform.mProps.v.props;items[items.length-1].transform.mProps._mdf=false;items[items.length-1].transform.op._mdf=false;cont-=1;i+=dir;}}return hasReloaded;};RepeaterModifier.prototype.addShape=function(){};function RoundCornersModifier(){}extendPrototype([ShapeModifier],RoundCornersModifier);RoundCornersModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.rd=PropertyFactory.getProp(elem,data.r,0,null,this);this._isAnimated=!!this.rd.effectsSequence.length;};RoundCornersModifier.prototype.processPath=function(path,round){var clonedPath=shapePool.newElement();clonedPath.c=path.c;var i;var len=path._length;var currentV;var currentI;var currentO;var closerV;var distance;var newPosPerc;var index=0;var vX;var vY;var oX;var oY;var iX;var iY;for(i=0;i<len;i+=1){currentV=path.v[i];currentO=path.o[i];currentI=path.i[i];if(currentV[0]===currentO[0]&&currentV[1]===currentO[1]&&currentV[0]===currentI[0]&&currentV[1]===currentI[1]){if((i===0||i===len-1)&&!path.c){clonedPath.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);/* clonedPath.v[index] = currentV;
		                  clonedPath.o[index] = currentO;
		                  clonedPath.i[index] = currentI; */index+=1;}else {if(i===0){closerV=path.v[len-1];}else {closerV=path.v[i-1];}distance=Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));newPosPerc=distance?Math.min(distance/2,round)/distance:0;iX=currentV[0]+(closerV[0]-currentV[0])*newPosPerc;vX=iX;iY=currentV[1]-(currentV[1]-closerV[1])*newPosPerc;vY=iY;oX=vX-(vX-currentV[0])*roundCorner;oY=vY-(vY-currentV[1])*roundCorner;clonedPath.setTripleAt(vX,vY,oX,oY,iX,iY,index);index+=1;if(i===len-1){closerV=path.v[0];}else {closerV=path.v[i+1];}distance=Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));newPosPerc=distance?Math.min(distance/2,round)/distance:0;oX=currentV[0]+(closerV[0]-currentV[0])*newPosPerc;vX=oX;oY=currentV[1]+(closerV[1]-currentV[1])*newPosPerc;vY=oY;iX=vX-(vX-currentV[0])*roundCorner;iY=vY-(vY-currentV[1])*roundCorner;clonedPath.setTripleAt(vX,vY,oX,oY,iX,iY,index);index+=1;}}else {clonedPath.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);index+=1;}}return clonedPath;};RoundCornersModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var rd=this.rd.v;if(rd!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],rd));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};function floatEqual(a,b){return Math.abs(a-b)*100000<=Math.min(Math.abs(a),Math.abs(b));}function floatZero(f){return Math.abs(f)<=0.00001;}function lerp(p0,p1,amount){return p0*(1-amount)+p1*amount;}function lerpPoint(p0,p1,amount){return [lerp(p0[0],p1[0],amount),lerp(p0[1],p1[1],amount)];}function quadRoots(a,b,c){// no root
		if(a===0)return [];var s=b*b-4*a*c;// Complex roots
		if(s<0)return [];var singleRoot=-b/(2*a);// 1 root
		if(s===0)return [singleRoot];var delta=Math.sqrt(s)/(2*a);// 2 roots
		return [singleRoot-delta,singleRoot+delta];}function polynomialCoefficients(p0,p1,p2,p3){return [-p0+3*p1-3*p2+p3,3*p0-6*p1+3*p2,-3*p0+3*p1,p0];}function singlePoint(p){return new PolynomialBezier(p,p,p,p,false);}function PolynomialBezier(p0,p1,p2,p3,linearize){if(linearize&&pointEqual(p0,p1)){p1=lerpPoint(p0,p3,1/3);}if(linearize&&pointEqual(p2,p3)){p2=lerpPoint(p0,p3,2/3);}var coeffx=polynomialCoefficients(p0[0],p1[0],p2[0],p3[0]);var coeffy=polynomialCoefficients(p0[1],p1[1],p2[1],p3[1]);this.a=[coeffx[0],coeffy[0]];this.b=[coeffx[1],coeffy[1]];this.c=[coeffx[2],coeffy[2]];this.d=[coeffx[3],coeffy[3]];this.points=[p0,p1,p2,p3];}PolynomialBezier.prototype.point=function(t){return [((this.a[0]*t+this.b[0])*t+this.c[0])*t+this.d[0],((this.a[1]*t+this.b[1])*t+this.c[1])*t+this.d[1]];};PolynomialBezier.prototype.derivative=function(t){return [(3*t*this.a[0]+2*this.b[0])*t+this.c[0],(3*t*this.a[1]+2*this.b[1])*t+this.c[1]];};PolynomialBezier.prototype.tangentAngle=function(t){var p=this.derivative(t);return Math.atan2(p[1],p[0]);};PolynomialBezier.prototype.normalAngle=function(t){var p=this.derivative(t);return Math.atan2(p[0],p[1]);};PolynomialBezier.prototype.inflectionPoints=function(){var denom=this.a[1]*this.b[0]-this.a[0]*this.b[1];if(floatZero(denom))return [];var tcusp=-0.5*(this.a[1]*this.c[0]-this.a[0]*this.c[1])/denom;var square=tcusp*tcusp-1/3*(this.b[1]*this.c[0]-this.b[0]*this.c[1])/denom;if(square<0)return [];var root=Math.sqrt(square);if(floatZero(root)){if(root>0&&root<1)return [tcusp];return [];}return [tcusp-root,tcusp+root].filter(function(r){return r>0&&r<1;});};PolynomialBezier.prototype.split=function(t){if(t<=0)return [singlePoint(this.points[0]),this];if(t>=1)return [this,singlePoint(this.points[this.points.length-1])];var p10=lerpPoint(this.points[0],this.points[1],t);var p11=lerpPoint(this.points[1],this.points[2],t);var p12=lerpPoint(this.points[2],this.points[3],t);var p20=lerpPoint(p10,p11,t);var p21=lerpPoint(p11,p12,t);var p3=lerpPoint(p20,p21,t);return [new PolynomialBezier(this.points[0],p10,p20,p3,true),new PolynomialBezier(p3,p21,p12,this.points[3],true)];};function extrema(bez,comp){var min=bez.points[0][comp];var max=bez.points[bez.points.length-1][comp];if(min>max){var e=max;max=min;min=e;}// Derivative roots to find min/max
		var f=quadRoots(3*bez.a[comp],2*bez.b[comp],bez.c[comp]);for(var i=0;i<f.length;i+=1){if(f[i]>0&&f[i]<1){var val=bez.point(f[i])[comp];if(val<min)min=val;else if(val>max)max=val;}}return {min:min,max:max};}PolynomialBezier.prototype.bounds=function(){return {x:extrema(this,0),y:extrema(this,1)};};PolynomialBezier.prototype.boundingBox=function(){var bounds=this.bounds();return {left:bounds.x.min,right:bounds.x.max,top:bounds.y.min,bottom:bounds.y.max,width:bounds.x.max-bounds.x.min,height:bounds.y.max-bounds.y.min,cx:(bounds.x.max+bounds.x.min)/2,cy:(bounds.y.max+bounds.y.min)/2};};function intersectData(bez,t1,t2){var box=bez.boundingBox();return {cx:box.cx,cy:box.cy,width:box.width,height:box.height,bez:bez,t:(t1+t2)/2,t1:t1,t2:t2};}function splitData(data){var split=data.bez.split(0.5);return [intersectData(split[0],data.t1,data.t),intersectData(split[1],data.t,data.t2)];}function boxIntersect(b1,b2){return Math.abs(b1.cx-b2.cx)*2<b1.width+b2.width&&Math.abs(b1.cy-b2.cy)*2<b1.height+b2.height;}function intersectsImpl(d1,d2,depth,tolerance,intersections,maxRecursion){if(!boxIntersect(d1,d2))return;if(depth>=maxRecursion||d1.width<=tolerance&&d1.height<=tolerance&&d2.width<=tolerance&&d2.height<=tolerance){intersections.push([d1.t,d2.t]);return;}var d1s=splitData(d1);var d2s=splitData(d2);intersectsImpl(d1s[0],d2s[0],depth+1,tolerance,intersections,maxRecursion);intersectsImpl(d1s[0],d2s[1],depth+1,tolerance,intersections,maxRecursion);intersectsImpl(d1s[1],d2s[0],depth+1,tolerance,intersections,maxRecursion);intersectsImpl(d1s[1],d2s[1],depth+1,tolerance,intersections,maxRecursion);}PolynomialBezier.prototype.intersections=function(other,tolerance,maxRecursion){if(tolerance===undefined)tolerance=2;if(maxRecursion===undefined)maxRecursion=7;var intersections=[];intersectsImpl(intersectData(this,0,1),intersectData(other,0,1),0,tolerance,intersections,maxRecursion);return intersections;};PolynomialBezier.shapeSegment=function(shapePath,index){var nextIndex=(index+1)%shapePath.length();return new PolynomialBezier(shapePath.v[index],shapePath.o[index],shapePath.i[nextIndex],shapePath.v[nextIndex],true);};PolynomialBezier.shapeSegmentInverted=function(shapePath,index){var nextIndex=(index+1)%shapePath.length();return new PolynomialBezier(shapePath.v[nextIndex],shapePath.i[nextIndex],shapePath.o[index],shapePath.v[index],true);};function crossProduct(a,b){return [a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];}function lineIntersection(start1,end1,start2,end2){var v1=[start1[0],start1[1],1];var v2=[end1[0],end1[1],1];var v3=[start2[0],start2[1],1];var v4=[end2[0],end2[1],1];var r=crossProduct(crossProduct(v1,v2),crossProduct(v3,v4));if(floatZero(r[2]))return null;return [r[0]/r[2],r[1]/r[2]];}function polarOffset(p,angle,length){return [p[0]+Math.cos(angle)*length,p[1]-Math.sin(angle)*length];}function pointDistance(p1,p2){return Math.hypot(p1[0]-p2[0],p1[1]-p2[1]);}function pointEqual(p1,p2){return floatEqual(p1[0],p2[0])&&floatEqual(p1[1],p2[1]);}function ZigZagModifier(){}extendPrototype([ShapeModifier],ZigZagModifier);ZigZagModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.amplitude=PropertyFactory.getProp(elem,data.s,0,null,this);this.frequency=PropertyFactory.getProp(elem,data.r,0,null,this);this.pointsType=PropertyFactory.getProp(elem,data.pt,0,null,this);this._isAnimated=this.amplitude.effectsSequence.length!==0||this.frequency.effectsSequence.length!==0||this.pointsType.effectsSequence.length!==0;};function setPoint(outputBezier,point,angle,direction,amplitude,outAmplitude,inAmplitude){var angO=angle-Math.PI/2;var angI=angle+Math.PI/2;var px=point[0]+Math.cos(angle)*direction*amplitude;var py=point[1]-Math.sin(angle)*direction*amplitude;outputBezier.setTripleAt(px,py,px+Math.cos(angO)*outAmplitude,py-Math.sin(angO)*outAmplitude,px+Math.cos(angI)*inAmplitude,py-Math.sin(angI)*inAmplitude,outputBezier.length());}function getPerpendicularVector(pt1,pt2){var vector=[pt2[0]-pt1[0],pt2[1]-pt1[1]];var rot=-Math.PI*0.5;var rotatedVector=[Math.cos(rot)*vector[0]-Math.sin(rot)*vector[1],Math.sin(rot)*vector[0]+Math.cos(rot)*vector[1]];return rotatedVector;}function getProjectingAngle(path,cur){var prevIndex=cur===0?path.length()-1:cur-1;var nextIndex=(cur+1)%path.length();var prevPoint=path.v[prevIndex];var nextPoint=path.v[nextIndex];var pVector=getPerpendicularVector(prevPoint,nextPoint);return Math.atan2(0,1)-Math.atan2(pVector[1],pVector[0]);}function zigZagCorner(outputBezier,path,cur,amplitude,frequency,pointType,direction){var angle=getProjectingAngle(path,cur);var point=path.v[cur%path._length];var prevPoint=path.v[cur===0?path._length-1:cur-1];var nextPoint=path.v[(cur+1)%path._length];var prevDist=pointType===2?Math.sqrt(Math.pow(point[0]-prevPoint[0],2)+Math.pow(point[1]-prevPoint[1],2)):0;var nextDist=pointType===2?Math.sqrt(Math.pow(point[0]-nextPoint[0],2)+Math.pow(point[1]-nextPoint[1],2)):0;setPoint(outputBezier,path.v[cur%path._length],angle,direction,amplitude,nextDist/((frequency+1)*2),prevDist/((frequency+1)*2));}function zigZagSegment(outputBezier,segment,amplitude,frequency,pointType,direction){for(var i=0;i<frequency;i+=1){var t=(i+1)/(frequency+1);var dist=pointType===2?Math.sqrt(Math.pow(segment.points[3][0]-segment.points[0][0],2)+Math.pow(segment.points[3][1]-segment.points[0][1],2)):0;var angle=segment.normalAngle(t);var point=segment.point(t);setPoint(outputBezier,point,angle,direction,amplitude,dist/((frequency+1)*2),dist/((frequency+1)*2));direction=-direction;}return direction;}ZigZagModifier.prototype.processPath=function(path,amplitude,frequency,pointType){var count=path._length;var clonedPath=shapePool.newElement();clonedPath.c=path.c;if(!path.c){count-=1;}if(count===0)return clonedPath;var direction=-1;var segment=PolynomialBezier.shapeSegment(path,0);zigZagCorner(clonedPath,path,0,amplitude,frequency,pointType,direction);for(var i=0;i<count;i+=1){direction=zigZagSegment(clonedPath,segment,amplitude,frequency,pointType,-direction);if(i===count-1&&!path.c){segment=null;}else {segment=PolynomialBezier.shapeSegment(path,(i+1)%count);}zigZagCorner(clonedPath,path,i+1,amplitude,frequency,pointType,direction);}return clonedPath;};ZigZagModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var amplitude=this.amplitude.v;var frequency=Math.max(0,Math.round(this.frequency.v));var pointType=this.pointsType.v;if(amplitude!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],amplitude,frequency,pointType));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};function linearOffset(p1,p2,amount){var angle=Math.atan2(p2[0]-p1[0],p2[1]-p1[1]);return [polarOffset(p1,angle,amount),polarOffset(p2,angle,amount)];}function offsetSegment(segment,amount){var p0;var p1a;var p1b;var p2b;var p2a;var p3;var e;e=linearOffset(segment.points[0],segment.points[1],amount);p0=e[0];p1a=e[1];e=linearOffset(segment.points[1],segment.points[2],amount);p1b=e[0];p2b=e[1];e=linearOffset(segment.points[2],segment.points[3],amount);p2a=e[0];p3=e[1];var p1=lineIntersection(p0,p1a,p1b,p2b);if(p1===null)p1=p1a;var p2=lineIntersection(p2a,p3,p1b,p2b);if(p2===null)p2=p2a;return new PolynomialBezier(p0,p1,p2,p3);}function joinLines(outputBezier,seg1,seg2,lineJoin,miterLimit){var p0=seg1.points[3];var p1=seg2.points[0];// Bevel
		if(lineJoin===3)return p0;// Connected, they don't need a joint
		if(pointEqual(p0,p1))return p0;// Round
		if(lineJoin===2){var angleOut=-seg1.tangentAngle(1);var angleIn=-seg2.tangentAngle(0)+Math.PI;var center=lineIntersection(p0,polarOffset(p0,angleOut+Math.PI/2,100),p1,polarOffset(p1,angleOut+Math.PI/2,100));var radius=center?pointDistance(center,p0):pointDistance(p0,p1)/2;var tan=polarOffset(p0,angleOut,2*radius*roundCorner);outputBezier.setXYAt(tan[0],tan[1],'o',outputBezier.length()-1);tan=polarOffset(p1,angleIn,2*radius*roundCorner);outputBezier.setTripleAt(p1[0],p1[1],p1[0],p1[1],tan[0],tan[1],outputBezier.length());return p1;}// Miter
		var t0=pointEqual(p0,seg1.points[2])?seg1.points[0]:seg1.points[2];var t1=pointEqual(p1,seg2.points[1])?seg2.points[3]:seg2.points[1];var intersection=lineIntersection(t0,p0,p1,t1);if(intersection&&pointDistance(intersection,p0)<miterLimit){outputBezier.setTripleAt(intersection[0],intersection[1],intersection[0],intersection[1],intersection[0],intersection[1],outputBezier.length());return intersection;}return p0;}function getIntersection(a,b){var intersect=a.intersections(b);if(intersect.length&&floatEqual(intersect[0][0],1))intersect.shift();if(intersect.length)return intersect[0];return null;}function pruneSegmentIntersection(a,b){var outa=a.slice();var outb=b.slice();var intersect=getIntersection(a[a.length-1],b[0]);if(intersect){outa[a.length-1]=a[a.length-1].split(intersect[0])[0];outb[0]=b[0].split(intersect[1])[1];}if(a.length>1&&b.length>1){intersect=getIntersection(a[0],b[b.length-1]);if(intersect){return [[a[0].split(intersect[0])[0]],[b[b.length-1].split(intersect[1])[1]]];}}return [outa,outb];}function pruneIntersections(segments){var e;for(var i=1;i<segments.length;i+=1){e=pruneSegmentIntersection(segments[i-1],segments[i]);segments[i-1]=e[0];segments[i]=e[1];}if(segments.length>1){e=pruneSegmentIntersection(segments[segments.length-1],segments[0]);segments[segments.length-1]=e[0];segments[0]=e[1];}return segments;}function offsetSegmentSplit(segment,amount){/*
		      We split each bezier segment into smaller pieces based
		      on inflection points, this ensures the control point
		      polygon is convex.
		        (A cubic bezier can have none, one, or two inflection points)
		    */var flex=segment.inflectionPoints();var left;var right;var split;var mid;if(flex.length===0){return [offsetSegment(segment,amount)];}if(flex.length===1||floatEqual(flex[1],1)){split=segment.split(flex[0]);left=split[0];right=split[1];return [offsetSegment(left,amount),offsetSegment(right,amount)];}split=segment.split(flex[0]);left=split[0];var t=(flex[1]-flex[0])/(1-flex[0]);split=split[1].split(t);mid=split[0];right=split[1];return [offsetSegment(left,amount),offsetSegment(mid,amount),offsetSegment(right,amount)];}function OffsetPathModifier(){}extendPrototype([ShapeModifier],OffsetPathModifier);OffsetPathModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.amount=PropertyFactory.getProp(elem,data.a,0,null,this);this.miterLimit=PropertyFactory.getProp(elem,data.ml,0,null,this);this.lineJoin=data.lj;this._isAnimated=this.amount.effectsSequence.length!==0;};OffsetPathModifier.prototype.processPath=function(inputBezier,amount,lineJoin,miterLimit){var outputBezier=shapePool.newElement();outputBezier.c=inputBezier.c;var count=inputBezier.length();if(!inputBezier.c){count-=1;}var i;var j;var segment;var multiSegments=[];for(i=0;i<count;i+=1){segment=PolynomialBezier.shapeSegment(inputBezier,i);multiSegments.push(offsetSegmentSplit(segment,amount));}if(!inputBezier.c){for(i=count-1;i>=0;i-=1){segment=PolynomialBezier.shapeSegmentInverted(inputBezier,i);multiSegments.push(offsetSegmentSplit(segment,amount));}}multiSegments=pruneIntersections(multiSegments);// Add bezier segments to the output and apply line joints
		var lastPoint=null;var lastSeg=null;for(i=0;i<multiSegments.length;i+=1){var multiSegment=multiSegments[i];if(lastSeg)lastPoint=joinLines(outputBezier,lastSeg,multiSegment[0],lineJoin,miterLimit);lastSeg=multiSegment[multiSegment.length-1];for(j=0;j<multiSegment.length;j+=1){segment=multiSegment[j];if(lastPoint&&pointEqual(segment.points[0],lastPoint)){outputBezier.setXYAt(segment.points[1][0],segment.points[1][1],'o',outputBezier.length()-1);}else {outputBezier.setTripleAt(segment.points[0][0],segment.points[0][1],segment.points[1][0],segment.points[1][1],segment.points[0][0],segment.points[0][1],outputBezier.length());}outputBezier.setTripleAt(segment.points[3][0],segment.points[3][1],segment.points[3][0],segment.points[3][1],segment.points[2][0],segment.points[2][1],outputBezier.length());lastPoint=segment.points[3];}}if(multiSegments.length)joinLines(outputBezier,lastSeg,multiSegments[0][0],lineJoin,miterLimit);return outputBezier;};OffsetPathModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var amount=this.amount.v;var miterLimit=this.miterLimit.v;var lineJoin=this.lineJoin;if(amount!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],amount,lineJoin,miterLimit));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};function getFontProperties(fontData){var styles=fontData.fStyle?fontData.fStyle.split(' '):[];var fWeight='normal';var fStyle='normal';var len=styles.length;var styleName;for(var i=0;i<len;i+=1){styleName=styles[i].toLowerCase();switch(styleName){case'italic':fStyle='italic';break;case'bold':fWeight='700';break;case'black':fWeight='900';break;case'medium':fWeight='500';break;case'regular':case'normal':fWeight='400';break;case'light':case'thin':fWeight='200';break;}}return {style:fStyle,weight:fontData.fWeight||fWeight};}var FontManager=function(){var maxWaitingTime=5000;var emptyChar={w:0,size:0,shapes:[],data:{shapes:[]}};var combinedCharacters=[];// Hindi characters
		combinedCharacters=combinedCharacters.concat([2304,2305,2306,2307,2362,2363,2364,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2387,2388,2389,2390,2391,2402,2403]);var BLACK_FLAG_CODE_POINT=127988;var CANCEL_TAG_CODE_POINT=917631;var A_TAG_CODE_POINT=917601;var Z_TAG_CODE_POINT=917626;var VARIATION_SELECTOR_16_CODE_POINT=65039;var ZERO_WIDTH_JOINER_CODE_POINT=8205;var REGIONAL_CHARACTER_A_CODE_POINT=127462;var REGIONAL_CHARACTER_Z_CODE_POINT=127487;var surrogateModifiers=['d83cdffb','d83cdffc','d83cdffd','d83cdffe','d83cdfff'];function trimFontOptions(font){var familyArray=font.split(',');var i;var len=familyArray.length;var enabledFamilies=[];for(i=0;i<len;i+=1){if(familyArray[i]!=='sans-serif'&&familyArray[i]!=='monospace'){enabledFamilies.push(familyArray[i]);}}return enabledFamilies.join(',');}function setUpNode(font,family){var parentNode=createTag('span');// Node is invisible to screen readers.
		parentNode.setAttribute('aria-hidden',true);parentNode.style.fontFamily=family;var node=createTag('span');// Characters that vary significantly among different fonts
		node.innerText='giItT1WQy@!-/#';// Visible - so we can measure it - but not on the screen
		parentNode.style.position='absolute';parentNode.style.left='-10000px';parentNode.style.top='-10000px';// Large font size makes even subtle changes obvious
		parentNode.style.fontSize='300px';// Reset any font properties
		parentNode.style.fontVariant='normal';parentNode.style.fontStyle='normal';parentNode.style.fontWeight='normal';parentNode.style.letterSpacing='0';parentNode.appendChild(node);document.body.appendChild(parentNode);// Remember width with no applied web font
		var width=node.offsetWidth;node.style.fontFamily=trimFontOptions(font)+', '+family;return {node:node,w:width,parent:parentNode};}function checkLoadedFonts(){var i;var len=this.fonts.length;var node;var w;var loadedCount=len;for(i=0;i<len;i+=1){if(this.fonts[i].loaded){loadedCount-=1;}else if(this.fonts[i].fOrigin==='n'||this.fonts[i].origin===0){this.fonts[i].loaded=true;}else {node=this.fonts[i].monoCase.node;w=this.fonts[i].monoCase.w;if(node.offsetWidth!==w){loadedCount-=1;this.fonts[i].loaded=true;}else {node=this.fonts[i].sansCase.node;w=this.fonts[i].sansCase.w;if(node.offsetWidth!==w){loadedCount-=1;this.fonts[i].loaded=true;}}if(this.fonts[i].loaded){this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);}}}if(loadedCount!==0&&Date.now()-this.initTime<maxWaitingTime){setTimeout(this.checkLoadedFontsBinded,20);}else {setTimeout(this.setIsLoadedBinded,10);}}function createHelper(fontData,def){var engine=document.body&&def?'svg':'canvas';var helper;var fontProps=getFontProperties(fontData);if(engine==='svg'){var tHelper=createNS('text');tHelper.style.fontSize='100px';// tHelper.style.fontFamily = fontData.fFamily;
		tHelper.setAttribute('font-family',fontData.fFamily);tHelper.setAttribute('font-style',fontProps.style);tHelper.setAttribute('font-weight',fontProps.weight);tHelper.textContent='1';if(fontData.fClass){tHelper.style.fontFamily='inherit';tHelper.setAttribute('class',fontData.fClass);}else {tHelper.style.fontFamily=fontData.fFamily;}def.appendChild(tHelper);helper=tHelper;}else {var tCanvasHelper=new OffscreenCanvas(500,500).getContext('2d');tCanvasHelper.font=fontProps.style+' '+fontProps.weight+' 100px '+fontData.fFamily;helper=tCanvasHelper;}function measure(text){if(engine==='svg'){helper.textContent=text;return helper.getComputedTextLength();}return helper.measureText(text).width;}return {measureText:measure};}function addFonts(fontData,defs){if(!fontData){this.isLoaded=true;return;}if(this.chars){this.isLoaded=true;this.fonts=fontData.list;return;}if(!document.body){this.isLoaded=true;fontData.list.forEach(function(data){data.helper=createHelper(data);data.cache={};});this.fonts=fontData.list;return;}var fontArr=fontData.list;var i;var len=fontArr.length;var _pendingFonts=len;for(i=0;i<len;i+=1){var shouldLoadFont=true;var loadedSelector;var j;fontArr[i].loaded=false;fontArr[i].monoCase=setUpNode(fontArr[i].fFamily,'monospace');fontArr[i].sansCase=setUpNode(fontArr[i].fFamily,'sans-serif');if(!fontArr[i].fPath){fontArr[i].loaded=true;_pendingFonts-=1;}else if(fontArr[i].fOrigin==='p'||fontArr[i].origin===3){loadedSelector=document.querySelectorAll('style[f-forigin="p"][f-family="'+fontArr[i].fFamily+'"], style[f-origin="3"][f-family="'+fontArr[i].fFamily+'"]');if(loadedSelector.length>0){shouldLoadFont=false;}if(shouldLoadFont){var s=createTag('style');s.setAttribute('f-forigin',fontArr[i].fOrigin);s.setAttribute('f-origin',fontArr[i].origin);s.setAttribute('f-family',fontArr[i].fFamily);s.type='text/css';s.innerText='@font-face {font-family: '+fontArr[i].fFamily+"; font-style: normal; src: url('"+fontArr[i].fPath+"');}";defs.appendChild(s);}}else if(fontArr[i].fOrigin==='g'||fontArr[i].origin===1){loadedSelector=document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');for(j=0;j<loadedSelector.length;j+=1){if(loadedSelector[j].href.indexOf(fontArr[i].fPath)!==-1){// Font is already loaded
		shouldLoadFont=false;}}if(shouldLoadFont){var l=createTag('link');l.setAttribute('f-forigin',fontArr[i].fOrigin);l.setAttribute('f-origin',fontArr[i].origin);l.type='text/css';l.rel='stylesheet';l.href=fontArr[i].fPath;document.body.appendChild(l);}}else if(fontArr[i].fOrigin==='t'||fontArr[i].origin===2){loadedSelector=document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');for(j=0;j<loadedSelector.length;j+=1){if(fontArr[i].fPath===loadedSelector[j].src){// Font is already loaded
		shouldLoadFont=false;}}if(shouldLoadFont){var sc=createTag('link');sc.setAttribute('f-forigin',fontArr[i].fOrigin);sc.setAttribute('f-origin',fontArr[i].origin);sc.setAttribute('rel','stylesheet');sc.setAttribute('href',fontArr[i].fPath);defs.appendChild(sc);}}fontArr[i].helper=createHelper(fontArr[i],defs);fontArr[i].cache={};this.fonts.push(fontArr[i]);}if(_pendingFonts===0){this.isLoaded=true;}else {// On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
		// Adding this timeout seems to fix it
		setTimeout(this.checkLoadedFonts.bind(this),100);}}function addChars(chars){if(!chars){return;}if(!this.chars){this.chars=[];}var i;var len=chars.length;var j;var jLen=this.chars.length;var found;for(i=0;i<len;i+=1){j=0;found=false;while(j<jLen){if(this.chars[j].style===chars[i].style&&this.chars[j].fFamily===chars[i].fFamily&&this.chars[j].ch===chars[i].ch){found=true;}j+=1;}if(!found){this.chars.push(chars[i]);jLen+=1;}}}function getCharData(_char,style,font){var i=0;var len=this.chars.length;while(i<len){if(this.chars[i].ch===_char&&this.chars[i].style===style&&this.chars[i].fFamily===font){return this.chars[i];}i+=1;}if((typeof _char==='string'&&_char.charCodeAt(0)!==13||!_char)&&console&&console.warn// eslint-disable-line no-console
		&&!this._warned){this._warned=true;console.warn('Missing character from exported characters list: ',_char,style,font);// eslint-disable-line no-console
		}return emptyChar;}function measureText(_char2,fontName,size){var fontData=this.getFontByName(fontName);// Using the char instead of char.charCodeAt(0)
		// to avoid collisions between equal chars
		var index=_char2;if(!fontData.cache[index]){var tHelper=fontData.helper;if(_char2===' '){var doubleSize=tHelper.measureText('|'+_char2+'|');var singleSize=tHelper.measureText('||');fontData.cache[index]=(doubleSize-singleSize)/100;}else {fontData.cache[index]=tHelper.measureText(_char2)/100;}}return fontData.cache[index]*size;}function getFontByName(name){var i=0;var len=this.fonts.length;while(i<len){if(this.fonts[i].fName===name){return this.fonts[i];}i+=1;}return this.fonts[0];}function getCodePoint(string){var codePoint=0;var first=string.charCodeAt(0);if(first>=0xD800&&first<=0xDBFF){var second=string.charCodeAt(1);if(second>=0xDC00&&second<=0xDFFF){codePoint=(first-0xD800)*0x400+second-0xDC00+0x10000;}}return codePoint;}// Skin tone modifiers
		function isModifier(firstCharCode,secondCharCode){var sum=firstCharCode.toString(16)+secondCharCode.toString(16);return surrogateModifiers.indexOf(sum)!==-1;}function isZeroWidthJoiner(charCode){return charCode===ZERO_WIDTH_JOINER_CODE_POINT;}// This codepoint may change the appearance of the preceding character.
		// If that is a symbol, dingbat or emoji, U+FE0F forces it to be rendered
		// as a colorful image as compared to a monochrome text variant.
		function isVariationSelector(charCode){return charCode===VARIATION_SELECTOR_16_CODE_POINT;}// The regional indicator symbols are a set of 26 alphabetic Unicode
		/// characters (A–Z) intended to be used to encode ISO 3166-1 alpha-2
		// two-letter country codes in a way that allows optional special treatment.
		function isRegionalCode(string){var codePoint=getCodePoint(string);if(codePoint>=REGIONAL_CHARACTER_A_CODE_POINT&&codePoint<=REGIONAL_CHARACTER_Z_CODE_POINT){return true;}return false;}// Some Emoji implementations represent combinations of
		// two “regional indicator” letters as a single flag symbol.
		function isFlagEmoji(string){return isRegionalCode(string.substr(0,2))&&isRegionalCode(string.substr(2,2));}function isCombinedCharacter(_char3){return combinedCharacters.indexOf(_char3)!==-1;}// Regional flags start with a BLACK_FLAG_CODE_POINT
		// folowed by 5 chars in the TAG range
		// and end with a CANCEL_TAG_CODE_POINT
		function isRegionalFlag(text,index){var codePoint=getCodePoint(text.substr(index,2));if(codePoint!==BLACK_FLAG_CODE_POINT){return false;}var count=0;index+=2;while(count<5){codePoint=getCodePoint(text.substr(index,2));if(codePoint<A_TAG_CODE_POINT||codePoint>Z_TAG_CODE_POINT){return false;}count+=1;index+=2;}return getCodePoint(text.substr(index,2))===CANCEL_TAG_CODE_POINT;}function setIsLoaded(){this.isLoaded=true;}var Font=function Font(){this.fonts=[];this.chars=null;this.typekitLoaded=0;this.isLoaded=false;this._warned=false;this.initTime=Date.now();this.setIsLoadedBinded=this.setIsLoaded.bind(this);this.checkLoadedFontsBinded=this.checkLoadedFonts.bind(this);};Font.isModifier=isModifier;Font.isZeroWidthJoiner=isZeroWidthJoiner;Font.isFlagEmoji=isFlagEmoji;Font.isRegionalCode=isRegionalCode;Font.isCombinedCharacter=isCombinedCharacter;Font.isRegionalFlag=isRegionalFlag;Font.isVariationSelector=isVariationSelector;Font.BLACK_FLAG_CODE_POINT=BLACK_FLAG_CODE_POINT;var fontPrototype={addChars:addChars,addFonts:addFonts,getCharData:getCharData,getFontByName:getFontByName,measureText:measureText,checkLoadedFonts:checkLoadedFonts,setIsLoaded:setIsLoaded};Font.prototype=fontPrototype;return Font;}();function SlotManager(animationData){this.animationData=animationData;}SlotManager.prototype.getProp=function(data){if(this.animationData.slots&&this.animationData.slots[data.sid]){return Object.assign(data,this.animationData.slots[data.sid].p);}return data;};function slotFactory(animationData){return new SlotManager(animationData);}function RenderableElement(){}RenderableElement.prototype={initRenderable:function initRenderable(){// layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
		this.isInRange=false;// layer's display state
		this.hidden=false;// If layer's transparency equals 0, it can be hidden
		this.isTransparent=false;// list of animated components
		this.renderableComponents=[];},addRenderableComponent:function addRenderableComponent(component){if(this.renderableComponents.indexOf(component)===-1){this.renderableComponents.push(component);}},removeRenderableComponent:function removeRenderableComponent(component){if(this.renderableComponents.indexOf(component)!==-1){this.renderableComponents.splice(this.renderableComponents.indexOf(component),1);}},prepareRenderableFrame:function prepareRenderableFrame(num){this.checkLayerLimits(num);},checkTransparency:function checkTransparency(){if(this.finalTransform.mProp.o.v<=0){if(!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent){this.isTransparent=true;this.hide();}}else if(this.isTransparent){this.isTransparent=false;this.show();}},/**
		       * @function
		       * Initializes frame related properties.
		       *
		       * @param {number} num
		       * current frame number in Layer's time
		       *
		       */checkLayerLimits:function checkLayerLimits(num){if(this.data.ip-this.data.st<=num&&this.data.op-this.data.st>num){if(this.isInRange!==true){this.globalData._mdf=true;this._mdf=true;this.isInRange=true;this.show();}}else if(this.isInRange!==false){this.globalData._mdf=true;this.isInRange=false;this.hide();}},renderRenderable:function renderRenderable(){var i;var len=this.renderableComponents.length;for(i=0;i<len;i+=1){this.renderableComponents[i].renderFrame(this._isFirstFrame);}/* this.maskManager.renderFrame(this.finalTransform.mat);
		          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */},sourceRectAtTime:function sourceRectAtTime(){return {top:0,left:0,width:100,height:100};},getLayerSize:function getLayerSize(){if(this.data.ty===5){return {w:this.data.textData.width,h:this.data.textData.height};}return {w:this.data.width,h:this.data.height};}};var getBlendMode=function(){var blendModeEnums={0:'source-over',1:'multiply',2:'screen',3:'overlay',4:'darken',5:'lighten',6:'color-dodge',7:'color-burn',8:'hard-light',9:'soft-light',10:'difference',11:'exclusion',12:'hue',13:'saturation',14:'color',15:'luminosity'};return function(mode){return blendModeEnums[mode]||'';};}();function SliderEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function AngleEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function ColorEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,1,0,container);}function PointEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,1,0,container);}function LayerIndexEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function MaskIndexEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function CheckboxEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function NoValueEffect(){this.p={};}function EffectsManager(data,element){var effects=data.ef||[];this.effectElements=[];var i;var len=effects.length;var effectItem;for(i=0;i<len;i+=1){effectItem=new GroupEffect(effects[i],element);this.effectElements.push(effectItem);}}function GroupEffect(data,element){this.init(data,element);}extendPrototype([DynamicPropertyContainer],GroupEffect);GroupEffect.prototype.getValue=GroupEffect.prototype.iterateDynamicProperties;GroupEffect.prototype.init=function(data,element){this.data=data;this.effectElements=[];this.initDynamicPropertyContainer(element);var i;var len=this.data.ef.length;var eff;var effects=this.data.ef;for(i=0;i<len;i+=1){eff=null;switch(effects[i].ty){case 0:eff=new SliderEffect(effects[i],element,this);break;case 1:eff=new AngleEffect(effects[i],element,this);break;case 2:eff=new ColorEffect(effects[i],element,this);break;case 3:eff=new PointEffect(effects[i],element,this);break;case 4:case 7:eff=new CheckboxEffect(effects[i],element,this);break;case 10:eff=new LayerIndexEffect(effects[i],element,this);break;case 11:eff=new MaskIndexEffect(effects[i],element,this);break;case 5:eff=new EffectsManager(effects[i],element);break;// case 6:
		default:eff=new NoValueEffect(effects[i]);break;}if(eff){this.effectElements.push(eff);}}};function BaseElement(){}BaseElement.prototype={checkMasks:function checkMasks(){if(!this.data.hasMask){return false;}var i=0;var len=this.data.masksProperties.length;while(i<len){if(this.data.masksProperties[i].mode!=='n'&&this.data.masksProperties[i].cl!==false){return true;}i+=1;}return false;},initExpressions:function initExpressions(){var expressionsInterfaces=getExpressionInterfaces();if(!expressionsInterfaces){return;}var LayerExpressionInterface=expressionsInterfaces('layer');var EffectsExpressionInterface=expressionsInterfaces('effects');var ShapeExpressionInterface=expressionsInterfaces('shape');var TextExpressionInterface=expressionsInterfaces('text');var CompExpressionInterface=expressionsInterfaces('comp');this.layerInterface=LayerExpressionInterface(this);if(this.data.hasMask&&this.maskManager){this.layerInterface.registerMaskInterface(this.maskManager);}var effectsInterface=EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(effectsInterface);if(this.data.ty===0||this.data.xt){this.compInterface=CompExpressionInterface(this);}else if(this.data.ty===4){this.layerInterface.shapeInterface=ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);this.layerInterface.content=this.layerInterface.shapeInterface;}else if(this.data.ty===5){this.layerInterface.textInterface=TextExpressionInterface(this);this.layerInterface.text=this.layerInterface.textInterface;}},setBlendMode:function setBlendMode(){var blendModeValue=getBlendMode(this.data.bm);var elem=this.baseElement||this.layerElement;elem.style['mix-blend-mode']=blendModeValue;},initBaseData:function initBaseData(data,globalData,comp){this.globalData=globalData;this.comp=comp;this.data=data;this.layerId=createElementID();// Stretch factor for old animations missing this property.
		if(!this.data.sr){this.data.sr=1;}// effects manager
		this.effectsManager=new EffectsManager(this.data,this,this.dynamicProperties);},getType:function getType(){return this.type;},sourceRectAtTime:function sourceRectAtTime(){}};/**
		   * @file
		   * Handles element's layer frame update.
		   * Checks layer in point and out point
		   *
		   */function FrameElement(){}FrameElement.prototype={/**
		       * @function
		       * Initializes frame related properties.
		       *
		       */initFrame:function initFrame(){// set to true when inpoint is rendered
		this._isFirstFrame=false;// list of animated properties
		this.dynamicProperties=[];// If layer has been modified in current tick this will be true
		this._mdf=false;},/**
		       * @function
		       * Calculates all dynamic values
		       *
		       * @param {number} num
		       * current frame number in Layer's time
		       * @param {boolean} isVisible
		       * if layers is currently in range
		       *
		       */prepareProperties:function prepareProperties(num,isVisible){var i;var len=this.dynamicProperties.length;for(i=0;i<len;i+=1){if(isVisible||this._isParent&&this.dynamicProperties[i].propType==='transform'){this.dynamicProperties[i].getValue();if(this.dynamicProperties[i]._mdf){this.globalData._mdf=true;this._mdf=true;}}}},addDynamicProperty:function addDynamicProperty(prop){if(this.dynamicProperties.indexOf(prop)===-1){this.dynamicProperties.push(prop);}}};function FootageElement(data,globalData,comp){this.initFrame();this.initRenderable();this.assetData=globalData.getAssetData(data.refId);this.footageData=globalData.imageLoader.getAsset(this.assetData);this.initBaseData(data,globalData,comp);}FootageElement.prototype.prepareFrame=function(){};extendPrototype([RenderableElement,BaseElement,FrameElement],FootageElement);FootageElement.prototype.getBaseElement=function(){return null;};FootageElement.prototype.renderFrame=function(){};FootageElement.prototype.destroy=function(){};FootageElement.prototype.initExpressions=function(){var expressionsInterfaces=getExpressionInterfaces();if(!expressionsInterfaces){return;}var FootageInterface=expressionsInterfaces('footage');this.layerInterface=FootageInterface(this);};FootageElement.prototype.getFootageData=function(){return this.footageData;};function AudioElement(data,globalData,comp){this.initFrame();this.initRenderable();this.assetData=globalData.getAssetData(data.refId);this.initBaseData(data,globalData,comp);this._isPlaying=false;this._canPlay=false;var assetPath=this.globalData.getAssetsPath(this.assetData);this.audio=this.globalData.audioController.createAudio(assetPath);this._currentTime=0;this.globalData.audioController.addAudio(this);this._volumeMultiplier=1;this._volume=1;this._previousVolume=null;this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};this.lv=PropertyFactory.getProp(this,data.au&&data.au.lv?data.au.lv:{k:[100]},1,0.01,this);}AudioElement.prototype.prepareFrame=function(num){this.prepareRenderableFrame(num,true);this.prepareProperties(num,true);if(!this.tm._placeholder){var timeRemapped=this.tm.v;this._currentTime=timeRemapped;}else {this._currentTime=num/this.data.sr;}this._volume=this.lv.v[0];var totalVolume=this._volume*this._volumeMultiplier;if(this._previousVolume!==totalVolume){this._previousVolume=totalVolume;this.audio.volume(totalVolume);}};extendPrototype([RenderableElement,BaseElement,FrameElement],AudioElement);AudioElement.prototype.renderFrame=function(){if(this.isInRange&&this._canPlay){if(!this._isPlaying){this.audio.play();this.audio.seek(this._currentTime/this.globalData.frameRate);this._isPlaying=true;}else if(!this.audio.playing()||Math.abs(this._currentTime/this.globalData.frameRate-this.audio.seek())>0.1){this.audio.seek(this._currentTime/this.globalData.frameRate);}}};AudioElement.prototype.show=function(){// this.audio.play()
		};AudioElement.prototype.hide=function(){this.audio.pause();this._isPlaying=false;};AudioElement.prototype.pause=function(){this.audio.pause();this._isPlaying=false;this._canPlay=false;};AudioElement.prototype.resume=function(){this._canPlay=true;};AudioElement.prototype.setRate=function(rateValue){this.audio.rate(rateValue);};AudioElement.prototype.volume=function(volumeValue){this._volumeMultiplier=volumeValue;this._previousVolume=volumeValue*this._volume;this.audio.volume(this._previousVolume);};AudioElement.prototype.getBaseElement=function(){return null;};AudioElement.prototype.destroy=function(){};AudioElement.prototype.sourceRectAtTime=function(){};AudioElement.prototype.initExpressions=function(){};function BaseRenderer(){}BaseRenderer.prototype.checkLayers=function(num){var i;var len=this.layers.length;var data;this.completeLayers=true;for(i=len-1;i>=0;i-=1){if(!this.elements[i]){data=this.layers[i];if(data.ip-data.st<=num-this.layers[i].st&&data.op-data.st>num-this.layers[i].st){this.buildItem(i);}}this.completeLayers=this.elements[i]?this.completeLayers:false;}this.checkPendingElements();};BaseRenderer.prototype.createItem=function(layer){switch(layer.ty){case 2:return this.createImage(layer);case 0:return this.createComp(layer);case 1:return this.createSolid(layer);case 3:return this.createNull(layer);case 4:return this.createShape(layer);case 5:return this.createText(layer);case 6:return this.createAudio(layer);case 13:return this.createCamera(layer);case 15:return this.createFootage(layer);default:return this.createNull(layer);}};BaseRenderer.prototype.createCamera=function(){throw new Error('You\'re using a 3d camera. Try the html renderer.');};BaseRenderer.prototype.createAudio=function(data){return new AudioElement(data,this.globalData,this);};BaseRenderer.prototype.createFootage=function(data){return new FootageElement(data,this.globalData,this);};BaseRenderer.prototype.buildAllItems=function(){var i;var len=this.layers.length;for(i=0;i<len;i+=1){this.buildItem(i);}this.checkPendingElements();};BaseRenderer.prototype.includeLayers=function(newLayers){this.completeLayers=false;var i;var len=newLayers.length;var j;var jLen=this.layers.length;for(i=0;i<len;i+=1){j=0;while(j<jLen){if(this.layers[j].id===newLayers[i].id){this.layers[j]=newLayers[i];break;}j+=1;}}};BaseRenderer.prototype.setProjectInterface=function(pInterface){this.globalData.projectInterface=pInterface;};BaseRenderer.prototype.initItems=function(){if(!this.globalData.progressiveLoad){this.buildAllItems();}};BaseRenderer.prototype.buildElementParenting=function(element,parentName,hierarchy){var elements=this.elements;var layers=this.layers;var i=0;var len=layers.length;while(i<len){if(layers[i].ind==parentName){// eslint-disable-line eqeqeq
		if(!elements[i]||elements[i]===true){this.buildItem(i);this.addPendingElement(element);}else {hierarchy.push(elements[i]);elements[i].setAsParent();if(layers[i].parent!==undefined){this.buildElementParenting(element,layers[i].parent,hierarchy);}else {element.setHierarchy(hierarchy);}}}i+=1;}};BaseRenderer.prototype.addPendingElement=function(element){this.pendingElements.push(element);};BaseRenderer.prototype.searchExtraCompositions=function(assets){var i;var len=assets.length;for(i=0;i<len;i+=1){if(assets[i].xt){var comp=this.createComp(assets[i]);comp.initExpressions();this.globalData.projectInterface.registerComposition(comp);}}};BaseRenderer.prototype.getElementById=function(ind){var i;var len=this.elements.length;for(i=0;i<len;i+=1){if(this.elements[i].data.ind===ind){return this.elements[i];}}return null;};BaseRenderer.prototype.getElementByPath=function(path){var pathValue=path.shift();var element;if(typeof pathValue==='number'){element=this.elements[pathValue];}else {var i;var len=this.elements.length;for(i=0;i<len;i+=1){if(this.elements[i].data.nm===pathValue){element=this.elements[i];break;}}}if(path.length===0){return element;}return element.getElementByPath(path);};BaseRenderer.prototype.setupGlobalData=function(animData,fontsContainer){this.globalData.fontManager=new FontManager();this.globalData.slotManager=slotFactory(animData);this.globalData.fontManager.addChars(animData.chars);this.globalData.fontManager.addFonts(animData.fonts,fontsContainer);this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem);this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem);this.globalData.imageLoader=this.animationItem.imagePreloader;this.globalData.audioController=this.animationItem.audioController;this.globalData.frameId=0;this.globalData.frameRate=animData.fr;this.globalData.nm=animData.nm;this.globalData.compSize={w:animData.w,h:animData.h};};var effectTypes={TRANSFORM_EFFECT:'transformEFfect'};function TransformElement(){}TransformElement.prototype={initTransform:function initTransform(){var mat=new Matrix();this.finalTransform={mProp:this.data.ks?TransformPropertyFactory.getTransformProperty(this,this.data.ks,this):{o:0},_matMdf:false,_localMatMdf:false,_opMdf:false,mat:mat,localMat:mat,localOpacity:1};if(this.data.ao){this.finalTransform.mProp.autoOriented=true;}// TODO: check TYPE 11: Guided elements
		if(this.data.ty!==11);},renderTransform:function renderTransform(){this.finalTransform._opMdf=this.finalTransform.mProp.o._mdf||this._isFirstFrame;this.finalTransform._matMdf=this.finalTransform.mProp._mdf||this._isFirstFrame;if(this.hierarchy){var mat;var finalMat=this.finalTransform.mat;var i=0;var len=this.hierarchy.length;// Checking if any of the transformation matrices in the hierarchy chain has changed.
		if(!this.finalTransform._matMdf){while(i<len){if(this.hierarchy[i].finalTransform.mProp._mdf){this.finalTransform._matMdf=true;break;}i+=1;}}if(this.finalTransform._matMdf){mat=this.finalTransform.mProp.v.props;finalMat.cloneFromProps(mat);for(i=0;i<len;i+=1){finalMat.multiply(this.hierarchy[i].finalTransform.mProp.v);}}}if(this.finalTransform._matMdf){this.finalTransform._localMatMdf=this.finalTransform._matMdf;}if(this.finalTransform._opMdf){this.finalTransform.localOpacity=this.finalTransform.mProp.o.v;}},renderLocalTransform:function renderLocalTransform(){if(this.localTransforms){var i=0;var len=this.localTransforms.length;this.finalTransform._localMatMdf=this.finalTransform._matMdf;if(!this.finalTransform._localMatMdf||!this.finalTransform._opMdf){while(i<len){if(this.localTransforms[i]._mdf){this.finalTransform._localMatMdf=true;}if(this.localTransforms[i]._opMdf&&!this.finalTransform._opMdf){this.finalTransform.localOpacity=this.finalTransform.mProp.o.v;this.finalTransform._opMdf=true;}i+=1;}}if(this.finalTransform._localMatMdf){var localMat=this.finalTransform.localMat;this.localTransforms[0].matrix.clone(localMat);for(i=1;i<len;i+=1){var lmat=this.localTransforms[i].matrix;localMat.multiply(lmat);}localMat.multiply(this.finalTransform.mat);}if(this.finalTransform._opMdf){var localOp=this.finalTransform.localOpacity;for(i=0;i<len;i+=1){localOp*=this.localTransforms[i].opacity*0.01;}this.finalTransform.localOpacity=localOp;}}},searchEffectTransforms:function searchEffectTransforms(){if(this.renderableEffectsManager){var transformEffects=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);if(transformEffects.length){this.localTransforms=[];this.finalTransform.localMat=new Matrix();var i=0;var len=transformEffects.length;for(i=0;i<len;i+=1){this.localTransforms.push(transformEffects[i]);}}}},globalToLocal:function globalToLocal(pt){var transforms=[];transforms.push(this.finalTransform);var flag=true;var comp=this.comp;while(flag){if(comp.finalTransform){if(comp.data.hasMask){transforms.splice(0,0,comp.finalTransform);}comp=comp.comp;}else {flag=false;}}var i;var len=transforms.length;var ptNew;for(i=0;i<len;i+=1){ptNew=transforms[i].mat.applyToPointArray(0,0,0);// ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
		pt=[pt[0]-ptNew[0],pt[1]-ptNew[1],0];}return pt;},mHelper:new Matrix()};function MaskElement(data,element,globalData){this.data=data;this.element=element;this.globalData=globalData;this.storedData=[];this.masksProperties=this.data.masksProperties||[];this.maskElement=null;var defs=this.globalData.defs;var i;var len=this.masksProperties?this.masksProperties.length:0;this.viewData=createSizedArray(len);this.solidPath='';var path;var properties=this.masksProperties;var count=0;var currentMasks=[];var j;var jLen;var layerId=createElementID();var rect;var expansor;var feMorph;var x;var maskType='clipPath';var maskRef='clip-path';for(i=0;i<len;i+=1){if(properties[i].mode!=='a'&&properties[i].mode!=='n'||properties[i].inv||properties[i].o.k!==100||properties[i].o.x){maskType='mask';maskRef='mask';}if((properties[i].mode==='s'||properties[i].mode==='i')&&count===0){rect=createNS('rect');rect.setAttribute('fill','#ffffff');rect.setAttribute('width',this.element.comp.data.w||0);rect.setAttribute('height',this.element.comp.data.h||0);currentMasks.push(rect);}else {rect=null;}path=createNS('path');if(properties[i].mode==='n'){// TODO move this to a factory or to a constructor
		this.viewData[i]={op:PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),elem:path,lastPath:''};defs.appendChild(path);}else {count+=1;path.setAttribute('fill',properties[i].mode==='s'?'#000000':'#ffffff');path.setAttribute('clip-rule','nonzero');var filterID;if(properties[i].x.k!==0){maskType='mask';maskRef='mask';x=PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);filterID=createElementID();expansor=createNS('filter');expansor.setAttribute('id',filterID);feMorph=createNS('feMorphology');feMorph.setAttribute('operator','erode');feMorph.setAttribute('in','SourceGraphic');feMorph.setAttribute('radius','0');expansor.appendChild(feMorph);defs.appendChild(expansor);path.setAttribute('stroke',properties[i].mode==='s'?'#000000':'#ffffff');}else {feMorph=null;x=null;}// TODO move this to a factory or to a constructor
		this.storedData[i]={elem:path,x:x,expan:feMorph,lastPath:'',lastOperator:'',filterId:filterID,lastRadius:0};if(properties[i].mode==='i'){jLen=currentMasks.length;var g=createNS('g');for(j=0;j<jLen;j+=1){g.appendChild(currentMasks[j]);}var mask=createNS('mask');mask.setAttribute('mask-type','alpha');mask.setAttribute('id',layerId+'_'+count);mask.appendChild(path);defs.appendChild(mask);g.setAttribute('mask','url('+getLocationHref()+'#'+layerId+'_'+count+')');currentMasks.length=0;currentMasks.push(g);}else {currentMasks.push(path);}if(properties[i].inv&&!this.solidPath){this.solidPath=this.createLayerSolidPath();}// TODO move this to a factory or to a constructor
		this.viewData[i]={elem:path,lastPath:'',op:PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),invRect:rect};if(!this.viewData[i].prop.k){this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);}}}this.maskElement=createNS(maskType);len=currentMasks.length;for(i=0;i<len;i+=1){this.maskElement.appendChild(currentMasks[i]);}if(count>0){this.maskElement.setAttribute('id',layerId);this.element.maskedElement.setAttribute(maskRef,'url('+getLocationHref()+'#'+layerId+')');defs.appendChild(this.maskElement);}if(this.viewData.length){this.element.addRenderableComponent(this);}}MaskElement.prototype.getMaskProperty=function(pos){return this.viewData[pos].prop;};MaskElement.prototype.renderFrame=function(isFirstFrame){var finalMat=this.element.finalTransform.mat;var i;var len=this.masksProperties.length;for(i=0;i<len;i+=1){if(this.viewData[i].prop._mdf||isFirstFrame){this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);}if(this.viewData[i].op._mdf||isFirstFrame){this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);}if(this.masksProperties[i].mode!=='n'){if(this.viewData[i].invRect&&(this.element.finalTransform.mProp._mdf||isFirstFrame)){this.viewData[i].invRect.setAttribute('transform',finalMat.getInverseMatrix().to2dCSS());}if(this.storedData[i].x&&(this.storedData[i].x._mdf||isFirstFrame)){var feMorph=this.storedData[i].expan;if(this.storedData[i].x.v<0){if(this.storedData[i].lastOperator!=='erode'){this.storedData[i].lastOperator='erode';this.storedData[i].elem.setAttribute('filter','url('+getLocationHref()+'#'+this.storedData[i].filterId+')');}feMorph.setAttribute('radius',-this.storedData[i].x.v);}else {if(this.storedData[i].lastOperator!=='dilate'){this.storedData[i].lastOperator='dilate';this.storedData[i].elem.setAttribute('filter',null);}this.storedData[i].elem.setAttribute('stroke-width',this.storedData[i].x.v*2);}}}}};MaskElement.prototype.getMaskelement=function(){return this.maskElement;};MaskElement.prototype.createLayerSolidPath=function(){var path='M0,0 ';path+=' h'+this.globalData.compSize.w;path+=' v'+this.globalData.compSize.h;path+=' h-'+this.globalData.compSize.w;path+=' v-'+this.globalData.compSize.h+' ';return path;};MaskElement.prototype.drawPath=function(pathData,pathNodes,viewData){var pathString=' M'+pathNodes.v[0][0]+','+pathNodes.v[0][1];var i;var len;len=pathNodes._length;for(i=1;i<len;i+=1){// pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
		pathString+=' C'+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1]+' '+pathNodes.i[i][0]+','+pathNodes.i[i][1]+' '+pathNodes.v[i][0]+','+pathNodes.v[i][1];}// pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
		if(pathNodes.c&&len>1){pathString+=' C'+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1]+' '+pathNodes.i[0][0]+','+pathNodes.i[0][1]+' '+pathNodes.v[0][0]+','+pathNodes.v[0][1];}// pathNodes.__renderedString = pathString;
		if(viewData.lastPath!==pathString){var pathShapeValue='';if(viewData.elem){if(pathNodes.c){pathShapeValue=pathData.inv?this.solidPath+pathString:pathString;}viewData.elem.setAttribute('d',pathShapeValue);}viewData.lastPath=pathString;}};MaskElement.prototype.destroy=function(){this.element=null;this.globalData=null;this.maskElement=null;this.data=null;this.masksProperties=null;};var filtersFactory=function(){var ob={};ob.createFilter=createFilter;ob.createAlphaToLuminanceFilter=createAlphaToLuminanceFilter;function createFilter(filId,skipCoordinates){var fil=createNS('filter');fil.setAttribute('id',filId);if(skipCoordinates!==true){fil.setAttribute('filterUnits','objectBoundingBox');fil.setAttribute('x','0%');fil.setAttribute('y','0%');fil.setAttribute('width','100%');fil.setAttribute('height','100%');}return fil;}function createAlphaToLuminanceFilter(){var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');return feColorMatrix;}return ob;}();var featureSupport=function(){var ob={maskType:true,svgLumaHidden:true,offscreenCanvas:typeof OffscreenCanvas!=='undefined'};if(/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\/\d./i.test(navigator.userAgent)){ob.maskType=false;}if(/firefox/i.test(navigator.userAgent)){ob.svgLumaHidden=false;}return ob;}();var registeredEffects$1={};var idPrefix='filter_result_';function SVGEffects(elem){var i;var source='SourceGraphic';var len=elem.data.ef?elem.data.ef.length:0;var filId=createElementID();var fil=filtersFactory.createFilter(filId,true);var count=0;this.filters=[];var filterManager;for(i=0;i<len;i+=1){filterManager=null;var type=elem.data.ef[i].ty;if(registeredEffects$1[type]){var Effect=registeredEffects$1[type].effect;filterManager=new Effect(fil,elem.effectsManager.effectElements[i],elem,idPrefix+count,source);source=idPrefix+count;if(registeredEffects$1[type].countsAsEffect){count+=1;}}if(filterManager){this.filters.push(filterManager);}}if(count){elem.globalData.defs.appendChild(fil);elem.layerElement.setAttribute('filter','url('+getLocationHref()+'#'+filId+')');}if(this.filters.length){elem.addRenderableComponent(this);}}SVGEffects.prototype.renderFrame=function(_isFirstFrame){var i;var len=this.filters.length;for(i=0;i<len;i+=1){this.filters[i].renderFrame(_isFirstFrame);}};SVGEffects.prototype.getEffects=function(type){var i;var len=this.filters.length;var effects=[];for(i=0;i<len;i+=1){if(this.filters[i].type===type){effects.push(this.filters[i]);}}return effects;};function registerEffect$1(id,effect,countsAsEffect){registeredEffects$1[id]={effect:effect,countsAsEffect:countsAsEffect};}function SVGBaseElement(){}SVGBaseElement.prototype={initRendererElement:function initRendererElement(){this.layerElement=createNS('g');},createContainerElements:function createContainerElements(){this.matteElement=createNS('g');this.transformedElement=this.layerElement;this.maskedElement=this.layerElement;this._sizeChanged=false;var layerElementParent=null;// If this layer acts as a mask for the following layer
		if(this.data.td){this.matteMasks={};var gg=createNS('g');gg.setAttribute('id',this.layerId);gg.appendChild(this.layerElement);layerElementParent=gg;this.globalData.defs.appendChild(gg);}else if(this.data.tt){this.matteElement.appendChild(this.layerElement);layerElementParent=this.matteElement;this.baseElement=this.matteElement;}else {this.baseElement=this.layerElement;}if(this.data.ln){this.layerElement.setAttribute('id',this.data.ln);}if(this.data.cl){this.layerElement.setAttribute('class',this.data.cl);}// Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
		if(this.data.ty===0&&!this.data.hd){var cp=createNS('clipPath');var pt=createNS('path');pt.setAttribute('d','M0,0 L'+this.data.w+',0 L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');var clipId=createElementID();cp.setAttribute('id',clipId);cp.appendChild(pt);this.globalData.defs.appendChild(cp);if(this.checkMasks()){var cpGroup=createNS('g');cpGroup.setAttribute('clip-path','url('+getLocationHref()+'#'+clipId+')');cpGroup.appendChild(this.layerElement);this.transformedElement=cpGroup;if(layerElementParent){layerElementParent.appendChild(this.transformedElement);}else {this.baseElement=this.transformedElement;}}else {this.layerElement.setAttribute('clip-path','url('+getLocationHref()+'#'+clipId+')');}}if(this.data.bm!==0){this.setBlendMode();}},renderElement:function renderElement(){if(this.finalTransform._localMatMdf){this.transformedElement.setAttribute('transform',this.finalTransform.localMat.to2dCSS());}if(this.finalTransform._opMdf){this.transformedElement.setAttribute('opacity',this.finalTransform.localOpacity);}},destroyBaseElement:function destroyBaseElement(){this.layerElement=null;this.matteElement=null;this.maskManager.destroy();},getBaseElement:function getBaseElement(){if(this.data.hd){return null;}return this.baseElement;},createRenderableComponents:function createRenderableComponents(){this.maskManager=new MaskElement(this.data,this,this.globalData);this.renderableEffectsManager=new SVGEffects(this);this.searchEffectTransforms();},getMatte:function getMatte(matteType){// This should not be a common case. But for backward compatibility, we'll create the matte object.
		// It solves animations that have two consecutive layers marked as matte masks.
		// Which is an undefined behavior in AE.
		if(!this.matteMasks){this.matteMasks={};}if(!this.matteMasks[matteType]){var id=this.layerId+'_'+matteType;var filId;var fil;var useElement;var gg;if(matteType===1||matteType===3){var masker=createNS('mask');masker.setAttribute('id',id);masker.setAttribute('mask-type',matteType===3?'luminance':'alpha');useElement=createNS('use');useElement.setAttributeNS('http://www.w3.org/1999/xlink','href','#'+this.layerId);masker.appendChild(useElement);this.globalData.defs.appendChild(masker);if(!featureSupport.maskType&&matteType===1){masker.setAttribute('mask-type','luminance');filId=createElementID();fil=filtersFactory.createFilter(filId);this.globalData.defs.appendChild(fil);fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());gg=createNS('g');gg.appendChild(useElement);masker.appendChild(gg);gg.setAttribute('filter','url('+getLocationHref()+'#'+filId+')');}}else if(matteType===2){var maskGroup=createNS('mask');maskGroup.setAttribute('id',id);maskGroup.setAttribute('mask-type','alpha');var maskGrouper=createNS('g');maskGroup.appendChild(maskGrouper);filId=createElementID();fil=filtersFactory.createFilter(filId);/// /
		var feCTr=createNS('feComponentTransfer');feCTr.setAttribute('in','SourceGraphic');fil.appendChild(feCTr);var feFunc=createNS('feFuncA');feFunc.setAttribute('type','table');feFunc.setAttribute('tableValues','1.0 0.0');feCTr.appendChild(feFunc);/// /
		this.globalData.defs.appendChild(fil);var alphaRect=createNS('rect');alphaRect.setAttribute('width',this.comp.data.w);alphaRect.setAttribute('height',this.comp.data.h);alphaRect.setAttribute('x','0');alphaRect.setAttribute('y','0');alphaRect.setAttribute('fill','#ffffff');alphaRect.setAttribute('opacity','0');maskGrouper.setAttribute('filter','url('+getLocationHref()+'#'+filId+')');maskGrouper.appendChild(alphaRect);useElement=createNS('use');useElement.setAttributeNS('http://www.w3.org/1999/xlink','href','#'+this.layerId);maskGrouper.appendChild(useElement);if(!featureSupport.maskType){maskGroup.setAttribute('mask-type','luminance');fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());gg=createNS('g');maskGrouper.appendChild(alphaRect);gg.appendChild(this.layerElement);maskGrouper.appendChild(gg);}this.globalData.defs.appendChild(maskGroup);}this.matteMasks[matteType]=id;}return this.matteMasks[matteType];},setMatte:function setMatte(id){if(!this.matteElement){return;}this.matteElement.setAttribute('mask','url('+getLocationHref()+'#'+id+')');}};/**
		   * @file
		   * Handles AE's layer parenting property.
		   *
		   */function HierarchyElement(){}HierarchyElement.prototype={/**
		       * @function
		       * Initializes hierarchy properties
		       *
		       */initHierarchy:function initHierarchy(){// element's parent list
		this.hierarchy=[];// if element is parent of another layer _isParent will be true
		this._isParent=false;this.checkParenting();},/**
		       * @function
		       * Sets layer's hierarchy.
		       * @param {array} hierarch
		       * layer's parent list
		       *
		       */setHierarchy:function setHierarchy(hierarchy){this.hierarchy=hierarchy;},/**
		       * @function
		       * Sets layer as parent.
		       *
		       */setAsParent:function setAsParent(){this._isParent=true;},/**
		       * @function
		       * Searches layer's parenting chain
		       *
		       */checkParenting:function checkParenting(){if(this.data.parent!==undefined){this.comp.buildElementParenting(this,this.data.parent,[]);}}};function RenderableDOMElement(){}(function(){var _prototype={initElement:function initElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initTransform(data,globalData,comp);this.initHierarchy();this.initRenderable();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();this.createContent();this.hide();},hide:function hide(){// console.log('HIDE', this);
		if(!this.hidden&&(!this.isInRange||this.isTransparent)){var elem=this.baseElement||this.layerElement;elem.style.display='none';this.hidden=true;}},show:function show(){// console.log('SHOW', this);
		if(this.isInRange&&!this.isTransparent){if(!this.data.hd){var elem=this.baseElement||this.layerElement;elem.style.display='block';}this.hidden=false;this._isFirstFrame=true;}},renderFrame:function renderFrame(){// If it is exported as hidden (data.hd === true) no need to render
		// If it is not visible no need to render
		if(this.data.hd||this.hidden){return;}this.renderTransform();this.renderRenderable();this.renderLocalTransform();this.renderElement();this.renderInnerContent();if(this._isFirstFrame){this._isFirstFrame=false;}},renderInnerContent:function renderInnerContent(){},prepareFrame:function prepareFrame(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);this.checkTransparency();},destroy:function destroy(){this.innerElem=null;this.destroyBaseElement();}};extendPrototype([RenderableElement,createProxyFunction(_prototype)],RenderableDOMElement);})();function IImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);if(this.assetData&&this.assetData.sid){this.assetData=globalData.slotManager.getProp(this.assetData);}this.initElement(data,globalData,comp);this.sourceRect={top:0,left:0,width:this.assetData.w,height:this.assetData.h};}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],IImageElement);IImageElement.prototype.createContent=function(){var assetPath=this.globalData.getAssetsPath(this.assetData);this.innerElem=createNS('image');this.innerElem.setAttribute('width',this.assetData.w+'px');this.innerElem.setAttribute('height',this.assetData.h+'px');this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio);this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);this.layerElement.appendChild(this.innerElem);};IImageElement.prototype.sourceRectAtTime=function(){return this.sourceRect;};function ProcessedElement(element,position){this.elem=element;this.pos=position;}function IShapeElement(){}IShapeElement.prototype={addShapeToModifiers:function addShapeToModifiers(data){var i;var len=this.shapeModifiers.length;for(i=0;i<len;i+=1){this.shapeModifiers[i].addShape(data);}},isShapeInAnimatedModifiers:function isShapeInAnimatedModifiers(data){var i=0;var len=this.shapeModifiers.length;while(i<len){if(this.shapeModifiers[i].isAnimatedWithShape(data)){return true;}}return false;},renderModifiers:function renderModifiers(){if(!this.shapeModifiers.length){return;}var i;var len=this.shapes.length;for(i=0;i<len;i+=1){this.shapes[i].sh.reset();}len=this.shapeModifiers.length;var shouldBreakProcess;for(i=len-1;i>=0;i-=1){shouldBreakProcess=this.shapeModifiers[i].processShapes(this._isFirstFrame);// workaround to fix cases where a repeater resets the shape so the following processes get called twice
		// TODO: find a better solution for this
		if(shouldBreakProcess){break;}}},searchProcessedElement:function searchProcessedElement(elem){var elements=this.processedElements;var i=0;var len=elements.length;while(i<len){if(elements[i].elem===elem){return elements[i].pos;}i+=1;}return 0;},addProcessedElement:function addProcessedElement(elem,pos){var elements=this.processedElements;var i=elements.length;while(i){i-=1;if(elements[i].elem===elem){elements[i].pos=pos;return;}}elements.push(new ProcessedElement(elem,pos));},prepareFrame:function prepareFrame(num){this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);}};var lineCapEnum={1:'butt',2:'round',3:'square'};var lineJoinEnum={1:'miter',2:'round',3:'bevel'};function SVGShapeData(transformers,level,shape){this.caches=[];this.styles=[];this.transformers=transformers;this.lStr='';this.sh=shape;this.lvl=level;// TODO find if there are some cases where _isAnimated can be false.
		// For now, since shapes add up with other shapes. They have to be calculated every time.
		// One way of finding out is checking if all styles associated to this shape depend only of this shape
		this._isAnimated=!!shape.k;// TODO: commenting this for now since all shapes are animated
		var i=0;var len=transformers.length;while(i<len){if(transformers[i].mProps.dynamicProperties.length){this._isAnimated=true;break;}i+=1;}}SVGShapeData.prototype.setAsAnimated=function(){this._isAnimated=true;};function SVGStyleData(data,level){this.data=data;this.type=data.ty;this.d='';this.lvl=level;this._mdf=false;this.closed=data.hd===true;this.pElem=createNS('path');this.msElem=null;}SVGStyleData.prototype.reset=function(){this.d='';this._mdf=false;};function DashProperty(elem,data,renderer,container){this.elem=elem;this.frameId=-1;this.dataProps=createSizedArray(data.length);this.renderer=renderer;this.k=false;this.dashStr='';this.dashArray=createTypedArray('float32',data.length?data.length-1:0);this.dashoffset=createTypedArray('float32',1);this.initDynamicPropertyContainer(container);var i;var len=data.length||0;var prop;for(i=0;i<len;i+=1){prop=PropertyFactory.getProp(elem,data[i].v,0,0,this);this.k=prop.k||this.k;this.dataProps[i]={n:data[i].n,p:prop};}if(!this.k){this.getValue(true);}this._isAnimated=this.k;}DashProperty.prototype.getValue=function(forceRender){if(this.elem.globalData.frameId===this.frameId&&!forceRender){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();this._mdf=this._mdf||forceRender;if(this._mdf){var i=0;var len=this.dataProps.length;if(this.renderer==='svg'){this.dashStr='';}for(i=0;i<len;i+=1){if(this.dataProps[i].n!=='o'){if(this.renderer==='svg'){this.dashStr+=' '+this.dataProps[i].p.v;}else {this.dashArray[i]=this.dataProps[i].p.v;}}else {this.dashoffset[0]=this.dataProps[i].p.v;}}}};extendPrototype([DynamicPropertyContainer],DashProperty);function SVGStrokeStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.w=PropertyFactory.getProp(elem,data.w,0,null,this);this.d=new DashProperty(elem,data.d||{},'svg',this);this.c=PropertyFactory.getProp(elem,data.c,1,255,this);this.style=styleOb;this._isAnimated=!!this._isAnimated;}extendPrototype([DynamicPropertyContainer],SVGStrokeStyleData);function SVGFillStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.c=PropertyFactory.getProp(elem,data.c,1,255,this);this.style=styleOb;}extendPrototype([DynamicPropertyContainer],SVGFillStyleData);function SVGNoStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.style=styleOb;}extendPrototype([DynamicPropertyContainer],SVGNoStyleData);function GradientProperty(elem,data,container){this.data=data;this.c=createTypedArray('uint8c',data.p*4);var cLength=data.k.k[0].s?data.k.k[0].s.length-data.p*4:data.k.k.length-data.p*4;this.o=createTypedArray('float32',cLength);this._cmdf=false;this._omdf=false;this._collapsable=this.checkCollapsable();this._hasOpacity=cLength;this.initDynamicPropertyContainer(container);this.prop=PropertyFactory.getProp(elem,data.k,1,null,this);this.k=this.prop.k;this.getValue(true);}GradientProperty.prototype.comparePoints=function(values,points){var i=0;var len=this.o.length/2;var diff;while(i<len){diff=Math.abs(values[i*4]-values[points*4+i*2]);if(diff>0.01){return false;}i+=1;}return true;};GradientProperty.prototype.checkCollapsable=function(){if(this.o.length/2!==this.c.length/4){return false;}if(this.data.k.k[0].s){var i=0;var len=this.data.k.k.length;while(i<len){if(!this.comparePoints(this.data.k.k[i].s,this.data.p)){return false;}i+=1;}}else if(!this.comparePoints(this.data.k.k,this.data.p)){return false;}return true;};GradientProperty.prototype.getValue=function(forceRender){this.prop.getValue();this._mdf=false;this._cmdf=false;this._omdf=false;if(this.prop._mdf||forceRender){var i;var len=this.data.p*4;var mult;var val;for(i=0;i<len;i+=1){mult=i%4===0?100:255;val=Math.round(this.prop.v[i]*mult);if(this.c[i]!==val){this.c[i]=val;this._cmdf=!forceRender;}}if(this.o.length){len=this.prop.v.length;for(i=this.data.p*4;i<len;i+=1){mult=i%2===0?100:1;val=i%2===0?Math.round(this.prop.v[i]*100):this.prop.v[i];if(this.o[i-this.data.p*4]!==val){this.o[i-this.data.p*4]=val;this._omdf=!forceRender;}}}this._mdf=!forceRender;}};extendPrototype([DynamicPropertyContainer],GradientProperty);function SVGGradientFillStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.initGradientData(elem,data,styleOb);}SVGGradientFillStyleData.prototype.initGradientData=function(elem,data,styleOb){this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.s=PropertyFactory.getProp(elem,data.s,1,null,this);this.e=PropertyFactory.getProp(elem,data.e,1,null,this);this.h=PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);this.a=PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);this.g=new GradientProperty(elem,data.g,this);this.style=styleOb;this.stops=[];this.setGradientData(styleOb.pElem,data);this.setGradientOpacity(data,styleOb);this._isAnimated=!!this._isAnimated;};SVGGradientFillStyleData.prototype.setGradientData=function(pathElement,data){var gradientId=createElementID();var gfill=createNS(data.t===1?'linearGradient':'radialGradient');gfill.setAttribute('id',gradientId);gfill.setAttribute('spreadMethod','pad');gfill.setAttribute('gradientUnits','userSpaceOnUse');var stops=[];var stop;var j;var jLen;jLen=data.g.p*4;for(j=0;j<jLen;j+=4){stop=createNS('stop');gfill.appendChild(stop);stops.push(stop);}pathElement.setAttribute(data.ty==='gf'?'fill':'stroke','url('+getLocationHref()+'#'+gradientId+')');this.gf=gfill;this.cst=stops;};SVGGradientFillStyleData.prototype.setGradientOpacity=function(data,styleOb){if(this.g._hasOpacity&&!this.g._collapsable){var stop;var j;var jLen;var mask=createNS('mask');var maskElement=createNS('path');mask.appendChild(maskElement);var opacityId=createElementID();var maskId=createElementID();mask.setAttribute('id',maskId);var opFill=createNS(data.t===1?'linearGradient':'radialGradient');opFill.setAttribute('id',opacityId);opFill.setAttribute('spreadMethod','pad');opFill.setAttribute('gradientUnits','userSpaceOnUse');jLen=data.g.k.k[0].s?data.g.k.k[0].s.length:data.g.k.k.length;var stops=this.stops;for(j=data.g.p*4;j<jLen;j+=2){stop=createNS('stop');stop.setAttribute('stop-color','rgb(255,255,255)');opFill.appendChild(stop);stops.push(stop);}maskElement.setAttribute(data.ty==='gf'?'fill':'stroke','url('+getLocationHref()+'#'+opacityId+')');if(data.ty==='gs'){maskElement.setAttribute('stroke-linecap',lineCapEnum[data.lc||2]);maskElement.setAttribute('stroke-linejoin',lineJoinEnum[data.lj||2]);if(data.lj===1){maskElement.setAttribute('stroke-miterlimit',data.ml);}}this.of=opFill;this.ms=mask;this.ost=stops;this.maskId=maskId;styleOb.msElem=maskElement;}};extendPrototype([DynamicPropertyContainer],SVGGradientFillStyleData);function SVGGradientStrokeStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.w=PropertyFactory.getProp(elem,data.w,0,null,this);this.d=new DashProperty(elem,data.d||{},'svg',this);this.initGradientData(elem,data,styleOb);this._isAnimated=!!this._isAnimated;}extendPrototype([SVGGradientFillStyleData,DynamicPropertyContainer],SVGGradientStrokeStyleData);function ShapeGroupData(){this.it=[];this.prevViewData=[];this.gr=createNS('g');}function SVGTransformData(mProps,op,container){this.transform={mProps:mProps,op:op,container:container};this.elements=[];this._isAnimated=this.transform.mProps.dynamicProperties.length||this.transform.op.effectsSequence.length;}var buildShapeString=function buildShapeString(pathNodes,length,closed,mat){if(length===0){return '';}var _o=pathNodes.o;var _i=pathNodes.i;var _v=pathNodes.v;var i;var shapeString=' M'+mat.applyToPointStringified(_v[0][0],_v[0][1]);for(i=1;i<length;i+=1){shapeString+=' C'+mat.applyToPointStringified(_o[i-1][0],_o[i-1][1])+' '+mat.applyToPointStringified(_i[i][0],_i[i][1])+' '+mat.applyToPointStringified(_v[i][0],_v[i][1]);}if(closed&&length){shapeString+=' C'+mat.applyToPointStringified(_o[i-1][0],_o[i-1][1])+' '+mat.applyToPointStringified(_i[0][0],_i[0][1])+' '+mat.applyToPointStringified(_v[0][0],_v[0][1]);shapeString+='z';}return shapeString;};var SVGElementsRenderer=function(){var _identityMatrix=new Matrix();var _matrixHelper=new Matrix();var ob={createRenderFunction:createRenderFunction};function createRenderFunction(data){switch(data.ty){case'fl':return renderFill;case'gf':return renderGradient;case'gs':return renderGradientStroke;case'st':return renderStroke;case'sh':case'el':case'rc':case'sr':return renderPath;case'tr':return renderContentTransform;case'no':return renderNoop;default:return null;}}function renderContentTransform(styleData,itemData,isFirstFrame){if(isFirstFrame||itemData.transform.op._mdf){itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);}if(isFirstFrame||itemData.transform.mProps._mdf){itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());}}function renderNoop(){}function renderPath(styleData,itemData,isFirstFrame){var j;var jLen;var pathStringTransformed;var redraw;var pathNodes;var l;var lLen=itemData.styles.length;var lvl=itemData.lvl;var paths;var mat;var iterations;var k;for(l=0;l<lLen;l+=1){redraw=itemData.sh._mdf||isFirstFrame;if(itemData.styles[l].lvl<lvl){mat=_matrixHelper.reset();iterations=lvl-itemData.styles[l].lvl;k=itemData.transformers.length-1;while(!redraw&&iterations>0){redraw=itemData.transformers[k].mProps._mdf||redraw;iterations-=1;k-=1;}if(redraw){iterations=lvl-itemData.styles[l].lvl;k=itemData.transformers.length-1;while(iterations>0){mat.multiply(itemData.transformers[k].mProps.v);iterations-=1;k-=1;}}}else {mat=_identityMatrix;}paths=itemData.sh.paths;jLen=paths._length;if(redraw){pathStringTransformed='';for(j=0;j<jLen;j+=1){pathNodes=paths.shapes[j];if(pathNodes&&pathNodes._length){pathStringTransformed+=buildShapeString(pathNodes,pathNodes._length,pathNodes.c,mat);}}itemData.caches[l]=pathStringTransformed;}else {pathStringTransformed=itemData.caches[l];}itemData.styles[l].d+=styleData.hd===true?'':pathStringTransformed;itemData.styles[l]._mdf=redraw||itemData.styles[l]._mdf;}}function renderFill(styleData,itemData,isFirstFrame){var styleElem=itemData.style;if(itemData.c._mdf||isFirstFrame){styleElem.pElem.setAttribute('fill','rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')');}if(itemData.o._mdf||isFirstFrame){styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);}}function renderGradientStroke(styleData,itemData,isFirstFrame){renderGradient(styleData,itemData,isFirstFrame);renderStroke(styleData,itemData,isFirstFrame);}function renderGradient(styleData,itemData,isFirstFrame){var gfill=itemData.gf;var hasOpacity=itemData.g._hasOpacity;var pt1=itemData.s.v;var pt2=itemData.e.v;if(itemData.o._mdf||isFirstFrame){var attr=styleData.ty==='gf'?'fill-opacity':'stroke-opacity';itemData.style.pElem.setAttribute(attr,itemData.o.v);}if(itemData.s._mdf||isFirstFrame){var attr1=styleData.t===1?'x1':'cx';var attr2=attr1==='x1'?'y1':'cy';gfill.setAttribute(attr1,pt1[0]);gfill.setAttribute(attr2,pt1[1]);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute(attr1,pt1[0]);itemData.of.setAttribute(attr2,pt1[1]);}}var stops;var i;var len;var stop;if(itemData.g._cmdf||isFirstFrame){stops=itemData.cst;var cValues=itemData.g.c;len=stops.length;for(i=0;i<len;i+=1){stop=stops[i];stop.setAttribute('offset',cValues[i*4]+'%');stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');}}if(hasOpacity&&(itemData.g._omdf||isFirstFrame)){var oValues=itemData.g.o;if(itemData.g._collapsable){stops=itemData.cst;}else {stops=itemData.ost;}len=stops.length;for(i=0;i<len;i+=1){stop=stops[i];if(!itemData.g._collapsable){stop.setAttribute('offset',oValues[i*2]+'%');}stop.setAttribute('stop-opacity',oValues[i*2+1]);}}if(styleData.t===1){if(itemData.e._mdf||isFirstFrame){gfill.setAttribute('x2',pt2[0]);gfill.setAttribute('y2',pt2[1]);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('x2',pt2[0]);itemData.of.setAttribute('y2',pt2[1]);}}}else {var rad;if(itemData.s._mdf||itemData.e._mdf||isFirstFrame){rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));gfill.setAttribute('r',rad);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('r',rad);}}if(itemData.e._mdf||itemData.h._mdf||itemData.a._mdf||isFirstFrame){if(!rad){rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));}var ang=Math.atan2(pt2[1]-pt1[1],pt2[0]-pt1[0]);var percent=itemData.h.v;if(percent>=1){percent=0.99;}else if(percent<=-1){percent=-0.99;}var dist=rad*percent;var x=Math.cos(ang+itemData.a.v)*dist+pt1[0];var y=Math.sin(ang+itemData.a.v)*dist+pt1[1];gfill.setAttribute('fx',x);gfill.setAttribute('fy',y);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('fx',x);itemData.of.setAttribute('fy',y);}}// gfill.setAttribute('fy','200');
		}}function renderStroke(styleData,itemData,isFirstFrame){var styleElem=itemData.style;var d=itemData.d;if(d&&(d._mdf||isFirstFrame)&&d.dashStr){styleElem.pElem.setAttribute('stroke-dasharray',d.dashStr);styleElem.pElem.setAttribute('stroke-dashoffset',d.dashoffset[0]);}if(itemData.c&&(itemData.c._mdf||isFirstFrame)){styleElem.pElem.setAttribute('stroke','rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')');}if(itemData.o._mdf||isFirstFrame){styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);}if(itemData.w._mdf||isFirstFrame){styleElem.pElem.setAttribute('stroke-width',itemData.w.v);if(styleElem.msElem){styleElem.msElem.setAttribute('stroke-width',itemData.w.v);}}}return ob;}();function SVGShapeElement(data,globalData,comp){// List of drawable elements
		this.shapes=[];// Full shape data
		this.shapesData=data.shapes;// List of styles that will be applied to shapes
		this.stylesList=[];// List of modifiers that will be applied to shapes
		this.shapeModifiers=[];// List of items in shape tree
		this.itemsData=[];// List of items in previous shape tree
		this.processedElements=[];// List of animated components
		this.animatedContents=[];this.initElement(data,globalData,comp);// Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
		// List of elements that have been created
		this.prevViewData=[];// Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
		}extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement],SVGShapeElement);SVGShapeElement.prototype.initSecondaryElement=function(){};SVGShapeElement.prototype.identityMatrix=new Matrix();SVGShapeElement.prototype.buildExpressionInterface=function(){};SVGShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],true);this.filterUniqueShapes();};/*
		  This method searches for multiple shapes that affect a single element and one of them is animated
		  */SVGShapeElement.prototype.filterUniqueShapes=function(){var i;var len=this.shapes.length;var shape;var j;var jLen=this.stylesList.length;var style;var tempShapes=[];var areAnimated=false;for(j=0;j<jLen;j+=1){style=this.stylesList[j];areAnimated=false;tempShapes.length=0;for(i=0;i<len;i+=1){shape=this.shapes[i];if(shape.styles.indexOf(style)!==-1){tempShapes.push(shape);areAnimated=shape._isAnimated||areAnimated;}}if(tempShapes.length>1&&areAnimated){this.setShapesAsAnimated(tempShapes);}}};SVGShapeElement.prototype.setShapesAsAnimated=function(shapes){var i;var len=shapes.length;for(i=0;i<len;i+=1){shapes[i].setAsAnimated();}};SVGShapeElement.prototype.createStyleElement=function(data,level){// TODO: prevent drawing of hidden styles
		var elementData;var styleOb=new SVGStyleData(data,level);var pathElement=styleOb.pElem;if(data.ty==='st'){elementData=new SVGStrokeStyleData(this,data,styleOb);}else if(data.ty==='fl'){elementData=new SVGFillStyleData(this,data,styleOb);}else if(data.ty==='gf'||data.ty==='gs'){var GradientConstructor=data.ty==='gf'?SVGGradientFillStyleData:SVGGradientStrokeStyleData;elementData=new GradientConstructor(this,data,styleOb);this.globalData.defs.appendChild(elementData.gf);if(elementData.maskId){this.globalData.defs.appendChild(elementData.ms);this.globalData.defs.appendChild(elementData.of);pathElement.setAttribute('mask','url('+getLocationHref()+'#'+elementData.maskId+')');}}else if(data.ty==='no'){elementData=new SVGNoStyleData(this,data,styleOb);}if(data.ty==='st'||data.ty==='gs'){pathElement.setAttribute('stroke-linecap',lineCapEnum[data.lc||2]);pathElement.setAttribute('stroke-linejoin',lineJoinEnum[data.lj||2]);pathElement.setAttribute('fill-opacity','0');if(data.lj===1){pathElement.setAttribute('stroke-miterlimit',data.ml);}}if(data.r===2){pathElement.setAttribute('fill-rule','evenodd');}if(data.ln){pathElement.setAttribute('id',data.ln);}if(data.cl){pathElement.setAttribute('class',data.cl);}if(data.bm){pathElement.style['mix-blend-mode']=getBlendMode(data.bm);}this.stylesList.push(styleOb);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.createGroupElement=function(data){var elementData=new ShapeGroupData();if(data.ln){elementData.gr.setAttribute('id',data.ln);}if(data.cl){elementData.gr.setAttribute('class',data.cl);}if(data.bm){elementData.gr.style['mix-blend-mode']=getBlendMode(data.bm);}return elementData;};SVGShapeElement.prototype.createTransformElement=function(data,container){var transformProperty=TransformPropertyFactory.getTransformProperty(this,data,this);var elementData=new SVGTransformData(transformProperty,transformProperty.o,container);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.createShapeElement=function(data,ownTransformers,level){var ty=4;if(data.ty==='rc'){ty=5;}else if(data.ty==='el'){ty=6;}else if(data.ty==='sr'){ty=7;}var shapeProperty=ShapePropertyFactory.getShapeProp(this,data,ty,this);var elementData=new SVGShapeData(ownTransformers,level,shapeProperty);this.shapes.push(elementData);this.addShapeToModifiers(elementData);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.addToAnimatedContents=function(data,element){var i=0;var len=this.animatedContents.length;while(i<len){if(this.animatedContents[i].element===element){return;}i+=1;}this.animatedContents.push({fn:SVGElementsRenderer.createRenderFunction(data),element:element,data:data});};SVGShapeElement.prototype.setElementStyles=function(elementData){var arr=elementData.styles;var j;var jLen=this.stylesList.length;for(j=0;j<jLen;j+=1){if(!this.stylesList[j].closed){arr.push(this.stylesList[j]);}}};SVGShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=true;var i;var len=this.itemsData.length;for(i=0;i<len;i+=1){this.prevViewData[i]=this.itemsData[i];}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],true);this.filterUniqueShapes();len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();}this.renderModifiers();};SVGShapeElement.prototype.searchShapes=function(arr,itemsData,prevViewData,container,level,transformers,render){var ownTransformers=[].concat(transformers);var i;var len=arr.length-1;var j;var jLen;var ownStyles=[];var ownModifiers=[];var currentTransform;var modifier;var processedPos;for(i=len;i>=0;i-=1){processedPos=this.searchProcessedElement(arr[i]);if(!processedPos){arr[i]._render=render;}else {itemsData[i]=prevViewData[processedPos-1];}if(arr[i].ty==='fl'||arr[i].ty==='st'||arr[i].ty==='gf'||arr[i].ty==='gs'||arr[i].ty==='no'){if(!processedPos){itemsData[i]=this.createStyleElement(arr[i],level);}else {itemsData[i].style.closed=false;}if(arr[i]._render){if(itemsData[i].style.pElem.parentNode!==container){container.appendChild(itemsData[i].style.pElem);}}ownStyles.push(itemsData[i].style);}else if(arr[i].ty==='gr'){if(!processedPos){itemsData[i]=this.createGroupElement(arr[i]);}else {jLen=itemsData[i].it.length;for(j=0;j<jLen;j+=1){itemsData[i].prevViewData[j]=itemsData[i].it[j];}}this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,level+1,ownTransformers,render);if(arr[i]._render){if(itemsData[i].gr.parentNode!==container){container.appendChild(itemsData[i].gr);}}}else if(arr[i].ty==='tr'){if(!processedPos){itemsData[i]=this.createTransformElement(arr[i],container);}currentTransform=itemsData[i].transform;ownTransformers.push(currentTransform);}else if(arr[i].ty==='sh'||arr[i].ty==='rc'||arr[i].ty==='el'||arr[i].ty==='sr'){if(!processedPos){itemsData[i]=this.createShapeElement(arr[i],ownTransformers,level);}this.setElementStyles(itemsData[i]);}else if(arr[i].ty==='tm'||arr[i].ty==='rd'||arr[i].ty==='ms'||arr[i].ty==='pb'||arr[i].ty==='zz'||arr[i].ty==='op'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);modifier.init(this,arr[i]);itemsData[i]=modifier;this.shapeModifiers.push(modifier);}else {modifier=itemsData[i];modifier.closed=false;}ownModifiers.push(modifier);}else if(arr[i].ty==='rp'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);itemsData[i]=modifier;modifier.init(this,arr,i,itemsData);this.shapeModifiers.push(modifier);render=false;}else {modifier=itemsData[i];modifier.closed=true;}ownModifiers.push(modifier);}this.addProcessedElement(arr[i],i+1);}len=ownStyles.length;for(i=0;i<len;i+=1){ownStyles[i].closed=true;}len=ownModifiers.length;for(i=0;i<len;i+=1){ownModifiers[i].closed=true;}};SVGShapeElement.prototype.renderInnerContent=function(){this.renderModifiers();var i;var len=this.stylesList.length;for(i=0;i<len;i+=1){this.stylesList[i].reset();}this.renderShape();for(i=0;i<len;i+=1){if(this.stylesList[i]._mdf||this._isFirstFrame){if(this.stylesList[i].msElem){this.stylesList[i].msElem.setAttribute('d',this.stylesList[i].d);// Adding M0 0 fixes same mask bug on all browsers
		this.stylesList[i].d='M0 0'+this.stylesList[i].d;}this.stylesList[i].pElem.setAttribute('d',this.stylesList[i].d||'M0 0');}}};SVGShapeElement.prototype.renderShape=function(){var i;var len=this.animatedContents.length;var animatedContent;for(i=0;i<len;i+=1){animatedContent=this.animatedContents[i];if((this._isFirstFrame||animatedContent.element._isAnimated)&&animatedContent.data!==true){animatedContent.fn(animatedContent.data,animatedContent.element,this._isFirstFrame);}}};SVGShapeElement.prototype.destroy=function(){this.destroyBaseElement();this.shapesData=null;this.itemsData=null;};function LetterProps(o,sw,sc,fc,m,p){this.o=o;this.sw=sw;this.sc=sc;this.fc=fc;this.m=m;this.p=p;this._mdf={o:true,sw:!!sw,sc:!!sc,fc:!!fc,m:true,p:true};}LetterProps.prototype.update=function(o,sw,sc,fc,m,p){this._mdf.o=false;this._mdf.sw=false;this._mdf.sc=false;this._mdf.fc=false;this._mdf.m=false;this._mdf.p=false;var updated=false;if(this.o!==o){this.o=o;this._mdf.o=true;updated=true;}if(this.sw!==sw){this.sw=sw;this._mdf.sw=true;updated=true;}if(this.sc!==sc){this.sc=sc;this._mdf.sc=true;updated=true;}if(this.fc!==fc){this.fc=fc;this._mdf.fc=true;updated=true;}if(this.m!==m){this.m=m;this._mdf.m=true;updated=true;}if(p.length&&(this.p[0]!==p[0]||this.p[1]!==p[1]||this.p[4]!==p[4]||this.p[5]!==p[5]||this.p[12]!==p[12]||this.p[13]!==p[13])){this.p=p;this._mdf.p=true;updated=true;}return updated;};function TextProperty(elem,data){this._frameId=initialDefaultFrame;this.pv='';this.v='';this.kf=false;this._isFirstFrame=true;this._mdf=false;if(data.d&&data.d.sid){data.d=elem.globalData.slotManager.getProp(data.d);}this.data=data;this.elem=elem;this.comp=this.elem.comp;this.keysIndex=0;this.canResize=false;this.minimumFontSize=1;this.effectsSequence=[];this.currentData={ascent:0,boxWidth:this.defaultBoxWidth,f:'',fStyle:'',fWeight:'',fc:'',j:'',justifyOffset:'',l:[],lh:0,lineWidths:[],ls:'',of:'',s:'',sc:'',sw:0,t:0,tr:0,sz:0,ps:null,fillColorAnim:false,strokeColorAnim:false,strokeWidthAnim:false,yOffset:0,finalSize:0,finalText:[],finalLineHeight:0,__complete:false};this.copyData(this.currentData,this.data.d.k[0].s);if(!this.searchProperty()){this.completeTextData(this.currentData);}}TextProperty.prototype.defaultBoxWidth=[0,0];TextProperty.prototype.copyData=function(obj,data){for(var s in data){if(Object.prototype.hasOwnProperty.call(data,s)){obj[s]=data[s];}}return obj;};TextProperty.prototype.setCurrentData=function(data){if(!data.__complete){this.completeTextData(data);}this.currentData=data;this.currentData.boxWidth=this.currentData.boxWidth||this.defaultBoxWidth;this._mdf=true;};TextProperty.prototype.searchProperty=function(){return this.searchKeyframes();};TextProperty.prototype.searchKeyframes=function(){this.kf=this.data.d.k.length>1;if(this.kf){this.addEffect(this.getKeyframeValue.bind(this));}return this.kf;};TextProperty.prototype.addEffect=function(effectFunction){this.effectsSequence.push(effectFunction);this.elem.addDynamicProperty(this);};TextProperty.prototype.getValue=function(_finalValue){if((this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length)&&!_finalValue){return;}this.currentData.t=this.data.d.k[this.keysIndex].s.t;var currentValue=this.currentData;var currentIndex=this.keysIndex;if(this.lock){this.setCurrentData(this.currentData);return;}this.lock=true;this._mdf=false;var i;var len=this.effectsSequence.length;var finalValue=_finalValue||this.data.d.k[this.keysIndex].s;for(i=0;i<len;i+=1){// Checking if index changed to prevent creating a new object every time the expression updates.
		if(currentIndex!==this.keysIndex){finalValue=this.effectsSequence[i](finalValue,finalValue.t);}else {finalValue=this.effectsSequence[i](this.currentData,finalValue.t);}}if(currentValue!==finalValue){this.setCurrentData(finalValue);}this.v=this.currentData;this.pv=this.v;this.lock=false;this.frameId=this.elem.globalData.frameId;};TextProperty.prototype.getKeyframeValue=function(){var textKeys=this.data.d.k;var frameNum=this.elem.comp.renderedFrame;var i=0;var len=textKeys.length;while(i<=len-1){if(i===len-1||textKeys[i+1].t>frameNum){break;}i+=1;}if(this.keysIndex!==i){this.keysIndex=i;}return this.data.d.k[this.keysIndex].s;};TextProperty.prototype.buildFinalText=function(text){var charactersArray=[];var i=0;var len=text.length;var charCode;var secondCharCode;var shouldCombine=false;var shouldCombineNext=false;var currentChars='';while(i<len){shouldCombine=shouldCombineNext;shouldCombineNext=false;charCode=text.charCodeAt(i);currentChars=text.charAt(i);if(FontManager.isCombinedCharacter(charCode)){shouldCombine=true;// It's a potential surrogate pair (this is the High surrogate)
		}else if(charCode>=0xD800&&charCode<=0xDBFF){if(FontManager.isRegionalFlag(text,i)){currentChars=text.substr(i,14);}else {secondCharCode=text.charCodeAt(i+1);// It's a surrogate pair (this is the Low surrogate)
		if(secondCharCode>=0xDC00&&secondCharCode<=0xDFFF){if(FontManager.isModifier(charCode,secondCharCode)){currentChars=text.substr(i,2);shouldCombine=true;}else if(FontManager.isFlagEmoji(text.substr(i,4))){currentChars=text.substr(i,4);}else {currentChars=text.substr(i,2);}}}}else if(charCode>0xDBFF){secondCharCode=text.charCodeAt(i+1);if(FontManager.isVariationSelector(charCode)){shouldCombine=true;}}else if(FontManager.isZeroWidthJoiner(charCode)){shouldCombine=true;shouldCombineNext=true;}if(shouldCombine){charactersArray[charactersArray.length-1]+=currentChars;shouldCombine=false;}else {charactersArray.push(currentChars);}i+=currentChars.length;}return charactersArray;};TextProperty.prototype.completeTextData=function(documentData){documentData.__complete=true;var fontManager=this.elem.globalData.fontManager;var data=this.data;var letters=[];var i;var len;var newLineFlag;var index=0;var val;var anchorGrouping=data.m.g;var currentSize=0;var currentPos=0;var currentLine=0;var lineWidths=[];var lineWidth=0;var maxLineWidth=0;var j;var jLen;var fontData=fontManager.getFontByName(documentData.f);var charData;var cLength=0;var fontProps=getFontProperties(fontData);documentData.fWeight=fontProps.weight;documentData.fStyle=fontProps.style;documentData.finalSize=documentData.s;documentData.finalText=this.buildFinalText(documentData.t);len=documentData.finalText.length;documentData.finalLineHeight=documentData.lh;var trackingOffset=documentData.tr/1000*documentData.finalSize;var charCode;if(documentData.sz){var flag=true;var boxWidth=documentData.sz[0];var boxHeight=documentData.sz[1];var currentHeight;var finalText;while(flag){finalText=this.buildFinalText(documentData.t);currentHeight=0;lineWidth=0;len=finalText.length;trackingOffset=documentData.tr/1000*documentData.finalSize;var lastSpaceIndex=-1;for(i=0;i<len;i+=1){charCode=finalText[i].charCodeAt(0);newLineFlag=false;if(finalText[i]===' '){lastSpaceIndex=i;}else if(charCode===13||charCode===3){lineWidth=0;newLineFlag=true;currentHeight+=documentData.finalLineHeight||documentData.finalSize*1.2;}if(fontManager.chars){charData=fontManager.getCharData(finalText[i],fontData.fStyle,fontData.fFamily);cLength=newLineFlag?0:charData.w*documentData.finalSize/100;}else {// tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
		cLength=fontManager.measureText(finalText[i],documentData.f,documentData.finalSize);}if(lineWidth+cLength>boxWidth&&finalText[i]!==' '){if(lastSpaceIndex===-1){len+=1;}else {i=lastSpaceIndex;}currentHeight+=documentData.finalLineHeight||documentData.finalSize*1.2;finalText.splice(i,lastSpaceIndex===i?1:0,'\r');// finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
		lastSpaceIndex=-1;lineWidth=0;}else {lineWidth+=cLength;lineWidth+=trackingOffset;}}currentHeight+=fontData.ascent*documentData.finalSize/100;if(this.canResize&&documentData.finalSize>this.minimumFontSize&&boxHeight<currentHeight){documentData.finalSize-=1;documentData.finalLineHeight=documentData.finalSize*documentData.lh/documentData.s;}else {documentData.finalText=finalText;len=documentData.finalText.length;flag=false;}}}lineWidth=-trackingOffset;cLength=0;var uncollapsedSpaces=0;var currentChar;for(i=0;i<len;i+=1){newLineFlag=false;currentChar=documentData.finalText[i];charCode=currentChar.charCodeAt(0);if(charCode===13||charCode===3){uncollapsedSpaces=0;lineWidths.push(lineWidth);maxLineWidth=lineWidth>maxLineWidth?lineWidth:maxLineWidth;lineWidth=-2*trackingOffset;val='';newLineFlag=true;currentLine+=1;}else {val=currentChar;}if(fontManager.chars){charData=fontManager.getCharData(currentChar,fontData.fStyle,fontManager.getFontByName(documentData.f).fFamily);cLength=newLineFlag?0:charData.w*documentData.finalSize/100;}else {// var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
		// tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
		cLength=fontManager.measureText(val,documentData.f,documentData.finalSize);}//
		if(currentChar===' '){uncollapsedSpaces+=cLength+trackingOffset;}else {lineWidth+=cLength+trackingOffset+uncollapsedSpaces;uncollapsedSpaces=0;}letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag,anIndexes:[],val:val,line:currentLine,animatorJustifyOffset:0});if(anchorGrouping==2){// eslint-disable-line eqeqeq
		currentSize+=cLength;if(val===''||val===' '||i===len-1){if(val===''||val===' '){currentSize-=cLength;}while(currentPos<=i){letters[currentPos].an=currentSize;letters[currentPos].ind=index;letters[currentPos].extra=cLength;currentPos+=1;}index+=1;currentSize=0;}}else if(anchorGrouping==3){// eslint-disable-line eqeqeq
		currentSize+=cLength;if(val===''||i===len-1){if(val===''){currentSize-=cLength;}while(currentPos<=i){letters[currentPos].an=currentSize;letters[currentPos].ind=index;letters[currentPos].extra=cLength;currentPos+=1;}currentSize=0;index+=1;}}else {letters[index].ind=index;letters[index].extra=0;index+=1;}}documentData.l=letters;maxLineWidth=lineWidth>maxLineWidth?lineWidth:maxLineWidth;lineWidths.push(lineWidth);if(documentData.sz){documentData.boxWidth=documentData.sz[0];documentData.justifyOffset=0;}else {documentData.boxWidth=maxLineWidth;switch(documentData.j){case 1:documentData.justifyOffset=-documentData.boxWidth;break;case 2:documentData.justifyOffset=-documentData.boxWidth/2;break;default:documentData.justifyOffset=0;}}documentData.lineWidths=lineWidths;var animators=data.a;var animatorData;var letterData;jLen=animators.length;var based;var ind;var indexes=[];for(j=0;j<jLen;j+=1){animatorData=animators[j];if(animatorData.a.sc){documentData.strokeColorAnim=true;}if(animatorData.a.sw){documentData.strokeWidthAnim=true;}if(animatorData.a.fc||animatorData.a.fh||animatorData.a.fs||animatorData.a.fb){documentData.fillColorAnim=true;}ind=0;based=animatorData.s.b;for(i=0;i<len;i+=1){letterData=letters[i];letterData.anIndexes[j]=ind;if(based==1&&letterData.val!==''||based==2&&letterData.val!==''&&letterData.val!==' '||based==3&&(letterData.n||letterData.val==' '||i==len-1)||based==4&&(letterData.n||i==len-1)){// eslint-disable-line eqeqeq
		if(animatorData.s.rn===1){indexes.push(ind);}ind+=1;}}data.a[j].s.totalChars=ind;var currentInd=-1;var newInd;if(animatorData.s.rn===1){for(i=0;i<len;i+=1){letterData=letters[i];if(currentInd!=letterData.anIndexes[j]){// eslint-disable-line eqeqeq
		currentInd=letterData.anIndexes[j];newInd=indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];}letterData.anIndexes[j]=newInd;}}}documentData.yOffset=documentData.finalLineHeight||documentData.finalSize*1.2;documentData.ls=documentData.ls||0;documentData.ascent=fontData.ascent*documentData.finalSize/100;};TextProperty.prototype.updateDocumentData=function(newData,index){index=index===undefined?this.keysIndex:index;var dData=this.copyData({},this.data.d.k[index].s);dData=this.copyData(dData,newData);this.data.d.k[index].s=dData;this.recalculate(index);this.setCurrentData(dData);this.elem.addDynamicProperty(this);};TextProperty.prototype.recalculate=function(index){var dData=this.data.d.k[index].s;dData.__complete=false;this.keysIndex=0;this._isFirstFrame=true;this.getValue(dData);};TextProperty.prototype.canResizeFont=function(_canResize){this.canResize=_canResize;this.recalculate(this.keysIndex);this.elem.addDynamicProperty(this);};TextProperty.prototype.setMinimumFontSize=function(_fontValue){this.minimumFontSize=Math.floor(_fontValue)||1;this.recalculate(this.keysIndex);this.elem.addDynamicProperty(this);};var TextSelectorProp=function(){var max=Math.max;var min=Math.min;var floor=Math.floor;function TextSelectorPropFactory(elem,data){this._currentTextLength=-1;this.k=false;this.data=data;this.elem=elem;this.comp=elem.comp;this.finalS=0;this.finalE=0;this.initDynamicPropertyContainer(elem);this.s=PropertyFactory.getProp(elem,data.s||{k:0},0,0,this);if('e'in data){this.e=PropertyFactory.getProp(elem,data.e,0,0,this);}else {this.e={v:100};}this.o=PropertyFactory.getProp(elem,data.o||{k:0},0,0,this);this.xe=PropertyFactory.getProp(elem,data.xe||{k:0},0,0,this);this.ne=PropertyFactory.getProp(elem,data.ne||{k:0},0,0,this);this.sm=PropertyFactory.getProp(elem,data.sm||{k:100},0,0,this);this.a=PropertyFactory.getProp(elem,data.a,0,0.01,this);if(!this.dynamicProperties.length){this.getValue();}}TextSelectorPropFactory.prototype={getMult:function getMult(ind){if(this._currentTextLength!==this.elem.textProperty.currentData.l.length){this.getValue();}var x1=0;var y1=0;var x2=1;var y2=1;if(this.ne.v>0){x1=this.ne.v/100.0;}else {y1=-this.ne.v/100.0;}if(this.xe.v>0){x2=1.0-this.xe.v/100.0;}else {y2=1.0+this.xe.v/100.0;}var easer=BezierFactory.getBezierEasing(x1,y1,x2,y2).get;var mult=0;var s=this.finalS;var e=this.finalE;var type=this.data.sh;if(type===2){if(e===s){mult=ind>=e?1:0;}else {mult=max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));}mult=easer(mult);}else if(type===3){if(e===s){mult=ind>=e?0:1;}else {mult=1-max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));}mult=easer(mult);}else if(type===4){if(e===s){mult=0;}else {mult=max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));if(mult<0.5){mult*=2;}else {mult=1-2*(mult-0.5);}}mult=easer(mult);}else if(type===5){if(e===s){mult=0;}else {var tot=e-s;/* ind += 0.5;
		                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */ind=min(max(0,ind+0.5-s),e-s);var x=-tot/2+ind;var a=tot/2;mult=Math.sqrt(1-x*x/(a*a));}mult=easer(mult);}else if(type===6){if(e===s){mult=0;}else {ind=min(max(0,ind+0.5-s),e-s);mult=(1+Math.cos(Math.PI+Math.PI*2*ind/(e-s)))/2;// eslint-disable-line
		}mult=easer(mult);}else {if(ind>=floor(s)){if(ind-s<0){mult=max(0,min(min(e,1)-(s-ind),1));}else {mult=max(0,min(e-ind,1));}}mult=easer(mult);}// Smoothness implementation.
		// The smoothness represents a reduced range of the original [0; 1] range.
		// if smoothness is 25%, the new range will be [0.375; 0.625]
		// Steps are:
		// - find the lower value of the new range (threshold)
		// - if multiplier is smaller than that value, floor it to 0
		// - if it is larger,
		//     - subtract the threshold
		//     - divide it by the smoothness (this will return the range to [0; 1])
		// Note: If it doesn't work on some scenarios, consider applying it before the easer.
		if(this.sm.v!==100){var smoothness=this.sm.v*0.01;if(smoothness===0){smoothness=0.00000001;}var threshold=0.5-smoothness*0.5;if(mult<threshold){mult=0;}else {mult=(mult-threshold)/smoothness;if(mult>1){mult=1;}}}return mult*this.a.v;},getValue:function getValue(newCharsFlag){this.iterateDynamicProperties();this._mdf=newCharsFlag||this._mdf;this._currentTextLength=this.elem.textProperty.currentData.l.length||0;if(newCharsFlag&&this.data.r===2){this.e.v=this._currentTextLength;}var divisor=this.data.r===2?1:100/this.data.totalChars;var o=this.o.v/divisor;var s=this.s.v/divisor+o;var e=this.e.v/divisor+o;if(s>e){var _s=s;s=e;e=_s;}this.finalS=s;this.finalE=e;}};extendPrototype([DynamicPropertyContainer],TextSelectorPropFactory);function getTextSelectorProp(elem,data,arr){return new TextSelectorPropFactory(elem,data);}return {getTextSelectorProp:getTextSelectorProp};}();function TextAnimatorDataProperty(elem,animatorProps,container){var defaultData={propType:false};var getProp=PropertyFactory.getProp;var textAnimatorAnimatables=animatorProps.a;this.a={r:textAnimatorAnimatables.r?getProp(elem,textAnimatorAnimatables.r,0,degToRads,container):defaultData,rx:textAnimatorAnimatables.rx?getProp(elem,textAnimatorAnimatables.rx,0,degToRads,container):defaultData,ry:textAnimatorAnimatables.ry?getProp(elem,textAnimatorAnimatables.ry,0,degToRads,container):defaultData,sk:textAnimatorAnimatables.sk?getProp(elem,textAnimatorAnimatables.sk,0,degToRads,container):defaultData,sa:textAnimatorAnimatables.sa?getProp(elem,textAnimatorAnimatables.sa,0,degToRads,container):defaultData,s:textAnimatorAnimatables.s?getProp(elem,textAnimatorAnimatables.s,1,0.01,container):defaultData,a:textAnimatorAnimatables.a?getProp(elem,textAnimatorAnimatables.a,1,0,container):defaultData,o:textAnimatorAnimatables.o?getProp(elem,textAnimatorAnimatables.o,0,0.01,container):defaultData,p:textAnimatorAnimatables.p?getProp(elem,textAnimatorAnimatables.p,1,0,container):defaultData,sw:textAnimatorAnimatables.sw?getProp(elem,textAnimatorAnimatables.sw,0,0,container):defaultData,sc:textAnimatorAnimatables.sc?getProp(elem,textAnimatorAnimatables.sc,1,0,container):defaultData,fc:textAnimatorAnimatables.fc?getProp(elem,textAnimatorAnimatables.fc,1,0,container):defaultData,fh:textAnimatorAnimatables.fh?getProp(elem,textAnimatorAnimatables.fh,0,0,container):defaultData,fs:textAnimatorAnimatables.fs?getProp(elem,textAnimatorAnimatables.fs,0,0.01,container):defaultData,fb:textAnimatorAnimatables.fb?getProp(elem,textAnimatorAnimatables.fb,0,0.01,container):defaultData,t:textAnimatorAnimatables.t?getProp(elem,textAnimatorAnimatables.t,0,0,container):defaultData};this.s=TextSelectorProp.getTextSelectorProp(elem,animatorProps.s,container);this.s.t=animatorProps.s.t;}function TextAnimatorProperty(textData,renderType,elem){this._isFirstFrame=true;this._hasMaskedPath=false;this._frameId=-1;this._textData=textData;this._renderType=renderType;this._elem=elem;this._animatorsData=createSizedArray(this._textData.a.length);this._pathData={};this._moreOptions={alignment:{}};this.renderedLetters=[];this.lettersChangedFlag=false;this.initDynamicPropertyContainer(elem);}TextAnimatorProperty.prototype.searchProperties=function(){var i;var len=this._textData.a.length;var animatorProps;var getProp=PropertyFactory.getProp;for(i=0;i<len;i+=1){animatorProps=this._textData.a[i];this._animatorsData[i]=new TextAnimatorDataProperty(this._elem,animatorProps,this);}if(this._textData.p&&'m'in this._textData.p){this._pathData={a:getProp(this._elem,this._textData.p.a,0,0,this),f:getProp(this._elem,this._textData.p.f,0,0,this),l:getProp(this._elem,this._textData.p.l,0,0,this),r:getProp(this._elem,this._textData.p.r,0,0,this),p:getProp(this._elem,this._textData.p.p,0,0,this),m:this._elem.maskManager.getMaskProperty(this._textData.p.m)};this._hasMaskedPath=true;}else {this._hasMaskedPath=false;}this._moreOptions.alignment=getProp(this._elem,this._textData.m.a,1,0,this);};TextAnimatorProperty.prototype.getMeasures=function(documentData,lettersChangedFlag){this.lettersChangedFlag=lettersChangedFlag;if(!this._mdf&&!this._isFirstFrame&&!lettersChangedFlag&&(!this._hasMaskedPath||!this._pathData.m._mdf)){return;}this._isFirstFrame=false;var alignment=this._moreOptions.alignment.v;var animators=this._animatorsData;var textData=this._textData;var matrixHelper=this.mHelper;var renderType=this._renderType;var renderedLettersCount=this.renderedLetters.length;var xPos;var yPos;var i;var len;var letters=documentData.l;var pathInfo;var currentLength;var currentPoint;var segmentLength;var flag;var pointInd;var segmentInd;var prevPoint;var points;var segments;var partialLength;var totalLength;var perc;var tanAngle;var mask;if(this._hasMaskedPath){mask=this._pathData.m;if(!this._pathData.n||this._pathData._mdf){var paths=mask.v;if(this._pathData.r.v){paths=paths.reverse();}// TODO: release bezier data cached from previous pathInfo: this._pathData.pi
		pathInfo={tLength:0,segments:[]};len=paths._length-1;var bezierData;totalLength=0;for(i=0;i<len;i+=1){bezierData=bez.buildBezierData(paths.v[i],paths.v[i+1],[paths.o[i][0]-paths.v[i][0],paths.o[i][1]-paths.v[i][1]],[paths.i[i+1][0]-paths.v[i+1][0],paths.i[i+1][1]-paths.v[i+1][1]]);pathInfo.tLength+=bezierData.segmentLength;pathInfo.segments.push(bezierData);totalLength+=bezierData.segmentLength;}i=len;if(mask.v.c){bezierData=bez.buildBezierData(paths.v[i],paths.v[0],[paths.o[i][0]-paths.v[i][0],paths.o[i][1]-paths.v[i][1]],[paths.i[0][0]-paths.v[0][0],paths.i[0][1]-paths.v[0][1]]);pathInfo.tLength+=bezierData.segmentLength;pathInfo.segments.push(bezierData);totalLength+=bezierData.segmentLength;}this._pathData.pi=pathInfo;}pathInfo=this._pathData.pi;currentLength=this._pathData.f.v;segmentInd=0;pointInd=1;segmentLength=0;flag=true;segments=pathInfo.segments;if(currentLength<0&&mask.v.c){if(pathInfo.tLength<Math.abs(currentLength)){currentLength=-Math.abs(currentLength)%pathInfo.tLength;}segmentInd=segments.length-1;points=segments[segmentInd].points;pointInd=points.length-1;while(currentLength<0){currentLength+=points[pointInd].partialLength;pointInd-=1;if(pointInd<0){segmentInd-=1;points=segments[segmentInd].points;pointInd=points.length-1;}}}points=segments[segmentInd].points;prevPoint=points[pointInd-1];currentPoint=points[pointInd];partialLength=currentPoint.partialLength;}len=letters.length;xPos=0;yPos=0;var yOff=documentData.finalSize*1.2*0.714;var firstLine=true;var animatorProps;var animatorSelector;var j;var jLen;var letterValue;jLen=animators.length;var mult;var ind=-1;var offf;var xPathPos;var yPathPos;var initPathPos=currentLength;var initSegmentInd=segmentInd;var initPointInd=pointInd;var currentLine=-1;var elemOpacity;var sc;var sw;var fc;var k;var letterSw;var letterSc;var letterFc;var letterM='';var letterP=this.defaultPropsArray;var letterO;//
		if(documentData.j===2||documentData.j===1){var animatorJustifyOffset=0;var animatorFirstCharOffset=0;var justifyOffsetMult=documentData.j===2?-0.5:-1;var lastIndex=0;var isNewLine=true;for(i=0;i<len;i+=1){if(letters[i].n){if(animatorJustifyOffset){animatorJustifyOffset+=animatorFirstCharOffset;}while(lastIndex<i){letters[lastIndex].animatorJustifyOffset=animatorJustifyOffset;lastIndex+=1;}animatorJustifyOffset=0;isNewLine=true;}else {for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.t.propType){if(isNewLine&&documentData.j===2){animatorFirstCharOffset+=animatorProps.t.v*justifyOffsetMult;}animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorJustifyOffset+=animatorProps.t.v*mult[0]*justifyOffsetMult;}else {animatorJustifyOffset+=animatorProps.t.v*mult*justifyOffsetMult;}}}isNewLine=false;}}if(animatorJustifyOffset){animatorJustifyOffset+=animatorFirstCharOffset;}while(lastIndex<i){letters[lastIndex].animatorJustifyOffset=animatorJustifyOffset;lastIndex+=1;}}//
		for(i=0;i<len;i+=1){matrixHelper.reset();elemOpacity=1;if(letters[i].n){xPos=0;yPos+=documentData.yOffset;yPos+=firstLine?1:0;currentLength=initPathPos;firstLine=false;if(this._hasMaskedPath){segmentInd=initSegmentInd;pointInd=initPointInd;points=segments[segmentInd].points;prevPoint=points[pointInd-1];currentPoint=points[pointInd];partialLength=currentPoint.partialLength;segmentLength=0;}letterM='';letterFc='';letterSw='';letterO='';letterP=this.defaultPropsArray;}else {if(this._hasMaskedPath){if(currentLine!==letters[i].line){switch(documentData.j){case 1:currentLength+=totalLength-documentData.lineWidths[letters[i].line];break;case 2:currentLength+=(totalLength-documentData.lineWidths[letters[i].line])/2;break;}currentLine=letters[i].line;}if(ind!==letters[i].ind){if(letters[ind]){currentLength+=letters[ind].extra;}currentLength+=letters[i].an/2;ind=letters[i].ind;}currentLength+=alignment[0]*letters[i].an*0.005;var animatorOffset=0;for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.p.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorOffset+=animatorProps.p.v[0]*mult[0];}else {animatorOffset+=animatorProps.p.v[0]*mult;}}if(animatorProps.a.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorOffset+=animatorProps.a.v[0]*mult[0];}else {animatorOffset+=animatorProps.a.v[0]*mult;}}}flag=true;// Force alignment only works with a single line for now
		if(this._pathData.a.v){currentLength=letters[0].an*0.5+(totalLength-this._pathData.f.v-letters[0].an*0.5-letters[letters.length-1].an*0.5)*ind/(len-1);currentLength+=this._pathData.f.v;}while(flag){if(segmentLength+partialLength>=currentLength+animatorOffset||!points){perc=(currentLength+animatorOffset-segmentLength)/currentPoint.partialLength;xPathPos=prevPoint.point[0]+(currentPoint.point[0]-prevPoint.point[0])*perc;yPathPos=prevPoint.point[1]+(currentPoint.point[1]-prevPoint.point[1])*perc;matrixHelper.translate(-alignment[0]*letters[i].an*0.005,-(alignment[1]*yOff)*0.01);flag=false;}else if(points){segmentLength+=currentPoint.partialLength;pointInd+=1;if(pointInd>=points.length){pointInd=0;segmentInd+=1;if(!segments[segmentInd]){if(mask.v.c){pointInd=0;segmentInd=0;points=segments[segmentInd].points;}else {segmentLength-=currentPoint.partialLength;points=null;}}else {points=segments[segmentInd].points;}}if(points){prevPoint=currentPoint;currentPoint=points[pointInd];partialLength=currentPoint.partialLength;}}}offf=letters[i].an/2-letters[i].add;matrixHelper.translate(-offf,0,0);}else {offf=letters[i].an/2-letters[i].add;matrixHelper.translate(-offf,0,0);// Grouping alignment
		matrixHelper.translate(-alignment[0]*letters[i].an*0.005,-alignment[1]*yOff*0.01,0);}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.t.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);// This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
		if(xPos!==0||documentData.j!==0){if(this._hasMaskedPath){if(mult.length){currentLength+=animatorProps.t.v*mult[0];}else {currentLength+=animatorProps.t.v*mult;}}else if(mult.length){xPos+=animatorProps.t.v*mult[0];}else {xPos+=animatorProps.t.v*mult;}}}}if(documentData.strokeWidthAnim){sw=documentData.sw||0;}if(documentData.strokeColorAnim){if(documentData.sc){sc=[documentData.sc[0],documentData.sc[1],documentData.sc[2]];}else {sc=[0,0,0];}}if(documentData.fillColorAnim&&documentData.fc){fc=[documentData.fc[0],documentData.fc[1],documentData.fc[2]];}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.a.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){matrixHelper.translate(-animatorProps.a.v[0]*mult[0],-animatorProps.a.v[1]*mult[1],animatorProps.a.v[2]*mult[2]);}else {matrixHelper.translate(-animatorProps.a.v[0]*mult,-animatorProps.a.v[1]*mult,animatorProps.a.v[2]*mult);}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.s.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){matrixHelper.scale(1+(animatorProps.s.v[0]-1)*mult[0],1+(animatorProps.s.v[1]-1)*mult[1],1);}else {matrixHelper.scale(1+(animatorProps.s.v[0]-1)*mult,1+(animatorProps.s.v[1]-1)*mult,1);}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(animatorProps.sk.propType){if(mult.length){matrixHelper.skewFromAxis(-animatorProps.sk.v*mult[0],animatorProps.sa.v*mult[1]);}else {matrixHelper.skewFromAxis(-animatorProps.sk.v*mult,animatorProps.sa.v*mult);}}if(animatorProps.r.propType){if(mult.length){matrixHelper.rotateZ(-animatorProps.r.v*mult[2]);}else {matrixHelper.rotateZ(-animatorProps.r.v*mult);}}if(animatorProps.ry.propType){if(mult.length){matrixHelper.rotateY(animatorProps.ry.v*mult[1]);}else {matrixHelper.rotateY(animatorProps.ry.v*mult);}}if(animatorProps.rx.propType){if(mult.length){matrixHelper.rotateX(animatorProps.rx.v*mult[0]);}else {matrixHelper.rotateX(animatorProps.rx.v*mult);}}if(animatorProps.o.propType){if(mult.length){elemOpacity+=(animatorProps.o.v*mult[0]-elemOpacity)*mult[0];}else {elemOpacity+=(animatorProps.o.v*mult-elemOpacity)*mult;}}if(documentData.strokeWidthAnim&&animatorProps.sw.propType){if(mult.length){sw+=animatorProps.sw.v*mult[0];}else {sw+=animatorProps.sw.v*mult;}}if(documentData.strokeColorAnim&&animatorProps.sc.propType){for(k=0;k<3;k+=1){if(mult.length){sc[k]+=(animatorProps.sc.v[k]-sc[k])*mult[0];}else {sc[k]+=(animatorProps.sc.v[k]-sc[k])*mult;}}}if(documentData.fillColorAnim&&documentData.fc){if(animatorProps.fc.propType){for(k=0;k<3;k+=1){if(mult.length){fc[k]+=(animatorProps.fc.v[k]-fc[k])*mult[0];}else {fc[k]+=(animatorProps.fc.v[k]-fc[k])*mult;}}}if(animatorProps.fh.propType){if(mult.length){fc=addHueToRGB(fc,animatorProps.fh.v*mult[0]);}else {fc=addHueToRGB(fc,animatorProps.fh.v*mult);}}if(animatorProps.fs.propType){if(mult.length){fc=addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);}else {fc=addSaturationToRGB(fc,animatorProps.fs.v*mult);}}if(animatorProps.fb.propType){if(mult.length){fc=addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);}else {fc=addBrightnessToRGB(fc,animatorProps.fb.v*mult);}}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.p.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(this._hasMaskedPath){if(mult.length){matrixHelper.translate(0,animatorProps.p.v[1]*mult[0],-animatorProps.p.v[2]*mult[1]);}else {matrixHelper.translate(0,animatorProps.p.v[1]*mult,-animatorProps.p.v[2]*mult);}}else if(mult.length){matrixHelper.translate(animatorProps.p.v[0]*mult[0],animatorProps.p.v[1]*mult[1],-animatorProps.p.v[2]*mult[2]);}else {matrixHelper.translate(animatorProps.p.v[0]*mult,animatorProps.p.v[1]*mult,-animatorProps.p.v[2]*mult);}}}if(documentData.strokeWidthAnim){letterSw=sw<0?0:sw;}if(documentData.strokeColorAnim){letterSc='rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';}if(documentData.fillColorAnim&&documentData.fc){letterFc='rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';}if(this._hasMaskedPath){matrixHelper.translate(0,-documentData.ls);matrixHelper.translate(0,alignment[1]*yOff*0.01+yPos,0);if(this._pathData.p.v){tanAngle=(currentPoint.point[1]-prevPoint.point[1])/(currentPoint.point[0]-prevPoint.point[0]);var rot=Math.atan(tanAngle)*180/Math.PI;if(currentPoint.point[0]<prevPoint.point[0]){rot+=180;}matrixHelper.rotate(-rot*Math.PI/180);}matrixHelper.translate(xPathPos,yPathPos,0);currentLength-=alignment[0]*letters[i].an*0.005;if(letters[i+1]&&ind!==letters[i+1].ind){currentLength+=letters[i].an/2;currentLength+=documentData.tr*0.001*documentData.finalSize;}}else {matrixHelper.translate(xPos,yPos,0);if(documentData.ps){// matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
		matrixHelper.translate(documentData.ps[0],documentData.ps[1]+documentData.ascent,0);}switch(documentData.j){case 1:matrixHelper.translate(letters[i].animatorJustifyOffset+documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[letters[i].line]),0,0);break;case 2:matrixHelper.translate(letters[i].animatorJustifyOffset+documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[letters[i].line])/2,0,0);break;}matrixHelper.translate(0,-documentData.ls);matrixHelper.translate(offf,0,0);matrixHelper.translate(alignment[0]*letters[i].an*0.005,alignment[1]*yOff*0.01,0);xPos+=letters[i].l+documentData.tr*0.001*documentData.finalSize;}if(renderType==='html'){letterM=matrixHelper.toCSS();}else if(renderType==='svg'){letterM=matrixHelper.to2dCSS();}else {letterP=[matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];}letterO=elemOpacity;}if(renderedLettersCount<=i){letterValue=new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);this.renderedLetters.push(letterValue);renderedLettersCount+=1;this.lettersChangedFlag=true;}else {letterValue=this.renderedLetters[i];this.lettersChangedFlag=letterValue.update(letterO,letterSw,letterSc,letterFc,letterM,letterP)||this.lettersChangedFlag;}}};TextAnimatorProperty.prototype.getValue=function(){if(this._elem.globalData.frameId===this._frameId){return;}this._frameId=this._elem.globalData.frameId;this.iterateDynamicProperties();};TextAnimatorProperty.prototype.mHelper=new Matrix();TextAnimatorProperty.prototype.defaultPropsArray=[];extendPrototype([DynamicPropertyContainer],TextAnimatorProperty);function ITextElement(){}ITextElement.prototype.initElement=function(data,globalData,comp){this.lettersChangedFlag=true;this.initFrame();this.initBaseData(data,globalData,comp);this.textProperty=new TextProperty(this,data.t,this.dynamicProperties);this.textAnimator=new TextAnimatorProperty(data.t,this.renderType,this);this.initTransform(data,globalData,comp);this.initHierarchy();this.initRenderable();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();this.createContent();this.hide();this.textAnimator.searchProperties(this.dynamicProperties);};ITextElement.prototype.prepareFrame=function(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);};ITextElement.prototype.createPathShape=function(matrixHelper,shapes){var j;var jLen=shapes.length;var pathNodes;var shapeStr='';for(j=0;j<jLen;j+=1){if(shapes[j].ty==='sh'){pathNodes=shapes[j].ks.k;shapeStr+=buildShapeString(pathNodes,pathNodes.i.length,true,matrixHelper);}}return shapeStr;};ITextElement.prototype.updateDocumentData=function(newData,index){this.textProperty.updateDocumentData(newData,index);};ITextElement.prototype.canResizeFont=function(_canResize){this.textProperty.canResizeFont(_canResize);};ITextElement.prototype.setMinimumFontSize=function(_fontSize){this.textProperty.setMinimumFontSize(_fontSize);};ITextElement.prototype.applyTextPropertiesToMatrix=function(documentData,matrixHelper,lineNumber,xPos,yPos){if(documentData.ps){matrixHelper.translate(documentData.ps[0],documentData.ps[1]+documentData.ascent,0);}matrixHelper.translate(0,-documentData.ls,0);switch(documentData.j){case 1:matrixHelper.translate(documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[lineNumber]),0,0);break;case 2:matrixHelper.translate(documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[lineNumber])/2,0,0);break;}matrixHelper.translate(xPos,yPos,0);};ITextElement.prototype.buildColor=function(colorData){return 'rgb('+Math.round(colorData[0]*255)+','+Math.round(colorData[1]*255)+','+Math.round(colorData[2]*255)+')';};ITextElement.prototype.emptyProp=new LetterProps();ITextElement.prototype.destroy=function(){};ITextElement.prototype.validateText=function(){if(this.textProperty._mdf||this.textProperty._isFirstFrame){this.buildNewText();this.textProperty._isFirstFrame=false;this.textProperty._mdf=false;}};var emptyShapeData={shapes:[]};function SVGTextLottieElement(data,globalData,comp){this.textSpans=[];this.renderType='svg';this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],SVGTextLottieElement);SVGTextLottieElement.prototype.createContent=function(){if(this.data.singleShape&&!this.globalData.fontManager.chars){this.textContainer=createNS('text');}};SVGTextLottieElement.prototype.buildTextContents=function(textArray){var i=0;var len=textArray.length;var textContents=[];var currentTextContent='';while(i<len){if(textArray[i]===String.fromCharCode(13)||textArray[i]===String.fromCharCode(3)){textContents.push(currentTextContent);currentTextContent='';}else {currentTextContent+=textArray[i];}i+=1;}textContents.push(currentTextContent);return textContents;};SVGTextLottieElement.prototype.buildShapeData=function(data,scale){// data should probably be cloned to apply scale separately to each instance of a text on different layers
		// but since text internal content gets only rendered once and then it's never rerendered,
		// it's probably safe not to clone data and reuse always the same instance even if the object is mutated.
		// Avoiding cloning is preferred since cloning each character shape data is expensive
		if(data.shapes&&data.shapes.length){var shape=data.shapes[0];if(shape.it){var shapeItem=shape.it[shape.it.length-1];if(shapeItem.s){shapeItem.s.k[0]=scale;shapeItem.s.k[1]=scale;}}}return data;};SVGTextLottieElement.prototype.buildNewText=function(){this.addDynamicProperty(this);var i;var len;var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData?documentData.l.length:0);if(documentData.fc){this.layerElement.setAttribute('fill',this.buildColor(documentData.fc));}else {this.layerElement.setAttribute('fill','rgba(0,0,0,0)');}if(documentData.sc){this.layerElement.setAttribute('stroke',this.buildColor(documentData.sc));this.layerElement.setAttribute('stroke-width',documentData.sw);}this.layerElement.setAttribute('font-size',documentData.finalSize);var fontData=this.globalData.fontManager.getFontByName(documentData.f);if(fontData.fClass){this.layerElement.setAttribute('class',fontData.fClass);}else {this.layerElement.setAttribute('font-family',fontData.fFamily);var fWeight=documentData.fWeight;var fStyle=documentData.fStyle;this.layerElement.setAttribute('font-style',fStyle);this.layerElement.setAttribute('font-weight',fWeight);}this.layerElement.setAttribute('aria-label',documentData.t);var letters=documentData.l||[];var usesGlyphs=!!this.globalData.fontManager.chars;len=letters.length;var tSpan;var matrixHelper=this.mHelper;var shapeStr='';var singleShape=this.data.singleShape;var xPos=0;var yPos=0;var firstLine=true;var trackingOffset=documentData.tr*0.001*documentData.finalSize;if(singleShape&&!usesGlyphs&&!documentData.sz){var tElement=this.textContainer;var justify='start';switch(documentData.j){case 1:justify='end';break;case 2:justify='middle';break;default:justify='start';break;}tElement.setAttribute('text-anchor',justify);tElement.setAttribute('letter-spacing',trackingOffset);var textContent=this.buildTextContents(documentData.finalText);len=textContent.length;yPos=documentData.ps?documentData.ps[1]+documentData.ascent:0;for(i=0;i<len;i+=1){tSpan=this.textSpans[i].span||createNS('tspan');tSpan.textContent=textContent[i];tSpan.setAttribute('x',0);tSpan.setAttribute('y',yPos);tSpan.style.display='inherit';tElement.appendChild(tSpan);if(!this.textSpans[i]){this.textSpans[i]={span:null,glyph:null};}this.textSpans[i].span=tSpan;yPos+=documentData.finalLineHeight;}this.layerElement.appendChild(tElement);}else {var cachedSpansLength=this.textSpans.length;var charData;for(i=0;i<len;i+=1){if(!this.textSpans[i]){this.textSpans[i]={span:null,childSpan:null,glyph:null};}if(!usesGlyphs||!singleShape||i===0){tSpan=cachedSpansLength>i?this.textSpans[i].span:createNS(usesGlyphs?'g':'text');if(cachedSpansLength<=i){tSpan.setAttribute('stroke-linecap','butt');tSpan.setAttribute('stroke-linejoin','round');tSpan.setAttribute('stroke-miterlimit','4');this.textSpans[i].span=tSpan;if(usesGlyphs){var childSpan=createNS('g');tSpan.appendChild(childSpan);this.textSpans[i].childSpan=childSpan;}this.textSpans[i].span=tSpan;this.layerElement.appendChild(tSpan);}tSpan.style.display='inherit';}matrixHelper.reset();if(singleShape){if(letters[i].n){xPos=-trackingOffset;yPos+=documentData.yOffset;yPos+=firstLine?1:0;firstLine=false;}this.applyTextPropertiesToMatrix(documentData,matrixHelper,letters[i].line,xPos,yPos);xPos+=letters[i].l||0;// xPos += letters[i].val === ' ' ? 0 : trackingOffset;
		xPos+=trackingOffset;}if(usesGlyphs){charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);var glyphElement;// t === 1 means the character has been replaced with an animated shaped
		if(charData.t===1){glyphElement=new SVGCompElement(charData.data,this.globalData,this);}else {var data=emptyShapeData;if(charData.data&&charData.data.shapes){data=this.buildShapeData(charData.data,documentData.finalSize);}glyphElement=new SVGShapeElement(data,this.globalData,this);}if(this.textSpans[i].glyph){var glyph=this.textSpans[i].glyph;this.textSpans[i].childSpan.removeChild(glyph.layerElement);glyph.destroy();}this.textSpans[i].glyph=glyphElement;glyphElement._debug=true;glyphElement.prepareFrame(0);glyphElement.renderFrame();this.textSpans[i].childSpan.appendChild(glyphElement.layerElement);// when using animated shapes, the layer will be scaled instead of replacing the internal scale
		// this might have issues with strokes and might need a different solution
		if(charData.t===1){this.textSpans[i].childSpan.setAttribute('transform','scale('+documentData.finalSize/100+','+documentData.finalSize/100+')');}}else {if(singleShape){tSpan.setAttribute('transform','translate('+matrixHelper.props[12]+','+matrixHelper.props[13]+')');}tSpan.textContent=letters[i].val;tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace','xml:space','preserve');}//
		}if(singleShape&&tSpan){tSpan.setAttribute('d',shapeStr);}}while(i<this.textSpans.length){this.textSpans[i].span.style.display='none';i+=1;}this._sizeChanged=true;};SVGTextLottieElement.prototype.sourceRectAtTime=function(){this.prepareFrame(this.comp.renderedFrame-this.data.st);this.renderInnerContent();if(this._sizeChanged){this._sizeChanged=false;var textBox=this.layerElement.getBBox();this.bbox={top:textBox.y,left:textBox.x,width:textBox.width,height:textBox.height};}return this.bbox;};SVGTextLottieElement.prototype.getValue=function(){var i;var len=this.textSpans.length;var glyphElement;this.renderedFrame=this.comp.renderedFrame;for(i=0;i<len;i+=1){glyphElement=this.textSpans[i].glyph;if(glyphElement){glyphElement.prepareFrame(this.comp.renderedFrame-this.data.st);if(glyphElement._mdf){this._mdf=true;}}}};SVGTextLottieElement.prototype.renderInnerContent=function(){this.validateText();if(!this.data.singleShape||this._mdf){this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);if(this.lettersChangedFlag||this.textAnimator.lettersChangedFlag){this._sizeChanged=true;var i;var len;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var textSpan;var glyphElement;for(i=0;i<len;i+=1){if(!letters[i].n){renderedLetter=renderedLetters[i];textSpan=this.textSpans[i].span;glyphElement=this.textSpans[i].glyph;if(glyphElement){glyphElement.renderFrame();}if(renderedLetter._mdf.m){textSpan.setAttribute('transform',renderedLetter.m);}if(renderedLetter._mdf.o){textSpan.setAttribute('opacity',renderedLetter.o);}if(renderedLetter._mdf.sw){textSpan.setAttribute('stroke-width',renderedLetter.sw);}if(renderedLetter._mdf.sc){textSpan.setAttribute('stroke',renderedLetter.sc);}if(renderedLetter._mdf.fc){textSpan.setAttribute('fill',renderedLetter.fc);}}}}}};function ISolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([IImageElement],ISolidElement);ISolidElement.prototype.createContent=function(){var rect=createNS('rect');/// /rect.style.width = this.data.sw;
		/// /rect.style.height = this.data.sh;
		/// /rect.style.fill = this.data.sc;
		rect.setAttribute('width',this.data.sw);rect.setAttribute('height',this.data.sh);rect.setAttribute('fill',this.data.sc);this.layerElement.appendChild(rect);};function NullElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initFrame();this.initTransform(data,globalData,comp);this.initHierarchy();}NullElement.prototype.prepareFrame=function(num){this.prepareProperties(num,true);};NullElement.prototype.renderFrame=function(){};NullElement.prototype.getBaseElement=function(){return null;};NullElement.prototype.destroy=function(){};NullElement.prototype.sourceRectAtTime=function(){};NullElement.prototype.hide=function(){};extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement],NullElement);function SVGRendererBase(){}extendPrototype([BaseRenderer],SVGRendererBase);SVGRendererBase.prototype.createNull=function(data){return new NullElement(data,this.globalData,this);};SVGRendererBase.prototype.createShape=function(data){return new SVGShapeElement(data,this.globalData,this);};SVGRendererBase.prototype.createText=function(data){return new SVGTextLottieElement(data,this.globalData,this);};SVGRendererBase.prototype.createImage=function(data){return new IImageElement(data,this.globalData,this);};SVGRendererBase.prototype.createSolid=function(data){return new ISolidElement(data,this.globalData,this);};SVGRendererBase.prototype.configAnimation=function(animData){this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');this.svgElement.setAttribute('xmlns:xlink','http://www.w3.org/1999/xlink');if(this.renderConfig.viewBoxSize){this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);}else {this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);}if(!this.renderConfig.viewBoxOnly){this.svgElement.setAttribute('width',animData.w);this.svgElement.setAttribute('height',animData.h);this.svgElement.style.width='100%';this.svgElement.style.height='100%';this.svgElement.style.transform='translate3d(0,0,0)';this.svgElement.style.contentVisibility=this.renderConfig.contentVisibility;}if(this.renderConfig.width){this.svgElement.setAttribute('width',this.renderConfig.width);}if(this.renderConfig.height){this.svgElement.setAttribute('height',this.renderConfig.height);}if(this.renderConfig.className){this.svgElement.setAttribute('class',this.renderConfig.className);}if(this.renderConfig.id){this.svgElement.setAttribute('id',this.renderConfig.id);}if(this.renderConfig.focusable!==undefined){this.svgElement.setAttribute('focusable',this.renderConfig.focusable);}this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);// this.layerElement.style.transform = 'translate3d(0,0,0)';
		// this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
		this.animationItem.wrapper.appendChild(this.svgElement);// Mask animation
		var defs=this.globalData.defs;this.setupGlobalData(animData,defs);this.globalData.progressiveLoad=this.renderConfig.progressiveLoad;this.data=animData;var maskElement=createNS('clipPath');var rect=createNS('rect');rect.setAttribute('width',animData.w);rect.setAttribute('height',animData.h);rect.setAttribute('x',0);rect.setAttribute('y',0);var maskId=createElementID();maskElement.setAttribute('id',maskId);maskElement.appendChild(rect);this.layerElement.setAttribute('clip-path','url('+getLocationHref()+'#'+maskId+')');defs.appendChild(maskElement);this.layers=animData.layers;this.elements=createSizedArray(animData.layers.length);};SVGRendererBase.prototype.destroy=function(){if(this.animationItem.wrapper){this.animationItem.wrapper.innerText='';}this.layerElement=null;this.globalData.defs=null;var i;var len=this.layers?this.layers.length:0;for(i=0;i<len;i+=1){if(this.elements[i]&&this.elements[i].destroy){this.elements[i].destroy();}}this.elements.length=0;this.destroyed=true;this.animationItem=null;};SVGRendererBase.prototype.updateContainerSize=function(){};SVGRendererBase.prototype.findIndexByInd=function(ind){var i=0;var len=this.layers.length;for(i=0;i<len;i+=1){if(this.layers[i].ind===ind){return i;}}return -1;};SVGRendererBase.prototype.buildItem=function(pos){var elements=this.elements;if(elements[pos]||this.layers[pos].ty===99){return;}elements[pos]=true;var element=this.createItem(this.layers[pos]);elements[pos]=element;if(getExpressionsPlugin()){if(this.layers[pos].ty===0){this.globalData.projectInterface.registerComposition(element);}element.initExpressions();}this.appendElementInPos(element,pos);if(this.layers[pos].tt){var elementIndex='tp'in this.layers[pos]?this.findIndexByInd(this.layers[pos].tp):pos-1;if(elementIndex===-1){return;}if(!this.elements[elementIndex]||this.elements[elementIndex]===true){this.buildItem(elementIndex);this.addPendingElement(element);}else {var matteElement=elements[elementIndex];var matteMask=matteElement.getMatte(this.layers[pos].tt);element.setMatte(matteMask);}}};SVGRendererBase.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();if(element.data.tt){var i=0;var len=this.elements.length;while(i<len){if(this.elements[i]===element){var elementIndex='tp'in element.data?this.findIndexByInd(element.data.tp):i-1;var matteElement=this.elements[elementIndex];var matteMask=matteElement.getMatte(this.layers[i].tt);element.setMatte(matteMask);break;}i+=1;}}}};SVGRendererBase.prototype.renderFrame=function(num){if(this.renderedFrame===num||this.destroyed){return;}if(num===null){num=this.renderedFrame;}else {this.renderedFrame=num;}// console.log('-------');
		// console.log('FRAME ',num);
		this.globalData.frameNum=num;this.globalData.frameId+=1;this.globalData.projectInterface.currentFrame=num;this.globalData._mdf=false;var i;var len=this.layers.length;if(!this.completeLayers){this.checkLayers(num);}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(num-this.layers[i].st);}}if(this.globalData._mdf){for(i=0;i<len;i+=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}}};SVGRendererBase.prototype.appendElementInPos=function(element,pos){var newElement=element.getBaseElement();if(!newElement){return;}var i=0;var nextElement;while(i<pos){if(this.elements[i]&&this.elements[i]!==true&&this.elements[i].getBaseElement()){nextElement=this.elements[i].getBaseElement();}i+=1;}if(nextElement){this.layerElement.insertBefore(newElement,nextElement);}else {this.layerElement.appendChild(newElement);}};SVGRendererBase.prototype.hide=function(){this.layerElement.style.display='none';};SVGRendererBase.prototype.show=function(){this.layerElement.style.display='block';};function ICompElement(){}extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement,RenderableDOMElement],ICompElement);ICompElement.prototype.initElement=function(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initTransform(data,globalData,comp);this.initRenderable();this.initHierarchy();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();if(this.data.xt||!globalData.progressiveLoad){this.buildAllItems();}this.hide();};/* ICompElement.prototype.hide = function(){
		      if(!this.hidden){
		          this.hideElement();
		          var i,len = this.elements.length;
		          for( i = 0; i < len; i+=1 ){
		              if(this.elements[i]){
		                  this.elements[i].hide();
		              }
		          }
		      }
		  }; */ICompElement.prototype.prepareFrame=function(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);if(!this.isInRange&&!this.data.xt){return;}if(!this.tm._placeholder){var timeRemapped=this.tm.v;if(timeRemapped===this.data.op){timeRemapped=this.data.op-1;}this.renderedFrame=timeRemapped;}else {this.renderedFrame=num/this.data.sr;}var i;var len=this.elements.length;if(!this.completeLayers){this.checkLayers(this.renderedFrame);}// This iteration needs to be backwards because of how expressions connect between each other
		for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(this.renderedFrame-this.layers[i].st);if(this.elements[i]._mdf){this._mdf=true;}}}};ICompElement.prototype.renderInnerContent=function(){var i;var len=this.layers.length;for(i=0;i<len;i+=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}};ICompElement.prototype.setElements=function(elems){this.elements=elems;};ICompElement.prototype.getElements=function(){return this.elements;};ICompElement.prototype.destroyElements=function(){var i;var len=this.layers.length;for(i=0;i<len;i+=1){if(this.elements[i]){this.elements[i].destroy();}}};ICompElement.prototype.destroy=function(){this.destroyElements();this.destroyBaseElement();};function SVGCompElement(data,globalData,comp){this.layers=data.layers;this.supports3d=true;this.completeLayers=false;this.pendingElements=[];this.elements=this.layers?createSizedArray(this.layers.length):[];this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([SVGRendererBase,ICompElement,SVGBaseElement],SVGCompElement);SVGCompElement.prototype.createComp=function(data){return new SVGCompElement(data,this.globalData,this);};function SVGRenderer(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.svgElement=createNS('svg');var ariaLabel='';if(config&&config.title){var titleElement=createNS('title');var titleId=createElementID();titleElement.setAttribute('id',titleId);titleElement.textContent=config.title;this.svgElement.appendChild(titleElement);ariaLabel+=titleId;}if(config&&config.description){var descElement=createNS('desc');var descId=createElementID();descElement.setAttribute('id',descId);descElement.textContent=config.description;this.svgElement.appendChild(descElement);ariaLabel+=' '+descId;}if(ariaLabel){this.svgElement.setAttribute('aria-labelledby',ariaLabel);}var defs=createNS('defs');this.svgElement.appendChild(defs);var maskElement=createNS('g');this.svgElement.appendChild(maskElement);this.layerElement=maskElement;this.renderConfig={preserveAspectRatio:config&&config.preserveAspectRatio||'xMidYMid meet',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',contentVisibility:config&&config.contentVisibility||'visible',progressiveLoad:config&&config.progressiveLoad||false,hideOnTransparent:!(config&&config.hideOnTransparent===false),viewBoxOnly:config&&config.viewBoxOnly||false,viewBoxSize:config&&config.viewBoxSize||false,className:config&&config.className||'',id:config&&config.id||'',focusable:config&&config.focusable,filterSize:{width:config&&config.filterSize&&config.filterSize.width||'100%',height:config&&config.filterSize&&config.filterSize.height||'100%',x:config&&config.filterSize&&config.filterSize.x||'0%',y:config&&config.filterSize&&config.filterSize.y||'0%'},width:config&&config.width,height:config&&config.height,runExpressions:!config||config.runExpressions===undefined||config.runExpressions};this.globalData={_mdf:false,frameNum:-1,defs:defs,renderConfig:this.renderConfig};this.elements=[];this.pendingElements=[];this.destroyed=false;this.rendererType='svg';}extendPrototype([SVGRendererBase],SVGRenderer);SVGRenderer.prototype.createComp=function(data){return new SVGCompElement(data,this.globalData,this);};function ShapeTransformManager(){this.sequences={};this.sequenceList=[];this.transform_key_count=0;}ShapeTransformManager.prototype={addTransformSequence:function addTransformSequence(transforms){var i;var len=transforms.length;var key='_';for(i=0;i<len;i+=1){key+=transforms[i].transform.key+'_';}var sequence=this.sequences[key];if(!sequence){sequence={transforms:[].concat(transforms),finalTransform:new Matrix(),_mdf:false};this.sequences[key]=sequence;this.sequenceList.push(sequence);}return sequence;},processSequence:function processSequence(sequence,isFirstFrame){var i=0;var len=sequence.transforms.length;var _mdf=isFirstFrame;while(i<len&&!isFirstFrame){if(sequence.transforms[i].transform.mProps._mdf){_mdf=true;break;}i+=1;}if(_mdf){sequence.finalTransform.reset();for(i=len-1;i>=0;i-=1){sequence.finalTransform.multiply(sequence.transforms[i].transform.mProps.v);}}sequence._mdf=_mdf;},processSequences:function processSequences(isFirstFrame){var i;var len=this.sequenceList.length;for(i=0;i<len;i+=1){this.processSequence(this.sequenceList[i],isFirstFrame);}},getNewKey:function getNewKey(){this.transform_key_count+=1;return '_'+this.transform_key_count;}};var lumaLoader=function lumaLoader(){var id='__lottie_element_luma_buffer';var lumaBuffer=null;var lumaBufferCtx=null;var svg=null;// This alternate solution has a slight delay before the filter is applied, resulting in a flicker on the first frame.
		// Keeping this here for reference, and in the future, if offscreen canvas supports url filters, this can be used.
		// For now, neither of them work for offscreen canvas, so canvas workers can't support the luma track matte mask.
		// Naming it solution 2 to mark the extra comment lines.
		/*
		    var svgString = [
		      '<svg xmlns="http://www.w3.org/2000/svg">',
		      '<filter id="' + id + '">',
		      '<feColorMatrix type="matrix" color-interpolation-filters="sRGB" values="',
		      '0.3, 0.3, 0.3, 0, 0, ',
		      '0.3, 0.3, 0.3, 0, 0, ',
		      '0.3, 0.3, 0.3, 0, 0, ',
		      '0.3, 0.3, 0.3, 0, 0',
		      '"/>',
		      '</filter>',
		      '</svg>',
		    ].join('');
		    var blob = new Blob([svgString], { type: 'image/svg+xml' });
		    var url = URL.createObjectURL(blob);
		    */function createLumaSvgFilter(){var _svg=createNS('svg');var fil=createNS('filter');var matrix=createNS('feColorMatrix');fil.setAttribute('id',id);matrix.setAttribute('type','matrix');matrix.setAttribute('color-interpolation-filters','sRGB');matrix.setAttribute('values','0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0');fil.appendChild(matrix);_svg.appendChild(fil);_svg.setAttribute('id',id+'_svg');if(featureSupport.svgLumaHidden){_svg.style.display='none';}return _svg;}function loadLuma(){if(!lumaBuffer){svg=createLumaSvgFilter();document.body.appendChild(svg);lumaBuffer=createTag('canvas');lumaBufferCtx=lumaBuffer.getContext('2d');// lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2
		lumaBufferCtx.filter='url(#'+id+')';lumaBufferCtx.fillStyle='rgba(0,0,0,0)';lumaBufferCtx.fillRect(0,0,1,1);}}function getLuma(canvas){if(!lumaBuffer){loadLuma();}lumaBuffer.width=canvas.width;lumaBuffer.height=canvas.height;// lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2
		lumaBufferCtx.filter='url(#'+id+')';return lumaBuffer;}return {load:loadLuma,get:getLuma};};function createCanvas(width,height){if(featureSupport.offscreenCanvas){return new OffscreenCanvas(width,height);}var canvas=createTag('canvas');canvas.width=width;canvas.height=height;return canvas;}var assetLoader=function(){return {loadLumaCanvas:lumaLoader.load,getLumaCanvas:lumaLoader.get,createCanvas:createCanvas};}();var registeredEffects={};function CVEffects(elem){var i;var len=elem.data.ef?elem.data.ef.length:0;this.filters=[];var filterManager;for(i=0;i<len;i+=1){filterManager=null;var type=elem.data.ef[i].ty;if(registeredEffects[type]){var Effect=registeredEffects[type].effect;filterManager=new Effect(elem.effectsManager.effectElements[i],elem);}if(filterManager){this.filters.push(filterManager);}}if(this.filters.length){elem.addRenderableComponent(this);}}CVEffects.prototype.renderFrame=function(_isFirstFrame){var i;var len=this.filters.length;for(i=0;i<len;i+=1){this.filters[i].renderFrame(_isFirstFrame);}};CVEffects.prototype.getEffects=function(type){var i;var len=this.filters.length;var effects=[];for(i=0;i<len;i+=1){if(this.filters[i].type===type){effects.push(this.filters[i]);}}return effects;};function registerEffect(id,effect){registeredEffects[id]={effect:effect};}function CVMaskElement(data,element){this.data=data;this.element=element;this.masksProperties=this.data.masksProperties||[];this.viewData=createSizedArray(this.masksProperties.length);var i;var len=this.masksProperties.length;var hasMasks=false;for(i=0;i<len;i+=1){if(this.masksProperties[i].mode!=='n'){hasMasks=true;}this.viewData[i]=ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);}this.hasMasks=hasMasks;if(hasMasks){this.element.addRenderableComponent(this);}}CVMaskElement.prototype.renderFrame=function(){if(!this.hasMasks){return;}var transform=this.element.finalTransform.mat;var ctx=this.element.canvasContext;var i;var len=this.masksProperties.length;var pt;var pts;var data;ctx.beginPath();for(i=0;i<len;i+=1){if(this.masksProperties[i].mode!=='n'){if(this.masksProperties[i].inv){ctx.moveTo(0,0);ctx.lineTo(this.element.globalData.compSize.w,0);ctx.lineTo(this.element.globalData.compSize.w,this.element.globalData.compSize.h);ctx.lineTo(0,this.element.globalData.compSize.h);ctx.lineTo(0,0);}data=this.viewData[i].v;pt=transform.applyToPointArray(data.v[0][0],data.v[0][1],0);ctx.moveTo(pt[0],pt[1]);var j;var jLen=data._length;for(j=1;j<jLen;j+=1){pts=transform.applyToTriplePoints(data.o[j-1],data.i[j],data.v[j]);ctx.bezierCurveTo(pts[0],pts[1],pts[2],pts[3],pts[4],pts[5]);}pts=transform.applyToTriplePoints(data.o[j-1],data.i[0],data.v[0]);ctx.bezierCurveTo(pts[0],pts[1],pts[2],pts[3],pts[4],pts[5]);}}this.element.globalData.renderer.save(true);ctx.clip();};CVMaskElement.prototype.getMaskProperty=MaskElement.prototype.getMaskProperty;CVMaskElement.prototype.destroy=function(){this.element=null;};function CVBaseElement(){}var operationsMap={1:'source-in',2:'source-out',3:'source-in',4:'source-out'};CVBaseElement.prototype={createElements:function createElements(){},initRendererElement:function initRendererElement(){},createContainerElements:function createContainerElements(){// If the layer is masked we will use two buffers to store each different states of the drawing
		// This solution is not ideal for several reason. But unfortunately, because of the recursive
		// nature of the render tree, it's the only simple way to make sure one inner mask doesn't override an outer mask.
		// TODO: try to reduce the size of these buffers to the size of the composition contaning the layer
		// It might be challenging because the layer most likely is transformed in some way
		if(this.data.tt>=1){this.buffers=[];var canvasContext=this.globalData.canvasContext;var bufferCanvas=assetLoader.createCanvas(canvasContext.canvas.width,canvasContext.canvas.height);this.buffers.push(bufferCanvas);var bufferCanvas2=assetLoader.createCanvas(canvasContext.canvas.width,canvasContext.canvas.height);this.buffers.push(bufferCanvas2);if(this.data.tt>=3&&!document._isProxy){assetLoader.loadLumaCanvas();}}this.canvasContext=this.globalData.canvasContext;this.transformCanvas=this.globalData.transformCanvas;this.renderableEffectsManager=new CVEffects(this);this.searchEffectTransforms();},createContent:function createContent(){},setBlendMode:function setBlendMode(){var globalData=this.globalData;if(globalData.blendMode!==this.data.bm){globalData.blendMode=this.data.bm;var blendModeValue=getBlendMode(this.data.bm);globalData.canvasContext.globalCompositeOperation=blendModeValue;}},createRenderableComponents:function createRenderableComponents(){this.maskManager=new CVMaskElement(this.data,this);this.transformEffects=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);},hideElement:function hideElement(){if(!this.hidden&&(!this.isInRange||this.isTransparent)){this.hidden=true;}},showElement:function showElement(){if(this.isInRange&&!this.isTransparent){this.hidden=false;this._isFirstFrame=true;this.maskManager._isFirstFrame=true;}},clearCanvas:function clearCanvas(canvasContext){canvasContext.clearRect(this.transformCanvas.tx,this.transformCanvas.ty,this.transformCanvas.w*this.transformCanvas.sx,this.transformCanvas.h*this.transformCanvas.sy);},prepareLayer:function prepareLayer(){if(this.data.tt>=1){var buffer=this.buffers[0];var bufferCtx=buffer.getContext('2d');this.clearCanvas(bufferCtx);// on the first buffer we store the current state of the global drawing
		bufferCtx.drawImage(this.canvasContext.canvas,0,0);// The next four lines are to clear the canvas
		// TODO: Check if there is a way to clear the canvas without resetting the transform
		this.currentTransform=this.canvasContext.getTransform();this.canvasContext.setTransform(1,0,0,1,0,0);this.clearCanvas(this.canvasContext);this.canvasContext.setTransform(this.currentTransform);}},exitLayer:function exitLayer(){if(this.data.tt>=1){var buffer=this.buffers[1];// On the second buffer we store the current state of the global drawing
		// that only contains the content of this layer
		// (if it is a composition, it also includes the nested layers)
		var bufferCtx=buffer.getContext('2d');this.clearCanvas(bufferCtx);bufferCtx.drawImage(this.canvasContext.canvas,0,0);// We clear the canvas again
		this.canvasContext.setTransform(1,0,0,1,0,0);this.clearCanvas(this.canvasContext);this.canvasContext.setTransform(this.currentTransform);// We draw the mask
		var mask=this.comp.getElementById('tp'in this.data?this.data.tp:this.data.ind-1);mask.renderFrame(true);// We draw the second buffer (that contains the content of this layer)
		this.canvasContext.setTransform(1,0,0,1,0,0);// If the mask is a Luma matte, we need to do two extra painting operations
		// the _isProxy check is to avoid drawing a fake canvas in workers that will throw an error
		if(this.data.tt>=3&&!document._isProxy){// We copy the painted mask to a buffer that has a color matrix filter applied to it
		// that applies the rgb values to the alpha channel
		var lumaBuffer=assetLoader.getLumaCanvas(this.canvasContext.canvas);var lumaBufferCtx=lumaBuffer.getContext('2d');lumaBufferCtx.drawImage(this.canvasContext.canvas,0,0);this.clearCanvas(this.canvasContext);// we repaint the context with the mask applied to it
		this.canvasContext.drawImage(lumaBuffer,0,0);}this.canvasContext.globalCompositeOperation=operationsMap[this.data.tt];this.canvasContext.drawImage(buffer,0,0);// We finally draw the first buffer (that contains the content of the global drawing)
		// We use destination-over to draw the global drawing below the current layer
		this.canvasContext.globalCompositeOperation='destination-over';this.canvasContext.drawImage(this.buffers[0],0,0);this.canvasContext.setTransform(this.currentTransform);// We reset the globalCompositeOperation to source-over, the standard type of operation
		this.canvasContext.globalCompositeOperation='source-over';}},renderFrame:function renderFrame(forceRender){if(this.hidden||this.data.hd){return;}if(this.data.td===1&&!forceRender){return;}this.renderTransform();this.renderRenderable();this.renderLocalTransform();this.setBlendMode();var forceRealStack=this.data.ty===0;this.prepareLayer();this.globalData.renderer.save(forceRealStack);this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props);this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity);this.renderInnerContent();this.globalData.renderer.restore(forceRealStack);this.exitLayer();if(this.maskManager.hasMasks){this.globalData.renderer.restore(true);}if(this._isFirstFrame){this._isFirstFrame=false;}},destroy:function destroy(){this.canvasContext=null;this.data=null;this.globalData=null;this.maskManager.destroy();},mHelper:new Matrix()};CVBaseElement.prototype.hide=CVBaseElement.prototype.hideElement;CVBaseElement.prototype.show=CVBaseElement.prototype.showElement;function CVShapeData(element,data,styles,transformsManager){this.styledShapes=[];this.tr=[0,0,0,0,0,0];var ty=4;if(data.ty==='rc'){ty=5;}else if(data.ty==='el'){ty=6;}else if(data.ty==='sr'){ty=7;}this.sh=ShapePropertyFactory.getShapeProp(element,data,ty,element);var i;var len=styles.length;var styledShape;for(i=0;i<len;i+=1){if(!styles[i].closed){styledShape={transforms:transformsManager.addTransformSequence(styles[i].transforms),trNodes:[]};this.styledShapes.push(styledShape);styles[i].elements.push(styledShape);}}}CVShapeData.prototype.setAsAnimated=SVGShapeData.prototype.setAsAnimated;function CVShapeElement(data,globalData,comp){this.shapes=[];this.shapesData=data.shapes;this.stylesList=[];this.itemsData=[];this.prevViewData=[];this.shapeModifiers=[];this.processedElements=[];this.transformsManager=new ShapeTransformManager();this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement],CVShapeElement);CVShapeElement.prototype.initElement=RenderableDOMElement.prototype.initElement;CVShapeElement.prototype.transformHelper={opacity:1,_opMdf:false};CVShapeElement.prototype.dashResetter=[];CVShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,true,[]);};CVShapeElement.prototype.createStyleElement=function(data,transforms){var styleElem={data:data,type:data.ty,preTransforms:this.transformsManager.addTransformSequence(transforms),transforms:[],elements:[],closed:data.hd===true};var elementData={};if(data.ty==='fl'||data.ty==='st'){elementData.c=PropertyFactory.getProp(this,data.c,1,255,this);if(!elementData.c.k){styleElem.co='rgb('+bmFloor(elementData.c.v[0])+','+bmFloor(elementData.c.v[1])+','+bmFloor(elementData.c.v[2])+')';}}else if(data.ty==='gf'||data.ty==='gs'){elementData.s=PropertyFactory.getProp(this,data.s,1,null,this);elementData.e=PropertyFactory.getProp(this,data.e,1,null,this);elementData.h=PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);elementData.a=PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);elementData.g=new GradientProperty(this,data.g,this);}elementData.o=PropertyFactory.getProp(this,data.o,0,0.01,this);if(data.ty==='st'||data.ty==='gs'){styleElem.lc=lineCapEnum[data.lc||2];styleElem.lj=lineJoinEnum[data.lj||2];if(data.lj==1){// eslint-disable-line eqeqeq
		styleElem.ml=data.ml;}elementData.w=PropertyFactory.getProp(this,data.w,0,null,this);if(!elementData.w.k){styleElem.wi=elementData.w.v;}if(data.d){var d=new DashProperty(this,data.d,'canvas',this);elementData.d=d;if(!elementData.d.k){styleElem.da=elementData.d.dashArray;styleElem["do"]=elementData.d.dashoffset[0];}}}else {styleElem.r=data.r===2?'evenodd':'nonzero';}this.stylesList.push(styleElem);elementData.style=styleElem;return elementData;};CVShapeElement.prototype.createGroupElement=function(){var elementData={it:[],prevViewData:[]};return elementData;};CVShapeElement.prototype.createTransformElement=function(data){var elementData={transform:{opacity:1,_opMdf:false,key:this.transformsManager.getNewKey(),op:PropertyFactory.getProp(this,data.o,0,0.01,this),mProps:TransformPropertyFactory.getTransformProperty(this,data,this)}};return elementData;};CVShapeElement.prototype.createShapeElement=function(data){var elementData=new CVShapeData(this,data,this.stylesList,this.transformsManager);this.shapes.push(elementData);this.addShapeToModifiers(elementData);return elementData;};CVShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=true;var i;var len=this.itemsData.length;for(i=0;i<len;i+=1){this.prevViewData[i]=this.itemsData[i];}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,true,[]);len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();}this.renderModifiers();this.transformsManager.processSequences(this._isFirstFrame);};CVShapeElement.prototype.addTransformToStyleList=function(transform){var i;var len=this.stylesList.length;for(i=0;i<len;i+=1){if(!this.stylesList[i].closed){this.stylesList[i].transforms.push(transform);}}};CVShapeElement.prototype.removeTransformFromStyleList=function(){var i;var len=this.stylesList.length;for(i=0;i<len;i+=1){if(!this.stylesList[i].closed){this.stylesList[i].transforms.pop();}}};CVShapeElement.prototype.closeStyles=function(styles){var i;var len=styles.length;for(i=0;i<len;i+=1){styles[i].closed=true;}};CVShapeElement.prototype.searchShapes=function(arr,itemsData,prevViewData,shouldRender,transforms){var i;var len=arr.length-1;var j;var jLen;var ownStyles=[];var ownModifiers=[];var processedPos;var modifier;var currentTransform;var ownTransforms=[].concat(transforms);for(i=len;i>=0;i-=1){processedPos=this.searchProcessedElement(arr[i]);if(!processedPos){arr[i]._shouldRender=shouldRender;}else {itemsData[i]=prevViewData[processedPos-1];}if(arr[i].ty==='fl'||arr[i].ty==='st'||arr[i].ty==='gf'||arr[i].ty==='gs'){if(!processedPos){itemsData[i]=this.createStyleElement(arr[i],ownTransforms);}else {itemsData[i].style.closed=false;}ownStyles.push(itemsData[i].style);}else if(arr[i].ty==='gr'){if(!processedPos){itemsData[i]=this.createGroupElement(arr[i]);}else {jLen=itemsData[i].it.length;for(j=0;j<jLen;j+=1){itemsData[i].prevViewData[j]=itemsData[i].it[j];}}this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,shouldRender,ownTransforms);}else if(arr[i].ty==='tr'){if(!processedPos){currentTransform=this.createTransformElement(arr[i]);itemsData[i]=currentTransform;}ownTransforms.push(itemsData[i]);this.addTransformToStyleList(itemsData[i]);}else if(arr[i].ty==='sh'||arr[i].ty==='rc'||arr[i].ty==='el'||arr[i].ty==='sr'){if(!processedPos){itemsData[i]=this.createShapeElement(arr[i]);}}else if(arr[i].ty==='tm'||arr[i].ty==='rd'||arr[i].ty==='pb'||arr[i].ty==='zz'||arr[i].ty==='op'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);modifier.init(this,arr[i]);itemsData[i]=modifier;this.shapeModifiers.push(modifier);}else {modifier=itemsData[i];modifier.closed=false;}ownModifiers.push(modifier);}else if(arr[i].ty==='rp'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);itemsData[i]=modifier;modifier.init(this,arr,i,itemsData);this.shapeModifiers.push(modifier);shouldRender=false;}else {modifier=itemsData[i];modifier.closed=true;}ownModifiers.push(modifier);}this.addProcessedElement(arr[i],i+1);}this.removeTransformFromStyleList();this.closeStyles(ownStyles);len=ownModifiers.length;for(i=0;i<len;i+=1){ownModifiers[i].closed=true;}};CVShapeElement.prototype.renderInnerContent=function(){this.transformHelper.opacity=1;this.transformHelper._opMdf=false;this.renderModifiers();this.transformsManager.processSequences(this._isFirstFrame);this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);};CVShapeElement.prototype.renderShapeTransform=function(parentTransform,groupTransform){if(parentTransform._opMdf||groupTransform.op._mdf||this._isFirstFrame){groupTransform.opacity=parentTransform.opacity;groupTransform.opacity*=groupTransform.op.v;groupTransform._opMdf=true;}};CVShapeElement.prototype.drawLayer=function(){var i;var len=this.stylesList.length;var j;var jLen;var k;var kLen;var elems;var nodes;var renderer=this.globalData.renderer;var ctx=this.globalData.canvasContext;var type;var currentStyle;for(i=0;i<len;i+=1){currentStyle=this.stylesList[i];type=currentStyle.type;// Skipping style when
		// Stroke width equals 0
		// style should not be rendered (extra unused repeaters)
		// current opacity equals 0
		// global opacity equals 0
		if(!((type==='st'||type==='gs')&&currentStyle.wi===0||!currentStyle.data._shouldRender||currentStyle.coOp===0||this.globalData.currentGlobalAlpha===0)){renderer.save();elems=currentStyle.elements;if(type==='st'||type==='gs'){renderer.ctxStrokeStyle(type==='st'?currentStyle.co:currentStyle.grd);// ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;
		renderer.ctxLineWidth(currentStyle.wi);// ctx.lineWidth = currentStyle.wi;
		renderer.ctxLineCap(currentStyle.lc);// ctx.lineCap = currentStyle.lc;
		renderer.ctxLineJoin(currentStyle.lj);// ctx.lineJoin = currentStyle.lj;
		renderer.ctxMiterLimit(currentStyle.ml||0);// ctx.miterLimit = currentStyle.ml || 0;
		}else {renderer.ctxFillStyle(type==='fl'?currentStyle.co:currentStyle.grd);// ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;
		}renderer.ctxOpacity(currentStyle.coOp);if(type!=='st'&&type!=='gs'){ctx.beginPath();}renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);jLen=elems.length;for(j=0;j<jLen;j+=1){if(type==='st'||type==='gs'){ctx.beginPath();if(currentStyle.da){ctx.setLineDash(currentStyle.da);ctx.lineDashOffset=currentStyle["do"];}}nodes=elems[j].trNodes;kLen=nodes.length;for(k=0;k<kLen;k+=1){if(nodes[k].t==='m'){ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);}else if(nodes[k].t==='c'){ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);}else {ctx.closePath();}}if(type==='st'||type==='gs'){// ctx.stroke();
		renderer.ctxStroke();if(currentStyle.da){ctx.setLineDash(this.dashResetter);}}}if(type!=='st'&&type!=='gs'){// ctx.fill(currentStyle.r);
		this.globalData.renderer.ctxFill(currentStyle.r);}renderer.restore();}}};CVShapeElement.prototype.renderShape=function(parentTransform,items,data,isMain){var i;var len=items.length-1;var groupTransform;groupTransform=parentTransform;for(i=len;i>=0;i-=1){if(items[i].ty==='tr'){groupTransform=data[i].transform;this.renderShapeTransform(parentTransform,groupTransform);}else if(items[i].ty==='sh'||items[i].ty==='el'||items[i].ty==='rc'||items[i].ty==='sr'){this.renderPath(items[i],data[i]);}else if(items[i].ty==='fl'){this.renderFill(items[i],data[i],groupTransform);}else if(items[i].ty==='st'){this.renderStroke(items[i],data[i],groupTransform);}else if(items[i].ty==='gf'||items[i].ty==='gs'){this.renderGradientFill(items[i],data[i],groupTransform);}else if(items[i].ty==='gr'){this.renderShape(groupTransform,items[i].it,data[i].it);}else if(items[i].ty==='tm');}if(isMain){this.drawLayer();}};CVShapeElement.prototype.renderStyledShape=function(styledShape,shape){if(this._isFirstFrame||shape._mdf||styledShape.transforms._mdf){var shapeNodes=styledShape.trNodes;var paths=shape.paths;var i;var len;var j;var jLen=paths._length;shapeNodes.length=0;var groupTransformMat=styledShape.transforms.finalTransform;for(j=0;j<jLen;j+=1){var pathNodes=paths.shapes[j];if(pathNodes&&pathNodes.v){len=pathNodes._length;for(i=1;i<len;i+=1){if(i===1){shapeNodes.push({t:'m',p:groupTransformMat.applyToPointArray(pathNodes.v[0][0],pathNodes.v[0][1],0)});}shapeNodes.push({t:'c',pts:groupTransformMat.applyToTriplePoints(pathNodes.o[i-1],pathNodes.i[i],pathNodes.v[i])});}if(len===1){shapeNodes.push({t:'m',p:groupTransformMat.applyToPointArray(pathNodes.v[0][0],pathNodes.v[0][1],0)});}if(pathNodes.c&&len){shapeNodes.push({t:'c',pts:groupTransformMat.applyToTriplePoints(pathNodes.o[i-1],pathNodes.i[0],pathNodes.v[0])});shapeNodes.push({t:'z'});}}}styledShape.trNodes=shapeNodes;}};CVShapeElement.prototype.renderPath=function(pathData,itemData){if(pathData.hd!==true&&pathData._shouldRender){var i;var len=itemData.styledShapes.length;for(i=0;i<len;i+=1){this.renderStyledShape(itemData.styledShapes[i],itemData.sh);}}};CVShapeElement.prototype.renderFill=function(styleData,itemData,groupTransform){var styleElem=itemData.style;if(itemData.c._mdf||this._isFirstFrame){styleElem.co='rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')';}if(itemData.o._mdf||groupTransform._opMdf||this._isFirstFrame){styleElem.coOp=itemData.o.v*groupTransform.opacity;}};CVShapeElement.prototype.renderGradientFill=function(styleData,itemData,groupTransform){var styleElem=itemData.style;var grd;if(!styleElem.grd||itemData.g._mdf||itemData.s._mdf||itemData.e._mdf||styleData.t!==1&&(itemData.h._mdf||itemData.a._mdf)){var ctx=this.globalData.canvasContext;var pt1=itemData.s.v;var pt2=itemData.e.v;if(styleData.t===1){grd=ctx.createLinearGradient(pt1[0],pt1[1],pt2[0],pt2[1]);}else {var rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));var ang=Math.atan2(pt2[1]-pt1[1],pt2[0]-pt1[0]);var percent=itemData.h.v;if(percent>=1){percent=0.99;}else if(percent<=-1){percent=-0.99;}var dist=rad*percent;var x=Math.cos(ang+itemData.a.v)*dist+pt1[0];var y=Math.sin(ang+itemData.a.v)*dist+pt1[1];grd=ctx.createRadialGradient(x,y,0,pt1[0],pt1[1],rad);}var i;var len=styleData.g.p;var cValues=itemData.g.c;var opacity=1;for(i=0;i<len;i+=1){if(itemData.g._hasOpacity&&itemData.g._collapsable){opacity=itemData.g.o[i*2+1];}grd.addColorStop(cValues[i*4]/100,'rgba('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+','+opacity+')');}styleElem.grd=grd;}styleElem.coOp=itemData.o.v*groupTransform.opacity;};CVShapeElement.prototype.renderStroke=function(styleData,itemData,groupTransform){var styleElem=itemData.style;var d=itemData.d;if(d&&(d._mdf||this._isFirstFrame)){styleElem.da=d.dashArray;styleElem["do"]=d.dashoffset[0];}if(itemData.c._mdf||this._isFirstFrame){styleElem.co='rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')';}if(itemData.o._mdf||groupTransform._opMdf||this._isFirstFrame){styleElem.coOp=itemData.o.v*groupTransform.opacity;}if(itemData.w._mdf||this._isFirstFrame){styleElem.wi=itemData.w.v;}};CVShapeElement.prototype.destroy=function(){this.shapesData=null;this.globalData=null;this.canvasContext=null;this.stylesList.length=0;this.itemsData.length=0;};function CVTextElement(data,globalData,comp){this.textSpans=[];this.yOffset=0;this.fillColorAnim=false;this.strokeColorAnim=false;this.strokeWidthAnim=false;this.stroke=false;this.fill=false;this.justifyOffset=0;this.currentRender=null;this.renderType='canvas';this.values={fill:'rgba(0,0,0,0)',stroke:'rgba(0,0,0,0)',sWidth:0,fValue:''};this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement],CVTextElement);CVTextElement.prototype.tHelper=createTag('canvas').getContext('2d');CVTextElement.prototype.buildNewText=function(){var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData.l?documentData.l.length:0);var hasFill=false;if(documentData.fc){hasFill=true;this.values.fill=this.buildColor(documentData.fc);}else {this.values.fill='rgba(0,0,0,0)';}this.fill=hasFill;var hasStroke=false;if(documentData.sc){hasStroke=true;this.values.stroke=this.buildColor(documentData.sc);this.values.sWidth=documentData.sw;}var fontData=this.globalData.fontManager.getFontByName(documentData.f);var i;var len;var letters=documentData.l;var matrixHelper=this.mHelper;this.stroke=hasStroke;this.values.fValue=documentData.finalSize+'px '+this.globalData.fontManager.getFontByName(documentData.f).fFamily;len=documentData.finalText.length;// this.tHelper.font = this.values.fValue;
		var charData;var shapeData;var k;var kLen;var shapes;var j;var jLen;var pathNodes;var commands;var pathArr;var singleShape=this.data.singleShape;var trackingOffset=documentData.tr*0.001*documentData.finalSize;var xPos=0;var yPos=0;var firstLine=true;var cnt=0;for(i=0;i<len;i+=1){charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);shapeData=charData&&charData.data||{};matrixHelper.reset();if(singleShape&&letters[i].n){xPos=-trackingOffset;yPos+=documentData.yOffset;yPos+=firstLine?1:0;firstLine=false;}shapes=shapeData.shapes?shapeData.shapes[0].it:[];jLen=shapes.length;matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);if(singleShape){this.applyTextPropertiesToMatrix(documentData,matrixHelper,letters[i].line,xPos,yPos);}commands=createSizedArray(jLen-1);var commandsCounter=0;for(j=0;j<jLen;j+=1){if(shapes[j].ty==='sh'){kLen=shapes[j].ks.k.i.length;pathNodes=shapes[j].ks.k;pathArr=[];for(k=1;k<kLen;k+=1){if(k===1){pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));}pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));}pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));commands[commandsCounter]=pathArr;commandsCounter+=1;}}if(singleShape){xPos+=letters[i].l;xPos+=trackingOffset;}if(this.textSpans[cnt]){this.textSpans[cnt].elem=commands;}else {this.textSpans[cnt]={elem:commands};}cnt+=1;}};CVTextElement.prototype.renderInnerContent=function(){this.validateText();var ctx=this.canvasContext;ctx.font=this.values.fValue;this.globalData.renderer.ctxLineCap('butt');// ctx.lineCap = 'butt';
		this.globalData.renderer.ctxLineJoin('miter');// ctx.lineJoin = 'miter';
		this.globalData.renderer.ctxMiterLimit(4);// ctx.miterLimit = 4;
		if(!this.data.singleShape){this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);}var i;var len;var j;var jLen;var k;var kLen;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var lastFill=null;var lastStroke=null;var lastStrokeW=null;var commands;var pathArr;var renderer=this.globalData.renderer;for(i=0;i<len;i+=1){if(!letters[i].n){renderedLetter=renderedLetters[i];if(renderedLetter){renderer.save();renderer.ctxTransform(renderedLetter.p);renderer.ctxOpacity(renderedLetter.o);}if(this.fill){if(renderedLetter&&renderedLetter.fc){if(lastFill!==renderedLetter.fc){renderer.ctxFillStyle(renderedLetter.fc);lastFill=renderedLetter.fc;// ctx.fillStyle = renderedLetter.fc;
		}}else if(lastFill!==this.values.fill){lastFill=this.values.fill;renderer.ctxFillStyle(this.values.fill);// ctx.fillStyle = this.values.fill;
		}commands=this.textSpans[i].elem;jLen=commands.length;this.globalData.canvasContext.beginPath();for(j=0;j<jLen;j+=1){pathArr=commands[j];kLen=pathArr.length;this.globalData.canvasContext.moveTo(pathArr[0],pathArr[1]);for(k=2;k<kLen;k+=6){this.globalData.canvasContext.bezierCurveTo(pathArr[k],pathArr[k+1],pathArr[k+2],pathArr[k+3],pathArr[k+4],pathArr[k+5]);}}this.globalData.canvasContext.closePath();renderer.ctxFill();// this.globalData.canvasContext.fill();
		/// ctx.fillText(this.textSpans[i].val,0,0);
		}if(this.stroke){if(renderedLetter&&renderedLetter.sw){if(lastStrokeW!==renderedLetter.sw){lastStrokeW=renderedLetter.sw;renderer.ctxLineWidth(renderedLetter.sw);// ctx.lineWidth = renderedLetter.sw;
		}}else if(lastStrokeW!==this.values.sWidth){lastStrokeW=this.values.sWidth;renderer.ctxLineWidth(this.values.sWidth);// ctx.lineWidth = this.values.sWidth;
		}if(renderedLetter&&renderedLetter.sc){if(lastStroke!==renderedLetter.sc){lastStroke=renderedLetter.sc;renderer.ctxStrokeStyle(renderedLetter.sc);// ctx.strokeStyle = renderedLetter.sc;
		}}else if(lastStroke!==this.values.stroke){lastStroke=this.values.stroke;renderer.ctxStrokeStyle(this.values.stroke);// ctx.strokeStyle = this.values.stroke;
		}commands=this.textSpans[i].elem;jLen=commands.length;this.globalData.canvasContext.beginPath();for(j=0;j<jLen;j+=1){pathArr=commands[j];kLen=pathArr.length;this.globalData.canvasContext.moveTo(pathArr[0],pathArr[1]);for(k=2;k<kLen;k+=6){this.globalData.canvasContext.bezierCurveTo(pathArr[k],pathArr[k+1],pathArr[k+2],pathArr[k+3],pathArr[k+4],pathArr[k+5]);}}this.globalData.canvasContext.closePath();renderer.ctxStroke();// this.globalData.canvasContext.stroke();
		/// ctx.strokeText(letters[i].val,0,0);
		}if(renderedLetter){this.globalData.renderer.restore();}}}};function CVImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.img=globalData.imageLoader.getAsset(this.assetData);this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVImageElement);CVImageElement.prototype.initElement=SVGShapeElement.prototype.initElement;CVImageElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame;CVImageElement.prototype.createContent=function(){if(this.img.width&&(this.assetData.w!==this.img.width||this.assetData.h!==this.img.height)){var canvas=createTag('canvas');canvas.width=this.assetData.w;canvas.height=this.assetData.h;var ctx=canvas.getContext('2d');var imgW=this.img.width;var imgH=this.img.height;var imgRel=imgW/imgH;var canvasRel=this.assetData.w/this.assetData.h;var widthCrop;var heightCrop;var par=this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio;if(imgRel>canvasRel&&par==='xMidYMid slice'||imgRel<canvasRel&&par!=='xMidYMid slice'){heightCrop=imgH;widthCrop=heightCrop*canvasRel;}else {widthCrop=imgW;heightCrop=widthCrop/canvasRel;}ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);this.img=canvas;}};CVImageElement.prototype.renderInnerContent=function(){this.canvasContext.drawImage(this.img,0,0);};CVImageElement.prototype.destroy=function(){this.img=null;};function CVSolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVSolidElement);CVSolidElement.prototype.initElement=SVGShapeElement.prototype.initElement;CVSolidElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame;CVSolidElement.prototype.renderInnerContent=function(){// var ctx = this.canvasContext;
		this.globalData.renderer.ctxFillStyle(this.data.sc);// ctx.fillStyle = this.data.sc;
		this.globalData.renderer.ctxFillRect(0,0,this.data.sw,this.data.sh);// ctx.fillRect(0, 0, this.data.sw, this.data.sh);
		//
		};function CanvasRendererBase(){}extendPrototype([BaseRenderer],CanvasRendererBase);CanvasRendererBase.prototype.createShape=function(data){return new CVShapeElement(data,this.globalData,this);};CanvasRendererBase.prototype.createText=function(data){return new CVTextElement(data,this.globalData,this);};CanvasRendererBase.prototype.createImage=function(data){return new CVImageElement(data,this.globalData,this);};CanvasRendererBase.prototype.createSolid=function(data){return new CVSolidElement(data,this.globalData,this);};CanvasRendererBase.prototype.createNull=SVGRenderer.prototype.createNull;CanvasRendererBase.prototype.ctxTransform=function(props){if(props[0]===1&&props[1]===0&&props[4]===0&&props[5]===1&&props[12]===0&&props[13]===0){return;}this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);};CanvasRendererBase.prototype.ctxOpacity=function(op){this.canvasContext.globalAlpha*=op<0?0:op;};CanvasRendererBase.prototype.ctxFillStyle=function(value){this.canvasContext.fillStyle=value;};CanvasRendererBase.prototype.ctxStrokeStyle=function(value){this.canvasContext.strokeStyle=value;};CanvasRendererBase.prototype.ctxLineWidth=function(value){this.canvasContext.lineWidth=value;};CanvasRendererBase.prototype.ctxLineCap=function(value){this.canvasContext.lineCap=value;};CanvasRendererBase.prototype.ctxLineJoin=function(value){this.canvasContext.lineJoin=value;};CanvasRendererBase.prototype.ctxMiterLimit=function(value){this.canvasContext.miterLimit=value;};CanvasRendererBase.prototype.ctxFill=function(rule){this.canvasContext.fill(rule);};CanvasRendererBase.prototype.ctxFillRect=function(x,y,w,h){this.canvasContext.fillRect(x,y,w,h);};CanvasRendererBase.prototype.ctxStroke=function(){this.canvasContext.stroke();};CanvasRendererBase.prototype.reset=function(){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return;}this.contextData.reset();};CanvasRendererBase.prototype.save=function(){this.canvasContext.save();};CanvasRendererBase.prototype.restore=function(actionFlag){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return;}if(actionFlag){this.globalData.blendMode='source-over';}this.contextData.restore(actionFlag);};CanvasRendererBase.prototype.configAnimation=function(animData){if(this.animationItem.wrapper){this.animationItem.container=createTag('canvas');var containerStyle=this.animationItem.container.style;containerStyle.width='100%';containerStyle.height='100%';var origin='0px 0px 0px';containerStyle.transformOrigin=origin;containerStyle.mozTransformOrigin=origin;containerStyle.webkitTransformOrigin=origin;containerStyle['-webkit-transform']=origin;containerStyle.contentVisibility=this.renderConfig.contentVisibility;this.animationItem.wrapper.appendChild(this.animationItem.container);this.canvasContext=this.animationItem.container.getContext('2d');if(this.renderConfig.className){this.animationItem.container.setAttribute('class',this.renderConfig.className);}if(this.renderConfig.id){this.animationItem.container.setAttribute('id',this.renderConfig.id);}}else {this.canvasContext=this.renderConfig.context;}this.contextData.setContext(this.canvasContext);this.data=animData;this.layers=animData.layers;this.transformCanvas={w:animData.w,h:animData.h,sx:0,sy:0,tx:0,ty:0};this.setupGlobalData(animData,document.body);this.globalData.canvasContext=this.canvasContext;this.globalData.renderer=this;this.globalData.isDashed=false;this.globalData.progressiveLoad=this.renderConfig.progressiveLoad;this.globalData.transformCanvas=this.transformCanvas;this.elements=createSizedArray(animData.layers.length);this.updateContainerSize();};CanvasRendererBase.prototype.updateContainerSize=function(width,height){this.reset();var elementWidth;var elementHeight;if(width){elementWidth=width;elementHeight=height;this.canvasContext.canvas.width=elementWidth;this.canvasContext.canvas.height=elementHeight;}else {if(this.animationItem.wrapper&&this.animationItem.container){elementWidth=this.animationItem.wrapper.offsetWidth;elementHeight=this.animationItem.wrapper.offsetHeight;}else {elementWidth=this.canvasContext.canvas.width;elementHeight=this.canvasContext.canvas.height;}this.canvasContext.canvas.width=elementWidth*this.renderConfig.dpr;this.canvasContext.canvas.height=elementHeight*this.renderConfig.dpr;}var elementRel;var animationRel;if(this.renderConfig.preserveAspectRatio.indexOf('meet')!==-1||this.renderConfig.preserveAspectRatio.indexOf('slice')!==-1){var par=this.renderConfig.preserveAspectRatio.split(' ');var fillType=par[1]||'meet';var pos=par[0]||'xMidYMid';var xPos=pos.substr(0,4);var yPos=pos.substr(4);elementRel=elementWidth/elementHeight;animationRel=this.transformCanvas.w/this.transformCanvas.h;if(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice'){this.transformCanvas.sx=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);this.transformCanvas.sy=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);}else {this.transformCanvas.sx=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);this.transformCanvas.sy=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);}if(xPos==='xMid'&&(animationRel<elementRel&&fillType==='meet'||animationRel>elementRel&&fillType==='slice')){this.transformCanvas.tx=(elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;}else if(xPos==='xMax'&&(animationRel<elementRel&&fillType==='meet'||animationRel>elementRel&&fillType==='slice')){this.transformCanvas.tx=(elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;}else {this.transformCanvas.tx=0;}if(yPos==='YMid'&&(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice')){this.transformCanvas.ty=(elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2*this.renderConfig.dpr;}else if(yPos==='YMax'&&(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice')){this.transformCanvas.ty=(elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))*this.renderConfig.dpr;}else {this.transformCanvas.ty=0;}}else if(this.renderConfig.preserveAspectRatio==='none'){this.transformCanvas.sx=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);this.transformCanvas.sy=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);this.transformCanvas.tx=0;this.transformCanvas.ty=0;}else {this.transformCanvas.sx=this.renderConfig.dpr;this.transformCanvas.sy=this.renderConfig.dpr;this.transformCanvas.tx=0;this.transformCanvas.ty=0;}this.transformCanvas.props=[this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];/* var i, len = this.elements.length;
		      for(i=0;i<len;i+=1){
		          if(this.elements[i] && this.elements[i].data.ty === 0){
		              this.elements[i].resize(this.globalData.transformCanvas);
		          }
		      } */this.ctxTransform(this.transformCanvas.props);this.canvasContext.beginPath();this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);this.canvasContext.closePath();this.canvasContext.clip();this.renderFrame(this.renderedFrame,true);};CanvasRendererBase.prototype.destroy=function(){if(this.renderConfig.clearCanvas&&this.animationItem.wrapper){this.animationItem.wrapper.innerText='';}var i;var len=this.layers?this.layers.length:0;for(i=len-1;i>=0;i-=1){if(this.elements[i]&&this.elements[i].destroy){this.elements[i].destroy();}}this.elements.length=0;this.globalData.canvasContext=null;this.animationItem.container=null;this.destroyed=true;};CanvasRendererBase.prototype.renderFrame=function(num,forceRender){if(this.renderedFrame===num&&this.renderConfig.clearCanvas===true&&!forceRender||this.destroyed||num===-1){return;}this.renderedFrame=num;this.globalData.frameNum=num-this.animationItem._isFirstFrame;this.globalData.frameId+=1;this.globalData._mdf=!this.renderConfig.clearCanvas||forceRender;this.globalData.projectInterface.currentFrame=num;// console.log('--------');
		// console.log('NEW: ',num);
		var i;var len=this.layers.length;if(!this.completeLayers){this.checkLayers(num);}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(num-this.layers[i].st);}}if(this.globalData._mdf){if(this.renderConfig.clearCanvas===true){this.canvasContext.clearRect(0,0,this.transformCanvas.w,this.transformCanvas.h);}else {this.save();}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}if(this.renderConfig.clearCanvas!==true){this.restore();}}};CanvasRendererBase.prototype.buildItem=function(pos){var elements=this.elements;if(elements[pos]||this.layers[pos].ty===99){return;}var element=this.createItem(this.layers[pos],this,this.globalData);elements[pos]=element;element.initExpressions();/* if(this.layers[pos].ty === 0){
		          element.resize(this.globalData.transformCanvas);
		      } */};CanvasRendererBase.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();}};CanvasRendererBase.prototype.hide=function(){this.animationItem.container.style.display='none';};CanvasRendererBase.prototype.show=function(){this.animationItem.container.style.display='block';};function CanvasContext(){this.opacity=-1;this.transform=createTypedArray('float32',16);this.fillStyle='';this.strokeStyle='';this.lineWidth='';this.lineCap='';this.lineJoin='';this.miterLimit='';this.id=Math.random();}function CVContextData(){this.stack=[];this.cArrPos=0;this.cTr=new Matrix();var i;var len=15;for(i=0;i<len;i+=1){var canvasContext=new CanvasContext();this.stack[i]=canvasContext;}this._length=len;this.nativeContext=null;this.transformMat=new Matrix();this.currentOpacity=1;//
		this.currentFillStyle='';this.appliedFillStyle='';//
		this.currentStrokeStyle='';this.appliedStrokeStyle='';//
		this.currentLineWidth='';this.appliedLineWidth='';//
		this.currentLineCap='';this.appliedLineCap='';//
		this.currentLineJoin='';this.appliedLineJoin='';//
		this.appliedMiterLimit='';this.currentMiterLimit='';}CVContextData.prototype.duplicate=function(){var newLength=this._length*2;var i=0;for(i=this._length;i<newLength;i+=1){this.stack[i]=new CanvasContext();}this._length=newLength;};CVContextData.prototype.reset=function(){this.cArrPos=0;this.cTr.reset();this.stack[this.cArrPos].opacity=1;};CVContextData.prototype.restore=function(forceRestore){this.cArrPos-=1;var currentContext=this.stack[this.cArrPos];var transform=currentContext.transform;var i;var arr=this.cTr.props;for(i=0;i<16;i+=1){arr[i]=transform[i];}if(forceRestore){this.nativeContext.restore();var prevStack=this.stack[this.cArrPos+1];this.appliedFillStyle=prevStack.fillStyle;this.appliedStrokeStyle=prevStack.strokeStyle;this.appliedLineWidth=prevStack.lineWidth;this.appliedLineCap=prevStack.lineCap;this.appliedLineJoin=prevStack.lineJoin;this.appliedMiterLimit=prevStack.miterLimit;}this.nativeContext.setTransform(transform[0],transform[1],transform[4],transform[5],transform[12],transform[13]);if(forceRestore||currentContext.opacity!==-1&&this.currentOpacity!==currentContext.opacity){this.nativeContext.globalAlpha=currentContext.opacity;this.currentOpacity=currentContext.opacity;}this.currentFillStyle=currentContext.fillStyle;this.currentStrokeStyle=currentContext.strokeStyle;this.currentLineWidth=currentContext.lineWidth;this.currentLineCap=currentContext.lineCap;this.currentLineJoin=currentContext.lineJoin;this.currentMiterLimit=currentContext.miterLimit;};CVContextData.prototype.save=function(saveOnNativeFlag){if(saveOnNativeFlag){this.nativeContext.save();}var props=this.cTr.props;if(this._length<=this.cArrPos){this.duplicate();}var currentStack=this.stack[this.cArrPos];var i;for(i=0;i<16;i+=1){currentStack.transform[i]=props[i];}this.cArrPos+=1;var newStack=this.stack[this.cArrPos];newStack.opacity=currentStack.opacity;newStack.fillStyle=currentStack.fillStyle;newStack.strokeStyle=currentStack.strokeStyle;newStack.lineWidth=currentStack.lineWidth;newStack.lineCap=currentStack.lineCap;newStack.lineJoin=currentStack.lineJoin;newStack.miterLimit=currentStack.miterLimit;};CVContextData.prototype.setOpacity=function(value){this.stack[this.cArrPos].opacity=value;};CVContextData.prototype.setContext=function(value){this.nativeContext=value;};CVContextData.prototype.fillStyle=function(value){if(this.stack[this.cArrPos].fillStyle!==value){this.currentFillStyle=value;this.stack[this.cArrPos].fillStyle=value;}};CVContextData.prototype.strokeStyle=function(value){if(this.stack[this.cArrPos].strokeStyle!==value){this.currentStrokeStyle=value;this.stack[this.cArrPos].strokeStyle=value;}};CVContextData.prototype.lineWidth=function(value){if(this.stack[this.cArrPos].lineWidth!==value){this.currentLineWidth=value;this.stack[this.cArrPos].lineWidth=value;}};CVContextData.prototype.lineCap=function(value){if(this.stack[this.cArrPos].lineCap!==value){this.currentLineCap=value;this.stack[this.cArrPos].lineCap=value;}};CVContextData.prototype.lineJoin=function(value){if(this.stack[this.cArrPos].lineJoin!==value){this.currentLineJoin=value;this.stack[this.cArrPos].lineJoin=value;}};CVContextData.prototype.miterLimit=function(value){if(this.stack[this.cArrPos].miterLimit!==value){this.currentMiterLimit=value;this.stack[this.cArrPos].miterLimit=value;}};CVContextData.prototype.transform=function(props){this.transformMat.cloneFromProps(props);// Taking the last transform value from the stored stack of transforms
		var currentTransform=this.cTr;// Applying the last transform value after the new transform to respect the order of transformations
		this.transformMat.multiply(currentTransform);// Storing the new transformed value in the stored transform
		currentTransform.cloneFromProps(this.transformMat.props);var trProps=currentTransform.props;// Applying the new transform to the canvas
		this.nativeContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);};CVContextData.prototype.opacity=function(op){var currentOpacity=this.stack[this.cArrPos].opacity;currentOpacity*=op<0?0:op;if(this.stack[this.cArrPos].opacity!==currentOpacity){if(this.currentOpacity!==op){this.nativeContext.globalAlpha=op;this.currentOpacity=op;}this.stack[this.cArrPos].opacity=currentOpacity;}};CVContextData.prototype.fill=function(rule){if(this.appliedFillStyle!==this.currentFillStyle){this.appliedFillStyle=this.currentFillStyle;this.nativeContext.fillStyle=this.appliedFillStyle;}this.nativeContext.fill(rule);};CVContextData.prototype.fillRect=function(x,y,w,h){if(this.appliedFillStyle!==this.currentFillStyle){this.appliedFillStyle=this.currentFillStyle;this.nativeContext.fillStyle=this.appliedFillStyle;}this.nativeContext.fillRect(x,y,w,h);};CVContextData.prototype.stroke=function(){if(this.appliedStrokeStyle!==this.currentStrokeStyle){this.appliedStrokeStyle=this.currentStrokeStyle;this.nativeContext.strokeStyle=this.appliedStrokeStyle;}if(this.appliedLineWidth!==this.currentLineWidth){this.appliedLineWidth=this.currentLineWidth;this.nativeContext.lineWidth=this.appliedLineWidth;}if(this.appliedLineCap!==this.currentLineCap){this.appliedLineCap=this.currentLineCap;this.nativeContext.lineCap=this.appliedLineCap;}if(this.appliedLineJoin!==this.currentLineJoin){this.appliedLineJoin=this.currentLineJoin;this.nativeContext.lineJoin=this.appliedLineJoin;}if(this.appliedMiterLimit!==this.currentMiterLimit){this.appliedMiterLimit=this.currentMiterLimit;this.nativeContext.miterLimit=this.appliedMiterLimit;}this.nativeContext.stroke();};function CVCompElement(data,globalData,comp){this.completeLayers=false;this.layers=data.layers;this.pendingElements=[];this.elements=createSizedArray(this.layers.length);this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([CanvasRendererBase,ICompElement,CVBaseElement],CVCompElement);CVCompElement.prototype.renderInnerContent=function(){var ctx=this.canvasContext;ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(this.data.w,0);ctx.lineTo(this.data.w,this.data.h);ctx.lineTo(0,this.data.h);ctx.lineTo(0,0);ctx.clip();var i;var len=this.layers.length;for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}};CVCompElement.prototype.destroy=function(){var i;var len=this.layers.length;for(i=len-1;i>=0;i-=1){if(this.elements[i]){this.elements[i].destroy();}}this.layers=null;this.elements=null;};CVCompElement.prototype.createComp=function(data){return new CVCompElement(data,this.globalData,this);};function CanvasRenderer(animationItem,config){this.animationItem=animationItem;this.renderConfig={clearCanvas:config&&config.clearCanvas!==undefined?config.clearCanvas:true,context:config&&config.context||null,progressiveLoad:config&&config.progressiveLoad||false,preserveAspectRatio:config&&config.preserveAspectRatio||'xMidYMid meet',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',contentVisibility:config&&config.contentVisibility||'visible',className:config&&config.className||'',id:config&&config.id||'',runExpressions:!config||config.runExpressions===undefined||config.runExpressions};this.renderConfig.dpr=config&&config.dpr||1;if(this.animationItem.wrapper){this.renderConfig.dpr=config&&config.dpr||window.devicePixelRatio||1;}this.renderedFrame=-1;this.globalData={frameNum:-1,_mdf:false,renderConfig:this.renderConfig,currentGlobalAlpha:-1};this.contextData=new CVContextData();this.elements=[];this.pendingElements=[];this.transformMat=new Matrix();this.completeLayers=false;this.rendererType='canvas';if(this.renderConfig.clearCanvas){this.ctxTransform=this.contextData.transform.bind(this.contextData);this.ctxOpacity=this.contextData.opacity.bind(this.contextData);this.ctxFillStyle=this.contextData.fillStyle.bind(this.contextData);this.ctxStrokeStyle=this.contextData.strokeStyle.bind(this.contextData);this.ctxLineWidth=this.contextData.lineWidth.bind(this.contextData);this.ctxLineCap=this.contextData.lineCap.bind(this.contextData);this.ctxLineJoin=this.contextData.lineJoin.bind(this.contextData);this.ctxMiterLimit=this.contextData.miterLimit.bind(this.contextData);this.ctxFill=this.contextData.fill.bind(this.contextData);this.ctxFillRect=this.contextData.fillRect.bind(this.contextData);this.ctxStroke=this.contextData.stroke.bind(this.contextData);this.save=this.contextData.save.bind(this.contextData);}}extendPrototype([CanvasRendererBase],CanvasRenderer);CanvasRenderer.prototype.createComp=function(data){return new CVCompElement(data,this.globalData,this);};function HBaseElement(){}HBaseElement.prototype={checkBlendMode:function checkBlendMode(){},initRendererElement:function initRendererElement(){this.baseElement=createTag(this.data.tg||'div');if(this.data.hasMask){this.svgElement=createNS('svg');this.layerElement=createNS('g');this.maskedElement=this.layerElement;this.svgElement.appendChild(this.layerElement);this.baseElement.appendChild(this.svgElement);}else {this.layerElement=this.baseElement;}styleDiv(this.baseElement);},createContainerElements:function createContainerElements(){this.renderableEffectsManager=new CVEffects(this);this.transformedElement=this.baseElement;this.maskedElement=this.layerElement;if(this.data.ln){this.layerElement.setAttribute('id',this.data.ln);}if(this.data.cl){this.layerElement.setAttribute('class',this.data.cl);}if(this.data.bm!==0){this.setBlendMode();}},renderElement:function renderElement(){var transformedElementStyle=this.transformedElement?this.transformedElement.style:{};if(this.finalTransform._matMdf){var matrixValue=this.finalTransform.mat.toCSS();transformedElementStyle.transform=matrixValue;transformedElementStyle.webkitTransform=matrixValue;}if(this.finalTransform._opMdf){transformedElementStyle.opacity=this.finalTransform.mProp.o.v;}},renderFrame:function renderFrame(){// If it is exported as hidden (data.hd === true) no need to render
		// If it is not visible no need to render
		if(this.data.hd||this.hidden){return;}this.renderTransform();this.renderRenderable();this.renderElement();this.renderInnerContent();if(this._isFirstFrame){this._isFirstFrame=false;}},destroy:function destroy(){this.layerElement=null;this.transformedElement=null;if(this.matteElement){this.matteElement=null;}if(this.maskManager){this.maskManager.destroy();this.maskManager=null;}},createRenderableComponents:function createRenderableComponents(){this.maskManager=new MaskElement(this.data,this,this.globalData);},addEffects:function addEffects(){},setMatte:function setMatte(){}};HBaseElement.prototype.getBaseElement=SVGBaseElement.prototype.getBaseElement;HBaseElement.prototype.destroyBaseElement=HBaseElement.prototype.destroy;HBaseElement.prototype.buildElementParenting=BaseRenderer.prototype.buildElementParenting;function HSolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],HSolidElement);HSolidElement.prototype.createContent=function(){var rect;if(this.data.hasMask){rect=createNS('rect');rect.setAttribute('width',this.data.sw);rect.setAttribute('height',this.data.sh);rect.setAttribute('fill',this.data.sc);this.svgElement.setAttribute('width',this.data.sw);this.svgElement.setAttribute('height',this.data.sh);}else {rect=createTag('div');rect.style.width=this.data.sw+'px';rect.style.height=this.data.sh+'px';rect.style.backgroundColor=this.data.sc;}this.layerElement.appendChild(rect);};function HShapeElement(data,globalData,comp){// List of drawable elements
		this.shapes=[];// Full shape data
		this.shapesData=data.shapes;// List of styles that will be applied to shapes
		this.stylesList=[];// List of modifiers that will be applied to shapes
		this.shapeModifiers=[];// List of items in shape tree
		this.itemsData=[];// List of items in previous shape tree
		this.processedElements=[];// List of animated components
		this.animatedContents=[];this.shapesContainer=createNS('g');this.initElement(data,globalData,comp);// Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
		// List of elements that have been created
		this.prevViewData=[];this.currentBBox={x:999999,y:-999999,h:0,w:0};}extendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement],HShapeElement);HShapeElement.prototype._renderShapeFrame=HShapeElement.prototype.renderInnerContent;HShapeElement.prototype.createContent=function(){var cont;this.baseElement.style.fontSize=0;if(this.data.hasMask){this.layerElement.appendChild(this.shapesContainer);cont=this.svgElement;}else {cont=createNS('svg');var size=this.comp.data?this.comp.data:this.globalData.compSize;cont.setAttribute('width',size.w);cont.setAttribute('height',size.h);cont.appendChild(this.shapesContainer);this.layerElement.appendChild(cont);}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0,[],true);this.filterUniqueShapes();this.shapeCont=cont;};HShapeElement.prototype.getTransformedPoint=function(transformers,point){var i;var len=transformers.length;for(i=0;i<len;i+=1){point=transformers[i].mProps.v.applyToPointArray(point[0],point[1],0);}return point;};HShapeElement.prototype.calculateShapeBoundingBox=function(item,boundingBox){var shape=item.sh.v;var transformers=item.transformers;var i;var len=shape._length;var vPoint;var oPoint;var nextIPoint;var nextVPoint;if(len<=1){return;}for(i=0;i<len-1;i+=1){vPoint=this.getTransformedPoint(transformers,shape.v[i]);oPoint=this.getTransformedPoint(transformers,shape.o[i]);nextIPoint=this.getTransformedPoint(transformers,shape.i[i+1]);nextVPoint=this.getTransformedPoint(transformers,shape.v[i+1]);this.checkBounds(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox);}if(shape.c){vPoint=this.getTransformedPoint(transformers,shape.v[i]);oPoint=this.getTransformedPoint(transformers,shape.o[i]);nextIPoint=this.getTransformedPoint(transformers,shape.i[0]);nextVPoint=this.getTransformedPoint(transformers,shape.v[0]);this.checkBounds(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox);}};HShapeElement.prototype.checkBounds=function(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox){this.getBoundsOfCurve(vPoint,oPoint,nextIPoint,nextVPoint);var bounds=this.shapeBoundingBox;boundingBox.x=bmMin(bounds.left,boundingBox.x);boundingBox.xMax=bmMax(bounds.right,boundingBox.xMax);boundingBox.y=bmMin(bounds.top,boundingBox.y);boundingBox.yMax=bmMax(bounds.bottom,boundingBox.yMax);};HShapeElement.prototype.shapeBoundingBox={left:0,right:0,top:0,bottom:0};HShapeElement.prototype.tempBoundingBox={x:0,xMax:0,y:0,yMax:0,width:0,height:0};HShapeElement.prototype.getBoundsOfCurve=function(p0,p1,p2,p3){var bounds=[[p0[0],p3[0]],[p0[1],p3[1]]];for(var a,b,c,t,b2ac,t1,t2,i=0;i<2;++i){// eslint-disable-line no-plusplus
		b=6*p0[i]-12*p1[i]+6*p2[i];a=-3*p0[i]+9*p1[i]-9*p2[i]+3*p3[i];c=3*p1[i]-3*p0[i];b|=0;// eslint-disable-line no-bitwise
		a|=0;// eslint-disable-line no-bitwise
		c|=0;// eslint-disable-line no-bitwise
		if(a===0&&b===0);else if(a===0){t=-c/b;if(t>0&&t<1){bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));}}else {b2ac=b*b-4*c*a;if(b2ac>=0){t1=(-b+bmSqrt(b2ac))/(2*a);if(t1>0&&t1<1)bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));t2=(-b-bmSqrt(b2ac))/(2*a);if(t2>0&&t2<1)bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));}}}this.shapeBoundingBox.left=bmMin.apply(null,bounds[0]);this.shapeBoundingBox.top=bmMin.apply(null,bounds[1]);this.shapeBoundingBox.right=bmMax.apply(null,bounds[0]);this.shapeBoundingBox.bottom=bmMax.apply(null,bounds[1]);};HShapeElement.prototype.calculateF=function(t,p0,p1,p2,p3,i){return bmPow(1-t,3)*p0[i]+3*bmPow(1-t,2)*t*p1[i]+3*(1-t)*bmPow(t,2)*p2[i]+bmPow(t,3)*p3[i];};HShapeElement.prototype.calculateBoundingBox=function(itemsData,boundingBox){var i;var len=itemsData.length;for(i=0;i<len;i+=1){if(itemsData[i]&&itemsData[i].sh){this.calculateShapeBoundingBox(itemsData[i],boundingBox);}else if(itemsData[i]&&itemsData[i].it){this.calculateBoundingBox(itemsData[i].it,boundingBox);}else if(itemsData[i]&&itemsData[i].style&&itemsData[i].w){this.expandStrokeBoundingBox(itemsData[i].w,boundingBox);}}};HShapeElement.prototype.expandStrokeBoundingBox=function(widthProperty,boundingBox){var width=0;if(widthProperty.keyframes){for(var i=0;i<widthProperty.keyframes.length;i+=1){var kfw=widthProperty.keyframes[i].s;if(kfw>width){width=kfw;}}width*=widthProperty.mult;}else {width=widthProperty.v*widthProperty.mult;}boundingBox.x-=width;boundingBox.xMax+=width;boundingBox.y-=width;boundingBox.yMax+=width;};HShapeElement.prototype.currentBoxContains=function(box){return this.currentBBox.x<=box.x&&this.currentBBox.y<=box.y&&this.currentBBox.width+this.currentBBox.x>=box.x+box.width&&this.currentBBox.height+this.currentBBox.y>=box.y+box.height;};HShapeElement.prototype.renderInnerContent=function(){this._renderShapeFrame();if(!this.hidden&&(this._isFirstFrame||this._mdf)){var tempBoundingBox=this.tempBoundingBox;var max=999999;tempBoundingBox.x=max;tempBoundingBox.xMax=-max;tempBoundingBox.y=max;tempBoundingBox.yMax=-max;this.calculateBoundingBox(this.itemsData,tempBoundingBox);tempBoundingBox.width=tempBoundingBox.xMax<tempBoundingBox.x?0:tempBoundingBox.xMax-tempBoundingBox.x;tempBoundingBox.height=tempBoundingBox.yMax<tempBoundingBox.y?0:tempBoundingBox.yMax-tempBoundingBox.y;// var tempBoundingBox = this.shapeCont.getBBox();
		if(this.currentBoxContains(tempBoundingBox)){return;}var changed=false;if(this.currentBBox.w!==tempBoundingBox.width){this.currentBBox.w=tempBoundingBox.width;this.shapeCont.setAttribute('width',tempBoundingBox.width);changed=true;}if(this.currentBBox.h!==tempBoundingBox.height){this.currentBBox.h=tempBoundingBox.height;this.shapeCont.setAttribute('height',tempBoundingBox.height);changed=true;}if(changed||this.currentBBox.x!==tempBoundingBox.x||this.currentBBox.y!==tempBoundingBox.y){this.currentBBox.w=tempBoundingBox.width;this.currentBBox.h=tempBoundingBox.height;this.currentBBox.x=tempBoundingBox.x;this.currentBBox.y=tempBoundingBox.y;this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);var shapeStyle=this.shapeCont.style;var shapeTransform='translate('+this.currentBBox.x+'px,'+this.currentBBox.y+'px)';shapeStyle.transform=shapeTransform;shapeStyle.webkitTransform=shapeTransform;}}};function HTextElement(data,globalData,comp){this.textSpans=[];this.textPaths=[];this.currentBBox={x:999999,y:-999999,h:0,w:0};this.renderType='svg';this.isMasked=false;this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],HTextElement);HTextElement.prototype.createContent=function(){this.isMasked=this.checkMasks();if(this.isMasked){this.renderType='svg';this.compW=this.comp.data.w;this.compH=this.comp.data.h;this.svgElement.setAttribute('width',this.compW);this.svgElement.setAttribute('height',this.compH);var g=createNS('g');this.maskedElement.appendChild(g);this.innerElem=g;}else {this.renderType='html';this.innerElem=this.layerElement;}this.checkParenting();};HTextElement.prototype.buildNewText=function(){var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData.l?documentData.l.length:0);var innerElemStyle=this.innerElem.style;var textColor=documentData.fc?this.buildColor(documentData.fc):'rgba(0,0,0,0)';innerElemStyle.fill=textColor;innerElemStyle.color=textColor;if(documentData.sc){innerElemStyle.stroke=this.buildColor(documentData.sc);innerElemStyle.strokeWidth=documentData.sw+'px';}var fontData=this.globalData.fontManager.getFontByName(documentData.f);if(!this.globalData.fontManager.chars){innerElemStyle.fontSize=documentData.finalSize+'px';innerElemStyle.lineHeight=documentData.finalSize+'px';if(fontData.fClass){this.innerElem.className=fontData.fClass;}else {innerElemStyle.fontFamily=fontData.fFamily;var fWeight=documentData.fWeight;var fStyle=documentData.fStyle;innerElemStyle.fontStyle=fStyle;innerElemStyle.fontWeight=fWeight;}}var i;var len;var letters=documentData.l;len=letters.length;var tSpan;var tParent;var tCont;var matrixHelper=this.mHelper;var shapes;var shapeStr='';var cnt=0;for(i=0;i<len;i+=1){if(this.globalData.fontManager.chars){if(!this.textPaths[cnt]){tSpan=createNS('path');tSpan.setAttribute('stroke-linecap',lineCapEnum[1]);tSpan.setAttribute('stroke-linejoin',lineJoinEnum[2]);tSpan.setAttribute('stroke-miterlimit','4');}else {tSpan=this.textPaths[cnt];}if(!this.isMasked){if(this.textSpans[cnt]){tParent=this.textSpans[cnt];tCont=tParent.children[0];}else {tParent=createTag('div');tParent.style.lineHeight=0;tCont=createNS('svg');tCont.appendChild(tSpan);styleDiv(tParent);}}}else if(!this.isMasked){if(this.textSpans[cnt]){tParent=this.textSpans[cnt];tSpan=this.textPaths[cnt];}else {tParent=createTag('span');styleDiv(tParent);tSpan=createTag('span');styleDiv(tSpan);tParent.appendChild(tSpan);}}else {tSpan=this.textPaths[cnt]?this.textPaths[cnt]:createNS('text');}// tSpan.setAttribute('visibility', 'hidden');
		if(this.globalData.fontManager.chars){var charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);var shapeData;if(charData){shapeData=charData.data;}else {shapeData=null;}matrixHelper.reset();if(shapeData&&shapeData.shapes&&shapeData.shapes.length){shapes=shapeData.shapes[0].it;matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);shapeStr=this.createPathShape(matrixHelper,shapes);tSpan.setAttribute('d',shapeStr);}if(!this.isMasked){this.innerElem.appendChild(tParent);if(shapeData&&shapeData.shapes){// document.body.appendChild is needed to get exact measure of shape
		document.body.appendChild(tCont);var boundingBox=tCont.getBBox();tCont.setAttribute('width',boundingBox.width+2);tCont.setAttribute('height',boundingBox.height+2);tCont.setAttribute('viewBox',boundingBox.x-1+' '+(boundingBox.y-1)+' '+(boundingBox.width+2)+' '+(boundingBox.height+2));var tContStyle=tCont.style;var tContTranslation='translate('+(boundingBox.x-1)+'px,'+(boundingBox.y-1)+'px)';tContStyle.transform=tContTranslation;tContStyle.webkitTransform=tContTranslation;letters[i].yOffset=boundingBox.y-1;}else {tCont.setAttribute('width',1);tCont.setAttribute('height',1);}tParent.appendChild(tCont);}else {this.innerElem.appendChild(tSpan);}}else {tSpan.textContent=letters[i].val;tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace','xml:space','preserve');if(!this.isMasked){this.innerElem.appendChild(tParent);//
		var tStyle=tSpan.style;var tSpanTranslation='translate3d(0,'+-documentData.finalSize/1.2+'px,0)';tStyle.transform=tSpanTranslation;tStyle.webkitTransform=tSpanTranslation;}else {this.innerElem.appendChild(tSpan);}}//
		if(!this.isMasked){this.textSpans[cnt]=tParent;}else {this.textSpans[cnt]=tSpan;}this.textSpans[cnt].style.display='block';this.textPaths[cnt]=tSpan;cnt+=1;}while(cnt<this.textSpans.length){this.textSpans[cnt].style.display='none';cnt+=1;}};HTextElement.prototype.renderInnerContent=function(){this.validateText();var svgStyle;if(this.data.singleShape){if(!this._isFirstFrame&&!this.lettersChangedFlag){return;}if(this.isMasked&&this.finalTransform._matMdf){// Todo Benchmark if using this is better than getBBox
		this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+-this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);svgStyle=this.svgElement.style;var translation='translate('+-this.finalTransform.mProp.p.v[0]+'px,'+-this.finalTransform.mProp.p.v[1]+'px)';svgStyle.transform=translation;svgStyle.webkitTransform=translation;}}this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);if(!this.lettersChangedFlag&&!this.textAnimator.lettersChangedFlag){return;}var i;var len;var count=0;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var textSpan;var textPath;for(i=0;i<len;i+=1){if(letters[i].n){count+=1;}else {textSpan=this.textSpans[i];textPath=this.textPaths[i];renderedLetter=renderedLetters[count];count+=1;if(renderedLetter._mdf.m){if(!this.isMasked){textSpan.style.webkitTransform=renderedLetter.m;textSpan.style.transform=renderedLetter.m;}else {textSpan.setAttribute('transform',renderedLetter.m);}}/// /textSpan.setAttribute('opacity',renderedLetter.o);
		textSpan.style.opacity=renderedLetter.o;if(renderedLetter.sw&&renderedLetter._mdf.sw){textPath.setAttribute('stroke-width',renderedLetter.sw);}if(renderedLetter.sc&&renderedLetter._mdf.sc){textPath.setAttribute('stroke',renderedLetter.sc);}if(renderedLetter.fc&&renderedLetter._mdf.fc){textPath.setAttribute('fill',renderedLetter.fc);textPath.style.color=renderedLetter.fc;}}}if(this.innerElem.getBBox&&!this.hidden&&(this._isFirstFrame||this._mdf)){var boundingBox=this.innerElem.getBBox();if(this.currentBBox.w!==boundingBox.width){this.currentBBox.w=boundingBox.width;this.svgElement.setAttribute('width',boundingBox.width);}if(this.currentBBox.h!==boundingBox.height){this.currentBBox.h=boundingBox.height;this.svgElement.setAttribute('height',boundingBox.height);}var margin=1;if(this.currentBBox.w!==boundingBox.width+margin*2||this.currentBBox.h!==boundingBox.height+margin*2||this.currentBBox.x!==boundingBox.x-margin||this.currentBBox.y!==boundingBox.y-margin){this.currentBBox.w=boundingBox.width+margin*2;this.currentBBox.h=boundingBox.height+margin*2;this.currentBBox.x=boundingBox.x-margin;this.currentBBox.y=boundingBox.y-margin;this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);svgStyle=this.svgElement.style;var svgTransform='translate('+this.currentBBox.x+'px,'+this.currentBBox.y+'px)';svgStyle.transform=svgTransform;svgStyle.webkitTransform=svgTransform;}}};function HCameraElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initHierarchy();var getProp=PropertyFactory.getProp;this.pe=getProp(this,data.pe,0,0,this);if(data.ks.p.s){this.px=getProp(this,data.ks.p.x,1,0,this);this.py=getProp(this,data.ks.p.y,1,0,this);this.pz=getProp(this,data.ks.p.z,1,0,this);}else {this.p=getProp(this,data.ks.p,1,0,this);}if(data.ks.a){this.a=getProp(this,data.ks.a,1,0,this);}if(data.ks.or.k.length&&data.ks.or.k[0].to){var i;var len=data.ks.or.k.length;for(i=0;i<len;i+=1){data.ks.or.k[i].to=null;data.ks.or.k[i].ti=null;}}this.or=getProp(this,data.ks.or,1,degToRads,this);this.or.sh=true;this.rx=getProp(this,data.ks.rx,0,degToRads,this);this.ry=getProp(this,data.ks.ry,0,degToRads,this);this.rz=getProp(this,data.ks.rz,0,degToRads,this);this.mat=new Matrix();this._prevMat=new Matrix();this._isFirstFrame=true;// TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
		this.finalTransform={mProp:this};}extendPrototype([BaseElement,FrameElement,HierarchyElement],HCameraElement);HCameraElement.prototype.setup=function(){var i;var len=this.comp.threeDElements.length;var comp;var perspectiveStyle;var containerStyle;for(i=0;i<len;i+=1){// [perspectiveElem,container]
		comp=this.comp.threeDElements[i];if(comp.type==='3d'){perspectiveStyle=comp.perspectiveElem.style;containerStyle=comp.container.style;var perspective=this.pe.v+'px';var origin='0px 0px 0px';var matrix='matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';perspectiveStyle.perspective=perspective;perspectiveStyle.webkitPerspective=perspective;containerStyle.transformOrigin=origin;containerStyle.mozTransformOrigin=origin;containerStyle.webkitTransformOrigin=origin;perspectiveStyle.transform=matrix;perspectiveStyle.webkitTransform=matrix;}}};HCameraElement.prototype.createElements=function(){};HCameraElement.prototype.hide=function(){};HCameraElement.prototype.renderFrame=function(){var _mdf=this._isFirstFrame;var i;var len;if(this.hierarchy){len=this.hierarchy.length;for(i=0;i<len;i+=1){_mdf=this.hierarchy[i].finalTransform.mProp._mdf||_mdf;}}if(_mdf||this.pe._mdf||this.p&&this.p._mdf||this.px&&(this.px._mdf||this.py._mdf||this.pz._mdf)||this.rx._mdf||this.ry._mdf||this.rz._mdf||this.or._mdf||this.a&&this.a._mdf){this.mat.reset();if(this.hierarchy){len=this.hierarchy.length-1;for(i=len;i>=0;i-=1){var mTransf=this.hierarchy[i].finalTransform.mProp;this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);}}if(this.p){this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);}else {this.mat.translate(-this.px.v,-this.py.v,this.pz.v);}if(this.a){var diffVector;if(this.p){diffVector=[this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];}else {diffVector=[this.px.v-this.a.v[0],this.py.v-this.a.v[1],this.pz.v-this.a.v[2]];}var mag=Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));// var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
		var lookDir=[diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];var lookLengthOnXZ=Math.sqrt(lookDir[2]*lookDir[2]+lookDir[0]*lookDir[0]);var mRotationX=Math.atan2(lookDir[1],lookLengthOnXZ);var mRotationY=Math.atan2(lookDir[0],-lookDir[2]);this.mat.rotateY(mRotationY).rotateX(-mRotationX);}this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);this.mat.translate(0,0,this.pe.v);var hasMatrixChanged=!this._prevMat.equals(this.mat);if((hasMatrixChanged||this.pe._mdf)&&this.comp.threeDElements){len=this.comp.threeDElements.length;var comp;var perspectiveStyle;var containerStyle;for(i=0;i<len;i+=1){comp=this.comp.threeDElements[i];if(comp.type==='3d'){if(hasMatrixChanged){var matValue=this.mat.toCSS();containerStyle=comp.container.style;containerStyle.transform=matValue;containerStyle.webkitTransform=matValue;}if(this.pe._mdf){perspectiveStyle=comp.perspectiveElem.style;perspectiveStyle.perspective=this.pe.v+'px';perspectiveStyle.webkitPerspective=this.pe.v+'px';}}}this.mat.clone(this._prevMat);}}this._isFirstFrame=false;};HCameraElement.prototype.prepareFrame=function(num){this.prepareProperties(num,true);};HCameraElement.prototype.destroy=function(){};HCameraElement.prototype.getBaseElement=function(){return null;};function HImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement],HImageElement);HImageElement.prototype.createContent=function(){var assetPath=this.globalData.getAssetsPath(this.assetData);var img=new Image();if(this.data.hasMask){this.imageElem=createNS('image');this.imageElem.setAttribute('width',this.assetData.w+'px');this.imageElem.setAttribute('height',this.assetData.h+'px');this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);this.layerElement.appendChild(this.imageElem);this.baseElement.setAttribute('width',this.assetData.w);this.baseElement.setAttribute('height',this.assetData.h);}else {this.layerElement.appendChild(img);}img.crossOrigin='anonymous';img.src=assetPath;if(this.data.ln){this.baseElement.setAttribute('id',this.data.ln);}};function HybridRendererBase(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.renderConfig={className:config&&config.className||'',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',hideOnTransparent:!(config&&config.hideOnTransparent===false),filterSize:{width:config&&config.filterSize&&config.filterSize.width||'400%',height:config&&config.filterSize&&config.filterSize.height||'400%',x:config&&config.filterSize&&config.filterSize.x||'-100%',y:config&&config.filterSize&&config.filterSize.y||'-100%'}};this.globalData={_mdf:false,frameNum:-1,renderConfig:this.renderConfig};this.pendingElements=[];this.elements=[];this.threeDElements=[];this.destroyed=false;this.camera=null;this.supports3d=true;this.rendererType='html';}extendPrototype([BaseRenderer],HybridRendererBase);HybridRendererBase.prototype.buildItem=SVGRenderer.prototype.buildItem;HybridRendererBase.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();}};HybridRendererBase.prototype.appendElementInPos=function(element,pos){var newDOMElement=element.getBaseElement();if(!newDOMElement){return;}var layer=this.layers[pos];if(!layer.ddd||!this.supports3d){if(this.threeDElements){this.addTo3dContainer(newDOMElement,pos);}else {var i=0;var nextDOMElement;var nextLayer;var tmpDOMElement;while(i<pos){if(this.elements[i]&&this.elements[i]!==true&&this.elements[i].getBaseElement){nextLayer=this.elements[i];tmpDOMElement=this.layers[i].ddd?this.getThreeDContainerByPos(i):nextLayer.getBaseElement();nextDOMElement=tmpDOMElement||nextDOMElement;}i+=1;}if(nextDOMElement){if(!layer.ddd||!this.supports3d){this.layerElement.insertBefore(newDOMElement,nextDOMElement);}}else if(!layer.ddd||!this.supports3d){this.layerElement.appendChild(newDOMElement);}}}else {this.addTo3dContainer(newDOMElement,pos);}};HybridRendererBase.prototype.createShape=function(data){if(!this.supports3d){return new SVGShapeElement(data,this.globalData,this);}return new HShapeElement(data,this.globalData,this);};HybridRendererBase.prototype.createText=function(data){if(!this.supports3d){return new SVGTextLottieElement(data,this.globalData,this);}return new HTextElement(data,this.globalData,this);};HybridRendererBase.prototype.createCamera=function(data){this.camera=new HCameraElement(data,this.globalData,this);return this.camera;};HybridRendererBase.prototype.createImage=function(data){if(!this.supports3d){return new IImageElement(data,this.globalData,this);}return new HImageElement(data,this.globalData,this);};HybridRendererBase.prototype.createSolid=function(data){if(!this.supports3d){return new ISolidElement(data,this.globalData,this);}return new HSolidElement(data,this.globalData,this);};HybridRendererBase.prototype.createNull=SVGRenderer.prototype.createNull;HybridRendererBase.prototype.getThreeDContainerByPos=function(pos){var i=0;var len=this.threeDElements.length;while(i<len){if(this.threeDElements[i].startPos<=pos&&this.threeDElements[i].endPos>=pos){return this.threeDElements[i].perspectiveElem;}i+=1;}return null;};HybridRendererBase.prototype.createThreeDContainer=function(pos,type){var perspectiveElem=createTag('div');var style;var containerStyle;styleDiv(perspectiveElem);var container=createTag('div');styleDiv(container);if(type==='3d'){style=perspectiveElem.style;style.width=this.globalData.compSize.w+'px';style.height=this.globalData.compSize.h+'px';var center='50% 50%';style.webkitTransformOrigin=center;style.mozTransformOrigin=center;style.transformOrigin=center;containerStyle=container.style;var matrix='matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';containerStyle.transform=matrix;containerStyle.webkitTransform=matrix;}perspectiveElem.appendChild(container);// this.resizerElem.appendChild(perspectiveElem);
		var threeDContainerData={container:container,perspectiveElem:perspectiveElem,startPos:pos,endPos:pos,type:type};this.threeDElements.push(threeDContainerData);return threeDContainerData;};HybridRendererBase.prototype.build3dContainers=function(){var i;var len=this.layers.length;var lastThreeDContainerData;var currentContainer='';for(i=0;i<len;i+=1){if(this.layers[i].ddd&&this.layers[i].ty!==3){if(currentContainer!=='3d'){currentContainer='3d';lastThreeDContainerData=this.createThreeDContainer(i,'3d');}lastThreeDContainerData.endPos=Math.max(lastThreeDContainerData.endPos,i);}else {if(currentContainer!=='2d'){currentContainer='2d';lastThreeDContainerData=this.createThreeDContainer(i,'2d');}lastThreeDContainerData.endPos=Math.max(lastThreeDContainerData.endPos,i);}}len=this.threeDElements.length;for(i=len-1;i>=0;i-=1){this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);}};HybridRendererBase.prototype.addTo3dContainer=function(elem,pos){var i=0;var len=this.threeDElements.length;while(i<len){if(pos<=this.threeDElements[i].endPos){var j=this.threeDElements[i].startPos;var nextElement;while(j<pos){if(this.elements[j]&&this.elements[j].getBaseElement){nextElement=this.elements[j].getBaseElement();}j+=1;}if(nextElement){this.threeDElements[i].container.insertBefore(elem,nextElement);}else {this.threeDElements[i].container.appendChild(elem);}break;}i+=1;}};HybridRendererBase.prototype.configAnimation=function(animData){var resizerElem=createTag('div');var wrapper=this.animationItem.wrapper;var style=resizerElem.style;style.width=animData.w+'px';style.height=animData.h+'px';this.resizerElem=resizerElem;styleDiv(resizerElem);style.transformStyle='flat';style.mozTransformStyle='flat';style.webkitTransformStyle='flat';if(this.renderConfig.className){resizerElem.setAttribute('class',this.renderConfig.className);}wrapper.appendChild(resizerElem);style.overflow='hidden';var svg=createNS('svg');svg.setAttribute('width','1');svg.setAttribute('height','1');styleDiv(svg);this.resizerElem.appendChild(svg);var defs=createNS('defs');svg.appendChild(defs);this.data=animData;// Mask animation
		this.setupGlobalData(animData,svg);this.globalData.defs=defs;this.layers=animData.layers;this.layerElement=this.resizerElem;this.build3dContainers();this.updateContainerSize();};HybridRendererBase.prototype.destroy=function(){if(this.animationItem.wrapper){this.animationItem.wrapper.innerText='';}this.animationItem.container=null;this.globalData.defs=null;var i;var len=this.layers?this.layers.length:0;for(i=0;i<len;i+=1){if(this.elements[i]&&this.elements[i].destroy){this.elements[i].destroy();}}this.elements.length=0;this.destroyed=true;this.animationItem=null;};HybridRendererBase.prototype.updateContainerSize=function(){var elementWidth=this.animationItem.wrapper.offsetWidth;var elementHeight=this.animationItem.wrapper.offsetHeight;var elementRel=elementWidth/elementHeight;var animationRel=this.globalData.compSize.w/this.globalData.compSize.h;var sx;var sy;var tx;var ty;if(animationRel>elementRel){sx=elementWidth/this.globalData.compSize.w;sy=elementWidth/this.globalData.compSize.w;tx=0;ty=(elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2;}else {sx=elementHeight/this.globalData.compSize.h;sy=elementHeight/this.globalData.compSize.h;tx=(elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;ty=0;}var style=this.resizerElem.style;style.webkitTransform='matrix3d('+sx+',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';style.transform=style.webkitTransform;};HybridRendererBase.prototype.renderFrame=SVGRenderer.prototype.renderFrame;HybridRendererBase.prototype.hide=function(){this.resizerElem.style.display='none';};HybridRendererBase.prototype.show=function(){this.resizerElem.style.display='block';};HybridRendererBase.prototype.initItems=function(){this.buildAllItems();if(this.camera){this.camera.setup();}else {var cWidth=this.globalData.compSize.w;var cHeight=this.globalData.compSize.h;var i;var len=this.threeDElements.length;for(i=0;i<len;i+=1){var style=this.threeDElements[i].perspectiveElem.style;style.webkitPerspective=Math.sqrt(Math.pow(cWidth,2)+Math.pow(cHeight,2))+'px';style.perspective=style.webkitPerspective;}}};HybridRendererBase.prototype.searchExtraCompositions=function(assets){var i;var len=assets.length;var floatingContainer=createTag('div');for(i=0;i<len;i+=1){if(assets[i].xt){var comp=this.createComp(assets[i],floatingContainer,this.globalData.comp,null);comp.initExpressions();this.globalData.projectInterface.registerComposition(comp);}}};function HCompElement(data,globalData,comp){this.layers=data.layers;this.supports3d=!data.hasMask;this.completeLayers=false;this.pendingElements=[];this.elements=this.layers?createSizedArray(this.layers.length):[];this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([HybridRendererBase,ICompElement,HBaseElement],HCompElement);HCompElement.prototype._createBaseContainerElements=HCompElement.prototype.createContainerElements;HCompElement.prototype.createContainerElements=function(){this._createBaseContainerElements();// divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
		if(this.data.hasMask){this.svgElement.setAttribute('width',this.data.w);this.svgElement.setAttribute('height',this.data.h);this.transformedElement=this.baseElement;}else {this.transformedElement=this.layerElement;}};HCompElement.prototype.addTo3dContainer=function(elem,pos){var j=0;var nextElement;while(j<pos){if(this.elements[j]&&this.elements[j].getBaseElement){nextElement=this.elements[j].getBaseElement();}j+=1;}if(nextElement){this.layerElement.insertBefore(elem,nextElement);}else {this.layerElement.appendChild(elem);}};HCompElement.prototype.createComp=function(data){if(!this.supports3d){return new SVGCompElement(data,this.globalData,this);}return new HCompElement(data,this.globalData,this);};function HybridRenderer(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.renderConfig={className:config&&config.className||'',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',hideOnTransparent:!(config&&config.hideOnTransparent===false),filterSize:{width:config&&config.filterSize&&config.filterSize.width||'400%',height:config&&config.filterSize&&config.filterSize.height||'400%',x:config&&config.filterSize&&config.filterSize.x||'-100%',y:config&&config.filterSize&&config.filterSize.y||'-100%'},runExpressions:!config||config.runExpressions===undefined||config.runExpressions};this.globalData={_mdf:false,frameNum:-1,renderConfig:this.renderConfig};this.pendingElements=[];this.elements=[];this.threeDElements=[];this.destroyed=false;this.camera=null;this.supports3d=true;this.rendererType='html';}extendPrototype([HybridRendererBase],HybridRenderer);HybridRenderer.prototype.createComp=function(data){if(!this.supports3d){return new SVGCompElement(data,this.globalData,this);}return new HCompElement(data,this.globalData,this);};var CompExpressionInterface=function(){return function(comp){function _thisLayerFunction(name){var i=0;var len=comp.layers.length;while(i<len){if(comp.layers[i].nm===name||comp.layers[i].ind===name){return comp.elements[i].layerInterface;}i+=1;}return null;// return {active:false};
		}Object.defineProperty(_thisLayerFunction,'_name',{value:comp.data.nm});_thisLayerFunction.layer=_thisLayerFunction;_thisLayerFunction.pixelAspect=1;_thisLayerFunction.height=comp.data.h||comp.globalData.compSize.h;_thisLayerFunction.width=comp.data.w||comp.globalData.compSize.w;_thisLayerFunction.pixelAspect=1;_thisLayerFunction.frameDuration=1/comp.globalData.frameRate;_thisLayerFunction.displayStartTime=0;_thisLayerFunction.numLayers=comp.layers.length;return _thisLayerFunction;};}();function _typeof$2(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$2=function _typeof(obj){return typeof obj;};}else {_typeof$2=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$2(obj);}/* eslint-disable */ /*
		   Copyright 2014 David Bau.

		   Permission is hereby granted, free of charge, to any person obtaining
		   a copy of this software and associated documentation files (the
		   "Software"), to deal in the Software without restriction, including
		   without limitation the rights to use, copy, modify, merge, publish,
		   distribute, sublicense, and/or sell copies of the Software, and to
		   permit persons to whom the Software is furnished to do so, subject to
		   the following conditions:

		   The above copyright notice and this permission notice shall be
		   included in all copies or substantial portions of the Software.

		   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
		   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
		   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
		   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
		   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
		   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

		   */function seedRandom(pool,math){//
		// The following constants are related to IEEE 754 limits.
		//
		var global=this,width=256,// each RC4 output is 0 <= x < 256
		chunks=6,// at least six RC4 outputs for each double
		digits=52,// there are 52 significant digits in a double
		rngname='random',// rngname: name for Math.random and Math.seedrandom
		startdenom=math.pow(width,chunks),significance=math.pow(2,digits),overflow=significance*2,mask=width-1,nodecrypto;// node.js crypto module, initialized at the bottom.
		//
		// seedrandom()
		// This is the seedrandom function described above.
		//
		function seedrandom(seed,options,callback){var key=[];options=options===true?{entropy:true}:options||{};// Flatten the seed string or build one from local entropy if needed.
		var shortseed=mixkey(flatten(options.entropy?[seed,tostring(pool)]:seed===null?autoseed():seed,3),key);// Use the seed to initialize an ARC4 generator.
		var arc4=new ARC4(key);// This function returns a random double in [0, 1) that contains
		// randomness in every bit of the mantissa of the IEEE 754 value.
		var prng=function prng(){var n=arc4.g(chunks),// Start with a numerator n < 2 ^ 48
		d=startdenom,//   and denominator d = 2 ^ 48.
		x=0;//   and no 'extra last byte'.
		while(n<significance){// Fill up all significant digits by
		n=(n+x)*width;//   shifting numerator and
		d*=width;//   denominator and generating a
		x=arc4.g(1);//   new least-significant-byte.
		}while(n>=overflow){// To avoid rounding up, before adding
		n/=2;//   last byte, shift everything
		d/=2;//   right using integer math until
		x>>>=1;//   we have exactly the desired bits.
		}return (n+x)/d;// Form the number within [0, 1).
		};prng.int32=function(){return arc4.g(4)|0;};prng.quick=function(){return arc4.g(4)/0x100000000;};prng["double"]=prng;// Mix the randomness into accumulated entropy.
		mixkey(tostring(arc4.S),pool);// Calling convention: what to return as a function of prng, seed, is_math.
		return (options.pass||callback||function(prng,seed,is_math_call,state){if(state){// Load the arc4 state from the given state if it has an S array.
		if(state.S){copy(state,arc4);}// Only provide the .state method if requested via options.state.
		prng.state=function(){return copy(arc4,{});};}// If called as a method of Math (Math.seedrandom()), mutate
		// Math.random because that is how seedrandom.js has worked since v1.0.
		if(is_math_call){math[rngname]=prng;return seed;}// Otherwise, it is a newer calling convention, so return the
		// prng directly.
		else return prng;})(prng,shortseed,'global'in options?options.global:this==math,options.state);}math['seed'+rngname]=seedrandom;//
		// ARC4
		//
		// An ARC4 implementation.  The constructor takes a key in the form of
		// an array of at most (width) integers that should be 0 <= x < (width).
		//
		// The g(count) method returns a pseudorandom integer that concatenates
		// the next (count) outputs from ARC4.  Its return value is a number x
		// that is in the range 0 <= x < (width ^ count).
		//
		function ARC4(key){var t,keylen=key.length,me=this,i=0,j=me.i=me.j=0,s=me.S=[];// The empty key [] is treated as [0].
		if(!keylen){key=[keylen++];}// Set up S using the standard key scheduling algorithm.
		while(i<width){s[i]=i++;}for(i=0;i<width;i++){s[i]=s[j=mask&j+key[i%keylen]+(t=s[i])];s[j]=t;}// The "g" method returns the next (count) outputs as one number.
		me.g=function(count){// Using instance members instead of closure state nearly doubles speed.
		var t,r=0,i=me.i,j=me.j,s=me.S;while(count--){t=s[i=mask&i+1];r=r*width+s[mask&(s[i]=s[j=mask&j+t])+(s[j]=t)];}me.i=i;me.j=j;return r;// For robust unpredictability, the function call below automatically
		// discards an initial batch of values.  This is called RC4-drop[256].
		// See http://google.com/search?q=rsa+fluhrer+response&btnI
		};}//
		// copy()
		// Copies internal state of ARC4 to or from a plain object.
		//
		function copy(f,t){t.i=f.i;t.j=f.j;t.S=f.S.slice();return t;}//
		// flatten()
		// Converts an object tree to nested arrays of strings.
		//
		function flatten(obj,depth){var result=[],typ=_typeof$2(obj),prop;if(depth&&typ=='object'){for(prop in obj){try{result.push(flatten(obj[prop],depth-1));}catch(e){}}}return result.length?result:typ=='string'?obj:obj+'\0';}//
		// mixkey()
		// Mixes a string seed into a key that is an array of integers, and
		// returns a shortened string seed that is equivalent to the result key.
		//
		function mixkey(seed,key){var stringseed=seed+'',smear,j=0;while(j<stringseed.length){key[mask&j]=mask&(smear^=key[mask&j]*19)+stringseed.charCodeAt(j++);}return tostring(key);}//
		// autoseed()
		// Returns an object for autoseeding, using window.crypto and Node crypto
		// module if available.
		//
		function autoseed(){try{if(nodecrypto);var out=new Uint8Array(width);(global.crypto||global.msCrypto).getRandomValues(out);return tostring(out);}catch(e){var browser=global.navigator,plugins=browser&&browser.plugins;return [+new Date(),global,plugins,global.screen,tostring(pool)];}}//
		// tostring()
		// Converts an array of charcodes to a string
		//
		function tostring(a){return String.fromCharCode.apply(0,a);}//
		// When seedrandom.js is loaded, we immediately mix a few bits
		// from the built-in RNG into the entropy pool.  Because we do
		// not want to interfere with deterministic PRNG state later,
		// seedrandom will not call math.random on its own again after
		// initialization.
		//
		mixkey(math.random(),pool);//
		// Nodejs and AMD support: export the implementation as a module using
		// either convention.
		//
		// End anonymous scope, and pass initial values.
		}function initialize$2(BMMath){seedRandom([],BMMath);}var propTypes={SHAPE:'shape'};function _typeof$1(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$1=function _typeof(obj){return typeof obj;};}else {_typeof$1=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$1(obj);}var ExpressionManager=function(){var ob={};var Math=BMMath;var window=null;var document=null;var XMLHttpRequest=null;var fetch=null;var frames=null;var _lottieGlobal={};initialize$2(BMMath);function resetFrame(){_lottieGlobal={};}function $bm_isInstanceOfArray(arr){return arr.constructor===Array||arr.constructor===Float32Array;}function isNumerable(tOfV,v){return tOfV==='number'||v instanceof Number||tOfV==='boolean'||tOfV==='string';}function $bm_neg(a){var tOfA=_typeof$1(a);if(tOfA==='number'||a instanceof Number||tOfA==='boolean'){return -a;}if($bm_isInstanceOfArray(a)){var i;var lenA=a.length;var retArr=[];for(i=0;i<lenA;i+=1){retArr[i]=-a[i];}return retArr;}if(a.propType){return a.v;}return -a;}var easeInBez=BezierFactory.getBezierEasing(0.333,0,0.833,0.833,'easeIn').get;var easeOutBez=BezierFactory.getBezierEasing(0.167,0.167,0.667,1,'easeOut').get;var easeInOutBez=BezierFactory.getBezierEasing(0.33,0,0.667,1,'easeInOut').get;function sum(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)||tOfA==='string'||tOfB==='string'){return a+b;}if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){a=a.slice(0);a[0]+=b;return a;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){b=b.slice(0);b[0]=a+b[0];return b;}if($bm_isInstanceOfArray(a)&&$bm_isInstanceOfArray(b)){var i=0;var lenA=a.length;var lenB=b.length;var retArr=[];while(i<lenA||i<lenB){if((typeof a[i]==='number'||a[i]instanceof Number)&&(typeof b[i]==='number'||b[i]instanceof Number)){retArr[i]=a[i]+b[i];}else {retArr[i]=b[i]===undefined?a[i]:a[i]||b[i];}i+=1;}return retArr;}return 0;}var add=sum;function sub(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){if(tOfA==='string'){a=parseInt(a,10);}if(tOfB==='string'){b=parseInt(b,10);}return a-b;}if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){a=a.slice(0);a[0]-=b;return a;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){b=b.slice(0);b[0]=a-b[0];return b;}if($bm_isInstanceOfArray(a)&&$bm_isInstanceOfArray(b)){var i=0;var lenA=a.length;var lenB=b.length;var retArr=[];while(i<lenA||i<lenB){if((typeof a[i]==='number'||a[i]instanceof Number)&&(typeof b[i]==='number'||b[i]instanceof Number)){retArr[i]=a[i]-b[i];}else {retArr[i]=b[i]===undefined?a[i]:a[i]||b[i];}i+=1;}return retArr;}return 0;}function mul(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);var arr;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a*b;}var i;var len;if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){len=a.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a[i]*b;}return arr;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){len=b.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a*b[i];}return arr;}return 0;}function div(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);var arr;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a/b;}var i;var len;if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){len=a.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a[i]/b;}return arr;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){len=b.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a/b[i];}return arr;}return 0;}function mod(a,b){if(typeof a==='string'){a=parseInt(a,10);}if(typeof b==='string'){b=parseInt(b,10);}return a%b;}var $bm_sum=sum;var $bm_sub=sub;var $bm_mul=mul;var $bm_div=div;var $bm_mod=mod;function clamp(num,min,max){if(min>max){var mm=max;max=min;min=mm;}return Math.min(Math.max(num,min),max);}function radiansToDegrees(val){return val/degToRads;}var radians_to_degrees=radiansToDegrees;function degreesToRadians(val){return val*degToRads;}var degrees_to_radians=radiansToDegrees;var helperLengthArray=[0,0,0,0,0,0];function length(arr1,arr2){if(typeof arr1==='number'||arr1 instanceof Number){arr2=arr2||0;return Math.abs(arr1-arr2);}if(!arr2){arr2=helperLengthArray;}var i;var len=Math.min(arr1.length,arr2.length);var addedLength=0;for(i=0;i<len;i+=1){addedLength+=Math.pow(arr2[i]-arr1[i],2);}return Math.sqrt(addedLength);}function normalize(vec){return div(vec,length(vec));}function rgbToHsl(val){var r=val[0];var g=val[1];var b=val[2];var max=Math.max(r,g,b);var min=Math.min(r,g,b);var h;var s;var l=(max+min)/2;if(max===min){h=0;// achromatic
		s=0;// achromatic
		}else {var d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;}h/=6;}return [h,s,l,val[3]];}function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;}function hslToRgb(val){var h=val[0];var s=val[1];var l=val[2];var r;var g;var b;if(s===0){r=l;// achromatic
		b=l;// achromatic
		g=l;// achromatic
		}else {var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3);}return [r,g,b,val[3]];}function linear(t,tMin,tMax,value1,value2){if(value1===undefined||value2===undefined){value1=tMin;value2=tMax;tMin=0;tMax=1;}if(tMax<tMin){var _tMin=tMax;tMax=tMin;tMin=_tMin;}if(t<=tMin){return value1;}if(t>=tMax){return value2;}var perc=tMax===tMin?0:(t-tMin)/(tMax-tMin);if(!value1.length){return value1+(value2-value1)*perc;}var i;var len=value1.length;var arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=value1[i]+(value2[i]-value1[i])*perc;}return arr;}function random(min,max){if(max===undefined){if(min===undefined){min=0;max=1;}else {max=min;min=undefined;}}if(max.length){var i;var len=max.length;if(!min){min=createTypedArray('float32',len);}var arr=createTypedArray('float32',len);var rnd=BMMath.random();for(i=0;i<len;i+=1){arr[i]=min[i]+rnd*(max[i]-min[i]);}return arr;}if(min===undefined){min=0;}var rndm=BMMath.random();return min+rndm*(max-min);}function createPath(points,inTangents,outTangents,closed){var i;var len=points.length;var path=shapePool.newElement();path.setPathData(!!closed,len);var arrPlaceholder=[0,0];var inVertexPoint;var outVertexPoint;for(i=0;i<len;i+=1){inVertexPoint=inTangents&&inTangents[i]?inTangents[i]:arrPlaceholder;outVertexPoint=outTangents&&outTangents[i]?outTangents[i]:arrPlaceholder;path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0]+points[i][0],outVertexPoint[1]+points[i][1],inVertexPoint[0]+points[i][0],inVertexPoint[1]+points[i][1],i,true);}return path;}function initiateExpression(elem,data,property){// Bail out if we don't want expressions
		function noOp(_value){return _value;}if(!elem.globalData.renderConfig.runExpressions){return noOp;}var val=data.x;var needsVelocity=/velocity(?![\w\d])/.test(val);var _needsRandom=val.indexOf('random')!==-1;var elemType=elem.data.ty;var transform;var $bm_transform;var content;var effect;var thisProperty=property;thisProperty.valueAtTime=thisProperty.getValueAtTime;Object.defineProperty(thisProperty,'value',{get:function get(){return thisProperty.v;}});elem.comp.frameDuration=1/elem.comp.globalData.frameRate;elem.comp.displayStartTime=0;var inPoint=elem.data.ip/elem.comp.globalData.frameRate;var outPoint=elem.data.op/elem.comp.globalData.frameRate;var width=elem.data.sw?elem.data.sw:0;var height=elem.data.sh?elem.data.sh:0;var name=elem.data.nm;var loopIn;var loop_in;var loopOut;var loop_out;var smooth;var toWorld;var fromWorld;var fromComp;var toComp;var fromCompToSurface;var position;var rotation;var anchorPoint;var scale;var thisLayer;var thisComp;var mask;var valueAtTime;var velocityAtTime;var scoped_bm_rt;// val = val.replace(/(\\?"|')((http)(s)?(:\/))?\/.*?(\\?"|')/g, "\"\""); // deter potential network calls
		var expression_function=eval('[function _expression_function(){'+val+';scoped_bm_rt=$bm_rt}]')[0];// eslint-disable-line no-eval
		var numKeys=property.kf?data.k.length:0;var active=!this.data||this.data.hd!==true;var wiggle=function wiggle(freq,amp){var iWiggle;var j;var lenWiggle=this.pv.length?this.pv.length:1;var addedAmps=createTypedArray('float32',lenWiggle);freq=5;var iterations=Math.floor(time*freq);iWiggle=0;j=0;while(iWiggle<iterations){// var rnd = BMMath.random();
		for(j=0;j<lenWiggle;j+=1){addedAmps[j]+=-amp+amp*2*BMMath.random();// addedAmps[j] += -amp + amp*2*rnd;
		}iWiggle+=1;}// var rnd2 = BMMath.random();
		var periods=time*freq;var perc=periods-Math.floor(periods);var arr=createTypedArray('float32',lenWiggle);if(lenWiggle>1){for(j=0;j<lenWiggle;j+=1){arr[j]=this.pv[j]+addedAmps[j]+(-amp+amp*2*BMMath.random())*perc;// arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
		// arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
		}return arr;}return this.pv+addedAmps[0]+(-amp+amp*2*BMMath.random())*perc;}.bind(this);if(thisProperty.loopIn){loopIn=thisProperty.loopIn.bind(thisProperty);loop_in=loopIn;}if(thisProperty.loopOut){loopOut=thisProperty.loopOut.bind(thisProperty);loop_out=loopOut;}if(thisProperty.smooth){smooth=thisProperty.smooth.bind(thisProperty);}function loopInDuration(type,duration){return loopIn(type,duration,true);}function loopOutDuration(type,duration){return loopOut(type,duration,true);}if(this.getValueAtTime){valueAtTime=this.getValueAtTime.bind(this);}if(this.getVelocityAtTime){velocityAtTime=this.getVelocityAtTime.bind(this);}var comp=elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);function lookAt(elem1,elem2){var fVec=[elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];var pitch=Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;var yaw=-Math.atan2(fVec[1],fVec[2])/degToRads;return [yaw,pitch,0];}function easeOut(t,tMin,tMax,val1,val2){return applyEase(easeOutBez,t,tMin,tMax,val1,val2);}function easeIn(t,tMin,tMax,val1,val2){return applyEase(easeInBez,t,tMin,tMax,val1,val2);}function ease(t,tMin,tMax,val1,val2){return applyEase(easeInOutBez,t,tMin,tMax,val1,val2);}function applyEase(fn,t,tMin,tMax,val1,val2){if(val1===undefined){val1=tMin;val2=tMax;}else {t=(t-tMin)/(tMax-tMin);}if(t>1){t=1;}else if(t<0){t=0;}var mult=fn(t);if($bm_isInstanceOfArray(val1)){var iKey;var lenKey=val1.length;var arr=createTypedArray('float32',lenKey);for(iKey=0;iKey<lenKey;iKey+=1){arr[iKey]=(val2[iKey]-val1[iKey])*mult+val1[iKey];}return arr;}return (val2-val1)*mult+val1;}function nearestKey(time){var iKey;var lenKey=data.k.length;var index;var keyTime;if(!data.k.length||typeof data.k[0]==='number'){index=0;keyTime=0;}else {index=-1;time*=elem.comp.globalData.frameRate;if(time<data.k[0].t){index=1;keyTime=data.k[0].t;}else {for(iKey=0;iKey<lenKey-1;iKey+=1){if(time===data.k[iKey].t){index=iKey+1;keyTime=data.k[iKey].t;break;}else if(time>data.k[iKey].t&&time<data.k[iKey+1].t){if(time-data.k[iKey].t>data.k[iKey+1].t-time){index=iKey+2;keyTime=data.k[iKey+1].t;}else {index=iKey+1;keyTime=data.k[iKey].t;}break;}}if(index===-1){index=iKey+1;keyTime=data.k[iKey].t;}}}var obKey={};obKey.index=index;obKey.time=keyTime/elem.comp.globalData.frameRate;return obKey;}function key(ind){var obKey;var iKey;var lenKey;if(!data.k.length||typeof data.k[0]==='number'){throw new Error('The property has no keyframe at index '+ind);}ind-=1;obKey={time:data.k[ind].t/elem.comp.globalData.frameRate,value:[]};var arr=Object.prototype.hasOwnProperty.call(data.k[ind],'s')?data.k[ind].s:data.k[ind-1].e;lenKey=arr.length;for(iKey=0;iKey<lenKey;iKey+=1){obKey[iKey]=arr[iKey];obKey.value[iKey]=arr[iKey];}return obKey;}function framesToTime(fr,fps){if(!fps){fps=elem.comp.globalData.frameRate;}return fr/fps;}function timeToFrames(t,fps){if(!t&&t!==0){t=time;}if(!fps){fps=elem.comp.globalData.frameRate;}return t*fps;}function seedRandom(seed){BMMath.seedrandom(randSeed+seed);}function sourceRectAtTime(){return elem.sourceRectAtTime();}function substring(init,end){if(typeof value==='string'){if(end===undefined){return value.substring(init);}return value.substring(init,end);}return '';}function substr(init,end){if(typeof value==='string'){if(end===undefined){return value.substr(init);}return value.substr(init,end);}return '';}function posterizeTime(framesPerSecond){time=framesPerSecond===0?0:Math.floor(time*framesPerSecond)/framesPerSecond;value=valueAtTime(time);}var time;var velocity;var value;var text;var textIndex;var textTotal;var selectorValue;var index=elem.data.ind;var hasParent=!!(elem.hierarchy&&elem.hierarchy.length);var parent;var randSeed=Math.floor(Math.random()*1000000);var globalData=elem.globalData;function executeExpression(_value){// globalData.pushExpression();
		value=_value;if(this.frameExpressionId===elem.globalData.frameId&&this.propType!=='textSelector'){return value;}if(this.propType==='textSelector'){textIndex=this.textIndex;textTotal=this.textTotal;selectorValue=this.selectorValue;}if(!thisLayer){text=elem.layerInterface.text;thisLayer=elem.layerInterface;thisComp=elem.comp.compInterface;toWorld=thisLayer.toWorld.bind(thisLayer);fromWorld=thisLayer.fromWorld.bind(thisLayer);fromComp=thisLayer.fromComp.bind(thisLayer);toComp=thisLayer.toComp.bind(thisLayer);mask=thisLayer.mask?thisLayer.mask.bind(thisLayer):null;fromCompToSurface=fromComp;}if(!transform){transform=elem.layerInterface('ADBE Transform Group');$bm_transform=transform;if(transform){anchorPoint=transform.anchorPoint;/* position = transform.position;
		                      rotation = transform.rotation;
		                      scale = transform.scale; */}}if(elemType===4&&!content){content=thisLayer('ADBE Root Vectors Group');}if(!effect){effect=thisLayer(4);}hasParent=!!(elem.hierarchy&&elem.hierarchy.length);if(hasParent&&!parent){parent=elem.hierarchy[0].layerInterface;}time=this.comp.renderedFrame/this.comp.globalData.frameRate;if(_needsRandom){seedRandom(randSeed+time);}if(needsVelocity){velocity=velocityAtTime(time);}expression_function();this.frameExpressionId=elem.globalData.frameId;// TODO: Check if it's possible to return on ShapeInterface the .v value
		// Changed this to a ternary operation because Rollup failed compiling it correctly
		scoped_bm_rt=scoped_bm_rt.propType===propTypes.SHAPE?scoped_bm_rt.v:scoped_bm_rt;return scoped_bm_rt;}// Bundlers will see these as dead code and unless we reference them
		executeExpression.__preventDeadCodeRemoval=[$bm_transform,anchorPoint,time,velocity,inPoint,outPoint,width,height,name,loop_in,loop_out,smooth,toComp,fromCompToSurface,toWorld,fromWorld,mask,position,rotation,scale,thisComp,numKeys,active,wiggle,loopInDuration,loopOutDuration,comp,lookAt,easeOut,easeIn,ease,nearestKey,key,text,textIndex,textTotal,selectorValue,framesToTime,timeToFrames,sourceRectAtTime,substring,substr,posterizeTime,index,globalData];return executeExpression;}ob.initiateExpression=initiateExpression;ob.__preventDeadCodeRemoval=[window,document,XMLHttpRequest,fetch,frames,$bm_neg,add,$bm_sum,$bm_sub,$bm_mul,$bm_div,$bm_mod,clamp,radians_to_degrees,degreesToRadians,degrees_to_radians,normalize,rgbToHsl,hslToRgb,linear,random,createPath,_lottieGlobal];ob.resetFrame=resetFrame;return ob;}();var Expressions=function(){var ob={};ob.initExpressions=initExpressions;ob.resetFrame=ExpressionManager.resetFrame;function initExpressions(animation){var stackCount=0;var registers=[];function pushExpression(){stackCount+=1;}function popExpression(){stackCount-=1;if(stackCount===0){releaseInstances();}}function registerExpressionProperty(expression){if(registers.indexOf(expression)===-1){registers.push(expression);}}function releaseInstances(){var i;var len=registers.length;for(i=0;i<len;i+=1){registers[i].release();}registers.length=0;}animation.renderer.compInterface=CompExpressionInterface(animation.renderer);animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);animation.renderer.globalData.pushExpression=pushExpression;animation.renderer.globalData.popExpression=popExpression;animation.renderer.globalData.registerExpressionProperty=registerExpressionProperty;}return ob;}();var MaskManagerInterface=function(){function MaskInterface(mask,data){this._mask=mask;this._data=data;}Object.defineProperty(MaskInterface.prototype,'maskPath',{get:function get(){if(this._mask.prop.k){this._mask.prop.getValue();}return this._mask.prop;}});Object.defineProperty(MaskInterface.prototype,'maskOpacity',{get:function get(){if(this._mask.op.k){this._mask.op.getValue();}return this._mask.op.v*100;}});var MaskManager=function MaskManager(maskManager){var _masksInterfaces=createSizedArray(maskManager.viewData.length);var i;var len=maskManager.viewData.length;for(i=0;i<len;i+=1){_masksInterfaces[i]=new MaskInterface(maskManager.viewData[i],maskManager.masksProperties[i]);}var maskFunction=function maskFunction(name){i=0;while(i<len){if(maskManager.masksProperties[i].nm===name){return _masksInterfaces[i];}i+=1;}return null;};return maskFunction;};return MaskManager;}();var ExpressionPropertyInterface=function(){var defaultUnidimensionalValue={pv:0,v:0,mult:1};var defaultMultidimensionalValue={pv:[0,0,0],v:[0,0,0],mult:1};function completeProperty(expressionValue,property,type){Object.defineProperty(expressionValue,'velocity',{get:function get(){return property.getVelocityAtTime(property.comp.currentFrame);}});expressionValue.numKeys=property.keyframes?property.keyframes.length:0;expressionValue.key=function(pos){if(!expressionValue.numKeys){return 0;}var value='';if('s'in property.keyframes[pos-1]){value=property.keyframes[pos-1].s;}else if('e'in property.keyframes[pos-2]){value=property.keyframes[pos-2].e;}else {value=property.keyframes[pos-2].s;}var valueProp=type==='unidimensional'?new Number(value):Object.assign({},value);// eslint-disable-line no-new-wrappers
		valueProp.time=property.keyframes[pos-1].t/property.elem.comp.globalData.frameRate;valueProp.value=type==='unidimensional'?value[0]:value;return valueProp;};expressionValue.valueAtTime=property.getValueAtTime;expressionValue.speedAtTime=property.getSpeedAtTime;expressionValue.velocityAtTime=property.getVelocityAtTime;expressionValue.propertyGroup=property.propertyGroup;}function UnidimensionalPropertyInterface(property){if(!property||!('pv'in property)){property=defaultUnidimensionalValue;}var mult=1/property.mult;var val=property.pv*mult;var expressionValue=new Number(val);// eslint-disable-line no-new-wrappers
		expressionValue.value=val;completeProperty(expressionValue,property,'unidimensional');return function(){if(property.k){property.getValue();}val=property.v*mult;if(expressionValue.value!==val){expressionValue=new Number(val);// eslint-disable-line no-new-wrappers
		expressionValue.value=val;completeProperty(expressionValue,property,'unidimensional');}return expressionValue;};}function MultidimensionalPropertyInterface(property){if(!property||!('pv'in property)){property=defaultMultidimensionalValue;}var mult=1/property.mult;var len=property.data&&property.data.l||property.pv.length;var expressionValue=createTypedArray('float32',len);var arrValue=createTypedArray('float32',len);expressionValue.value=arrValue;completeProperty(expressionValue,property,'multidimensional');return function(){if(property.k){property.getValue();}for(var i=0;i<len;i+=1){arrValue[i]=property.v[i]*mult;expressionValue[i]=arrValue[i];}return expressionValue;};}// TODO: try to avoid using this getter
		function defaultGetter(){return defaultUnidimensionalValue;}return function(property){if(!property){return defaultGetter;}if(property.propType==='unidimensional'){return UnidimensionalPropertyInterface(property);}return MultidimensionalPropertyInterface(property);};}();var TransformExpressionInterface=function(){return function(transform){function _thisFunction(name){switch(name){case'scale':case'Scale':case'ADBE Scale':case 6:return _thisFunction.scale;case'rotation':case'Rotation':case'ADBE Rotation':case'ADBE Rotate Z':case 10:return _thisFunction.rotation;case'ADBE Rotate X':return _thisFunction.xRotation;case'ADBE Rotate Y':return _thisFunction.yRotation;case'position':case'Position':case'ADBE Position':case 2:return _thisFunction.position;case'ADBE Position_0':return _thisFunction.xPosition;case'ADBE Position_1':return _thisFunction.yPosition;case'ADBE Position_2':return _thisFunction.zPosition;case'anchorPoint':case'AnchorPoint':case'Anchor Point':case'ADBE AnchorPoint':case 1:return _thisFunction.anchorPoint;case'opacity':case'Opacity':case 11:return _thisFunction.opacity;default:return null;}}Object.defineProperty(_thisFunction,'rotation',{get:ExpressionPropertyInterface(transform.r||transform.rz)});Object.defineProperty(_thisFunction,'zRotation',{get:ExpressionPropertyInterface(transform.rz||transform.r)});Object.defineProperty(_thisFunction,'xRotation',{get:ExpressionPropertyInterface(transform.rx)});Object.defineProperty(_thisFunction,'yRotation',{get:ExpressionPropertyInterface(transform.ry)});Object.defineProperty(_thisFunction,'scale',{get:ExpressionPropertyInterface(transform.s)});var _px;var _py;var _pz;var _transformFactory;if(transform.p){_transformFactory=ExpressionPropertyInterface(transform.p);}else {_px=ExpressionPropertyInterface(transform.px);_py=ExpressionPropertyInterface(transform.py);if(transform.pz){_pz=ExpressionPropertyInterface(transform.pz);}}Object.defineProperty(_thisFunction,'position',{get:function get(){if(transform.p){return _transformFactory();}return [_px(),_py(),_pz?_pz():0];}});Object.defineProperty(_thisFunction,'xPosition',{get:ExpressionPropertyInterface(transform.px)});Object.defineProperty(_thisFunction,'yPosition',{get:ExpressionPropertyInterface(transform.py)});Object.defineProperty(_thisFunction,'zPosition',{get:ExpressionPropertyInterface(transform.pz)});Object.defineProperty(_thisFunction,'anchorPoint',{get:ExpressionPropertyInterface(transform.a)});Object.defineProperty(_thisFunction,'opacity',{get:ExpressionPropertyInterface(transform.o)});Object.defineProperty(_thisFunction,'skew',{get:ExpressionPropertyInterface(transform.sk)});Object.defineProperty(_thisFunction,'skewAxis',{get:ExpressionPropertyInterface(transform.sa)});Object.defineProperty(_thisFunction,'orientation',{get:ExpressionPropertyInterface(transform.or)});return _thisFunction;};}();var LayerExpressionInterface=function(){function getMatrix(time){var toWorldMat=new Matrix();if(time!==undefined){var propMatrix=this._elem.finalTransform.mProp.getValueAtTime(time);propMatrix.clone(toWorldMat);}else {var transformMat=this._elem.finalTransform.mProp;transformMat.applyToMatrix(toWorldMat);}return toWorldMat;}function toWorldVec(arr,time){var toWorldMat=this.getMatrix(time);toWorldMat.props[12]=0;toWorldMat.props[13]=0;toWorldMat.props[14]=0;return this.applyPoint(toWorldMat,arr);}function toWorld(arr,time){var toWorldMat=this.getMatrix(time);return this.applyPoint(toWorldMat,arr);}function fromWorldVec(arr,time){var toWorldMat=this.getMatrix(time);toWorldMat.props[12]=0;toWorldMat.props[13]=0;toWorldMat.props[14]=0;return this.invertPoint(toWorldMat,arr);}function fromWorld(arr,time){var toWorldMat=this.getMatrix(time);return this.invertPoint(toWorldMat,arr);}function applyPoint(matrix,arr){if(this._elem.hierarchy&&this._elem.hierarchy.length){var i;var len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);}}return matrix.applyToPointArray(arr[0],arr[1],arr[2]||0);}function invertPoint(matrix,arr){if(this._elem.hierarchy&&this._elem.hierarchy.length){var i;var len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);}}return matrix.inversePoint(arr);}function fromComp(arr){var toWorldMat=new Matrix();toWorldMat.reset();this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);if(this._elem.hierarchy&&this._elem.hierarchy.length){var i;var len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);}return toWorldMat.inversePoint(arr);}return toWorldMat.inversePoint(arr);}function sampleImage(){return [1,1,1,1];}return function(elem){var transformInterface;function _registerMaskInterface(maskManager){_thisLayerFunction.mask=new MaskManagerInterface(maskManager,elem);}function _registerEffectsInterface(effects){_thisLayerFunction.effect=effects;}function _thisLayerFunction(name){switch(name){case'ADBE Root Vectors Group':case'Contents':case 2:return _thisLayerFunction.shapeInterface;case 1:case 6:case'Transform':case'transform':case'ADBE Transform Group':return transformInterface;case 4:case'ADBE Effect Parade':case'effects':case'Effects':return _thisLayerFunction.effect;case'ADBE Text Properties':return _thisLayerFunction.textInterface;default:return null;}}_thisLayerFunction.getMatrix=getMatrix;_thisLayerFunction.invertPoint=invertPoint;_thisLayerFunction.applyPoint=applyPoint;_thisLayerFunction.toWorld=toWorld;_thisLayerFunction.toWorldVec=toWorldVec;_thisLayerFunction.fromWorld=fromWorld;_thisLayerFunction.fromWorldVec=fromWorldVec;_thisLayerFunction.toComp=toWorld;_thisLayerFunction.fromComp=fromComp;_thisLayerFunction.sampleImage=sampleImage;_thisLayerFunction.sourceRectAtTime=elem.sourceRectAtTime.bind(elem);_thisLayerFunction._elem=elem;transformInterface=TransformExpressionInterface(elem.finalTransform.mProp);var anchorPointDescriptor=getDescriptor(transformInterface,'anchorPoint');Object.defineProperties(_thisLayerFunction,{hasParent:{get:function get(){return elem.hierarchy.length;}},parent:{get:function get(){return elem.hierarchy[0].layerInterface;}},rotation:getDescriptor(transformInterface,'rotation'),scale:getDescriptor(transformInterface,'scale'),position:getDescriptor(transformInterface,'position'),opacity:getDescriptor(transformInterface,'opacity'),anchorPoint:anchorPointDescriptor,anchor_point:anchorPointDescriptor,transform:{get:function get(){return transformInterface;}},active:{get:function get(){return elem.isInRange;}}});_thisLayerFunction.startTime=elem.data.st;_thisLayerFunction.index=elem.data.ind;_thisLayerFunction.source=elem.data.refId;_thisLayerFunction.height=elem.data.ty===0?elem.data.h:100;_thisLayerFunction.width=elem.data.ty===0?elem.data.w:100;_thisLayerFunction.inPoint=elem.data.ip/elem.comp.globalData.frameRate;_thisLayerFunction.outPoint=elem.data.op/elem.comp.globalData.frameRate;_thisLayerFunction._name=elem.data.nm;_thisLayerFunction.registerMaskInterface=_registerMaskInterface;_thisLayerFunction.registerEffectsInterface=_registerEffectsInterface;return _thisLayerFunction;};}();var propertyGroupFactory=function(){return function(interfaceFunction,parentPropertyGroup){return function(val){val=val===undefined?1:val;if(val<=0){return interfaceFunction;}return parentPropertyGroup(val-1);};};}();var PropertyInterface=function(){return function(propertyName,propertyGroup){var interfaceFunction={_name:propertyName};function _propertyGroup(val){val=val===undefined?1:val;if(val<=0){return interfaceFunction;}return propertyGroup(val-1);}return _propertyGroup;};}();var EffectsExpressionInterface=function(){var ob={createEffectsInterface:createEffectsInterface};function createEffectsInterface(elem,propertyGroup){if(elem.effectsManager){var effectElements=[];var effectsData=elem.data.ef;var i;var len=elem.effectsManager.effectElements.length;for(i=0;i<len;i+=1){effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));}var effects=elem.data.ef||[];var groupInterface=function groupInterface(name){i=0;len=effects.length;while(i<len){if(name===effects[i].nm||name===effects[i].mn||name===effects[i].ix){return effectElements[i];}i+=1;}return null;};Object.defineProperty(groupInterface,'numProperties',{get:function get(){return effects.length;}});return groupInterface;}return null;}function createGroupInterface(data,elements,propertyGroup,elem){function groupInterface(name){var effects=data.ef;var i=0;var len=effects.length;while(i<len){if(name===effects[i].nm||name===effects[i].mn||name===effects[i].ix){if(effects[i].ty===5){return effectElements[i];}return effectElements[i]();}i+=1;}throw new Error();}var _propertyGroup=propertyGroupFactory(groupInterface,propertyGroup);var effectElements=[];var i;var len=data.ef.length;for(i=0;i<len;i+=1){if(data.ef[i].ty===5){effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup,elem));}else {effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty,elem,_propertyGroup));}}if(data.mn==='ADBE Color Control'){Object.defineProperty(groupInterface,'color',{get:function get(){return effectElements[0]();}});}Object.defineProperties(groupInterface,{numProperties:{get:function get(){return data.np;}},_name:{value:data.nm},propertyGroup:{value:_propertyGroup}});groupInterface.enabled=data.en!==0;groupInterface.active=groupInterface.enabled;return groupInterface;}function createValueInterface(element,type,elem,propertyGroup){var expressionProperty=ExpressionPropertyInterface(element.p);function interfaceFunction(){if(type===10){return elem.comp.compInterface(element.p.v);}return expressionProperty();}if(element.p.setGroupProperty){element.p.setGroupProperty(PropertyInterface('',propertyGroup));}return interfaceFunction;}return ob;}();var ShapePathInterface=function(){return function pathInterfaceFactory(shape,view,propertyGroup){var prop=view.sh;function interfaceFunction(val){if(val==='Shape'||val==='shape'||val==='Path'||val==='path'||val==='ADBE Vector Shape'||val===2){return interfaceFunction.path;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);prop.setGroupProperty(PropertyInterface('Path',_propertyGroup));Object.defineProperties(interfaceFunction,{path:{get:function get(){if(prop.k){prop.getValue();}return prop;}},shape:{get:function get(){if(prop.k){prop.getValue();}return prop;}},_name:{value:shape.nm},ix:{value:shape.ix},propertyIndex:{value:shape.ix},mn:{value:shape.mn},propertyGroup:{value:propertyGroup}});return interfaceFunction;};}();var ShapeExpressionInterface=function(){function iterateElements(shapes,view,propertyGroup){var arr=[];var i;var len=shapes?shapes.length:0;for(i=0;i<len;i+=1){if(shapes[i].ty==='gr'){arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='fl'){arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='st'){arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='tm'){arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='tr');else if(shapes[i].ty==='el'){arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='sr'){arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='sh'){arr.push(ShapePathInterface(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='rc'){arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='rd'){arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='rp'){arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='gf'){arr.push(gradientFillInterfaceFactory(shapes[i],view[i],propertyGroup));}else {arr.push(defaultInterfaceFactory(shapes[i],view[i]));}}return arr;}function contentsInterfaceFactory(shape,view,propertyGroup){var interfaces;var interfaceFunction=function _interfaceFunction(value){var i=0;var len=interfaces.length;while(i<len){if(interfaces[i]._name===value||interfaces[i].mn===value||interfaces[i].propertyIndex===value||interfaces[i].ix===value||interfaces[i].ind===value){return interfaces[i];}i+=1;}if(typeof value==='number'){return interfaces[value-1];}return null;};interfaceFunction.propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);interfaces=iterateElements(shape.it,view.it,interfaceFunction.propertyGroup);interfaceFunction.numProperties=interfaces.length;var transformInterface=transformInterfaceFactory(shape.it[shape.it.length-1],view.it[view.it.length-1],interfaceFunction.propertyGroup);interfaceFunction.transform=transformInterface;interfaceFunction.propertyIndex=shape.cix;interfaceFunction._name=shape.nm;return interfaceFunction;}function groupInterfaceFactory(shape,view,propertyGroup){var interfaceFunction=function _interfaceFunction(value){switch(value){case'ADBE Vectors Group':case'Contents':case 2:return interfaceFunction.content;// Not necessary for now. Keeping them here in case a new case appears
		// case 'ADBE Vector Transform Group':
		// case 3:
		default:return interfaceFunction.transform;}};interfaceFunction.propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var content=contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);var transformInterface=transformInterfaceFactory(shape.it[shape.it.length-1],view.it[view.it.length-1],interfaceFunction.propertyGroup);interfaceFunction.content=content;interfaceFunction.transform=transformInterface;Object.defineProperty(interfaceFunction,'_name',{get:function get(){return shape.nm;}});// interfaceFunction.content = interfaceFunction;
		interfaceFunction.numProperties=shape.np;interfaceFunction.propertyIndex=shape.ix;interfaceFunction.nm=shape.nm;interfaceFunction.mn=shape.mn;return interfaceFunction;}function fillInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val==='Color'||val==='color'){return interfaceFunction.color;}if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}return null;}Object.defineProperties(interfaceFunction,{color:{get:ExpressionPropertyInterface(view.c)},opacity:{get:ExpressionPropertyInterface(view.o)},_name:{value:shape.nm},mn:{value:shape.mn}});view.c.setGroupProperty(PropertyInterface('Color',propertyGroup));view.o.setGroupProperty(PropertyInterface('Opacity',propertyGroup));return interfaceFunction;}function gradientFillInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val==='Start Point'||val==='start point'){return interfaceFunction.startPoint;}if(val==='End Point'||val==='end point'){return interfaceFunction.endPoint;}if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}return null;}Object.defineProperties(interfaceFunction,{startPoint:{get:ExpressionPropertyInterface(view.s)},endPoint:{get:ExpressionPropertyInterface(view.e)},opacity:{get:ExpressionPropertyInterface(view.o)},type:{get:function get(){return 'a';}},_name:{value:shape.nm},mn:{value:shape.mn}});view.s.setGroupProperty(PropertyInterface('Start Point',propertyGroup));view.e.setGroupProperty(PropertyInterface('End Point',propertyGroup));view.o.setGroupProperty(PropertyInterface('Opacity',propertyGroup));return interfaceFunction;}function defaultInterfaceFactory(){function interfaceFunction(){return null;}return interfaceFunction;}function strokeInterfaceFactory(shape,view,propertyGroup){var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var _dashPropertyGroup=propertyGroupFactory(dashOb,_propertyGroup);function addPropertyToDashOb(i){Object.defineProperty(dashOb,shape.d[i].nm,{get:ExpressionPropertyInterface(view.d.dataProps[i].p)});}var i;var len=shape.d?shape.d.length:0;var dashOb={};for(i=0;i<len;i+=1){addPropertyToDashOb(i);view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);}function interfaceFunction(val){if(val==='Color'||val==='color'){return interfaceFunction.color;}if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}if(val==='Stroke Width'||val==='stroke width'){return interfaceFunction.strokeWidth;}return null;}Object.defineProperties(interfaceFunction,{color:{get:ExpressionPropertyInterface(view.c)},opacity:{get:ExpressionPropertyInterface(view.o)},strokeWidth:{get:ExpressionPropertyInterface(view.w)},dash:{get:function get(){return dashOb;}},_name:{value:shape.nm},mn:{value:shape.mn}});view.c.setGroupProperty(PropertyInterface('Color',_propertyGroup));view.o.setGroupProperty(PropertyInterface('Opacity',_propertyGroup));view.w.setGroupProperty(PropertyInterface('Stroke Width',_propertyGroup));return interfaceFunction;}function trimInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val===shape.e.ix||val==='End'||val==='end'){return interfaceFunction.end;}if(val===shape.s.ix){return interfaceFunction.start;}if(val===shape.o.ix){return interfaceFunction.offset;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);interfaceFunction.propertyIndex=shape.ix;view.s.setGroupProperty(PropertyInterface('Start',_propertyGroup));view.e.setGroupProperty(PropertyInterface('End',_propertyGroup));view.o.setGroupProperty(PropertyInterface('Offset',_propertyGroup));interfaceFunction.propertyIndex=shape.ix;interfaceFunction.propertyGroup=propertyGroup;Object.defineProperties(interfaceFunction,{start:{get:ExpressionPropertyInterface(view.s)},end:{get:ExpressionPropertyInterface(view.e)},offset:{get:ExpressionPropertyInterface(view.o)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function transformInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.a.ix===value||value==='Anchor Point'){return interfaceFunction.anchorPoint;}if(shape.o.ix===value||value==='Opacity'){return interfaceFunction.opacity;}if(shape.p.ix===value||value==='Position'){return interfaceFunction.position;}if(shape.r.ix===value||value==='Rotation'||value==='ADBE Vector Rotation'){return interfaceFunction.rotation;}if(shape.s.ix===value||value==='Scale'){return interfaceFunction.scale;}if(shape.sk&&shape.sk.ix===value||value==='Skew'){return interfaceFunction.skew;}if(shape.sa&&shape.sa.ix===value||value==='Skew Axis'){return interfaceFunction.skewAxis;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity',_propertyGroup));view.transform.mProps.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point',_propertyGroup));view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale',_propertyGroup));view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation',_propertyGroup));if(view.transform.mProps.sk){view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew',_propertyGroup));view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle',_propertyGroup));}view.transform.op.setGroupProperty(PropertyInterface('Opacity',_propertyGroup));Object.defineProperties(interfaceFunction,{opacity:{get:ExpressionPropertyInterface(view.transform.mProps.o)},position:{get:ExpressionPropertyInterface(view.transform.mProps.p)},anchorPoint:{get:ExpressionPropertyInterface(view.transform.mProps.a)},scale:{get:ExpressionPropertyInterface(view.transform.mProps.s)},rotation:{get:ExpressionPropertyInterface(view.transform.mProps.r)},skew:{get:ExpressionPropertyInterface(view.transform.mProps.sk)},skewAxis:{get:ExpressionPropertyInterface(view.transform.mProps.sa)},_name:{value:shape.nm}});interfaceFunction.ty='tr';interfaceFunction.mn=shape.mn;interfaceFunction.propertyGroup=propertyGroup;return interfaceFunction;}function ellipseInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.s.ix===value){return interfaceFunction.size;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);interfaceFunction.propertyIndex=shape.ix;var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;prop.s.setGroupProperty(PropertyInterface('Size',_propertyGroup));prop.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));Object.defineProperties(interfaceFunction,{size:{get:ExpressionPropertyInterface(prop.s)},position:{get:ExpressionPropertyInterface(prop.p)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function starInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.r.ix===value){return interfaceFunction.rotation;}if(shape.pt.ix===value){return interfaceFunction.points;}if(shape.or.ix===value||value==='ADBE Vector Star Outer Radius'){return interfaceFunction.outerRadius;}if(shape.os.ix===value){return interfaceFunction.outerRoundness;}if(shape.ir&&(shape.ir.ix===value||value==='ADBE Vector Star Inner Radius')){return interfaceFunction.innerRadius;}if(shape.is&&shape.is.ix===value){return interfaceFunction.innerRoundness;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;interfaceFunction.propertyIndex=shape.ix;prop.or.setGroupProperty(PropertyInterface('Outer Radius',_propertyGroup));prop.os.setGroupProperty(PropertyInterface('Outer Roundness',_propertyGroup));prop.pt.setGroupProperty(PropertyInterface('Points',_propertyGroup));prop.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));prop.r.setGroupProperty(PropertyInterface('Rotation',_propertyGroup));if(shape.ir){prop.ir.setGroupProperty(PropertyInterface('Inner Radius',_propertyGroup));prop.is.setGroupProperty(PropertyInterface('Inner Roundness',_propertyGroup));}Object.defineProperties(interfaceFunction,{position:{get:ExpressionPropertyInterface(prop.p)},rotation:{get:ExpressionPropertyInterface(prop.r)},points:{get:ExpressionPropertyInterface(prop.pt)},outerRadius:{get:ExpressionPropertyInterface(prop.or)},outerRoundness:{get:ExpressionPropertyInterface(prop.os)},innerRadius:{get:ExpressionPropertyInterface(prop.ir)},innerRoundness:{get:ExpressionPropertyInterface(prop.is)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function rectInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.r.ix===value){return interfaceFunction.roundness;}if(shape.s.ix===value||value==='Size'||value==='ADBE Vector Rect Size'){return interfaceFunction.size;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;interfaceFunction.propertyIndex=shape.ix;prop.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));prop.s.setGroupProperty(PropertyInterface('Size',_propertyGroup));prop.r.setGroupProperty(PropertyInterface('Rotation',_propertyGroup));Object.defineProperties(interfaceFunction,{position:{get:ExpressionPropertyInterface(prop.p)},roundness:{get:ExpressionPropertyInterface(prop.r)},size:{get:ExpressionPropertyInterface(prop.s)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function roundedInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.r.ix===value||value==='Round Corners 1'){return interfaceFunction.radius;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view;interfaceFunction.propertyIndex=shape.ix;prop.rd.setGroupProperty(PropertyInterface('Radius',_propertyGroup));Object.defineProperties(interfaceFunction,{radius:{get:ExpressionPropertyInterface(prop.rd)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function repeaterInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.c.ix===value||value==='Copies'){return interfaceFunction.copies;}if(shape.o.ix===value||value==='Offset'){return interfaceFunction.offset;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view;interfaceFunction.propertyIndex=shape.ix;prop.c.setGroupProperty(PropertyInterface('Copies',_propertyGroup));prop.o.setGroupProperty(PropertyInterface('Offset',_propertyGroup));Object.defineProperties(interfaceFunction,{copies:{get:ExpressionPropertyInterface(prop.c)},offset:{get:ExpressionPropertyInterface(prop.o)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}return function(shapes,view,propertyGroup){var interfaces;function _interfaceFunction(value){if(typeof value==='number'){value=value===undefined?1:value;if(value===0){return propertyGroup;}return interfaces[value-1];}var i=0;var len=interfaces.length;while(i<len){if(interfaces[i]._name===value){return interfaces[i];}i+=1;}return null;}function parentGroupWrapper(){return propertyGroup;}_interfaceFunction.propertyGroup=propertyGroupFactory(_interfaceFunction,parentGroupWrapper);interfaces=iterateElements(shapes,view,_interfaceFunction.propertyGroup);_interfaceFunction.numProperties=interfaces.length;_interfaceFunction._name='Contents';return _interfaceFunction;};}();var TextExpressionInterface=function(){return function(elem){var _sourceText;function _thisLayerFunction(name){switch(name){case'ADBE Text Document':return _thisLayerFunction.sourceText;default:return null;}}Object.defineProperty(_thisLayerFunction,'sourceText',{get:function get(){elem.textProperty.getValue();var stringValue=elem.textProperty.currentData.t;if(!_sourceText||stringValue!==_sourceText.value){_sourceText=new String(stringValue);// eslint-disable-line no-new-wrappers
		// If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive
		_sourceText.value=stringValue||new String(stringValue);// eslint-disable-line no-new-wrappers
		Object.defineProperty(_sourceText,'style',{get:function get(){return {fillColor:elem.textProperty.currentData.fc};}});}return _sourceText;}});return _thisLayerFunction;};}();function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var FootageInterface=function(){var outlineInterfaceFactory=function outlineInterfaceFactory(elem){var currentPropertyName='';var currentProperty=elem.getFootageData();function init(){currentPropertyName='';currentProperty=elem.getFootageData();return searchProperty;}function searchProperty(value){if(currentProperty[value]){currentPropertyName=value;currentProperty=currentProperty[value];if(_typeof(currentProperty)==='object'){return searchProperty;}return currentProperty;}var propertyNameIndex=value.indexOf(currentPropertyName);if(propertyNameIndex!==-1){var index=parseInt(value.substr(propertyNameIndex+currentPropertyName.length),10);currentProperty=currentProperty[index];if(_typeof(currentProperty)==='object'){return searchProperty;}return currentProperty;}return '';}return init;};var dataInterfaceFactory=function dataInterfaceFactory(elem){function interfaceFunction(value){if(value==='Outline'){return interfaceFunction.outlineInterface();}return null;}interfaceFunction._name='Outline';interfaceFunction.outlineInterface=outlineInterfaceFactory(elem);return interfaceFunction;};return function(elem){function _interfaceFunction(value){if(value==='Data'){return _interfaceFunction.dataInterface;}return null;}_interfaceFunction._name='Data';_interfaceFunction.dataInterface=dataInterfaceFactory(elem);return _interfaceFunction;};}();var interfaces={layer:LayerExpressionInterface,effects:EffectsExpressionInterface,comp:CompExpressionInterface,shape:ShapeExpressionInterface,text:TextExpressionInterface,footage:FootageInterface};function getInterface(type){return interfaces[type]||null;}var expressionHelpers=function(){function searchExpressions(elem,data,prop){if(data.x){prop.k=true;prop.x=true;prop.initiateExpression=ExpressionManager.initiateExpression;prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));}}function getValueAtTime(frameNum){frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastFrame){this._cachingAtTime.lastIndex=this._cachingAtTime.lastFrame<frameNum?this._cachingAtTime.lastIndex:0;this._cachingAtTime.value=this.interpolateValue(frameNum,this._cachingAtTime);this._cachingAtTime.lastFrame=frameNum;}return this._cachingAtTime.value;}function getSpeedAtTime(frameNum){var delta=-0.01;var v1=this.getValueAtTime(frameNum);var v2=this.getValueAtTime(frameNum+delta);var speed=0;if(v1.length){var i;for(i=0;i<v1.length;i+=1){speed+=Math.pow(v2[i]-v1[i],2);}speed=Math.sqrt(speed)*100;}else {speed=0;}return speed;}function getVelocityAtTime(frameNum){if(this.vel!==undefined){return this.vel;}var delta=-0.001;// frameNum += this.elem.data.st;
		var v1=this.getValueAtTime(frameNum);var v2=this.getValueAtTime(frameNum+delta);var velocity;if(v1.length){velocity=createTypedArray('float32',v1.length);var i;for(i=0;i<v1.length;i+=1){// removing frameRate
		// if needed, don't add it here
		// velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
		velocity[i]=(v2[i]-v1[i])/delta;}}else {velocity=(v2-v1)/delta;}return velocity;}function getStaticValueAtTime(){return this.pv;}function setGroupProperty(propertyGroup){this.propertyGroup=propertyGroup;}return {searchExpressions:searchExpressions,getSpeedAtTime:getSpeedAtTime,getVelocityAtTime:getVelocityAtTime,getValueAtTime:getValueAtTime,getStaticValueAtTime:getStaticValueAtTime,setGroupProperty:setGroupProperty};}();function addPropertyDecorator(){function loopOut(type,duration,durationFlag){if(!this.k||!this.keyframes){return this.pv;}type=type?type.toLowerCase():'';var currentFrame=this.comp.renderedFrame;var keyframes=this.keyframes;var lastKeyFrame=keyframes[keyframes.length-1].t;if(currentFrame<=lastKeyFrame){return this.pv;}var cycleDuration;var firstKeyFrame;if(!durationFlag){if(!duration||duration>keyframes.length-1){duration=keyframes.length-1;}firstKeyFrame=keyframes[keyframes.length-1-duration].t;cycleDuration=lastKeyFrame-firstKeyFrame;}else {if(!duration){cycleDuration=Math.max(0,lastKeyFrame-this.elem.data.ip);}else {cycleDuration=Math.abs(lastKeyFrame-this.elem.comp.globalData.frameRate*duration);}firstKeyFrame=lastKeyFrame-cycleDuration;}var i;var len;var ret;if(type==='pingpong'){var iterations=Math.floor((currentFrame-firstKeyFrame)/cycleDuration);if(iterations%2!==0){return this.getValueAtTime((cycleDuration-(currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		}}else if(type==='offset'){var initV=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var endV=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var current=this.getValueAtTime(((currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		var repeats=Math.floor((currentFrame-firstKeyFrame)/cycleDuration);if(this.pv.length){ret=new Array(initV.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=(endV[i]-initV[i])*repeats+current[i];}return ret;}return (endV-initV)*repeats+current;}else if(type==='continue'){var lastValue=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var nextLastValue=this.getValueAtTime((lastKeyFrame-0.001)/this.comp.globalData.frameRate,0);if(this.pv.length){ret=new Array(lastValue.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=lastValue[i]+(lastValue[i]-nextLastValue[i])*((currentFrame-lastKeyFrame)/this.comp.globalData.frameRate)/0.0005;// eslint-disable-line
		}return ret;}return lastValue+(lastValue-nextLastValue)*((currentFrame-lastKeyFrame)/0.001);}return this.getValueAtTime(((currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		}function loopIn(type,duration,durationFlag){if(!this.k){return this.pv;}type=type?type.toLowerCase():'';var currentFrame=this.comp.renderedFrame;var keyframes=this.keyframes;var firstKeyFrame=keyframes[0].t;if(currentFrame>=firstKeyFrame){return this.pv;}var cycleDuration;var lastKeyFrame;if(!durationFlag){if(!duration||duration>keyframes.length-1){duration=keyframes.length-1;}lastKeyFrame=keyframes[duration].t;cycleDuration=lastKeyFrame-firstKeyFrame;}else {if(!duration){cycleDuration=Math.max(0,this.elem.data.op-firstKeyFrame);}else {cycleDuration=Math.abs(this.elem.comp.globalData.frameRate*duration);}lastKeyFrame=firstKeyFrame+cycleDuration;}var i;var len;var ret;if(type==='pingpong'){var iterations=Math.floor((firstKeyFrame-currentFrame)/cycleDuration);if(iterations%2===0){return this.getValueAtTime(((firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		}}else if(type==='offset'){var initV=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var endV=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var current=this.getValueAtTime((cycleDuration-(firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);var repeats=Math.floor((firstKeyFrame-currentFrame)/cycleDuration)+1;if(this.pv.length){ret=new Array(initV.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=current[i]-(endV[i]-initV[i])*repeats;}return ret;}return current-(endV-initV)*repeats;}else if(type==='continue'){var firstValue=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var nextFirstValue=this.getValueAtTime((firstKeyFrame+0.001)/this.comp.globalData.frameRate,0);if(this.pv.length){ret=new Array(firstValue.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=firstValue[i]+(firstValue[i]-nextFirstValue[i])*(firstKeyFrame-currentFrame)/0.001;}return ret;}return firstValue+(firstValue-nextFirstValue)*(firstKeyFrame-currentFrame)/0.001;}return this.getValueAtTime((cycleDuration-((firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame))/this.comp.globalData.frameRate,0);// eslint-disable-line
		}function smooth(width,samples){if(!this.k){return this.pv;}width=(width||0.4)*0.5;samples=Math.floor(samples||5);if(samples<=1){return this.pv;}var currentTime=this.comp.renderedFrame/this.comp.globalData.frameRate;var initFrame=currentTime-width;var endFrame=currentTime+width;var sampleFrequency=samples>1?(endFrame-initFrame)/(samples-1):1;var i=0;var j=0;var value;if(this.pv.length){value=createTypedArray('float32',this.pv.length);}else {value=0;}var sampleValue;while(i<samples){sampleValue=this.getValueAtTime(initFrame+i*sampleFrequency);if(this.pv.length){for(j=0;j<this.pv.length;j+=1){value[j]+=sampleValue[j];}}else {value+=sampleValue;}i+=1;}if(this.pv.length){for(j=0;j<this.pv.length;j+=1){value[j]/=samples;}}else {value/=samples;}return value;}function getTransformValueAtTime(time){if(!this._transformCachingAtTime){this._transformCachingAtTime={v:new Matrix()};}/// /
		var matrix=this._transformCachingAtTime.v;matrix.cloneFromProps(this.pre.props);if(this.appliedTransformations<1){var anchor=this.a.getValueAtTime(time);matrix.translate(-anchor[0]*this.a.mult,-anchor[1]*this.a.mult,anchor[2]*this.a.mult);}if(this.appliedTransformations<2){var scale=this.s.getValueAtTime(time);matrix.scale(scale[0]*this.s.mult,scale[1]*this.s.mult,scale[2]*this.s.mult);}if(this.sk&&this.appliedTransformations<3){var skew=this.sk.getValueAtTime(time);var skewAxis=this.sa.getValueAtTime(time);matrix.skewFromAxis(-skew*this.sk.mult,skewAxis*this.sa.mult);}if(this.r&&this.appliedTransformations<4){var rotation=this.r.getValueAtTime(time);matrix.rotate(-rotation*this.r.mult);}else if(!this.r&&this.appliedTransformations<4){var rotationZ=this.rz.getValueAtTime(time);var rotationY=this.ry.getValueAtTime(time);var rotationX=this.rx.getValueAtTime(time);var orientation=this.or.getValueAtTime(time);matrix.rotateZ(-rotationZ*this.rz.mult).rotateY(rotationY*this.ry.mult).rotateX(rotationX*this.rx.mult).rotateZ(-orientation[2]*this.or.mult).rotateY(orientation[1]*this.or.mult).rotateX(orientation[0]*this.or.mult);}if(this.data.p&&this.data.p.s){var positionX=this.px.getValueAtTime(time);var positionY=this.py.getValueAtTime(time);if(this.data.p.z){var positionZ=this.pz.getValueAtTime(time);matrix.translate(positionX*this.px.mult,positionY*this.py.mult,-positionZ*this.pz.mult);}else {matrix.translate(positionX*this.px.mult,positionY*this.py.mult,0);}}else {var position=this.p.getValueAtTime(time);matrix.translate(position[0]*this.p.mult,position[1]*this.p.mult,-position[2]*this.p.mult);}return matrix;/// /
		}function getTransformStaticValueAtTime(){return this.v.clone(new Matrix());}var getTransformProperty=TransformPropertyFactory.getTransformProperty;TransformPropertyFactory.getTransformProperty=function(elem,data,container){var prop=getTransformProperty(elem,data,container);if(prop.dynamicProperties.length){prop.getValueAtTime=getTransformValueAtTime.bind(prop);}else {prop.getValueAtTime=getTransformStaticValueAtTime.bind(prop);}prop.setGroupProperty=expressionHelpers.setGroupProperty;return prop;};var propertyGetProp=PropertyFactory.getProp;PropertyFactory.getProp=function(elem,data,type,mult,container){var prop=propertyGetProp(elem,data,type,mult,container);// prop.getVelocityAtTime = getVelocityAtTime;
		// prop.loopOut = loopOut;
		// prop.loopIn = loopIn;
		if(prop.kf){prop.getValueAtTime=expressionHelpers.getValueAtTime.bind(prop);}else {prop.getValueAtTime=expressionHelpers.getStaticValueAtTime.bind(prop);}prop.setGroupProperty=expressionHelpers.setGroupProperty;prop.loopOut=loopOut;prop.loopIn=loopIn;prop.smooth=smooth;prop.getVelocityAtTime=expressionHelpers.getVelocityAtTime.bind(prop);prop.getSpeedAtTime=expressionHelpers.getSpeedAtTime.bind(prop);prop.numKeys=data.a===1?data.k.length:0;prop.propertyIndex=data.ix;var value=0;if(type!==0){value=createTypedArray('float32',data.a===1?data.k[0].s.length:data.k.length);}prop._cachingAtTime={lastFrame:initialDefaultFrame,lastIndex:0,value:value};expressionHelpers.searchExpressions(elem,data,prop);if(prop.k){container.addDynamicProperty(prop);}return prop;};function getShapeValueAtTime(frameNum){// For now this caching object is created only when needed instead of creating it when the shape is initialized.
		if(!this._cachingAtTime){this._cachingAtTime={shapeValue:shapePool.clone(this.pv),lastIndex:0,lastTime:initialDefaultFrame};}frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastTime){this._cachingAtTime.lastIndex=this._cachingAtTime.lastTime<frameNum?this._caching.lastIndex:0;this._cachingAtTime.lastTime=frameNum;this.interpolateShape(frameNum,this._cachingAtTime.shapeValue,this._cachingAtTime);}return this._cachingAtTime.shapeValue;}var ShapePropertyConstructorFunction=ShapePropertyFactory.getConstructorFunction();var KeyframedShapePropertyConstructorFunction=ShapePropertyFactory.getKeyframedConstructorFunction();function ShapeExpressions(){}ShapeExpressions.prototype={vertices:function vertices(prop,time){if(this.k){this.getValue();}var shapePath=this.v;if(time!==undefined){shapePath=this.getValueAtTime(time,0);}var i;var len=shapePath._length;var vertices=shapePath[prop];var points=shapePath.v;var arr=createSizedArray(len);for(i=0;i<len;i+=1){if(prop==='i'||prop==='o'){arr[i]=[vertices[i][0]-points[i][0],vertices[i][1]-points[i][1]];}else {arr[i]=[vertices[i][0],vertices[i][1]];}}return arr;},points:function points(time){return this.vertices('v',time);},inTangents:function inTangents(time){return this.vertices('i',time);},outTangents:function outTangents(time){return this.vertices('o',time);},isClosed:function isClosed(){return this.v.c;},pointOnPath:function pointOnPath(perc,time){var shapePath=this.v;if(time!==undefined){shapePath=this.getValueAtTime(time,0);}if(!this._segmentsLength){this._segmentsLength=bez.getSegmentsLength(shapePath);}var segmentsLength=this._segmentsLength;var lengths=segmentsLength.lengths;var lengthPos=segmentsLength.totalLength*perc;var i=0;var len=lengths.length;var accumulatedLength=0;var pt;while(i<len){if(accumulatedLength+lengths[i].addedLength>lengthPos){var initIndex=i;var endIndex=shapePath.c&&i===len-1?0:i+1;var segmentPerc=(lengthPos-accumulatedLength)/lengths[i].addedLength;pt=bez.getPointInSegment(shapePath.v[initIndex],shapePath.v[endIndex],shapePath.o[initIndex],shapePath.i[endIndex],segmentPerc,lengths[i]);break;}else {accumulatedLength+=lengths[i].addedLength;}i+=1;}if(!pt){pt=shapePath.c?[shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];}return pt;},vectorOnPath:function vectorOnPath(perc,time,vectorType){// perc doesn't use triple equality because it can be a Number object as well as a primitive.
		if(perc==1){// eslint-disable-line eqeqeq
		perc=this.v.c;}else if(perc==0){// eslint-disable-line eqeqeq
		perc=0.999;}var pt1=this.pointOnPath(perc,time);var pt2=this.pointOnPath(perc+0.001,time);var xLength=pt2[0]-pt1[0];var yLength=pt2[1]-pt1[1];var magnitude=Math.sqrt(Math.pow(xLength,2)+Math.pow(yLength,2));if(magnitude===0){return [0,0];}var unitVector=vectorType==='tangent'?[xLength/magnitude,yLength/magnitude]:[-yLength/magnitude,xLength/magnitude];return unitVector;},tangentOnPath:function tangentOnPath(perc,time){return this.vectorOnPath(perc,time,'tangent');},normalOnPath:function normalOnPath(perc,time){return this.vectorOnPath(perc,time,'normal');},setGroupProperty:expressionHelpers.setGroupProperty,getValueAtTime:expressionHelpers.getStaticValueAtTime};extendPrototype([ShapeExpressions],ShapePropertyConstructorFunction);extendPrototype([ShapeExpressions],KeyframedShapePropertyConstructorFunction);KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime=getShapeValueAtTime;KeyframedShapePropertyConstructorFunction.prototype.initiateExpression=ExpressionManager.initiateExpression;var propertyGetShapeProp=ShapePropertyFactory.getShapeProp;ShapePropertyFactory.getShapeProp=function(elem,data,type,arr,trims){var prop=propertyGetShapeProp(elem,data,type,arr,trims);prop.propertyIndex=data.ix;prop.lock=false;if(type===3){expressionHelpers.searchExpressions(elem,data.pt,prop);}else if(type===4){expressionHelpers.searchExpressions(elem,data.ks,prop);}if(prop.k){elem.addDynamicProperty(prop);}return prop;};}function initialize$1(){addPropertyDecorator();}function addDecorator(){function searchExpressions(){if(this.data.d.x){this.calculateExpression=ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);this.addEffect(this.getExpressionValue.bind(this));return true;}return null;}TextProperty.prototype.getExpressionValue=function(currentValue,text){var newValue=this.calculateExpression(text);if(currentValue.t!==newValue){var newData={};this.copyData(newData,currentValue);newData.t=newValue.toString();newData.__complete=false;return newData;}return currentValue;};TextProperty.prototype.searchProperty=function(){var isKeyframed=this.searchKeyframes();var hasExpressions=this.searchExpressions();this.kf=isKeyframed||hasExpressions;return this.kf;};TextProperty.prototype.searchExpressions=searchExpressions;}function initialize(){addDecorator();}function SVGComposableEffect(){}SVGComposableEffect.prototype={createMergeNode:function createMergeNode(resultId,ins){var feMerge=createNS('feMerge');feMerge.setAttribute('result',resultId);var feMergeNode;var i;for(i=0;i<ins.length;i+=1){feMergeNode=createNS('feMergeNode');feMergeNode.setAttribute('in',ins[i]);feMerge.appendChild(feMergeNode);feMerge.appendChild(feMergeNode);}return feMerge;}};var linearFilterValue='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0';function SVGTintFilter(filter,filterManager,elem,id,source){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');feColorMatrix.setAttribute('values',linearFilterValue+' 1 0');this.linearFilter=feColorMatrix;feColorMatrix.setAttribute('result',id+'_tint_1');filter.appendChild(feColorMatrix);feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result',id+'_tint_2');filter.appendChild(feColorMatrix);this.matrixFilter=feColorMatrix;var feMerge=this.createMergeNode(id,[source,id+'_tint_1',id+'_tint_2']);filter.appendChild(feMerge);}extendPrototype([SVGComposableEffect],SVGTintFilter);SVGTintFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var colorBlack=this.filterManager.effectElements[0].p.v;var colorWhite=this.filterManager.effectElements[1].p.v;var opacity=this.filterManager.effectElements[2].p.v/100;this.linearFilter.setAttribute('values',linearFilterValue+' '+opacity+' 0');this.matrixFilter.setAttribute('values',colorWhite[0]-colorBlack[0]+' 0 0 0 '+colorBlack[0]+' '+(colorWhite[1]-colorBlack[1])+' 0 0 0 '+colorBlack[1]+' '+(colorWhite[2]-colorBlack[2])+' 0 0 0 '+colorBlack[2]+' 0 0 0 1 0');}};function SVGFillFilter(filter,filterManager,elem,id){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result',id);filter.appendChild(feColorMatrix);this.matrixFilter=feColorMatrix;}SVGFillFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var color=this.filterManager.effectElements[2].p.v;var opacity=this.filterManager.effectElements[6].p.v;this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');}};function SVGStrokeEffect(fil,filterManager,elem){this.initialized=false;this.filterManager=filterManager;this.elem=elem;this.paths=[];}SVGStrokeEffect.prototype.initialize=function(){var elemChildren=this.elem.layerElement.children||this.elem.layerElement.childNodes;var path;var groupPath;var i;var len;if(this.filterManager.effectElements[1].p.v===1){len=this.elem.maskManager.masksProperties.length;i=0;}else {i=this.filterManager.effectElements[0].p.v-1;len=i+1;}groupPath=createNS('g');groupPath.setAttribute('fill','none');groupPath.setAttribute('stroke-linecap','round');groupPath.setAttribute('stroke-dashoffset',1);for(i;i<len;i+=1){path=createNS('path');groupPath.appendChild(path);this.paths.push({p:path,m:i});}if(this.filterManager.effectElements[10].p.v===3){var mask=createNS('mask');var id=createElementID();mask.setAttribute('id',id);mask.setAttribute('mask-type','alpha');mask.appendChild(groupPath);this.elem.globalData.defs.appendChild(mask);var g=createNS('g');g.setAttribute('mask','url('+getLocationHref()+'#'+id+')');while(elemChildren[0]){g.appendChild(elemChildren[0]);}this.elem.layerElement.appendChild(g);this.masker=mask;groupPath.setAttribute('stroke','#fff');}else if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(this.filterManager.effectElements[10].p.v===2){elemChildren=this.elem.layerElement.children||this.elem.layerElement.childNodes;while(elemChildren.length){this.elem.layerElement.removeChild(elemChildren[0]);}}this.elem.layerElement.appendChild(groupPath);this.elem.layerElement.removeAttribute('mask');groupPath.setAttribute('stroke','#fff');}this.initialized=true;this.pathMasker=groupPath;};SVGStrokeEffect.prototype.renderFrame=function(forceRender){if(!this.initialized){this.initialize();}var i;var len=this.paths.length;var mask;var path;for(i=0;i<len;i+=1){if(this.paths[i].m!==-1){mask=this.elem.maskManager.viewData[this.paths[i].m];path=this.paths[i].p;if(forceRender||this.filterManager._mdf||mask.prop._mdf){path.setAttribute('d',mask.lastPath);}if(forceRender||this.filterManager.effectElements[9].p._mdf||this.filterManager.effectElements[4].p._mdf||this.filterManager.effectElements[7].p._mdf||this.filterManager.effectElements[8].p._mdf||mask.prop._mdf){var dasharrayValue;if(this.filterManager.effectElements[7].p.v!==0||this.filterManager.effectElements[8].p.v!==100){var s=Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)*0.01;var e=Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)*0.01;var l=path.getTotalLength();dasharrayValue='0 0 0 '+l*s+' ';var lineLength=l*(e-s);var segment=1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*0.01;var units=Math.floor(lineLength/segment);var j;for(j=0;j<units;j+=1){dasharrayValue+='1 '+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*0.01+' ';}dasharrayValue+='0 '+l*10+' 0 0';}else {dasharrayValue='1 '+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*0.01;}path.setAttribute('stroke-dasharray',dasharrayValue);}}}if(forceRender||this.filterManager.effectElements[4].p._mdf){this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);}if(forceRender||this.filterManager.effectElements[6].p._mdf){this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);}if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(forceRender||this.filterManager.effectElements[3].p._mdf){var color=this.filterManager.effectElements[3].p.v;this.pathMasker.setAttribute('stroke','rgb('+bmFloor(color[0]*255)+','+bmFloor(color[1]*255)+','+bmFloor(color[2]*255)+')');}}};function SVGTritoneFilter(filter,filterManager,elem,id){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');filter.appendChild(feColorMatrix);var feComponentTransfer=createNS('feComponentTransfer');feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');feComponentTransfer.setAttribute('result',id);this.matrixFilter=feComponentTransfer;var feFuncR=createNS('feFuncR');feFuncR.setAttribute('type','table');feComponentTransfer.appendChild(feFuncR);this.feFuncR=feFuncR;var feFuncG=createNS('feFuncG');feFuncG.setAttribute('type','table');feComponentTransfer.appendChild(feFuncG);this.feFuncG=feFuncG;var feFuncB=createNS('feFuncB');feFuncB.setAttribute('type','table');feComponentTransfer.appendChild(feFuncB);this.feFuncB=feFuncB;filter.appendChild(feComponentTransfer);}SVGTritoneFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var color1=this.filterManager.effectElements[0].p.v;var color2=this.filterManager.effectElements[1].p.v;var color3=this.filterManager.effectElements[2].p.v;var tableR=color3[0]+' '+color2[0]+' '+color1[0];var tableG=color3[1]+' '+color2[1]+' '+color1[1];var tableB=color3[2]+' '+color2[2]+' '+color1[2];this.feFuncR.setAttribute('tableValues',tableR);this.feFuncG.setAttribute('tableValues',tableG);this.feFuncB.setAttribute('tableValues',tableB);}};function SVGProLevelsFilter(filter,filterManager,elem,id){this.filterManager=filterManager;var effectElements=this.filterManager.effectElements;var feComponentTransfer=createNS('feComponentTransfer');// Red
		if(effectElements[10].p.k||effectElements[10].p.v!==0||effectElements[11].p.k||effectElements[11].p.v!==1||effectElements[12].p.k||effectElements[12].p.v!==1||effectElements[13].p.k||effectElements[13].p.v!==0||effectElements[14].p.k||effectElements[14].p.v!==1){this.feFuncR=this.createFeFunc('feFuncR',feComponentTransfer);}// Green
		if(effectElements[17].p.k||effectElements[17].p.v!==0||effectElements[18].p.k||effectElements[18].p.v!==1||effectElements[19].p.k||effectElements[19].p.v!==1||effectElements[20].p.k||effectElements[20].p.v!==0||effectElements[21].p.k||effectElements[21].p.v!==1){this.feFuncG=this.createFeFunc('feFuncG',feComponentTransfer);}// Blue
		if(effectElements[24].p.k||effectElements[24].p.v!==0||effectElements[25].p.k||effectElements[25].p.v!==1||effectElements[26].p.k||effectElements[26].p.v!==1||effectElements[27].p.k||effectElements[27].p.v!==0||effectElements[28].p.k||effectElements[28].p.v!==1){this.feFuncB=this.createFeFunc('feFuncB',feComponentTransfer);}// Alpha
		if(effectElements[31].p.k||effectElements[31].p.v!==0||effectElements[32].p.k||effectElements[32].p.v!==1||effectElements[33].p.k||effectElements[33].p.v!==1||effectElements[34].p.k||effectElements[34].p.v!==0||effectElements[35].p.k||effectElements[35].p.v!==1){this.feFuncA=this.createFeFunc('feFuncA',feComponentTransfer);}// RGB
		if(this.feFuncR||this.feFuncG||this.feFuncB||this.feFuncA){feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');filter.appendChild(feComponentTransfer);}if(effectElements[3].p.k||effectElements[3].p.v!==0||effectElements[4].p.k||effectElements[4].p.v!==1||effectElements[5].p.k||effectElements[5].p.v!==1||effectElements[6].p.k||effectElements[6].p.v!==0||effectElements[7].p.k||effectElements[7].p.v!==1){feComponentTransfer=createNS('feComponentTransfer');feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');feComponentTransfer.setAttribute('result',id);filter.appendChild(feComponentTransfer);this.feFuncRComposed=this.createFeFunc('feFuncR',feComponentTransfer);this.feFuncGComposed=this.createFeFunc('feFuncG',feComponentTransfer);this.feFuncBComposed=this.createFeFunc('feFuncB',feComponentTransfer);}}SVGProLevelsFilter.prototype.createFeFunc=function(type,feComponentTransfer){var feFunc=createNS(type);feFunc.setAttribute('type','table');feComponentTransfer.appendChild(feFunc);return feFunc;};SVGProLevelsFilter.prototype.getTableValue=function(inputBlack,inputWhite,gamma,outputBlack,outputWhite){var cnt=0;var segments=256;var perc;var min=Math.min(inputBlack,inputWhite);var max=Math.max(inputBlack,inputWhite);var table=Array.call(null,{length:segments});var colorValue;var pos=0;var outputDelta=outputWhite-outputBlack;var inputDelta=inputWhite-inputBlack;while(cnt<=256){perc=cnt/256;if(perc<=min){colorValue=inputDelta<0?outputWhite:outputBlack;}else if(perc>=max){colorValue=inputDelta<0?outputBlack:outputWhite;}else {colorValue=outputBlack+outputDelta*Math.pow((perc-inputBlack)/inputDelta,1/gamma);}table[pos]=colorValue;pos+=1;cnt+=256/(segments-1);}return table.join(' ');};SVGProLevelsFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var val;var effectElements=this.filterManager.effectElements;if(this.feFuncRComposed&&(forceRender||effectElements[3].p._mdf||effectElements[4].p._mdf||effectElements[5].p._mdf||effectElements[6].p._mdf||effectElements[7].p._mdf)){val=this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);this.feFuncRComposed.setAttribute('tableValues',val);this.feFuncGComposed.setAttribute('tableValues',val);this.feFuncBComposed.setAttribute('tableValues',val);}if(this.feFuncR&&(forceRender||effectElements[10].p._mdf||effectElements[11].p._mdf||effectElements[12].p._mdf||effectElements[13].p._mdf||effectElements[14].p._mdf)){val=this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);this.feFuncR.setAttribute('tableValues',val);}if(this.feFuncG&&(forceRender||effectElements[17].p._mdf||effectElements[18].p._mdf||effectElements[19].p._mdf||effectElements[20].p._mdf||effectElements[21].p._mdf)){val=this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);this.feFuncG.setAttribute('tableValues',val);}if(this.feFuncB&&(forceRender||effectElements[24].p._mdf||effectElements[25].p._mdf||effectElements[26].p._mdf||effectElements[27].p._mdf||effectElements[28].p._mdf)){val=this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);this.feFuncB.setAttribute('tableValues',val);}if(this.feFuncA&&(forceRender||effectElements[31].p._mdf||effectElements[32].p._mdf||effectElements[33].p._mdf||effectElements[34].p._mdf||effectElements[35].p._mdf)){val=this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);this.feFuncA.setAttribute('tableValues',val);}}};function SVGDropShadowEffect(filter,filterManager,elem,id,source){var globalFilterSize=filterManager.container.globalData.renderConfig.filterSize;var filterSize=filterManager.data.fs||globalFilterSize;filter.setAttribute('x',filterSize.x||globalFilterSize.x);filter.setAttribute('y',filterSize.y||globalFilterSize.y);filter.setAttribute('width',filterSize.width||globalFilterSize.width);filter.setAttribute('height',filterSize.height||globalFilterSize.height);this.filterManager=filterManager;var feGaussianBlur=createNS('feGaussianBlur');feGaussianBlur.setAttribute('in','SourceAlpha');feGaussianBlur.setAttribute('result',id+'_drop_shadow_1');feGaussianBlur.setAttribute('stdDeviation','0');this.feGaussianBlur=feGaussianBlur;filter.appendChild(feGaussianBlur);var feOffset=createNS('feOffset');feOffset.setAttribute('dx','25');feOffset.setAttribute('dy','0');feOffset.setAttribute('in',id+'_drop_shadow_1');feOffset.setAttribute('result',id+'_drop_shadow_2');this.feOffset=feOffset;filter.appendChild(feOffset);var feFlood=createNS('feFlood');feFlood.setAttribute('flood-color','#00ff00');feFlood.setAttribute('flood-opacity','1');feFlood.setAttribute('result',id+'_drop_shadow_3');this.feFlood=feFlood;filter.appendChild(feFlood);var feComposite=createNS('feComposite');feComposite.setAttribute('in',id+'_drop_shadow_3');feComposite.setAttribute('in2',id+'_drop_shadow_2');feComposite.setAttribute('operator','in');feComposite.setAttribute('result',id+'_drop_shadow_4');filter.appendChild(feComposite);var feMerge=this.createMergeNode(id,[id+'_drop_shadow_4',source]);filter.appendChild(feMerge);//
		}extendPrototype([SVGComposableEffect],SVGDropShadowEffect);SVGDropShadowEffect.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){if(forceRender||this.filterManager.effectElements[4].p._mdf){this.feGaussianBlur.setAttribute('stdDeviation',this.filterManager.effectElements[4].p.v/4);}if(forceRender||this.filterManager.effectElements[0].p._mdf){var col=this.filterManager.effectElements[0].p.v;this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));}if(forceRender||this.filterManager.effectElements[1].p._mdf){this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);}if(forceRender||this.filterManager.effectElements[2].p._mdf||this.filterManager.effectElements[3].p._mdf){var distance=this.filterManager.effectElements[3].p.v;var angle=(this.filterManager.effectElements[2].p.v-90)*degToRads;var x=distance*Math.cos(angle);var y=distance*Math.sin(angle);this.feOffset.setAttribute('dx',x);this.feOffset.setAttribute('dy',y);}}};var _svgMatteSymbols=[];function SVGMatte3Effect(filterElem,filterManager,elem){this.initialized=false;this.filterManager=filterManager;this.filterElem=filterElem;this.elem=elem;elem.matteElement=createNS('g');elem.matteElement.appendChild(elem.layerElement);elem.matteElement.appendChild(elem.transformedElement);elem.baseElement=elem.matteElement;}SVGMatte3Effect.prototype.findSymbol=function(mask){var i=0;var len=_svgMatteSymbols.length;while(i<len){if(_svgMatteSymbols[i]===mask){return _svgMatteSymbols[i];}i+=1;}return null;};SVGMatte3Effect.prototype.replaceInParent=function(mask,symbolId){var parentNode=mask.layerElement.parentNode;if(!parentNode){return;}var children=parentNode.children;var i=0;var len=children.length;while(i<len){if(children[i]===mask.layerElement){break;}i+=1;}var nextChild;if(i<=len-2){nextChild=children[i+1];}var useElem=createNS('use');useElem.setAttribute('href','#'+symbolId);if(nextChild){parentNode.insertBefore(useElem,nextChild);}else {parentNode.appendChild(useElem);}};SVGMatte3Effect.prototype.setElementAsMask=function(elem,mask){if(!this.findSymbol(mask)){var symbolId=createElementID();var masker=createNS('mask');masker.setAttribute('id',mask.layerId);masker.setAttribute('mask-type','alpha');_svgMatteSymbols.push(mask);var defs=elem.globalData.defs;defs.appendChild(masker);var symbol=createNS('symbol');symbol.setAttribute('id',symbolId);this.replaceInParent(mask,symbolId);symbol.appendChild(mask.layerElement);defs.appendChild(symbol);var useElem=createNS('use');useElem.setAttribute('href','#'+symbolId);masker.appendChild(useElem);mask.data.hd=false;mask.show();}elem.setMatte(mask.layerId);};SVGMatte3Effect.prototype.initialize=function(){var ind=this.filterManager.effectElements[0].p.v;var elements=this.elem.comp.elements;var i=0;var len=elements.length;while(i<len){if(elements[i]&&elements[i].data.ind===ind){this.setElementAsMask(this.elem,elements[i]);}i+=1;}this.initialized=true;};SVGMatte3Effect.prototype.renderFrame=function(){if(!this.initialized){this.initialize();}};function SVGGaussianBlurEffect(filter,filterManager,elem,id){// Outset the filter region by 100% on all sides to accommodate blur expansion.
		filter.setAttribute('x','-100%');filter.setAttribute('y','-100%');filter.setAttribute('width','300%');filter.setAttribute('height','300%');this.filterManager=filterManager;var feGaussianBlur=createNS('feGaussianBlur');feGaussianBlur.setAttribute('result',id);filter.appendChild(feGaussianBlur);this.feGaussianBlur=feGaussianBlur;}SVGGaussianBlurEffect.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){// Empirical value, matching AE's blur appearance.
		var kBlurrinessToSigma=0.3;var sigma=this.filterManager.effectElements[0].p.v*kBlurrinessToSigma;// Dimensions mapping:
		//
		//   1 -> horizontal & vertical
		//   2 -> horizontal only
		//   3 -> vertical only
		//
		var dimensions=this.filterManager.effectElements[1].p.v;var sigmaX=dimensions==3?0:sigma;// eslint-disable-line eqeqeq
		var sigmaY=dimensions==2?0:sigma;// eslint-disable-line eqeqeq
		this.feGaussianBlur.setAttribute('stdDeviation',sigmaX+' '+sigmaY);// Repeat edges mapping:
		//
		//   0 -> off -> duplicate
		//   1 -> on  -> wrap
		var edgeMode=this.filterManager.effectElements[2].p.v==1?'wrap':'duplicate';// eslint-disable-line eqeqeq
		this.feGaussianBlur.setAttribute('edgeMode',edgeMode);}};function TransformEffect(){}TransformEffect.prototype.init=function(effectsManager){this.effectsManager=effectsManager;this.type=effectTypes.TRANSFORM_EFFECT;this.matrix=new Matrix();this.opacity=-1;this._mdf=false;this._opMdf=false;};TransformEffect.prototype.renderFrame=function(forceFrame){this._opMdf=false;this._mdf=false;if(forceFrame||this.effectsManager._mdf){var effectElements=this.effectsManager.effectElements;var anchor=effectElements[0].p.v;var position=effectElements[1].p.v;var isUniformScale=effectElements[2].p.v===1;var scaleHeight=effectElements[3].p.v;var scaleWidth=isUniformScale?scaleHeight:effectElements[4].p.v;var skew=effectElements[5].p.v;var skewAxis=effectElements[6].p.v;var rotation=effectElements[7].p.v;this.matrix.reset();this.matrix.translate(-anchor[0],-anchor[1],anchor[2]);this.matrix.scale(scaleWidth*0.01,scaleHeight*0.01,1);this.matrix.rotate(-rotation*degToRads);this.matrix.skewFromAxis(-skew*degToRads,(skewAxis+90)*degToRads);this.matrix.translate(position[0],position[1],0);this._mdf=true;if(this.opacity!==effectElements[8].p.v){this.opacity=effectElements[8].p.v;this._opMdf=true;}}};function SVGTransformEffect(_,filterManager){this.init(filterManager);}extendPrototype([TransformEffect],SVGTransformEffect);function CVTransformEffect(effectsManager){this.init(effectsManager);}extendPrototype([TransformEffect],CVTransformEffect);registerRenderer('canvas',CanvasRenderer);registerRenderer('html',HybridRenderer);registerRenderer('svg',SVGRenderer);// Registering shape modifiers
		ShapeModifiers.registerModifier('tm',TrimModifier);ShapeModifiers.registerModifier('pb',PuckerAndBloatModifier);ShapeModifiers.registerModifier('rp',RepeaterModifier);ShapeModifiers.registerModifier('rd',RoundCornersModifier);ShapeModifiers.registerModifier('zz',ZigZagModifier);ShapeModifiers.registerModifier('op',OffsetPathModifier);// Registering expression plugin
		setExpressionsPlugin(Expressions);setExpressionInterfaces(getInterface);initialize$1();initialize();// Registering svg effects
		registerEffect$1(20,SVGTintFilter,true);registerEffect$1(21,SVGFillFilter,true);registerEffect$1(22,SVGStrokeEffect,false);registerEffect$1(23,SVGTritoneFilter,true);registerEffect$1(24,SVGProLevelsFilter,true);registerEffect$1(25,SVGDropShadowEffect,true);registerEffect$1(28,SVGMatte3Effect,false);registerEffect$1(29,SVGGaussianBlurEffect,true);registerEffect$1(35,SVGTransformEffect,false);registerEffect(35,CVTransformEffect);return lottie;}); 
	} (lottie$1, lottie$1.exports));

	var lottieExports = lottie$1.exports;
	var lottie = /*@__PURE__*/getDefaultExportFromCjs(lottieExports);

	var react = function equal(a, b) {
	  if (a === b) return true;
	  if (a && b && typeof a == 'object' && typeof b == 'object') {
	    if (a.constructor !== b.constructor) return false;
	    var length, i, keys;
	    if (Array.isArray(a)) {
	      length = a.length;
	      if (length != b.length) return false;
	      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;
	      return true;
	    }
	    if (a instanceof Map && b instanceof Map) {
	      if (a.size !== b.size) return false;
	      for (i of a.entries()) if (!b.has(i[0])) return false;
	      for (i of a.entries()) if (!equal(i[1], b.get(i[0]))) return false;
	      return true;
	    }
	    if (a instanceof Set && b instanceof Set) {
	      if (a.size !== b.size) return false;
	      for (i of a.entries()) if (!b.has(i[0])) return false;
	      return true;
	    }
	    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
	      length = a.length;
	      if (length != b.length) return false;
	      for (i = length; i-- !== 0;) if (a[i] !== b[i]) return false;
	      return true;
	    }
	    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
	    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
	    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
	    keys = Object.keys(a);
	    length = keys.length;
	    if (length !== Object.keys(b).length) return false;
	    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
	    for (i = length; i-- !== 0;) {
	      var key = keys[i];
	      if (key === '_owner' && a.$$typeof) {
	        // React-specific: avoid traversing React elements' _owner.
	        //  _owner contains circular references
	        // and is not needed when comparing the actual elements (and not their owners)
	        continue;
	      }
	      if (!equal(a[key], b[key])) return false;
	    }
	    return true;
	  }

	  // true if both NaN, false otherwise
	  return a !== a && b !== b;
	};

	var equal = /*@__PURE__*/getDefaultExportFromCjs(react);

	var rfdc_1 = rfdc;
	function copyBuffer(cur) {
	  if (cur instanceof Buffer) {
	    return Buffer.from(cur);
	  }
	  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length);
	}
	function rfdc(opts) {
	  opts = opts || {};
	  if (opts.circles) return rfdcCircles(opts);
	  return opts.proto ? cloneProto : clone;
	  function cloneArray(a, fn) {
	    var keys = Object.keys(a);
	    var a2 = new Array(keys.length);
	    for (var i = 0; i < keys.length; i++) {
	      var k = keys[i];
	      var cur = a[k];
	      if (typeof cur !== 'object' || cur === null) {
	        a2[k] = cur;
	      } else if (cur instanceof Date) {
	        a2[k] = new Date(cur);
	      } else if (ArrayBuffer.isView(cur)) {
	        a2[k] = copyBuffer(cur);
	      } else {
	        a2[k] = fn(cur);
	      }
	    }
	    return a2;
	  }
	  function clone(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, clone);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone));
	    var o2 = {};
	    for (var k in o) {
	      if (Object.hasOwnProperty.call(o, k) === false) continue;
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), clone));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), clone));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        o2[k] = clone(cur);
	      }
	    }
	    return o2;
	  }
	  function cloneProto(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, cloneProto);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto));
	    var o2 = {};
	    for (var k in o) {
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        o2[k] = cloneProto(cur);
	      }
	    }
	    return o2;
	  }
	}
	function rfdcCircles(opts) {
	  var refs = [];
	  var refsNew = [];
	  return opts.proto ? cloneProto : clone;
	  function cloneArray(a, fn) {
	    var keys = Object.keys(a);
	    var a2 = new Array(keys.length);
	    for (var i = 0; i < keys.length; i++) {
	      var k = keys[i];
	      var cur = a[k];
	      if (typeof cur !== 'object' || cur === null) {
	        a2[k] = cur;
	      } else if (cur instanceof Date) {
	        a2[k] = new Date(cur);
	      } else if (ArrayBuffer.isView(cur)) {
	        a2[k] = copyBuffer(cur);
	      } else {
	        var index = refs.indexOf(cur);
	        if (index !== -1) {
	          a2[k] = refsNew[index];
	        } else {
	          a2[k] = fn(cur);
	        }
	      }
	    }
	    return a2;
	  }
	  function clone(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, clone);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone));
	    var o2 = {};
	    refs.push(o);
	    refsNew.push(o2);
	    for (var k in o) {
	      if (Object.hasOwnProperty.call(o, k) === false) continue;
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), clone));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), clone));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        var i = refs.indexOf(cur);
	        if (i !== -1) {
	          o2[k] = refsNew[i];
	        } else {
	          o2[k] = clone(cur);
	        }
	      }
	    }
	    refs.pop();
	    refsNew.pop();
	    return o2;
	  }
	  function cloneProto(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, cloneProto);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto));
	    var o2 = {};
	    refs.push(o);
	    refsNew.push(o2);
	    for (var k in o) {
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        var i = refs.indexOf(cur);
	        if (i !== -1) {
	          o2[k] = refsNew[i];
	        } else {
	          o2[k] = cloneProto(cur);
	        }
	      }
	    }
	    refs.pop();
	    refsNew.pop();
	    return o2;
	  }
	}

	var _default = rfdc_1();

	var clone = /*@__PURE__*/getDefaultExportFromCjs(_default);

	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	    return target;
	  };
	  return _extends.apply(this, arguments);
	}
	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	  return target;
	}
	function createCommonjsModule(fn, module) {
	  return module = {
	    exports: {}
	  }, fn(module, module.exports), module.exports;
	}
	var reactIs_development = createCommonjsModule(function (module, exports) {
	  {
	    (function () {
	      // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	      // nor polyfill, then a plain number is used for performance.
	      var hasSymbol = typeof Symbol === 'function' && Symbol.for;
	      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
	      // (unstable) APIs that have been removed. Can we remove the symbols?

	      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
	      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
	      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
	      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
	      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
	      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
	      function isValidElementType(type) {
	        return typeof type === 'string' || typeof type === 'function' ||
	        // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
	      }
	      function typeOf(object) {
	        if (typeof object === 'object' && object !== null) {
	          var $$typeof = object.$$typeof;
	          switch ($$typeof) {
	            case REACT_ELEMENT_TYPE:
	              var type = object.type;
	              switch (type) {
	                case REACT_ASYNC_MODE_TYPE:
	                case REACT_CONCURRENT_MODE_TYPE:
	                case REACT_FRAGMENT_TYPE:
	                case REACT_PROFILER_TYPE:
	                case REACT_STRICT_MODE_TYPE:
	                case REACT_SUSPENSE_TYPE:
	                  return type;
	                default:
	                  var $$typeofType = type && type.$$typeof;
	                  switch ($$typeofType) {
	                    case REACT_CONTEXT_TYPE:
	                    case REACT_FORWARD_REF_TYPE:
	                    case REACT_LAZY_TYPE:
	                    case REACT_MEMO_TYPE:
	                    case REACT_PROVIDER_TYPE:
	                      return $$typeofType;
	                    default:
	                      return $$typeof;
	                  }
	              }
	            case REACT_PORTAL_TYPE:
	              return $$typeof;
	          }
	        }
	        return undefined;
	      } // AsyncMode is deprecated along with isAsyncMode

	      var AsyncMode = REACT_ASYNC_MODE_TYPE;
	      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	      var ContextConsumer = REACT_CONTEXT_TYPE;
	      var ContextProvider = REACT_PROVIDER_TYPE;
	      var Element = REACT_ELEMENT_TYPE;
	      var ForwardRef = REACT_FORWARD_REF_TYPE;
	      var Fragment = REACT_FRAGMENT_TYPE;
	      var Lazy = REACT_LAZY_TYPE;
	      var Memo = REACT_MEMO_TYPE;
	      var Portal = REACT_PORTAL_TYPE;
	      var Profiler = REACT_PROFILER_TYPE;
	      var StrictMode = REACT_STRICT_MODE_TYPE;
	      var Suspense = REACT_SUSPENSE_TYPE;
	      var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

	      function isAsyncMode(object) {
	        {
	          if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
	          }
	        }
	        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
	      }
	      function isConcurrentMode(object) {
	        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
	      }
	      function isContextConsumer(object) {
	        return typeOf(object) === REACT_CONTEXT_TYPE;
	      }
	      function isContextProvider(object) {
	        return typeOf(object) === REACT_PROVIDER_TYPE;
	      }
	      function isElement(object) {
	        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	      }
	      function isForwardRef(object) {
	        return typeOf(object) === REACT_FORWARD_REF_TYPE;
	      }
	      function isFragment(object) {
	        return typeOf(object) === REACT_FRAGMENT_TYPE;
	      }
	      function isLazy(object) {
	        return typeOf(object) === REACT_LAZY_TYPE;
	      }
	      function isMemo(object) {
	        return typeOf(object) === REACT_MEMO_TYPE;
	      }
	      function isPortal(object) {
	        return typeOf(object) === REACT_PORTAL_TYPE;
	      }
	      function isProfiler(object) {
	        return typeOf(object) === REACT_PROFILER_TYPE;
	      }
	      function isStrictMode(object) {
	        return typeOf(object) === REACT_STRICT_MODE_TYPE;
	      }
	      function isSuspense(object) {
	        return typeOf(object) === REACT_SUSPENSE_TYPE;
	      }
	      exports.AsyncMode = AsyncMode;
	      exports.ConcurrentMode = ConcurrentMode;
	      exports.ContextConsumer = ContextConsumer;
	      exports.ContextProvider = ContextProvider;
	      exports.Element = Element;
	      exports.ForwardRef = ForwardRef;
	      exports.Fragment = Fragment;
	      exports.Lazy = Lazy;
	      exports.Memo = Memo;
	      exports.Portal = Portal;
	      exports.Profiler = Profiler;
	      exports.StrictMode = StrictMode;
	      exports.Suspense = Suspense;
	      exports.isAsyncMode = isAsyncMode;
	      exports.isConcurrentMode = isConcurrentMode;
	      exports.isContextConsumer = isContextConsumer;
	      exports.isContextProvider = isContextProvider;
	      exports.isElement = isElement;
	      exports.isForwardRef = isForwardRef;
	      exports.isFragment = isFragment;
	      exports.isLazy = isLazy;
	      exports.isMemo = isMemo;
	      exports.isPortal = isPortal;
	      exports.isProfiler = isProfiler;
	      exports.isStrictMode = isStrictMode;
	      exports.isSuspense = isSuspense;
	      exports.isValidElementType = isValidElementType;
	      exports.typeOf = typeOf;
	    })();
	  }
	});
	var reactIs = createCommonjsModule(function (module) {
	  {
	    module.exports = reactIs_development;
	  }
	});

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	function toObject(val) {
	  if (val === null || val === undefined) {
	    throw new TypeError('Object.assign cannot be called with null or undefined');
	  }
	  return Object(val);
	}
	function shouldUseNative() {
	  try {
	    if (!Object.assign) {
	      return false;
	    }

	    // Detect buggy property enumeration order in older V8 versions.

	    // https://bugs.chromium.org/p/v8/issues/detail?id=4118
	    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
	    test1[5] = 'de';
	    if (Object.getOwnPropertyNames(test1)[0] === '5') {
	      return false;
	    }

	    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
	    var test2 = {};
	    for (var i = 0; i < 10; i++) {
	      test2['_' + String.fromCharCode(i)] = i;
	    }
	    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
	      return test2[n];
	    });
	    if (order2.join('') !== '0123456789') {
	      return false;
	    }

	    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
	    var test3 = {};
	    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
	      test3[letter] = letter;
	    });
	    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
	      return false;
	    }
	    return true;
	  } catch (err) {
	    // We don't expect any of the above to throw, but better to be safe.
	    return false;
	  }
	}
	var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	  var from;
	  var to = toObject(target);
	  var symbols;
	  for (var s = 1; s < arguments.length; s++) {
	    from = Object(arguments[s]);
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	    if (getOwnPropertySymbols) {
	      symbols = getOwnPropertySymbols(from);
	      for (var i = 0; i < symbols.length; i++) {
	        if (propIsEnumerable.call(from, symbols[i])) {
	          to[symbols[i]] = from[symbols[i]];
	        }
	      }
	    }
	  }
	  return to;
	};

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	var ReactPropTypesSecret_1 = ReactPropTypesSecret;
	var has = Function.call.bind(Object.prototype.hasOwnProperty);
	var printWarning = function () {};
	{
	  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
	  var loggedTypeFailures = {};
	  var has$1 = has;
	  printWarning = function (text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {/**/}
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  {
	    for (var typeSpecName in typeSpecs) {
	      if (has$1(typeSpecs, typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;
	          var stack = getStack ? getStack() : '';
	          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
	        }
	      }
	    }
	  }
	}

	/**
	 * Resets warning cache when testing.
	 *
	 * @private
	 */
	checkPropTypes.resetWarningCache = function () {
	  {
	    loggedTypeFailures = {};
	  }
	};
	var checkPropTypes_1 = checkPropTypes;
	var printWarning$1 = function () {};
	{
	  printWarning$1 = function (text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}
	function emptyFunctionThatReturnsNull() {
	  return null;
	}
	var factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bigint: createPrimitiveTypeChecker('bigint'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),
	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    elementType: createElementTypeTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message, data) {
	    this.message = message;
	    this.data = data && typeof data === 'object' ? data : {};
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;
	  function createChainableTypeChecker(validate) {
	    {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;
	      if (secret !== ReactPropTypesSecret_1) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (!manualPropTypeCallCache[cacheKey] &&
	          // Avoid spamming the console because they are often not actionable except for lib authors
	          manualPropTypeWarningCount < 3) {
	            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }
	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);
	    return chainedCheckType;
	  }
	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
	          expectedType: expectedType
	        });
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }
	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createElementTypeTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!reactIs.isValidElementType(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      {
	        if (arguments.length > 1) {
	          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
	        } else {
	          printWarning$1('Invalid argument supplied to oneOf, expected an array.');
	        }
	      }
	      return emptyFunctionThatReturnsNull;
	    }
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }
	      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
	        var type = getPreciseType(value);
	        if (type === 'symbol') {
	          return String(value);
	        }
	        return value;
	      });
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (has(propValue, key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') ;
	      return emptyFunctionThatReturnsNull;
	    }
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
	        return emptyFunctionThatReturnsNull;
	      }
	    }
	    function validate(props, propName, componentName, location, propFullName) {
	      var expectedTypes = [];
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1);
	        if (checkerResult == null) {
	          return null;
	        }
	        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
	          expectedTypes.push(checkerResult.data.expectedType);
	        }
	      }
	      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function invalidValidatorError(componentName, location, propFullName, key, type) {
	    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
	  }
	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from props.
	      var allKeys = objectAssign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (has(shapeTypes, key) && typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        if (!checker) {
	          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }
	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }
	        return true;
	      default:
	        return false;
	    }
	  }
	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // falsy value can't be a Symbol
	    if (!propValue) {
	      return false;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }
	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }
	  ReactPropTypes.checkPropTypes = checkPropTypes_1;
	  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	  return ReactPropTypes;
	};
	var propTypes = createCommonjsModule(function (module) {
	  /**
	   * Copyright (c) 2013-present, Facebook, Inc.
	   *
	   * This source code is licensed under the MIT license found in the
	   * LICENSE file in the root directory of this source tree.
	   */

	  {
	    var ReactIs = reactIs;

	    // By explicitly using `prop-types` you are opting into new development behavior.
	    // http://fb.me/prop-types-in-prod
	    var throwOnDirectAccess = true;
	    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
	  }
	});
	var propTypes$1 = {
	  animationData: propTypes.object,
	  path: propTypes.string,
	  play: propTypes.bool,
	  goTo: propTypes.number,
	  speed: propTypes.number,
	  direction: propTypes.number,
	  loop: propTypes.oneOfType([propTypes.number, propTypes.bool]),
	  useSubframes: propTypes.bool,
	  segments: propTypes.oneOfType([propTypes.arrayOf(propTypes.number), propTypes.bool]),
	  rendererSettings: propTypes.object,
	  renderer: propTypes.string,
	  audioFactory: propTypes.func,
	  onComplete: propTypes.func,
	  onLoopComplete: propTypes.func,
	  onEnterFrame: propTypes.func,
	  onSegmentStart: propTypes.func
	};
	var emptyObject = {};
	var noOp = function noOp() {};
	var makeLottiePlayer = function makeLottiePlayer(_ref) {
	  var loadAnimation = _ref.loadAnimation;
	  var Lottie = /*#__PURE__*/reactExports.memo( /*#__PURE__*/reactExports.forwardRef(function (params, forwardedRef) {
	    var _params$animationData = params.animationData,
	      animationData = _params$animationData === void 0 ? null : _params$animationData,
	      _params$path = params.path,
	      path = _params$path === void 0 ? null : _params$path,
	      _params$play = params.play,
	      play = _params$play === void 0 ? null : _params$play,
	      _params$speed = params.speed,
	      speed = _params$speed === void 0 ? 1 : _params$speed,
	      _params$direction = params.direction,
	      direction = _params$direction === void 0 ? 1 : _params$direction,
	      _params$segments = params.segments,
	      segmentsIn = _params$segments === void 0 ? null : _params$segments,
	      _params$goTo = params.goTo,
	      goTo = _params$goTo === void 0 ? null : _params$goTo,
	      _params$useSubframes = params.useSubframes,
	      useSubframes = _params$useSubframes === void 0 ? true : _params$useSubframes,
	      _params$renderer = params.renderer,
	      renderer = _params$renderer === void 0 ? 'svg' : _params$renderer,
	      _params$loop = params.loop,
	      loop = _params$loop === void 0 ? true : _params$loop,
	      _params$rendererSetti = params.rendererSettings,
	      rendererSettingsIn = _params$rendererSetti === void 0 ? emptyObject : _params$rendererSetti,
	      _params$audioFactory = params.audioFactory,
	      audioFactory = _params$audioFactory === void 0 ? null : _params$audioFactory,
	      _params$onLoad = params.onLoad,
	      onLoad = _params$onLoad === void 0 ? noOp : _params$onLoad,
	      _params$onComplete = params.onComplete,
	      onComplete = _params$onComplete === void 0 ? noOp : _params$onComplete,
	      _params$onLoopComplet = params.onLoopComplete,
	      onLoopComplete = _params$onLoopComplet === void 0 ? noOp : _params$onLoopComplet,
	      _params$onEnterFrame = params.onEnterFrame,
	      onEnterFrame = _params$onEnterFrame === void 0 ? noOp : _params$onEnterFrame,
	      _params$onSegmentStar = params.onSegmentStart,
	      onSegmentStart = _params$onSegmentStar === void 0 ? noOp : _params$onSegmentStar,
	      props = _objectWithoutPropertiesLoose(params, ["animationData", "path", "play", "speed", "direction", "segments", "goTo", "useSubframes", "renderer", "loop", "rendererSettings", "audioFactory", "onLoad", "onComplete", "onLoopComplete", "onEnterFrame", "onSegmentStart"]);
	    var animElementRef = reactExports.useRef();
	    var animRef = reactExports.useRef();
	    var _useState = reactExports.useState(false),
	      ready = _useState[0],
	      setReady = _useState[1];
	    var _useState2 = reactExports.useState(segmentsIn),
	      segments = _useState2[0],
	      setSegments = _useState2[1];
	    reactExports.useEffect(function () {
	      if (!equal(segments, segmentsIn)) setSegments(segmentsIn);
	    }, [segmentsIn, segments]);
	    var _useState3 = reactExports.useState(rendererSettingsIn),
	      rendererSettings = _useState3[0],
	      setRendererSettings = _useState3[1];
	    reactExports.useEffect(function () {
	      if (!equal(rendererSettings, rendererSettingsIn)) setRendererSettings(rendererSettingsIn);
	    }, [rendererSettingsIn, rendererSettings]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('complete', onComplete);
	      };
	    }, [onComplete]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('loopComplete', onLoopComplete);
	      };
	    }, [onLoopComplete]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('enterFrame', onEnterFrame);
	      };
	    }, [onEnterFrame]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('segmentStart', onSegmentStart);
	      };
	    }, [onSegmentStart]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('DOMLoaded', onLoad);
	      };
	    }, [onLoad]);
	    var setLottieRefs = reactExports.useCallback(function (newRef) {
	      animRef.current = newRef;
	      if (typeof forwardedRef === 'function') {
	        forwardedRef(newRef);
	      } else if (forwardedRef !== undefined && forwardedRef !== null) {
	        forwardedRef.current = newRef;
	      }
	    }, [forwardedRef]);
	    reactExports.useEffect(function () {
	      function parseAnimationData() {
	        if (animationData == null || typeof animationData !== 'object') return animationData;
	        if (typeof animationData["default"] === 'object') {
	          return clone(animationData["default"]);
	        }
	        return clone(animationData);
	      }
	      var lottie = loadAnimation({
	        animationData: parseAnimationData(),
	        path: path,
	        container: animElementRef.current,
	        renderer: renderer,
	        loop: false,
	        autoplay: false,
	        rendererSettings: rendererSettings,
	        audioFactory: audioFactory
	      });
	      setLottieRefs(lottie);
	      var onDomLoaded = function onDomLoaded() {
	        return setReady(true);
	      };
	      animRef.current.addEventListener('DOMLoaded', onDomLoaded);
	      return function () {
	        animRef.current.removeEventListener('DOMLoaded', onDomLoaded);
	        setReady(false);
	        animRef.current.destroy();
	        setLottieRefs(undefined);
	      };
	    }, [loop, renderer, rendererSettings, animationData, path, audioFactory, setLottieRefs]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('DOMLoaded', onLoad);
	    }, [onLoad]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('complete', onComplete);
	    }, [onComplete]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('loopComplete', onLoopComplete);
	    }, [onLoopComplete]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('enterFrame', onEnterFrame);
	    }, [onEnterFrame]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('segmentStart', onSegmentStart);
	    }, [onSegmentStart]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      animRef.current.loop = loop;
	    }, [ready, loop]);
	    var wasPlayingSegmentsRef = reactExports.useRef(false);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      function playReverse(lastFrame) {
	        animRef.current.goToAndPlay(lastFrame, true);
	        animRef.current.setDirection(direction);
	      }
	      if (play === true) {
	        var force = true;
	        if (segments) {
	          animRef.current.playSegments(segments, force);
	          wasPlayingSegmentsRef.current = true;
	          if (direction === -1) {
	            var lastFrame = segments[1];
	            playReverse(lastFrame);
	          }
	        } else {
	          if (wasPlayingSegmentsRef.current) animRef.current.resetSegments(force);
	          wasPlayingSegmentsRef.current = false;
	          if (direction === -1) {
	            var _lastFrame = animRef.current.getDuration(true);
	            playReverse(_lastFrame);
	          } else {
	            animRef.current.play();
	          }
	        }
	      } else if (play === false) {
	        animRef.current.pause();
	      }
	    }, [play, segments, ready, direction]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      if (Number.isNaN(speed)) return;
	      animRef.current.setSpeed(speed);
	    }, [speed, ready]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      animRef.current.setDirection(direction);
	    }, [direction, ready]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      if (goTo == null) return;
	      var isFrame = true;
	      if (play) animRef.current.goToAndPlay(goTo, isFrame);else animRef.current.goToAndStop(goTo, isFrame);
	    }, [goTo, play, ready]);
	    reactExports.useEffect(function () {
	      if (animRef.current.setSubframe) animRef.current.setSubframe(useSubframes);
	    }, [useSubframes]);
	    return /*#__PURE__*/React.createElement("div", _extends({}, props, {
	      ref: animElementRef
	    }));
	  }));
	  Lottie.propTypes = propTypes$1;
	  return Lottie;
	};
	var LottiePlayer = makeLottiePlayer(lottie);

	var v$2 = "5.9.0";
	var fr$2 = 30;
	var ip$2 = 0;
	var op$2 = 60;
	var w$2 = 277;
	var h$2 = 630;
	var nm$2 = "MafiaBanner3";
	var ddd$2 = 0;
	var assets$2 = [
	];
	var layers$2 = [
		{
			ddd: 0,
			ind: 1,
			ty: 4,
			nm: "Layer 1 Outlines",
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 0,
					k: [
						138.5,
						297.727,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						138.538,
						328.477,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						100,
						100,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			hasMask: true,
			masksProperties: [
				{
					inv: false,
					mode: "a",
					pt: {
						a: 0,
						k: {
							i: [
								[
									0,
									0
								],
								[
									0,
									0
								],
								[
									0,
									0
								],
								[
									0,
									0
								]
							],
							o: [
								[
									0,
									0
								],
								[
									0,
									0
								],
								[
									0,
									0
								],
								[
									0,
									0
								]
							],
							v: [
								[
									-0.076,
									30.25
								],
								[
									0.274,
									660.704
								],
								[
									276.801,
									660.704
								],
								[
									276.5,
									30.25
								]
							],
							c: true
						},
						ix: 1
					},
					o: {
						a: 0,
						k: 100,
						ix: 3
					},
					x: {
						a: 0,
						k: 0,
						ix: 4
					},
					nm: "Mask 1"
				}
			],
			shapes: [
				{
					ty: "gr",
					it: [
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.005,
													-0.13
												],
												[
													0,
													0
												],
												[
													-0.099,
													-0.053
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.131,
													-2.609
												],
												[
													0.035,
													-0.132
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.007,
													0.137
												],
												[
													0.1,
													0.052
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.131,
													2.609
												],
												[
													-0.025,
													0.136
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.022,
													0.131
												],
												[
													0,
													0
												],
												[
													0.126,
													2.614
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.1,
													0.052
												],
												[
													-0.005,
													0.137
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.035,
													-0.132
												],
												[
													-0.131,
													-2.609
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.099,
													-0.053
												],
												[
													0.007,
													-0.138
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-51.994,
													23.265
												],
												[
													-51.954,
													23.656
												],
												[
													-51.959,
													23.656
												],
												[
													-49.145,
													27.685
												],
												[
													-49.142,
													27.686
												],
												[
													-48.972,
													27.756
												],
												[
													-49.142,
													27.826
												],
												[
													-49.145,
													27.828
												],
												[
													-51.959,
													31.849
												],
												[
													-52.017,
													32.254
												],
												[
													-52.042,
													32.352
												],
												[
													-52.067,
													32.254
												],
												[
													-52.124,
													31.849
												],
												[
													-54.938,
													27.828
												],
												[
													-54.941,
													27.826
												],
												[
													-55.091,
													27.756
												],
												[
													-54.941,
													27.686
												],
												[
													-54.938,
													27.685
												],
												[
													-52.124,
													23.664
												],
												[
													-52.082,
													23.255
												],
												[
													-52.039,
													23.015
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.043,
													-0.158
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.007,
													0.163
												],
												[
													-0.108,
													0.056
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.151,
													3.149
												],
												[
													0.027,
													0.155
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.007,
													-0.165
												],
												[
													0.108,
													-0.056
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.159,
													-3.141
												]
											],
											o: [
												[
													0.007,
													0.165
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.043,
													-0.158
												],
												[
													0.159,
													-3.141
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.108,
													-0.057
												],
												[
													-0.007,
													-0.157
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.03,
													0.163
												],
												[
													-0.159,
													3.141
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.107,
													0.056
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-57.527,
													38.299
												],
												[
													-57.457,
													38.785
												],
												[
													-57.424,
													38.903
												],
												[
													-57.392,
													38.785
												],
												[
													-57.322,
													38.299
												],
												[
													-53.941,
													33.469
												],
												[
													-53.939,
													33.467
												],
												[
													-53.733,
													33.382
												],
												[
													-53.939,
													33.297
												],
												[
													-53.941,
													33.296
												],
												[
													-57.322,
													28.455
												],
												[
													-57.369,
													27.987
												],
												[
													-57.424,
													27.686
												],
												[
													-57.477,
													27.977
												],
												[
													-57.527,
													28.468
												],
												[
													-60.908,
													33.298
												],
												[
													-60.91,
													33.299
												],
												[
													-61.093,
													33.385
												],
												[
													-60.91,
													33.47
												],
												[
													-60.908,
													33.471
												],
												[
													-57.527,
													38.301
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 2,
									ty: "sh",
									ix: 3,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.007,
													-0.17
												],
												[
													0,
													0
												],
												[
													-0.035,
													-0.017
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.173,
													-3.42
												],
												[
													0.045,
													-0.17
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.01,
													0.178
												],
												[
													0.036,
													0.017
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.173,
													3.421
												],
												[
													-0.03,
													0.176
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.03,
													0.168
												],
												[
													0,
													0
												],
												[
													0.163,
													3.429
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.035,
													0.017
												],
												[
													-0.007,
													0.176
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.045,
													-0.17
												],
												[
													-0.173,
													-3.42
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.036,
													-0.017
												],
												[
													0.007,
													-0.178
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-50.315,
													33.618
												],
												[
													-50.265,
													34.124
												],
												[
													-50.26,
													34.121
												],
												[
													-46.619,
													39.331
												],
												[
													-46.396,
													39.424
												],
												[
													-46.619,
													39.517
												],
												[
													-50.26,
													44.714
												],
												[
													-50.335,
													45.238
												],
												[
													-50.37,
													45.366
												],
												[
													-50.405,
													45.238
												],
												[
													-50.48,
													44.714
												],
												[
													-54.122,
													39.517
												],
												[
													-54.317,
													39.424
												],
												[
													-54.122,
													39.331
												],
												[
													-50.48,
													34.134
												],
												[
													-50.428,
													33.605
												],
												[
													-50.373,
													33.294
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 3",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 3,
									ty: "sh",
									ix: 4,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.035,
													-0.133
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.005,
													0.138
												],
												[
													-0.1,
													0.053
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.13,
													2.609
												],
												[
													0.025,
													0.135
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.008,
													-0.13
												],
												[
													0.028,
													-0.013
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.131,
													-2.609
												]
											],
											o: [
												[
													0.008,
													0.138
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.035,
													-0.133
												],
												[
													0.13,
													-2.609
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.1,
													-0.052
												],
												[
													-0.008,
													-0.137
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.022,
													0.13
												],
												[
													-0.128,
													2.651
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.1,
													0.053
												],
												[
													0,
													0
												]
											],
											v: [
												[
													50.345,
													31.851
												],
												[
													50.403,
													32.257
												],
												[
													50.428,
													32.355
												],
												[
													50.453,
													32.257
												],
												[
													50.511,
													31.851
												],
												[
													53.324,
													27.83
												],
												[
													53.327,
													27.829
												],
												[
													53.478,
													27.759
												],
												[
													53.327,
													27.689
												],
												[
													53.325,
													27.687
												],
												[
													50.511,
													23.666
												],
												[
													50.468,
													23.258
												],
												[
													50.425,
													23.017
												],
												[
													50.38,
													23.268
												],
												[
													50.34,
													23.659
												],
												[
													47.523,
													27.689
												],
												[
													47.353,
													27.759
												],
												[
													47.523,
													27.829
												],
												[
													47.526,
													27.83
												],
												[
													50.34,
													31.851
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 4",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 4,
									ty: "sh",
									ix: 5,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.007,
													-0.165
												],
												[
													0,
													0
												],
												[
													-0.107,
													-0.056
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.159,
													-3.141
												],
												[
													0.043,
													-0.158
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.007,
													0.165
												],
												[
													0.108,
													0.056
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.151,
													3.147
												],
												[
													-0.028,
													0.155
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.03,
													0.163
												],
												[
													0,
													0
												],
												[
													0.159,
													3.142
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.107,
													0.056
												],
												[
													-0.007,
													0.163
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.042,
													-0.158
												],
												[
													-0.158,
													-3.141
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.106,
													-0.056
												],
												[
													0.007,
													-0.155
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													55.868,
													27.977
												],
												[
													55.918,
													28.468
												],
												[
													55.918,
													28.465
												],
												[
													59.299,
													33.296
												],
												[
													59.302,
													33.297
												],
												[
													59.484,
													33.382
												],
												[
													59.302,
													33.467
												],
												[
													59.299,
													33.469
												],
												[
													55.918,
													38.299
												],
												[
													55.848,
													38.785
												],
												[
													55.816,
													38.903
												],
												[
													55.783,
													38.785
												],
												[
													55.713,
													38.299
												],
												[
													52.332,
													33.469
												],
												[
													52.33,
													33.467
												],
												[
													52.124,
													33.382
												],
												[
													52.33,
													33.297
												],
												[
													52.332,
													33.296
												],
												[
													55.713,
													28.455
												],
												[
													55.761,
													27.987
												],
												[
													55.816,
													27.686
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 5",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 5,
									ty: "sh",
									ix: 6,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.173,
													3.421
												],
												[
													0.03,
													0.175
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.007,
													-0.17
												],
												[
													0.036,
													-0.017
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.173,
													-3.42
												],
												[
													-0.045,
													-0.17
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.007,
													0.176
												],
												[
													-0.035,
													0.017
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-0.035,
													-0.018
												],
												[
													-0.01,
													-0.177
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.03,
													0.168
												],
												[
													-0.166,
													3.429
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.036,
													0.017
												],
												[
													0.01,
													0.178
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.045,
													-0.17
												],
												[
													0.171,
													-3.42
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													52.711,
													39.427
												],
												[
													52.515,
													39.334
												],
												[
													48.874,
													34.136
												],
												[
													48.822,
													33.608
												],
												[
													48.766,
													33.297
												],
												[
													48.709,
													33.62
												],
												[
													48.659,
													34.126
												],
												[
													45.017,
													39.336
												],
												[
													44.794,
													39.429
												],
												[
													45.017,
													39.522
												],
												[
													48.659,
													44.719
												],
												[
													48.734,
													45.243
												],
												[
													48.769,
													45.371
												],
												[
													48.804,
													45.243
												],
												[
													48.879,
													44.719
												],
												[
													52.52,
													39.522
												],
												[
													52.716,
													39.429
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 6",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 6,
									ty: "sh",
									ix: 7,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.023,
													-0.055
												],
												[
													0,
													0
												],
												[
													-0.348,
													-0.143
												],
												[
													0,
													0
												],
												[
													-0.081,
													0.195
												],
												[
													-0.053,
													0.205
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.03,
													0.038
												],
												[
													0,
													0
												],
												[
													-0.067,
													0.168
												],
												[
													0,
													0
												],
												[
													0.361,
													0.15
												],
												[
													-0.005,
													0.015
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													36.492,
													-91.456
												],
												[
													36.412,
													-91.318
												],
												[
													36.409,
													-91.323
												],
												[
													36.828,
													-90.857
												],
												[
													38.121,
													-90.323
												],
												[
													38.783,
													-90.391
												],
												[
													38.853,
													-90.679
												],
												[
													39.615,
													-95.365
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 7",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 7,
									ty: "sh",
									ix: 8,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.336,
													0.09
												],
												[
													0.138,
													0.058
												],
												[
													0,
													0
												],
												[
													0.163,
													0.376
												],
												[
													-0.178,
													0.431
												],
												[
													-0.737,
													-0.303
												],
												[
													-0.173,
													-0.095
												],
												[
													-0.083,
													-0.035
												],
												[
													-0.289,
													0.223
												],
												[
													-0.331,
													0.368
												],
												[
													0,
													0
												],
												[
													-0.513,
													0.065
												],
												[
													-1.042,
													-0.429
												],
												[
													-0.246,
													-0.273
												],
												[
													0.08,
													-0.746
												],
												[
													0,
													0
												],
												[
													-0.278,
													-0.116
												],
												[
													-0.225,
													-0.045
												],
												[
													0,
													0
												],
												[
													0.378,
													-0.917
												],
												[
													0.393,
													-0.163
												],
												[
													0.447,
													0.183
												],
												[
													0.303,
													0.173
												],
												[
													0.126,
													0.053
												],
												[
													0.486,
													0.2
												],
												[
													0.193,
													0.048
												],
												[
													0.18,
													0.075
												],
												[
													0.125,
													0.386
												],
												[
													-0.178,
													0.431
												],
												[
													-0.529,
													-0.218
												],
												[
													-0.13,
													-0.077
												],
												[
													-0.07,
													-0.028
												],
												[
													-0.12,
													0.293
												],
												[
													0.05,
													0.313
												],
												[
													0.236,
													0.098
												],
												[
													0,
													0
												],
												[
													0.388,
													-0.945
												],
												[
													-0.236,
													-0.097
												],
												[
													-0.148,
													-0.038
												],
												[
													-0.071,
													-0.028
												],
												[
													0.339,
													-0.82
												],
												[
													0.351,
													-0.181
												],
												[
													0.389,
													0.16
												],
												[
													0.627,
													0.373
												],
												[
													0.529,
													0.218
												]
											],
											o: [
												[
													-0.777,
													-0.208
												],
												[
													0,
													0
												],
												[
													-0.431,
													-0.178
												],
												[
													-0.163,
													-0.376
												],
												[
													0.401,
													-0.975
												],
												[
													0.083,
													0.035
												],
												[
													0.173,
													0.096
												],
												[
													0.263,
													0.11
												],
												[
													0.075,
													-0.068
												],
												[
													0,
													0
												],
												[
													0.716,
													-0.795
												],
												[
													0.369,
													-0.028
												],
												[
													1.168,
													0.481
												],
												[
													0.248,
													0.27
												],
												[
													0,
													0
												],
												[
													-0.085,
													0.795
												],
												[
													0.083,
													0.035
												],
												[
													0,
													0
												],
												[
													0.779,
													0.32
												],
												[
													-0.188,
													0.459
												],
												[
													-0.391,
													0.163
												],
												[
													-0.195,
													-0.081
												],
												[
													-0.361,
													-0.231
												],
												[
													-0.293,
													-0.153
												],
												[
													-0.529,
													-0.218
												],
												[
													-0.754,
													-0.18
												],
												[
													-0.376,
													-0.156
												],
												[
													-0.125,
													-0.386
												],
												[
													0.338,
													-0.822
												],
												[
													0.07,
													0.03
												],
												[
													0.13,
													0.078
												],
												[
													0.263,
													0.108
												],
												[
													0.155,
													-0.376
												],
												[
													-0.05,
													-0.314
												],
												[
													0,
													0
												],
												[
													-0.794,
													-0.328
												],
												[
													-0.09,
													0.22
												],
												[
													0.07,
													0.028
												],
												[
													0.148,
													0.038
												],
												[
													0.516,
													0.213
												],
												[
													-0.183,
													0.443
												],
												[
													-0.35,
													0.18
												],
												[
													-0.195,
													-0.08
												],
												[
													-0.275,
													-0.161
												],
												[
													-0.571,
													-0.236
												]
											],
											v: [
												[
													28.731,
													-86.116
												],
												[
													27.358,
													-86.512
												],
												[
													27.355,
													-86.504
												],
												[
													26.466,
													-87.334
												],
												[
													26.488,
													-88.544
												],
												[
													28.195,
													-89.549
												],
												[
													28.578,
													-89.354
												],
												[
													28.962,
													-89.158
												],
												[
													29.789,
													-89.328
												],
												[
													30.398,
													-89.98
												],
												[
													36.653,
													-96.989
												],
												[
													38.499,
													-98.277
												],
												[
													40.617,
													-97.673
												],
												[
													42.737,
													-96.543
												],
												[
													42.985,
													-95.015
												],
												[
													41.993,
													-85.031
												],
												[
													42.283,
													-83.667
												],
												[
													42.747,
													-83.55
												],
												[
													42.978,
													-83.454
												],
												[
													43.579,
													-81.598
												],
												[
													42.707,
													-80.665
												],
												[
													41.451,
													-80.695
												],
												[
													40.705,
													-81.076
												],
												[
													39.975,
													-81.5
												],
												[
													38.805,
													-82.031
												],
												[
													37.725,
													-82.427
												],
												[
													36.322,
													-82.81
												],
												[
													35.57,
													-83.62
												],
												[
													35.648,
													-84.845
												],
												[
													36.948,
													-85.75
												],
												[
													37.249,
													-85.59
												],
												[
													37.55,
													-85.429
												],
												[
													38.126,
													-85.705
												],
												[
													38.284,
													-86.737
												],
												[
													37.855,
													-87.354
												],
												[
													35.081,
													-88.497
												],
												[
													33.307,
													-87.569
												],
												[
													33.525,
													-87.091
												],
												[
													33.851,
													-86.993
												],
												[
													34.177,
													-86.895
												],
												[
													34.442,
													-85.346
												],
												[
													33.64,
													-84.409
												],
												[
													32.53,
													-84.379
												],
												[
													31.297,
													-85.058
												],
												[
													30.092,
													-85.627
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 8",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 8,
									ty: "sh",
									ix: 9,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.89,
													-0.08
												],
												[
													-0.664,
													-0.131
												],
												[
													-0.345,
													-0.113
												],
												[
													0,
													0
												],
												[
													-0.091,
													-0.018
												],
												[
													-0.348,
													0.253
												],
												[
													-0.093,
													0.473
												],
												[
													0.176,
													0.326
												],
												[
													0.341,
													0.065
												],
												[
													0.246,
													-0.005
												],
												[
													0.118,
													0.022
												],
												[
													-0.195,
													1.005
												],
												[
													0,
													0
												],
												[
													-0.399,
													-0.077
												],
												[
													-0.226,
													-0.098
												],
												[
													-0.118,
													-0.022
												],
												[
													-0.283,
													0.235
												],
												[
													-0.081,
													0.413
												],
												[
													1.078,
													0.208
												],
												[
													0.79,
													0.078
												],
												[
													0.413,
													0.08
												],
												[
													0.533,
													0.163
												],
												[
													0.22,
													0.043
												],
												[
													0.344,
													-0.233
												],
												[
													0.098,
													-0.501
												],
												[
													-0.176,
													-0.326
												],
												[
													-0.341,
													-0.067
												],
												[
													-0.238,
													0.007
												],
												[
													-0.12,
													-0.022
												],
												[
													0.003,
													-0.399
												],
												[
													0.09,
													-0.474
												],
												[
													0,
													0
												],
												[
													0.058,
													-0.143
												],
												[
													0.293,
													0.058
												],
												[
													0.22,
													0.096
												],
												[
													0.117,
													0.023
												],
												[
													0.283,
													-0.228
												],
												[
													0.083,
													-0.429
												],
												[
													-0.238,
													-0.353
												],
												[
													-0.471,
													-0.093
												]
											],
											o: [
												[
													0.266,
													0.053
												],
												[
													0.736,
													0.066
												],
												[
													0.429,
													0.082
												],
												[
													0,
													0
												],
												[
													0.043,
													0.022
												],
												[
													0.443,
													0.085
												],
												[
													0.348,
													-0.256
												],
												[
													0.08,
													-0.414
												],
												[
													-0.175,
													-0.326
												],
												[
													-0.117,
													-0.023
												],
												[
													-0.245,
													0.005
												],
												[
													-0.399,
													-0.078
												],
												[
													0,
													0
												],
												[
													0.19,
													-0.99
												],
												[
													0.117,
													0.023
												],
												[
													0.225,
													0.097
												],
												[
													0.338,
													0.065
												],
												[
													0.283,
													-0.236
												],
												[
													0.208,
													-1.078
												],
												[
													-0.25,
													-0.047
												],
												[
													-0.789,
													-0.075
												],
												[
													-0.516,
													-0.101
												],
												[
													-0.795,
													-0.246
												],
												[
													-0.486,
													-0.095
												],
												[
													-0.343,
													0.233
												],
												[
													-0.08,
													0.414
												],
												[
													0.175,
													0.326
												],
												[
													0.132,
													0.025
												],
												[
													0.238,
													-0.008
												],
												[
													0.296,
													0.058
												],
												[
													0.003,
													0.137
												],
												[
													0,
													0
												],
												[
													-0.09,
													0.474
												],
												[
													-0.148,
													0.371
												],
												[
													-0.118,
													-0.022
												],
												[
													-0.221,
													-0.095
												],
												[
													-0.354,
													-0.067
												],
												[
													-0.281,
													0.228
												],
												[
													-0.095,
													0.486
												],
												[
													0.238,
													0.354
												],
												[
													0,
													0
												]
											],
											v: [
												[
													14.096,
													-89.344
												],
												[
													15.828,
													-89.146
												],
												[
													17.93,
													-88.852
												],
												[
													19.09,
													-88.559
												],
												[
													20.451,
													-88.113
												],
												[
													20.647,
													-88.053
												],
												[
													21.832,
													-88.306
												],
												[
													22.491,
													-89.396
												],
												[
													22.348,
													-90.504
												],
												[
													21.576,
													-91.09
												],
												[
													21.03,
													-91.115
												],
												[
													20.484,
													-91.14
												],
												[
													20.178,
													-92.762
												],
												[
													21.366,
													-98.896
												],
												[
													22.251,
													-100.265
												],
												[
													22.767,
													-100.084
												],
												[
													23.283,
													-99.904
												],
												[
													24.218,
													-100.159
												],
												[
													24.762,
													-101.134
												],
												[
													23.458,
													-103.064
												],
												[
													21.897,
													-103.252
												],
												[
													20.093,
													-103.487
												],
												[
													18.517,
													-103.883
												],
												[
													16.993,
													-104.317
												],
												[
													15.747,
													-104.109
												],
												[
													15.086,
													-103.009
												],
												[
													15.229,
													-101.901
												],
												[
													16.001,
													-101.315
												],
												[
													16.557,
													-101.287
												],
												[
													17.093,
													-101.265
												],
												[
													17.534,
													-100.58
												],
												[
													17.404,
													-99.663
												],
												[
													16.216,
													-93.529
												],
												[
													15.993,
													-92.606
												],
												[
													15.329,
													-92.138
												],
												[
													14.823,
													-92.316
												],
												[
													14.317,
													-92.494
												],
												[
													13.362,
													-92.253
												],
												[
													12.815,
													-91.268
												],
												[
													13.031,
													-90.008
												],
												[
													14.096,
													-89.341
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 9",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 9,
									ty: "sh",
									ix: 10,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.013,
													0.01
												],
												[
													0.254,
													-0.298
												],
												[
													0,
													0
												],
												[
													0.138,
													0.115
												],
												[
													0.025,
													0.042
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.18,
													0.113
												],
												[
													0.161,
													0.136
												],
												[
													0,
													0
												],
												[
													-0.243,
													0.288
												],
												[
													-0.045,
													-0.037
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-74.082,
													-64.82
												],
												[
													-73.829,
													-64.665
												],
												[
													-73.967,
													-64.013
												],
												[
													-74.871,
													-62.945
												],
												[
													-75.443,
													-62.69
												],
												[
													-75.548,
													-62.81
												],
												[
													-78.31,
													-66.983
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 10",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 10,
									ty: "sh",
									ix: 11,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.04,
													-0.093
												],
												[
													0.185,
													-0.218
												],
												[
													0.143,
													-0.135
												],
												[
													0.061,
													-0.071
												],
												[
													-0.805,
													-0.679
												],
												[
													-0.408,
													0.04
												],
												[
													-0.301,
													0.356
												],
												[
													-0.433,
													0.675
												],
												[
													-0.399,
													0.471
												],
												[
													-0.238,
													0.213
												],
												[
													-0.138,
													0.16
												],
												[
													0.066,
													0.388
												],
												[
													0.366,
													0.311
												],
												[
													0.359,
													-0.424
												],
												[
													0.08,
													-0.131
												],
												[
													0.048,
													-0.057
												],
												[
													0.185,
													0.156
												],
												[
													-0.556,
													0.654
												],
												[
													0,
													0
												],
												[
													-0.314,
													-0.048
												],
												[
													-0.31,
													-0.263
												],
												[
													0.182,
													-0.218
												],
												[
													0.115,
													-0.1
												],
												[
													0.05,
													-0.058
												],
												[
													-0.676,
													-0.574
												],
												[
													-0.406,
													0.003
												],
												[
													-0.264,
													0.308
												],
												[
													-0.404,
													0.662
												],
												[
													-0.371,
													0.436
												],
												[
													-0.236,
													0.233
												],
												[
													-0.33,
													0.273
												],
												[
													-0.138,
													0.16
												],
												[
													0.035,
													0.423
												],
												[
													0.378,
													0.321
												],
												[
													0.544,
													-0.642
												],
												[
													0,
													0
												],
												[
													0.061,
													-0.07
												],
												[
													0.732,
													0.323
												],
												[
													0,
													0
												],
												[
													0.333,
													-0.15
												],
												[
													0.817,
													-0.964
												],
												[
													0.088,
													-0.359
												],
												[
													-0.536,
													-0.924
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.248,
													0.429
												],
												[
													0.125,
													0.34
												],
												[
													-0.058,
													0.068
												],
												[
													-0.142,
													0.135
												],
												[
													-0.516,
													0.609
												],
												[
													0.356,
													0.3
												],
												[
													0.409,
													-0.04
												],
												[
													0.097,
													-0.116
												],
												[
													0.188,
													-0.293
												],
												[
													0.368,
													-0.436
												],
												[
													0.546,
													-0.484
												],
												[
													0.27,
													-0.321
												],
												[
													-0.065,
													-0.388
												],
												[
													-0.677,
													-0.574
												],
												[
													-0.047,
													0.058
												],
												[
													-0.08,
													0.13
												],
												[
													-0.165,
													0.196
												],
												[
													-0.78,
													-0.661
												],
												[
													0,
													0
												],
												[
													0.165,
													-0.195
												],
												[
													0.313,
													0.047
												],
												[
													0.241,
													0.203
												],
												[
													-0.048,
													0.058
												],
												[
													-0.115,
													0.101
												],
												[
													-0.368,
													0.436
												],
												[
													0.356,
													0.3
												],
												[
													0.406,
													0
												],
												[
													0.125,
													-0.148
												],
												[
													0.103,
													-0.168
												],
												[
													0.341,
													-0.401
												],
												[
													0.087,
													-0.103
												],
												[
													0.258,
													-0.236
												],
												[
													0.31,
													-0.366
												],
												[
													-0.035,
													-0.424
												],
												[
													-0.757,
													-0.642
												],
												[
													0,
													0
												],
												[
													-0.11,
													0.201
												],
												[
													-0.195,
													0.231
												],
												[
													0,
													0
												],
												[
													-0.686,
													-0.306
												],
												[
													-0.333,
													0.15
												],
												[
													-0.729,
													0.86
												],
												[
													-0.095,
													0.509
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-76.022,
													-56.563
												],
												[
													-75.588,
													-55.783
												],
												[
													-75.678,
													-54.944
												],
												[
													-75.982,
													-54.638
												],
												[
													-76.285,
													-54.332
												],
												[
													-75.851,
													-52.4
												],
												[
													-74.706,
													-52.007
												],
												[
													-73.643,
													-52.598
												],
												[
													-72.847,
													-53.784
												],
												[
													-71.964,
													-54.929
												],
												[
													-71.052,
													-55.901
												],
												[
													-70.027,
													-56.866
												],
												[
													-69.717,
													-57.931
												],
												[
													-70.363,
													-58.981
												],
												[
													-71.917,
													-59.204
												],
												[
													-72.11,
													-58.923
												],
												[
													-72.303,
													-58.643
												],
												[
													-72.826,
													-58.583
												],
												[
													-73.165,
													-60.555
												],
												[
													-71.225,
													-62.843
												],
												[
													-70.508,
													-63.063
												],
												[
													-69.574,
													-62.597
												],
												[
													-69.488,
													-61.963
												],
												[
													-69.734,
													-61.728
												],
												[
													-69.98,
													-61.492
												],
												[
													-69.519,
													-59.978
												],
												[
													-68.376,
													-59.53
												],
												[
													-67.373,
													-59.996
												],
												[
													-66.579,
													-61.214
												],
												[
													-65.87,
													-62.121
												],
												[
													-65.005,
													-63.073
												],
												[
													-64.379,
													-63.637
												],
												[
													-63.787,
													-64.231
												],
												[
													-63.374,
													-65.416
												],
												[
													-63.995,
													-66.534
												],
												[
													-65.948,
													-66.534
												],
												[
													-66.108,
													-66.344
												],
												[
													-66.364,
													-65.938
												],
												[
													-67.752,
													-66.078
												],
												[
													-76.949,
													-70.085
												],
												[
													-78.48,
													-70.318
												],
												[
													-80.207,
													-68.647
												],
												[
													-81.432,
													-66.817
												],
												[
													-80.773,
													-64.665
												],
												[
													-76.022,
													-56.56
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 11",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 11,
									ty: "sh",
									ix: 12,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.364,
													-0.065
												],
												[
													0.368,
													0.203
												],
												[
													0,
													0
												],
												[
													0.115,
													0.398
												],
												[
													-0.241,
													0.433
												],
												[
													-0.479,
													0.679
												],
												[
													-0.255,
													0.461
												],
												[
													-0.316,
													0.727
												],
												[
													-0.123,
													0.223
												],
												[
													-0.96,
													-0.531
												],
												[
													-0.138,
													-0.34
												],
												[
													0.168,
													-0.304
												],
												[
													0.163,
													-0.186
												],
												[
													0.058,
													-0.105
												],
												[
													-0.882,
													-0.486
												],
												[
													0,
													0
												],
												[
													-0.195,
													0.356
												],
												[
													-0.07,
													0.236
												],
												[
													-0.058,
													0.105
												],
												[
													-0.363,
													0.065
												],
												[
													-0.368,
													-0.203
												],
												[
													-0.136,
													-0.408
												],
												[
													0.218,
													-0.396
												],
												[
													0.036,
													-0.032
												],
												[
													0,
													0
												],
												[
													0.21,
													-0.381
												],
												[
													0.291,
													-0.682
												],
												[
													0.131,
													-0.238
												],
												[
													0.409,
													-0.118
												],
												[
													0.433,
													0.241
												],
												[
													0.131,
													0.338
												],
												[
													-0.175,
													0.316
												],
												[
													-0.158,
													0.178
												],
												[
													-0.058,
													0.106
												],
												[
													0.306,
													0.255
												],
												[
													0.421,
													0.233
												],
												[
													0,
													0
												],
												[
													0.133,
													0.04
												],
												[
													0.145,
													-0.263
												],
												[
													0.067,
													-0.23
												],
												[
													0.065,
													-0.118
												]
											],
											o: [
												[
													-0.363,
													0.068
												],
												[
													0,
													0
												],
												[
													-0.448,
													-0.246
												],
												[
													-0.116,
													-0.399
												],
												[
													0.11,
													-0.196
												],
												[
													0.323,
													-0.459
												],
												[
													0.203,
													-0.369
												],
												[
													0.315,
													-0.727
												],
												[
													0.531,
													-0.96
												],
												[
													0.368,
													0.205
												],
												[
													0.138,
													0.344
												],
												[
													-0.058,
													0.105
												],
												[
													-0.163,
													0.185
												],
												[
													-0.198,
													0.356
												],
												[
													0,
													0
												],
												[
													0.894,
													0.494
												],
												[
													0.058,
													-0.105
												],
												[
													0.07,
													-0.235
												],
												[
													0.168,
													-0.303
												],
												[
													0.364,
													-0.067
												],
												[
													0.421,
													0.233
												],
												[
													0.135,
													0.408
												],
												[
													-0.042,
													0.081
												],
												[
													0,
													0
												],
												[
													-0.213,
													0.293
												],
												[
													-0.329,
													0.591
												],
												[
													-0.351,
													0.821
												],
												[
													-0.233,
													0.423
												],
												[
													-0.408,
													0.118
												],
												[
													-0.384,
													-0.21
												],
												[
													-0.13,
													-0.338
												],
												[
													0.058,
													-0.105
												],
												[
													0.158,
													-0.177
												],
												[
													0.145,
													-0.263
												],
												[
													-0.117,
													-0.101
												],
												[
													0,
													0
												],
												[
													-0.421,
													-0.233
												],
												[
													-0.38,
													-0.123
												],
												[
													-0.061,
													0.105
												],
												[
													-0.068,
													0.228
												],
												[
													-0.168,
													0.303
												]
											],
											v: [
												[
													-92.025,
													-45.8
												],
												[
													-93.122,
													-46.005
												],
												[
													-93.12,
													-46.005
												],
												[
													-93.964,
													-46.972
												],
												[
													-93.776,
													-48.22
												],
												[
													-92.894,
													-49.536
												],
												[
													-92.03,
													-50.914
												],
												[
													-91.25,
													-52.558
												],
												[
													-90.591,
													-53.984
												],
												[
													-88.353,
													-54.628
												],
												[
													-87.594,
													-53.809
												],
												[
													-87.639,
													-52.841
												],
												[
													-87.97,
													-52.405
												],
												[
													-88.301,
													-51.969
												],
												[
													-87.273,
													-50.706
												],
												[
													-81.805,
													-47.687
												],
												[
													-80.169,
													-47.479
												],
												[
													-79.976,
													-47.99
												],
												[
													-79.783,
													-48.501
												],
												[
													-78.989,
													-49.055
												],
												[
													-77.891,
													-48.849
												],
												[
													-77.056,
													-47.887
												],
												[
													-77.182,
													-46.682
												],
												[
													-77.3,
													-46.514
												],
												[
													-78.144,
													-45.358
												],
												[
													-78.78,
													-44.346
												],
												[
													-79.708,
													-42.436
												],
												[
													-80.43,
													-40.85
												],
												[
													-81.392,
													-40.041
												],
												[
													-82.657,
													-40.224
												],
												[
													-83.427,
													-41.048
												],
												[
													-83.362,
													-42.031
												],
												[
													-83.036,
													-42.457
												],
												[
													-82.71,
													-42.883
												],
												[
													-82.951,
													-43.659
												],
												[
													-83.757,
													-44.158
												],
												[
													-89.226,
													-47.178
												],
												[
													-90.058,
													-47.586
												],
												[
													-90.844,
													-47.376
												],
												[
													-91.032,
													-46.875
												],
												[
													-91.23,
													-46.353
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 12",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 12,
									ty: "sh",
									ix: 13,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.343,
													0.133
												],
												[
													-0.107,
													0.329
												],
												[
													-0.022,
													0.238
												],
												[
													-0.037,
													0.115
												],
												[
													-0.393,
													-0.05
												],
												[
													-0.456,
													-0.15
												],
												[
													0,
													0
												],
												[
													-0.136,
													-0.075
												],
												[
													0.095,
													-0.286
												],
												[
													0.125,
													-0.213
												],
												[
													0.037,
													-0.116
												],
												[
													-0.193,
													-0.308
												],
												[
													-0.414,
													-0.135
												],
												[
													-0.376,
													0.186
												],
												[
													-0.15,
													0.458
												],
												[
													-0.223,
													1.018
												],
												[
													-0.238,
													0.729
												],
												[
													-0.313,
													0.712
												],
												[
													-0.123,
													0.371
												],
												[
													0.183,
													0.386
												],
												[
													0.456,
													0.148
												],
												[
													0.276,
													-0.844
												],
												[
													0.05,
													-0.316
												],
												[
													0.053,
													-0.158
												],
												[
													0.265,
													0.01
												],
												[
													0.228,
													0.075
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.048,
													0.103
												],
												[
													-0.09,
													0.273
												],
												[
													-0.356,
													-0.118
												],
												[
													0,
													0
												],
												[
													-0.017,
													-0.006
												],
												[
													-0.014,
													-0.004
												],
												[
													0,
													0
												],
												[
													-0.03,
													-0.007
												],
												[
													-0.248,
													0.76
												],
												[
													0.872,
													0.283
												],
												[
													0.598,
													0.133
												],
												[
													0.286,
													0.093
												],
												[
													0.306,
													0.133
												],
												[
													0.143,
													0.047
												],
												[
													0.258,
													-0.787
												],
												[
													-0.557,
													-0.183
												],
												[
													-0.077,
													-0.01
												],
												[
													-0.028,
													-0.01
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.04,
													-0.014
												],
												[
													0.196,
													-0.599
												],
												[
													0.443,
													0.145
												],
												[
													0,
													0
												],
												[
													0.085,
													0.196
												],
												[
													-0.183,
													0.556
												],
												[
													0,
													0
												],
												[
													-0.486,
													-0.158
												],
												[
													-0.273,
													-0.135
												],
												[
													-0.158,
													-0.053
												],
												[
													-0.403,
													0.175
												],
												[
													-0.16,
													0.486
												],
												[
													0.216,
													0.404
												],
												[
													0.501,
													0.162
												],
												[
													0.469,
													0.065
												],
												[
													0.228,
													0.072
												],
												[
													0.443,
													0.238
												],
												[
													0.258,
													0.083
												],
												[
													0.233,
													-0.714
												],
												[
													0.025,
													-0.112
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.157,
													-0.486
												],
												[
													0.115,
													-0.406
												],
												[
													0.157,
													-0.486
												],
												[
													0.446,
													-1.072
												],
												[
													0.108,
													-0.328
												],
												[
													-1.042,
													-0.341
												]
											],
											o: [
												[
													0.401,
													0.13
												],
												[
													0.343,
													-0.133
												],
												[
													0.043,
													-0.127
												],
												[
													0.023,
													-0.239
												],
												[
													0.093,
													-0.286
												],
												[
													0.138,
													0.013
												],
												[
													0,
													0
												],
												[
													0.459,
													0.151
												],
												[
													0.348,
													0.193
												],
												[
													-0.033,
													0.1
												],
												[
													-0.125,
													0.213
												],
												[
													-0.113,
													0.343
												],
												[
													0.193,
													0.308
												],
												[
													0.471,
													0.155
												],
												[
													0.378,
													-0.185
												],
												[
													0.038,
													-0.116
												],
												[
													0.098,
													-0.443
												],
												[
													0.12,
													-0.371
												],
												[
													0.311,
													-0.711
												],
												[
													0.158,
													-0.486
												],
												[
													-0.183,
													-0.383
												],
												[
													-0.972,
													-0.318
												],
												[
													-0.052,
													0.158
												],
												[
													-0.048,
													0.315
												],
												[
													-0.102,
													0.313
												],
												[
													-0.143,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.244,
													-0.081
												],
												[
													-0.045,
													-0.102
												],
												[
													0.178,
													-0.544
												],
												[
													0,
													0
												],
												[
													0.013,
													0.004
												],
												[
													0.013,
													0.003
												],
												[
													0,
													0
												],
												[
													0.053,
													0.032
												],
												[
													0.802,
													0.261
												],
												[
													0.244,
													-0.742
												],
												[
													-0.285,
													-0.093
												],
												[
													-0.597,
													-0.133
												],
												[
													-0.501,
													-0.162
												],
												[
													-0.306,
													-0.13
												],
												[
													-0.741,
													-0.243
												],
												[
													-0.22,
													0.672
												],
												[
													0.03,
													0.01
												],
												[
													0.037,
													0.012
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.208,
													0.042
												],
												[
													0.416,
													0.135
												],
												[
													-0.125,
													0.386
												],
												[
													0,
													0
												],
												[
													-0.601,
													-0.196
												],
												[
													-0.087,
													-0.195
												],
												[
													0,
													0
												],
												[
													0.233,
													-0.714
												],
												[
													0.158,
													0.052
												],
												[
													0.369,
													0.183
												],
												[
													0.529,
													0.173
												],
												[
													0.406,
													-0.176
												],
												[
													0.158,
													-0.486
												],
												[
													-0.215,
													-0.403
												],
												[
													-0.228,
													-0.076
												],
												[
													-0.469,
													-0.065
												],
												[
													-0.301,
													-0.098
												],
												[
													-0.296,
													-0.16
												],
												[
													-0.629,
													-0.205
												],
												[
													0.008,
													-0.023
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.2,
													0.709
												],
												[
													-0.379,
													1.206
												],
												[
													-0.183,
													0.604
												],
												[
													-0.228,
													0.7
												],
												[
													-0.296,
													0.71
												],
												[
													-0.346,
													1.058
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-100.858,
													-25.27
												],
												[
													-99.743,
													-25.273
												],
												[
													-99.067,
													-25.965
												],
												[
													-98.969,
													-26.513
												],
												[
													-98.879,
													-27.042
												],
												[
													-98.147,
													-27.396
												],
												[
													-97.255,
													-27.15
												],
												[
													-91.316,
													-25.208
												],
												[
													-90.428,
													-24.87
												],
												[
													-90.047,
													-24.15
												],
												[
													-90.283,
													-23.682
												],
												[
													-90.526,
													-23.19
												],
												[
													-90.406,
													-22.213
												],
												[
													-89.496,
													-21.549
												],
												[
													-88.223,
													-21.597
												],
												[
													-87.434,
													-22.561
												],
												[
													-87.043,
													-24.261
												],
												[
													-86.539,
													-26.017
												],
												[
													-85.888,
													-27.644
												],
												[
													-85.236,
													-29.27
												],
												[
													-85.271,
													-30.576
												],
												[
													-86.231,
													-31.375
												],
												[
													-88.103,
													-30.586
												],
												[
													-88.253,
													-29.876
												],
												[
													-88.404,
													-29.165
												],
												[
													-88.957,
													-28.706
												],
												[
													-89.514,
													-28.816
												],
												[
													-90.25,
													-29.034
												],
												[
													-91.493,
													-29.44
												],
												[
													-91.927,
													-29.714
												],
												[
													-91.862,
													-30.275
												],
												[
													-91.06,
													-30.914
												],
												[
													-90.824,
													-30.836
												],
												[
													-90.779,
													-30.821
												],
												[
													-90.739,
													-30.809
												],
												[
													-90.717,
													-30.801
												],
												[
													-90.594,
													-30.739
												],
												[
													-89.023,
													-31.483
												],
												[
													-89.965,
													-33.024
												],
												[
													-91.29,
													-33.362
												],
												[
													-92.616,
													-33.701
												],
												[
													-93.824,
													-34.144
												],
												[
													-94.496,
													-34.412
												],
												[
													-95.997,
													-33.598
												],
												[
													-95.49,
													-32.317
												],
												[
													-95.333,
													-32.29
												],
												[
													-95.236,
													-32.258
												],
												[
													-95.191,
													-32.244
												],
												[
													-95.174,
													-32.238
												],
												[
													-95.162,
													-32.235
												],
												[
													-95.114,
													-32.225
												],
												[
													-95.113,
													-32.225
												],
												[
													-94.741,
													-32.144
												],
												[
													-94.413,
													-31.042
												],
												[
													-95.267,
													-30.681
												],
												[
													-96.275,
													-31.009
												],
												[
													-97.305,
													-31.596
												],
												[
													-97.162,
													-32.723
												],
												[
													-96.398,
													-35.059
												],
												[
													-95.318,
													-35.893
												],
												[
													-94.674,
													-35.613
												],
												[
													-93.887,
													-35.259
												],
												[
													-92.486,
													-35.264
												],
												[
													-91.639,
													-36.257
												],
												[
													-91.724,
													-37.59
												],
												[
													-92.799,
													-38.439
												],
												[
													-93.844,
													-38.65
												],
												[
													-94.889,
													-38.86
												],
												[
													-96.004,
													-39.367
												],
												[
													-96.834,
													-39.733
												],
												[
													-98.127,
													-38.968
												],
												[
													-98.154,
													-38.835
												],
												[
													-98.174,
													-38.748
												],
												[
													-98.488,
													-37.427
												],
												[
													-99.026,
													-35.633
												],
												[
													-99.768,
													-33.217
												],
												[
													-100.279,
													-31.581
												],
												[
													-101.292,
													-28.922
												],
												[
													-101.896,
													-27.363
												],
												[
													-100.851,
													-25.265
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 13",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 13,
									ty: "sh",
									ix: 14,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.21,
													0.017
												],
												[
													0.213,
													-0.01
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.06,
													-0.005
												],
												[
													-0.032,
													0.374
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.015,
													0.002
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.042,
													0.021
												],
												[
													0.178,
													0.015
												],
												[
													0,
													0
												],
												[
													0.035,
													-0.388
												]
											],
											v: [
												[
													-97.44,
													-10.417
												],
												[
													-97.736,
													-10.397
												],
												[
													-97.733,
													-10.397
												],
												[
													-102.435,
													-9.728
												],
												[
													-97.773,
													-7.912
												],
												[
													-97.618,
													-7.874
												],
												[
													-97.3,
													-8.413
												],
												[
													-97.177,
													-9.806
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 14",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 14,
									ty: "sh",
									ix: 15,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.449,
													0.205
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.216,
													0.471
												],
												[
													-0.1,
													1.123
												],
												[
													-0.185,
													0.316
												],
												[
													-0.737,
													0.145
												],
												[
													0,
													0
												],
												[
													-0.027,
													0.301
												],
												[
													0.025,
													0.228
												],
												[
													0,
													0
												],
												[
													-0.988,
													-0.088
												],
												[
													-0.273,
													-0.326
												],
												[
													0.042,
													-0.479
												],
												[
													0.075,
													-0.341
												],
												[
													0.012,
													-0.135
												],
												[
													0.048,
													-0.524
												],
												[
													-0.012,
													-0.198
												],
												[
													0.017,
													-0.195
												],
												[
													0.331,
													-0.236
												],
												[
													0.464,
													0.04
												],
												[
													-0.05,
													0.569
												],
												[
													-0.036,
													0.148
												],
												[
													-0.007,
													0.075
												],
												[
													0.313,
													0.028
												],
												[
													0.283,
													-0.14
												],
												[
													0.023,
													-0.256
												],
												[
													0,
													0
												],
												[
													-1.018,
													-0.09
												],
												[
													-0.022,
													0.256
												],
												[
													0.01,
													0.153
												],
												[
													-0.008,
													0.075
												],
												[
													-0.885,
													-0.077
												],
												[
													-0.275,
													-0.28
												],
												[
													0.038,
													-0.419
												],
												[
													0.168,
													-0.709
												],
												[
													0.05,
													-0.568
												],
												[
													-0.015,
													-0.348
												],
												[
													0.013,
													-0.15
												],
												[
													0.311,
													-0.266
												],
												[
													0.464,
													0.04
												],
												[
													-0.07,
													0.794
												],
												[
													-0.04,
													0.193
												],
												[
													-0.008,
													0.09
												],
												[
													0.298,
													0.208
												]
											],
											o: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.972,
													-0.448
												],
												[
													-0.138,
													-0.343
												],
												[
													0.11,
													-1.258
												],
												[
													0.186,
													-0.315
												],
												[
													0,
													0
												],
												[
													0.784,
													-0.155
												],
												[
													0.008,
													-0.09
												],
												[
													0,
													0
												],
												[
													0.072,
													-0.84
												],
												[
													0.493,
													0.042
												],
												[
													0.273,
													0.325
												],
												[
													-0.018,
													0.208
												],
												[
													-0.112,
													0.413
												],
												[
													-0.058,
													0.326
												],
												[
													-0.053,
													0.568
												],
												[
													0.053,
													0.774
												],
												[
													-0.035,
													0.406
												],
												[
													-0.331,
													0.236
												],
												[
													-0.884,
													-0.08
												],
												[
													0.005,
													-0.075
												],
												[
													0.035,
													-0.148
												],
												[
													0.025,
													-0.283
												],
												[
													-0.404,
													-0.035
												],
												[
													-0.286,
													0.143
												],
												[
													0,
													0
												],
												[
													-0.077,
													0.855
												],
												[
													0.24,
													0.02
												],
												[
													0.008,
													-0.075
												],
												[
													-0.01,
													-0.153
												],
												[
													0.047,
													-0.554
												],
												[
													0.481,
													0.043
												],
												[
													0.278,
													0.281
												],
												[
													-0.02,
													0.21
												],
												[
													-0.072,
													0.311
												],
												[
													-0.055,
													0.614
												],
												[
													0.032,
													0.802
												],
												[
													-0.04,
													0.466
												],
												[
													-0.311,
													0.266
												],
												[
													-1.047,
													-0.092
												],
												[
													0.01,
													-0.091
												],
												[
													0.04,
													-0.193
												],
												[
													0.025,
													-0.286
												],
												[
													-0.088,
													-0.052
												]
											],
											v: [
												[
													-94.561,
													-2.531
												],
												[
													-103.116,
													-6.413
												],
												[
													-103.114,
													-6.408
												],
												[
													-104.893,
													-7.789
												],
												[
													-104.948,
													-9.989
												],
												[
													-104.502,
													-12.35
												],
												[
													-103.116,
													-13.041
												],
												[
													-93.29,
													-15.069
												],
												[
													-92.075,
													-15.753
												],
												[
													-92.1,
													-16.231
												],
												[
													-92.077,
													-16.479
												],
												[
													-90.483,
													-17.607
												],
												[
													-89.333,
													-17.053
												],
												[
													-88.987,
													-15.845
												],
												[
													-89.128,
													-15.021
												],
												[
													-89.313,
													-14.199
												],
												[
													-89.471,
													-12.923
												],
												[
													-89.529,
													-11.773
												],
												[
													-89.476,
													-10.32
												],
												[
													-90.025,
													-9.36
												],
												[
													-91.218,
													-9.069
												],
												[
													-92.468,
													-10.042
												],
												[
													-92.405,
													-10.375
												],
												[
													-92.343,
													-10.708
												],
												[
													-92.776,
													-11.177
												],
												[
													-93.809,
													-11.019
												],
												[
													-94.27,
													-10.425
												],
												[
													-94.536,
													-7.438
												],
												[
													-93.122,
													-6.022
												],
												[
													-92.729,
													-6.373
												],
												[
													-92.731,
													-6.714
												],
												[
													-92.736,
													-7.054
												],
												[
													-91.338,
													-7.769
												],
												[
													-90.203,
													-7.283
												],
												[
													-89.842,
													-6.232
												],
												[
													-90.123,
													-4.854
												],
												[
													-90.308,
													-3.534
												],
												[
													-90.368,
													-2.09
												],
												[
													-90.336,
													-0.662
												],
												[
													-90.862,
													0.436
												],
												[
													-92.025,
													0.774
												],
												[
													-93.491,
													-0.556
												],
												[
													-93.418,
													-0.98
												],
												[
													-93.345,
													-1.403
												],
												[
													-93.756,
													-2.143
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 15",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 15,
									ty: "sh",
									ix: 16,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.01,
													-0.238
												],
												[
													-0.023,
													-0.118
												],
												[
													-0.314,
													-0.18
												],
												[
													-0.431,
													0.078
												],
												[
													-0.255,
													0.351
												],
												[
													0.083,
													0.458
												],
												[
													0,
													0
												],
												[
													0.09,
													0.503
												],
												[
													0.028,
													0.316
												],
												[
													0.018,
													0.426
												],
												[
													0.037,
													0.208
												],
												[
													0.343,
													0.213
												],
												[
													0.503,
													-0.093
												],
												[
													-0.108,
													-0.592
												],
												[
													-0.022,
													-0.042
												],
												[
													-0.01,
													-0.045
												],
												[
													-0.008,
													-0.03
												],
												[
													0.038,
													-0.053
												],
												[
													0.697,
													-0.125
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.108,
													0.592
												],
												[
													0,
													0
												],
												[
													0.995,
													0.093
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.151,
													0.013
												],
												[
													-0.043,
													-0.239
												],
												[
													0.001,
													-0.026
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.005,
													-0.027
												],
												[
													0,
													0
												],
												[
													-0.003,
													-0.021
												],
												[
													-0.015,
													-0.088
												],
												[
													-0.917,
													0.168
												],
												[
													-0.245,
													0.329
												],
												[
													0.08,
													0.444
												],
												[
													0.173,
													0.533
												],
												[
													0.05,
													0.28
												],
												[
													0.02,
													0.456
												],
												[
													0.052,
													0.281
												],
												[
													0.344,
													0.243
												],
												[
													0.504,
													-0.09
												],
												[
													0.238,
													-0.286
												],
												[
													-0.063,
													-0.34
												],
												[
													-0.095,
													-0.228
												],
												[
													-0.023,
													-0.118
												],
												[
													1.005,
													-0.183
												],
												[
													0,
													0
												],
												[
													0.072,
													0.399
												],
												[
													-0.008,
													0.246
												],
												[
													0.023,
													0.132
												],
												[
													0.323,
													0.178
												],
												[
													0.413,
													-0.075
												],
												[
													0.236,
													-0.348
												],
												[
													-0.09,
													-0.489
												],
												[
													-0.102,
													-0.394
												],
												[
													-0.063,
													-0.356
												],
												[
													-0.045,
													-0.679
												],
												[
													-0.06,
													-0.323
												],
												[
													-0.281,
													-0.155
												],
												[
													-0.679,
													-0.042
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.151,
													-0.18
												],
												[
													-0.068,
													-0.369
												],
												[
													-0.148,
													-0.479
												],
												[
													-0.121,
													-0.667
												],
												[
													-0.078,
													-0.842
												],
												[
													-0.066,
													-0.354
												],
												[
													-1.08,
													0.195
												],
												[
													-0.238,
													0.281
												],
												[
													0.062,
													0.339
												],
												[
													0.095,
													0.22
												],
												[
													0.022,
													0.118
												],
												[
													-0.371,
													0.143
												],
												[
													-0.474,
													0.088
												],
												[
													0,
													0
												],
												[
													-0.153,
													-0.003
												],
												[
													-0.055,
													-0.295
												]
											],
											o: [
												[
													0.022,
													0.118
												],
												[
													-0.01,
													0.238
												],
												[
													0.065,
													0.356
												],
												[
													0.315,
													0.18
												],
												[
													0.474,
													-0.085
												],
												[
													0.258,
													-0.353
												],
												[
													0,
													0
												],
												[
													-0.106,
													-0.334
												],
												[
													-0.073,
													-0.399
												],
												[
													-0.002,
													-0.105
												],
												[
													-0.015,
													-0.333
												],
												[
													-0.081,
													-0.443
												],
												[
													-0.343,
													-0.213
												],
												[
													-0.903,
													0.163
												],
												[
													0.015,
													0.087
												],
												[
													0.008,
													0.045
												],
												[
													0.025,
													0.058
												],
												[
													0.023,
													0.118
												],
												[
													-0.065,
													0.15
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.802,
													-0.376
												],
												[
													0,
													0
												],
												[
													-0.11,
													-0.606
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.356,
													-0.065
												],
												[
													0.333,
													-0.015
												],
												[
													0.001,
													0.009
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.005,
													0.032
												],
												[
													0,
													0
												],
												[
													0.005,
													0.023
												],
												[
													-0.007,
													0.048
												],
												[
													0.11,
													0.607
												],
												[
													0.489,
													-0.087
												],
												[
													0.246,
													-0.328
												],
												[
													-0.051,
													-0.28
												],
												[
													-0.173,
													-0.534
												],
												[
													-0.08,
													-0.444
												],
												[
													-0.032,
													-0.681
												],
												[
													-0.088,
													-0.489
												],
												[
													-0.343,
													-0.243
												],
												[
													-0.413,
													0.075
												],
												[
													-0.238,
													0.288
												],
												[
													0.022,
													0.118
												],
												[
													0.095,
													0.228
												],
												[
													0.07,
													0.386
												],
												[
													0,
													0
												],
												[
													-0.99,
													0.18
												],
												[
													-0.018,
													-0.103
												],
												[
													0.01,
													-0.245
												],
												[
													-0.063,
													-0.341
												],
												[
													-0.324,
													-0.178
												],
												[
													-0.504,
													0.091
												],
												[
													-0.236,
													0.349
												],
												[
													0.035,
													0.193
												],
												[
													0.374,
													1.383
												],
												[
													0.063,
													0.341
												],
												[
													0.048,
													0.679
												],
												[
													0.068,
													0.371
												],
												[
													0.28,
													0.155
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.539,
													0.236
												],
												[
													-0.15,
													0.181
												],
												[
													0.05,
													0.28
												],
												[
													0.221,
													0.709
												],
												[
													0.075,
													0.413
												],
												[
													0.077,
													0.842
												],
												[
													0.198,
													1.095
												],
												[
													0.414,
													-0.075
												],
												[
													0.241,
													-0.281
												],
												[
													-0.025,
													-0.132
												],
												[
													-0.093,
													-0.221
												],
												[
													-0.053,
													-0.295
												],
												[
													0.128,
													-0.052
												],
												[
													0,
													0
												],
												[
													0.474,
													-0.085
												],
												[
													0.398,
													0.005
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-89.804,
													25.786
												],
												[
													-89.787,
													26.323
												],
												[
													-89.769,
													26.859
												],
												[
													-89.2,
													27.661
												],
												[
													-88.083,
													27.814
												],
												[
													-86.988,
													27.157
												],
												[
													-86.727,
													25.942
												],
												[
													-87.155,
													24.599
												],
												[
													-87.451,
													23.346
												],
												[
													-87.602,
													22.273
												],
												[
													-87.632,
													21.476
												],
												[
													-87.709,
													20.664
												],
												[
													-88.346,
													19.679
												],
												[
													-89.616,
													19.499
												],
												[
													-90.809,
													20.632
												],
												[
													-90.752,
													20.827
												],
												[
													-90.727,
													20.96
												],
												[
													-90.679,
													21.09
												],
												[
													-90.702,
													21.346
												],
												[
													-91.842,
													21.759
												],
												[
													-100.207,
													23.28
												],
												[
													-89.672,
													18.316
												],
												[
													-88.629,
													16.865
												],
												[
													-88.887,
													15.444
												],
												[
													-90.546,
													14.394
												],
												[
													-102.024,
													13.297
												],
												[
													-93.659,
													11.775
												],
												[
													-92.899,
													11.66
												],
												[
													-92.335,
													11.994
												],
												[
													-92.335,
													12.046
												],
												[
													-92.335,
													12.079
												],
												[
													-92.335,
													12.109
												],
												[
													-92.32,
													12.197
												],
												[
													-92.32,
													12.198
												],
												[
													-92.308,
													12.264
												],
												[
													-92.293,
													12.467
												],
												[
													-90.752,
													13.126
												],
												[
													-89.652,
													12.502
												],
												[
													-89.403,
													11.344
												],
												[
													-89.739,
													10.122
												],
												[
													-90.075,
													8.899
												],
												[
													-90.228,
													7.55
												],
												[
													-90.353,
													6.107
												],
												[
													-91,
													5.009
												],
												[
													-92.268,
													4.781
												],
												[
													-93.245,
													5.325
												],
												[
													-93.508,
													6.267
												],
												[
													-93.333,
													6.786
												],
												[
													-93.157,
													7.305
												],
												[
													-94.561,
													8.157
												],
												[
													-100.708,
													9.275
												],
												[
													-102.304,
													8.946
												],
												[
													-102.319,
													8.422
												],
												[
													-102.342,
													7.854
												],
												[
													-102.918,
													7.077
												],
												[
													-104.023,
													6.921
												],
												[
													-105.131,
													7.58
												],
												[
													-105.349,
													8.836
												],
												[
													-105.144,
													9.716
												],
												[
													-104.487,
													12.324
												],
												[
													-104.324,
													13.853
												],
												[
													-104.164,
													15.359
												],
												[
													-103.642,
													16.146
												],
												[
													-102.202,
													16.444
												],
												[
													-94.085,
													16.963
												],
												[
													-101.848,
													20.278
												],
												[
													-102.881,
													20.902
												],
												[
													-103.006,
													21.727
												],
												[
													-102.708,
													22.865
												],
												[
													-102.196,
													24.927
												],
												[
													-101.968,
													26.811
												],
												[
													-101.755,
													28.606
												],
												[
													-99.836,
													29.954
												],
												[
													-98.856,
													29.42
												],
												[
													-98.59,
													28.49
												],
												[
													-98.768,
													27.962
												],
												[
													-98.941,
													27.455
												],
												[
													-98.465,
													26.796
												],
												[
													-97.563,
													26.586
												],
												[
													-91.416,
													25.468
												],
												[
													-90.476,
													25.343
												],
												[
													-89.797,
													25.791
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 16",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 16,
									ty: "sh",
									ix: 17,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.05,
													0.033
												],
												[
													0,
													0
												],
												[
													0.198,
													0.319
												],
												[
													0,
													0
												],
												[
													0.178,
													-0.112
												],
												[
													0.098,
													-0.082
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.045,
													-0.013
												],
												[
													0,
													0
												],
												[
													0.153,
													-0.095
												],
												[
													0,
													0
												],
												[
													-0.208,
													-0.331
												],
												[
													0.01,
													-0.006
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-82.652,
													52.616
												],
												[
													-82.507,
													52.55
												],
												[
													-82.507,
													52.553
												],
												[
													-82.577,
													51.931
												],
												[
													-83.316,
													50.746
												],
												[
													-83.895,
													50.415
												],
												[
													-84.027,
													50.529
												],
												[
													-84.121,
													50.608
												],
												[
													-87.469,
													53.974
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 17",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 17,
									ty: "sh",
									ix: 18,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.047,
													0.077
												],
												[
													0.363,
													-0.015
												],
												[
													0,
													0
												],
												[
													0.483,
													-0.106
												],
												[
													0,
													0
												],
												[
													0.456,
													0.248
												],
												[
													0.596,
													0.957
												],
												[
													0.042,
													0.364
												],
												[
													-0.502,
													0.561
												],
												[
													0,
													0
												],
												[
													0.16,
													0.256
												],
												[
													0.157,
													0.167
												],
												[
													0,
													0
												],
												[
													-0.842,
													0.526
												],
												[
													-0.413,
													-0.095
												],
												[
													-0.256,
													-0.409
												],
												[
													-0.145,
													-0.318
												],
												[
													-0.073,
													-0.115
												],
												[
													-0.278,
													-0.446
												],
												[
													-0.128,
													-0.15
												],
												[
													-0.103,
													-0.165
												],
												[
													0.123,
													-0.386
												],
												[
													0.396,
													-0.248
												],
												[
													0.303,
													0.487
												],
												[
													0.06,
													0.14
												],
												[
													0.04,
													0.065
												],
												[
													0.268,
													-0.168
												],
												[
													0.143,
													-0.283
												],
												[
													-0.135,
													-0.218
												],
												[
													0,
													0
												],
												[
													-0.867,
													0.542
												],
												[
													0.135,
													0.218
												],
												[
													0.098,
													0.115
												],
												[
													0.04,
													0.065
												],
												[
													-0.752,
													0.468
												],
												[
													-0.391,
													-0.058
												],
												[
													-0.223,
													-0.355
												],
												[
													-0.294,
													-0.669
												],
												[
													-0.303,
													-0.483
												],
												[
													-0.22,
													-0.271
												],
												[
													-0.08,
													-0.128
												],
												[
													0.088,
													-0.401
												],
												[
													0.396,
													-0.248
												],
												[
													0.421,
													0.677
												],
												[
													0.086,
													0.177
												]
											],
											o: [
												[
													-0.151,
													-0.243
												],
												[
													0,
													0
												],
												[
													-0.1,
													0.007
												],
												[
													0,
													0
												],
												[
													-1.048,
													0.228
												],
												[
													-0.316,
													-0.193
												],
												[
													-0.67,
													-1.07
												],
												[
													-0.043,
													-0.366
												],
												[
													0,
													0
												],
												[
													0.531,
													-0.596
												],
												[
													-0.048,
													-0.077
												],
												[
													0,
													0
												],
												[
													-0.446,
													-0.714
												],
												[
													0.421,
													-0.264
												],
												[
													0.414,
													0.098
												],
												[
													0.11,
													0.18
												],
												[
													0.158,
													0.396
												],
												[
													0.15,
													0.298
												],
												[
													0.301,
													0.486
												],
												[
													0.509,
													0.587
												],
												[
													0.213,
													0.343
												],
												[
													-0.123,
													0.386
												],
												[
													-0.754,
													0.469
												],
												[
													-0.04,
													-0.065
												],
												[
													-0.06,
													-0.141
												],
												[
													-0.151,
													-0.243
												],
												[
													-0.344,
													0.213
												],
												[
													-0.143,
													0.286
												],
												[
													0,
													0
												],
												[
													0.454,
													0.727
												],
												[
													0.203,
													-0.127
												],
												[
													-0.04,
													-0.062
												],
												[
													-0.098,
													-0.115
												],
												[
													-0.296,
													-0.474
												],
												[
													0.408,
													-0.256
												],
												[
													0.39,
													0.058
												],
												[
													0.113,
													0.181
												],
												[
													0.128,
													0.293
												],
												[
													0.326,
													0.521
												],
												[
													0.511,
													0.622
												],
												[
													0.249,
													0.396
												],
												[
													-0.088,
													0.398
												],
												[
													-0.892,
													0.557
												],
												[
													-0.047,
													-0.075
												],
												[
													-0.082,
													-0.178
												]
											],
											v: [
												[
													-75.199,
													55.142
												],
												[
													-75.971,
													54.798
												],
												[
													-75.969,
													54.801
												],
												[
													-76.843,
													54.974
												],
												[
													-86.01,
													57.026
												],
												[
													-88.263,
													56.996
												],
												[
													-89.631,
													55.272
												],
												[
													-90.696,
													53.119
												],
												[
													-90.007,
													51.731
												],
												[
													-83.384,
													44.195
												],
												[
													-82.825,
													42.917
												],
												[
													-83.133,
													42.552
												],
												[
													-83.264,
													42.341
												],
												[
													-82.67,
													40.482
												],
												[
													-81.417,
													40.231
												],
												[
													-80.414,
													40.988
												],
												[
													-80.031,
													41.732
												],
												[
													-79.685,
													42.499
												],
												[
													-79.044,
													43.614
												],
												[
													-78.397,
													44.566
												],
												[
													-77.48,
													45.694
												],
												[
													-77.342,
													46.789
												],
												[
													-78.119,
													47.739
												],
												[
													-79.703,
													47.716
												],
												[
													-79.853,
													47.411
												],
												[
													-80.003,
													47.105
												],
												[
													-80.632,
													46.992
												],
												[
													-81.362,
													47.739
												],
												[
													-81.372,
													48.491
												],
												[
													-79.783,
													51.034
												],
												[
													-77.801,
													51.312
												],
												[
													-77.698,
													50.796
												],
												[
													-77.906,
													50.528
												],
												[
													-78.114,
													50.26
												],
												[
													-77.427,
													48.847
												],
												[
													-76.229,
													48.551
												],
												[
													-75.31,
													49.172
												],
												[
													-74.703,
													50.443
												],
												[
													-74.057,
													51.608
												],
												[
													-73.235,
													52.796
												],
												[
													-72.348,
													53.919
												],
												[
													-72.107,
													55.112
												],
												[
													-72.831,
													56.081
												],
												[
													-74.804,
													55.903
												],
												[
													-75.002,
													55.523
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 18",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 18,
									ty: "sh",
									ix: 19,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.083,
													0.087
												],
												[
													-0.233,
													0.323
												],
												[
													-0.348,
													0.328
												],
												[
													0,
													0
												],
												[
													-0.128,
													0.081
												],
												[
													-0.209,
													-0.218
												],
												[
													-0.12,
													-0.208
												],
												[
													-0.083,
													-0.088
												],
												[
													-0.361,
													0.02
												],
												[
													-0.318,
													0.301
												],
												[
													-0.013,
													0.426
												],
												[
													0.33,
													0.351
												],
												[
													0.674,
													0.584
												],
												[
													0.464,
													0.494
												],
												[
													0.213,
													0.293
												],
												[
													0,
													0
												],
												[
													0.062,
													0.065
												],
												[
													0.431,
													-0.003
												],
												[
													0.351,
													-0.329
												],
												[
													0.047,
													-0.366
												],
												[
													-0.236,
													-0.251
												],
												[
													-0.203,
													-0.141
												],
												[
													-0.083,
													-0.087
												],
												[
													0.744,
													-0.701
												],
												[
													0,
													0
												],
												[
													0.278,
													0.295
												],
												[
													0.125,
													0.21
												],
												[
													0.082,
													0.088
												],
												[
													0.368,
													-0.025
												],
												[
													0.308,
													-0.291
												],
												[
													-0.752,
													-0.8
												],
												[
													-0.597,
													-0.521
												],
												[
													-0.291,
													-0.305
												],
												[
													-0.338,
													-0.446
												],
												[
													-0.155,
													-0.165
												],
												[
													-0.416,
													-0.013
												],
												[
													-0.373,
													0.349
												],
												[
													-0.047,
													0.366
												],
												[
													0.238,
													0.251
												],
												[
													0.198,
													0.133
												]
											],
											o: [
												[
													-0.198,
													-0.132
												],
												[
													-0.206,
													-0.218
												],
												[
													0.078,
													-0.116
												],
												[
													0,
													0
												],
												[
													0.351,
													-0.331
												],
												[
													0.336,
													-0.213
												],
												[
													0.082,
													0.088
												],
												[
													0.123,
													0.206
												],
												[
													0.248,
													0.263
												],
												[
													0.363,
													-0.02
												],
												[
													0.361,
													-0.341
												],
												[
													0.012,
													-0.426
												],
												[
													-0.186,
													-0.198
												],
												[
													-0.559,
													-0.483
												],
												[
													-0.298,
													-0.318
												],
												[
													0,
													0
												],
												[
													-0.02,
													-0.043
												],
												[
													-0.308,
													-0.329
												],
												[
													-0.431,
													0.002
												],
												[
													-0.306,
													0.288
												],
												[
													-0.048,
													0.366
												],
												[
													0.082,
													0.087
												],
												[
													0.203,
													0.137
												],
												[
													0.278,
													0.296
												],
												[
													0,
													0
												],
												[
													-0.731,
													0.691
												],
												[
													-0.083,
													-0.088
												],
												[
													-0.125,
													-0.211
												],
												[
													-0.238,
													-0.25
												],
												[
													-0.369,
													0.025
												],
												[
													-0.799,
													0.752
												],
												[
													0.175,
													0.185
												],
												[
													0.596,
													0.524
												],
												[
													0.361,
													0.384
												],
												[
													0.502,
													0.664
												],
												[
													0.341,
													0.361
												],
												[
													0.413,
													0.012
												],
												[
													0.306,
													-0.288
												],
												[
													0.048,
													-0.366
												],
												[
													-0.092,
													-0.097
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-72.207,
													72.217
												],
												[
													-72.628,
													71.887
												],
												[
													-72.588,
													71.075
												],
												[
													-71.947,
													70.408
												],
												[
													-67.398,
													66.123
												],
												[
													-66.679,
													65.506
												],
												[
													-65.864,
													65.514
												],
												[
													-65.559,
													65.955
												],
												[
													-65.253,
													66.396
												],
												[
													-64.338,
													66.759
												],
												[
													-63.319,
													66.278
												],
												[
													-62.757,
													65.131
												],
												[
													-63.233,
													63.968
												],
												[
													-64.524,
													62.797
												],
												[
													-66.06,
													61.331
												],
												[
													-66.829,
													60.414
												],
												[
													-67.671,
													59.257
												],
												[
													-67.794,
													59.094
												],
												[
													-68.904,
													58.605
												],
												[
													-70.077,
													59.104
												],
												[
													-70.608,
													60.086
												],
												[
													-70.325,
													61.011
												],
												[
													-69.897,
													61.352
												],
												[
													-69.468,
													61.692
												],
												[
													-70.167,
													63.188
												],
												[
													-74.716,
													67.474
												],
												[
													-76.232,
													68.068
												],
												[
													-76.545,
													67.619
												],
												[
													-76.858,
													67.17
												],
												[
													-77.765,
													66.832
												],
												[
													-78.778,
													67.306
												],
												[
													-78.848,
													69.634
												],
												[
													-77.69,
													70.696
												],
												[
													-76.362,
													71.939
												],
												[
													-75.315,
													73.182
												],
												[
													-74.33,
													74.425
												],
												[
													-73.197,
													74.987
												],
												[
													-72.017,
													74.48
												],
												[
													-71.486,
													73.498
												],
												[
													-71.769,
													72.573
												],
												[
													-72.205,
													72.225
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 19",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 19,
									ty: "sh",
									ix: 20,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.391,
													-0.228
												],
												[
													-0.098,
													-0.071
												],
												[
													0,
													0
												],
												[
													-0.06,
													-0.416
												],
												[
													0.291,
													-0.401
												],
												[
													0.353,
													-0.088
												],
												[
													0.293,
													0.213
												],
												[
													0.163,
													0.183
												],
												[
													0.085,
													0.063
												],
												[
													0.29,
													-0.273
												],
												[
													0.283,
													-0.388
												],
												[
													0,
													0
												],
												[
													0.055,
													-0.128
												],
												[
													-0.243,
													-0.178
												],
												[
													-0.22,
													-0.095
												],
												[
													-0.11,
													-0.08
												],
												[
													-0.02,
													-0.369
												],
												[
													0.248,
													-0.341
												],
												[
													0.9,
													0.654
												],
												[
													0.584,
													0.499
												],
												[
													0.596,
													0.434
												],
												[
													0.519,
													0.359
												],
												[
													1.03,
													0.732
												],
												[
													0.614,
													0.408
												],
												[
													0,
													0
												],
												[
													-0.025,
													-0.017
												],
												[
													-0.388,
													0.534
												],
												[
													-0.243,
													0.233
												],
												[
													-0.186,
													0.256
												],
												[
													-0.208,
													0.426
												],
												[
													-0.14,
													0.195
												],
												[
													-0.448,
													0.082
												],
												[
													-0.414,
													-0.301
												],
												[
													-0.042,
													-0.441
												],
												[
													0.328,
													-0.451
												],
												[
													0.288,
													-0.293
												],
												[
													0.097,
													-0.133
												],
												[
													-0.609,
													-0.441
												],
												[
													0,
													0
												],
												[
													-0.211,
													0.022
												],
												[
													-0.37,
													0.512
												],
												[
													0,
													0
												],
												[
													0.328,
													0.238
												],
												[
													0.256,
													-0.353
												],
												[
													0.118,
													-0.213
												],
												[
													0.018,
													-0.025
												],
												[
													0.022,
													-0.03
												],
												[
													0.017,
													-0.025
												],
												[
													0.571,
													0.416
												],
												[
													-0.458,
													0.631
												],
												[
													-0.218,
													0.25
												],
												[
													-0.308,
													0.426
												],
												[
													-0.311,
													0.529
												],
												[
													-0.178,
													0.243
												],
												[
													-0.632,
													-0.459
												],
												[
													0.496,
													-0.681
												],
												[
													0.048,
													-0.04
												],
												[
													0.01,
													-0.013
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.461,
													-0.336
												],
												[
													-0.11,
													0.012
												],
												[
													-0.15,
													0.205
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.042,
													0.135
												],
												[
													0.268,
													0.195
												],
												[
													0.286,
													0.143
												],
												[
													0.133,
													0.098
												],
												[
													-0.602,
													0.827
												],
												[
													-0.42,
													0.055
												],
												[
													-0.413,
													-0.301
												],
												[
													-0.582,
													-0.516
												],
												[
													-0.316,
													-0.231
												]
											],
											o: [
												[
													0.902,
													0.526
												],
												[
													0,
													0
												],
												[
													0.389,
													0.283
												],
												[
													0.06,
													0.416
												],
												[
													-0.256,
													0.354
												],
												[
													-0.351,
													0.088
												],
												[
													-0.098,
													-0.071
												],
												[
													-0.163,
													-0.183
												],
												[
													-0.243,
													-0.175
												],
												[
													-0.113,
													0.103
												],
												[
													0,
													0
												],
												[
													-0.281,
													0.389
												],
												[
													-0.171,
													0.361
												],
												[
													0.098,
													0.07
												],
												[
													0.221,
													0.093
												],
												[
													0.281,
													0.203
												],
												[
													0.02,
													0.368
												],
												[
													-0.644,
													0.887
												],
												[
													-0.278,
													-0.203
												],
												[
													-0.882,
													-0.754
												],
												[
													-0.411,
													-0.301
												],
												[
													-0.348,
													-0.235
												],
												[
													-0.413,
													-0.301
												],
												[
													0,
													0
												],
												[
													-0.155,
													-0.096
												],
												[
													-0.608,
													-0.441
												],
												[
													0.161,
													-0.218
												],
												[
													0.363,
													-0.349
												],
												[
													0.142,
													-0.193
												],
												[
													0.208,
													-0.426
												],
												[
													0.311,
													-0.426
												],
												[
													0.451,
													-0.083
												],
												[
													0.413,
													0.301
												],
												[
													0.043,
													0.441
												],
												[
													-0.098,
													0.133
												],
												[
													-0.213,
													0.218
												],
												[
													-0.301,
													0.414
												],
												[
													0,
													0
												],
												[
													0.476,
													0.346
												],
												[
													0.213,
													-0.023
												],
												[
													0,
													0
												],
												[
													0.274,
													-0.378
												],
												[
													-0.512,
													-0.371
												],
												[
													-0.027,
													0.038
												],
												[
													-0.013,
													0.018
												],
												[
													-0.017,
													0.024
												],
												[
													-0.033,
													0.07
												],
												[
													-0.346,
													0.474
												],
												[
													-0.669,
													-0.486
												],
												[
													0.088,
													-0.12
												],
												[
													0.218,
													-0.249
												],
												[
													0.176,
													-0.245
												],
												[
													0.31,
													-0.528
												],
												[
													0.539,
													-0.742
												],
												[
													0.644,
													0.469
												],
												[
													-0.018,
													0.023
												],
												[
													-0.011,
													0.016
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.224,
													0.303
												],
												[
													0.231,
													0.168
												],
												[
													0.11,
													-0.013
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.14,
													-0.195
												],
												[
													0.088,
													-0.253
												],
												[
													-0.132,
													-0.098
												],
												[
													-0.285,
													-0.143
												],
												[
													-0.719,
													-0.521
												],
												[
													0.283,
													-0.389
												],
												[
													0.421,
													-0.055
												],
												[
													0.319,
													0.23
												],
												[
													0.584,
													0.516
												],
												[
													0.621,
													0.451
												]
											],
											v: [
												[
													-49.475,
													75.35
												],
												[
													-47.977,
													76.245
												],
												[
													-47.987,
													76.245
												],
												[
													-47.313,
													77.292
												],
												[
													-47.661,
													78.517
												],
												[
													-48.573,
													79.179
												],
												[
													-49.538,
													78.994
												],
												[
													-49.929,
													78.613
												],
												[
													-50.302,
													78.244
												],
												[
													-51.104,
													78.387
												],
												[
													-51.698,
													79.126
												],
												[
													-55.372,
													84.178
												],
												[
													-55.878,
													84.953
												],
												[
													-55.768,
													85.76
												],
												[
													-55.292,
													86.008
												],
												[
													-54.798,
													86.268
												],
												[
													-54.347,
													87.126
												],
												[
													-54.688,
													88.188
												],
												[
													-57.006,
													88.539
												],
												[
													-58.302,
													87.484
												],
												[
													-60.519,
													85.702
												],
												[
													-61.918,
													84.712
												],
												[
													-63.988,
													83.264
												],
												[
													-65.529,
													82.199
												],
												[
													-66.689,
													81.495
												],
												[
													-66.885,
													81.379
												],
												[
													-67.213,
													79.913
												],
												[
													-66.609,
													79.237
												],
												[
													-65.784,
													78.332
												],
												[
													-65.261,
													77.402
												],
												[
													-64.737,
													76.473
												],
												[
													-63.597,
													75.711
												],
												[
													-62.301,
													76.039
												],
												[
													-61.617,
													77.149
												],
												[
													-62.043,
													78.485
												],
												[
													-62.619,
													79.124
												],
												[
													-63.085,
													79.65
												],
												[
													-62.624,
													80.933
												],
												[
													-60.637,
													82.379
												],
												[
													-59.607,
													82.863
												],
												[
													-58.733,
													82.063
												],
												[
													-58.109,
													81.206
												],
												[
													-58.191,
													80.282
												],
												[
													-59.342,
													80.254
												],
												[
													-59.557,
													80.627
												],
												[
													-59.603,
													80.692
												],
												[
													-59.662,
													80.773
												],
												[
													-59.737,
													80.913
												],
												[
													-61.113,
													81.001
												],
												[
													-61.427,
													79.322
												],
												[
													-60.965,
													78.766
												],
												[
													-60.174,
													77.753
												],
												[
													-59.444,
													76.595
												],
												[
													-58.715,
													75.438
												],
												[
													-56.958,
													75.014
												],
												[
													-56.735,
													76.738
												],
												[
													-56.833,
													76.833
												],
												[
													-56.865,
													76.877
												],
												[
													-56.866,
													76.878
												],
												[
													-56.866,
													76.879
												],
												[
													-56.869,
													76.883
												],
												[
													-56.887,
													76.908
												],
												[
													-56.898,
													76.924
												],
												[
													-57.043,
													77.124
												],
												[
													-56.683,
													78.084
												],
												[
													-56.169,
													78.317
												],
												[
													-55.778,
													77.989
												],
												[
													-55.009,
													76.931
												],
												[
													-54.575,
													76.297
												],
												[
													-54.3,
													75.801
												],
												[
													-54.568,
													75.132
												],
												[
													-55.197,
													74.771
												],
												[
													-55.826,
													74.41
												],
												[
													-56.001,
													72.388
												],
												[
													-54.944,
													71.721
												],
												[
													-53.691,
													72.09
												],
												[
													-52.342,
													73.21
												],
												[
													-50.994,
													74.33
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 20",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 20,
									ty: "sh",
									ix: 21,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.032,
													-0.035
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.007,
													-0.012
												],
												[
													-0.361,
													-0.151
												],
												[
													0,
													0
												],
												[
													0.07,
													-0.166
												]
											],
											o: [
												[
													-0.022,
													0.055
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.055,
													-0.205
												],
												[
													0.083,
													-0.193
												],
												[
													0,
													0
												],
												[
													0.346,
													0.148
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-37.134,
													90.474
												],
												[
													-37.216,
													90.609
												],
												[
													-40.381,
													94.483
												],
												[
													-39.572,
													89.804
												],
												[
													-39.499,
													89.516
												],
												[
													-38.835,
													89.454
												],
												[
													-37.547,
													90
												],
												[
													-37.134,
													90.469
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 21",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 21,
									ty: "sh",
									ix: 22,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.775,
													0.216
												],
												[
													0.569,
													0.241
												],
												[
													0.273,
													0.163
												],
												[
													0.193,
													0.083
												],
												[
													0.353,
													-0.176
												],
												[
													0.188,
													-0.443
												],
												[
													-0.511,
													-0.218
												],
												[
													-0.148,
													-0.038
												],
												[
													-0.067,
													-0.028
												],
												[
													0.093,
													-0.22
												],
												[
													0.787,
													0.336
												],
												[
													0,
													0
												],
												[
													0.047,
													0.315
												],
												[
													-0.158,
													0.373
												],
												[
													-0.263,
													-0.112
												],
												[
													-0.13,
													-0.08
												],
												[
													-0.071,
													-0.027
												],
												[
													-0.346,
													0.817
												],
												[
													0.123,
													0.386
												],
												[
													0.374,
													0.158
												],
												[
													0.752,
													0.191
												],
												[
													0.524,
													0.223
												],
												[
													0.293,
													0.158
												],
												[
													0.359,
													0.236
												],
												[
													0.193,
													0.082
												],
												[
													0.394,
													-0.16
												],
												[
													0.193,
													-0.459
												],
												[
													-0.775,
													-0.331
												],
												[
													0,
													0
												],
												[
													-0.083,
													-0.035
												],
												[
													0.09,
													-0.794
												],
												[
													0,
													0
												],
												[
													-0.241,
													-0.273
												],
												[
													-1.162,
													-0.494
												],
												[
													-0.368,
													0.022
												],
												[
													-0.727,
													0.786
												],
												[
													0,
													0
												],
												[
													-0.078,
													0.065
												],
												[
													-0.264,
													-0.11
												],
												[
													-0.17,
													-0.095
												],
												[
													-0.082,
													-0.035
												],
												[
													-0.411,
													0.969
												],
												[
													0.158,
													0.379
												],
												[
													0.431,
													0.183
												]
											],
											o: [
												[
													-0.137,
													-0.057
												],
												[
													-0.336,
													-0.092
												],
												[
													-0.526,
													-0.223
												],
												[
													-0.624,
													-0.379
												],
												[
													-0.388,
													-0.165
												],
												[
													-0.353,
													0.178
												],
												[
													-0.346,
													0.817
												],
												[
													0.07,
													0.03
												],
												[
													0.148,
													0.037
												],
												[
													0.236,
													0.1
												],
												[
													-0.398,
													0.942
												],
												[
													0,
													0
												],
												[
													-0.235,
													-0.1
												],
												[
													-0.045,
													-0.314
												],
												[
													0.122,
													-0.291
												],
												[
													0.07,
													0.031
												],
												[
													0.131,
													0.081
												],
												[
													0.526,
													0.223
												],
												[
													0.183,
													-0.429
												],
												[
													-0.12,
													-0.386
												],
												[
													-0.18,
													-0.075
												],
												[
													-0.191,
													-0.047
												],
												[
													-0.484,
													-0.206
												],
												[
													-0.126,
													-0.053
												],
												[
													-0.3,
													-0.178
												],
												[
													-0.444,
													-0.188
												],
												[
													-0.393,
													0.16
												],
												[
													-0.388,
													0.914
												],
												[
													0,
													0
												],
												[
													0.225,
													0.047
												],
												[
													0.278,
													0.117
												],
												[
													0,
													0
												],
												[
													-0.087,
													0.747
												],
												[
													0.243,
													0.276
												],
												[
													1.038,
													0.441
												],
												[
													0.517,
													-0.061
												],
												[
													0,
													0
												],
												[
													0.333,
													-0.363
												],
												[
													0.291,
													-0.221
												],
												[
													0.082,
													0.035
												],
												[
													0.171,
													0.098
												],
												[
													0.735,
													0.311
												],
												[
													0.183,
													-0.429
												],
												[
													-0.158,
													-0.378
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-28.03,
													85.762
												],
												[
													-29.398,
													85.351
												],
												[
													-30.754,
													84.85
												],
												[
													-31.951,
													84.269
												],
												[
													-33.177,
													83.577
												],
												[
													-34.287,
													83.595
												],
												[
													-35.099,
													84.524
												],
												[
													-34.851,
													86.076
												],
												[
													-34.525,
													86.176
												],
												[
													-34.202,
													86.276
												],
												[
													-33.989,
													86.757
												],
												[
													-35.771,
													87.667
												],
												[
													-38.532,
													86.494
												],
												[
													-38.955,
													85.873
												],
												[
													-38.787,
													84.843
												],
												[
													-38.209,
													84.574
												],
												[
													-37.911,
													84.737
												],
												[
													-37.612,
													84.9
												],
												[
													-36.304,
													84.011
												],
												[
													-36.214,
													82.788
												],
												[
													-36.956,
													81.971
												],
												[
													-38.354,
													81.572
												],
												[
													-39.429,
													81.164
												],
												[
													-40.594,
													80.62
												],
												[
													-41.319,
													80.189
												],
												[
													-42.06,
													79.801
												],
												[
													-43.316,
													79.758
												],
												[
													-44.198,
													80.683
												],
												[
													-43.616,
													82.547
												],
												[
													-43.388,
													82.645
												],
												[
													-42.927,
													82.768
												],
												[
													-42.649,
													84.136
												],
												[
													-43.747,
													94.107
												],
												[
													-43.516,
													95.638
												],
												[
													-41.409,
													96.791
												],
												[
													-39.299,
													97.418
												],
												[
													-37.437,
													96.15
												],
												[
													-31.109,
													89.208
												],
												[
													-30.493,
													88.564
												],
												[
													-29.663,
													88.401
												],
												[
													-29.283,
													88.599
												],
												[
													-28.902,
													88.797
												],
												[
													-27.185,
													87.81
												],
												[
													-27.15,
													86.599
												],
												[
													-28.032,
													85.76
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 22",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 22,
									ty: "sh",
									ix: 23,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.349,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.258,
													-0.35
												],
												[
													0.063,
													-0.476
												],
												[
													0.268,
													-0.246
												],
												[
													0.359,
													0.048
												],
												[
													0.226,
													0.083
												],
												[
													0.12,
													0.015
												],
												[
													0.125,
													-0.378
												],
												[
													0.063,
													-0.476
												],
												[
													0,
													0
												],
												[
													-0.013,
													-0.138
												],
												[
													-0.299,
													-0.038
												],
												[
													-0.238,
													0.022
												],
												[
													-0.136,
													-0.017
												],
												[
													-0.193,
													-0.314
												],
												[
													0.055,
													-0.419
												],
												[
													1.102,
													0.143
												],
												[
													0.825,
													0.183
												],
												[
													0.418,
													0.056
												],
												[
													0.742,
													0.005
												],
												[
													0.283,
													0.038
												],
												[
													0.125,
													0.197
												],
												[
													0.06,
													0.584
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.233,
													-0.221
												],
												[
													0.374,
													0.048
												],
												[
													0.661,
													0.163
												],
												[
													0.343,
													0.046
												],
												[
													1.433,
													0.065
												],
												[
													0.193,
													0.025
												],
												[
													0.261,
													0.329
												],
												[
													-0.065,
													0.506
												],
												[
													-0.268,
													0.253
												],
												[
													-0.344,
													-0.045
												],
												[
													-0.23,
													-0.083
												],
												[
													-0.105,
													-0.012
												],
												[
													-0.13,
													0.999
												],
												[
													0,
													0
												],
												[
													0.388,
													0.051
												],
												[
													0.245,
													-0.023
												],
												[
													0.121,
													0.015
												],
												[
													0.203,
													0.313
												],
												[
													-0.055,
													0.416
												],
												[
													-0.336,
													0.253
												],
												[
													-0.491,
													-0.065
												],
												[
													-0.659,
													-0.177
												],
												[
													-0.449,
													-0.058
												],
												[
													-0.561,
													0.002
												],
												[
													-0.283,
													-0.038
												],
												[
													-0.238,
													-0.334
												],
												[
													0.065,
													-0.491
												],
												[
													0.612,
													0.08
												],
												[
													0.043,
													0.02
												],
												[
													0.06,
													0.008
												],
												[
													0.015,
													0
												],
												[
													0.087,
													-0.324
												],
												[
													0.048,
													-0.358
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.612,
													-0.08
												],
												[
													0,
													0
												],
												[
													-0.113,
													-0.88
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.123,
													0.108
												],
												[
													0.12,
													0.015
												],
												[
													0.063,
													-0.008
												],
												[
													0.023,
													0.003
												],
												[
													0.022,
													0.003
												],
												[
													0.09,
													0.013
												],
												[
													-0.117,
													0.91
												],
												[
													-0.308,
													0.263
												],
												[
													-0.449,
													-0.058
												],
												[
													-0.321,
													-0.088
												],
												[
													-0.133,
													-0.038
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.027,
													-0.008
												],
												[
													-0.404,
													-0.052
												]
											],
											o: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.464,
													0.061
												],
												[
													0.258,
													0.351
												],
												[
													-0.055,
													0.434
												],
												[
													-0.266,
													0.245
												],
												[
													-0.12,
													-0.018
												],
												[
													-0.225,
													-0.083
												],
												[
													-0.298,
													-0.04
												],
												[
													-0.05,
													0.145
												],
												[
													0,
													0
												],
												[
													-0.063,
													0.476
												],
												[
													0.025,
													0.396
												],
												[
													0.12,
													0.015
												],
												[
													0.238,
													-0.023
												],
												[
													0.341,
													0.045
												],
												[
													0.196,
													0.313
												],
												[
													-0.141,
													1.09
												],
												[
													-0.359,
													-0.048
												],
												[
													-0.824,
													-0.183
												],
												[
													-0.672,
													-0.087
												],
												[
													-0.501,
													-0.005
												],
												[
													-0.371,
													-0.05
												],
												[
													-0.128,
													-0.198
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.25,
													0.634
												],
												[
													-0.233,
													0.22
												],
												[
													-0.328,
													-0.043
												],
												[
													-0.662,
													-0.163
												],
												[
													-0.356,
													-0.047
												],
												[
													-0.406,
													-0.023
												],
												[
													-0.491,
													-0.065
												],
												[
													-0.26,
													-0.33
												],
												[
													0.055,
													-0.416
												],
												[
													0.268,
													-0.253
												],
												[
													0.135,
													0.017
												],
												[
													0.231,
													0.083
												],
												[
													0.404,
													0.053
												],
												[
													0,
													0
												],
												[
													0.133,
													-1.015
												],
												[
													-0.118,
													-0.017
												],
												[
													-0.246,
													0.02
												],
												[
													-0.343,
													-0.046
												],
												[
													-0.2,
													-0.314
												],
												[
													0.068,
													-0.506
												],
												[
													0.338,
													-0.25
												],
												[
													0.283,
													0.037
												],
												[
													0.441,
													0.118
												],
												[
													0.286,
													0.035
												],
												[
													0.561,
													-0.003
												],
												[
													0.448,
													0.058
												],
												[
													0.238,
													0.333
												],
												[
													-0.12,
													0.924
												],
												[
													-0.09,
													-0.01
												],
												[
													-0.042,
													-0.005
												],
												[
													-0.055,
													-0.022
												],
												[
													-0.238,
													-0.033
												],
												[
													-0.033,
													0.145
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.393,
													-0.92
												],
												[
													0,
													0
												],
												[
													0.596,
													0.077
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.09,
													-0.699
												],
												[
													-0.04,
													-0.053
												],
												[
													-0.03,
													-0.005
												],
												[
													-0.022,
													-0.003
												],
												[
													-0.022,
													-0.003
												],
												[
													-0.045,
													0.008
												],
												[
													-0.596,
													-0.077
												],
												[
													0.065,
													-0.506
												],
												[
													0.308,
													-0.263
												],
												[
													0.21,
													0.027
												],
												[
													0.232,
													0.063
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.048,
													0.014
												],
												[
													0.308,
													0.072
												],
												[
													0.506,
													0.065
												]
											],
											v: [
												[
													-3.017,
													90.423
												],
												[
													-1.606,
													90.423
												],
												[
													-1.624,
													90.438
												],
												[
													-0.544,
													91.057
												],
												[
													-0.251,
													92.3
												],
												[
													-0.734,
													93.318
												],
												[
													-1.672,
													93.616
												],
												[
													-2.188,
													93.468
												],
												[
													-2.704,
													93.32
												],
												[
													-3.338,
													93.829
												],
												[
													-3.506,
													94.764
												],
												[
													-4.313,
													100.959
												],
												[
													-4.388,
													101.881
												],
												[
													-3.904,
													102.535
												],
												[
													-3.368,
													102.525
												],
												[
													-2.809,
													102.517
												],
												[
													-2.005,
													103.054
												],
												[
													-1.794,
													104.149
												],
												[
													-3.661,
													105.567
												],
												[
													-5.436,
													105.221
												],
												[
													-7.3,
													104.865
												],
												[
													-9.42,
													104.725
												],
												[
													-10.595,
													104.662
												],
												[
													-11.342,
													104.292
												],
												[
													-11.623,
													103.119
												],
												[
													-12.417,
													94.714
												],
												[
													-15.382,
													102.289
												],
												[
													-16.106,
													103.57
												],
												[
													-17.016,
													103.828
												],
												[
													-18.499,
													103.522
												],
												[
													-20.005,
													103.211
												],
												[
													-22.689,
													103.044
												],
												[
													-23.589,
													102.971
												],
												[
													-24.717,
													102.379
												],
												[
													-25.007,
													101.124
												],
												[
													-24.524,
													100.119
												],
												[
													-23.606,
													99.806
												],
												[
													-23.058,
													99.956
												],
												[
													-22.554,
													100.101
												],
												[
													-21.755,
													98.681
												],
												[
													-20.948,
													92.486
												],
												[
													-21.331,
													90.889
												],
												[
													-21.877,
													90.897
												],
												[
													-22.424,
													90.905
												],
												[
													-23.241,
													90.366
												],
												[
													-23.461,
													89.268
												],
												[
													-22.857,
													88.13
												],
												[
													-21.614,
													87.85
												],
												[
													-20.201,
													88.17
												],
												[
													-18.87,
													88.434
												],
												[
													-17.602,
													88.484
												],
												[
													-16.334,
													88.534
												],
												[
													-15.307,
													89.123
												],
												[
													-15.046,
													90.361
												],
												[
													-16.144,
													91.629
												],
												[
													-16.342,
													91.581
												],
												[
													-16.497,
													91.561
												],
												[
													-16.605,
													91.524
												],
												[
													-17.093,
													91.96
												],
												[
													-17.214,
													92.716
												],
												[
													-18.311,
													101.149
												],
												[
													-13.77,
													90.549
												],
												[
													-12.264,
													89.288
												],
												[
													-10.833,
													89.474
												],
												[
													-9.768,
													90.91
												],
												[
													-8.245,
													102.457
												],
												[
													-7.147,
													94.024
												],
												[
													-7.195,
													92.814
												],
												[
													-7.433,
													92.714
												],
												[
													-7.571,
													92.719
												],
												[
													-7.639,
													92.71
												],
												[
													-7.706,
													92.701
												],
												[
													-7.909,
													92.696
												],
												[
													-8.626,
													91.215
												],
												[
													-8.067,
													90.06
												],
												[
													-6.934,
													89.752
												],
												[
													-6.137,
													89.925
												],
												[
													-5.589,
													90.077
												],
												[
													-5.581,
													90.079
												],
												[
													-5.481,
													90.106
												],
												[
													-5.368,
													90.138
												],
												[
													-4.3,
													90.323
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 23",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 23,
									ty: "sh",
									ix: 24,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.002,
													-0.015
												],
												[
													-0.379,
													0.096
												],
												[
													0,
													0
												],
												[
													-0.045,
													-0.175
												],
												[
													0.002,
													-0.047
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-0.081,
													-0.198
												],
												[
													-0.05,
													-0.205
												],
												[
													0,
													0
												],
												[
													0.366,
													-0.09
												],
												[
													0.015,
													0.058
												],
												[
													0,
													0
												]
											],
											v: [
												[
													24.852,
													99.761
												],
												[
													22.682,
													95.538
												],
												[
													22.566,
													95.265
												],
												[
													23.058,
													94.816
												],
												[
													24.413,
													94.478
												],
												[
													25.027,
													94.603
												],
												[
													25.045,
													94.761
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 24",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 24,
									ty: "sh",
									ix: 25,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.451,
													-0.113
												],
												[
													0.749,
													-0.296
												],
												[
													0.597,
													-0.151
												],
												[
													0.318,
													-0.035
												],
												[
													0.206,
													-0.05
												],
												[
													0.175,
													-0.356
												],
												[
													-0.118,
													-0.466
												],
												[
													-0.542,
													0.136
												],
												[
													-0.141,
													0.058
												],
												[
													-0.072,
													0.017
												],
												[
													-0.058,
													-0.236
												],
												[
													0.83,
													-0.208
												],
												[
													0,
													0
												],
												[
													0.228,
													0.223
												],
												[
													0.098,
													0.393
												],
												[
													-0.276,
													0.07
												],
												[
													-0.151,
													0.015
												],
												[
													-0.072,
													0.02
												],
												[
													0.216,
													0.859
												],
												[
													0.331,
													0.236
												],
												[
													0.393,
													-0.098
												],
												[
													0.714,
													-0.301
												],
												[
													0.554,
													-0.14
												],
												[
													0.328,
													-0.052
												],
												[
													0.426,
													-0.03
												],
												[
													0.205,
													-0.05
												],
												[
													0.218,
													-0.366
												],
												[
													-0.121,
													-0.481
												],
												[
													-0.817,
													0.205
												],
												[
													0,
													0
												],
												[
													-0.088,
													0.023
												],
												[
													-0.406,
													-0.689
												],
												[
													0,
													0
												],
												[
													-0.358,
													-0.073
												],
												[
													-1.225,
													0.308
												],
												[
													-0.281,
													0.241
												],
												[
													-0.105,
													1.065
												],
												[
													0,
													0
												],
												[
													-0.023,
													0.1
												],
												[
													-0.279,
													0.07
												],
												[
													-0.195,
													0.025
												],
												[
													-0.088,
													0.02
												],
												[
													0.256,
													1.022
												],
												[
													0.354,
													0.206
												]
											],
											o: [
												[
													-0.353,
													-0.205
												],
												[
													-0.145,
													0.037
												],
												[
													-0.324,
													0.127
												],
												[
													-0.554,
													0.137
												],
												[
													-0.727,
													0.072
												],
												[
													-0.408,
													0.103
												],
												[
													-0.176,
													0.354
												],
												[
													0.216,
													0.859
												],
												[
													0.072,
													-0.017
												],
												[
													0.14,
													-0.058
												],
												[
													0.248,
													-0.063
												],
												[
													0.248,
													0.992
												],
												[
													0,
													0
												],
												[
													-0.248,
													0.063
												],
												[
													-0.225,
													-0.223
												],
												[
													-0.078,
													-0.306
												],
												[
													0.072,
													-0.018
												],
												[
													0.15,
													-0.015
												],
												[
													0.554,
													-0.138
												],
												[
													-0.113,
													-0.454
												],
												[
													-0.331,
													-0.235
												],
												[
													-0.191,
													0.048
												],
												[
													-0.183,
													0.075
												],
												[
													-0.511,
													0.128
												],
												[
													-0.13,
													0.033
												],
												[
													-0.346,
													0.04
												],
												[
													-0.466,
													0.118
												],
												[
													-0.218,
													0.363
												],
												[
													0.24,
													0.962
												],
												[
													0,
													0
												],
												[
													0.208,
													-0.098
												],
												[
													0.293,
													-0.073
												],
												[
													0,
													0
												],
												[
													0.378,
													0.649
												],
												[
													0.359,
													0.073
												],
												[
													1.095,
													-0.273
												],
												[
													0.375,
													-0.358
												],
												[
													0,
													0
												],
												[
													0.048,
													-0.494
												],
												[
													0.097,
													-0.351
												],
												[
													0.087,
													-0.023
												],
												[
													0.195,
													-0.026
												],
												[
													0.774,
													-0.193
												],
												[
													-0.112,
													-0.454
												],
												[
													0,
													0
												]
											],
											v: [
												[
													30.668,
													85.499
												],
												[
													29.46,
													85.359
												],
												[
													28.12,
													85.858
												],
												[
													26.736,
													86.274
												],
												[
													25.428,
													86.532
												],
												[
													24.032,
													86.717
												],
												[
													23.158,
													87.401
												],
												[
													23.07,
													88.632
												],
												[
													24.203,
													89.719
												],
												[
													24.524,
													89.604
												],
												[
													24.844,
													89.489
												],
												[
													25.303,
													89.747
												],
												[
													24.428,
													91.546
												],
												[
													21.519,
													92.273
												],
												[
													20.807,
													92.032
												],
												[
													20.321,
													91.108
												],
												[
													20.622,
													90.544
												],
												[
													20.958,
													90.494
												],
												[
													21.293,
													90.444
												],
												[
													21.802,
													88.945
												],
												[
													21.138,
													87.912
												],
												[
													20.053,
													87.707
												],
												[
													18.697,
													88.231
												],
												[
													17.592,
													88.554
												],
												[
													16.334,
													88.822
												],
												[
													15.497,
													88.915
												],
												[
													14.67,
													89.05
												],
												[
													13.643,
													89.772
												],
												[
													13.495,
													91.04
												],
												[
													15.081,
													92.178
												],
												[
													15.322,
													92.118
												],
												[
													15.765,
													91.937
												],
												[
													16.81,
													92.862
												],
												[
													21.94,
													101.482
												],
												[
													23.047,
													102.565
												],
												[
													25.423,
													102.214
												],
												[
													27.486,
													101.442
												],
												[
													28.207,
													99.31
												],
												[
													29.079,
													89.955
												],
												[
													29.185,
													89.068
												],
												[
													29.749,
													88.439
												],
												[
													30.172,
													88.369
												],
												[
													30.596,
													88.298
												],
												[
													31.372,
													86.477
												],
												[
													30.673,
													85.489
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 25",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 25,
									ty: "sh",
									ix: 26,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.123,
													0.057
												],
												[
													-0.333,
													-0.158
												],
												[
													0,
													0
												],
												[
													-0.18,
													-0.381
												],
												[
													0.138,
													-0.391
												],
												[
													0.448,
													-0.213
												],
												[
													0.784,
													-0.274
												],
												[
													0.477,
													-0.225
												],
												[
													0.679,
													-0.408
												],
												[
													0.231,
													-0.11
												],
												[
													0.471,
													0.99
												],
												[
													-0.088,
													0.358
												],
												[
													-0.314,
													0.148
												],
												[
													-0.241,
													0.055
												],
												[
													-0.108,
													0.053
												],
												[
													0.434,
													0.909
												],
												[
													0,
													0
												],
												[
													0.366,
													-0.175
												],
												[
													0.196,
													-0.15
												],
												[
													0.108,
													-0.052
												],
												[
													0.333,
													0.158
												],
												[
													0.181,
													0.381
												],
												[
													-0.131,
													0.411
												],
												[
													-0.406,
													0.193
												],
												[
													-0.048,
													0.005
												],
												[
													0,
													0
												],
												[
													-0.393,
													0.188
												],
												[
													-0.632,
													0.383
												],
												[
													-0.245,
													0.115
												],
												[
													-0.401,
													-0.143
												],
												[
													-0.213,
													-0.449
												],
												[
													0.09,
													-0.35
												],
												[
													0.326,
													-0.156
												],
												[
													0.233,
													-0.053
												],
												[
													0.108,
													-0.053
												],
												[
													-0.1,
													-0.386
												],
												[
													-0.208,
													-0.433
												],
												[
													0,
													0
												],
												[
													-0.085,
													-0.11
												],
												[
													-0.271,
													0.13
												],
												[
													-0.188,
													0.148
												]
											],
											o: [
												[
													0.31,
													-0.151
												],
												[
													0,
													0
												],
												[
													0.333,
													0.158
												],
												[
													0.221,
													0.461
												],
												[
													-0.138,
													0.391
												],
												[
													-0.203,
													0.098
												],
												[
													-0.526,
													0.185
												],
												[
													-0.38,
													0.181
												],
												[
													-0.679,
													0.409
												],
												[
													-0.992,
													0.471
												],
												[
													-0.18,
													-0.381
												],
												[
													0.087,
													-0.358
												],
												[
													0.107,
													-0.05
												],
												[
													0.241,
													-0.055
												],
												[
													0.366,
													-0.175
												],
												[
													0,
													0
												],
												[
													-0.441,
													-0.923
												],
												[
													-0.108,
													0.05
												],
												[
													-0.193,
													0.151
												],
												[
													-0.31,
													0.151
												],
												[
													-0.333,
													-0.158
												],
												[
													-0.208,
													-0.434
												],
												[
													0.13,
													-0.411
												],
												[
													0.083,
													-0.04
												],
												[
													0,
													0
												],
												[
													0.346,
													-0.116
												],
												[
													0.609,
													-0.291
												],
												[
													0.762,
													-0.464
												],
												[
													0.434,
													-0.208
												],
												[
													0.401,
													0.141
												],
												[
													0.188,
													0.393
												],
												[
													-0.09,
													0.351
												],
												[
													-0.108,
													0.052
												],
												[
													-0.231,
													0.05
												],
												[
													-0.27,
													0.13
												],
												[
													0.037,
													0.148
												],
												[
													0,
													0
												],
												[
													0.208,
													0.434
												],
												[
													0.235,
													0.321
												],
												[
													0.107,
													-0.05
												],
												[
													0.186,
													-0.148
												]
											],
											v: [
												[
													47.386,
													90.524
												],
												[
													48.353,
													90.536
												],
												[
													48.351,
													90.536
												],
												[
													49.122,
													91.343
												],
												[
													49.245,
													92.621
												],
												[
													48.366,
													93.528
												],
												[
													46.882,
													94.085
												],
												[
													45.378,
													94.701
												],
												[
													43.787,
													95.583
												],
												[
													42.421,
													96.36
												],
												[
													40.226,
													95.581
												],
												[
													40.086,
													94.473
												],
												[
													40.685,
													93.714
												],
												[
													41.206,
													93.553
												],
												[
													41.73,
													93.393
												],
												[
													41.629,
													91.767
												],
												[
													38.943,
													86.126
												],
												[
													37.733,
													85.003
												],
												[
													37.279,
													85.306
												],
												[
													36.825,
													85.609
												],
												[
													35.858,
													85.597
												],
												[
													35.086,
													84.79
												],
												[
													34.969,
													83.522
												],
												[
													35.773,
													82.615
												],
												[
													35.966,
													82.547
												],
												[
													37.327,
													82.099
												],
												[
													38.434,
													81.645
												],
												[
													40.299,
													80.633
												],
												[
													41.807,
													79.763
												],
												[
													43.06,
													79.665
												],
												[
													43.983,
													80.55
												],
												[
													44.128,
													81.667
												],
												[
													43.504,
													82.427
												],
												[
													42.993,
													82.585
												],
												[
													42.481,
													82.74
												],
												[
													42.226,
													83.512
												],
												[
													42.592,
													84.386
												],
												[
													45.278,
													90.027
												],
												[
													45.717,
													90.842
												],
												[
													46.479,
													91.13
												],
												[
													46.922,
													90.832
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 26",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 26,
									ty: "sh",
									ix: 27,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.28,
													-0.205
												],
												[
													0.156,
													-0.18
												],
												[
													0.098,
													-0.07
												],
												[
													0.294,
													0.271
												],
												[
													0.285,
													0.388
												],
												[
													0,
													0
												],
												[
													0.066,
													0.141
												],
												[
													-0.243,
													0.178
												],
												[
													-0.225,
													0.101
												],
												[
													-0.098,
													0.07
												],
												[
													-0.022,
													0.361
												],
												[
													0.258,
													0.35
												],
												[
													0.414,
													0.068
												],
												[
													0.389,
													-0.286
												],
												[
													0.775,
													-0.696
												],
												[
													0.619,
													-0.454
												],
												[
													0.669,
													-0.399
												],
												[
													0.316,
													-0.23
												],
												[
													0.075,
													-0.418
												],
												[
													-0.285,
													-0.389
												],
												[
													-0.717,
													0.523
												],
												[
													-0.223,
													0.23
												],
												[
													-0.133,
													0.098
												],
												[
													-0.21,
													-0.163
												],
												[
													-0.143,
													-0.195
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.022,
													-0.11
												],
												[
													0.231,
													-0.171
												],
												[
													0.223,
													0.304
												],
												[
													0,
													0
												],
												[
													0.009,
													0.011
												],
												[
													0,
													0
												],
												[
													0.011,
													0.013
												],
												[
													0.015,
													0.025
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.644,
													-0.471
												],
												[
													-0.541,
													-0.74
												],
												[
													-0.409,
													-0.456
												],
												[
													-0.178,
													-0.244
												],
												[
													-0.173,
													-0.286
												],
												[
													-0.091,
													-0.121
												],
												[
													-0.667,
													0.488
												],
												[
													0.346,
													0.473
												],
												[
													0.016,
													0.017
												],
												[
													0.031,
													0.029
												],
												[
													0.021,
													0.029
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.027,
													0.035
												],
												[
													-0.511,
													0.374
												],
												[
													-0.276,
													-0.376
												],
												[
													0,
													0
												],
												[
													0.043,
													-0.208
												],
												[
													0.474,
													-0.345
												],
												[
													0,
													0
												],
												[
													0.303,
													0.411
												],
												[
													0.14,
													0.268
												],
												[
													0.098,
													0.133
												],
												[
													0.431,
													0.095
												],
												[
													0.411,
													-0.303
												],
												[
													0.057,
													-0.454
												],
												[
													-0.313,
													-0.426
												],
												[
													-0.343,
													-0.328
												],
												[
													-0.143,
													-0.193
												],
												[
													-0.22,
													-0.453
												],
												[
													-0.16,
													-0.218
												],
												[
													-0.606,
													0.444
												],
												[
													-0.131,
													0.114
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.411,
													0.303
												],
												[
													-0.331,
													0.261
												],
												[
													-0.411,
													0.301
												],
												[
													-0.987,
													0.609
												],
												[
													-0.278,
													0.203
												],
												[
													0.649,
													0.887
												],
												[
													0.356,
													0.092
												]
											],
											o: [
												[
													-0.355,
													-0.093
												],
												[
													-0.111,
													0.081
												],
												[
													-0.158,
													0.181
												],
												[
													-0.243,
													0.178
												],
												[
													-0.105,
													-0.093
												],
												[
													0,
													0
												],
												[
													-0.283,
													-0.388
												],
												[
													-0.17,
													-0.361
												],
												[
													0.085,
													-0.062
												],
												[
													0.226,
													-0.1
												],
												[
													0.291,
													-0.213
												],
												[
													0.023,
													-0.364
												],
												[
													-0.293,
													-0.401
												],
												[
													-0.413,
													-0.07
												],
												[
													-0.097,
													0.07
												],
												[
													-0.338,
													0.304
												],
												[
													-0.316,
													0.23
												],
												[
													-0.669,
													0.396
												],
												[
													-0.414,
													0.301
												],
												[
													-0.075,
													0.419
												],
												[
													0.604,
													0.824
												],
												[
													0.133,
													-0.098
												],
												[
													0.223,
													-0.229
												],
												[
													0.268,
													-0.195
												],
												[
													0.116,
													0.083
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.15,
													0.205
												],
												[
													-0.023,
													0.111
												],
												[
													-0.461,
													0.338
												],
												[
													0,
													0
												],
												[
													-0.007,
													-0.01
												],
												[
													0,
													0
												],
												[
													-0.009,
													-0.012
												],
												[
													-0.017,
													-0.044
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.499,
													-0.679
												],
												[
													-0.631,
													0.461
												],
												[
													0.178,
													0.243
												],
												[
													0.408,
													0.456
												],
												[
													0.311,
													0.423
												],
												[
													0.17,
													0.285
												],
												[
													0.461,
													0.631
												],
												[
													0.571,
													-0.419
												],
												[
													-0.007,
													-0.011
												],
												[
													-0.019,
													-0.02
												],
												[
													-0.029,
													-0.039
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.165,
													-0.175
												],
												[
													-0.258,
													-0.351
												],
												[
													0.328,
													-0.24
												],
												[
													0,
													0
												],
												[
													0.374,
													0.509
												],
												[
													-0.042,
													0.208
												],
												[
													0,
													0
												],
												[
													-0.606,
													0.444
												],
												[
													-0.098,
													-0.133
												],
												[
													-0.191,
													-0.364
												],
												[
													-0.328,
													-0.448
												],
												[
													-0.431,
													-0.093
												],
												[
													-0.413,
													0.301
												],
												[
													-0.06,
													0.453
												],
												[
													0.143,
													0.193
												],
												[
													0.343,
													0.326
												],
												[
													0.188,
													0.255
												],
												[
													0.148,
													0.303
												],
												[
													0.391,
													0.534
												],
												[
													-0.024,
													0.018
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.577,
													-0.458
												],
												[
													1.01,
													-0.76
												],
												[
													0.501,
													-0.386
												],
												[
													0.594,
													-0.436
												],
												[
													0.655,
													-0.406
												],
												[
													0.897,
													-0.656
												],
												[
													-0.248,
													-0.341
												],
												[
													0,
													0
												]
											],
											v: [
												[
													66.571,
													78.365
												],
												[
													65.617,
													78.532
												],
												[
													65.218,
													78.923
												],
												[
													64.837,
													79.299
												],
												[
													64.035,
													79.159
												],
												[
													63.452,
													78.44
												],
												[
													59.76,
													73.4
												],
												[
													59.236,
													72.608
												],
												[
													59.344,
													71.801
												],
												[
													59.81,
													71.558
												],
												[
													60.294,
													71.303
												],
												[
													60.765,
													70.441
												],
												[
													60.414,
													69.371
												],
												[
													59.354,
													68.666
												],
												[
													58.151,
													68.99
												],
												[
													56.843,
													70.142
												],
												[
													55.41,
													71.278
												],
												[
													53.934,
													72.22
												],
												[
													52.458,
													73.162
												],
												[
													51.726,
													74.242
												],
												[
													52.039,
													75.453
												],
												[
													54.019,
													75.904
												],
												[
													54.555,
													75.413
												],
												[
													55.092,
													74.921
												],
												[
													55.808,
													74.871
												],
												[
													56.197,
													75.287
												],
												[
													56.668,
													75.894
												],
												[
													57.44,
													76.949
												],
												[
													57.633,
													77.422
												],
												[
													57.254,
													77.841
												],
												[
													56.229,
													77.893
												],
												[
													56.084,
													77.693
												],
												[
													56.06,
													77.661
												],
												[
													56.045,
													77.64
												],
												[
													56.016,
													77.603
												],
												[
													55.967,
													77.5
												],
												[
													55.962,
													77.492
												],
												[
													55.957,
													77.484
												],
												[
													55.954,
													77.48
												],
												[
													54.242,
													77.167
												],
												[
													54.109,
													78.969
												],
												[
													54.989,
													80.016
												],
												[
													55.868,
													81.064
												],
												[
													56.593,
													82.129
												],
												[
													56.984,
													82.738
												],
												[
													58.678,
													82.951
												],
												[
													59.013,
													81.615
												],
												[
													58.978,
													81.573
												],
												[
													58.903,
													81.5
												],
												[
													58.828,
													81.397
												],
												[
													58.813,
													81.377
												],
												[
													58.804,
													81.365
												],
												[
													58.795,
													81.354
												],
												[
													58.505,
													81.036
												],
												[
													58.883,
													79.948
												],
												[
													59.788,
													80.151
												],
												[
													60.414,
													81.006
												],
												[
													60.91,
													82.083
												],
												[
													60.136,
													82.915
												],
												[
													58.151,
													84.369
												],
												[
													56.788,
													84.417
												],
												[
													56.43,
													83.813
												],
												[
													55.996,
													83.068
												],
												[
													54.856,
													82.254
												],
												[
													53.59,
													82.567
												],
												[
													52.884,
													83.7
												],
												[
													53.262,
													85.018
												],
												[
													53.989,
													85.8
												],
												[
													54.716,
													86.582
												],
												[
													55.327,
													87.644
												],
												[
													55.788,
													88.426
												],
												[
													57.284,
													88.561
												],
												[
													57.446,
													88.416
												],
												[
													57.452,
													88.411
												],
												[
													58.477,
													87.521
												],
												[
													59.961,
													86.379
												],
												[
													61.973,
													84.85
												],
												[
													63.341,
													83.82
												],
												[
													65.714,
													82.251
												],
												[
													67.113,
													81.339
												],
												[
													67.486,
													79.024
												],
												[
													66.579,
													78.375
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 27",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 27,
									ty: "sh",
									ix: 28,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.159,
													-0.138
												],
												[
													-0.17,
													-0.11
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.045,
													0.04
												],
												[
													0.246,
													-0.283
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.003,
													-0.004
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.025,
													-0.04
												],
												[
													-0.138,
													-0.118
												],
												[
													0,
													0
												],
												[
													-0.255,
													0.295
												]
											],
											v: [
												[
													73.384,
													64.969
												],
												[
													73.636,
													65.128
												],
												[
													73.638,
													65.128
												],
												[
													77.843,
													67.333
												],
												[
													75.124,
													63.133
												],
												[
													75.019,
													63.013
												],
												[
													74.445,
													63.263
												],
												[
													73.531,
													64.321
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 28",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 28,
									ty: "sh",
									ix: 29,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.12,
													-0.343
												],
												[
													-0.243,
													-0.431
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.103,
													-0.508
												],
												[
													0.737,
													-0.852
												],
												[
													0.336,
													-0.148
												],
												[
													0.684,
													0.313
												],
												[
													0,
													0
												],
												[
													0.198,
													-0.228
												],
												[
													0.113,
													-0.2
												],
												[
													0,
													0
												],
												[
													0.751,
													0.649
												],
												[
													0.03,
													0.424
												],
												[
													-0.313,
													0.364
												],
												[
													-0.26,
													0.233
												],
												[
													-0.088,
													0.102
												],
												[
													-0.343,
													0.399
												],
												[
													-0.106,
													0.168
												],
												[
													-0.127,
													0.148
												],
												[
													-0.406,
													-0.002
												],
												[
													-0.353,
													-0.305
												],
												[
													0.374,
													-0.434
												],
												[
													0.115,
													-0.1
												],
												[
													0.05,
													-0.058
												],
												[
													-0.238,
													-0.205
												],
												[
													-0.313,
													-0.052
												],
												[
													-0.168,
													0.193
												],
												[
													0,
													0
												],
												[
													0.772,
													0.669
												],
												[
													0.168,
													-0.193
												],
												[
													0.08,
													-0.128
												],
												[
													0.05,
													-0.058
												],
												[
													0.671,
													0.581
												],
												[
													0.06,
													0.391
												],
												[
													-0.275,
													0.318
												],
												[
													-0.551,
													0.476
												],
												[
													-0.374,
													0.431
												],
												[
													-0.193,
													0.29
												],
												[
													-0.098,
													0.113
												],
												[
													-0.408,
													0.035
												],
												[
													-0.353,
													-0.305
												],
												[
													0.521,
													-0.604
												],
												[
													0.145,
													-0.133
												],
												[
													0.061,
													-0.068
												]
											],
											o: [
												[
													0.038,
													0.093
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.526,
													0.932
												],
												[
													-0.09,
													0.359
												],
												[
													-0.827,
													0.955
												],
												[
													-0.336,
													0.148
												],
												[
													0,
													0
												],
												[
													-0.727,
													-0.331
												],
												[
													-0.058,
													0.07
												],
												[
													0,
													0
												],
												[
													-0.551,
													0.637
												],
												[
													-0.376,
													-0.323
												],
												[
													-0.03,
													-0.426
												],
												[
													0.138,
													-0.158
												],
												[
													0.333,
													-0.268
												],
												[
													0.238,
													-0.231
												],
												[
													0.376,
													-0.433
												],
												[
													0.411,
													-0.659
												],
												[
													0.264,
													-0.305
												],
												[
													0.406,
													0.003
												],
												[
													0.672,
													0.579
												],
												[
													-0.05,
													0.055
												],
												[
													-0.115,
													0.098
												],
												[
													-0.188,
													0.216
												],
												[
													0.305,
													0.266
												],
												[
													0.314,
													0.05
												],
												[
													0,
													0
												],
												[
													0.561,
													-0.646
												],
												[
													-0.182,
													-0.156
												],
												[
													-0.05,
													0.057
												],
												[
													-0.08,
													0.128
												],
												[
													-0.364,
													0.421
												],
												[
													-0.364,
													-0.316
												],
												[
													-0.06,
													-0.391
												],
												[
													0.138,
													-0.161
												],
												[
													0.241,
													-0.21
												],
												[
													0.403,
													-0.466
												],
												[
													0.441,
													-0.672
												],
												[
													0.306,
													-0.354
												],
												[
													0.409,
													-0.035
												],
												[
													0.797,
													0.689
												],
												[
													-0.058,
													0.071
												],
												[
													-0.145,
													0.135
												],
												[
													-0.188,
													0.215
												]
											],
											v: [
												[
													75.237,
													56.106
												],
												[
													75.661,
													56.891
												],
												[
													75.663,
													56.878
												],
												[
													80.332,
													65.03
												],
												[
													80.968,
													67.19
												],
												[
													79.725,
													69.007
												],
												[
													77.981,
													70.661
												],
												[
													76.453,
													70.413
												],
												[
													67.296,
													66.313
												],
												[
													65.91,
													66.158
												],
												[
													65.652,
													66.561
												],
												[
													65.489,
													66.749
												],
												[
													63.537,
													66.732
												],
												[
													62.928,
													65.609
												],
												[
													63.354,
													64.426
												],
												[
													63.95,
													63.84
												],
												[
													64.582,
													63.284
												],
												[
													65.456,
													62.341
												],
												[
													66.176,
													61.442
												],
												[
													66.982,
													60.231
												],
												[
													67.987,
													59.775
												],
												[
													69.125,
													60.236
												],
												[
													69.571,
													61.755
												],
												[
													69.323,
													61.988
												],
												[
													69.075,
													62.221
												],
												[
													69.153,
													62.855
												],
												[
													70.082,
													63.331
												],
												[
													70.802,
													63.118
												],
												[
													72.764,
													60.85
												],
												[
													72.445,
													58.876
												],
												[
													71.922,
													58.931
												],
												[
													71.726,
													59.209
												],
												[
													71.531,
													59.487
												],
												[
													69.98,
													59.249
												],
												[
													69.343,
													58.191
												],
												[
													69.666,
													57.129
												],
												[
													70.701,
													56.174
												],
												[
													71.624,
													55.212
												],
												[
													72.516,
													54.077
												],
												[
													73.325,
													52.899
												],
												[
													74.395,
													52.317
												],
												[
													75.535,
													52.723
												],
												[
													75.949,
													54.66
												],
												[
													75.643,
													54.964
												],
												[
													75.337,
													55.267
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 29",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 29,
									ty: "sh",
									ix: 30,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.358,
													-0.087
												],
												[
													0.148,
													-0.314
												],
												[
													0.053,
													-0.233
												],
												[
													0.05,
													-0.11
												],
												[
													0.386,
													0.101
												],
												[
													0.433,
													0.206
												],
												[
													0,
													0
												],
												[
													0.122,
													0.09
												],
												[
													-0.127,
													0.273
												],
												[
													-0.148,
													0.188
												],
												[
													-0.05,
													0.11
												],
												[
													0.15,
													0.331
												],
												[
													0.396,
													0.185
												],
												[
													0.414,
													-0.136
												],
												[
													0.198,
													-0.421
												],
												[
													0,
													0
												],
												[
													0.218,
													-0.461
												],
												[
													0.161,
													-0.273
												],
												[
													0.236,
													-0.354
												],
												[
													0.09,
													-0.191
												],
												[
													-0.158,
													-0.373
												],
												[
													-0.464,
													-0.221
												],
												[
													-0.256,
													0.544
												],
												[
													-0.007,
													0.048
												],
												[
													0,
													0
												],
												[
													-0.013,
													0.027
												],
												[
													-0.06,
													0.023
												],
												[
													-0.639,
													-0.303
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.258,
													-0.541
												],
												[
													0,
													0
												],
												[
													-0.754,
													-0.659
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.13,
													0.078
												],
												[
													-0.103,
													0.215
												],
												[
													-0.038,
													0.047
												],
												[
													-0.02,
													0.04
												],
												[
													-0.04,
													0.08
												],
												[
													0.842,
													0.401
												],
												[
													0.391,
													-0.123
												],
												[
													0.193,
													-0.406
												],
												[
													0.171,
													-0.537
												],
												[
													0.123,
													-0.258
												],
												[
													0.248,
													-0.383
												],
												[
													0.123,
													-0.258
												],
												[
													-0.135,
													-0.396
												],
												[
													-0.461,
													-0.22
												],
												[
													-0.361,
													0.095
												],
												[
													-0.148,
													0.313
												],
												[
													-0.055,
													0.241
												],
												[
													-0.05,
													0.11
												],
												[
													-0.925,
													-0.439
												],
												[
													0,
													0
												],
												[
													0.173,
													-0.368
												],
												[
													0.151,
													-0.195
												],
												[
													0.058,
													-0.122
												],
												[
													-0.158,
													-0.333
												],
												[
													-0.378,
													-0.18
												],
												[
													-0.393,
													0.146
												],
												[
													-0.213,
													0.449
												],
												[
													-0.148,
													0.381
												],
												[
													-0.155,
													0.326
												],
												[
													-0.358,
													0.579
												],
												[
													-0.143,
													0.301
												],
												[
													0.138,
													0.291
												],
												[
													0.529,
													0.434
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.228,
													0.06
												],
												[
													-0.163,
													0.339
												],
												[
													-0.158,
													0.473
												],
												[
													-0.29,
													0.612
												],
												[
													-0.431,
													0.729
												],
												[
													-0.155,
													0.326
												],
												[
													0.989,
													0.469
												]
											],
											o: [
												[
													-0.381,
													-0.18
												],
												[
													-0.358,
													0.088
												],
												[
													-0.058,
													0.123
												],
												[
													-0.052,
													0.234
												],
												[
													-0.128,
													0.271
												],
												[
													-0.135,
													-0.03
												],
												[
													0,
													0
												],
												[
													-0.437,
													-0.205
												],
												[
													-0.321,
													-0.236
												],
												[
													0.053,
													-0.108
												],
												[
													0.147,
													-0.188
												],
												[
													0.155,
													-0.326
												],
												[
													-0.153,
													-0.331
												],
												[
													-0.436,
													-0.206
												],
												[
													-0.413,
													0.135
												],
												[
													0,
													0
												],
												[
													-0.108,
													0.331
												],
												[
													-0.173,
													0.366
												],
												[
													-0.057,
													0.088
												],
												[
													-0.183,
													0.278
												],
												[
													-0.193,
													0.408
												],
												[
													0.155,
													0.373
												],
												[
													0.829,
													0.393
												],
												[
													0.037,
													-0.083
												],
												[
													0,
													0
												],
												[
													0.012,
													-0.06
												],
												[
													0.052,
													-0.108
												],
												[
													0.141,
													-0.083
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.872,
													-0.163
												],
												[
													0,
													0
												],
												[
													-0.263,
													0.556
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.326,
													-0.156
												],
												[
													-0.281,
													-0.182
												],
												[
													0.008,
													-0.013
												],
												[
													0.025,
													-0.055
												],
												[
													0.033,
													-0.035
												],
												[
													0.263,
													-0.556
												],
												[
													-0.449,
													-0.213
												],
												[
													-0.391,
													0.123
												],
												[
													-0.123,
													0.258
												],
												[
													-0.17,
													0.533
												],
												[
													-0.193,
													0.408
												],
												[
													-0.371,
													0.574
												],
												[
													-0.213,
													0.448
												],
												[
													0.136,
													0.396
												],
												[
													0.381,
													0.181
												],
												[
													0.361,
													-0.095
												],
												[
													0.053,
													-0.108
												],
												[
													0.055,
													-0.241
												],
												[
													0.168,
													-0.353
												],
												[
													0,
													0
												],
												[
													0.909,
													0.431
												],
												[
													-0.045,
													0.096
												],
												[
													-0.15,
													0.196
												],
												[
													-0.148,
													0.314
												],
												[
													0.158,
													0.333
												],
												[
													0.461,
													0.218
												],
												[
													0.394,
													-0.145
												],
												[
													0.083,
													-0.178
												],
												[
													0.503,
													-1.343
												],
												[
													0.148,
													-0.313
												],
												[
													0.359,
													-0.579
												],
												[
													0.16,
													-0.341
												],
												[
													-0.138,
													-0.29
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.573,
													0.122
												],
												[
													0.228,
													-0.058
												],
												[
													0.123,
													-0.258
												],
												[
													0.233,
													-0.704
												],
												[
													0.181,
													-0.381
												],
												[
													0.428,
													-0.729
												],
												[
													0.477,
													-1.005
												],
												[
													0,
													0
												]
											],
											v: [
												[
													98.904,
													33.585
												],
												[
													97.796,
													33.447
												],
												[
													97.037,
													34.049
												],
												[
													96.871,
													34.582
												],
												[
													96.716,
													35.096
												],
												[
													95.944,
													35.354
												],
												[
													95.09,
													34.998
												],
												[
													89.444,
													32.322
												],
												[
													88.607,
													31.876
												],
												[
													88.318,
													31.114
												],
												[
													88.617,
													30.668
												],
												[
													88.915,
													30.222
												],
												[
													88.92,
													29.237
												],
												[
													88.1,
													28.463
												],
												[
													86.827,
													28.358
												],
												[
													85.908,
													29.195
												],
												[
													85.472,
													30.535
												],
												[
													84.983,
													31.726
												],
												[
													84.479,
													32.685
												],
												[
													84.038,
													33.35
												],
												[
													83.63,
													34.054
												],
												[
													83.575,
													35.224
												],
												[
													84.502,
													36.114
												],
												[
													86.131,
													35.888
												],
												[
													86.198,
													35.695
												],
												[
													86.256,
													35.572
												],
												[
													86.294,
													35.44
												],
												[
													86.461,
													35.244
												],
												[
													87.629,
													35.572
												],
												[
													95.313,
													39.216
												],
												[
													83.858,
													37.106
												],
												[
													82.164,
													37.675
												],
												[
													81.545,
													38.978
												],
												[
													82.279,
													40.8
												],
												[
													90.962,
													48.385
												],
												[
													83.279,
													44.742
												],
												[
													82.595,
													44.393
												],
												[
													82.329,
													43.795
												],
												[
													82.397,
													43.702
												],
												[
													82.464,
													43.559
												],
												[
													82.572,
													43.386
												],
												[
													81.705,
													41.95
												],
												[
													80.447,
													41.815
												],
												[
													79.57,
													42.609
												],
												[
													79.131,
													43.8
												],
												[
													78.693,
													44.99
												],
												[
													78.031,
													46.175
												],
												[
													77.289,
													47.421
												],
												[
													77.174,
													48.689
												],
												[
													78.071,
													49.613
												],
												[
													79.184,
													49.741
												],
												[
													79.948,
													49.13
												],
												[
													80.109,
													48.606
												],
												[
													80.269,
													48.082
												],
												[
													81.906,
													48.21
												],
												[
													87.552,
													50.886
												],
												[
													88.657,
													52.084
												],
												[
													88.363,
													52.52
												],
												[
													88.05,
													52.996
												],
												[
													88.065,
													53.964
												],
												[
													88.872,
													54.733
												],
												[
													90.155,
													54.843
												],
												[
													91.065,
													53.951
												],
												[
													91.411,
													53.117
												],
												[
													92.398,
													50.613
												],
												[
													93.157,
													49.275
												],
												[
													93.907,
													47.957
												],
												[
													93.942,
													47.012
												],
												[
													92.944,
													45.927
												],
												[
													86.652,
													40.772
												],
												[
													94.892,
													42.607
												],
												[
													96.094,
													42.702
												],
												[
													96.678,
													42.105
												],
												[
													97.099,
													41.008
												],
												[
													97.886,
													39.033
												],
												[
													98.801,
													37.369
												],
												[
													99.675,
													35.788
												],
												[
													98.904,
													33.575
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 30",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 30,
									ty: "sh",
									ix: 31,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.211,
													-0.012
												],
												[
													-0.213,
													0.015
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.025,
													0.006
												],
												[
													0.031,
													0.003
												],
												[
													0.025,
													-0.376
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.015,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.021,
													-0.009
												],
												[
													-0.027,
													-0.005
												],
												[
													-0.178,
													-0.012
												],
												[
													0,
													0
												],
												[
													-0.025,
													0.391
												]
											],
											v: [
												[
													97.879,
													7.673
												],
												[
													98.175,
													7.648
												],
												[
													98.172,
													7.648
												],
												[
													102.856,
													6.869
												],
												[
													98.152,
													5.16
												],
												[
													98.084,
													5.139
												],
												[
													97.997,
													5.127
												],
												[
													97.691,
													5.671
												],
												[
													97.601,
													7.067
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 31",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 31,
									ty: "sh",
									ix: 32,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.225,
													-0.466
												],
												[
													0,
													0
												],
												[
													0.072,
													-1.125
												],
												[
													0.178,
													-0.32
												],
												[
													0.735,
													-0.163
												],
												[
													0,
													0
												],
												[
													0.02,
													-0.301
												],
												[
													-0.03,
													-0.228
												],
												[
													0,
													0
												],
												[
													0.99,
													0.065
												],
												[
													0.281,
													0.318
												],
												[
													-0.03,
													0.481
												],
												[
													-0.068,
													0.341
												],
												[
													-0.01,
													0.135
												],
												[
													-0.035,
													0.526
												],
												[
													0.018,
													0.198
												],
												[
													-0.012,
													0.195
												],
												[
													-0.326,
													0.243
												],
												[
													-0.466,
													-0.03
												],
												[
													0.037,
													-0.572
												],
												[
													0.032,
													-0.147
												],
												[
													0.005,
													-0.075
												],
												[
													-0.316,
													-0.02
												],
												[
													-0.281,
													0.148
												],
												[
													-0.017,
													0.256
												],
												[
													0,
													0
												],
												[
													1.02,
													0.068
												],
												[
													0.017,
													-0.255
												],
												[
													-0.012,
													-0.15
												],
												[
													0.005,
													-0.075
												],
												[
													0.884,
													0.057
												],
												[
													0.284,
													0.276
												],
												[
													-0.028,
													0.421
												],
												[
													-0.153,
													0.714
												],
												[
													-0.037,
													0.569
												],
												[
													0.022,
													0.348
												],
												[
													-0.01,
													0.151
												],
												[
													-0.303,
													0.273
												],
												[
													-0.466,
													-0.03
												],
												[
													0.052,
													-0.794
												],
												[
													0.035,
													-0.193
												],
												[
													0.005,
													-0.09
												],
												[
													-0.304,
													-0.201
												],
												[
													-0.453,
													-0.195
												]
											],
											o: [
												[
													0.982,
													0.426
												],
												[
													0,
													0
												],
												[
													0.143,
													0.34
												],
												[
													-0.08,
													1.26
												],
												[
													-0.178,
													0.319
												],
												[
													0,
													0
												],
												[
													-0.782,
													0.173
												],
												[
													-0.005,
													0.09
												],
												[
													0,
													0
												],
												[
													-0.055,
													0.839
												],
												[
													-0.494,
													-0.033
												],
												[
													-0.28,
													-0.321
												],
												[
													0.015,
													-0.211
												],
												[
													0.102,
													-0.413
												],
												[
													0.05,
													-0.329
												],
												[
													0.038,
													-0.569
												],
												[
													-0.07,
													-0.772
												],
												[
													0.025,
													-0.406
												],
												[
													0.325,
													-0.243
												],
												[
													0.887,
													0.058
												],
												[
													-0.005,
													0.075
												],
												[
													-0.033,
													0.148
												],
												[
													-0.02,
													0.286
												],
												[
													0.406,
													0.027
												],
												[
													0.281,
													-0.147
												],
												[
													0,
													0
												],
												[
													0.057,
													-0.857
												],
												[
													-0.241,
													-0.018
												],
												[
													-0.005,
													0.075
												],
												[
													0.013,
													0.153
												],
												[
													-0.038,
													0.556
												],
												[
													-0.482,
													-0.03
												],
												[
													-0.283,
													-0.276
												],
												[
													0.012,
													-0.211
												],
												[
													0.068,
													-0.311
												],
												[
													0.04,
													-0.617
												],
												[
													-0.053,
													-0.802
												],
												[
													0.03,
													-0.463
												],
												[
													0.306,
													-0.276
												],
												[
													1.05,
													0.067
												],
												[
													-0.008,
													0.091
												],
												[
													-0.035,
													0.193
												],
												[
													-0.021,
													0.286
												],
												[
													0.087,
													0.05
												],
												[
													0,
													0
												]
											],
											v: [
												[
													103.46,
													3.541
												],
												[
													105.271,
													4.879
												],
												[
													105.261,
													4.877
												],
												[
													105.367,
													7.077
												],
												[
													104.976,
													9.447
												],
												[
													103.607,
													10.172
												],
												[
													93.832,
													12.427
												],
												[
													92.631,
													13.139
												],
												[
													92.669,
													13.615
												],
												[
													92.654,
													13.863
												],
												[
													91.085,
													15.026
												],
												[
													89.922,
													14.497
												],
												[
													89.549,
													13.297
												],
												[
													89.672,
													12.467
												],
												[
													89.84,
													11.643
												],
												[
													89.967,
													10.362
												],
												[
													89.997,
													9.212
												],
												[
													89.912,
													7.761
												],
												[
													90.439,
													6.789
												],
												[
													91.624,
													6.47
												],
												[
													92.897,
													7.413
												],
												[
													92.842,
													7.748
												],
												[
													92.787,
													8.084
												],
												[
													93.23,
													8.543
												],
												[
													94.26,
													8.362
												],
												[
													94.706,
													7.758
												],
												[
													94.902,
													4.766
												],
												[
													93.456,
													3.383
												],
												[
													93.07,
													3.741
												],
												[
													93.082,
													4.082
												],
												[
													93.095,
													4.423
												],
												[
													91.712,
													5.17
												],
												[
													90.566,
													4.711
												],
												[
													90.183,
													3.669
												],
												[
													90.431,
													2.283
												],
												[
													90.586,
													0.96
												],
												[
													90.614,
													-0.486
												],
												[
													90.549,
													-1.915
												],
												[
													91.05,
													-3.022
												],
												[
													92.205,
													-3.388
												],
												[
													93.704,
													-2.093
												],
												[
													93.641,
													-1.667
												],
												[
													93.579,
													-1.241
												],
												[
													94.005,
													-0.511
												],
												[
													94.816,
													-0.143
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 32",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 32,
									ty: "sh",
									ix: 33,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.083,
													-0.223
												],
												[
													-0.015,
													-0.12
												],
												[
													0.379,
													-0.128
												],
												[
													0.476,
													-0.062
												],
												[
													0,
													0
												],
												[
													0.153,
													0.01
												],
												[
													0.037,
													0.296
												],
												[
													-0.023,
													0.238
												],
												[
													0.015,
													0.12
												],
												[
													0.308,
													0.196
												],
												[
													0.431,
													-0.058
												],
												[
													0.258,
													-0.339
												],
												[
													-0.063,
													-0.479
												],
												[
													-0.205,
													-0.867
												],
												[
													-0.088,
													-0.671
												],
												[
													-0.002,
													-0.363
												],
												[
													0,
													0
												],
												[
													-0.013,
													-0.087
												],
												[
													-0.353,
													-0.25
												],
												[
													-0.479,
													0.063
												],
												[
													-0.253,
													0.268
												],
												[
													0.045,
													0.343
												],
												[
													0.083,
													0.231
												],
												[
													0.015,
													0.12
												],
												[
													-1.015,
													0.133
												],
												[
													0,
													0
												],
												[
													-0.056,
													-0.404
												],
												[
													0.02,
													-0.245
												],
												[
													-0.015,
													-0.117
												],
												[
													-0.313,
													-0.193
												],
												[
													-0.419,
													0.055
												],
												[
													0.145,
													1.088
												],
												[
													0.178,
													0.772
												],
												[
													0.055,
													0.416
												],
												[
													0.012,
													0.558
												],
												[
													0.03,
													0.225
												],
												[
													0.331,
													0.25
												],
												[
													0.506,
													-0.067
												],
												[
													0.253,
													-0.271
												],
												[
													-0.045,
													-0.343
												]
											],
											o: [
												[
													0.017,
													0.135
												],
												[
													0.083,
													0.223
												],
												[
													0.04,
													0.299
												],
												[
													-0.13,
													0.047
												],
												[
													0,
													0
												],
												[
													-0.476,
													0.063
												],
												[
													-0.399,
													-0.022
												],
												[
													-0.015,
													-0.12
												],
												[
													0.022,
													-0.238
												],
												[
													-0.048,
													-0.359
												],
												[
													-0.306,
													-0.195
												],
												[
													-0.491,
													0.065
												],
												[
													-0.258,
													0.338
												],
												[
													0.035,
													0.268
												],
												[
													0.171,
													0.719
												],
												[
													0.058,
													0.431
												],
												[
													0,
													0
												],
												[
													-0.01,
													0.048
												],
												[
													0.06,
													0.446
												],
												[
													0.353,
													0.251
												],
												[
													0.419,
													-0.055
												],
												[
													0.253,
													-0.268
												],
												[
													-0.015,
													-0.121
												],
												[
													-0.083,
													-0.23
												],
												[
													-0.053,
													-0.403
												],
												[
													0,
													0
												],
												[
													0.997,
													-0.133
												],
												[
													0.015,
													0.12
												],
												[
													-0.02,
													0.246
												],
												[
													0.046,
													0.344
												],
												[
													0.314,
													0.193
												],
												[
													1.088,
													-0.143
												],
												[
													-0.033,
													-0.253
												],
												[
													-0.178,
													-0.772
												],
												[
													-0.068,
													-0.521
												],
												[
													-0.018,
													-0.832
												],
												[
													-0.065,
													-0.491
												],
												[
													-0.328,
													-0.253
												],
												[
													-0.419,
													0.056
												],
												[
													-0.253,
													0.268
												],
												[
													0,
													0
												]
											],
											v: [
												[
													100.989,
													-17.389
												],
												[
													101.139,
													-16.853
												],
												[
													101.287,
													-16.337
												],
												[
													100.778,
													-15.7
												],
												[
													99.869,
													-15.535
												],
												[
													93.674,
													-14.718
												],
												[
													92.729,
													-14.638
												],
												[
													92.075,
													-15.119
												],
												[
													92.085,
													-15.655
												],
												[
													92.095,
													-16.191
												],
												[
													91.564,
													-17.021
												],
												[
													90.456,
													-17.226
												],
												[
													89.331,
													-16.622
												],
												[
													89.038,
													-15.399
												],
												[
													89.398,
													-13.695
												],
												[
													89.787,
													-11.608
												],
												[
													89.877,
													-10.415
												],
												[
													89.885,
													-8.982
												],
												[
													89.89,
													-8.779
												],
												[
													90.506,
													-7.734
												],
												[
													91.749,
													-7.453
												],
												[
													92.754,
													-7.939
												],
												[
													93.065,
													-8.856
												],
												[
													92.917,
													-9.383
												],
												[
													92.769,
													-9.909
												],
												[
													94.21,
													-10.713
												],
												[
													100.405,
													-11.53
												],
												[
													101.984,
													-11.124
												],
												[
													101.976,
													-10.578
												],
												[
													101.968,
													-10.032
												],
												[
													102.507,
													-9.227
												],
												[
													103.605,
													-9.019
												],
												[
													105.021,
													-10.866
												],
												[
													104.705,
													-12.405
												],
												[
													104.357,
													-14.189
												],
												[
													104.234,
													-15.81
												],
												[
													104.161,
													-17.394
												],
												[
													103.57,
													-18.509
												],
												[
													102.317,
													-18.788
												],
												[
													101.312,
													-18.301
												],
												[
													101.001,
													-17.384
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 33",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 33,
									ty: "sh",
									ix: 34,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.118,
													0.07
												],
												[
													0,
													0
												],
												[
													0.096,
													0.286
												],
												[
													0.123,
													0.205
												],
												[
													0.042,
													0.128
												],
												[
													-0.198,
													0.311
												],
												[
													-0.399,
													0.133
												],
												[
													-0.351,
													-1.058
												],
												[
													-0.183,
													-0.747
												],
												[
													-0.231,
													-0.699
												],
												[
													-0.213,
													-0.593
												],
												[
													-0.411,
													-1.196
												],
												[
													-0.261,
													-0.689
												],
												[
													0,
													0
												],
												[
													0.01,
													0.028
												],
												[
													0.629,
													-0.208
												],
												[
													0.334,
													-0.048
												],
												[
													0.301,
													-0.1
												],
												[
													0.416,
													-0.226
												],
												[
													0.228,
													-0.075
												],
												[
													0.413,
													0.195
												],
												[
													0.16,
													0.487
												],
												[
													-0.223,
													0.383
												],
												[
													-0.529,
													0.176
												],
												[
													-0.404,
													0.07
												],
												[
													-0.158,
													0.053
												],
												[
													0.236,
													0.715
												],
												[
													0,
													0
												],
												[
													0.185,
													0.105
												],
												[
													0.599,
													-0.198
												],
												[
													0,
													0
												],
												[
													-0.128,
													-0.386
												],
												[
													-0.414,
													0.137
												],
												[
													-0.218,
													0.105
												],
												[
													-0.073,
													0.023
												],
												[
													-0.03,
													0.01
												],
												[
													-0.223,
													-0.672
												],
												[
													0.742,
													-0.245
												],
												[
													0.323,
													-0.075
												],
												[
													0.499,
													-0.165
												],
												[
													0.559,
													-0.248
												],
												[
													0.286,
													-0.096
												],
												[
													0.246,
													0.742
												],
												[
													-0.8,
													0.265
												],
												[
													-0.063,
													0.005
												],
												[
													-0.03,
													0.01
												],
												[
													0,
													0
												],
												[
													0.18,
													0.541
												],
												[
													0.098,
													0.056
												],
												[
													0.243,
													-0.08
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.115,
													-0.086
												],
												[
													-0.105,
													-0.313
												],
												[
													-0.15,
													-0.283
												],
												[
													-0.052,
													-0.158
												],
												[
													0.97,
													-0.321
												],
												[
													0.376,
													0.201
												],
												[
													0.161,
													0.486
												],
												[
													0.173,
													0.76
												],
												[
													0.123,
													0.371
												],
												[
													0.186,
													0.414
												],
												[
													0.037,
													0.115
												],
												[
													-0.193,
													0.373
												],
												[
													-0.472,
													0.155
												],
												[
													-0.338,
													-0.133
												],
												[
													-0.113,
													-0.343
												],
												[
													-0.025,
													-0.246
												],
												[
													-0.033,
													-0.1
												],
												[
													-0.396,
													0.052
												],
												[
													-0.456,
													0.15
												]
											],
											o: [
												[
													0.459,
													-0.15
												],
												[
													0,
													0
												],
												[
													0.346,
													-0.193
												],
												[
													-0.037,
													-0.115
												],
												[
													-0.123,
													-0.203
												],
												[
													-0.111,
													-0.328
												],
												[
													0.197,
													-0.311
												],
												[
													1.042,
													-0.343
												],
												[
													0.108,
													0.328
												],
												[
													0.278,
													1.127
												],
												[
													0.163,
													0.486
												],
												[
													0.148,
													0.394
												],
												[
													0.161,
													0.486
												],
												[
													0,
													0
												],
												[
													0.07,
													0.168
												],
												[
													0.235,
													0.715
												],
												[
													-0.256,
													0.085
												],
												[
													-0.498,
													0.07
												],
												[
													-0.228,
													0.075
												],
												[
													-0.416,
													0.225
												],
												[
													-0.499,
													0.165
												],
												[
													-0.411,
													-0.196
												],
												[
													-0.16,
													-0.483
												],
												[
													0.223,
													-0.381
												],
												[
													0.158,
													-0.05
												],
												[
													0.298,
													-0.052
												],
												[
													0.484,
													-0.16
												],
												[
													0,
													0
												],
												[
													-0.183,
													-0.556
												],
												[
													-0.186,
													-0.105
												],
												[
													0,
													0
												],
												[
													-0.444,
													0.146
												],
												[
													0.2,
													0.599
												],
												[
													0.042,
													-0.015
												],
												[
													0.043,
													-0.015
												],
												[
													0.067,
													-0.038
												],
												[
													0.557,
													-0.186
												],
												[
													0.258,
													0.784
												],
												[
													-0.143,
													0.045
												],
												[
													-0.326,
													0.075
												],
												[
													-0.285,
													0.095
												],
												[
													-0.561,
													0.248
												],
												[
													-0.869,
													0.288
												],
												[
													-0.25,
													-0.757
												],
												[
													0.027,
													-0.008
												],
												[
													0.043,
													-0.015
												],
												[
													0,
													0
												],
												[
													0.356,
													-0.118
												],
												[
													-0.09,
													-0.271
												],
												[
													-0.097,
													-0.055
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.228,
													0.075
												],
												[
													-0.221,
													0.153
												],
												[
													0.05,
													0.158
												],
												[
													0.148,
													0.286
												],
												[
													0.278,
													0.842
												],
												[
													-0.456,
													0.153
												],
												[
													-0.376,
													-0.203
												],
												[
													-0.122,
													-0.371
												],
												[
													-0.17,
													-0.759
												],
												[
													-0.24,
													-0.729
												],
												[
													-0.426,
													-0.952
												],
												[
													-0.153,
													-0.459
												],
												[
													0.193,
													-0.373
												],
												[
													0.416,
													-0.138
												],
												[
													0.339,
													0.132
												],
												[
													0.037,
													0.115
												],
												[
													0.025,
													0.243
												],
												[
													0.095,
													0.286
												],
												[
													0.153,
													-0.02
												],
												[
													0,
													0
												]
											],
											v: [
												[
													94.435,
													-36.407
												],
												[
													95.3,
													-36.74
												],
												[
													95.3,
													-36.75
												],
												[
													95.678,
													-37.47
												],
												[
													95.438,
													-37.948
												],
												[
													95.19,
													-38.447
												],
												[
													95.323,
													-39.407
												],
												[
													96.22,
													-40.071
												],
												[
													98.307,
													-39.003
												],
												[
													98.746,
													-37.389
												],
												[
													99.51,
													-34.648
												],
												[
													100.071,
													-33.027
												],
												[
													100.908,
													-30.643
												],
												[
													101.54,
													-28.879
												],
												[
													102.071,
													-27.629
												],
												[
													102.164,
													-27.421
												],
												[
													101.575,
													-26.037
												],
												[
													100.69,
													-25.839
												],
												[
													99.492,
													-25.586
												],
												[
													98.525,
													-25.135
												],
												[
													97.558,
													-24.684
												],
												[
													96.19,
													-24.729
												],
												[
													95.33,
													-25.752
												],
												[
													95.423,
													-27.052
												],
												[
													96.548,
													-27.887
												],
												[
													97.39,
													-28.07
												],
												[
													98.074,
													-28.225
												],
												[
													98.447,
													-29.536
												],
												[
													97.676,
													-31.869
												],
												[
													97.122,
													-32.861
												],
												[
													95.944,
													-32.721
												],
												[
													94.937,
													-32.388
												],
												[
													94.463,
													-31.591
												],
												[
													95.383,
													-30.896
												],
												[
													95.776,
													-31.074
												],
												[
													95.947,
													-31.132
												],
												[
													96.089,
													-31.202
												],
												[
													97.257,
													-30.473
												],
												[
													96.533,
													-28.927
												],
												[
													95.834,
													-28.744
												],
												[
													94.598,
													-28.383
												],
												[
													93.33,
													-27.869
												],
												[
													92.062,
													-27.355
												],
												[
													90.388,
													-28.037
												],
												[
													91.213,
													-29.568
												],
												[
													91.348,
													-29.588
												],
												[
													91.456,
													-29.623
												],
												[
													91.691,
													-29.701
												],
												[
													91.957,
													-30.691
												],
												[
													91.676,
													-31.18
												],
												[
													91.165,
													-31.142
												],
												[
													89.922,
													-30.731
												],
												[
													89.2,
													-30.468
												],
												[
													88.687,
													-30.227
												],
												[
													88.514,
													-29.528
												],
												[
													88.814,
													-28.867
												],
												[
													89.115,
													-28.205
												],
												[
													88.078,
													-26.461
												],
												[
													86.83,
													-26.534
												],
												[
													86.025,
													-27.563
												],
												[
													85.584,
													-29.258
												],
												[
													85.143,
													-30.952
												],
												[
													84.504,
													-32.666
												],
												[
													83.808,
													-34.264
												],
												[
													83.87,
													-35.51
												],
												[
													84.868,
													-36.304
												],
												[
													85.995,
													-36.309
												],
												[
													86.672,
													-35.595
												],
												[
													86.767,
													-35.056
												],
												[
													86.855,
													-34.54
												],
												[
													87.589,
													-34.189
												],
												[
													88.504,
													-34.445
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 34",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 34,
									ty: "sh",
									ix: 35,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.045,
													0.01
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.012,
													0.008
												],
												[
													0.203,
													0.333
												],
												[
													0,
													0
												],
												[
													-0.153,
													0.093
												]
											],
											o: [
												[
													0.05,
													-0.03
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.165,
													0.135
												],
												[
													-0.18,
													0.111
												],
												[
													0,
													0
												],
												[
													-0.196,
													-0.321
												],
												[
													0,
													0
												]
											],
											v: [
												[
													83.284,
													-52.142
												],
												[
													83.429,
													-52.205
												],
												[
													88.258,
													-53.51
												],
												[
													84.875,
													-50.18
												],
												[
													84.647,
													-49.99
												],
												[
													84.073,
													-50.325
												],
												[
													83.347,
													-51.518
												],
												[
													83.284,
													-52.14
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 35",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 35,
									ty: "sh",
									ix: 36,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.15,
													0.243
												],
												[
													0.08,
													0.177
												],
												[
													0.047,
													0.078
												],
												[
													0.897,
													-0.549
												],
												[
													0.092,
													-0.398
												],
												[
													-0.243,
													-0.399
												],
												[
													-0.503,
													-0.624
												],
												[
													-0.321,
													-0.526
												],
												[
													-0.126,
													-0.293
												],
												[
													-0.111,
													-0.181
												],
												[
													-0.391,
													-0.062
												],
												[
													-0.411,
													0.251
												],
												[
													0.291,
													0.476
												],
												[
													0.098,
													0.115
												],
												[
													0.04,
													0.063
												],
												[
													-0.205,
													0.125
												],
												[
													-0.446,
													-0.732
												],
												[
													0,
													0
												],
												[
													0.145,
													-0.283
												],
												[
													0.346,
													-0.21
												],
												[
													0.148,
													0.245
												],
												[
													0.061,
													0.14
												],
												[
													0.04,
													0.063
												],
												[
													0.757,
													-0.461
												],
												[
													0.128,
													-0.385
												],
												[
													-0.21,
													-0.346
												],
												[
													-0.501,
													-0.592
												],
												[
													-0.295,
													-0.489
												],
												[
													-0.148,
													-0.298
												],
												[
													-0.155,
													-0.399
												],
												[
													-0.108,
													-0.178
												],
												[
													-0.413,
													-0.1
												],
												[
													-0.424,
													0.258
												],
												[
													0.439,
													0.719
												],
												[
													0,
													0
												],
												[
													0.045,
													0.076
												],
												[
													-0.536,
													0.592
												],
												[
													0,
													0
												],
												[
													0.037,
													0.366
												],
												[
													0.657,
													1.08
												],
												[
													0.314,
													0.195
												],
												[
													1.047,
													-0.218
												],
												[
													0,
													0
												],
												[
													0.101,
													-0.01
												]
											],
											o: [
												[
													-0.363,
													0.01
												],
												[
													-0.048,
													-0.078
												],
												[
													-0.083,
													-0.178
												],
												[
													-0.416,
													-0.682
												],
												[
													-0.399,
													0.243
												],
												[
													-0.091,
													0.399
												],
												[
													0.077,
													0.128
												],
												[
													0.218,
													0.271
												],
												[
													0.298,
													0.489
												],
												[
													0.285,
													0.672
												],
												[
													0.218,
													0.358
												],
												[
													0.389,
													0.063
												],
												[
													0.756,
													-0.461
												],
												[
													-0.04,
													-0.065
												],
												[
													-0.098,
													-0.118
												],
												[
													-0.132,
													-0.218
												],
												[
													0.872,
													-0.532
												],
												[
													0,
													0
												],
												[
													0.133,
													0.218
												],
												[
													-0.146,
													0.28
												],
												[
													-0.271,
													0.165
												],
												[
													-0.04,
													-0.065
												],
												[
													-0.06,
													-0.14
												],
												[
													-0.299,
													-0.488
												],
												[
													-0.398,
													0.243
												],
												[
													-0.125,
													0.386
												],
												[
													0.103,
													0.168
												],
												[
													0.128,
													0.15
												],
												[
													0.274,
													0.448
												],
												[
													0.07,
													0.115
												],
												[
													0.141,
													0.318
												],
												[
													0.251,
													0.411
												],
												[
													0.414,
													0.1
												],
												[
													0.847,
													-0.516
												],
												[
													0,
													0
												],
												[
													-0.155,
													-0.168
												],
												[
													-0.155,
													-0.258
												],
												[
													0,
													0
												],
												[
													0.507,
													-0.556
												],
												[
													-0.038,
													-0.366
												],
												[
													-0.586,
													-0.962
												],
												[
													-0.453,
													-0.253
												],
												[
													0,
													0
												],
												[
													-0.483,
													0.101
												],
												[
													0,
													0
												]
											],
											v: [
												[
													76.773,
													-54.46
												],
												[
													76.004,
													-54.811
												],
												[
													75.811,
													-55.194
												],
												[
													75.616,
													-55.578
												],
												[
													73.646,
													-55.776
												],
												[
													72.912,
													-54.814
												],
												[
													73.14,
													-53.618
												],
												[
													74.014,
													-52.488
												],
												[
													74.824,
													-51.29
												],
												[
													75.458,
													-50.12
												],
												[
													76.052,
													-48.844
												],
												[
													76.966,
													-48.213
												],
												[
													78.167,
													-48.496
												],
												[
													78.868,
													-49.902
												],
												[
													78.663,
													-50.172
												],
												[
													78.457,
													-50.443
												],
												[
													78.565,
													-50.959
												],
												[
													80.545,
													-50.661
												],
												[
													82.106,
													-48.1
												],
												[
													82.089,
													-47.348
												],
												[
													81.352,
													-46.609
												],
												[
													80.725,
													-46.729
												],
												[
													80.577,
													-47.035
												],
												[
													80.43,
													-47.341
												],
												[
													78.848,
													-47.381
												],
												[
													78.061,
													-46.439
												],
												[
													78.189,
													-45.341
												],
												[
													79.094,
													-44.203
												],
												[
													79.73,
													-43.243
												],
												[
													80.362,
													-42.123
												],
												[
													80.7,
													-41.351
												],
												[
													81.076,
													-40.605
												],
												[
													82.071,
													-39.838
												],
												[
													83.327,
													-40.076
												],
												[
													83.94,
													-41.93
												],
												[
													83.81,
													-42.143
												],
												[
													83.507,
													-42.512
												],
												[
													84.078,
													-43.785
												],
												[
													90.779,
													-51.25
												],
												[
													91.484,
													-52.631
												],
												[
													90.441,
													-54.796
												],
												[
													89.09,
													-56.535
												],
												[
													86.84,
													-56.588
												],
												[
													77.65,
													-54.631
												],
												[
													76.773,
													-54.465
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 36",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 36,
									ty: "sh",
									ix: 37,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													3.117,
													3.388
												],
												[
													4.879,
													-0.081
												],
												[
													-0.406,
													-6.009
												]
											],
											o: [
												[
													11.249,
													7.387
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-3.117,
													-3.388
												],
												[
													-4.879,
													0.08
												],
												[
													0.406,
													6.009
												]
											],
											v: [
												[
													16.74,
													-0.902
												],
												[
													32.869,
													-2.055
												],
												[
													32.866,
													-2.058
												],
												[
													32.866,
													-19.948
												],
												[
													16.196,
													-25.017
												],
												[
													7.388,
													-11.227
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 37",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 37,
									ty: "sh",
									ix: 38,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.135,
													2.659
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													2.386,
													4.611
												],
												[
													0.086,
													0.28
												],
												[
													1.72,
													0.385
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-7.32,
													-3.118
												]
											],
											o: [
												[
													1.098,
													6.656
												],
												[
													0,
													0
												],
												[
													6.272,
													-4.844
												],
												[
													-0.449,
													-0.869
												],
												[
													-0.531,
													-1.729
												],
												[
													0,
													0
												],
												[
													-1.812,
													-0.406
												],
												[
													0,
													0
												],
												[
													5.265,
													2.242
												]
											],
											v: [
												[
													-0.406,
													11.134
												],
												[
													5.085,
													16.585
												],
												[
													5.082,
													16.585
												],
												[
													2.956,
													-4.489
												],
												[
													2.1,
													-6.258
												],
												[
													-0.292,
													-8.404
												],
												[
													-0.388,
													-8.425
												],
												[
													-2.235,
													-6.664
												],
												[
													-6.029,
													15.971
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 38",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 38,
									ty: "sh",
									ix: 39,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-8.403,
													2.847
												],
												[
													0,
													0
												],
												[
													0.677,
													2.441
												],
												[
													7.726,
													2.439
												],
												[
													2.711,
													-4.879
												]
											],
											o: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													8.403,
													-2.847
												],
												[
													0,
													0
												],
												[
													-7.723,
													-2.441
												],
												[
													-2.709,
													4.879
												]
											],
											v: [
												[
													-33.272,
													-4.225
												],
												[
													-22.293,
													2.01
												],
												[
													-22.296,
													2.01
												],
												[
													-7.794,
													-9.375
												],
												[
													-14.164,
													-24.148
												],
												[
													-34.086,
													-18.727
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 39",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 39,
									ty: "sh",
									ix: 40,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.754,
													-6.05
												],
												[
													-0.371,
													-1.22
												],
												[
													0,
													0
												],
												[
													0.984,
													-1.907
												],
												[
													1.136,
													-2.772
												],
												[
													1.759,
													-1.885
												],
												[
													0.118,
													-1.589
												],
												[
													0,
													0
												],
												[
													0.453,
													-0.868
												],
												[
													11.53,
													2.591
												],
												[
													4.012,
													-1.053
												],
												[
													1.028,
													0.17
												],
												[
													7.779,
													14.943
												],
												[
													0.026,
													1.083
												],
												[
													0,
													0
												],
												[
													1.458,
													1.371
												],
												[
													0.363,
													1.338
												],
												[
													1.97,
													3.501
												],
												[
													-0.814,
													1.381
												],
												[
													0.318,
													1.704
												],
												[
													0.121,
													1.07
												],
												[
													-24.603,
													-10.933
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.356,
													1.225
												],
												[
													0,
													0
												],
												[
													0.213,
													0.704
												],
												[
													-0.669,
													1.295
												],
												[
													-2.19,
													5.344
												],
												[
													-1.088,
													1.165
												],
												[
													0,
													0
												],
												[
													-0.073,
													0.975
												],
												[
													-2.619,
													5.009
												],
												[
													0,
													0
												],
												[
													-1.008,
													0.263
												],
												[
													-4.55,
													-0.752
												],
												[
													-0.501,
													-0.962
												],
												[
													0,
													0
												],
												[
													-0.045,
													-1.999
												],
												[
													-0.516,
													-0.486
												],
												[
													-0.469,
													-1.721
												],
												[
													-2.899,
													-5.153
												],
												[
													0.882,
													-1.493
												],
												[
													-0.717,
													-3.825
												],
												[
													-5.909,
													-52.255
												],
												[
													24.604,
													10.936
												],
												[
													0,
													0
												]
											],
											v: [
												[
													44.088,
													-1.967
												],
												[
													44.04,
													1.789
												],
												[
													44.043,
													1.792
												],
												[
													43.161,
													5.561
												],
												[
													40.354,
													12.072
												],
												[
													33.716,
													25.862
												],
												[
													31.904,
													30.147
												],
												[
													30.811,
													44.995
												],
												[
													30.017,
													47.787
												],
												[
													6.105,
													67.068
												],
												[
													-3.032,
													66.94
												],
												[
													-6.115,
													67.123
												],
												[
													-30.2,
													48.072
												],
												[
													-30.987,
													44.957
												],
												[
													-31.305,
													30.57
												],
												[
													-33.728,
													25.355
												],
												[
													-35.109,
													22.722
												],
												[
													-39.419,
													14.177
												],
												[
													-44.621,
													2.107
												],
												[
													-43.749,
													-2.849
												],
												[
													-45.837,
													-14.487
												],
												[
													21.897,
													-63.086
												],
												[
													46.348,
													-21.777
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 40",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 40,
									ty: "sh",
									ix: 41,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.296,
													0.279
												],
												[
													0.283,
													0.203
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.002,
													0.436
												],
												[
													-0.328,
													0.351
												],
												[
													-0.361,
													0.043
												],
												[
													-0.263,
													-0.248
												],
												[
													-0.136,
													-0.198
												],
												[
													-0.088,
													-0.083
												],
												[
													-0.323,
													0.233
												],
												[
													-0.331,
													0.351
												],
												[
													0,
													0
												],
												[
													-0.07,
													0.12
												],
												[
													0.22,
													0.206
												],
												[
													0.205,
													0.121
												],
												[
													0.097,
													0.092
												],
												[
													-0.025,
													0.369
												],
												[
													-0.288,
													0.308
												],
												[
													-0.812,
													-0.761
												],
												[
													-0.564,
													-0.632
												],
												[
													-0.308,
													-0.288
												],
												[
													-0.599,
													-0.438
												],
												[
													-0.208,
													-0.196
												],
												[
													0.015,
													-0.236
												],
												[
													0.294,
													-0.509
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.318,
													0.043
												],
												[
													-0.273,
													-0.258
												],
												[
													-0.441,
													-0.519
												],
												[
													-0.253,
													-0.236
												],
												[
													-1.125,
													-0.889
												],
												[
													-0.143,
													-0.133
												],
												[
													-0.02,
													-0.418
												],
												[
													0.351,
													-0.374
												],
												[
													0.366,
													-0.048
												],
												[
													0.253,
													0.236
												],
												[
													0.138,
													0.203
												],
												[
													0.078,
													0.073
												],
												[
													0.69,
													-0.734
												],
												[
													0,
													0
												],
												[
													-0.286,
													-0.268
												],
												[
													-0.21,
													-0.125
												],
												[
													-0.088,
													-0.083
												],
												[
													0.02,
													-0.373
												],
												[
													0.288,
													-0.306
												],
												[
													0.421,
													-0.008
												],
												[
													0.36,
													0.338
												],
												[
													0.431,
													0.529
												],
												[
													0.328,
													0.308
												],
												[
													0.456,
													0.326
												],
												[
													0.208,
													0.196
												],
												[
													-0.003,
													0.411
												],
												[
													-0.34,
													0.361
												],
												[
													-0.449,
													-0.421
												],
												[
													-0.023,
													-0.042
												],
												[
													-0.045,
													-0.04
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.004,
													-0.005
												],
												[
													-0.261,
													0.211
												],
												[
													-0.248,
													0.263
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.449,
													0.421
												],
												[
													0,
													0
												],
												[
													-0.421,
													0.779
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.038,
													-0.158
												],
												[
													-0.087,
													-0.083
												],
												[
													-0.055,
													-0.03
												],
												[
													-0.032,
													-0.03
												],
												[
													-0.065,
													-0.062
												],
												[
													0.627,
													-0.669
												],
												[
													0.403,
													-0.035
												],
												[
													0.329,
													0.308
												],
												[
													0.21,
													0.258
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.049,
													0.061
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.371,
													-0.348
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.338,
													-0.318
												],
												[
													-0.005,
													-0.436
												],
												[
													0.299,
													-0.318
												],
												[
													0.361,
													-0.043
												],
												[
													0.088,
													0.083
												],
												[
													0.135,
													0.198
												],
												[
													0.218,
													0.205
												],
												[
													0.125,
													-0.087
												],
												[
													0,
													0
												],
												[
													0.328,
													-0.351
												],
												[
													0.213,
													-0.339
												],
												[
													-0.088,
													-0.083
												],
												[
													-0.206,
													-0.12
												],
												[
													-0.254,
													-0.238
												],
												[
													0.025,
													-0.368
												],
												[
													0.752,
													-0.799
												],
												[
													0.263,
													0.249
												],
												[
													0.561,
													0.631
												],
												[
													0.494,
													0.463
												],
												[
													0.403,
													0.296
												],
												[
													0.276,
													0.255
												],
												[
													-0.012,
													0.233
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.571,
													-0.369
												],
												[
													0.318,
													-0.042
												],
												[
													0.24,
													0.228
												],
												[
													0.441,
													0.519
												],
												[
													0.263,
													0.248
												],
												[
													0.316,
													0.256
												],
												[
													0.363,
													0.339
												],
												[
													0.02,
													0.419
												],
												[
													-0.288,
													0.308
												],
												[
													-0.366,
													0.05
												],
												[
													-0.098,
													-0.093
												],
												[
													-0.138,
													-0.203
												],
												[
													-0.296,
													-0.278
												],
												[
													0,
													0
												],
												[
													-0.699,
													0.745
												],
												[
													0.087,
													0.083
												],
												[
													0.211,
													0.126
												],
												[
													0.253,
													0.235
												],
												[
													-0.022,
													0.374
												],
												[
													-0.351,
													0.374
												],
												[
													-0.421,
													0.007
												],
												[
													-0.208,
													-0.196
												],
												[
													-0.288,
													-0.353
												],
												[
													-0.208,
													-0.196
												],
												[
													-0.456,
													-0.326
												],
												[
													-0.328,
													-0.308
												],
												[
													0.002,
													-0.411
												],
												[
													0.639,
													-0.679
												],
												[
													0.065,
													0.063
												],
												[
													0.032,
													0.03
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.011,
													0.015
												],
												[
													0.176,
													0.165
												],
												[
													0.113,
													-0.1
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.855,
													0.516
												],
												[
													0,
													0
												],
												[
													-0.439,
													-0.411
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.484,
													0.513
												],
												[
													0.003,
													0.062
												],
												[
													0.023,
													0.02
												],
												[
													0.032,
													0.03
												],
												[
													0.043,
													0.021
												],
												[
													0.439,
													0.414
												],
												[
													-0.351,
													0.371
												],
												[
													-0.404,
													0.035
												],
												[
													-0.155,
													-0.146
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.092,
													-0.115
												],
												[
													0,
													0
												],
												[
													-0.21,
													-0.238
												]
											],
											v: [
												[
													56.54,
													-71.193
												],
												[
													55.558,
													-72.022
												],
												[
													55.555,
													-72.022
												],
												[
													54.412,
													-72.847
												],
												[
													53.899,
													-73.979
												],
												[
													54.387,
													-75.16
												],
												[
													55.375,
													-75.701
												],
												[
													56.309,
													-75.395
												],
												[
													56.643,
													-74.974
												],
												[
													56.976,
													-74.553
												],
												[
													57.788,
													-74.596
												],
												[
													58.47,
													-75.255
												],
												[
													62.745,
													-79.808
												],
												[
													63.344,
													-80.512
												],
												[
													63.334,
													-81.327
												],
												[
													62.893,
													-81.633
												],
												[
													62.437,
													-81.953
												],
												[
													62.096,
													-82.861
												],
												[
													62.567,
													-83.873
												],
												[
													64.91,
													-83.931
												],
												[
													66.148,
													-82.612
												],
												[
													67.451,
													-81.234
												],
												[
													69.09,
													-79.881
												],
												[
													70.007,
													-79.144
												],
												[
													70.398,
													-78.407
												],
												[
													69.939,
													-77.292
												],
												[
													65.669,
													-70.01
												],
												[
													72.503,
													-74.42
												],
												[
													73.839,
													-75.037
												],
												[
													74.726,
													-74.714
												],
												[
													75.751,
													-73.596
												],
												[
													76.791,
													-72.463
												],
												[
													78.871,
													-70.757
												],
												[
													79.56,
													-70.173
												],
												[
													80.131,
													-69.035
												],
												[
													79.635,
													-67.847
												],
												[
													78.655,
													-67.313
												],
												[
													77.728,
													-67.594
												],
												[
													77.372,
													-68.038
												],
												[
													77.049,
													-68.451
												],
												[
													75.57,
													-67.767
												],
												[
													71.295,
													-63.214
												],
												[
													70.674,
													-61.695
												],
												[
													71.122,
													-61.382
												],
												[
													71.571,
													-61.068
												],
												[
													71.919,
													-60.154
												],
												[
													71.456,
													-59.134
												],
												[
													70.3,
													-58.562
												],
												[
													69.128,
													-59.061
												],
												[
													68.168,
													-60.149
												],
												[
													67.243,
													-61.141
												],
												[
													66.246,
													-61.923
												],
												[
													65.248,
													-62.705
												],
												[
													64.76,
													-63.782
												],
												[
													65.273,
													-64.94
												],
												[
													66.905,
													-65.326
												],
												[
													67.038,
													-65.171
												],
												[
													67.153,
													-65.063
												],
												[
													67.16,
													-65.052
												],
												[
													67.182,
													-65.021
												],
												[
													67.197,
													-65
												],
												[
													67.22,
													-64.97
												],
												[
													67.872,
													-65.038
												],
												[
													68.413,
													-65.582
												],
												[
													74.235,
													-71.782
												],
												[
													64.354,
													-65.837
												],
												[
													62.396,
													-65.697
												],
												[
													61.344,
													-66.684
												],
												[
													61.319,
													-68.471
												],
												[
													66.835,
													-78.728
												],
												[
													61.013,
													-72.528
												],
												[
													60.344,
													-71.518
												],
												[
													60.479,
													-71.3
												],
												[
													60.595,
													-71.225
												],
												[
													60.692,
													-71.133
												],
												[
													60.855,
													-71.01
												],
												[
													60.572,
													-69.388
												],
												[
													59.442,
													-68.779
												],
												[
													58.344,
													-69.19
												],
												[
													57.798,
													-69.797
												],
												[
													57.566,
													-70.086
												],
												[
													57.563,
													-70.089
												],
												[
													57.351,
													-70.353
												],
												[
													57.299,
													-70.418
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 41",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 41,
									ty: "sh",
									ix: 42,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.12,
													-0.065
												],
												[
													0.341,
													0.14
												],
												[
													0,
													0
												],
												[
													0.201,
													0.371
												],
												[
													-0.979,
													0.526
												],
												[
													-0.777,
													0.333
												],
												[
													-0.371,
													0.2
												],
												[
													-0.606,
													0.428
												],
												[
													-0.25,
													0.135
												],
												[
													-0.219,
													-0.088
												],
												[
													-0.391,
													-0.439
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.06,
													0.316
												],
												[
													-0.331,
													0.178
												],
												[
													-0.632,
													0.256
												],
												[
													-0.305,
													0.163
												],
												[
													-1.2,
													0.782
												],
												[
													-0.173,
													0.092
												],
												[
													-0.404,
													-0.116
												],
												[
													-0.243,
													-0.451
												],
												[
													0.07,
													-0.36
												],
												[
													0.303,
													-0.163
												],
												[
													0.235,
													-0.068
												],
												[
													0.093,
													-0.05
												],
												[
													-0.476,
													-0.887
												],
												[
													0,
													0
												],
												[
													-0.346,
													0.185
												],
												[
													-0.188,
													0.16
												],
												[
													-0.105,
													0.058
												],
												[
													-0.346,
													-0.138
												],
												[
													-0.201,
													-0.371
												],
												[
													0.125,
													-0.401
												],
												[
													0.436,
													-0.236
												],
												[
													0.639,
													-0.241
												],
												[
													0.399,
													-0.213
												],
												[
													0.454,
													-0.329
												],
												[
													0.251,
													-0.135
												],
												[
													0.389,
													0.132
												],
												[
													0.235,
													0.436
												],
												[
													-0.543,
													0.293
												],
												[
													-0.048,
													0.007
												],
												[
													-0.053,
													0.027
												],
												[
													-0.012,
													0.008
												],
												[
													0.118,
													0.313
												],
												[
													0.17,
													0.319
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.544,
													-0.293
												],
												[
													0,
													0
												],
												[
													0.604,
													0.649
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.163,
													-0.015
												],
												[
													-0.106,
													0.058
												],
												[
													-0.045,
													0.043
												],
												[
													-0.011,
													0.006
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.081,
													0.042
												],
												[
													-0.433,
													-0.807
												],
												[
													0.095,
													-0.394
												],
												[
													0.398,
													-0.213
												],
												[
													0.313,
													-0.118
												],
												[
													0.123,
													-0.045
												],
												[
													0.051,
													-0.019
												],
												[
													0.358,
													-0.193
												],
												[
													0.283,
													-0.203
												],
												[
													0,
													0
												],
												[
													0.413,
													0.136
												],
												[
													0.228,
													0.423
												],
												[
													-0.073,
													0.356
												],
												[
													-0.318,
													0.171
												],
												[
													-0.231,
													0.065
												],
												[
													-0.106,
													0.058
												],
												[
													0.117,
													0.381
												],
												[
													0.228,
													0.423
												],
												[
													0,
													0
												],
												[
													0.09,
													0.105
												],
												[
													0.265,
													-0.143
												],
												[
													0.18,
													-0.156
												]
											],
											o: [
												[
													-0.304,
													0.163
												],
												[
													0,
													0
												],
												[
													-0.341,
													-0.14
												],
												[
													-0.521,
													-0.967
												],
												[
													0.316,
													-0.171
												],
												[
													0.777,
													-0.331
												],
												[
													0.594,
													-0.321
												],
												[
													0.409,
													-0.286
												],
												[
													0.331,
													-0.178
												],
												[
													0.218,
													0.087
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.168,
													-0.661
												],
												[
													0.062,
													-0.316
												],
												[
													0.29,
													-0.158
												],
												[
													0.631,
													-0.253
												],
												[
													0.319,
													-0.171
												],
												[
													0.344,
													-0.218
												],
												[
													0.436,
													-0.233
												],
												[
													0.403,
													0.115
												],
												[
													0.201,
													0.371
												],
												[
													-0.071,
													0.364
												],
												[
													-0.118,
													0.065
												],
												[
													-0.236,
													0.067
												],
												[
													-0.356,
													0.193
												],
												[
													0,
													0
												],
												[
													0.484,
													0.9
												],
												[
													0.105,
													-0.058
												],
												[
													0.186,
													-0.16
												],
												[
													0.303,
													-0.165
												],
												[
													0.346,
													0.138
												],
												[
													0.243,
													0.448
												],
												[
													-0.125,
													0.399
												],
												[
													-0.253,
													0.135
												],
												[
													-0.426,
													0.16
												],
												[
													-0.253,
													0.135
												],
												[
													-0.453,
													0.328
												],
												[
													-0.398,
													0.213
												],
												[
													-0.388,
													-0.133
												],
												[
													-0.441,
													-0.819
												],
												[
													0.081,
													-0.043
												],
												[
													0.038,
													-0.023
												],
												[
													0.06,
													-0.015
												],
												[
													0.213,
													-0.113
												],
												[
													-0.058,
													-0.14
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.218,
													0.978
												],
												[
													0,
													0
												],
												[
													-0.531,
													0.285
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.333,
													0.624
												],
												[
													0.06,
													0.017
												],
												[
													0.025,
													-0.013
												],
												[
													0.011,
													-0.006
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.032,
													-0.032
												],
												[
													0.528,
													-0.286
												],
												[
													0.244,
													0.451
												],
												[
													-0.095,
													0.393
												],
												[
													-0.186,
													0.101
												],
												[
													-0.197,
													0.073
												],
												[
													-0.128,
													0.047
												],
												[
													-0.294,
													0.123
												],
												[
													-0.451,
													0.243
												],
												[
													0,
													0
												],
												[
													-0.411,
													0.22
												],
												[
													-0.414,
													-0.135
												],
												[
													-0.208,
													-0.386
												],
												[
													0.072,
													-0.356
												],
												[
													0.105,
													-0.055
												],
												[
													0.23,
													-0.063
												],
												[
													0.263,
													-0.142
												],
												[
													-0.046,
													-0.145
												],
												[
													0,
													0
												],
												[
													-0.229,
													-0.423
												],
												[
													-0.251,
													-0.311
												],
												[
													-0.106,
													0.058
												],
												[
													-0.18,
													0.155
												]
											],
											v: [
												[
													-57.489,
													-85.357
												],
												[
													-58.457,
													-85.324
												],
												[
													-58.454,
													-85.334
												],
												[
													-59.264,
													-86.101
												],
												[
													-58.575,
													-88.341
												],
												[
													-56.933,
													-89.095
												],
												[
													-55.212,
													-89.892
												],
												[
													-53.41,
													-91.015
												],
												[
													-52.42,
													-91.649
												],
												[
													-51.595,
													-91.784
												],
												[
													-50.683,
													-90.995
												],
												[
													-45.135,
													-84.632
												],
												[
													-47.145,
													-92.514
												],
												[
													-47.305,
													-93.977
												],
												[
													-46.716,
													-94.716
												],
												[
													-45.333,
													-95.333
												],
												[
													-43.93,
													-95.959
												],
												[
													-41.652,
													-97.39
												],
												[
													-40.88,
													-97.856
												],
												[
													-39.619,
													-98.034
												],
												[
													-38.65,
													-97.185
												],
												[
													-38.454,
													-96.085
												],
												[
													-39.015,
													-95.295
												],
												[
													-39.549,
													-95.097
												],
												[
													-40.043,
													-94.922
												],
												[
													-39.862,
													-93.303
												],
												[
													-36.903,
													-87.8
												],
												[
													-35.66,
													-86.727
												],
												[
													-35.222,
													-87.053
												],
												[
													-34.783,
													-87.379
												],
												[
													-33.806,
													-87.419
												],
												[
													-32.986,
													-86.657
												],
												[
													-32.811,
													-85.382
												],
												[
													-33.655,
													-84.429
												],
												[
													-34.991,
													-83.865
												],
												[
													-36.227,
													-83.304
												],
												[
													-37.287,
													-82.607
												],
												[
													-38.344,
													-81.911
												],
												[
													-39.522,
													-81.79
												],
												[
													-40.456,
													-82.645
												],
												[
													-40.304,
													-84.314
												],
												[
													-40.113,
													-84.389
												],
												[
													-39.975,
													-84.464
												],
												[
													-39.865,
													-84.497
												],
												[
													-39.722,
													-85.136
												],
												[
													-40.065,
													-85.823
												],
												[
													-44.093,
													-93.311
												],
												[
													-41.597,
													-82.054
												],
												[
													-42.085,
													-80.152
												],
												[
													-43.356,
													-79.467
												],
												[
													-45.057,
													-80.011
												],
												[
													-53.031,
													-88.502
												],
												[
													-49.004,
													-81.014
												],
												[
													-48.26,
													-80.056
												],
												[
													-48.009,
													-80.114
												],
												[
													-47.902,
													-80.197
												],
												[
													-47.87,
													-80.214
												],
												[
													-47.842,
													-80.229
												],
												[
													-47.827,
													-80.237
												],
												[
													-47.807,
													-80.248
												],
												[
													-47.781,
													-80.262
												],
												[
													-47.613,
													-80.377
												],
												[
													-46.168,
													-79.593
												],
												[
													-45.947,
													-78.327
												],
												[
													-46.686,
													-77.418
												],
												[
													-47.433,
													-77.092
												],
												[
													-47.914,
													-76.915
												],
												[
													-48.182,
													-76.816
												],
												[
													-49.157,
													-76.342
												],
												[
													-50.257,
													-75.673
												],
												[
													-51.403,
													-74.851
												],
												[
													-52.64,
													-74.724
												],
												[
													-53.603,
													-75.563
												],
												[
													-53.803,
													-76.673
												],
												[
													-53.217,
													-77.463
												],
												[
													-52.713,
													-77.643
												],
												[
													-52.209,
													-77.824
												],
												[
													-51.991,
													-78.608
												],
												[
													-52.4,
													-79.462
												],
												[
													-55.359,
													-84.966
												],
												[
													-55.838,
													-85.757
												],
												[
													-56.612,
													-86.008
												],
												[
													-57.041,
													-85.687
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 42",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 42,
									ty: "sh",
									ix: 43,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.005,
													0.015
												],
												[
													0.381,
													-0.085
												],
												[
													0,
													0
												],
												[
													0.04,
													0.175
												],
												[
													-0.005,
													0.045
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0,
													0
												],
												[
													0.075,
													0.198
												],
												[
													0.046,
													0.206
												],
												[
													0,
													0
												],
												[
													-0.366,
													0.083
												],
												[
													-0.013,
													-0.058
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-22.268,
													-100.773
												],
												[
													-20.198,
													-96.501
												],
												[
													-20.091,
													-96.225
												],
												[
													-20.594,
													-95.789
												],
												[
													-21.957,
													-95.483
												],
												[
													-22.566,
													-95.623
												],
												[
													-22.579,
													-95.781
												],
												[
													-22.268,
													-100.776
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 43",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 43,
									ty: "sh",
									ix: 44,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.456,
													0.103
												],
												[
													-0.755,
													0.278
												],
												[
													-0.601,
													0.136
												],
												[
													-0.318,
													0.025
												],
												[
													-0.205,
													0.045
												],
												[
													-0.186,
													0.349
												],
												[
													0.106,
													0.469
												],
												[
													0.542,
													-0.123
												],
												[
													0.143,
													-0.055
												],
												[
													0.072,
													-0.018
												],
												[
													0.053,
													0.235
												],
												[
													-0.834,
													0.188
												],
												[
													0,
													0
												],
												[
													-0.22,
													-0.228
												],
												[
													-0.088,
													-0.396
												],
												[
													0.278,
													-0.062
												],
												[
													0.152,
													-0.01
												],
												[
													0.075,
													-0.015
												],
												[
													-0.195,
													-0.865
												],
												[
													-0.323,
													-0.243
												],
												[
													-0.396,
													0.09
												],
												[
													-0.722,
													0.286
												],
												[
													-0.558,
													0.126
												],
												[
													-0.328,
													0.043
												],
												[
													-0.429,
													0.017
												],
												[
													-0.205,
													0.047
												],
												[
													-0.228,
													0.359
												],
												[
													0.108,
													0.483
												],
												[
													0.822,
													-0.185
												],
												[
													0,
													0
												],
												[
													0.09,
													-0.02
												],
												[
													0.388,
													0.699
												],
												[
													0,
													0
												],
												[
													0.358,
													0.083
												],
												[
													1.233,
													-0.275
												],
												[
													0.286,
													-0.233
												],
												[
													0.131,
													-1.06
												],
												[
													0,
													0
												],
												[
													0.025,
													-0.098
												],
												[
													0.279,
													-0.062
												],
												[
													0.196,
													-0.02
												],
												[
													0.088,
													-0.02
												],
												[
													-0.231,
													-1.025
												],
												[
													-0.349,
													-0.215
												]
											],
											o: [
												[
													0.348,
													0.215
												],
												[
													0.145,
													-0.033
												],
												[
													0.328,
													-0.121
												],
												[
													0.556,
													-0.125
												],
												[
													0.727,
													-0.055
												],
												[
													0.411,
													-0.093
												],
												[
													0.183,
													-0.348
												],
												[
													-0.195,
													-0.864
												],
												[
													-0.072,
													0.018
												],
												[
													-0.143,
													0.055
												],
												[
													-0.251,
													0.055
												],
												[
													-0.225,
													-0.998
												],
												[
													0,
													0
												],
												[
													0.248,
													-0.055
												],
												[
													0.221,
													0.228
												],
												[
													0.07,
													0.308
												],
												[
													-0.073,
													0.018
												],
												[
													-0.153,
													0.01
												],
												[
													-0.556,
													0.125
												],
												[
													0.103,
													0.453
												],
												[
													0.324,
													0.243
												],
												[
													0.19,
													-0.043
												],
												[
													0.183,
													-0.073
												],
												[
													0.514,
													-0.115
												],
												[
													0.133,
													-0.03
												],
												[
													0.346,
													-0.033
												],
												[
													0.469,
													-0.105
												],
												[
													0.229,
													-0.358
												],
												[
													-0.218,
													-0.968
												],
												[
													0,
													0
												],
												[
													-0.211,
													0.093
												],
												[
													-0.293,
													0.065
												],
												[
													0,
													0
												],
												[
													-0.363,
													-0.656
												],
												[
													-0.359,
													-0.08
												],
												[
													-1.1,
													0.248
												],
												[
													-0.383,
													0.348
												],
												[
													0,
													0
												],
												[
													-0.061,
													0.491
												],
												[
													-0.107,
													0.348
												],
												[
													-0.087,
													0.02
												],
												[
													-0.195,
													0.02
												],
												[
													-0.776,
													0.175
												],
												[
													0.103,
													0.453
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-28.42,
													-86.652
												],
												[
													-27.215,
													-86.484
												],
												[
													-25.864,
													-86.95
												],
												[
													-24.471,
													-87.334
												],
												[
													-23.158,
													-87.559
												],
												[
													-21.76,
													-87.712
												],
												[
													-20.867,
													-88.374
												],
												[
													-20.75,
													-89.602
												],
												[
													-21.855,
													-90.717
												],
												[
													-22.178,
													-90.609
												],
												[
													-22.501,
													-90.501
												],
												[
													-22.955,
													-90.769
												],
												[
													-22.038,
													-92.549
												],
												[
													-19.111,
													-93.208
												],
												[
													-18.407,
													-92.95
												],
												[
													-17.943,
													-92.015
												],
												[
													-18.256,
													-91.459
												],
												[
													-18.594,
													-91.418
												],
												[
													-18.933,
													-91.378
												],
												[
													-19.477,
													-89.892
												],
												[
													-18.838,
													-88.845
												],
												[
													-17.757,
													-88.614
												],
												[
													-16.389,
													-89.108
												],
												[
													-15.277,
													-89.404
												],
												[
													-14.014,
													-89.642
												],
												[
													-13.174,
													-89.714
												],
												[
													-12.345,
													-89.832
												],
												[
													-11.3,
													-90.529
												],
												[
													-11.122,
													-91.794
												],
												[
													-12.68,
													-92.97
												],
												[
													-12.923,
													-92.915
												],
												[
													-13.372,
													-92.744
												],
												[
													-14.394,
													-93.694
												],
												[
													-19.319,
													-102.435
												],
												[
													-20.401,
													-103.545
												],
												[
													-22.787,
													-103.252
												],
												[
													-24.867,
													-102.53
												],
												[
													-25.639,
													-100.415
												],
												[
													-26.731,
													-91.085
												],
												[
													-26.857,
													-90.203
												],
												[
													-27.436,
													-89.587
												],
												[
													-27.862,
													-89.526
												],
												[
													-28.288,
													-89.466
												],
												[
													-29.107,
													-87.664
												],
												[
													-28.43,
													-86.66
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 44",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 44,
									ty: "sh",
									ix: 45,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.082,
													0.391
												],
												[
													-0.008,
													0.481
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.028,
													0.135
												],
												[
													0.3,
													0.005
												],
												[
													0.233,
													-0.048
												],
												[
													0.136,
													0
												],
												[
													0.228,
													0.291
												],
												[
													-0.007,
													0.421
												],
												[
													-1.113,
													-0.017
												],
												[
													-0.767,
													-0.072
												],
												[
													-0.736,
													-0.013
												],
												[
													-0.631,
													0.005
												],
												[
													-1.264,
													-0.005
												],
												[
													-0.736,
													0.017
												],
												[
													0,
													0
												],
												[
													0.03,
													0
												],
												[
													0.01,
													-0.661
												],
												[
													0.065,
													-0.331
												],
												[
													0.005,
													-0.315
												],
												[
													-0.075,
													-0.466
												],
												[
													0.002,
													-0.24
												],
												[
													0.321,
													-0.325
												],
												[
													0.511,
													0.007
												],
												[
													0.288,
													0.336
												],
												[
													-0.01,
													0.556
												],
												[
													-0.068,
													0.406
												],
												[
													-0.002,
													0.166
												],
												[
													0.752,
													0.013
												],
												[
													0,
													0
												],
												[
													0.16,
													-0.14
												],
												[
													0.01,
													-0.631
												],
												[
													0,
													0
												],
												[
													-0.406,
													-0.007
												],
												[
													-0.007,
													0.436
												],
												[
													0.024,
													0.232
												],
												[
													0,
													0
												],
												[
													0,
													0.076
												],
												[
													0,
													0.03
												],
												[
													-0.707,
													-0.012
												],
												[
													0.013,
													-0.782
												],
												[
													0.035,
													-0.331
												],
												[
													0.007,
													-0.527
												],
												[
													-0.05,
													-0.609
												],
												[
													0.005,
													-0.301
												],
												[
													0.781,
													0.012
												],
												[
													-0.012,
													0.842
												],
												[
													-0.015,
													0.06
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.572,
													0.01
												],
												[
													0.082,
													-0.073
												],
												[
													0.005,
													-0.255
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.042,
													-0.135
												],
												[
													-0.331,
													-0.005
												],
												[
													-0.315,
													0.047
												],
												[
													-0.165,
													-0.002
												],
												[
													0.017,
													-1.022
												],
												[
													0.313,
													-0.288
												],
												[
													0.511,
													0.008
												],
												[
													0.771,
													0.087
												],
												[
													0.391,
													0.008
												],
												[
													0.451,
													-0.038
												],
												[
													0.12,
													0
												],
												[
													0.288,
													0.306
												],
												[
													-0.008,
													0.497
												],
												[
													-0.238,
													0.276
												],
												[
													-0.361,
													-0.005
												],
												[
													-0.24,
													-0.058
												],
												[
													-0.106,
													0
												]
											],
											o: [
												[
													0.033,
													-0.151
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.008,
													-0.481
												],
												[
													-0.067,
													-0.393
												],
												[
													-0.121,
													-0.003
												],
												[
													-0.233,
													0.05
												],
												[
													-0.345,
													-0.008
												],
												[
													-0.23,
													-0.288
												],
												[
													0.02,
													-1.097
												],
												[
													0.345,
													0.005
												],
												[
													1.155,
													0.108
												],
												[
													0.512,
													0.007
												],
												[
													0.421,
													-0.01
												],
												[
													0.511,
													0.007
												],
												[
													0,
													0
												],
												[
													0.181,
													-0.012
												],
												[
													0.749,
													0.013
												],
												[
													-0.005,
													0.271
												],
												[
													-0.098,
													0.494
												],
												[
													-0.002,
													0.241
												],
												[
													0.075,
													0.468
												],
												[
													-0.008,
													0.527
												],
												[
													-0.321,
													0.326
												],
												[
													-0.511,
													-0.01
												],
												[
													-0.288,
													-0.335
												],
												[
													0.002,
													-0.165
												],
												[
													0.05,
													-0.301
												],
												[
													0.008,
													-0.511
												],
												[
													0,
													0
												],
												[
													-0.587,
													-0.01
												],
												[
													-0.161,
													0.141
												],
												[
													0,
													0
												],
												[
													-0.007,
													0.466
												],
												[
													0.631,
													0.01
												],
												[
													0.003,
													-0.044
												],
												[
													0,
													0
												],
												[
													0.003,
													-0.045
												],
												[
													-0.015,
													-0.075
												],
												[
													0.01,
													-0.587
												],
												[
													0.824,
													0.013
												],
												[
													-0.002,
													0.151
												],
												[
													-0.035,
													0.331
												],
												[
													-0.005,
													0.3
												],
												[
													0.05,
													0.609
												],
												[
													-0.015,
													0.917
												],
												[
													-0.797,
													-0.015
												],
												[
													0,
													-0.03
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.008,
													-0.376
												],
												[
													-0.285,
													-0.005
												],
												[
													-0.086,
													0.072
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.005,
													0.241
												],
												[
													0.07,
													0.258
												],
												[
													0.163,
													0.003
												],
												[
													0.316,
													-0.048
												],
												[
													0.887,
													0.015
												],
												[
													-0.008,
													0.481
												],
												[
													-0.314,
													0.288
												],
												[
													-0.391,
													-0.005
												],
												[
													-0.775,
													-0.088
												],
												[
													-0.767,
													-0.012
												],
												[
													-1.04,
													0.088
												],
												[
													-0.484,
													-0.01
												],
												[
													-0.289,
													-0.306
												],
												[
													0.005,
													-0.436
												],
												[
													0.239,
													-0.275
												],
												[
													0.12,
													0.002
												],
												[
													0.238,
													0.057
												],
												[
													0.3,
													0.005
												]
											],
											v: [
												[
													-4.183,
													-93.997
												],
												[
													-4.122,
													-94.944
												],
												[
													-4.11,
													-94.937
												],
												[
													-4.01,
													-101.184
												],
												[
													-4.04,
													-102.109
												],
												[
													-4.593,
													-102.705
												],
												[
													-5.125,
													-102.635
												],
												[
													-5.679,
													-102.565
												],
												[
													-6.541,
													-103.009
												],
												[
													-6.874,
													-104.074
												],
												[
													-5.177,
													-105.693
												],
												[
													-3.511,
													-105.575
												],
												[
													-0.672,
													-105.394
												],
												[
													1.042,
													-105.389
												],
												[
													3.569,
													-105.394
												],
												[
													5.44,
													-105.409
												],
												[
													6.796,
													-105.5
												],
												[
													7.022,
													-105.52
												],
												[
													8.132,
													-104.51
												],
												[
													8.027,
													-103.61
												],
												[
													7.871,
													-102.395
												],
												[
													7.979,
													-101.332
												],
												[
													8.087,
													-100.27
												],
												[
													7.593,
													-98.992
												],
												[
													6.345,
													-98.515
												],
												[
													5.147,
													-99.032
												],
												[
													4.729,
													-100.37
												],
												[
													4.834,
													-101.224
												],
												[
													4.914,
													-101.924
												],
												[
													3.799,
													-102.708
												],
												[
													1.341,
													-102.748
												],
												[
													0.221,
													-102.553
												],
												[
													-0.035,
													-101.395
												],
												[
													-0.053,
													-100.335
												],
												[
													0.544,
													-99.626
												],
												[
													1.501,
													-100.265
												],
												[
													1.465,
													-100.679
												],
												[
													1.463,
													-100.693
												],
												[
													1.466,
													-100.874
												],
												[
													1.446,
													-101.031
												],
												[
													2.521,
													-101.894
												],
												[
													3.741,
													-100.701
												],
												[
													3.684,
													-99.979
												],
												[
													3.619,
													-98.693
												],
												[
													3.686,
													-97.328
												],
												[
													3.754,
													-95.962
												],
												[
													2.559,
													-94.606
												],
												[
													1.383,
													-95.889
												],
												[
													1.408,
													-96.024
												],
												[
													1.408,
													-96.137
												],
												[
													1.413,
													-96.385
												],
												[
													0.566,
													-96.964
												],
												[
													0.013,
													-96.861
												],
												[
													-0.12,
													-96.368
												],
												[
													-0.14,
													-95.06
												],
												[
													-0.13,
													-94.293
												],
												[
													-0.073,
													-93.729
												],
												[
													0.529,
													-93.336
												],
												[
													1.25,
													-93.403
												],
												[
													1.972,
													-93.471
												],
												[
													3.278,
													-91.915
												],
												[
													2.797,
													-90.762
												],
												[
													1.561,
													-90.341
												],
												[
													-0.185,
													-90.481
												],
												[
													-1.932,
													-90.622
												],
												[
													-3.759,
													-90.584
												],
												[
													-5.498,
													-90.454
												],
												[
													-6.653,
													-90.925
												],
												[
													-7.074,
													-92.128
												],
												[
													-6.709,
													-93.193
												],
												[
													-5.811,
													-93.596
												],
												[
													-5.273,
													-93.508
												],
												[
													-4.756,
													-93.421
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 45",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.921568687289,
											0.921568687289,
											0.921568687289,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											138.161,
											481.655
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 1",
							np: 47,
							cix: 2,
							bm: 0,
							ix: 1,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-138.614,
													-298.227
												],
												[
													-138.288,
													247.42
												],
												[
													0,
													328.227
												],
												[
													138.288,
													247.42
												],
												[
													137.962,
													-298.227
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											138.538,
											328.477
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 2",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 2,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 1,
								k: [
									{
										i: {
											x: 0.833,
											y: 0.833
										},
										o: {
											x: 0.551,
											y: 0
										},
										t: 0,
										s: [
											138.375,
											-301.523
										],
										to: [
											0,
											0
										],
										ti: [
											0,
											0
										]
									},
									{
										i: {
											x: 0,
											y: 1
										},
										o: {
											x: 0.167,
											y: 0.167
										},
										t: 20,
										s: [
											138.375,
											346.976
										],
										to: [
											0,
											0
										],
										ti: [
											0,
											0
										]
									},
									{
										t: 30,
										s: [
											138.375,
											329.477
										]
									}
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									138.375,
									343.477
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 1",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		}
	];
	var markers$2 = [
	];
	var lottieJson$1 = {
		v: v$2,
		fr: fr$2,
		ip: ip$2,
		op: op$2,
		w: w$2,
		h: h$2,
		nm: nm$2,
		ddd: ddd$2,
		assets: assets$2,
		layers: layers$2,
		markers: markers$2
	};

	const WAITING_PLAYERS = 0;
	const WELCOME = 1;
	const YOU_READY = 2;
	const REVEAL_IDENTITY = 3;
	const INSTRUCTIONS = 4;
	const NIGHTTIME = 5;
	const NIGHTTIME_TIMER = 6;
	const GAME_OVER = 16;

	const VariableContext = /*#__PURE__*/reactExports.createContext({
	  self: {},
	  setSelf: () => {},
	  players: [],
	  setPlayers: () => {},
	  page: 0,
	  setPage: () => {},
	  mafia: [],
	  setMafia: () => {},
	  detective: null,
	  setDetective: () => {},
	  angel: null,
	  setAngel: () => {},
	  civilians: [],
	  setCivilians: () => {},
	  currentMafiaSelections: [],
	  setCurrentMafiaSelections: () => {},
	  currentMafiaVotes: [],
	  setCurrentMafiaVotes: () => {},
	  currentKill: null,
	  setCurrentKill: () => {},
	  detectiveIdentifications: [],
	  setDetectiveIdentifications: () => {},
	  currentDetectiveIdentification: null,
	  setCurrentDetectiveIdentification: () => {},
	  currentAngelProtection: null,
	  setCurrentAngelProtection: () => {},
	  currentCivilianTriviaFinishes: [],
	  setCurrentCivilianTriviaFinishes: () => {},
	  currentAccusations: [],
	  setCurrentAccusations: () => {},
	  recentlyAccused: null,
	  setRecentlyAccused: () => {},
	  currentLifeDeathSelections: [],
	  setCurrentLifeDeathSelections: () => {},
	  currentLifeDeathVotes: [],
	  setCurrentLifeDeathVotes: () => {}
	});
	const VariableProvider = ({
	  children
	}) => {
	  const [self, setSelf] = reactExports.useState({
	    gamername: "",
	    realname: "",
	    role: "",
	    isAlive: true,
	    isHost: false
	  });
	  const [players, setPlayers] = reactExports.useState([]);
	  const [page, setPage] = reactExports.useState(WAITING_PLAYERS);
	  const [mafia, setMafia] = reactExports.useState([]);
	  const [detective, setDetective] = reactExports.useState(null);
	  const [angel, setAngel] = reactExports.useState(null);
	  const [civilians, setCivilians] = reactExports.useState([]);
	  const [currentMafiaSelections, setCurrentMafiaSelections] = reactExports.useState([]);
	  const [currentMafiaVotes, setCurrentMafiaVotes] = reactExports.useState([]);
	  const [currentKill, setCurrentKill] = reactExports.useState(null);
	  const [detectiveIdentifications, setDetectiveIdentifications] = reactExports.useState([]);
	  const [currentDetectiveIdentification, setCurrentDetectiveIdentification] = reactExports.useState(null);
	  const [currentAngelProtection, setCurrentAngelProtection] = reactExports.useState(null);
	  const [currentCivilianTriviaFinishes, setCurrentCivilianTriviaFinishes] = reactExports.useState([]);
	  const [currentAccusations, setCurrentAccusations] = reactExports.useState([]);
	  const [recentlyAccused, setRecentlyAccused] = reactExports.useState(null);
	  const [currentLifeDeathSelections, setCurrentLifeDeathSelections] = reactExports.useState([]);
	  const [currentLifeDeathVotes, setCurrentLifeDeathVotes] = reactExports.useState([]);
	  const variables = reactExports.useMemo(() => {
	    return {
	      self,
	      setSelf,
	      players,
	      setPlayers,
	      page,
	      setPage,
	      mafia,
	      setMafia,
	      detective,
	      setDetective,
	      angel,
	      setAngel,
	      civilians,
	      setCivilians,
	      currentMafiaSelections,
	      setCurrentMafiaSelections,
	      currentMafiaVotes,
	      setCurrentMafiaVotes,
	      currentKill,
	      setCurrentKill,
	      detectiveIdentifications,
	      setDetectiveIdentifications,
	      currentDetectiveIdentification,
	      setCurrentDetectiveIdentification,
	      currentAngelProtection,
	      setCurrentAngelProtection,
	      currentCivilianTriviaFinishes,
	      setCurrentCivilianTriviaFinishes,
	      currentAccusations,
	      setCurrentAccusations,
	      recentlyAccused,
	      setRecentlyAccused,
	      currentLifeDeathSelections,
	      setCurrentLifeDeathSelections,
	      currentLifeDeathVotes,
	      setCurrentLifeDeathVotes
	    };
	  }, [self, setSelf, players, setPlayers, page, setPage, mafia, setMafia, detective, setDetective, angel, setAngel, civilians, setCivilians, currentMafiaSelections, setCurrentMafiaSelections, currentMafiaVotes, setCurrentMafiaVotes, currentKill, setCurrentKill, detectiveIdentifications, setDetectiveIdentifications, currentDetectiveIdentification, setCurrentDetectiveIdentification, currentAngelProtection, setCurrentAngelProtection, currentCivilianTriviaFinishes, setCurrentCivilianTriviaFinishes, currentAccusations, setCurrentAccusations, recentlyAccused, setRecentlyAccused, currentLifeDeathSelections, setCurrentLifeDeathSelections, currentLifeDeathVotes, setCurrentLifeDeathVotes]);
	  return /*#__PURE__*/React.createElement(VariableContext.Provider, {
	    value: variables
	  }, children);
	};

	const CommunicationContext = /*#__PURE__*/reactExports.createContext({
	  sendMessageToParent: () => {}
	});
	const CommunicationProvider = ({
	  children
	}) => {
	  const {
	    self,
	    setSelf,
	    setPlayers,
	    setPage,
	    setMafia,
	    setDetective,
	    setAngel,
	    setCivilians,
	    setCurrentMafiaSelections,
	    setCurrentMafiaVotes,
	    setCurrentKill,
	    setDetectiveIdentifications,
	    setCurrentDetectiveIdentification,
	    setCurrentAngelProtection,
	    setCurrentCivilianTriviaFinishes,
	    setCurrentAccusations,
	    setRecentlyAccused,
	    setCurrentLifeDeathSelections,
	    setCurrentLifeDeathVotes
	  } = reactExports.useContext(VariableContext);
	  const sendMessageToParent = message => {
	    parent.postMessage(message, "*");
	  };
	  const handleMessageFromParent = event => {
	    if (!event || !event.data) return;
	    const msg = event.data;
	    if (msg.name === "name") {
	      const newSelf = self;
	      newSelf.gamername = msg.player;
	      setSelf(newSelf);
	    } else if (msg.name === "state update") {
	      const {
	        state
	      } = msg;
	      if (!state) return;
	      if (state.players) {
	        const newSelf = state.players.find(player => player.gamername === self.gamername);
	        if (newSelf) setSelf(newSelf);
	      }
	      setPage(state.page);
	      setPlayers(state.players);
	      setMafia(state.mafia);
	      setDetective(state.detective);
	      setAngel(state.angel);
	      setCivilians(state.civilians);
	      setCurrentMafiaSelections(state.currentMafiaSelections);
	      setCurrentMafiaVotes(state.currentMafiaVotes);
	      setCurrentKill(state.currentKill);
	      setDetectiveIdentifications(state.detectiveIdentifications);
	      setCurrentDetectiveIdentification(state.currentDetectiveIdentification);
	      setCurrentAngelProtection(state.currentAngelProtection);
	      setCurrentCivilianTriviaFinishes(state.currentCivilianTriviaFinishes);
	      setCurrentAccusations(state.currentAccusations);
	      setRecentlyAccused(state.recentlyAccused);
	      setCurrentLifeDeathSelections(state.currentLifeDeathSelections);
	      setCurrentLifeDeathVotes(state.currentLifeDeathVotes);
	      sendMessageToParent(JSON.stringify({
	        name: "confirm state",
	        state
	      }));
	    }
	  };
	  reactExports.useEffect(() => {
	    window.addEventListener("message", handleMessageFromParent);
	    sendMessageToParent(JSON.stringify({
	      name: "ready"
	    }));
	    return () => {
	      window.removeEventListener("message", handleMessageFromParent);
	    };
	  }, []);
	  const communications = reactExports.useMemo(() => {
	    return {
	      sendMessageToParent
	    };
	  }, [sendMessageToParent]);
	  return /*#__PURE__*/React.createElement(CommunicationContext.Provider, {
	    value: communications
	  }, children);
	};

	const ActionContext = /*#__PURE__*/reactExports.createContext({
	  handleSetRealname: () => {},
	  handleHostStart: () => {},
	  handleHostSkip: () => {},
	  handleMafiaSelection: () => {},
	  handleMafiaVote: () => {}
	});
	const ActionProvider = ({
	  children
	}) => {
	  const {
	    sendMessageToParent
	  } = reactExports.useContext(CommunicationContext);
	  const handleSetRealname = realname => {
	    sendMessageToParent(JSON.stringify({
	      name: "SetRealname",
	      realname
	    }));
	  };
	  const handleHostStart = () => {
	    sendMessageToParent(JSON.stringify({
	      name: "HostStart"
	    }));
	  };
	  const handleHostSkip = () => {
	    sendMessageToParent(JSON.stringify({
	      name: "HostSkip"
	    }));
	  };
	  const handleMafiaSelection = gamername => {
	    sendMessageToParent(JSON.stringify({
	      name: "MafiaSelection",
	      selection: gamername
	    }));
	  };
	  const handleMafiaVote = gamername => {
	    sendMessageToParent(JSON.stringify({
	      name: "MafiaVote",
	      vote: gamername
	    }));
	  };
	  const actions = reactExports.useMemo(() => {
	    return {
	      handleSetRealname,
	      handleHostStart,
	      handleHostSkip,
	      handleMafiaSelection,
	      handleMafiaVote
	    };
	  }, [handleSetRealname, handleHostStart, handleHostSkip, handleMafiaSelection, handleMafiaVote]);
	  return /*#__PURE__*/React.createElement(ActionContext.Provider, {
	    value: actions
	  }, children);
	};

	function WaitingPlayers({
	  screenHeight,
	  minPlayers
	}) {
	  const {
	    players,
	    self
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleHostStart
	  } = reactExports.useContext(ActionContext);
	  const ready = players.every(player => player.realname && player.realname.length > 0);
	  const [bannerShown, setBannerShown] = reactExports.useState(false);
	  reactExports.useEffect(() => {
	    setTimeout(() => {
	      setBannerShown(true);
	    }, 1250);
	  }, []);
	  if (!self.isHost) {
	    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LottiePlayer, {
	      loop: false,
	      animationData: lottieJson$1,
	      play: true,
	      style: {
	        height: screenHeight - 221
	      }
	    }), /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        display: "flex",
	        flexDirection: "column",
	        alignItems: "center",
	        justifyContent: "flex-start",
	        width: "100%",
	        maxWidth: 400,
	        gap: 18,
	        opacity: bannerShown ? 1 : 0,
	        transition: "opacity ease-in 0.25s"
	      }
	    }, /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        height: 26
	      }
	    }), /*#__PURE__*/React.createElement(Text, {
	      size: 42
	    }, "welcome"), /*#__PURE__*/React.createElement(Text, {
	      size: 18,
	      opacity: 0.5
	    }, "waiting for other players to join"), /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        height: 21
	      }
	    }), /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        height: 18
	      }
	    })));
	  }
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LottiePlayer, {
	    loop: false,
	    animationData: lottieJson$1,
	    play: true,
	    style: {
	      height: screenHeight - 221
	    }
	  }), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      display: "flex",
	      flexDirection: "column",
	      alignItems: "center",
	      justifyContent: "flex-start",
	      width: "100%",
	      maxWidth: 400,
	      gap: 18,
	      opacity: bannerShown ? 1 : 0,
	      transition: "opacity ease-in 0.25s"
	    }
	  }, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 1
	    }
	  }), /*#__PURE__*/React.createElement(Text, {
	    size: 42
	  }, "welcome"), /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    opacity: 0.5
	  }, players.length >= minPlayers ? "press start once all players are in " : `requires ${minPlayers} players to start`), /*#__PURE__*/React.createElement(TheButton, {
	    disabled: players.length < minPlayers || !ready,
	    onClick: handleHostStart
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    weight: 700
	  }, "Start")), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 18
	    }
	  })));
	}

	const SpaceBetweenRowBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "center",
	  justifyContent: "space-between",
	  width: "100%"
	});
	const StandardPageBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "flex-start",
	  width: "100%",
	  height: "100vh",
	  maxWidth: 400,
	  gap: 18
	});
	const HeaderBox = styled$1(StandardPageBox)({
	  paddingLeft: 24,
	  paddingRight: 24,
	  height: "fit-content",
	  opacity: 0.75
	});
	const ConstrainedBox = styled$1(Box$1)(({
	  width = "100%",
	  height = "100%"
	}) => ({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "center",
	  maxWidth: width,
	  maxHeight: height
	}));
	const Line = styled$1(Box$1)(({
	  color = "var(--Main-White)"
	}) => ({
	  width: "100%",
	  height: 0.5,
	  backgroundColor: color
	}));
	const ScrollableFlexColumnBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "flex-start",
	  width: "100%",
	  overflowY: "scroll",
	  gap: 18
	});

	function Preparation() {
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 50
	    }
	  }), /*#__PURE__*/React.createElement(Text, null, "are you ready?"), /*#__PURE__*/React.createElement(ConstrainedBox, {
	    width: 248
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    opacity: 0.5
	  }, "make sure other players can\u2019t see your screen")));
	}

	function IdentityReveal({
	  screenHeight
	}) {
	  const {
	    self
	  } = reactExports.useContext(VariableContext);
	  const [yourRole, setYourRole] = reactExports.useState(false);
	  const [yourGoalIntro, setYourGoalIntro] = reactExports.useState(false);
	  const [yourGoal, setYourGoal] = reactExports.useState(false);
	  reactExports.useEffect(() => {
	    setTimeout(() => {
	      setYourRole(true);
	      setTimeout(() => {
	        setYourGoalIntro(true);
	        setTimeout(() => {
	          setYourGoal(true);
	        }, 5000);
	      }, 5000);
	    }, 0);
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: screenHeight / 2 - 55
	    }
	  }), /*#__PURE__*/React.createElement(Text, {
	    style: {
	      opacity: yourRole ? 1 : 0,
	      transition: "opacity 2s ease"
	    }
	  }, "you're a", self.role === "angel" ? "n" : null), /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    weight: 700,
	    color: self.role === "mafia" ? "var(--Main-Red)" : self.role === "detective" ? "var(--Main-Blue)" : self.role === "angel" ? "var(--Main-Yellow)" : "var(--Main-White)",
	    style: {
	      opacity: yourRole ? 1 : 0,
	      transition: "opacity 2s ease"
	    }
	  }, self.role), yourGoalIntro ? /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    opacity: 0.5,
	    style: {
	      opacity: yourGoalIntro ? 1 : 0,
	      transition: "opacity 1s ease"
	    }
	  }, "your goal:") : null, yourGoal ? /*#__PURE__*/React.createElement(Text, {
	    size: 24,
	    style: {
	      opacity: yourGoal ? 1 : 0,
	      transition: "opacity 1s ease"
	    }
	  }, self.role === "mafia" ? "kill" : self.role === "detective" ? "find the mafia" : self.role === "angel" ? "protect" : "survive") : null);
	}

	function Instructions() {
	  const {
	    self
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleHostSkip
	  } = reactExports.useContext(ActionContext);
	  const [skipPressed, setSkipPressed] = reactExports.useState(false);
	  const handleSkip = () => {
	    setSkipPressed(true);
	    handleHostSkip();
	  };
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    opacity: 0.5
	  }, "see screen for instructions"), self.isHost ? /*#__PURE__*/React.createElement(TheButton, {
	    onClick: handleSkip,
	    disabled: skipPressed
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    weight: 700
	  }, "skip")) : null);
	}

	const Skull = ({
	  color = "var(--Main-White)"
	}) => {
	  return /*#__PURE__*/React.createElement("svg", {
	    width: "14",
	    height: "20",
	    viewBox: "0 0 14 20",
	    fill: "none",
	    xmlns: "http://www.w3.org/2000/svg"
	  }, /*#__PURE__*/React.createElement("path", {
	    id: "Vector",
	    d: "M13.9051 7.01586C13.9051 7.01586 13.9279 2.85911 10.255 1.3625C6.58209 -0.134103 -0.738744 0.862172 0.143714 8.0136C0.1618 8.16038 0.348504 9.08302 0.45542 9.60627C0.502761 9.83937 0.457016 10.0803 0.3251 10.2846C0.120842 10.6021 1.57192 12.5239 1.7448 13.1057C1.79905 13.2885 1.87406 13.3997 1.95118 13.466C2.16874 13.6533 2.30598 13.9059 2.31289 14.18L2.36023 16.1491C2.36395 16.2974 2.40279 16.4437 2.47779 16.5753C3.63897 18.6205 5.39378 19.0799 6.07358 19.1823C6.22677 19.2057 6.38315 19.1935 6.53369 19.157C7.13263 19.0126 7.89753 19.1745 7.89753 19.1745C9.61883 19.529 11.0763 17.2215 11.4673 16.5358C11.5348 16.4173 11.5752 16.2871 11.5859 16.154L11.7486 14.1219C11.7662 13.9044 11.8572 13.6948 12.0194 13.5353C12.4183 13.1437 13.137 11.276 13.4295 10.7566C13.5763 10.4958 13.5934 10.3373 13.5609 10.2407C13.5056 10.0739 13.5146 9.89399 13.5678 9.72672C13.8301 8.89869 13.9056 7.01586 13.9056 7.01586H13.9051ZM3.65812 10.2714C2.40385 10.6611 2.01927 9.41804 2.01927 9.41804C2.01927 9.41804 1.4932 8.10089 1.89799 7.43329C2.30278 6.7657 3.71876 6.35753 4.8725 6.69157C6.0257 7.02562 5.82357 8.71338 5.82357 8.71338C5.92464 9.04742 4.91292 9.8818 3.65865 10.2714H3.65812ZM7.74541 12.2659C7.74541 12.2659 7.08955 12.4308 6.92571 11.5198C6.94593 11.8836 6.87199 12.4888 6.08634 12.1816C4.99377 11.7549 6.65284 9.084 6.65284 9.084C6.65284 9.084 6.65816 8.78702 6.92891 8.8431C7.19965 8.89918 7.21987 8.89869 7.30072 9.14008C7.38157 9.38147 8.85872 11.4784 7.74594 12.2664L7.74541 12.2659ZM11.8933 9.71502C11.8933 9.71502 11.1651 10.8839 9.48585 9.87302C9.48585 9.87302 8.15073 9.28247 8.08956 8.4598C8.02892 7.63762 8.67627 6.58331 9.40447 6.57259C10.1327 6.56186 11.4279 6.80276 11.8933 7.26652C12.3588 7.73027 11.8933 9.71502 11.8933 9.71502Z",
	    fill: color
	  }));
	};
	const FullLogo = () => {
	  return /*#__PURE__*/React.createElement("svg", {
	    xmlns: "http://www.w3.org/2000/svg",
	    width: "172",
	    height: "171",
	    viewBox: "0 0 172 171",
	    fill: "none"
	  }, /*#__PURE__*/React.createElement("path", {
	    fillRule: "evenodd",
	    clipRule: "evenodd",
	    d: "M82.6082 9.46585C82.6345 9.34416 82.6508 9.0886 82.6569 8.69919L82.667 8.70528L82.7481 3.64903C82.7542 3.25962 82.7461 3.01015 82.7238 2.90063C82.669 2.58221 82.5189 2.42198 82.2756 2.41792C82.1782 2.4159 82.0342 2.43618 81.8456 2.47471C81.657 2.51528 81.5069 2.5315 81.3974 2.5315C81.1175 2.52542 80.8842 2.40778 80.6997 2.17252C80.5131 1.93927 80.4238 1.65127 80.4299 1.31054C80.4461 0.422197 80.9025 -0.0138615 81.803 0.000335738C82.0829 0.0043921 82.5311 0.036843 83.1517 0.0956601C84.0867 0.182872 84.8534 0.231548 85.4497 0.241689C85.8634 0.247774 86.3258 0.249802 86.8369 0.245745C87.1777 0.237633 87.8591 0.237633 88.8813 0.241689C89.2951 0.247774 89.8001 0.243717 90.3964 0.22952L91.4936 0.156506C91.6397 0.146365 91.7005 0.14028 91.6762 0.14028C92.2826 0.150421 92.5828 0.422197 92.5746 0.957636C92.5706 1.17668 92.5422 1.41803 92.4895 1.68575C92.4104 2.0853 92.3678 2.41387 92.3637 2.66942C92.3617 2.86412 92.3901 3.15213 92.4509 3.52937C92.5118 3.90864 92.5402 4.19461 92.5381 4.38931C92.5321 4.81523 92.3982 5.16002 92.1386 5.42369C91.879 5.68735 91.5423 5.81512 91.1286 5.80904C90.7148 5.80093 90.3923 5.66301 90.1591 5.39124C89.9258 5.11946 89.8123 4.75844 89.8204 4.30819C89.8224 4.17433 89.8508 3.94514 89.9056 3.61658C89.9461 3.3732 89.9684 3.18458 89.9705 3.05072C89.9765 2.63697 89.6764 2.42604 89.0679 2.4159L87.0783 2.38345C86.6037 2.37533 86.3015 2.42807 86.1717 2.54164C86.0419 2.65522 85.9729 2.96756 85.9648 3.47866L85.9506 4.33658C85.9445 4.71382 86.1048 4.90447 86.4333 4.91056C86.9444 4.91867 87.202 4.74627 87.2081 4.39337C87.2101 4.35764 87.1985 4.24614 87.1789 4.05886L87.1777 4.04655C87.1797 4.01005 87.1797 3.96137 87.1797 3.90052C87.1675 3.83968 87.1635 3.79709 87.1635 3.77275C87.1716 3.29815 87.4616 3.06491 88.0336 3.07505C88.7008 3.0852 89.0314 3.40768 89.0213 4.04047C89.0192 4.16216 89.003 4.35686 88.9746 4.62458C88.9462 4.8923 88.928 5.23912 88.9219 5.66504C88.9178 5.90842 88.9361 6.27755 88.9767 6.7704C89.0172 7.26324 89.0355 7.63237 89.0314 7.87575C89.0192 8.61807 88.6968 8.98314 88.064 8.973C87.419 8.96083 87.1026 8.61604 87.1128 7.93457C87.1128 7.91023 87.1209 7.87373 87.133 7.82505V7.73378L87.1371 7.53299C87.1432 7.22877 86.914 7.0726 86.4516 7.06448C86.2204 7.06043 86.0703 7.08882 86.0033 7.14764C85.9344 7.20646 85.8999 7.34032 85.8959 7.54719L85.8796 8.6059L85.8877 9.22652C85.8837 9.42123 85.8999 9.57334 85.9344 9.68286C85.9912 9.89176 86.1534 9.99723 86.4212 10.0013C86.553 10.0033 86.7497 9.98506 87.0053 9.94653C87.2608 9.90799 87.4555 9.88974 87.5894 9.89176C88.3074 9.90393 88.6603 10.3238 88.6461 11.1513C88.64 11.5407 88.5102 11.851 88.2567 12.0842C88.0031 12.3175 87.6705 12.431 87.2568 12.425C86.9404 12.4209 86.4678 12.3824 85.8431 12.3114C85.2164 12.2404 84.7459 12.2039 84.4295 12.1978C83.8089 12.1877 83.316 12.1978 82.9509 12.2282C82.1092 12.2992 81.6407 12.3337 81.5434 12.3337C81.1519 12.3256 80.8416 12.1998 80.6084 11.9524C80.3752 11.705 80.2616 11.3804 80.2677 10.9789C80.2717 10.626 80.3711 10.34 80.5638 10.1169C80.7564 9.89379 80.9978 9.7863 81.2899 9.79036C81.3872 9.79238 81.5312 9.81469 81.7259 9.86134C81.9186 9.90799 82.0585 9.93233 82.1437 9.93233C82.3871 9.93638 82.5412 9.78224 82.6082 9.46585ZM62.9916 15.4104C63.2736 15.5849 63.5981 15.6295 63.9672 15.5463C64.0848 15.52 64.4499 15.3942 65.0604 15.1691C65.3261 15.0717 65.7013 14.9683 66.188 14.8588C66.6383 14.7574 66.9932 14.6965 67.2508 14.6762C67.839 14.6316 68.2162 14.589 68.3825 14.5525C68.7151 14.4775 68.9545 14.299 69.1046 14.0171C69.2526 13.7352 69.2851 13.4025 69.1999 13.0233C69.0417 12.3235 68.7435 12.0214 68.3055 12.1207C68.2466 12.1349 68.1594 12.1633 68.0438 12.2079C67.9282 12.2526 67.841 12.281 67.7822 12.2952C67.5794 12.3398 67.4577 12.2688 67.4151 12.0781C67.2326 11.2709 67.482 10.7902 68.1574 10.6381L70.5263 10.1047C70.7271 10.0601 70.9178 10.1291 71.0962 10.3136C71.2747 10.4982 71.4005 10.7497 71.4715 11.0701C71.5282 11.3196 71.4431 11.4697 71.2179 11.5204C71.1591 11.5346 71.0678 11.5447 70.9441 11.5528C70.8204 11.561 70.7312 11.5731 70.6703 11.5853C70.2201 11.6867 70.072 12.0883 70.2302 12.788C70.3134 13.1551 70.4858 13.439 70.7474 13.6358C71.009 13.8325 71.3011 13.8954 71.6215 13.8224C71.7757 13.7879 72.1448 13.654 72.7289 13.4228C72.877 13.364 73.1771 13.2849 73.6294 13.1835C74.0452 13.0902 74.3859 13.0253 74.6516 12.9908C74.7591 12.9665 74.9843 12.9462 75.3311 12.932C75.611 12.9056 75.8361 12.8752 76.0024 12.8367C76.3817 12.7515 76.6636 12.5629 76.8482 12.2728C77.0327 11.9828 77.0794 11.6401 76.9921 11.2486C76.8157 10.4657 76.3959 10.1473 75.7306 10.2974L75.5339 10.342C75.3635 10.4171 75.2439 10.4637 75.1708 10.4799C74.9335 10.5327 74.6577 10.2771 74.3434 9.71126L70.358 2.63697C70.0639 2.10559 69.7718 1.80542 69.4818 1.73849C69.1918 1.67358 68.5488 1.75268 67.551 1.97578C66.6606 2.17657 66.0988 2.37128 65.8676 2.5599C65.5573 2.84181 65.3484 3.41376 65.2429 4.27168L64.3586 11.8226C64.3099 12.2201 64.2775 12.4574 64.2572 12.5365C64.17 12.8184 64.0138 12.9847 63.7887 13.0354C63.7177 13.0517 63.6021 13.0679 63.4439 13.0841C63.2857 13.1003 63.1701 13.1166 63.0991 13.1328C62.4704 13.2748 62.2493 13.7615 62.4359 14.5911C62.5191 14.9582 62.7016 15.2299 62.9835 15.4044L62.9916 15.4104ZM67.9708 3.98165L69.6461 7.4397C69.7069 7.59992 69.7374 7.67496 69.7333 7.6628C69.7698 7.82911 69.6339 7.94674 69.3256 8.0157L68.2223 8.26314C67.9262 8.33007 67.7619 8.29153 67.7295 8.14956C67.7193 8.10291 67.7153 8.05829 67.7193 8.02178L67.9708 3.97962V3.98165ZM39.4648 16.459C39.2193 16.5908 38.9577 16.599 38.6819 16.4854L38.6839 16.4773C38.4081 16.3637 38.1911 16.1568 38.0288 15.8566C37.6069 15.0738 37.7935 14.4694 38.5866 14.0434C38.8421 13.9055 39.2863 13.7027 39.915 13.433C40.5438 13.1652 41.0082 12.9503 41.3084 12.788C41.7891 12.5284 42.2758 12.2262 42.7666 11.8794C43.0972 11.6482 43.3649 11.4758 43.5678 11.3663C43.8355 11.2223 44.0586 11.1857 44.235 11.2567C44.4115 11.3277 44.6569 11.5407 44.9733 11.8956L49.4637 17.0452L47.8371 10.6665C47.7012 10.1311 47.6586 9.73762 47.7073 9.48207C47.758 9.22652 47.9162 9.02776 48.1839 8.88376C48.4192 8.75599 48.7924 8.5917 49.3035 8.38483C49.8146 8.17998 50.1918 8.00962 50.4392 7.87778C50.6968 7.73987 51.3114 7.35249 52.2828 6.71969C52.5607 6.54324 52.7676 6.4175 52.9075 6.34245C53.2604 6.15383 53.6012 6.10516 53.9277 6.19845C54.2542 6.29175 54.5159 6.52093 54.7126 6.886C54.8749 7.18618 54.9276 7.48432 54.8708 7.77638C54.814 8.07046 54.6619 8.28342 54.4165 8.41525C54.3212 8.46798 54.1751 8.52072 53.9845 8.57548C53.7938 8.63024 53.66 8.67689 53.5849 8.71745C53.2969 8.87362 53.3456 9.30968 53.731 10.0277L56.1262 14.4815C56.5177 15.2097 56.8523 15.4997 57.1322 15.3496C57.2174 15.3029 57.335 15.2157 57.4872 15.0859C57.6372 14.9561 57.7569 14.8689 57.8421 14.8223C58.0875 14.6884 58.3532 14.6783 58.6331 14.7898C58.913 14.9014 59.134 15.1062 59.2963 15.4064C59.493 15.7694 59.5397 16.1142 59.4383 16.4387C59.3369 16.7612 59.1077 17.0188 58.7548 17.2094C58.5499 17.319 58.1909 17.4711 57.6737 17.6658C57.329 17.7956 56.9963 17.9477 56.6739 18.1201C56.469 18.2296 56.183 18.4182 55.8159 18.6839C55.4488 18.9496 55.1629 19.1382 54.96 19.2478C54.6376 19.4201 54.3212 19.4526 54.0068 19.3451C53.6924 19.2376 53.4409 19.0064 53.2503 18.6535C52.8933 17.9903 52.9339 17.54 53.374 17.3027C53.4389 17.2683 53.4896 17.248 53.5282 17.2419C53.5586 17.2236 53.5971 17.2034 53.6397 17.181C53.6884 17.1689 53.7188 17.1608 53.7289 17.1547C53.9013 17.0634 53.9399 16.891 53.8445 16.6375C53.7979 16.5239 53.7046 16.3393 53.5667 16.0818L50.3074 10.0216L52.3275 19.1321C52.5039 19.9231 52.3721 20.4342 51.932 20.6715L50.9037 21.2252C50.4737 21.4564 50.0153 21.3104 49.5266 20.7851L43.0729 13.9136L46.3322 19.9738C46.6019 20.4789 46.8027 20.7364 46.9345 20.7486C46.9832 20.7628 47.0522 20.7486 47.1374 20.702C47.1576 20.6918 47.1881 20.6695 47.2246 20.635C47.2408 20.6259 47.257 20.6173 47.2732 20.6087C47.2895 20.6 47.3057 20.5914 47.3219 20.5823C47.3483 20.5559 47.3929 20.5235 47.4578 20.489C47.8858 20.2578 48.2772 20.4707 48.6281 21.1238C48.8248 21.4889 48.8836 21.8296 48.8066 22.1481C48.7295 22.4665 48.5307 22.7119 48.2082 22.8843C48.0582 22.9654 47.8574 23.0526 47.6038 23.1479C47.448 23.2054 47.3207 23.2521 47.2215 23.2885L47.2198 23.2891L47.2169 23.2902L47.2143 23.2911L47.2132 23.2915C47.1102 23.3293 47.0385 23.3556 46.9974 23.371C46.7601 23.4704 46.4985 23.5982 46.2085 23.7544C45.8434 23.9511 45.5473 24.1316 45.3181 24.2959L44.3912 24.9611C44.0586 25.1396 43.7239 25.1741 43.3893 25.0646C43.0546 24.955 42.795 24.7279 42.6105 24.3851C42.4421 24.0728 42.3894 23.7746 42.4482 23.4866C42.507 23.1986 42.6652 22.9857 42.9228 22.8478C43.008 22.8032 43.1439 22.7545 43.3305 22.7017C43.5171 22.651 43.6529 22.6024 43.7381 22.5557C43.9511 22.4401 44.0099 22.2292 43.9146 21.9209C43.8781 21.8033 43.7686 21.572 43.584 21.2293L41.1887 16.7754C41.0041 16.4326 40.8743 16.2197 40.8013 16.1345C40.5985 15.883 40.3896 15.8161 40.1746 15.9317C40.0894 15.9783 39.9738 16.0655 39.8278 16.1913C39.6818 16.317 39.5621 16.4063 39.4648 16.459ZM131.753 27.9223C131.453 27.6404 131.187 27.4152 130.958 27.2509H130.956L130.031 26.5837C129.757 26.3261 129.617 26.0198 129.615 25.6669C129.611 25.314 129.745 24.9956 130.011 24.7117C130.252 24.4541 130.518 24.3081 130.81 24.2736C131.102 24.2391 131.353 24.3202 131.566 24.521C131.637 24.5879 131.727 24.7015 131.836 24.8618C131.946 25.022 132.035 25.1356 132.106 25.2025C132.282 25.3688 132.501 25.3566 132.763 25.168C132.864 25.097 133.047 24.9185 133.315 24.6346L136.775 20.9494C137.04 20.6655 137.203 20.4768 137.259 20.3795C137.432 20.1057 137.43 19.8866 137.251 19.7203C137.18 19.6534 137.061 19.5702 136.894 19.4729C136.728 19.3755 136.604 19.2883 136.525 19.2133C136.32 19.0206 136.229 18.7772 136.249 18.4791C136.27 18.1809 136.397 17.9092 136.631 17.6597C137.239 17.0127 137.87 16.9965 138.527 17.613C138.74 17.8138 139.073 18.1688 139.529 18.6799C139.983 19.191 140.334 19.5621 140.584 19.7954C140.983 20.1706 141.425 20.5356 141.91 20.8906C142.237 21.1299 142.484 21.3287 142.652 21.4869C142.875 21.6937 142.981 21.8925 142.969 22.0832C142.959 22.2718 142.835 22.574 142.598 22.9857L139.142 28.8796L144.672 25.31C145.135 25.0118 145.496 24.8455 145.753 24.8111C146.011 24.7766 146.25 24.8638 146.471 25.0727C146.666 25.2572 146.944 25.5574 147.301 25.9773C147.658 26.3971 147.938 26.7033 148.143 26.894C148.356 27.0948 148.915 27.5552 149.826 28.2752C150.082 28.4821 150.268 28.6403 150.384 28.7477C150.678 29.0216 150.83 29.3298 150.846 29.6685C150.862 30.0072 150.729 30.3277 150.445 30.6299C150.211 30.8794 149.948 31.0234 149.652 31.0619C149.356 31.1025 149.106 31.0254 148.901 30.8347C148.822 30.7597 148.725 30.64 148.613 30.4758C148.502 30.3115 148.414 30.1999 148.352 30.1411C148.112 29.916 147.713 30.1005 147.155 30.6948L143.695 34.38C143.129 34.9824 142.961 35.3921 143.192 35.6091C143.263 35.676 143.385 35.7612 143.555 35.8626C143.725 35.964 143.847 36.0492 143.918 36.1161C144.123 36.3068 144.216 36.5542 144.2 36.8564C144.182 37.1586 144.058 37.4344 143.825 37.6819C143.541 37.9841 143.23 38.1382 142.89 38.1443C142.549 38.1504 142.233 38.0145 141.94 37.7407C141.772 37.5825 141.513 37.2884 141.164 36.8605C140.93 36.5745 140.681 36.3068 140.415 36.0573C140.247 35.8991 139.977 35.6882 139.608 35.4245C139.239 35.1608 138.969 34.9499 138.801 34.7917C138.535 34.5423 138.403 34.2522 138.405 33.9196C138.407 33.587 138.545 33.2746 138.821 32.9826C139.338 32.4329 139.778 32.3295 140.141 32.6702C140.194 32.7209 140.231 32.7615 140.249 32.796C140.259 32.805 140.269 32.8149 140.28 32.8253L140.28 32.8257C140.299 32.8434 140.319 32.8629 140.342 32.8832L140.347 32.8899C140.36 32.909 140.371 32.9247 140.38 32.9364C140.388 32.9472 140.393 32.9546 140.397 32.9582C140.539 33.0921 140.713 33.0738 140.924 32.9035C141.016 32.8224 141.162 32.6763 141.362 32.4634L146.074 27.4457L138.077 32.2565C137.385 32.6743 136.856 32.7108 136.493 32.3701L135.641 31.571C135.286 31.2383 135.28 30.7556 135.621 30.1249L140.085 21.8235L135.373 26.8413C134.982 27.257 134.801 27.5308 134.832 27.6586C134.834 27.7093 134.87 27.7681 134.941 27.8351C134.959 27.8513 134.99 27.8716 135.035 27.8959C135.048 27.9081 135.061 27.9208 135.074 27.9334C135.087 27.9461 135.1 27.9588 135.114 27.971C135.148 27.9872 135.193 28.0196 135.245 28.0703C135.6 28.405 135.523 28.841 135.016 29.3826C134.732 29.6827 134.428 29.847 134.102 29.8754C133.775 29.9038 133.479 29.7923 133.213 29.5428C133.087 29.4252 132.941 29.2609 132.771 29.052L132.582 28.8166L132.578 28.8117C132.473 28.6807 132.402 28.593 132.367 28.549C132.197 28.3563 131.992 28.1474 131.753 27.9223ZM121.675 83.9487C121.387 84.9405 121.336 86.0012 121.636 86.9889L121.638 86.991C121.811 87.5609 121.722 88.4979 120.925 90.0413C120.384 91.0894 119.573 93.0679 118.653 95.3114L118.653 95.3115C116.88 99.6367 114.704 104.947 113.28 106.472C112.4 107.415 111.909 108.654 111.814 109.94L110.93 121.957C110.871 122.746 110.654 123.514 110.287 124.216C108.167 128.27 100.265 141.918 90.9338 139.821C90.9338 139.821 86.7862 138.866 83.5391 139.718C82.7238 139.93 81.876 140.003 81.0444 139.866C77.3613 139.257 67.8471 136.541 61.5516 124.447C61.146 123.669 60.935 122.803 60.9148 121.926L60.6572 110.283C60.6207 108.664 59.8763 107.171 58.6959 106.062C58.2781 105.668 57.8725 105.013 57.5784 103.93C57.1985 102.538 55.6847 99.848 54.09 97.0145C51.7433 92.8447 49.2213 88.3635 49.8794 87.2465C50.5933 86.0377 50.8428 84.6139 50.5852 83.2348C50.0052 80.1398 48.9931 74.6819 48.8958 73.8159C44.1133 31.5243 83.8028 25.6345 103.715 34.4834C123.628 43.3344 123.504 67.9159 123.504 67.9159C123.504 67.9159 123.095 79.0527 121.675 83.9487ZM59.0651 82.1213C59.0651 82.1213 61.15 89.4714 67.9505 87.1674H67.9485C74.749 84.8634 80.2332 79.9288 79.6855 77.9534C79.6855 77.9534 80.7828 67.9707 74.5299 65.9973C68.2791 64.0218 60.6004 66.4354 58.4059 70.3842C56.2134 74.3331 59.0651 82.1213 59.0651 82.1213ZM85.6646 94.552C86.553 99.9389 90.1084 98.9633 90.1084 98.9633H90.1063C95.1819 95.0431 90.3168 85.6398 88.3857 81.9075C88.0219 81.2043 87.7623 80.7025 87.6928 80.4764C87.2627 79.0765 87.1493 79.0511 85.7572 78.7396L85.6788 78.7221C84.2124 78.3935 84.184 80.1479 84.184 80.1479C84.184 80.1479 75.1891 95.9433 81.1134 98.4664C85.3746 100.282 85.7741 96.7039 85.6646 94.552ZM99.5414 84.8107C108.646 90.7897 112.595 83.8777 112.595 83.8777L112.593 83.8757C112.593 83.8757 115.116 72.1386 112.593 69.3965C110.07 66.6544 103.05 65.2286 99.1013 65.2935C95.1524 65.3584 91.6437 71.591 91.9723 76.4546C92.3008 81.3181 99.5414 84.8107 99.5414 84.8107ZM148.128 41.4644C147.834 41.4725 147.628 41.3772 147.506 41.1805C147.467 41.1176 147.415 41.0142 147.35 40.8702C147.283 40.7262 147.23 40.6227 147.191 40.5599C146.855 40.0082 146.323 39.9555 145.597 40.3996C145.275 40.5964 145.078 40.856 145.003 41.1784C144.93 41.5009 144.991 41.8234 145.188 42.1459C145.251 42.2493 145.488 42.5556 145.895 43.0606C146.072 43.2796 146.291 43.6041 146.551 44.0301C146.792 44.4256 146.962 44.7399 147.064 44.9772C147.295 45.5208 147.455 45.8635 147.544 46.0096C147.721 46.2996 147.968 46.47 148.285 46.5207C148.599 46.5714 148.924 46.4943 149.256 46.2915C149.869 45.9183 150.059 45.539 149.824 45.1537C149.792 45.1009 149.737 45.0279 149.658 44.9346C149.579 44.8393 149.524 44.7663 149.491 44.7156C149.384 44.5391 149.412 44.3992 149.579 44.2978C150.284 43.8678 150.82 43.9469 151.181 44.5391L152.444 46.6119C152.552 46.7884 152.548 46.9912 152.43 47.2204C152.313 47.4476 152.114 47.6483 151.834 47.8187C151.615 47.9526 151.447 47.9201 151.327 47.7214C151.294 47.6686 151.256 47.5875 151.207 47.4739C151.159 47.3603 151.12 47.2772 151.088 47.2265C150.846 46.831 150.42 46.8208 149.808 47.194C149.485 47.3908 149.274 47.6443 149.171 47.9566C149.07 48.269 149.104 48.5651 149.274 48.845C149.358 48.9809 149.601 49.2871 150.007 49.7658C150.11 49.8874 150.282 50.1471 150.522 50.5425C150.743 50.9056 150.913 51.2078 151.033 51.4491C151.09 51.5424 151.181 51.7513 151.307 52.0738C151.42 52.3314 151.524 52.5342 151.611 52.6782C151.814 53.0108 152.081 53.2177 152.416 53.2988C152.751 53.38 153.089 53.3151 153.432 53.1062C154.118 52.6884 154.284 52.1874 153.929 51.6053L153.824 51.4329C153.698 51.297 153.615 51.1956 153.578 51.1348C153.452 50.9259 153.607 50.5831 154.041 50.1045L159.464 44.0625C159.874 43.6123 160.064 43.2411 160.034 42.945C160.003 42.6489 159.722 42.0668 159.19 41.1926C158.716 40.4138 158.351 39.9433 158.097 39.7851C157.73 39.5802 157.123 39.566 156.276 39.7425L148.838 41.3265C148.447 41.4076 148.21 41.4523 148.128 41.4604V41.4644ZM153.398 43.3405C153.438 43.3162 153.479 43.2979 153.515 43.2898L157.424 42.2331L154.686 44.9286C154.552 45.0381 154.491 45.0888 154.501 45.0827C154.355 45.1719 154.201 45.0807 154.037 44.8109L153.448 43.8455C153.29 43.5859 153.274 43.4176 153.398 43.3425V43.3405ZM162.423 56.0754C162.794 55.9537 163.027 55.8624 163.123 55.8057V55.7975C163.403 55.6414 163.506 55.4467 163.429 55.2155C163.399 55.1222 163.334 54.9944 163.234 54.8281C163.135 54.6638 163.068 54.5279 163.034 54.4245C162.944 54.1588 162.981 53.8992 163.141 53.6477C163.301 53.3962 163.545 53.2177 163.867 53.1102C164.711 52.8324 165.273 53.1183 165.557 53.9742C165.644 54.2399 165.763 54.676 165.912 55.2804C166.137 56.193 166.344 56.9333 166.53 57.4992C166.662 57.8927 166.812 58.3307 166.984 58.8114C167.104 59.1298 167.329 59.7728 167.662 60.7402C167.792 61.1337 167.962 61.6103 168.173 62.1681L168.603 63.1801C168.66 63.316 168.686 63.3708 168.678 63.3485C168.869 63.9265 168.71 64.2997 168.201 64.468C167.994 64.537 167.755 64.5897 167.485 64.6282C167.082 64.685 166.759 64.752 166.516 64.8331C166.331 64.8939 166.07 65.0156 165.733 65.1982C165.396 65.3807 165.135 65.5024 164.95 65.5632C164.547 65.6971 164.177 65.6849 163.843 65.5267C163.51 65.3685 163.277 65.0927 163.147 64.6992C163.017 64.3078 163.042 63.9569 163.222 63.6466C163.403 63.3383 163.705 63.1132 164.133 62.9712C164.261 62.9307 164.488 62.8799 164.814 62.8232C165.056 62.7806 165.24 62.74 165.368 62.6974C165.759 62.5676 165.861 62.2147 165.67 61.6367L165.045 59.7484C164.897 59.2982 164.747 59.0305 164.597 58.9453C164.447 58.8601 164.129 58.8986 163.644 59.0589L162.829 59.3286C162.47 59.4462 162.342 59.6612 162.445 59.9736C162.608 60.4583 162.855 60.6469 163.19 60.5354C163.224 60.5232 163.332 60.4766 163.508 60.3914L163.523 60.3863L163.559 60.3734L163.583 60.3653C163.602 60.3588 163.623 60.3519 163.646 60.3447C163.701 60.3143 163.737 60.296 163.762 60.2879C164.212 60.1378 164.526 60.3346 164.707 60.8781C164.916 61.513 164.721 61.9308 164.121 62.1295C164.005 62.166 163.816 62.2167 163.555 62.2776C163.291 62.3384 162.958 62.4358 162.555 62.5696C162.324 62.6467 161.981 62.7846 161.529 62.9854C161.074 63.1862 160.734 63.3241 160.502 63.4012C159.799 63.6344 159.346 63.4499 159.148 62.8495C158.945 62.237 159.168 61.8253 159.815 61.6103C159.837 61.6042 159.874 61.5981 159.924 61.5941C159.946 61.5864 159.965 61.5804 159.983 61.5749C159.993 61.5717 160.003 61.5687 160.012 61.5657L160.202 61.5028C160.49 61.4075 160.563 61.1398 160.417 60.7017C160.344 60.4826 160.269 60.3508 160.19 60.3062C160.111 60.2616 159.973 60.2717 159.776 60.3366L158.77 60.6692L158.186 60.8822C158.002 60.943 157.864 61.0079 157.77 61.0769C157.592 61.2006 157.545 61.3892 157.63 61.6428C157.671 61.7705 157.752 61.949 157.874 62.1782C157.993 62.4094 158.075 62.5859 158.117 62.7136C158.342 63.3951 158.062 63.8656 157.278 64.1253C156.908 64.249 156.572 64.2287 156.268 64.0664C155.963 63.9021 155.746 63.6263 155.616 63.2328C155.517 62.9327 155.399 62.4763 155.26 61.8618C155.122 61.2473 155.002 60.7909 154.903 60.4907C154.708 59.9006 154.535 59.4381 154.385 59.1035C154.041 58.3328 153.852 57.9028 153.822 57.8095C153.698 57.4383 153.716 57.1037 153.872 56.8015C154.028 56.4993 154.298 56.2843 154.679 56.1586C155.016 56.047 155.318 56.047 155.592 56.1545C155.866 56.262 156.048 56.4547 156.14 56.7325C156.17 56.8258 156.197 56.9698 156.217 57.1686C156.237 57.3653 156.261 57.5053 156.288 57.5864C156.365 57.8176 156.562 57.9129 156.882 57.8703C157.006 57.8541 157.253 57.7852 157.622 57.6635L162.423 56.0754ZM167.727 71.4673C167.741 71.5768 167.782 71.7208 167.848 71.9013C167.915 72.0818 167.956 72.2218 167.968 72.3191C168.001 72.5605 167.863 72.7308 167.556 72.8343C167.451 72.8728 167.206 72.9174 166.82 72.9681L161.807 73.6293C161.421 73.68 161.166 73.7023 161.042 73.6942C160.719 73.676 160.543 73.5441 160.513 73.3048C160.5 73.2074 160.502 73.0634 160.521 72.8708C160.539 72.6781 160.541 72.5341 160.529 72.4367C160.49 72.1467 160.348 71.9236 160.099 71.7654C159.851 71.6072 159.551 71.5525 159.202 71.5991C158.805 71.6518 158.501 71.8141 158.292 72.0879C158.083 72.3617 158.004 72.6903 158.054 73.0776C158.083 73.2947 158.18 73.7551 158.346 74.4568C158.484 75.0389 158.59 75.6027 158.661 76.1463C158.707 76.4951 158.732 76.8176 158.734 77.1117L158.74 78.2718C158.732 78.3103 158.734 78.3651 158.744 78.4361C158.793 78.7971 158.957 79.079 159.243 79.2818C159.529 79.4847 159.861 79.5597 160.249 79.509C160.588 79.4644 160.857 79.3325 161.062 79.1155C161.267 78.8985 161.35 78.6511 161.314 78.3732C161.301 78.2759 161.261 78.1339 161.194 77.9473C161.127 77.7607 161.087 77.6187 161.074 77.5214C161.032 77.1948 161.419 76.9778 162.241 76.8703L167.254 76.2092C168.061 76.1017 168.487 76.2112 168.532 76.5377C168.544 76.6351 168.542 76.7811 168.526 76.9799C168.51 77.1786 168.508 77.3267 168.52 77.422C168.556 77.6999 168.702 77.9169 168.956 78.0731C169.209 78.2292 169.505 78.286 169.844 78.2414C170.724 78.1258 171.108 77.6268 170.99 76.7466C170.964 76.5418 170.879 76.126 170.735 75.5013C170.591 74.8766 170.497 74.3939 170.453 74.0573C170.398 73.6354 170.363 73.1973 170.353 72.745C170.339 72.0717 170.319 71.6458 170.294 71.4632C170.242 71.0657 170.083 70.7635 169.816 70.5607C169.55 70.3558 169.211 70.2808 168.802 70.3355C168.463 70.3802 168.193 70.51 167.988 70.729C167.784 70.946 167.7 71.1935 167.737 71.4713L167.727 71.4673ZM169.727 88.4066C170.522 88.7514 171.01 89.1124 171.193 89.4897L171.185 89.4876C171.3 89.7635 171.329 90.3577 171.27 91.2684C171.205 92.2886 171.098 92.9274 170.954 93.187C170.81 93.4446 170.441 93.6413 169.846 93.7732L161.934 95.5985C161.302 95.7385 160.979 95.9312 160.963 96.1745C160.959 96.2476 160.969 96.3753 160.993 96.5599L160.981 96.7607C160.936 97.4401 160.513 97.7545 159.711 97.7018C159.312 97.6754 158.998 97.5314 158.77 97.2738C158.543 97.0142 158.444 96.6917 158.468 96.3023C158.48 96.132 158.513 95.9068 158.568 95.631C158.651 95.2963 158.695 95.0732 158.703 94.9637C158.744 94.698 158.778 94.3532 158.807 93.9273C158.837 93.4669 158.845 93.1566 158.831 92.9964C158.774 92.3717 158.752 91.9803 158.762 91.8221C158.783 91.4935 158.925 91.2319 159.188 91.0351C159.452 90.8384 159.77 90.7532 160.148 90.7776C160.865 90.8242 161.208 91.0777 161.178 91.5402C161.174 91.601 161.16 91.6923 161.133 91.8119C161.107 91.9316 161.093 92.0229 161.089 92.0837C161.072 92.3149 161.192 92.4386 161.448 92.4549C161.776 92.4772 162.054 92.4285 162.281 92.3088C162.508 92.1892 162.628 92.0269 162.642 91.82L162.8 89.3984C162.847 88.7048 162.456 88.3336 161.63 88.2788C161.435 88.2646 161.332 88.362 161.318 88.5689C161.314 88.6297 161.318 88.723 161.328 88.8447C161.338 88.9684 161.342 89.0597 161.338 89.1205C161.308 89.5708 160.934 89.7716 160.218 89.7249C159.829 89.7006 159.521 89.5769 159.292 89.3538C159.062 89.1307 158.959 88.8508 158.981 88.5101C158.991 88.3397 159.058 87.9665 159.182 87.3885C159.237 87.137 159.277 86.778 159.308 86.3176C159.34 85.8187 159.348 85.4293 159.33 85.1473C159.288 84.4983 159.269 84.113 159.277 83.9913C159.302 83.6161 159.438 83.3159 159.683 83.0948C159.93 82.8717 160.241 82.7744 160.618 82.7987C161.468 82.8535 161.873 83.2043 161.831 83.8473C161.825 83.9203 161.809 84.0359 161.78 84.1921C161.752 84.3482 161.734 84.4638 161.729 84.5369C161.713 84.7681 161.829 84.9648 162.074 85.1271C162.145 85.1676 162.364 85.267 162.731 85.4252L169.727 88.4066ZM165.21 91.7511C165.198 91.7511 165.277 91.743 165.449 91.7308H165.447L169.238 91.1L165.431 89.7168C165.396 89.7026 165.354 89.6945 165.305 89.6905C165.161 89.6803 165.078 89.8263 165.058 90.1306L164.985 91.2603C164.964 91.5767 165.039 91.741 165.21 91.7511ZM166.039 112.722C165.731 112.576 165.433 112.54 165.143 112.611C164.853 112.682 164.648 112.844 164.528 113.098C164.482 113.197 164.437 113.341 164.394 113.53C164.352 113.718 164.309 113.856 164.269 113.945C164.165 114.164 163.956 114.235 163.644 114.154C163.534 114.13 163.303 114.033 162.952 113.866L158.383 111.7C158.03 111.534 157.805 111.412 157.706 111.339C157.446 111.149 157.369 110.944 157.472 110.723C157.515 110.635 157.594 110.514 157.714 110.362C157.833 110.21 157.914 110.09 157.955 110.001C158.081 109.737 158.081 109.471 157.959 109.204C157.835 108.936 157.616 108.727 157.296 108.577C156.943 108.411 156.6 108.382 156.266 108.492C155.931 108.601 155.681 108.828 155.521 109.169L155.168 110.254C155.081 110.522 154.949 110.844 154.773 111.218C154.633 111.514 154.495 111.773 154.365 111.994L154.275 112.13C154.212 112.225 154.123 112.359 154.008 112.532C153.86 112.757 153.751 112.948 153.678 113.102C153.521 113.432 153.505 113.747 153.633 114.049C153.759 114.351 154.008 114.59 154.383 114.769C155.055 115.087 155.495 115.026 155.702 114.586C155.732 114.519 155.75 114.469 155.756 114.43L155.803 114.331C155.813 114.282 155.823 114.246 155.833 114.223C155.876 114.136 155.921 114.083 155.969 114.065C156.083 113.998 156.397 114.085 156.915 114.331L163.133 117.28L153.862 115.572C153.156 115.44 152.7 115.594 152.491 116.032L151.99 117.087C151.777 117.537 151.974 118.028 152.584 118.562L159.612 124.701L153.394 121.752C153.13 121.626 152.945 121.533 152.84 121.47C152.613 121.322 152.542 121.16 152.625 120.985C152.631 120.975 152.649 120.949 152.68 120.91C152.7 120.866 152.718 120.827 152.734 120.795C152.761 120.766 152.789 120.72 152.822 120.655C153.035 120.204 152.801 119.817 152.12 119.493C151.757 119.32 151.418 119.284 151.102 119.383C150.785 119.482 150.548 119.697 150.392 120.026C150.293 120.235 150.175 120.555 150.037 120.989C149.899 121.421 149.781 121.744 149.682 121.953C149.526 122.283 149.347 122.602 149.147 122.912C148.846 123.376 148.646 123.711 148.546 123.92C148.374 124.283 148.343 124.626 148.453 124.946C148.562 125.267 148.806 125.516 149.179 125.695C149.487 125.841 149.787 125.875 150.08 125.798C150.372 125.721 150.578 125.557 150.698 125.303C150.741 125.216 150.783 125.074 150.828 124.879C150.873 124.685 150.917 124.545 150.958 124.455C151.094 124.169 151.534 124.204 152.282 124.559L156.852 126.725C157.588 127.074 157.886 127.396 157.746 127.694C157.71 127.772 157.63 127.889 157.509 128.047C157.387 128.206 157.302 128.333 157.255 128.433C157.136 128.686 157.14 128.946 157.267 129.216C157.395 129.485 157.614 129.692 157.921 129.838C158.294 130.015 158.641 130.045 158.959 129.927C159.277 129.81 159.523 129.569 159.695 129.205C159.762 129.061 159.855 128.838 159.975 128.53C160.383 127.443 160.648 126.768 160.774 126.504C160.894 126.25 161.099 125.889 161.389 125.421C161.679 124.952 161.88 124.597 161.995 124.354C162.125 124.078 162.135 123.825 162.023 123.589C161.912 123.354 161.644 123.062 161.216 122.711L156.124 118.539L162.792 120.024C163.257 120.123 163.581 120.15 163.766 120.101C163.95 120.054 164.106 119.892 164.238 119.618C164.338 119.409 164.451 119.113 164.579 118.73C164.768 118.16 164.981 117.627 165.216 117.132C165.362 116.823 165.607 116.375 165.956 115.785C166.303 115.195 166.538 114.769 166.664 114.505C167.049 113.692 166.84 113.094 166.039 112.714V112.722ZM146.885 130.95C146.916 131.025 147.031 131.236 147.228 131.585L147.23 131.574L151.008 138.172C151.434 138.927 151.607 139.509 151.524 139.92C151.451 140.21 151.114 140.701 150.518 141.391C149.848 142.163 149.378 142.61 149.106 142.729C148.834 142.849 148.423 142.782 147.869 142.529L140.458 139.21C139.87 138.943 139.497 138.9 139.336 139.085C139.29 139.142 139.219 139.249 139.127 139.411L138.996 139.563C138.549 140.079 138.024 140.074 137.416 139.549C137.111 139.288 136.947 138.983 136.923 138.641C136.898 138.296 137.014 137.977 137.268 137.683C137.379 137.555 137.539 137.397 137.75 137.209C138.02 136.992 138.19 136.842 138.261 136.758C138.454 136.572 138.691 136.318 138.969 135.996C139.273 135.645 139.466 135.404 139.551 135.268C139.884 134.734 140.101 134.408 140.204 134.288C140.417 134.041 140.689 133.917 141.018 133.919C141.346 133.921 141.652 134.045 141.938 134.292C142.482 134.761 142.602 135.17 142.299 135.521C142.259 135.566 142.192 135.629 142.099 135.71C142.005 135.789 141.938 135.852 141.898 135.898C141.746 136.073 141.768 136.245 141.961 136.412C142.208 136.627 142.46 136.754 142.713 136.797C142.967 136.838 143.159 136.781 143.295 136.625L144.883 134.789C145.338 134.266 145.25 133.732 144.626 133.191C144.478 133.065 144.338 133.079 144.202 133.235C144.161 133.282 144.109 133.357 144.044 133.461C143.979 133.564 143.926 133.639 143.885 133.686C143.591 134.026 143.174 133.964 142.63 133.493C142.336 133.237 142.164 132.954 142.115 132.637C142.066 132.321 142.153 132.035 142.377 131.777C142.488 131.647 142.768 131.39 143.214 131.004C143.409 130.834 143.658 130.574 143.961 130.226C144.287 129.848 144.526 129.542 144.683 129.307C145.04 128.763 145.259 128.445 145.338 128.354C145.585 128.068 145.873 127.911 146.204 127.883C146.534 127.855 146.841 127.964 147.127 128.212C147.771 128.769 147.883 129.291 147.461 129.779C147.415 129.836 147.331 129.917 147.214 130.025C147.096 130.134 147.015 130.215 146.966 130.27C146.814 130.445 146.788 130.672 146.885 130.95ZM145.386 138.123C145.376 138.115 145.445 138.158 145.589 138.251H145.591L148.994 140.036L146.794 136.637C146.774 136.604 146.745 136.572 146.709 136.539C146.597 136.444 146.443 136.513 146.244 136.742L145.504 137.598C145.297 137.837 145.257 138.012 145.386 138.123ZM139.872 148.964C139.584 148.889 139.326 148.934 139.099 149.1C139.01 149.165 138.902 149.27 138.777 149.416C138.649 149.562 138.547 149.664 138.468 149.72C138.272 149.864 138.057 149.826 137.819 149.607C137.734 149.532 137.578 149.339 137.347 149.025L134.359 144.946C134.13 144.632 133.988 144.419 133.935 144.305C133.797 144.013 133.826 143.796 134.023 143.652C134.091 143.601 134.217 143.537 134.4 143.455C134.582 143.374 134.712 143.305 134.791 143.249C135.026 143.076 135.154 142.843 135.172 142.551C135.191 142.257 135.097 141.969 134.889 141.685C134.651 141.36 134.365 141.17 134.031 141.115C133.696 141.058 133.371 141.145 133.057 141.377C132.978 141.433 132.625 141.746 131.998 142.31C131.725 142.555 131.339 142.861 130.838 143.228C130.583 143.415 130.185 143.668 129.644 143.991C129.102 144.311 128.705 144.567 128.449 144.753C128.114 144.997 127.918 145.289 127.857 145.628C127.796 145.966 127.879 146.293 128.11 146.607C128.599 147.274 129.133 147.396 129.713 146.972C129.82 146.893 129.966 146.761 130.147 146.575C130.327 146.39 130.473 146.256 130.581 146.177C130.798 146.019 130.99 146.005 131.161 146.137C131.254 146.204 131.36 146.315 131.475 146.473L131.856 146.964L132.481 147.818C132.603 147.984 132.656 148.112 132.637 148.201C132.619 148.291 132.518 148.402 132.331 148.54C131.958 148.814 131.682 148.828 131.501 148.583L131.384 148.42C131.376 148.41 131.368 148.398 131.358 148.385L131.342 148.364L131.329 148.347C131.311 148.301 131.293 148.268 131.278 148.248C130.875 147.698 130.414 147.613 129.893 147.994C129.382 148.368 129.348 148.854 129.786 149.453C129.93 149.649 130.167 149.931 130.498 150.301C130.828 150.67 131.065 150.952 131.209 151.148C131.461 151.491 131.656 151.779 131.796 152.01C131.933 152.242 132.039 152.406 132.112 152.503C132.485 153.014 132.944 153.071 133.483 152.676C133.945 152.337 134.035 151.978 133.755 151.595C133.741 151.574 133.71 151.544 133.666 151.501C133.65 151.48 133.635 151.46 133.622 151.442C133.605 151.419 133.591 151.4 133.578 151.384C133.444 151.242 133.365 151.154 133.343 151.126C133.134 150.842 133.236 150.548 133.649 150.246C133.915 150.051 134.158 150.106 134.382 150.41L134.889 151.102C135.191 151.513 135.325 151.805 135.29 151.974C135.256 152.142 135.047 152.367 134.663 152.647L133.057 153.823C132.566 154.182 132.199 154.195 131.954 153.862C131.875 153.755 131.777 153.59 131.664 153.373C131.51 153.079 131.392 152.878 131.313 152.771C131.047 152.408 130.739 152.189 130.39 152.112C130.041 152.037 129.698 152.12 129.366 152.365C129.031 152.609 128.84 152.915 128.794 153.282C128.745 153.649 128.847 154.004 129.1 154.349C129.216 154.505 129.41 154.716 129.688 154.982C129.966 155.245 130.161 155.458 130.276 155.614C130.429 155.821 130.593 156.107 130.771 156.474C130.891 156.72 131.015 156.931 131.145 157.107C131.461 157.539 131.865 157.576 132.355 157.217C132.335 157.231 132.38 157.192 132.486 157.1L132.491 157.095L133.321 156.375C133.787 156.004 134.189 155.695 134.521 155.45C135.339 154.836 135.882 154.424 136.15 154.213C136.556 153.901 136.925 153.623 137.257 153.379C137.738 153.026 138.379 152.603 139.178 152.11C139.707 151.781 140.085 151.536 140.31 151.371C141.036 150.84 141.137 150.215 140.612 149.497C140.411 149.222 140.166 149.047 139.878 148.972L139.872 148.964ZM124.344 158.805C124.596 158.683 124.857 158.687 125.127 158.815H125.125C125.395 158.943 125.604 159.16 125.75 159.468C125.928 159.841 125.961 160.186 125.849 160.502C125.737 160.819 125.5 161.064 125.137 161.237C124.973 161.316 124.571 161.466 123.936 161.687C123.51 161.837 123.105 162.003 122.72 162.186C122.411 162.332 121.981 162.569 121.432 162.9C120.882 163.23 120.513 163.439 120.326 163.528C119.523 163.91 118.931 163.699 118.55 162.898C118.404 162.589 118.365 162.291 118.436 162.001C118.507 161.711 118.667 161.506 118.921 161.387C119.008 161.346 119.148 161.301 119.343 161.257C119.537 161.212 119.679 161.17 119.766 161.127C120.063 160.985 120.036 160.547 119.685 159.811L117.511 155.245C117.154 154.499 116.828 154.195 116.532 154.337C116.444 154.377 116.323 154.46 116.164 154.582C116.008 154.704 115.885 154.785 115.797 154.827C115.546 154.949 115.284 154.945 115.014 154.817C114.745 154.69 114.536 154.473 114.39 154.164C114.221 153.813 114.189 153.471 114.294 153.138C114.4 152.805 114.617 152.56 114.945 152.404C115.012 152.371 115.063 152.353 115.102 152.349L116.203 151.986C116.483 151.893 116.781 151.771 117.099 151.619C117.592 151.384 118.097 151.11 118.608 150.799C119.225 150.424 119.631 150.189 119.829 150.096C120.18 149.927 120.519 149.901 120.843 150.017C121.168 150.13 121.417 150.37 121.59 150.733C121.742 151.051 121.78 151.353 121.707 151.637C121.634 151.921 121.466 152.126 121.202 152.252C121.115 152.294 120.977 152.337 120.789 152.379C120.602 152.42 120.462 152.463 120.375 152.505C120.156 152.611 120.087 152.818 120.168 153.13C120.198 153.25 120.296 153.487 120.464 153.838L122.638 158.403C122.807 158.754 122.924 158.973 122.993 159.062C123.184 159.322 123.391 159.401 123.61 159.296C123.697 159.255 123.817 159.174 123.969 159.054C124.119 158.935 124.245 158.851 124.344 158.805ZM110.814 154.738C110.528 154.572 110.202 154.533 109.836 154.625C109.719 154.655 109.358 154.789 108.751 155.028C108.49 155.132 108.115 155.243 107.632 155.365C107.184 155.476 106.831 155.545 106.573 155.574C105.985 155.633 105.61 155.683 105.443 155.724C105.113 155.807 104.878 155.99 104.736 156.278C104.594 156.564 104.569 156.896 104.665 157.273C104.839 157.969 105.143 158.263 105.581 158.154C105.64 158.139 105.727 158.107 105.841 158.06C105.955 158.014 106.042 157.981 106.101 157.967C106.301 157.916 106.425 157.985 106.472 158.176C106.673 158.979 106.435 159.464 105.764 159.632L103.409 160.22C103.208 160.271 103.018 160.206 102.833 160.026C102.651 159.845 102.519 159.596 102.44 159.277C102.377 159.03 102.46 158.878 102.683 158.821C102.742 158.807 102.833 158.793 102.955 158.78C103.077 158.768 103.168 158.756 103.227 158.74C103.675 158.628 103.813 158.223 103.638 157.527C103.547 157.16 103.369 156.882 103.101 156.691C102.833 156.501 102.541 156.446 102.223 156.525C102.069 156.564 101.703 156.706 101.125 156.949C100.977 157.01 100.679 157.097 100.231 157.211C99.8173 157.314 99.4786 157.385 99.2129 157.428C99.1074 157.454 98.8803 157.478 98.5355 157.503C98.2556 157.535 98.0325 157.572 97.8662 157.612C97.4889 157.707 97.2111 157.9 97.0346 158.196C96.8582 158.49 96.8176 158.833 96.915 159.223C97.1097 160.001 97.5376 160.31 98.1988 160.143L98.3935 160.095C98.5618 160.016 98.6815 159.967 98.7525 159.949C98.9898 159.89 99.2697 160.139 99.5982 160.697L103.75 167.674C104.056 168.199 104.356 168.491 104.646 168.55C104.936 168.609 105.577 168.516 106.569 168.266C107.455 168.045 108.011 167.836 108.238 167.642C108.543 167.351 108.737 166.778 108.822 165.916L109.528 158.344C109.567 157.945 109.595 157.707 109.613 157.626C109.692 157.342 109.845 157.174 110.07 157.117C110.141 157.099 110.254 157.081 110.412 157.061C110.571 157.04 110.684 157.02 110.755 157.004C111.382 156.848 111.591 156.357 111.384 155.529C111.293 155.162 111.104 154.896 110.818 154.73L110.814 154.738ZM106.107 166.281L104.35 162.863C104.285 162.703 104.255 162.63 104.257 162.642C104.216 162.476 104.348 162.356 104.654 162.279L105.752 162.005C106.048 161.932 106.212 161.965 106.249 162.107C106.261 162.153 106.265 162.196 106.263 162.234L106.107 166.281ZM83.5512 158.724H84.6931L84.6789 158.736C85.0541 158.784 85.3441 158.953 85.553 159.237C85.762 159.521 85.8411 159.857 85.7904 160.243C85.7457 160.594 85.6159 160.867 85.3989 161.066C85.1839 161.265 84.9304 161.346 84.6404 161.307C84.543 161.293 84.4051 161.255 84.2226 161.188C84.04 161.121 83.9021 161.08 83.8048 161.068C83.5634 161.036 83.393 161.174 83.2916 161.48C83.2511 161.597 83.2064 161.851 83.1557 162.236L82.5027 167.25C82.452 167.635 82.4317 167.885 82.4418 167.996C82.4621 168.317 82.5919 168.495 82.8333 168.526C82.9306 168.538 83.0746 168.536 83.2673 168.518C83.46 168.499 83.6101 168.497 83.7196 168.512C83.9954 168.548 84.2145 168.692 84.3706 168.946C84.5288 169.199 84.5856 169.493 84.541 169.832C84.4274 170.714 83.9224 171.095 83.03 170.98C82.74 170.941 82.2613 170.848 81.594 170.7C80.9268 170.552 80.4238 170.457 80.0851 170.412C79.5415 170.341 78.9696 170.302 78.3692 170.298C77.9636 170.294 77.6472 170.278 77.418 170.248C77.1179 170.207 76.915 170.108 76.8136 169.947C76.7102 169.787 76.6351 169.471 76.5865 168.998L75.9435 162.196L73.5442 168.327C73.3414 168.84 73.1467 169.185 72.9581 169.363C72.7694 169.542 72.524 169.611 72.2218 169.572C71.9561 169.538 71.5566 169.457 71.0211 169.325C70.4857 169.193 70.0801 169.11 69.8022 169.073C69.5142 169.035 68.7902 168.99 67.63 168.937C67.3015 168.919 67.0581 168.899 66.9019 168.879C66.5044 168.826 66.2002 168.666 65.9892 168.4C65.7783 168.132 65.7012 167.794 65.754 167.384C65.7986 167.047 65.9284 166.775 66.1454 166.571C66.3624 166.366 66.6099 166.281 66.8877 166.317C66.9972 166.331 67.1453 166.372 67.3319 166.439C67.5185 166.506 67.6544 166.546 67.7396 166.556C68.0661 166.599 68.2811 166.216 68.3866 165.406L69.0396 160.393C69.1471 159.571 69.0437 159.141 68.7293 159.101C68.634 159.087 68.4859 159.089 68.2872 159.107C68.0884 159.123 67.9424 159.125 67.845 159.113C67.5672 159.076 67.3481 158.93 67.1838 158.677C67.0216 158.423 66.9607 158.125 67.0054 157.789C67.0601 157.379 67.2224 157.073 67.4941 156.868C67.768 156.665 68.1026 156.588 68.5001 156.641C68.7293 156.671 69.1106 156.756 69.644 156.9C70.001 156.996 70.3579 157.067 70.721 157.113C70.9522 157.142 71.2929 157.156 71.7472 157.154C72.2015 157.152 72.5443 157.164 72.7735 157.194C73.1365 157.241 73.4124 157.401 73.605 157.671C73.7977 157.941 73.8687 158.275 73.816 158.673C73.7186 159.421 73.4225 159.764 72.9276 159.699C72.8546 159.691 72.8019 159.677 72.7674 159.661C72.7486 159.658 72.7274 159.656 72.7041 159.652L72.661 159.647L72.6417 159.644C72.597 159.626 72.5666 159.614 72.5545 159.614C72.3618 159.588 72.2299 159.705 72.159 159.967C72.1326 160.084 72.1001 160.289 72.0616 160.579L71.1733 167.404L74.8483 158.825C75.1667 158.081 75.5724 157.74 76.0673 157.805L77.2253 157.955C77.7081 158.018 77.9961 158.405 78.0873 159.117L79.3205 168.463L80.2088 161.638C80.2818 161.072 80.2696 160.746 80.1703 160.658C80.1378 160.616 80.0749 160.589 79.9776 160.577C79.9532 160.573 79.9167 160.575 79.866 160.581C79.8478 160.579 79.8297 160.577 79.8115 160.574C79.7932 160.572 79.7748 160.569 79.7565 160.567C79.72 160.573 79.6653 160.573 79.5922 160.563C79.1095 160.5 78.9168 160.101 79.0122 159.364C79.0649 158.955 79.215 158.642 79.4645 158.429C79.7139 158.216 80.0182 158.133 80.3812 158.18C80.5516 158.202 80.7665 158.249 81.0262 158.32C81.133 158.349 81.2268 158.375 81.3078 158.398L81.4679 158.442C81.5521 158.466 81.6123 158.483 81.6488 158.492C81.8983 158.551 82.1863 158.6 82.5128 158.642C82.9225 158.695 83.2693 158.724 83.5512 158.724ZM63.308 154.951C63.1964 154.905 62.8273 154.793 62.2006 154.619C61.9288 154.543 61.5638 154.408 61.1034 154.213C60.6774 154.032 60.355 153.874 60.1339 153.742C59.6289 153.436 59.2983 153.249 59.1421 153.183C58.8277 153.049 58.5296 153.055 58.2436 153.197C57.9577 153.341 57.7386 153.59 57.5865 153.949C57.3066 154.61 57.3735 155.028 57.7873 155.205C57.8441 155.229 57.9313 155.255 58.0509 155.286C58.1706 155.316 58.2578 155.345 58.3126 155.367C58.5032 155.448 58.56 155.578 58.485 155.756C58.1625 156.519 57.6798 156.764 57.0429 156.493L54.8079 155.543C54.6172 155.462 54.5037 155.296 54.4651 155.04C54.4286 154.787 54.4732 154.509 54.601 154.207C54.7004 153.972 54.8566 153.899 55.0695 153.99C55.1263 154.014 55.2054 154.057 55.3109 154.122C55.4163 154.187 55.4954 154.231 55.5522 154.253C55.9782 154.434 56.3311 154.195 56.6109 153.533C56.759 153.187 56.7833 152.856 56.684 152.544C56.5866 152.231 56.3858 152.01 56.0836 151.883C55.9376 151.822 55.5603 151.714 54.9519 151.56C54.7977 151.521 54.5057 151.41 54.0818 151.229C53.6904 151.063 53.376 150.917 53.1387 150.789C53.0373 150.747 52.8426 150.631 52.5526 150.44C52.3092 150.296 52.1084 150.193 51.9522 150.126C51.5932 149.974 51.2545 149.962 50.9361 150.092C50.6177 150.221 50.3783 150.469 50.2222 150.84C49.9078 151.58 50.066 152.081 50.6927 152.349L50.8773 152.428C51.0598 152.467 51.1835 152.499 51.2505 152.527C51.4756 152.623 51.5486 152.992 51.4756 153.635L50.5872 161.705C50.5163 162.309 50.5791 162.723 50.7738 162.944C50.9706 163.167 51.5385 163.478 52.4795 163.877C53.3192 164.234 53.8891 164.402 54.1873 164.384C54.6051 164.336 55.106 163.995 55.6942 163.358L60.8154 157.74C61.0851 157.446 61.2514 157.271 61.3143 157.219C61.5496 157.04 61.7727 156.998 61.9856 157.087C62.0525 157.115 62.156 157.17 62.2939 157.247C62.4318 157.326 62.5352 157.379 62.6022 157.407C63.1964 157.659 63.6589 157.393 63.9915 156.608C64.1395 156.261 64.1477 155.935 64.0199 155.629C63.8921 155.322 63.6548 155.097 63.306 154.949L63.308 154.951ZM55.9396 158.764C55.9214 158.809 55.8991 158.845 55.8727 158.874L53.3111 162.009L53.9662 158.223C54.0108 158.056 54.0311 157.979 54.025 157.989C54.0919 157.833 54.2704 157.817 54.5625 157.939L55.605 158.381C55.8848 158.5 55.9964 158.626 55.9396 158.76V158.764ZM45.9508 146.524C46.681 146.95 47.0846 147.191 47.1637 147.248H47.1555C47.4699 147.477 47.6525 147.759 47.7011 148.096C47.7498 148.433 47.6545 148.763 47.4192 149.088C47.2123 149.374 46.9669 149.552 46.681 149.623C46.397 149.694 46.1374 149.645 45.9001 149.473C45.821 149.416 45.7155 149.313 45.5837 149.165C45.4519 149.017 45.3505 148.917 45.2815 148.867C45.0848 148.725 44.8678 148.761 44.6325 148.982C44.5412 149.065 44.381 149.266 44.1518 149.581L41.1785 153.669C40.9513 153.984 40.8134 154.193 40.7688 154.296C40.6309 154.588 40.6613 154.805 40.8581 154.949C40.9371 155.006 41.0649 155.073 41.2434 155.15C41.4219 155.225 41.5537 155.296 41.643 155.361C41.8701 155.525 41.9918 155.756 42.008 156.055C42.0243 156.353 41.933 156.639 41.7322 156.914C41.211 157.632 40.5842 157.728 39.8561 157.198C39.631 157.034 39.2801 156.748 38.8076 156.345C38.0936 155.734 37.4953 155.253 37.0126 154.903C36.68 154.659 36.3007 154.391 35.8809 154.101C35.599 153.911 35.0392 153.521 34.2056 152.929C33.871 152.686 33.4552 152.398 32.9583 152.067L32.0192 151.497C31.8935 151.42 31.8408 151.39 31.861 151.404C31.3682 151.047 31.281 150.649 31.5954 150.217C31.7252 150.041 31.8874 149.858 32.0842 149.67C32.3782 149.388 32.6013 149.145 32.7514 148.938C32.867 148.781 33.007 148.53 33.1753 148.185C33.3436 147.84 33.4856 147.591 33.5992 147.433C33.8507 147.088 34.159 146.883 34.522 146.816C34.8871 146.749 35.2359 146.838 35.5706 147.082C35.9052 147.325 36.0898 147.623 36.1243 147.98C36.1588 148.337 36.0452 148.696 35.7795 149.061C35.7004 149.169 35.5463 149.341 35.313 149.579C35.1406 149.755 35.0149 149.897 34.9358 150.004C34.6924 150.339 34.8161 150.686 35.309 151.043L36.9173 152.213C37.3027 152.493 37.5805 152.623 37.7509 152.605C37.9233 152.586 38.1585 152.371 38.4587 151.958L38.9637 151.264C39.1848 150.958 39.1625 150.708 38.8968 150.516C38.4831 150.215 38.1727 150.207 37.9659 150.493C37.9436 150.524 37.8868 150.623 37.7914 150.795L37.7793 150.812L37.7789 150.813C37.76 150.84 37.7358 150.874 37.7063 150.913C37.6799 150.97 37.6596 151.006 37.6454 151.027C37.3655 151.41 36.9944 151.434 36.5319 151.098C35.9904 150.704 35.9073 150.25 36.2784 149.739C36.3494 149.641 36.4752 149.491 36.6516 149.289C36.8281 149.088 37.043 148.814 37.2925 148.469C37.4345 148.27 37.6312 147.96 37.8827 147.532C38.1342 147.104 38.3289 146.792 38.4729 146.595C38.909 145.995 39.3836 145.881 39.8947 146.252C40.4159 146.632 40.4768 147.096 40.0752 147.648C40.061 147.666 40.0346 147.692 39.9961 147.725C39.9868 147.738 39.9779 147.75 39.9696 147.761C39.9599 147.775 39.951 147.787 39.9433 147.798L39.8257 147.96C39.6452 148.205 39.7446 148.465 40.1178 148.737C40.3044 148.873 40.4443 148.936 40.5335 148.925C40.6228 148.915 40.7282 148.826 40.8499 148.66L41.4726 147.804L41.8235 147.291C41.937 147.133 42.0121 146.999 42.0466 146.889C42.1175 146.684 42.0466 146.506 41.8296 146.348C41.7221 146.269 41.5517 146.171 41.3205 146.056C41.0893 145.94 40.9189 145.843 40.8114 145.764C40.2293 145.342 40.1827 144.796 40.6694 144.127C40.8986 143.812 41.1846 143.632 41.5253 143.587C41.8661 143.543 42.2048 143.642 42.5394 143.885C42.797 144.072 43.16 144.374 43.6306 144.792C44.1031 145.21 44.4662 145.512 44.7217 145.699C45.2247 146.064 45.6344 146.34 45.9508 146.524ZM27.5532 143.989C27.393 143.881 27.2794 143.792 27.2125 143.721C27.0462 143.545 27.0563 143.326 27.245 143.064C27.3078 142.971 27.4823 142.79 27.7642 142.525L31.4453 139.056C31.7293 138.789 31.924 138.622 32.0274 138.557C32.2992 138.385 32.5182 138.387 32.6866 138.564C32.7535 138.634 32.8367 138.752 32.934 138.92C33.0334 139.087 33.1145 139.206 33.1814 139.277C33.3822 139.49 33.6297 139.588 33.9217 139.572C34.2158 139.555 34.4896 139.425 34.7472 139.182C35.0393 138.906 35.1914 138.598 35.2015 138.253C35.2117 137.908 35.0839 137.596 34.8162 137.312C34.6661 137.152 34.3172 136.838 33.7716 136.365C33.3194 135.974 32.9036 135.578 32.5284 135.178C32.287 134.921 32.0781 134.673 31.9057 134.436L31.2243 133.499C31.208 133.465 31.1756 133.42 31.1249 133.367C30.8754 133.102 30.5752 132.97 30.2264 132.972C29.8775 132.974 29.5611 133.11 29.2772 133.375C29.0298 133.609 28.8858 133.874 28.8472 134.17C28.8087 134.467 28.8858 134.716 29.0764 134.919C29.1433 134.99 29.2589 135.081 29.4232 135.195C29.5875 135.306 29.7031 135.4 29.77 135.471C29.9952 135.71 29.8066 136.113 29.2042 136.681L25.523 140.15C24.9308 140.709 24.5211 140.87 24.296 140.63C24.2291 140.559 24.1439 140.438 24.0425 140.267C23.9411 140.097 23.8559 139.975 23.7889 139.904C23.5963 139.701 23.3529 139.61 23.0547 139.63C22.7566 139.651 22.4848 139.778 22.2354 140.014C21.5884 140.622 21.5701 141.251 22.1786 141.898C22.3205 142.048 22.6329 142.336 23.1156 142.758C23.5983 143.182 23.9553 143.516 24.1905 143.764C24.4826 144.074 24.7645 144.409 25.0383 144.77C25.4439 145.307 25.7096 145.642 25.8354 145.776C26.1112 146.068 26.4154 146.22 26.7521 146.23C27.0868 146.24 27.4052 146.102 27.7074 145.82C27.9548 145.587 28.0988 145.321 28.1374 145.025C28.1759 144.729 28.1009 144.48 27.9082 144.277C27.8331 144.198 27.7155 144.102 27.5553 143.995L27.5532 143.989ZM25.1316 130.169C25.0099 129.972 24.801 129.879 24.5069 129.891L24.5089 129.893C24.4278 129.899 24.1925 129.948 23.8011 130.033L16.382 131.694C15.5343 131.879 14.9278 131.87 14.5587 131.67C14.3031 131.514 13.934 131.049 13.4513 130.274C12.9098 129.408 12.6238 128.826 12.5893 128.532C12.5549 128.236 12.7414 127.863 13.1471 127.408L18.5076 121.31C18.9375 120.827 19.0896 120.482 18.9598 120.275C18.9213 120.213 18.8382 120.115 18.7104 119.979L18.6049 119.809C18.2439 119.231 18.4041 118.73 19.0856 118.304C19.4263 118.091 19.765 118.024 20.0997 118.101C20.4343 118.18 20.7041 118.383 20.911 118.714C21.0002 118.86 21.1036 119.058 21.2213 119.316C21.349 119.637 21.4423 119.843 21.5012 119.937C21.6228 120.178 21.7952 120.478 22.0204 120.839C22.2637 121.233 22.4402 121.488 22.5436 121.61C22.9554 122.085 23.2028 122.389 23.2859 122.523C23.4583 122.8 23.4969 123.097 23.3975 123.409C23.2981 123.721 23.0892 123.977 22.7688 124.178C22.1583 124.557 21.7324 124.553 21.487 124.159C21.4545 124.107 21.4139 124.025 21.3653 123.912C21.3166 123.798 21.276 123.717 21.2436 123.664C21.1219 123.468 20.9515 123.437 20.7345 123.573C20.4566 123.746 20.2599 123.948 20.1443 124.178C20.0287 124.409 20.0267 124.61 20.1362 124.786L21.4221 126.845C21.7892 127.433 22.3246 127.508 23.0263 127.07C23.1906 126.966 23.219 126.828 23.1095 126.652C23.077 126.601 23.0203 126.528 22.9412 126.435C22.8621 126.342 22.8053 126.271 22.7728 126.218C22.5335 125.835 22.7201 125.453 23.3285 125.074C23.6591 124.867 23.9816 124.788 24.298 124.835C24.6144 124.881 24.8618 125.05 25.0424 125.338C25.1336 125.484 25.2959 125.824 25.5332 126.366C25.6366 126.603 25.811 126.918 26.0564 127.309C26.3201 127.731 26.5432 128.051 26.7217 128.27C27.1354 128.773 27.3748 129.076 27.4397 129.179C27.6404 129.5 27.7054 129.82 27.6344 130.145C27.5634 130.467 27.3687 130.729 27.0482 130.929C26.3262 131.38 25.7928 131.333 25.452 130.785C25.4135 130.725 25.3608 130.621 25.2918 130.477C25.2249 130.333 25.1701 130.232 25.1316 130.169ZM19.0998 128.124C19.1363 128.114 19.1769 128.098 19.2174 128.072V128.074C19.3411 127.997 19.3209 127.828 19.1606 127.571L18.5623 126.611C18.394 126.344 18.2378 126.252 18.0938 126.344C18.1017 126.339 18.0662 126.369 17.9872 126.436L17.9113 126.5L15.2016 129.224L19.0998 128.124ZM13.3114 106.411C13.3296 106.506 13.3337 106.652 13.3256 106.845C13.3175 107.037 13.3215 107.183 13.3398 107.279C13.3925 107.567 13.5466 107.782 13.8002 107.928C14.0557 108.074 14.3559 108.114 14.7047 108.052C15.0881 107.983 15.3842 107.804 15.5911 107.52C15.8 107.234 15.8689 106.908 15.802 106.537L15.4552 105.449C15.37 105.18 15.2889 104.843 15.2158 104.435C15.157 104.113 15.1165 103.823 15.0941 103.567C15.0921 103.482 15.084 103.267 15.0698 102.922C15.0576 102.653 15.0374 102.434 15.0069 102.265C14.942 101.906 14.7696 101.64 14.4918 101.468C14.2139 101.296 13.8712 101.247 13.4635 101.322C12.7333 101.454 12.4109 101.76 12.4981 102.239C12.5102 102.31 12.5265 102.363 12.5447 102.397C12.5508 102.434 12.5569 102.468 12.565 102.504C12.5853 102.551 12.5975 102.586 12.6035 102.61C12.6218 102.705 12.6157 102.774 12.5853 102.817C12.5326 102.939 12.2263 103.05 11.6625 103.151L4.89241 104.383L13.4189 100.365C14.0679 100.061 14.3498 99.6691 14.2626 99.1904L14.0537 98.0405C13.9645 97.5497 13.5162 97.2657 12.711 97.1907L3.42198 96.3023L10.192 95.0712C10.48 95.0185 10.6849 94.9881 10.8066 94.9779C11.0763 94.9658 11.2284 95.055 11.2629 95.2477C11.2641 95.2551 11.2639 95.2692 11.2635 95.2904C11.2632 95.3042 11.2629 95.321 11.2629 95.341C11.2673 95.367 11.2716 95.3908 11.2756 95.4128C11.2791 95.4319 11.2824 95.4498 11.2852 95.4667C11.2791 95.5052 11.2852 95.56 11.2974 95.631C11.3866 96.1218 11.8024 96.3003 12.5447 96.1644C12.9402 96.0934 13.2363 95.9251 13.4351 95.6594C13.6339 95.3937 13.7008 95.0814 13.6359 94.7224C13.5953 94.4952 13.5041 94.1646 13.3641 93.7326C13.2242 93.3006 13.1329 92.97 13.0923 92.7429C13.0274 92.3839 12.9848 92.0208 12.9686 91.6517C12.9423 91.1 12.9098 90.7106 12.8672 90.4835C12.7962 90.088 12.6218 89.7919 12.3439 89.5951C12.0661 89.3984 11.7253 89.3376 11.3177 89.4106C10.983 89.4714 10.7194 89.6195 10.5267 89.8507C10.334 90.0839 10.263 90.3374 10.3137 90.6133C10.332 90.7086 10.3786 90.8485 10.4557 91.0331C10.5328 91.2177 10.5794 91.3576 10.5977 91.4529C10.6545 91.7653 10.2752 91.9945 9.4619 92.1425L4.48677 93.0471C3.68564 93.1931 3.25364 93.1039 3.19482 92.7814C3.18063 92.6982 3.17657 92.5563 3.18265 92.3575C3.19077 92.1587 3.18265 92.0046 3.1644 91.8971C3.1137 91.6213 2.95955 91.4124 2.69792 91.2684C2.43628 91.1244 2.13814 91.0818 1.80349 91.1426C1.39583 91.2156 1.09769 91.3941 0.907037 91.676C0.716388 91.958 0.657571 92.2967 0.730585 92.6922C0.75898 92.8483 0.813741 93.0856 0.896896 93.4041C1.19909 94.5236 1.37757 95.2274 1.42828 95.5154C1.47898 95.7912 1.5236 96.2029 1.56011 96.7526C1.59865 97.3022 1.64124 97.7099 1.68991 97.9715C1.74467 98.2717 1.88462 98.4826 2.11178 98.6084C2.33893 98.7341 2.72834 98.8152 3.27798 98.8497L9.84725 99.2695L3.56395 101.953C3.12789 102.143 2.85003 102.312 2.72834 102.458C2.60665 102.604 2.57217 102.827 2.62693 103.125C2.6675 103.352 2.74862 103.659 2.86829 104.046C3.04677 104.62 3.18468 105.176 3.28203 105.715C3.34288 106.05 3.40373 106.559 3.4666 107.24C3.52947 107.922 3.58626 108.406 3.63899 108.692C3.79922 109.579 4.31843 109.942 5.19258 109.784C5.52723 109.723 5.79292 109.579 5.9856 109.352C6.1803 109.124 6.25129 108.873 6.20058 108.599C6.1803 108.492 6.13365 108.35 6.05658 108.171C5.98154 107.993 5.93489 107.857 5.91664 107.762C5.87405 107.522 6.00182 107.344 6.30199 107.228C6.40543 107.186 6.64881 107.129 7.03214 107.058L12.0073 106.153C12.3906 106.084 12.6441 106.05 12.7678 106.052C13.0903 106.056 13.2728 106.175 13.3175 106.415L13.3114 106.411ZM9.46186 83.4924L2.53766 80.3507L2.53969 80.3548C1.75276 79.9917 1.27411 79.6185 1.09968 79.2372C0.988132 78.9594 0.973935 78.3651 1.05506 77.4565C1.1443 76.4384 1.26599 75.8015 1.41608 75.546C1.56616 75.2904 1.94138 75.1038 2.53766 74.9862L10.4902 73.3454C11.125 73.2196 11.4515 73.0351 11.4738 72.7917C11.4799 72.7187 11.4738 72.5889 11.4535 72.4043L11.4718 72.2035C11.5306 71.5241 11.9626 71.2198 12.7617 71.2908C13.1613 71.3253 13.4716 71.4754 13.6926 71.7391C13.9137 72.0027 14.007 72.3293 13.9725 72.7166C13.9583 72.885 13.9198 73.1081 13.859 73.3839C13.7677 73.7186 13.719 73.9396 13.7089 74.0492C13.6622 74.3128 13.6196 74.6576 13.5811 75.0815C13.5385 75.5419 13.5243 75.8522 13.5344 76.0124C13.577 76.6391 13.5912 77.0306 13.577 77.1888C13.5486 77.5173 13.4006 77.7749 13.1329 77.9656C12.8651 78.1562 12.5427 78.2333 12.1675 78.2008C11.4515 78.1359 11.1148 77.8743 11.1554 77.4139C11.1595 77.3531 11.1777 77.2638 11.2061 77.1442C11.2345 77.0245 11.2507 76.9353 11.2568 76.8744C11.2771 76.6452 11.1594 76.5174 10.9059 76.4951C10.5794 76.4667 10.2995 76.5093 10.0703 76.6229C9.83911 76.7385 9.71539 76.8967 9.69713 77.1036L9.48215 79.5212C9.41927 80.2128 9.8026 80.5941 10.626 80.6671C10.8207 80.6833 10.9262 80.59 10.9445 80.3832C10.9505 80.3223 10.9505 80.231 10.9424 80.1073C10.9343 79.9836 10.9323 79.8923 10.9384 79.8315C10.9769 79.3833 11.3542 79.1906 12.0701 79.2535C12.4595 79.2879 12.7658 79.4198 12.9889 79.6469C13.214 79.8741 13.3113 80.158 13.2809 80.4967C13.2647 80.6671 13.1897 81.0383 13.0538 81.6122C12.995 81.8637 12.9442 82.2207 12.9037 82.6811C12.8591 83.178 12.8428 83.5674 12.855 83.8493C12.8814 84.4983 12.8915 84.8837 12.8814 85.0054C12.8489 85.3826 12.707 85.6787 12.4555 85.8937C12.204 86.1087 11.8896 86.2 11.5144 86.1675C10.6666 86.0925 10.2711 85.7335 10.3279 85.0906C10.336 85.0175 10.3543 84.904 10.3867 84.7478C10.4192 84.5916 10.4394 84.4781 10.4455 84.405C10.4658 84.1738 10.3543 83.9751 10.1129 83.8067C10.0419 83.7641 9.82491 83.6587 9.46186 83.4924ZM7.13149 77.1097C7.14366 77.1117 7.06456 77.1178 6.89216 77.1259H6.89419L3.08933 77.6674L6.86174 79.1379C6.89622 79.1541 6.93881 79.1642 6.98749 79.1683C7.13149 79.1805 7.2187 79.0344 7.24506 78.7322L7.34445 77.6046C7.37284 77.2902 7.30185 77.1239 7.13149 77.1097ZM4.365 65.0887C4.68951 65.1941 4.98968 65.1941 5.26754 65.0866C5.5454 64.9791 5.72794 64.7925 5.81515 64.5268C5.84963 64.4234 5.87599 64.2753 5.89425 64.0827C5.9125 63.89 5.93684 63.748 5.96726 63.6547C6.0423 63.4235 6.24107 63.3282 6.55949 63.3688C6.67104 63.3789 6.91239 63.4458 7.28152 63.5675L12.0883 65.1394C12.4595 65.261 12.6968 65.3523 12.8063 65.4132C13.0882 65.5693 13.1916 65.764 13.1146 65.9952C13.0882 66.0764 13.0253 66.2021 12.9239 66.3745C12.8225 66.5469 12.7576 66.6787 12.7272 66.772C12.6359 67.0499 12.6684 67.3136 12.8245 67.563C12.9807 67.8125 13.2261 67.991 13.5608 68.1005C13.9421 68.2262 14.2869 68.212 14.5911 68.062C14.8973 67.9119 15.1083 67.6523 15.23 67.2811C15.2604 67.1878 15.3658 66.7294 15.5464 65.906C15.6255 65.547 15.7613 65.0744 15.954 64.4843C16.0514 64.1841 16.2278 63.744 16.4813 63.168C16.7328 62.592 16.9093 62.1518 17.0087 61.8517C17.1364 61.4582 17.1283 61.1073 16.9803 60.795C16.8322 60.4847 16.5726 60.2677 16.2035 60.148C15.4165 59.8904 14.9115 60.1034 14.6884 60.7869C14.6458 60.9147 14.6073 61.1053 14.5667 61.3609C14.5282 61.6164 14.4876 61.8091 14.4451 61.9369C14.3619 62.1904 14.2118 62.3161 13.9968 62.308C13.8812 62.308 13.7311 62.2796 13.5466 62.2188L12.9503 62.0423L11.9443 61.7138C11.7476 61.6489 11.632 61.5758 11.5934 61.4927C11.5569 61.4095 11.5731 61.2594 11.6462 61.0384C11.7902 60.5983 12.0072 60.4259 12.2952 60.5212L12.4858 60.5841C12.4964 60.5879 12.5088 60.5918 12.5226 60.596L12.5227 60.5961C12.5379 60.6008 12.5549 60.6061 12.573 60.6125C12.6156 60.6388 12.6481 60.6571 12.6724 60.6632C13.3214 60.8741 13.7433 60.6753 13.9441 60.0608C14.1408 59.4605 13.8873 59.0426 13.1815 58.8135C12.9503 58.7384 12.5933 58.6472 12.1086 58.5397C11.6259 58.4322 11.2669 58.3409 11.0357 58.2659C10.63 58.134 10.3055 58.0144 10.0581 57.9069C9.81066 57.8014 9.63015 57.7284 9.51455 57.6898C8.91421 57.4931 8.50857 57.7122 8.29967 58.349C8.12119 58.8926 8.2591 59.2373 8.70936 59.3854C8.7337 59.3935 8.77426 59.3996 8.83714 59.4077C8.86645 59.4168 8.89223 59.4254 8.91499 59.433L8.91517 59.4331L8.91521 59.4331C8.93803 59.4407 8.95781 59.4473 8.97505 59.4523L9.01404 59.4601C9.18312 59.4939 9.2837 59.514 9.31578 59.5253C9.65246 59.6349 9.73967 59.933 9.58148 60.4178C9.48007 60.7301 9.24885 60.8274 8.88987 60.7098L8.07454 60.4441C7.58778 60.2859 7.30992 60.1277 7.24096 59.9695C7.16997 59.8113 7.20851 59.5071 7.35656 59.0568L7.97516 57.1666C8.16378 56.5886 8.45584 56.3634 8.8493 56.4912C8.97708 56.5338 9.14947 56.6088 9.37055 56.7184C9.66869 56.8664 9.87962 56.9617 10.0074 57.0043C10.4353 57.1443 10.8146 57.1422 11.1411 57.0003C11.4697 56.8583 11.6969 56.5906 11.8267 56.1971C11.9544 55.8036 11.9321 55.4447 11.7577 55.1181C11.5833 54.7916 11.2933 54.5624 10.8876 54.4306C10.7031 54.3697 10.4211 54.3129 10.0419 54.2602C9.6626 54.2075 9.38069 54.1487 9.19612 54.0898C8.95274 54.0107 8.65257 53.8728 8.29358 53.6801C8.05426 53.5503 7.83116 53.451 7.62226 53.384C7.11318 53.2177 6.76434 53.4246 6.57572 54.0026C6.5823 53.9845 6.57418 54.0199 6.55351 54.1099L6.5535 54.1099L6.55348 54.11L6.55346 54.1101L6.55345 54.1102L6.53718 54.1811L6.28366 55.25C6.1214 55.8239 5.97537 56.3087 5.8476 56.7021C5.54134 57.6777 5.34055 58.3287 5.24726 58.6573C5.0992 59.1461 4.96128 59.5882 4.83351 59.9817C4.64895 60.5476 4.37514 61.2655 4.01413 62.1336C3.7748 62.7076 3.61255 63.1294 3.52533 63.3951C3.24545 64.251 3.52736 64.8169 4.37108 65.0927L4.365 65.0887ZM11.5144 48.4738C11.2203 48.5286 10.9242 48.4718 10.6261 48.3075H10.6281C10.265 48.1087 10.0379 47.8471 9.94458 47.5246C9.85129 47.2021 9.90199 46.8655 10.0967 46.5146C10.1859 46.3564 10.4232 45.9994 10.8106 45.4498C11.0723 45.0786 11.3035 44.7075 11.5103 44.3343C11.6746 44.0362 11.8856 43.592 12.1411 43.0038C12.3967 42.4156 12.5751 42.0303 12.6745 41.8498C13.1045 41.073 13.7089 40.8986 14.4857 41.3285C14.7838 41.4948 14.9887 41.7159 15.1002 41.9918C15.2118 42.2696 15.1996 42.5292 15.0637 42.7746C15.0171 42.8598 14.9278 42.9774 14.796 43.1275C14.6642 43.2776 14.5749 43.3953 14.5283 43.4804C14.368 43.7684 14.6459 44.1092 15.3598 44.5026L19.7853 46.9466C20.5094 47.3461 20.9515 47.4029 21.1097 47.1149C21.1564 47.0297 21.2091 46.8918 21.2659 46.7012C21.3227 46.5105 21.3754 46.3726 21.422 46.2874C21.5579 46.042 21.7709 45.8919 22.065 45.8392C22.3591 45.7844 22.6552 45.8412 22.9533 46.0055C23.2941 46.1941 23.5192 46.4537 23.6287 46.7843C23.7382 47.1149 23.7038 47.4394 23.5273 47.7599C23.4928 47.8248 23.4604 47.8694 23.432 47.8958L22.7485 48.8308C22.5761 49.0681 22.4037 49.3419 22.2333 49.6502C21.9676 50.1288 21.7182 50.644 21.4829 51.1956C21.1989 51.8609 21.0042 52.2868 20.8988 52.4795C20.7102 52.8222 20.4506 53.0392 20.12 53.1346C19.7894 53.2299 19.4466 53.1812 19.0957 52.9865C18.7854 52.8161 18.5785 52.593 18.4731 52.3192C18.3676 52.0454 18.3838 51.7797 18.5258 51.5242C18.5725 51.439 18.6617 51.3234 18.7895 51.1794C18.9172 51.0354 19.0065 50.9198 19.0531 50.8346C19.1708 50.6217 19.1059 50.4128 18.8584 50.2059C18.7631 50.1247 18.5461 49.9909 18.2054 49.8023L13.7799 47.3583C13.4391 47.1697 13.214 47.0602 13.1065 47.0277C12.7982 46.9283 12.5873 46.9851 12.4697 47.1981C12.421 47.2833 12.3723 47.4171 12.3176 47.6037C12.2628 47.7883 12.2101 47.9303 12.1573 48.0256C12.0214 48.271 11.8085 48.4211 11.5144 48.4738ZM24.4663 39.7628C24.6671 40.1096 24.7847 40.3185 24.8172 40.3935C24.9186 40.6694 24.8942 40.8965 24.7442 41.073C24.6975 41.1277 24.6144 41.2109 24.4987 41.3204C24.3831 41.4299 24.302 41.5111 24.2533 41.5678C23.8355 42.0607 23.9532 42.5819 24.6042 43.1316C24.8922 43.375 25.2005 43.4824 25.5311 43.45C25.8617 43.4175 26.1477 43.2593 26.391 42.9713C26.4701 42.878 26.6851 42.5576 27.036 42.012C27.1881 41.7747 27.4274 41.4664 27.7499 41.0851C28.0481 40.7322 28.2955 40.4706 28.4882 40.2982C28.9303 39.9068 29.2062 39.6472 29.3177 39.5174C29.5367 39.2577 29.6219 38.9697 29.5692 38.6554C29.5165 38.341 29.342 38.0571 29.0459 37.8056C28.4983 37.3411 28.0785 37.2823 27.7885 37.6251C27.7499 37.6717 27.6972 37.7468 27.6323 37.8522C27.5674 37.9577 27.5147 38.0327 27.4761 38.0794C27.3423 38.2376 27.2023 38.2538 27.0522 38.1281C26.4215 37.5926 26.3282 37.0612 26.7784 36.5319L28.3482 34.6801C28.4821 34.5219 28.6748 34.4631 28.9283 34.5017C29.1818 34.5402 29.4333 34.666 29.6848 34.8789C29.8795 35.0432 29.9018 35.2156 29.7538 35.392C29.7152 35.4387 29.6483 35.5016 29.555 35.5827C29.4617 35.6638 29.3968 35.7267 29.3562 35.7733C29.0581 36.1262 29.1818 36.5339 29.7294 36.9984C30.0174 37.2417 30.3257 37.3634 30.6543 37.3614C30.9828 37.3614 31.2526 37.2336 31.4655 36.9842C31.567 36.8645 31.7819 36.5339 32.1085 35.9985C32.1916 35.8626 32.3823 35.6172 32.6825 35.2643C32.9583 34.9398 33.1915 34.6822 33.3822 34.4936C33.4532 34.4104 33.6215 34.2583 33.8892 34.0372C34.0981 33.8466 34.2563 33.6863 34.3679 33.5565C34.6194 33.2604 34.7309 32.94 34.7025 32.5972C34.6741 32.2544 34.5058 31.9522 34.1995 31.6926C33.587 31.1734 33.0597 31.1734 32.6196 31.6926L32.4898 31.8468C32.4005 32.009 32.3316 32.1186 32.2829 32.1753C32.1247 32.3619 31.7515 32.3234 31.1593 32.0618L23.7159 28.8187C23.1602 28.5713 22.7464 28.5084 22.4767 28.6301C22.2069 28.7518 21.7404 29.202 21.0792 29.9829C20.489 30.6786 20.1584 31.1734 20.0875 31.4635C20.0104 31.8752 20.1868 32.4573 20.6209 33.2057L24.4663 39.7648V39.7628ZM26.0361 33.0799C26.1821 33.1712 26.2511 33.2138 26.241 33.2057C26.3708 33.3152 26.3343 33.4916 26.1294 33.733L25.3972 34.597C25.2005 34.8302 25.0464 34.8972 24.9348 34.8039C24.8983 34.7734 24.8699 34.741 24.8496 34.7065L22.6146 31.3296L26.0361 33.0799ZM97.4016 13.2322C97.6166 13.2748 98.0831 13.3275 98.8031 13.3924C99.3994 13.4451 99.9673 13.5242 100.505 13.6297C100.852 13.6966 101.164 13.7757 101.444 13.867L102.545 14.228C102.58 14.2463 102.63 14.2625 102.703 14.2767C103.062 14.3456 103.381 14.2767 103.663 14.0718C103.945 13.865 104.121 13.5729 104.196 13.1896C104.261 12.8549 104.222 12.5568 104.08 12.2931C103.938 12.0295 103.732 11.8713 103.456 11.8185C103.36 11.8003 103.212 11.7942 103.014 11.7983C102.815 11.8023 102.667 11.7962 102.571 11.778C102.249 11.7151 102.166 11.279 102.324 10.4657L103.285 5.50076C103.44 4.69963 103.679 4.3305 104.001 4.39337C104.097 4.41163 104.237 4.4603 104.419 4.5394C104.602 4.6185 104.742 4.66718 104.837 4.68543C105.111 4.73816 105.364 4.66921 105.593 4.47856C105.823 4.28791 105.969 4.02425 106.034 3.6896C106.202 2.81748 105.851 2.29624 104.979 2.1279C104.776 2.08936 104.354 2.03866 103.715 1.97579C103.076 1.91494 102.59 1.85004 102.255 1.78514C101.837 1.70401 101.411 1.59652 100.979 1.46468C100.336 1.26592 99.9247 1.14829 99.7462 1.11381C99.3528 1.03674 99.0161 1.09353 98.7382 1.28215C98.4604 1.47077 98.2819 1.76688 98.2028 2.17252C98.1379 2.50717 98.1764 2.80531 98.3184 3.06897C98.4604 3.33264 98.6672 3.48881 98.9431 3.54357C99.0506 3.56385 99.2006 3.57196 99.3933 3.56588C99.586 3.55979 99.73 3.56588 99.8273 3.58413C100.067 3.63078 100.186 3.81534 100.184 4.13782C100.186 4.24937 100.152 4.49681 100.079 4.88014L99.1175 9.84512C99.0445 10.2284 98.9836 10.4759 98.937 10.5915C98.8173 10.8917 98.6368 11.0174 98.3995 10.9708C98.3042 10.9525 98.1683 10.9038 97.9898 10.8268C97.8113 10.7497 97.6755 10.701 97.5801 10.6828C97.2942 10.628 97.0366 10.6929 96.8074 10.8775C96.5802 11.062 96.4322 11.3277 96.3652 11.6745C96.2882 12.068 96.347 12.4087 96.5397 12.6947C96.7323 12.9807 97.0203 13.1592 97.4016 13.2342V13.2322ZM109.246 15.8445C108.618 15.6761 108.246 15.5707 108.135 15.524L108.133 15.5301C107.784 15.3861 107.545 15.163 107.413 14.8588C107.281 14.5545 107.287 14.228 107.431 13.8792C107.756 13.0902 108.216 12.8205 108.812 13.0659C108.879 13.0943 108.983 13.147 109.123 13.2241C109.263 13.3011 109.366 13.3539 109.433 13.3823C109.646 13.4715 109.869 13.4248 110.102 13.2443C110.163 13.1896 110.327 13.0152 110.595 12.717L115.657 7.0442C116.237 6.40127 116.736 6.05445 117.152 6.00171C117.45 5.9794 118.022 6.14369 118.866 6.49051C119.811 6.87992 120.383 7.18414 120.582 7.40521C120.783 7.62426 120.847 8.03801 120.783 8.6424L119.979 16.7227C119.91 17.3656 119.99 17.7327 120.215 17.826C120.282 17.8544 120.407 17.8848 120.59 17.9213L120.776 17.9984C121.407 18.258 121.569 18.759 121.263 19.5013C121.111 19.8724 120.876 20.1239 120.557 20.2558C120.241 20.3876 119.902 20.3795 119.541 20.2314C119.383 20.1665 119.182 20.0631 118.937 19.9231C118.645 19.7365 118.448 19.623 118.347 19.5804C118.109 19.4567 117.793 19.3127 117.4 19.1504C116.972 18.9739 116.682 18.8685 116.525 18.8299C115.915 18.6839 115.536 18.5805 115.39 18.5196C115.085 18.3939 114.883 18.1769 114.781 17.8645C114.68 17.5522 114.7 17.2216 114.844 16.8728C115.118 16.2075 115.469 15.9641 115.897 16.1406C115.953 16.1649 116.035 16.2075 116.14 16.2704C116.246 16.3333 116.327 16.3779 116.383 16.4002C116.596 16.4874 116.753 16.4144 116.85 16.1771C116.976 15.8729 117.018 15.595 116.978 15.3415C116.937 15.088 116.822 14.9216 116.631 14.8425L114.386 13.9177C113.743 13.652 113.264 13.9035 112.95 14.6681C112.877 14.8466 112.936 14.9764 113.126 15.0555C113.183 15.0778 113.27 15.1042 113.39 15.1346C113.51 15.165 113.597 15.1914 113.654 15.2137C114.071 15.3861 114.142 15.8039 113.868 16.4671C113.72 16.8261 113.503 17.0796 113.219 17.2257C112.936 17.3717 112.635 17.3798 112.321 17.25C112.163 17.1851 111.83 17.0026 111.323 16.7004C111.1 16.5706 110.776 16.4164 110.348 16.24C109.885 16.0493 109.518 15.9175 109.246 15.8445ZM115.528 11.5224C115.503 11.5528 115.481 11.5893 115.463 11.634L115.461 11.6299C115.406 11.7658 115.517 11.8915 115.799 12.0072L116.846 12.4392C117.138 12.5608 117.316 12.5426 117.381 12.3844C117.377 12.3966 117.396 12.3175 117.438 12.1512L118.055 8.35846L115.528 11.5224ZM128.654 117.45L128.496 117.375C128.467 117.361 125.689 115.937 125.549 113.169C125.541 113.025 125.531 112.883 125.506 112.741L125.462 112.489L125.415 112.751C125.391 112.887 125.38 113.023 125.374 113.161C125.24 115.935 122.456 117.363 122.427 117.377L122.247 117.452L122.427 117.527C122.456 117.541 125.234 118.965 125.374 121.734C125.382 121.878 125.399 122.02 125.435 122.158L125.464 122.261L125.492 122.158C125.528 122.02 125.547 121.876 125.553 121.734C125.691 118.965 128.471 117.541 128.5 117.527L128.658 117.452L128.654 117.45ZM131.209 108.183C131.234 108.315 131.244 108.447 131.25 108.581V108.579C131.378 111.121 133.899 112.443 133.986 112.488L133.988 112.489L134.136 112.558L133.988 112.627L133.986 112.628C133.899 112.674 131.378 113.995 131.25 116.537C131.244 116.669 131.228 116.803 131.193 116.931L131.167 117.026L131.14 116.931C131.106 116.803 131.09 116.671 131.084 116.537C130.955 113.995 128.434 112.674 128.348 112.628L128.346 112.627L128.179 112.558L128.346 112.489L128.348 112.488C128.434 112.443 130.961 111.118 131.084 108.571C131.09 108.445 131.1 108.317 131.122 108.192L131.167 107.948L131.209 108.183ZM126.739 111.319C126.745 111.431 126.758 111.54 126.786 111.648L126.806 111.727L126.826 111.648C126.855 111.54 126.869 111.431 126.873 111.319C126.979 109.208 129.07 108.107 129.151 108.065L129.153 108.064L129.274 108.007L129.153 107.95L129.151 107.949C129.07 107.907 126.979 106.806 126.873 104.695C126.867 104.583 126.859 104.474 126.839 104.364L126.804 104.17L126.768 104.372C126.749 104.478 126.741 104.583 126.735 104.689C126.632 106.835 124.478 107.94 124.456 107.95L124.318 108.007L124.456 108.064L124.458 108.065C124.538 108.107 126.629 109.208 126.735 111.319H126.739ZM45.2714 112.749C45.2958 112.885 45.3059 113.021 45.312 113.159L45.3161 113.157C45.4479 115.931 48.2346 117.359 48.263 117.373L48.4435 117.448L48.263 117.523C48.2346 117.537 45.456 118.961 45.3161 121.73C45.31 121.872 45.2917 122.016 45.2552 122.154L45.2268 122.257L45.1984 122.154C45.1619 122.016 45.1457 121.874 45.1376 121.73C44.9976 118.961 42.219 117.537 42.1906 117.523L42.0324 117.448L42.1906 117.373C42.219 117.359 44.9976 115.935 45.1376 113.167C45.1437 113.023 45.1558 112.881 45.1802 112.739L45.2248 112.487L45.2714 112.749ZM39.4343 116.537C39.4404 116.671 39.4566 116.803 39.4911 116.931L39.5174 117.026L39.5438 116.931C39.5783 116.803 39.5945 116.669 39.6006 116.537C39.7288 113.995 42.2499 112.674 42.3366 112.628L42.3386 112.627L42.5049 112.558L42.3386 112.489L42.3365 112.488C42.2492 112.442 39.7228 111.119 39.6006 108.571C39.5945 108.443 39.5844 108.317 39.5621 108.192L39.5174 107.948L39.4748 108.183C39.4505 108.315 39.4404 108.447 39.4343 108.581C39.3061 111.123 36.785 112.445 36.6983 112.49L36.6962 112.491L36.5482 112.56L36.6962 112.629L36.6983 112.63C36.785 112.676 39.3061 113.997 39.4343 116.539V116.537ZM43.9125 104.37C43.9308 104.476 43.9409 104.581 43.945 104.687H43.9409C44.0429 106.802 46.1377 107.905 46.2184 107.947L46.2206 107.948L46.3585 108.005L46.2206 108.062L46.2184 108.063C46.1378 108.105 44.0469 109.206 43.9409 111.317C43.9369 111.428 43.9227 111.538 43.8943 111.646L43.874 111.725L43.8537 111.646C43.8253 111.538 43.8131 111.428 43.8071 111.317C43.7011 109.206 41.6102 108.105 41.5296 108.063L41.5274 108.062L41.4057 108.005L41.5274 107.948L41.5296 107.947C41.6102 107.905 43.7011 106.804 43.8071 104.693C43.8131 104.581 43.8212 104.472 43.8415 104.362L43.876 104.168L43.9125 104.37Z",
	    fill: "#BB3737"
	  }));
	};

	function NightMafia() {
	  const {
	    players,
	    self,
	    currentMafiaSelections,
	    currentMafiaVotes
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleMafiaSelection,
	    handleMafiaVote
	  } = reactExports.useContext(ActionContext);
	  const [mySelection, setMySelection] = reactExports.useState(null);
	  const [otherSelectionsAndVotes, setOtherSelectionsAndVotes] = reactExports.useState([]);
	  const [myVote, setMyVote] = reactExports.useState(null);
	  const playersToList = players.filter(player => player.isAlive);
	  const handleConfirmation = () => {
	    if (mySelection === null) return;
	    handleMafiaVote(mySelection.gamername);
	  };
	  reactExports.useEffect(() => {
	    const mySelection = currentMafiaSelections.find(selection => selection.player.gamername === self.gamername);
	    if (mySelection) {
	      setMySelection(mySelection.target);
	    } else {
	      setMySelection(null);
	    }
	    const myVote = currentMafiaVotes.find(vote => vote.player.gamername === self.gamername);
	    if (myVote) {
	      setMyVote(myVote.target);
	    } else {
	      setMyVote(null);
	    }
	    const otherSelections = currentMafiaSelections.filter(selection => selection.player.gamername !== self.gamername);
	    const otherVotes = currentMafiaVotes.filter(vote => vote.player.gamername !== self.gamername);
	    const otherSelectionsTargets = otherSelections.map(selection => selection.target);
	    const otherVotesTargets = otherVotes.map(vote => vote.target);
	    setOtherSelectionsAndVotes([...otherSelectionsTargets, ...otherVotesTargets]);
	  }, [currentMafiaSelections, currentMafiaVotes]);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, "who will die tonight?"), /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    opacity: 0.5
	  }, "each mafia has 1 vote"), /*#__PURE__*/React.createElement(ScrollableFlexColumnBox, null, playersToList.map((player, index) => {
	    const iVoted = mySelection?.gamername === player.gamername || myVote?.gamername === player.gamername;
	    const otherKillVotes = otherSelectionsAndVotes.filter(target => target.gamername === player.gamername).length;
	    return /*#__PURE__*/React.createElement(NameButton, {
	      key: index,
	      disabled: player.role === "mafia" || myVote !== null,
	      onClick: () => handleMafiaSelection(player.gamername)
	    }, /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        display: "flex",
	        flexDirection: "row",
	        alignItems: "center",
	        justifyContent: "center",
	        gap: 3,
	        position: "absolute",
	        right: 15
	      }
	    }, otherKillVotes > 0 ? /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        width: 30.158,
	        height: 30.158,
	        borderRadius: "50%",
	        backgroundColor: "transparent",
	        display: "flex",
	        alignItems: "center",
	        justifyContent: "center",
	        position: "relative",
	        opacity: 0.5
	      }
	    }, /*#__PURE__*/React.createElement(Skull, null), otherKillVotes > 1 ? /*#__PURE__*/React.createElement(Text, {
	      size: 18,
	      style: {
	        position: "absolute",
	        right: -17,
	        bottom: -2
	      }
	    }, "x", otherKillVotes) : null) : null, otherKillVotes > 1 ? /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        width: 17
	      }
	    }) : null, iVoted ? /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        width: 30.158,
	        height: 30.158,
	        borderRadius: "50%",
	        backgroundColor: "var(--Main-Red)",
	        display: "flex",
	        alignItems: "center",
	        justifyContent: "center",
	        position: "relative"
	      }
	    }, /*#__PURE__*/React.createElement(Skull, null)) : null), /*#__PURE__*/React.createElement(Text, {
	      size: 18
	    }, player.realname, player.role === "mafia" ? " (mafia)" : null));
	  })), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      flex: 1
	    }
	  }), /*#__PURE__*/React.createElement(TheButton, {
	    disabled: mySelection === null || myVote !== null,
	    onClick: handleConfirmation,
	    style: {
	      position: "relative"
	    }
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    weight: 700
	  }, myVote === null ? "confirm vote" : "vote confirmed")));
	}

	var v$1 = "5.9.0";
	var fr$1 = 30;
	var ip$1 = 0;
	var op$1 = 60;
	var w$1 = 24;
	var h$1 = 24;
	var nm$1 = "Final composition 2";
	var ddd$1 = 0;
	var assets$1 = [
	];
	var layers$1 = [
		{
			ddd: 0,
			ind: 1,
			ty: 4,
			nm: "Shape Layer 4",
			parent: 2,
			td: 1,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 1,
					k: [
						{
							i: {
								x: 0.833,
								y: 0.833
							},
							o: {
								x: 0.167,
								y: 0.167
							},
							t: 9,
							s: [
								-2.103,
								-0.869,
								0
							],
							to: [
								0,
								0,
								0
							],
							ti: [
								0,
								0,
								0
							]
						},
						{
							t: 36,
							s: [
								-18.723,
								-11.574,
								0
							]
						}
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						0,
						0,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						74,
						74,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							d: 1,
							ty: "el",
							s: {
								a: 0,
								k: [
									24,
									24
								],
								ix: 2
							},
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 3
							},
							nm: "Ellipse Path 1",
							mn: "ADBE Vector Shape - Ellipse",
							hd: false
						},
						{
							ty: "st",
							c: {
								a: 0,
								k: [
									1,
									1,
									1,
									1
								],
								ix: 3
							},
							o: {
								a: 0,
								k: 100,
								ix: 4
							},
							w: {
								a: 0,
								k: 0,
								ix: 5
							},
							lc: 1,
							lj: 1,
							ml: 4,
							bm: 0,
							nm: "Stroke 1",
							mn: "ADBE Vector Graphic - Stroke",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.825659000172,
									0.825659000172,
									0.825659000172,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Ellipse 1",
					np: 3,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		},
		{
			ddd: 0,
			ind: 2,
			ty: 4,
			nm: "Shape Layer 2",
			tt: 2,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0.833
								],
								y: [
									0.833
								]
							},
							o: {
								x: [
									0.809
								],
								y: [
									0
								]
							},
							t: 9,
							s: [
								0
							]
						},
						{
							t: 36,
							s: [
								180
							]
						}
					],
					ix: 10
				},
				p: {
					a: 0,
					k: [
						11.979,
						12.168,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						2.264,
						2.597,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0.833,
									0.833,
									0.833
								],
								y: [
									0.833,
									0.833,
									1
								]
							},
							o: {
								x: [
									0.797,
									0.797,
									0.167
								],
								y: [
									0,
									0,
									0
								]
							},
							t: 9,
							s: [
								100,
								100,
								100
							]
						},
						{
							t: 36,
							s: [
								71,
								71,
								100
							]
						}
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							d: 1,
							ty: "el",
							s: {
								a: 0,
								k: [
									18.335,
									18.335
								],
								ix: 2
							},
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 3
							},
							nm: "Ellipse Path 1",
							mn: "ADBE Vector Shape - Ellipse",
							hd: false
						},
						{
							ty: "st",
							c: {
								a: 0,
								k: [
									1,
									1,
									1,
									1
								],
								ix: 3
							},
							o: {
								a: 0,
								k: 100,
								ix: 4
							},
							w: {
								a: 0,
								k: 0,
								ix: 5
							},
							lc: 1,
							lj: 1,
							ml: 4,
							bm: 0,
							nm: "Stroke 1",
							mn: "ADBE Vector Graphic - Stroke",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									2.234,
									2.834
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Ellipse 1",
					np: 3,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		},
		{
			ddd: 0,
			ind: 3,
			ty: 4,
			nm: "Sun Outlines",
			td: 1,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 0,
					k: [
						12,
						12,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						12,
						12,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						100,
						100,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											1.268,
											-0.717
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.717,
											1.268
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											0.76,
											-2.277
										],
										[
											-2.277,
											0.76
										],
										[
											2.277,
											2.277
										],
										[
											0.759,
											-2.277
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									18.207,
									18.208
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 1",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											-0.744
										],
										[
											0.189,
											-0.683
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0.189,
											0.683
										],
										[
											0,
											0.744
										],
										[
											0,
											0
										]
									],
									v: [
										[
											2.147,
											0
										],
										[
											-2.146,
											-2.147
										],
										[
											-1.853,
											0
										],
										[
											-2.146,
											2.147
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									21.854,
									12
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 2",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 2,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.744,
											0
										],
										[
											-0.683,
											-0.189
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.744,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.683,
											-0.189
										]
									],
									v: [
										[
											0,
											1.854
										],
										[
											2.147,
											2.146
										],
										[
											0,
											-2.146
										],
										[
											-2.147,
											2.146
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									12,
									2.146
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 3",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 3,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.268,
											0.717
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.717,
											-1.269
										],
										[
											0,
											0
										]
									],
									v: [
										[
											2.277,
											-0.758
										],
										[
											-2.277,
											-2.277
										],
										[
											-0.76,
											2.277
										],
										[
											2.277,
											-0.76
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									5.793,
									5.791
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 4",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 4,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0.744
										],
										[
											-0.189,
											0.683
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0,
											-0.744
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.189,
											-0.683
										]
									],
									v: [
										[
											1.854,
											0
										],
										[
											2.146,
											-2.147
										],
										[
											-2.146,
											0
										],
										[
											2.146,
											2.147
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									2.147,
									12
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 5",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 5,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.717,
											1.269
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.269,
											-0.717
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-0.758,
											-2.276
										],
										[
											-2.277,
											2.278
										],
										[
											2.277,
											0.759
										],
										[
											-0.76,
											-2.278
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									5.793,
									18.206
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 6",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 6,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.744,
											0
										],
										[
											0.683,
											0.189
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.744,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.683,
											0.189
										]
									],
									v: [
										[
											0,
											-1.854
										],
										[
											-2.147,
											-2.146
										],
										[
											0,
											2.146
										],
										[
											2.147,
											-2.146
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									12,
									21.854
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 7",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 7,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											-0.717,
											-1.268
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											1.268,
											0.717
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-2.277,
											-0.76
										],
										[
											0.76,
											2.277
										],
										[
											2.277,
											-2.277
										],
										[
											-2.277,
											-0.759
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.921568687289,
									0.921568687289,
									0.921568687289,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									18.208,
									5.793
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 8",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 8,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		},
		{
			ddd: 0,
			ind: 4,
			ty: 4,
			nm: "Shape Layer 3",
			tt: 1,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 0,
					k: [
						12,
						12,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						0,
						0,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0.833,
									0.833,
									0.833
								],
								y: [
									0.833,
									0.833,
									0.833
								]
							},
							o: {
								x: [
									0.167,
									0.167,
									0.167
								],
								y: [
									0.167,
									0.167,
									0.167
								]
							},
							t: 30,
							s: [
								49,
								49,
								100
							]
						},
						{
							t: 50,
							s: [
								154,
								154,
								100
							]
						}
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							d: 1,
							ty: "el",
							s: {
								a: 0,
								k: [
									24,
									24
								],
								ix: 2
							},
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 3
							},
							nm: "Ellipse Path 1",
							mn: "ADBE Vector Shape - Ellipse",
							hd: false
						},
						{
							ty: "st",
							c: {
								a: 0,
								k: [
									1,
									1,
									1,
									1
								],
								ix: 3
							},
							o: {
								a: 0,
								k: 100,
								ix: 4
							},
							w: {
								a: 0,
								k: 0,
								ix: 5
							},
							lc: 1,
							lj: 1,
							ml: 4,
							bm: 0,
							nm: "Stroke 1",
							mn: "ADBE Vector Graphic - Stroke",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.825659000172,
									0.825659000172,
									0.825659000172,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Ellipse 1",
					np: 3,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		}
	];
	var markers$1 = [
	];
	var lottieJson = {
		v: v$1,
		fr: fr$1,
		ip: ip$1,
		op: op$1,
		w: w$1,
		h: h$1,
		nm: nm$1,
		ddd: ddd$1,
		assets: assets$1,
		layers: layers$1,
		markers: markers$1
	};

	var v = "5.9.0";
	var fr = 30;
	var ip = 0;
	var op = 60;
	var w = 24;
	var h = 24;
	var nm = "Final composition 2";
	var ddd = 0;
	var assets = [
	];
	var layers = [
		{
			ddd: 0,
			ind: 1,
			ty: 4,
			nm: "Shape Layer 4",
			parent: 2,
			td: 1,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 1,
					k: [
						{
							i: {
								x: 0.833,
								y: 0.833
							},
							o: {
								x: 0.167,
								y: 0.167
							},
							t: 9,
							s: [
								-2.103,
								-0.869,
								0
							],
							to: [
								0,
								0,
								0
							],
							ti: [
								0,
								0,
								0
							]
						},
						{
							t: 36,
							s: [
								-18.723,
								-11.574,
								0
							]
						}
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						0,
						0,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						74,
						74,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							d: 1,
							ty: "el",
							s: {
								a: 0,
								k: [
									24,
									24
								],
								ix: 2
							},
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 3
							},
							nm: "Ellipse Path 1",
							mn: "ADBE Vector Shape - Ellipse",
							hd: false
						},
						{
							ty: "st",
							c: {
								a: 0,
								k: [
									1,
									1,
									1,
									1
								],
								ix: 3
							},
							o: {
								a: 0,
								k: 100,
								ix: 4
							},
							w: {
								a: 0,
								k: 0,
								ix: 5
							},
							lc: 1,
							lj: 1,
							ml: 4,
							bm: 0,
							nm: "Stroke 1",
							mn: "ADBE Vector Graphic - Stroke",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.825659000172,
									0.825659000172,
									0.825659000172,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Ellipse 1",
					np: 3,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		},
		{
			ddd: 0,
			ind: 2,
			ty: 4,
			nm: "Shape Layer 2",
			tt: 2,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0.833
								],
								y: [
									0.833
								]
							},
							o: {
								x: [
									0.809
								],
								y: [
									0
								]
							},
							t: 9,
							s: [
								0
							]
						},
						{
							t: 36,
							s: [
								180
							]
						}
					],
					ix: 10
				},
				p: {
					a: 0,
					k: [
						11.979,
						12.168,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						2.264,
						2.597,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0.833,
									0.833,
									0.833
								],
								y: [
									0.833,
									0.833,
									1
								]
							},
							o: {
								x: [
									0.797,
									0.797,
									0.167
								],
								y: [
									0,
									0,
									0
								]
							},
							t: 9,
							s: [
								100,
								100,
								100
							]
						},
						{
							t: 36,
							s: [
								71,
								71,
								100
							]
						}
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							d: 1,
							ty: "el",
							s: {
								a: 0,
								k: [
									18.335,
									18.335
								],
								ix: 2
							},
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 3
							},
							nm: "Ellipse Path 1",
							mn: "ADBE Vector Shape - Ellipse",
							hd: false
						},
						{
							ty: "st",
							c: {
								a: 0,
								k: [
									1,
									1,
									1,
									1
								],
								ix: 3
							},
							o: {
								a: 0,
								k: 100,
								ix: 4
							},
							w: {
								a: 0,
								k: 0,
								ix: 5
							},
							lc: 1,
							lj: 1,
							ml: 4,
							bm: 0,
							nm: "Stroke 1",
							mn: "ADBE Vector Graphic - Stroke",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									2.234,
									2.834
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Ellipse 1",
					np: 3,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		},
		{
			ddd: 0,
			ind: 3,
			ty: 4,
			nm: "Sun Outlines",
			td: 1,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 0,
					k: [
						12,
						12,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						12,
						12,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						100,
						100,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											1.268,
											-0.717
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.717,
											1.268
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											0.76,
											-2.277
										],
										[
											-2.277,
											0.76
										],
										[
											2.277,
											2.277
										],
										[
											0.759,
											-2.277
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									18.207,
									18.208
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 1",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											-0.744
										],
										[
											0.189,
											-0.683
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0.189,
											0.683
										],
										[
											0,
											0.744
										],
										[
											0,
											0
										]
									],
									v: [
										[
											2.147,
											0
										],
										[
											-2.146,
											-2.147
										],
										[
											-1.853,
											0
										],
										[
											-2.146,
											2.147
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									21.854,
									12
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 2",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 2,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.744,
											0
										],
										[
											-0.683,
											-0.189
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.744,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.683,
											-0.189
										]
									],
									v: [
										[
											0,
											1.854
										],
										[
											2.147,
											2.146
										],
										[
											0,
											-2.146
										],
										[
											-2.147,
											2.146
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									12,
									2.146
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 3",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 3,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.268,
											0.717
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.717,
											-1.269
										],
										[
											0,
											0
										]
									],
									v: [
										[
											2.277,
											-0.758
										],
										[
											-2.277,
											-2.277
										],
										[
											-0.76,
											2.277
										],
										[
											2.277,
											-0.76
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									5.793,
									5.791
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 4",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 4,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0.744
										],
										[
											-0.189,
											0.683
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0,
											-0.744
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.189,
											-0.683
										]
									],
									v: [
										[
											1.854,
											0
										],
										[
											2.146,
											-2.147
										],
										[
											-2.146,
											0
										],
										[
											2.146,
											2.147
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									2.147,
									12
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 5",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 5,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.717,
											1.269
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.269,
											-0.717
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-0.758,
											-2.276
										],
										[
											-2.277,
											2.278
										],
										[
											2.277,
											0.759
										],
										[
											-0.76,
											-2.278
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									5.793,
									18.206
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 6",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 6,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.744,
											0
										],
										[
											0.683,
											0.189
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.744,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.683,
											0.189
										]
									],
									v: [
										[
											0,
											-1.854
										],
										[
											-2.147,
											-2.146
										],
										[
											0,
											2.146
										],
										[
											2.147,
											-2.146
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									12,
									21.854
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 7",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 7,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											-0.717,
											-1.268
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											1.268,
											0.717
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-2.277,
											-0.76
										],
										[
											0.76,
											2.277
										],
										[
											2.277,
											-2.277
										],
										[
											-2.277,
											-0.759
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									18.208,
									5.793
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 8",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 8,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		},
		{
			ddd: 0,
			ind: 4,
			ty: 4,
			nm: "Shape Layer 3",
			tt: 1,
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 0,
					k: [
						12,
						12,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						0,
						0,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0.833,
									0.833,
									0.833
								],
								y: [
									0.833,
									0.833,
									0.833
								]
							},
							o: {
								x: [
									0.167,
									0.167,
									0.167
								],
								y: [
									0.167,
									0.167,
									0.167
								]
							},
							t: 30,
							s: [
								49,
								49,
								100
							]
						},
						{
							t: 50,
							s: [
								154,
								154,
								100
							]
						}
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							d: 1,
							ty: "el",
							s: {
								a: 0,
								k: [
									24,
									24
								],
								ix: 2
							},
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 3
							},
							nm: "Ellipse Path 1",
							mn: "ADBE Vector Shape - Ellipse",
							hd: false
						},
						{
							ty: "st",
							c: {
								a: 0,
								k: [
									1,
									1,
									1,
									1
								],
								ix: 3
							},
							o: {
								a: 0,
								k: 100,
								ix: 4
							},
							w: {
								a: 0,
								k: 0,
								ix: 5
							},
							lc: 1,
							lj: 1,
							ml: 4,
							bm: 0,
							nm: "Stroke 1",
							mn: "ADBE Vector Graphic - Stroke",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.062745098039,
									0.062745098039,
									0.062745098039,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Ellipse 1",
					np: 3,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 60,
			st: 0,
			bm: 0
		}
	];
	var markers = [
	];
	var lottieJsonHeaven = {
		v: v,
		fr: fr,
		ip: ip,
		op: op,
		w: w,
		h: h,
		nm: nm,
		ddd: ddd,
		assets: assets,
		layers: layers,
		markers: markers
	};

	function Header({
	  time,
	  color = "var(--Main-White)"
	}) {
	  const {
	    self
	  } = reactExports.useContext(VariableContext);
	  const [currentTime, setCurrentTime] = reactExports.useState("night");
	  const animationRef = reactExports.useRef(null);
	  const [enteredHeaven, setEnteredHeaven] = reactExports.useState(false);
	  reactExports.useEffect(() => {
	    if (!enteredHeaven && color === "var(--Main-Black)") {
	      setEnteredHeaven(true);
	      animationRef.current.goToAndStop(59, true);
	    }
	    if (time && time !== currentTime) {
	      setCurrentTime(time);
	      if (time === "day") {
	        animationRef.current.playSegments([0, 59], true);
	      } else {
	        animationRef.current.playSegments([59, 0], true);
	      }
	    }
	  }, [time, color]);
	  return /*#__PURE__*/React.createElement(HeaderBox, null, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 50
	    }
	  }), /*#__PURE__*/React.createElement(SpaceBetweenRowBox, null, /*#__PURE__*/React.createElement(Text, {
	    color: color,
	    size: 18,
	    style: {
	      width: "45%",
	      display: "flex",
	      justifyContent: "flex-start"
	    }
	  }, self.realname), time ? /*#__PURE__*/React.createElement(LottiePlayer, {
	    loop: false,
	    animationData: color === "var(--Main-White)" ? lottieJson : lottieJsonHeaven,
	    play: false,
	    ref: animationRef,
	    style: {
	      maxWidth: 24
	    }
	  }) : null, /*#__PURE__*/React.createElement(Text, {
	    color: color,
	    size: 18,
	    style: {
	      width: "45%",
	      display: "flex",
	      justifyContent: "flex-end"
	    }
	  }, "role: ", self.role)), /*#__PURE__*/React.createElement(Line, {
	    color: color
	  }), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 12
	    }
	  }));
	}

	const InputBox = styled$1(Input$1)({
	  padding: "12px 24px",
	  width: "calc(100% - 48px)",
	  borderRadius: 10,
	  backgroundColor: "var(--Main-White)",
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "center",
	  justifyContent: "flex-start",
	  fontFamily: "American Typewriter",
	  fontSize: 18,
	  fontWeight: 400,
	  color: "var(--Main-Black)"
	});
	function EnterName() {
	  const {
	    self
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleSetRealname
	  } = reactExports.useContext(ActionContext);
	  const [realName, setRealName] = reactExports.useState(self.gamername || "");
	  const [fitsRequiredLength, setFitsRequiredLength] = reactExports.useState(true);
	  const handleSubmit = () => {
	    if (realName.length < 1 || realName.length > 13) {
	      setFitsRequiredLength(false);
	      return;
	    }
	    handleSetRealname(realName);
	  };
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 50
	    }
	  }), /*#__PURE__*/React.createElement(FullLogo, null), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 25
	    }
	  }), /*#__PURE__*/React.createElement(Text, {
	    size: 24,
	    weight: 400
	  }, "Enter your Mafia name"), /*#__PURE__*/React.createElement(InputBox, {
	    placeholder: "Mafia name",
	    value: realName,
	    onChange: e => setRealName(e.target.value),
	    disableUnderline: true
	  }), !fitsRequiredLength ? /*#__PURE__*/React.createElement(Text, {
	    size: 12,
	    color: "var(--Main-Red)"
	  }, "name must be between 1-13 characters") : null, /*#__PURE__*/React.createElement(TheButton, {
	    onClick: handleSubmit,
	    disabled: realName.length === 0
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    weight: 600,
	    color: "var(--Main-White)"
	  }, "join")));
	}

	// import NightDetective from './detective';
	// import NightAngel from './angel';
	// import NightCivilian from './civilian';

	function Night({
	  timerStarted = false
	}) {
	  const {
	    self
	  } = reactExports.useContext(VariableContext);
	  if (!timerStarted) return null;
	  if (self.role === 'mafia') return /*#__PURE__*/React.createElement(NightMafia, null);
	  // if (self.role === 'detective') return <NightDetective />;
	  // if (self.role === 'angel') return <NightAngel />;
	  // return <NightCivilian />;
	  return null;
	}

	const MIN_PLAYERS = 5;
	function App() {
	  const {
	    page,
	    self
	  } = reactExports.useContext(VariableContext);
	  const [screenHeight, setScreenHeight] = reactExports.useState(0);
	  const [headerTime, setHeaderTime] = reactExports.useState("night");
	  const [headerColor, setHeaderColor] = reactExports.useState("var(--Main-White)");
	  const [bgColor, setBgColor] = reactExports.useState("var(--Main-Black)");
	  const [image, setImage] = reactExports.useState("url(./assets/night-stars.png)");
	  reactExports.useEffect(() => {
	    if (typeof window !== "undefined") {
	      setScreenHeight(window.innerHeight);
	    }
	  }, []);
	  function getPage(page) {
	    switch (page) {
	      case WAITING_PLAYERS:
	        if (!self.realname || self.realname.length === 0) {
	          return /*#__PURE__*/React.createElement(EnterName, null);
	        } else {
	          return /*#__PURE__*/React.createElement(WaitingPlayers, {
	            screenHeight: screenHeight,
	            minPlayers: MIN_PLAYERS
	          });
	        }
	      case WELCOME:
	      case YOU_READY:
	        return /*#__PURE__*/React.createElement(Preparation, null);
	      case REVEAL_IDENTITY:
	        return /*#__PURE__*/React.createElement(IdentityReveal, {
	          screenHeight: screenHeight
	        });
	      case INSTRUCTIONS:
	        return /*#__PURE__*/React.createElement(Instructions, null);
	      case NIGHTTIME:
	        return /*#__PURE__*/React.createElement(Night, null);
	      case NIGHTTIME_TIMER:
	        return /*#__PURE__*/React.createElement(Night, {
	          timerStarted: true
	        });
	      // case NIGHT:
	      //   switch (role) {
	      //     case "mafia":
	      //       return (
	      //         <NightMafia/>
	      //       );
	      //     case "detective":
	      //       return (
	      //         <NightDetective/>
	      //       );
	      //     case "angel":
	      //       return (
	      //         <NightAngel/>
	      //       );
	      //     case "civilian":
	      //       return (
	      //         <NightCivilian/>
	      //       );
	      //     default:
	      //       return null;
	      //   }
	      // case NIGHT_FINISHED:
	      //   return <NightFinished/>;
	      // case DAY:
	      //   return (
	      //     <Day/>
	      //   );
	      // case VOTING:
	      //   return (
	      //     <Voting/>
	      //   );
	      // case WIN:
	      //   return (
	      //     <Win/>
	      //   );
	      // case HEAVEN_WELCOME:
	      //   return (
	      //     <HeavenWelcome/>
	      //   );
	      // case HEAVEN_DAY:
	      //   return (
	      //     <HeavenDay/>
	      //   );
	      // case HEAVEN_NIGHT:
	      //   return (
	      //     <HeavenNight/>
	      //   );
	      default:
	        return null;
	    }
	  }
	  if (!self || !self.gamername) {
	    return /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        display: "flex",
	        flexDirection: "column",
	        alignItems: "center",
	        justifyContent: "flex-start",
	        height: "100vh",
	        width: "100vw"
	      }
	    });
	  } else if (page <= REVEAL_IDENTITY) {
	    return /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        display: "flex",
	        flexDirection: "column",
	        alignItems: "center",
	        justifyContent: "flex-start",
	        height: "100vh",
	        width: "100vw"
	      }
	    }, /*#__PURE__*/React.createElement(StandardPageBox, null, getPage(page)));
	  } else if (page === INSTRUCTIONS || page === GAME_OVER) {
	    return /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        display: "flex",
	        flexDirection: "column",
	        alignItems: "center",
	        justifyContent: "center",
	        height: "100vh",
	        width: "100vw"
	      }
	    }, /*#__PURE__*/React.createElement(StandardPageBox, null, /*#__PURE__*/React.createElement(Header, null), getPage(page)));
	  } else {
	    return /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        display: "flex",
	        flexDirection: "column",
	        alignItems: "center",
	        justifyContent: "center",
	        height: "100vh",
	        width: "100vw"
	      }
	    }, /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        width: "100vw",
	        height: "100vh",
	        backgroundRepeat: "repeat",
	        backgroundImage: image,
	        display: "flex",
	        flexDirection: "column",
	        alignItems: "center",
	        justifyContent: "center",
	        backgroundColor: bgColor
	      }
	    }, /*#__PURE__*/React.createElement(StandardPageBox, null, /*#__PURE__*/React.createElement(Header, {
	      time: headerTime,
	      color: headerColor
	    }), getPage(page), /*#__PURE__*/React.createElement(Box$1, {
	      style: {
	        height: 18
	      }
	    }))));
	  }
	}

	createRoot(document.querySelector("#root")).render( /*#__PURE__*/React.createElement(VariableProvider, null, /*#__PURE__*/React.createElement(CommunicationProvider, null, /*#__PURE__*/React.createElement(ActionProvider, null, /*#__PURE__*/React.createElement(App, null)))));

})();
