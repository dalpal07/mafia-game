(function () {
	'use strict';

	function _mergeNamespaces(n, m) {
		m.forEach(function (e) {
			e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {
				if (k !== 'default' && !(k in n)) {
					var d = Object.getOwnPropertyDescriptor(e, k);
					Object.defineProperty(n, k, d.get ? d : {
						enumerable: true,
						get: function () { return e[k]; }
					});
				}
			});
		});
		return Object.freeze(n);
	}

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function getDefaultExportFromCjs (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	function getAugmentedNamespace(n) {
	  if (n.__esModule) return n;
	  var f = n.default;
		if (typeof f == "function") {
			var a = function a () {
				if (this instanceof a) {
	        return Reflect.construct(f, arguments, this.constructor);
				}
				return f.apply(this, arguments);
			};
			a.prototype = f.prototype;
	  } else a = {};
	  Object.defineProperty(a, '__esModule', {value: true});
		Object.keys(n).forEach(function (k) {
			var d = Object.getOwnPropertyDescriptor(n, k);
			Object.defineProperty(a, k, d.get ? d : {
				enumerable: true,
				get: function () {
					return n[k];
				}
			});
		});
		return a;
	}

	var react$1 = {exports: {}};

	var react_development = {exports: {}};

	/**
	 * @license React
	 * react.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	react_development.exports;

	var hasRequiredReact_development;

	function requireReact_development () {
		if (hasRequiredReact_development) return react_development.exports;
		hasRequiredReact_development = 1;
		(function (module, exports) {

			{
			  (function () {

			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
			    }
			    var ReactVersion = '18.2.0';

			    // ATTENTION
			    // When adding new symbols to this file,
			    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
			    // The Symbol used to tag the ReactElement-like types.
			    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
			    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
			    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
			    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
			    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
			    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
			    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
			    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
			    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
			    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
			    var REACT_MEMO_TYPE = Symbol.for('react.memo');
			    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
			    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
			    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
			    var FAUX_ITERATOR_SYMBOL = '@@iterator';
			    function getIteratorFn(maybeIterable) {
			      if (maybeIterable === null || typeof maybeIterable !== 'object') {
			        return null;
			      }
			      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
			      if (typeof maybeIterator === 'function') {
			        return maybeIterator;
			      }
			      return null;
			    }

			    /**
			     * Keeps track of the current dispatcher.
			     */
			    var ReactCurrentDispatcher = {
			      /**
			       * @internal
			       * @type {ReactComponent}
			       */
			      current: null
			    };

			    /**
			     * Keeps track of the current batch's configuration such as how long an update
			     * should suspend for if it needs to.
			     */
			    var ReactCurrentBatchConfig = {
			      transition: null
			    };
			    var ReactCurrentActQueue = {
			      current: null,
			      // Used to reproduce behavior of `batchedUpdates` in legacy mode.
			      isBatchingLegacy: false,
			      didScheduleLegacyUpdate: false
			    };

			    /**
			     * Keeps track of the current owner.
			     *
			     * The current owner is the component who should own any components that are
			     * currently being constructed.
			     */
			    var ReactCurrentOwner = {
			      /**
			       * @internal
			       * @type {ReactComponent}
			       */
			      current: null
			    };
			    var ReactDebugCurrentFrame = {};
			    var currentExtraStackFrame = null;
			    function setExtraStackFrame(stack) {
			      {
			        currentExtraStackFrame = stack;
			      }
			    }
			    {
			      ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
			        {
			          currentExtraStackFrame = stack;
			        }
			      }; // Stack implementation injected by the current renderer.

			      ReactDebugCurrentFrame.getCurrentStack = null;
			      ReactDebugCurrentFrame.getStackAddendum = function () {
			        var stack = ''; // Add an extra top frame while an element is being validated

			        if (currentExtraStackFrame) {
			          stack += currentExtraStackFrame;
			        } // Delegate to the injected renderer-specific implementation

			        var impl = ReactDebugCurrentFrame.getCurrentStack;
			        if (impl) {
			          stack += impl() || '';
			        }
			        return stack;
			      };
			    }

			    // -----------------------------------------------------------------------------

			    var enableScopeAPI = false; // Experimental Create Event Handle API.
			    var enableCacheElement = false;
			    var enableTransitionTracing = false; // No known bugs, but needs performance testing

			    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
			    // stuff. Intended to enable React core members to more easily debug scheduling
			    // issues in DEV builds.

			    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

			    var ReactSharedInternals = {
			      ReactCurrentDispatcher: ReactCurrentDispatcher,
			      ReactCurrentBatchConfig: ReactCurrentBatchConfig,
			      ReactCurrentOwner: ReactCurrentOwner
			    };
			    {
			      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
			      ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
			    }

			    // by calls to these methods by a Babel plugin.
			    //
			    // In PROD (or in packages without access to React internals),
			    // they are left as they are instead.

			    function warn(format) {
			      {
			        {
			          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
			            args[_key - 1] = arguments[_key];
			          }
			          printWarning('warn', format, args);
			        }
			      }
			    }
			    function error(format) {
			      {
			        {
			          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
			            args[_key2 - 1] = arguments[_key2];
			          }
			          printWarning('error', format, args);
			        }
			      }
			    }
			    function printWarning(level, format, args) {
			      // When changing this logic, you might want to also
			      // update consoleWithStackDev.www.js as well.
			      {
			        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
			        var stack = ReactDebugCurrentFrame.getStackAddendum();
			        if (stack !== '') {
			          format += '%s';
			          args = args.concat([stack]);
			        } // eslint-disable-next-line react-internal/safe-string-coercion

			        var argsWithFormat = args.map(function (item) {
			          return String(item);
			        }); // Careful: RN currently depends on this prefix

			        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
			        // breaks IE9: https://github.com/facebook/react/issues/13610
			        // eslint-disable-next-line react-internal/no-production-logging

			        Function.prototype.apply.call(console[level], console, argsWithFormat);
			      }
			    }
			    var didWarnStateUpdateForUnmountedComponent = {};
			    function warnNoop(publicInstance, callerName) {
			      {
			        var _constructor = publicInstance.constructor;
			        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
			        var warningKey = componentName + "." + callerName;
			        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
			          return;
			        }
			        error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
			        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
			      }
			    }
			    /**
			     * This is the abstract API for an update queue.
			     */

			    var ReactNoopUpdateQueue = {
			      /**
			       * Checks whether or not this composite component is mounted.
			       * @param {ReactClass} publicInstance The instance we want to test.
			       * @return {boolean} True if mounted, false otherwise.
			       * @protected
			       * @final
			       */
			      isMounted: function (publicInstance) {
			        return false;
			      },
			      /**
			       * Forces an update. This should only be invoked when it is known with
			       * certainty that we are **not** in a DOM transaction.
			       *
			       * You may want to call this when you know that some deeper aspect of the
			       * component's state has changed but `setState` was not called.
			       *
			       * This will not invoke `shouldComponentUpdate`, but it will invoke
			       * `componentWillUpdate` and `componentDidUpdate`.
			       *
			       * @param {ReactClass} publicInstance The instance that should rerender.
			       * @param {?function} callback Called after component is updated.
			       * @param {?string} callerName name of the calling function in the public API.
			       * @internal
			       */
			      enqueueForceUpdate: function (publicInstance, callback, callerName) {
			        warnNoop(publicInstance, 'forceUpdate');
			      },
			      /**
			       * Replaces all of the state. Always use this or `setState` to mutate state.
			       * You should treat `this.state` as immutable.
			       *
			       * There is no guarantee that `this.state` will be immediately updated, so
			       * accessing `this.state` after calling this method may return the old value.
			       *
			       * @param {ReactClass} publicInstance The instance that should rerender.
			       * @param {object} completeState Next state.
			       * @param {?function} callback Called after component is updated.
			       * @param {?string} callerName name of the calling function in the public API.
			       * @internal
			       */
			      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
			        warnNoop(publicInstance, 'replaceState');
			      },
			      /**
			       * Sets a subset of the state. This only exists because _pendingState is
			       * internal. This provides a merging strategy that is not available to deep
			       * properties which is confusing. TODO: Expose pendingState or don't use it
			       * during the merge.
			       *
			       * @param {ReactClass} publicInstance The instance that should rerender.
			       * @param {object} partialState Next partial state to be merged with state.
			       * @param {?function} callback Called after component is updated.
			       * @param {?string} Name of the calling function in the public API.
			       * @internal
			       */
			      enqueueSetState: function (publicInstance, partialState, callback, callerName) {
			        warnNoop(publicInstance, 'setState');
			      }
			    };
			    var assign = Object.assign;
			    var emptyObject = {};
			    {
			      Object.freeze(emptyObject);
			    }
			    /**
			     * Base class helpers for the updating state of a component.
			     */

			    function Component(props, context, updater) {
			      this.props = props;
			      this.context = context; // If a component has string refs, we will assign a different object later.

			      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
			      // renderer.

			      this.updater = updater || ReactNoopUpdateQueue;
			    }
			    Component.prototype.isReactComponent = {};
			    /**
			     * Sets a subset of the state. Always use this to mutate
			     * state. You should treat `this.state` as immutable.
			     *
			     * There is no guarantee that `this.state` will be immediately updated, so
			     * accessing `this.state` after calling this method may return the old value.
			     *
			     * There is no guarantee that calls to `setState` will run synchronously,
			     * as they may eventually be batched together.  You can provide an optional
			     * callback that will be executed when the call to setState is actually
			     * completed.
			     *
			     * When a function is provided to setState, it will be called at some point in
			     * the future (not synchronously). It will be called with the up to date
			     * component arguments (state, props, context). These values can be different
			     * from this.* because your function may be called after receiveProps but before
			     * shouldComponentUpdate, and this new state, props, and context will not yet be
			     * assigned to this.
			     *
			     * @param {object|function} partialState Next partial state or function to
			     *        produce next partial state to be merged with current state.
			     * @param {?function} callback Called after state is updated.
			     * @final
			     * @protected
			     */

			    Component.prototype.setState = function (partialState, callback) {
			      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
			        throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
			      }
			      this.updater.enqueueSetState(this, partialState, callback, 'setState');
			    };
			    /**
			     * Forces an update. This should only be invoked when it is known with
			     * certainty that we are **not** in a DOM transaction.
			     *
			     * You may want to call this when you know that some deeper aspect of the
			     * component's state has changed but `setState` was not called.
			     *
			     * This will not invoke `shouldComponentUpdate`, but it will invoke
			     * `componentWillUpdate` and `componentDidUpdate`.
			     *
			     * @param {?function} callback Called after update is complete.
			     * @final
			     * @protected
			     */

			    Component.prototype.forceUpdate = function (callback) {
			      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
			    };
			    /**
			     * Deprecated APIs. These APIs used to exist on classic React classes but since
			     * we would like to deprecate them, we're not going to move them over to this
			     * modern base class. Instead, we define a getter that warns if it's accessed.
			     */

			    {
			      var deprecatedAPIs = {
			        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
			        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
			      };
			      var defineDeprecationWarning = function (methodName, info) {
			        Object.defineProperty(Component.prototype, methodName, {
			          get: function () {
			            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
			            return undefined;
			          }
			        });
			      };
			      for (var fnName in deprecatedAPIs) {
			        if (deprecatedAPIs.hasOwnProperty(fnName)) {
			          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
			        }
			      }
			    }
			    function ComponentDummy() {}
			    ComponentDummy.prototype = Component.prototype;
			    /**
			     * Convenience component with default shallow equality check for sCU.
			     */

			    function PureComponent(props, context, updater) {
			      this.props = props;
			      this.context = context; // If a component has string refs, we will assign a different object later.

			      this.refs = emptyObject;
			      this.updater = updater || ReactNoopUpdateQueue;
			    }
			    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
			    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

			    assign(pureComponentPrototype, Component.prototype);
			    pureComponentPrototype.isPureReactComponent = true;

			    // an immutable object with a single mutable value
			    function createRef() {
			      var refObject = {
			        current: null
			      };
			      {
			        Object.seal(refObject);
			      }
			      return refObject;
			    }
			    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

			    function isArray(a) {
			      return isArrayImpl(a);
			    }

			    /*
			     * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
			     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
			     *
			     * The functions in this module will throw an easier-to-understand,
			     * easier-to-debug exception with a clear errors message message explaining the
			     * problem. (Instead of a confusing exception thrown inside the implementation
			     * of the `value` object).
			     */
			    // $FlowFixMe only called in DEV, so void return is not possible.
			    function typeName(value) {
			      {
			        // toStringTag is needed for namespaced types like Temporal.Instant
			        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
			        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
			        return type;
			      }
			    } // $FlowFixMe only called in DEV, so void return is not possible.

			    function willCoercionThrow(value) {
			      {
			        try {
			          testStringCoercion(value);
			          return false;
			        } catch (e) {
			          return true;
			        }
			      }
			    }
			    function testStringCoercion(value) {
			      // If you ended up here by following an exception call stack, here's what's
			      // happened: you supplied an object or symbol value to React (as a prop, key,
			      // DOM attribute, CSS property, string ref, etc.) and when React tried to
			      // coerce it to a string using `'' + value`, an exception was thrown.
			      //
			      // The most common types that will cause this exception are `Symbol` instances
			      // and Temporal objects like `Temporal.Instant`. But any object that has a
			      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
			      // exception. (Library authors do this to prevent users from using built-in
			      // numeric operators like `+` or comparison operators like `>=` because custom
			      // methods are needed to perform accurate arithmetic or comparison.)
			      //
			      // To fix the problem, coerce this object or symbol value to a string before
			      // passing it to React. The most reliable way is usually `String(value)`.
			      //
			      // To find which value is throwing, check the browser or debugger console.
			      // Before this exception was thrown, there should be `console.error` output
			      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
			      // problem and how that type was used: key, atrribute, input value prop, etc.
			      // In most cases, this console output also shows the component and its
			      // ancestor components where the exception happened.
			      //
			      // eslint-disable-next-line react-internal/safe-string-coercion
			      return '' + value;
			    }
			    function checkKeyStringCoercion(value) {
			      {
			        if (willCoercionThrow(value)) {
			          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
			          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
			        }
			      }
			    }
			    function getWrappedName(outerType, innerType, wrapperName) {
			      var displayName = outerType.displayName;
			      if (displayName) {
			        return displayName;
			      }
			      var functionName = innerType.displayName || innerType.name || '';
			      return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
			    } // Keep in sync with react-reconciler/getComponentNameFromFiber

			    function getContextName(type) {
			      return type.displayName || 'Context';
			    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.

			    function getComponentNameFromType(type) {
			      if (type == null) {
			        // Host root, text node or just invalid type.
			        return null;
			      }
			      {
			        if (typeof type.tag === 'number') {
			          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
			        }
			      }
			      if (typeof type === 'function') {
			        return type.displayName || type.name || null;
			      }
			      if (typeof type === 'string') {
			        return type;
			      }
			      switch (type) {
			        case REACT_FRAGMENT_TYPE:
			          return 'Fragment';
			        case REACT_PORTAL_TYPE:
			          return 'Portal';
			        case REACT_PROFILER_TYPE:
			          return 'Profiler';
			        case REACT_STRICT_MODE_TYPE:
			          return 'StrictMode';
			        case REACT_SUSPENSE_TYPE:
			          return 'Suspense';
			        case REACT_SUSPENSE_LIST_TYPE:
			          return 'SuspenseList';
			      }
			      if (typeof type === 'object') {
			        switch (type.$$typeof) {
			          case REACT_CONTEXT_TYPE:
			            var context = type;
			            return getContextName(context) + '.Consumer';
			          case REACT_PROVIDER_TYPE:
			            var provider = type;
			            return getContextName(provider._context) + '.Provider';
			          case REACT_FORWARD_REF_TYPE:
			            return getWrappedName(type, type.render, 'ForwardRef');
			          case REACT_MEMO_TYPE:
			            var outerName = type.displayName || null;
			            if (outerName !== null) {
			              return outerName;
			            }
			            return getComponentNameFromType(type.type) || 'Memo';
			          case REACT_LAZY_TYPE:
			            {
			              var lazyComponent = type;
			              var payload = lazyComponent._payload;
			              var init = lazyComponent._init;
			              try {
			                return getComponentNameFromType(init(payload));
			              } catch (x) {
			                return null;
			              }
			            }

			          // eslint-disable-next-line no-fallthrough
			        }
			      }
			      return null;
			    }
			    var hasOwnProperty = Object.prototype.hasOwnProperty;
			    var RESERVED_PROPS = {
			      key: true,
			      ref: true,
			      __self: true,
			      __source: true
			    };
			    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
			    {
			      didWarnAboutStringRefs = {};
			    }
			    function hasValidRef(config) {
			      {
			        if (hasOwnProperty.call(config, 'ref')) {
			          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
			          if (getter && getter.isReactWarning) {
			            return false;
			          }
			        }
			      }
			      return config.ref !== undefined;
			    }
			    function hasValidKey(config) {
			      {
			        if (hasOwnProperty.call(config, 'key')) {
			          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
			          if (getter && getter.isReactWarning) {
			            return false;
			          }
			        }
			      }
			      return config.key !== undefined;
			    }
			    function defineKeyPropWarningGetter(props, displayName) {
			      var warnAboutAccessingKey = function () {
			        {
			          if (!specialPropKeyWarningShown) {
			            specialPropKeyWarningShown = true;
			            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
			          }
			        }
			      };
			      warnAboutAccessingKey.isReactWarning = true;
			      Object.defineProperty(props, 'key', {
			        get: warnAboutAccessingKey,
			        configurable: true
			      });
			    }
			    function defineRefPropWarningGetter(props, displayName) {
			      var warnAboutAccessingRef = function () {
			        {
			          if (!specialPropRefWarningShown) {
			            specialPropRefWarningShown = true;
			            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
			          }
			        }
			      };
			      warnAboutAccessingRef.isReactWarning = true;
			      Object.defineProperty(props, 'ref', {
			        get: warnAboutAccessingRef,
			        configurable: true
			      });
			    }
			    function warnIfStringRefCannotBeAutoConverted(config) {
			      {
			        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
			          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
			          if (!didWarnAboutStringRefs[componentName]) {
			            error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
			            didWarnAboutStringRefs[componentName] = true;
			          }
			        }
			      }
			    }
			    /**
			     * Factory method to create a new React element. This no longer adheres to
			     * the class pattern, so do not use new to call it. Also, instanceof check
			     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
			     * if something is a React Element.
			     *
			     * @param {*} type
			     * @param {*} props
			     * @param {*} key
			     * @param {string|object} ref
			     * @param {*} owner
			     * @param {*} self A *temporary* helper to detect places where `this` is
			     * different from the `owner` when React.createElement is called, so that we
			     * can warn. We want to get rid of owner and replace string `ref`s with arrow
			     * functions, and as long as `this` and owner are the same, there will be no
			     * change in behavior.
			     * @param {*} source An annotation object (added by a transpiler or otherwise)
			     * indicating filename, line number, and/or other information.
			     * @internal
			     */

			    var ReactElement = function (type, key, ref, self, source, owner, props) {
			      var element = {
			        // This tag allows us to uniquely identify this as a React Element
			        $$typeof: REACT_ELEMENT_TYPE,
			        // Built-in properties that belong on the element
			        type: type,
			        key: key,
			        ref: ref,
			        props: props,
			        // Record the component responsible for creating this element.
			        _owner: owner
			      };
			      {
			        // The validation flag is currently mutative. We put it on
			        // an external backing store so that we can freeze the whole object.
			        // This can be replaced with a WeakMap once they are implemented in
			        // commonly used development environments.
			        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
			        // the validation flag non-enumerable (where possible, which should
			        // include every environment we run tests in), so the test framework
			        // ignores it.

			        Object.defineProperty(element._store, 'validated', {
			          configurable: false,
			          enumerable: false,
			          writable: true,
			          value: false
			        }); // self and source are DEV only properties.

			        Object.defineProperty(element, '_self', {
			          configurable: false,
			          enumerable: false,
			          writable: false,
			          value: self
			        }); // Two elements created in two different places should be considered
			        // equal for testing purposes and therefore we hide it from enumeration.

			        Object.defineProperty(element, '_source', {
			          configurable: false,
			          enumerable: false,
			          writable: false,
			          value: source
			        });
			        if (Object.freeze) {
			          Object.freeze(element.props);
			          Object.freeze(element);
			        }
			      }
			      return element;
			    };
			    /**
			     * Create and return a new ReactElement of the given type.
			     * See https://reactjs.org/docs/react-api.html#createelement
			     */

			    function createElement(type, config, children) {
			      var propName; // Reserved names are extracted

			      var props = {};
			      var key = null;
			      var ref = null;
			      var self = null;
			      var source = null;
			      if (config != null) {
			        if (hasValidRef(config)) {
			          ref = config.ref;
			          {
			            warnIfStringRefCannotBeAutoConverted(config);
			          }
			        }
			        if (hasValidKey(config)) {
			          {
			            checkKeyStringCoercion(config.key);
			          }
			          key = '' + config.key;
			        }
			        self = config.__self === undefined ? null : config.__self;
			        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

			        for (propName in config) {
			          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
			            props[propName] = config[propName];
			          }
			        }
			      } // Children can be more than one argument, and those are transferred onto
			      // the newly allocated props object.

			      var childrenLength = arguments.length - 2;
			      if (childrenLength === 1) {
			        props.children = children;
			      } else if (childrenLength > 1) {
			        var childArray = Array(childrenLength);
			        for (var i = 0; i < childrenLength; i++) {
			          childArray[i] = arguments[i + 2];
			        }
			        {
			          if (Object.freeze) {
			            Object.freeze(childArray);
			          }
			        }
			        props.children = childArray;
			      } // Resolve default props

			      if (type && type.defaultProps) {
			        var defaultProps = type.defaultProps;
			        for (propName in defaultProps) {
			          if (props[propName] === undefined) {
			            props[propName] = defaultProps[propName];
			          }
			        }
			      }
			      {
			        if (key || ref) {
			          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
			          if (key) {
			            defineKeyPropWarningGetter(props, displayName);
			          }
			          if (ref) {
			            defineRefPropWarningGetter(props, displayName);
			          }
			        }
			      }
			      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
			    }
			    function cloneAndReplaceKey(oldElement, newKey) {
			      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
			      return newElement;
			    }
			    /**
			     * Clone and return a new ReactElement using element as the starting point.
			     * See https://reactjs.org/docs/react-api.html#cloneelement
			     */

			    function cloneElement(element, config, children) {
			      if (element === null || element === undefined) {
			        throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
			      }
			      var propName; // Original props are copied

			      var props = assign({}, element.props); // Reserved names are extracted

			      var key = element.key;
			      var ref = element.ref; // Self is preserved since the owner is preserved.

			      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
			      // transpiler, and the original source is probably a better indicator of the
			      // true owner.

			      var source = element._source; // Owner will be preserved, unless ref is overridden

			      var owner = element._owner;
			      if (config != null) {
			        if (hasValidRef(config)) {
			          // Silently steal the ref from the parent.
			          ref = config.ref;
			          owner = ReactCurrentOwner.current;
			        }
			        if (hasValidKey(config)) {
			          {
			            checkKeyStringCoercion(config.key);
			          }
			          key = '' + config.key;
			        } // Remaining properties override existing props

			        var defaultProps;
			        if (element.type && element.type.defaultProps) {
			          defaultProps = element.type.defaultProps;
			        }
			        for (propName in config) {
			          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
			            if (config[propName] === undefined && defaultProps !== undefined) {
			              // Resolve default props
			              props[propName] = defaultProps[propName];
			            } else {
			              props[propName] = config[propName];
			            }
			          }
			        }
			      } // Children can be more than one argument, and those are transferred onto
			      // the newly allocated props object.

			      var childrenLength = arguments.length - 2;
			      if (childrenLength === 1) {
			        props.children = children;
			      } else if (childrenLength > 1) {
			        var childArray = Array(childrenLength);
			        for (var i = 0; i < childrenLength; i++) {
			          childArray[i] = arguments[i + 2];
			        }
			        props.children = childArray;
			      }
			      return ReactElement(element.type, key, ref, self, source, owner, props);
			    }
			    /**
			     * Verifies the object is a ReactElement.
			     * See https://reactjs.org/docs/react-api.html#isvalidelement
			     * @param {?object} object
			     * @return {boolean} True if `object` is a ReactElement.
			     * @final
			     */

			    function isValidElement(object) {
			      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
			    }
			    var SEPARATOR = '.';
			    var SUBSEPARATOR = ':';
			    /**
			     * Escape and wrap key so it is safe to use as a reactid
			     *
			     * @param {string} key to be escaped.
			     * @return {string} the escaped key.
			     */

			    function escape(key) {
			      var escapeRegex = /[=:]/g;
			      var escaperLookup = {
			        '=': '=0',
			        ':': '=2'
			      };
			      var escapedString = key.replace(escapeRegex, function (match) {
			        return escaperLookup[match];
			      });
			      return '$' + escapedString;
			    }
			    /**
			     * TODO: Test that a single child and an array with one item have the same key
			     * pattern.
			     */

			    var didWarnAboutMaps = false;
			    var userProvidedKeyEscapeRegex = /\/+/g;
			    function escapeUserProvidedKey(text) {
			      return text.replace(userProvidedKeyEscapeRegex, '$&/');
			    }
			    /**
			     * Generate a key string that identifies a element within a set.
			     *
			     * @param {*} element A element that could contain a manual key.
			     * @param {number} index Index that is used if a manual key is not provided.
			     * @return {string}
			     */

			    function getElementKey(element, index) {
			      // Do some typechecking here since we call this blindly. We want to ensure
			      // that we don't block potential future ES APIs.
			      if (typeof element === 'object' && element !== null && element.key != null) {
			        // Explicit key
			        {
			          checkKeyStringCoercion(element.key);
			        }
			        return escape('' + element.key);
			      } // Implicit key determined by the index in the set

			      return index.toString(36);
			    }
			    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
			      var type = typeof children;
			      if (type === 'undefined' || type === 'boolean') {
			        // All of the above are perceived as null.
			        children = null;
			      }
			      var invokeCallback = false;
			      if (children === null) {
			        invokeCallback = true;
			      } else {
			        switch (type) {
			          case 'string':
			          case 'number':
			            invokeCallback = true;
			            break;
			          case 'object':
			            switch (children.$$typeof) {
			              case REACT_ELEMENT_TYPE:
			              case REACT_PORTAL_TYPE:
			                invokeCallback = true;
			            }
			        }
			      }
			      if (invokeCallback) {
			        var _child = children;
			        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
			        // so that it's consistent if the number of children grows:

			        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
			        if (isArray(mappedChild)) {
			          var escapedChildKey = '';
			          if (childKey != null) {
			            escapedChildKey = escapeUserProvidedKey(childKey) + '/';
			          }
			          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
			            return c;
			          });
			        } else if (mappedChild != null) {
			          if (isValidElement(mappedChild)) {
			            {
			              // The `if` statement here prevents auto-disabling of the safe
			              // coercion ESLint rule, so we must manually disable it below.
			              // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
			              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
			                checkKeyStringCoercion(mappedChild.key);
			              }
			            }
			            mappedChild = cloneAndReplaceKey(mappedChild,
			            // Keep both the (mapped) and old keys if they differ, just as
			            // traverseAllChildren used to do for objects as children
			            escapedPrefix + (
			            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
			            mappedChild.key && (!_child || _child.key !== mappedChild.key) ?
			            // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
			            // eslint-disable-next-line react-internal/safe-string-coercion
			            escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
			          }
			          array.push(mappedChild);
			        }
			        return 1;
			      }
			      var child;
			      var nextName;
			      var subtreeCount = 0; // Count of children found in the current subtree.

			      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
			      if (isArray(children)) {
			        for (var i = 0; i < children.length; i++) {
			          child = children[i];
			          nextName = nextNamePrefix + getElementKey(child, i);
			          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
			        }
			      } else {
			        var iteratorFn = getIteratorFn(children);
			        if (typeof iteratorFn === 'function') {
			          var iterableChildren = children;
			          {
			            // Warn about using Maps as children
			            if (iteratorFn === iterableChildren.entries) {
			              if (!didWarnAboutMaps) {
			                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
			              }
			              didWarnAboutMaps = true;
			            }
			          }
			          var iterator = iteratorFn.call(iterableChildren);
			          var step;
			          var ii = 0;
			          while (!(step = iterator.next()).done) {
			            child = step.value;
			            nextName = nextNamePrefix + getElementKey(child, ii++);
			            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
			          }
			        } else if (type === 'object') {
			          // eslint-disable-next-line react-internal/safe-string-coercion
			          var childrenString = String(children);
			          throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
			        }
			      }
			      return subtreeCount;
			    }

			    /**
			     * Maps children that are typically specified as `props.children`.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrenmap
			     *
			     * The provided mapFunction(child, index) will be called for each
			     * leaf child.
			     *
			     * @param {?*} children Children tree container.
			     * @param {function(*, int)} func The map function.
			     * @param {*} context Context for mapFunction.
			     * @return {object} Object containing the ordered map of results.
			     */
			    function mapChildren(children, func, context) {
			      if (children == null) {
			        return children;
			      }
			      var result = [];
			      var count = 0;
			      mapIntoArray(children, result, '', '', function (child) {
			        return func.call(context, child, count++);
			      });
			      return result;
			    }
			    /**
			     * Count the number of children that are typically specified as
			     * `props.children`.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrencount
			     *
			     * @param {?*} children Children tree container.
			     * @return {number} The number of children.
			     */

			    function countChildren(children) {
			      var n = 0;
			      mapChildren(children, function () {
			        n++; // Don't return anything
			      });
			      return n;
			    }

			    /**
			     * Iterates through children that are typically specified as `props.children`.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
			     *
			     * The provided forEachFunc(child, index) will be called for each
			     * leaf child.
			     *
			     * @param {?*} children Children tree container.
			     * @param {function(*, int)} forEachFunc
			     * @param {*} forEachContext Context for forEachContext.
			     */
			    function forEachChildren(children, forEachFunc, forEachContext) {
			      mapChildren(children, function () {
			        forEachFunc.apply(this, arguments); // Don't return anything.
			      }, forEachContext);
			    }
			    /**
			     * Flatten a children object (typically specified as `props.children`) and
			     * return an array with appropriately re-keyed children.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
			     */

			    function toArray(children) {
			      return mapChildren(children, function (child) {
			        return child;
			      }) || [];
			    }
			    /**
			     * Returns the first child in a collection of children and verifies that there
			     * is only one child in the collection.
			     *
			     * See https://reactjs.org/docs/react-api.html#reactchildrenonly
			     *
			     * The current implementation of this function assumes that a single child gets
			     * passed without a wrapper, but the purpose of this helper function is to
			     * abstract away the particular structure of children.
			     *
			     * @param {?object} children Child collection structure.
			     * @return {ReactElement} The first and only `ReactElement` contained in the
			     * structure.
			     */

			    function onlyChild(children) {
			      if (!isValidElement(children)) {
			        throw new Error('React.Children.only expected to receive a single React element child.');
			      }
			      return children;
			    }
			    function createContext(defaultValue) {
			      // TODO: Second argument used to be an optional `calculateChangedBits`
			      // function. Warn to reserve for future use?
			      var context = {
			        $$typeof: REACT_CONTEXT_TYPE,
			        // As a workaround to support multiple concurrent renderers, we categorize
			        // some renderers as primary and others as secondary. We only expect
			        // there to be two concurrent renderers at most: React Native (primary) and
			        // Fabric (secondary); React DOM (primary) and React ART (secondary).
			        // Secondary renderers store their context values on separate fields.
			        _currentValue: defaultValue,
			        _currentValue2: defaultValue,
			        // Used to track how many concurrent renderers this context currently
			        // supports within in a single renderer. Such as parallel server rendering.
			        _threadCount: 0,
			        // These are circular
			        Provider: null,
			        Consumer: null,
			        // Add these to use same hidden class in VM as ServerContext
			        _defaultValue: null,
			        _globalName: null
			      };
			      context.Provider = {
			        $$typeof: REACT_PROVIDER_TYPE,
			        _context: context
			      };
			      var hasWarnedAboutUsingNestedContextConsumers = false;
			      var hasWarnedAboutUsingConsumerProvider = false;
			      var hasWarnedAboutDisplayNameOnConsumer = false;
			      {
			        // A separate object, but proxies back to the original context object for
			        // backwards compatibility. It has a different $$typeof, so we can properly
			        // warn for the incorrect usage of Context as a Consumer.
			        var Consumer = {
			          $$typeof: REACT_CONTEXT_TYPE,
			          _context: context
			        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

			        Object.defineProperties(Consumer, {
			          Provider: {
			            get: function () {
			              if (!hasWarnedAboutUsingConsumerProvider) {
			                hasWarnedAboutUsingConsumerProvider = true;
			                error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
			              }
			              return context.Provider;
			            },
			            set: function (_Provider) {
			              context.Provider = _Provider;
			            }
			          },
			          _currentValue: {
			            get: function () {
			              return context._currentValue;
			            },
			            set: function (_currentValue) {
			              context._currentValue = _currentValue;
			            }
			          },
			          _currentValue2: {
			            get: function () {
			              return context._currentValue2;
			            },
			            set: function (_currentValue2) {
			              context._currentValue2 = _currentValue2;
			            }
			          },
			          _threadCount: {
			            get: function () {
			              return context._threadCount;
			            },
			            set: function (_threadCount) {
			              context._threadCount = _threadCount;
			            }
			          },
			          Consumer: {
			            get: function () {
			              if (!hasWarnedAboutUsingNestedContextConsumers) {
			                hasWarnedAboutUsingNestedContextConsumers = true;
			                error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
			              }
			              return context.Consumer;
			            }
			          },
			          displayName: {
			            get: function () {
			              return context.displayName;
			            },
			            set: function (displayName) {
			              if (!hasWarnedAboutDisplayNameOnConsumer) {
			                warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);
			                hasWarnedAboutDisplayNameOnConsumer = true;
			              }
			            }
			          }
			        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

			        context.Consumer = Consumer;
			      }
			      {
			        context._currentRenderer = null;
			        context._currentRenderer2 = null;
			      }
			      return context;
			    }
			    var Uninitialized = -1;
			    var Pending = 0;
			    var Resolved = 1;
			    var Rejected = 2;
			    function lazyInitializer(payload) {
			      if (payload._status === Uninitialized) {
			        var ctor = payload._result;
			        var thenable = ctor(); // Transition to the next state.
			        // This might throw either because it's missing or throws. If so, we treat it
			        // as still uninitialized and try again next time. Which is the same as what
			        // happens if the ctor or any wrappers processing the ctor throws. This might
			        // end up fixing it if the resolution was a concurrency bug.

			        thenable.then(function (moduleObject) {
			          if (payload._status === Pending || payload._status === Uninitialized) {
			            // Transition to the next state.
			            var resolved = payload;
			            resolved._status = Resolved;
			            resolved._result = moduleObject;
			          }
			        }, function (error) {
			          if (payload._status === Pending || payload._status === Uninitialized) {
			            // Transition to the next state.
			            var rejected = payload;
			            rejected._status = Rejected;
			            rejected._result = error;
			          }
			        });
			        if (payload._status === Uninitialized) {
			          // In case, we're still uninitialized, then we're waiting for the thenable
			          // to resolve. Set it as pending in the meantime.
			          var pending = payload;
			          pending._status = Pending;
			          pending._result = thenable;
			        }
			      }
			      if (payload._status === Resolved) {
			        var moduleObject = payload._result;
			        {
			          if (moduleObject === undefined) {
			            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' +
			            // Break up imports to avoid accidentally parsing them as dependencies.
			            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
			          }
			        }
			        {
			          if (!('default' in moduleObject)) {
			            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' +
			            // Break up imports to avoid accidentally parsing them as dependencies.
			            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
			          }
			        }
			        return moduleObject.default;
			      } else {
			        throw payload._result;
			      }
			    }
			    function lazy(ctor) {
			      var payload = {
			        // We use these fields to store the result.
			        _status: Uninitialized,
			        _result: ctor
			      };
			      var lazyType = {
			        $$typeof: REACT_LAZY_TYPE,
			        _payload: payload,
			        _init: lazyInitializer
			      };
			      {
			        // In production, this would just set it on the object.
			        var defaultProps;
			        var propTypes; // $FlowFixMe

			        Object.defineProperties(lazyType, {
			          defaultProps: {
			            configurable: true,
			            get: function () {
			              return defaultProps;
			            },
			            set: function (newDefaultProps) {
			              error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
			              defaultProps = newDefaultProps; // Match production behavior more closely:
			              // $FlowFixMe

			              Object.defineProperty(lazyType, 'defaultProps', {
			                enumerable: true
			              });
			            }
			          },
			          propTypes: {
			            configurable: true,
			            get: function () {
			              return propTypes;
			            },
			            set: function (newPropTypes) {
			              error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
			              propTypes = newPropTypes; // Match production behavior more closely:
			              // $FlowFixMe

			              Object.defineProperty(lazyType, 'propTypes', {
			                enumerable: true
			              });
			            }
			          }
			        });
			      }
			      return lazyType;
			    }
			    function forwardRef(render) {
			      {
			        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
			          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
			        } else if (typeof render !== 'function') {
			          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
			        } else {
			          if (render.length !== 0 && render.length !== 2) {
			            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
			          }
			        }
			        if (render != null) {
			          if (render.defaultProps != null || render.propTypes != null) {
			            error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
			          }
			        }
			      }
			      var elementType = {
			        $$typeof: REACT_FORWARD_REF_TYPE,
			        render: render
			      };
			      {
			        var ownName;
			        Object.defineProperty(elementType, 'displayName', {
			          enumerable: false,
			          configurable: true,
			          get: function () {
			            return ownName;
			          },
			          set: function (name) {
			            ownName = name; // The inner component shouldn't inherit this display name in most cases,
			            // because the component may be used elsewhere.
			            // But it's nice for anonymous functions to inherit the name,
			            // so that our component-stack generation logic will display their frames.
			            // An anonymous function generally suggests a pattern like:
			            //   React.forwardRef((props, ref) => {...});
			            // This kind of inner function is not used elsewhere so the side effect is okay.

			            if (!render.name && !render.displayName) {
			              render.displayName = name;
			            }
			          }
			        });
			      }
			      return elementType;
			    }
			    var REACT_MODULE_REFERENCE;
			    {
			      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
			    }
			    function isValidElementType(type) {
			      if (typeof type === 'string' || typeof type === 'function') {
			        return true;
			      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).

			      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
			        return true;
			      }
			      if (typeof type === 'object' && type !== null) {
			        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||
			        // This needs to include all possible module reference object
			        // types supported by any Flight configuration anywhere since
			        // we don't know which Flight build this will end up being used
			        // with.
			        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
			          return true;
			        }
			      }
			      return false;
			    }
			    function memo(type, compare) {
			      {
			        if (!isValidElementType(type)) {
			          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
			        }
			      }
			      var elementType = {
			        $$typeof: REACT_MEMO_TYPE,
			        type: type,
			        compare: compare === undefined ? null : compare
			      };
			      {
			        var ownName;
			        Object.defineProperty(elementType, 'displayName', {
			          enumerable: false,
			          configurable: true,
			          get: function () {
			            return ownName;
			          },
			          set: function (name) {
			            ownName = name; // The inner component shouldn't inherit this display name in most cases,
			            // because the component may be used elsewhere.
			            // But it's nice for anonymous functions to inherit the name,
			            // so that our component-stack generation logic will display their frames.
			            // An anonymous function generally suggests a pattern like:
			            //   React.memo((props) => {...});
			            // This kind of inner function is not used elsewhere so the side effect is okay.

			            if (!type.name && !type.displayName) {
			              type.displayName = name;
			            }
			          }
			        });
			      }
			      return elementType;
			    }
			    function resolveDispatcher() {
			      var dispatcher = ReactCurrentDispatcher.current;
			      {
			        if (dispatcher === null) {
			          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
			        }
			      } // Will result in a null access error if accessed outside render phase. We
			      // intentionally don't throw our own error because this is in a hot path.
			      // Also helps ensure this is inlined.

			      return dispatcher;
			    }
			    function useContext(Context) {
			      var dispatcher = resolveDispatcher();
			      {
			        // TODO: add a more generic warning for invalid values.
			        if (Context._context !== undefined) {
			          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
			          // and nobody should be using this in existing code.

			          if (realContext.Consumer === Context) {
			            error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
			          } else if (realContext.Provider === Context) {
			            error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
			          }
			        }
			      }
			      return dispatcher.useContext(Context);
			    }
			    function useState(initialState) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useState(initialState);
			    }
			    function useReducer(reducer, initialArg, init) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useReducer(reducer, initialArg, init);
			    }
			    function useRef(initialValue) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useRef(initialValue);
			    }
			    function useEffect(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useEffect(create, deps);
			    }
			    function useInsertionEffect(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useInsertionEffect(create, deps);
			    }
			    function useLayoutEffect(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useLayoutEffect(create, deps);
			    }
			    function useCallback(callback, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useCallback(callback, deps);
			    }
			    function useMemo(create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useMemo(create, deps);
			    }
			    function useImperativeHandle(ref, create, deps) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useImperativeHandle(ref, create, deps);
			    }
			    function useDebugValue(value, formatterFn) {
			      {
			        var dispatcher = resolveDispatcher();
			        return dispatcher.useDebugValue(value, formatterFn);
			      }
			    }
			    function useTransition() {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useTransition();
			    }
			    function useDeferredValue(value) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useDeferredValue(value);
			    }
			    function useId() {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useId();
			    }
			    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
			      var dispatcher = resolveDispatcher();
			      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
			    }

			    // Helpers to patch console.logs to avoid logging during side-effect free
			    // replaying on render function. This currently only patches the object
			    // lazily which won't cover if the log function was extracted eagerly.
			    // We could also eagerly patch the method.
			    var disabledDepth = 0;
			    var prevLog;
			    var prevInfo;
			    var prevWarn;
			    var prevError;
			    var prevGroup;
			    var prevGroupCollapsed;
			    var prevGroupEnd;
			    function disabledLog() {}
			    disabledLog.__reactDisabledLog = true;
			    function disableLogs() {
			      {
			        if (disabledDepth === 0) {
			          /* eslint-disable react-internal/no-production-logging */
			          prevLog = console.log;
			          prevInfo = console.info;
			          prevWarn = console.warn;
			          prevError = console.error;
			          prevGroup = console.group;
			          prevGroupCollapsed = console.groupCollapsed;
			          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

			          var props = {
			            configurable: true,
			            enumerable: true,
			            value: disabledLog,
			            writable: true
			          }; // $FlowFixMe Flow thinks console is immutable.

			          Object.defineProperties(console, {
			            info: props,
			            log: props,
			            warn: props,
			            error: props,
			            group: props,
			            groupCollapsed: props,
			            groupEnd: props
			          });
			          /* eslint-enable react-internal/no-production-logging */
			        }
			        disabledDepth++;
			      }
			    }
			    function reenableLogs() {
			      {
			        disabledDepth--;
			        if (disabledDepth === 0) {
			          /* eslint-disable react-internal/no-production-logging */
			          var props = {
			            configurable: true,
			            enumerable: true,
			            writable: true
			          }; // $FlowFixMe Flow thinks console is immutable.

			          Object.defineProperties(console, {
			            log: assign({}, props, {
			              value: prevLog
			            }),
			            info: assign({}, props, {
			              value: prevInfo
			            }),
			            warn: assign({}, props, {
			              value: prevWarn
			            }),
			            error: assign({}, props, {
			              value: prevError
			            }),
			            group: assign({}, props, {
			              value: prevGroup
			            }),
			            groupCollapsed: assign({}, props, {
			              value: prevGroupCollapsed
			            }),
			            groupEnd: assign({}, props, {
			              value: prevGroupEnd
			            })
			          });
			          /* eslint-enable react-internal/no-production-logging */
			        }
			        if (disabledDepth < 0) {
			          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
			        }
			      }
			    }
			    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
			    var prefix;
			    function describeBuiltInComponentFrame(name, source, ownerFn) {
			      {
			        if (prefix === undefined) {
			          // Extract the VM specific prefix used by each line.
			          try {
			            throw Error();
			          } catch (x) {
			            var match = x.stack.trim().match(/\n( *(at )?)/);
			            prefix = match && match[1] || '';
			          }
			        } // We use the prefix to ensure our stacks line up with native stack frames.

			        return '\n' + prefix + name;
			      }
			    }
			    var reentry = false;
			    var componentFrameCache;
			    {
			      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
			      componentFrameCache = new PossiblyWeakMap();
			    }
			    function describeNativeComponentFrame(fn, construct) {
			      // If something asked for a stack inside a fake render, it should get ignored.
			      if (!fn || reentry) {
			        return '';
			      }
			      {
			        var frame = componentFrameCache.get(fn);
			        if (frame !== undefined) {
			          return frame;
			        }
			      }
			      var control;
			      reentry = true;
			      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

			      Error.prepareStackTrace = undefined;
			      var previousDispatcher;
			      {
			        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
			        // for warnings.

			        ReactCurrentDispatcher$1.current = null;
			        disableLogs();
			      }
			      try {
			        // This should throw.
			        if (construct) {
			          // Something should be setting the props in the constructor.
			          var Fake = function () {
			            throw Error();
			          }; // $FlowFixMe

			          Object.defineProperty(Fake.prototype, 'props', {
			            set: function () {
			              // We use a throwing setter instead of frozen or non-writable props
			              // because that won't throw in a non-strict mode function.
			              throw Error();
			            }
			          });
			          if (typeof Reflect === 'object' && Reflect.construct) {
			            // We construct a different control for this case to include any extra
			            // frames added by the construct call.
			            try {
			              Reflect.construct(Fake, []);
			            } catch (x) {
			              control = x;
			            }
			            Reflect.construct(fn, [], Fake);
			          } else {
			            try {
			              Fake.call();
			            } catch (x) {
			              control = x;
			            }
			            fn.call(Fake.prototype);
			          }
			        } else {
			          try {
			            throw Error();
			          } catch (x) {
			            control = x;
			          }
			          fn();
			        }
			      } catch (sample) {
			        // This is inlined manually because closure doesn't do it for us.
			        if (sample && control && typeof sample.stack === 'string') {
			          // This extracts the first frame from the sample that isn't also in the control.
			          // Skipping one frame that we assume is the frame that calls the two.
			          var sampleLines = sample.stack.split('\n');
			          var controlLines = control.stack.split('\n');
			          var s = sampleLines.length - 1;
			          var c = controlLines.length - 1;
			          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
			            // We expect at least one stack frame to be shared.
			            // Typically this will be the root most one. However, stack frames may be
			            // cut off due to maximum stack limits. In this case, one maybe cut off
			            // earlier than the other. We assume that the sample is longer or the same
			            // and there for cut off earlier. So we should find the root most frame in
			            // the sample somewhere in the control.
			            c--;
			          }
			          for (; s >= 1 && c >= 0; s--, c--) {
			            // Next we find the first one that isn't the same which should be the
			            // frame that called our sample function and the control.
			            if (sampleLines[s] !== controlLines[c]) {
			              // In V8, the first line is describing the message but other VMs don't.
			              // If we're about to return the first line, and the control is also on the same
			              // line, that's a pretty good indicator that our sample threw at same line as
			              // the control. I.e. before we entered the sample frame. So we ignore this result.
			              // This can happen if you passed a class to function component, or non-function.
			              if (s !== 1 || c !== 1) {
			                do {
			                  s--;
			                  c--; // We may still have similar intermediate frames from the construct call.
			                  // The next one that isn't the same should be our match though.

			                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
			                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
			                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
			                    // but we have a user-provided "displayName"
			                    // splice it in to make the stack more readable.

			                    if (fn.displayName && _frame.includes('<anonymous>')) {
			                      _frame = _frame.replace('<anonymous>', fn.displayName);
			                    }
			                    {
			                      if (typeof fn === 'function') {
			                        componentFrameCache.set(fn, _frame);
			                      }
			                    } // Return the line we found.

			                    return _frame;
			                  }
			                } while (s >= 1 && c >= 0);
			              }
			              break;
			            }
			          }
			        }
			      } finally {
			        reentry = false;
			        {
			          ReactCurrentDispatcher$1.current = previousDispatcher;
			          reenableLogs();
			        }
			        Error.prepareStackTrace = previousPrepareStackTrace;
			      } // Fallback to just using the name if we couldn't make it throw.

			      var name = fn ? fn.displayName || fn.name : '';
			      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
			      {
			        if (typeof fn === 'function') {
			          componentFrameCache.set(fn, syntheticFrame);
			        }
			      }
			      return syntheticFrame;
			    }
			    function describeFunctionComponentFrame(fn, source, ownerFn) {
			      {
			        return describeNativeComponentFrame(fn, false);
			      }
			    }
			    function shouldConstruct(Component) {
			      var prototype = Component.prototype;
			      return !!(prototype && prototype.isReactComponent);
			    }
			    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
			      if (type == null) {
			        return '';
			      }
			      if (typeof type === 'function') {
			        {
			          return describeNativeComponentFrame(type, shouldConstruct(type));
			        }
			      }
			      if (typeof type === 'string') {
			        return describeBuiltInComponentFrame(type);
			      }
			      switch (type) {
			        case REACT_SUSPENSE_TYPE:
			          return describeBuiltInComponentFrame('Suspense');
			        case REACT_SUSPENSE_LIST_TYPE:
			          return describeBuiltInComponentFrame('SuspenseList');
			      }
			      if (typeof type === 'object') {
			        switch (type.$$typeof) {
			          case REACT_FORWARD_REF_TYPE:
			            return describeFunctionComponentFrame(type.render);
			          case REACT_MEMO_TYPE:
			            // Memo may contain any component type so we recursively resolve it.
			            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
			          case REACT_LAZY_TYPE:
			            {
			              var lazyComponent = type;
			              var payload = lazyComponent._payload;
			              var init = lazyComponent._init;
			              try {
			                // Lazy may contain any component type so we recursively resolve it.
			                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
			              } catch (x) {}
			            }
			        }
			      }
			      return '';
			    }
			    var loggedTypeFailures = {};
			    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
			    function setCurrentlyValidatingElement(element) {
			      {
			        if (element) {
			          var owner = element._owner;
			          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
			          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
			        } else {
			          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
			        }
			      }
			    }
			    function checkPropTypes(typeSpecs, values, location, componentName, element) {
			      {
			        // $FlowFixMe This is okay but Flow doesn't know it.
			        var has = Function.call.bind(hasOwnProperty);
			        for (var typeSpecName in typeSpecs) {
			          if (has(typeSpecs, typeSpecName)) {
			            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
			            // fail the render phase where it didn't fail before. So we log it.
			            // After these have been cleaned up, we'll let them throw.

			            try {
			              // This is intentionally an invariant that gets caught. It's the same
			              // behavior as without this statement except with a better message.
			              if (typeof typeSpecs[typeSpecName] !== 'function') {
			                // eslint-disable-next-line react-internal/prod-error-codes
			                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
			                err.name = 'Invariant Violation';
			                throw err;
			              }
			              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
			            } catch (ex) {
			              error$1 = ex;
			            }
			            if (error$1 && !(error$1 instanceof Error)) {
			              setCurrentlyValidatingElement(element);
			              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
			              setCurrentlyValidatingElement(null);
			            }
			            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
			              // Only monitor this failure once because there tends to be a lot of the
			              // same error.
			              loggedTypeFailures[error$1.message] = true;
			              setCurrentlyValidatingElement(element);
			              error('Failed %s type: %s', location, error$1.message);
			              setCurrentlyValidatingElement(null);
			            }
			          }
			        }
			      }
			    }
			    function setCurrentlyValidatingElement$1(element) {
			      {
			        if (element) {
			          var owner = element._owner;
			          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
			          setExtraStackFrame(stack);
			        } else {
			          setExtraStackFrame(null);
			        }
			      }
			    }
			    var propTypesMisspellWarningShown;
			    {
			      propTypesMisspellWarningShown = false;
			    }
			    function getDeclarationErrorAddendum() {
			      if (ReactCurrentOwner.current) {
			        var name = getComponentNameFromType(ReactCurrentOwner.current.type);
			        if (name) {
			          return '\n\nCheck the render method of `' + name + '`.';
			        }
			      }
			      return '';
			    }
			    function getSourceInfoErrorAddendum(source) {
			      if (source !== undefined) {
			        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
			        var lineNumber = source.lineNumber;
			        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
			      }
			      return '';
			    }
			    function getSourceInfoErrorAddendumForProps(elementProps) {
			      if (elementProps !== null && elementProps !== undefined) {
			        return getSourceInfoErrorAddendum(elementProps.__source);
			      }
			      return '';
			    }
			    /**
			     * Warn if there's no key explicitly set on dynamic arrays of children or
			     * object keys are not valid. This allows us to keep track of children between
			     * updates.
			     */

			    var ownerHasKeyUseWarning = {};
			    function getCurrentComponentErrorInfo(parentType) {
			      var info = getDeclarationErrorAddendum();
			      if (!info) {
			        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
			        if (parentName) {
			          info = "\n\nCheck the top-level render call using <" + parentName + ">.";
			        }
			      }
			      return info;
			    }
			    /**
			     * Warn if the element doesn't have an explicit key assigned to it.
			     * This element is in an array. The array could grow and shrink or be
			     * reordered. All children that haven't already been validated are required to
			     * have a "key" property assigned to it. Error statuses are cached so a warning
			     * will only be shown once.
			     *
			     * @internal
			     * @param {ReactElement} element Element that requires a key.
			     * @param {*} parentType element's parent's type.
			     */

			    function validateExplicitKey(element, parentType) {
			      if (!element._store || element._store.validated || element.key != null) {
			        return;
			      }
			      element._store.validated = true;
			      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
			      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
			        return;
			      }
			      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
			      // property, it may be the creator of the child that's responsible for
			      // assigning it a key.

			      var childOwner = '';
			      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
			        // Give the component that originally created this child.
			        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
			      }
			      {
			        setCurrentlyValidatingElement$1(element);
			        error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
			        setCurrentlyValidatingElement$1(null);
			      }
			    }
			    /**
			     * Ensure that every element either is passed in a static location, in an
			     * array with an explicit keys property defined, or in an object literal
			     * with valid key property.
			     *
			     * @internal
			     * @param {ReactNode} node Statically passed child of any type.
			     * @param {*} parentType node's parent's type.
			     */

			    function validateChildKeys(node, parentType) {
			      if (typeof node !== 'object') {
			        return;
			      }
			      if (isArray(node)) {
			        for (var i = 0; i < node.length; i++) {
			          var child = node[i];
			          if (isValidElement(child)) {
			            validateExplicitKey(child, parentType);
			          }
			        }
			      } else if (isValidElement(node)) {
			        // This element was passed in a valid location.
			        if (node._store) {
			          node._store.validated = true;
			        }
			      } else if (node) {
			        var iteratorFn = getIteratorFn(node);
			        if (typeof iteratorFn === 'function') {
			          // Entry iterators used to provide implicit keys,
			          // but now we print a separate warning for them later.
			          if (iteratorFn !== node.entries) {
			            var iterator = iteratorFn.call(node);
			            var step;
			            while (!(step = iterator.next()).done) {
			              if (isValidElement(step.value)) {
			                validateExplicitKey(step.value, parentType);
			              }
			            }
			          }
			        }
			      }
			    }
			    /**
			     * Given an element, validate that its props follow the propTypes definition,
			     * provided by the type.
			     *
			     * @param {ReactElement} element
			     */

			    function validatePropTypes(element) {
			      {
			        var type = element.type;
			        if (type === null || type === undefined || typeof type === 'string') {
			          return;
			        }
			        var propTypes;
			        if (typeof type === 'function') {
			          propTypes = type.propTypes;
			        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
			        // Note: Memo only checks outer props here.
			        // Inner props are checked in the reconciler.
			        type.$$typeof === REACT_MEMO_TYPE)) {
			          propTypes = type.propTypes;
			        } else {
			          return;
			        }
			        if (propTypes) {
			          // Intentionally inside to avoid triggering lazy initializers:
			          var name = getComponentNameFromType(type);
			          checkPropTypes(propTypes, element.props, 'prop', name, element);
			        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
			          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

			          var _name = getComponentNameFromType(type);
			          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
			        }
			        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
			          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
			        }
			      }
			    }
			    /**
			     * Given a fragment, validate that it can only be provided with fragment props
			     * @param {ReactElement} fragment
			     */

			    function validateFragmentProps(fragment) {
			      {
			        var keys = Object.keys(fragment.props);
			        for (var i = 0; i < keys.length; i++) {
			          var key = keys[i];
			          if (key !== 'children' && key !== 'key') {
			            setCurrentlyValidatingElement$1(fragment);
			            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
			            setCurrentlyValidatingElement$1(null);
			            break;
			          }
			        }
			        if (fragment.ref !== null) {
			          setCurrentlyValidatingElement$1(fragment);
			          error('Invalid attribute `ref` supplied to `React.Fragment`.');
			          setCurrentlyValidatingElement$1(null);
			        }
			      }
			    }
			    function createElementWithValidation(type, props, children) {
			      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
			      // succeed and there will likely be errors in render.

			      if (!validType) {
			        var info = '';
			        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
			          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
			        }
			        var sourceInfo = getSourceInfoErrorAddendumForProps(props);
			        if (sourceInfo) {
			          info += sourceInfo;
			        } else {
			          info += getDeclarationErrorAddendum();
			        }
			        var typeString;
			        if (type === null) {
			          typeString = 'null';
			        } else if (isArray(type)) {
			          typeString = 'array';
			        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
			          typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
			          info = ' Did you accidentally export a JSX literal instead of a component?';
			        } else {
			          typeString = typeof type;
			        }
			        {
			          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
			        }
			      }
			      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
			      // TODO: Drop this when these are no longer allowed as the type argument.

			      if (element == null) {
			        return element;
			      } // Skip key warning if the type isn't valid since our key validation logic
			      // doesn't expect a non-string/function type and can throw confusing errors.
			      // We don't want exception behavior to differ between dev and prod.
			      // (Rendering will throw with a helpful message and as soon as the type is
			      // fixed, the key warnings will appear.)

			      if (validType) {
			        for (var i = 2; i < arguments.length; i++) {
			          validateChildKeys(arguments[i], type);
			        }
			      }
			      if (type === REACT_FRAGMENT_TYPE) {
			        validateFragmentProps(element);
			      } else {
			        validatePropTypes(element);
			      }
			      return element;
			    }
			    var didWarnAboutDeprecatedCreateFactory = false;
			    function createFactoryWithValidation(type) {
			      var validatedFactory = createElementWithValidation.bind(null, type);
			      validatedFactory.type = type;
			      {
			        if (!didWarnAboutDeprecatedCreateFactory) {
			          didWarnAboutDeprecatedCreateFactory = true;
			          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
			        } // Legacy hook: remove it

			        Object.defineProperty(validatedFactory, 'type', {
			          enumerable: false,
			          get: function () {
			            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
			            Object.defineProperty(this, 'type', {
			              value: type
			            });
			            return type;
			          }
			        });
			      }
			      return validatedFactory;
			    }
			    function cloneElementWithValidation(element, props, children) {
			      var newElement = cloneElement.apply(this, arguments);
			      for (var i = 2; i < arguments.length; i++) {
			        validateChildKeys(arguments[i], newElement.type);
			      }
			      validatePropTypes(newElement);
			      return newElement;
			    }
			    function startTransition(scope, options) {
			      var prevTransition = ReactCurrentBatchConfig.transition;
			      ReactCurrentBatchConfig.transition = {};
			      var currentTransition = ReactCurrentBatchConfig.transition;
			      {
			        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
			      }
			      try {
			        scope();
			      } finally {
			        ReactCurrentBatchConfig.transition = prevTransition;
			        {
			          if (prevTransition === null && currentTransition._updatedFibers) {
			            var updatedFibersCount = currentTransition._updatedFibers.size;
			            if (updatedFibersCount > 10) {
			              warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
			            }
			            currentTransition._updatedFibers.clear();
			          }
			        }
			      }
			    }
			    var didWarnAboutMessageChannel = false;
			    var enqueueTaskImpl = null;
			    function enqueueTask(task) {
			      if (enqueueTaskImpl === null) {
			        try {
			          // read require off the module object to get around the bundlers.
			          // we don't want them to detect a require and bundle a Node polyfill.
			          var requireString = ('require' + Math.random()).slice(0, 7);
			          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
			          // version of setImmediate, bypassing fake timers if any.

			          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
			        } catch (_err) {
			          // we're in a browser
			          // we can't use regular timers because they may still be faked
			          // so we try MessageChannel+postMessage instead
			          enqueueTaskImpl = function (callback) {
			            {
			              if (didWarnAboutMessageChannel === false) {
			                didWarnAboutMessageChannel = true;
			                if (typeof MessageChannel === 'undefined') {
			                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
			                }
			              }
			            }
			            var channel = new MessageChannel();
			            channel.port1.onmessage = callback;
			            channel.port2.postMessage(undefined);
			          };
			        }
			      }
			      return enqueueTaskImpl(task);
			    }
			    var actScopeDepth = 0;
			    var didWarnNoAwaitAct = false;
			    function act(callback) {
			      {
			        // `act` calls can be nested, so we track the depth. This represents the
			        // number of `act` scopes on the stack.
			        var prevActScopeDepth = actScopeDepth;
			        actScopeDepth++;
			        if (ReactCurrentActQueue.current === null) {
			          // This is the outermost `act` scope. Initialize the queue. The reconciler
			          // will detect the queue and use it instead of Scheduler.
			          ReactCurrentActQueue.current = [];
			        }
			        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
			        var result;
			        try {
			          // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
			          // set to `true` while the given callback is executed, not for updates
			          // triggered during an async event, because this is how the legacy
			          // implementation of `act` behaved.
			          ReactCurrentActQueue.isBatchingLegacy = true;
			          result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
			          // which flushed updates immediately after the scope function exits, even
			          // if it's an async function.

			          if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
			            var queue = ReactCurrentActQueue.current;
			            if (queue !== null) {
			              ReactCurrentActQueue.didScheduleLegacyUpdate = false;
			              flushActQueue(queue);
			            }
			          }
			        } catch (error) {
			          popActScope(prevActScopeDepth);
			          throw error;
			        } finally {
			          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
			        }
			        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
			          var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
			          // for it to resolve before exiting the current scope.

			          var wasAwaited = false;
			          var thenable = {
			            then: function (resolve, reject) {
			              wasAwaited = true;
			              thenableResult.then(function (returnValue) {
			                popActScope(prevActScopeDepth);
			                if (actScopeDepth === 0) {
			                  // We've exited the outermost act scope. Recursively flush the
			                  // queue until there's no remaining work.
			                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);
			                } else {
			                  resolve(returnValue);
			                }
			              }, function (error) {
			                // The callback threw an error.
			                popActScope(prevActScopeDepth);
			                reject(error);
			              });
			            }
			          };
			          {
			            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
			              // eslint-disable-next-line no-undef
			              Promise.resolve().then(function () {}).then(function () {
			                if (!wasAwaited) {
			                  didWarnNoAwaitAct = true;
			                  error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
			                }
			              });
			            }
			          }
			          return thenable;
			        } else {
			          var returnValue = result; // The callback is not an async function. Exit the current scope
			          // immediately, without awaiting.

			          popActScope(prevActScopeDepth);
			          if (actScopeDepth === 0) {
			            // Exiting the outermost act scope. Flush the queue.
			            var _queue = ReactCurrentActQueue.current;
			            if (_queue !== null) {
			              flushActQueue(_queue);
			              ReactCurrentActQueue.current = null;
			            } // Return a thenable. If the user awaits it, we'll flush again in
			            // case additional work was scheduled by a microtask.

			            var _thenable = {
			              then: function (resolve, reject) {
			                // Confirm we haven't re-entered another `act` scope, in case
			                // the user does something weird like await the thenable
			                // multiple times.
			                if (ReactCurrentActQueue.current === null) {
			                  // Recursively flush the queue until there's no remaining work.
			                  ReactCurrentActQueue.current = [];
			                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);
			                } else {
			                  resolve(returnValue);
			                }
			              }
			            };
			            return _thenable;
			          } else {
			            // Since we're inside a nested `act` scope, the returned thenable
			            // immediately resolves. The outer scope will flush the queue.
			            var _thenable2 = {
			              then: function (resolve, reject) {
			                resolve(returnValue);
			              }
			            };
			            return _thenable2;
			          }
			        }
			      }
			    }
			    function popActScope(prevActScopeDepth) {
			      {
			        if (prevActScopeDepth !== actScopeDepth - 1) {
			          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
			        }
			        actScopeDepth = prevActScopeDepth;
			      }
			    }
			    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
			      {
			        var queue = ReactCurrentActQueue.current;
			        if (queue !== null) {
			          try {
			            flushActQueue(queue);
			            enqueueTask(function () {
			              if (queue.length === 0) {
			                // No additional work was scheduled. Finish.
			                ReactCurrentActQueue.current = null;
			                resolve(returnValue);
			              } else {
			                // Keep flushing work until there's none left.
			                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
			              }
			            });
			          } catch (error) {
			            reject(error);
			          }
			        } else {
			          resolve(returnValue);
			        }
			      }
			    }
			    var isFlushing = false;
			    function flushActQueue(queue) {
			      {
			        if (!isFlushing) {
			          // Prevent re-entrance.
			          isFlushing = true;
			          var i = 0;
			          try {
			            for (; i < queue.length; i++) {
			              var callback = queue[i];
			              do {
			                callback = callback(true);
			              } while (callback !== null);
			            }
			            queue.length = 0;
			          } catch (error) {
			            // If something throws, leave the remaining callbacks on the queue.
			            queue = queue.slice(i + 1);
			            throw error;
			          } finally {
			            isFlushing = false;
			          }
			        }
			      }
			    }
			    var createElement$1 = createElementWithValidation;
			    var cloneElement$1 = cloneElementWithValidation;
			    var createFactory = createFactoryWithValidation;
			    var Children = {
			      map: mapChildren,
			      forEach: forEachChildren,
			      count: countChildren,
			      toArray: toArray,
			      only: onlyChild
			    };
			    exports.Children = Children;
			    exports.Component = Component;
			    exports.Fragment = REACT_FRAGMENT_TYPE;
			    exports.Profiler = REACT_PROFILER_TYPE;
			    exports.PureComponent = PureComponent;
			    exports.StrictMode = REACT_STRICT_MODE_TYPE;
			    exports.Suspense = REACT_SUSPENSE_TYPE;
			    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
			    exports.cloneElement = cloneElement$1;
			    exports.createContext = createContext;
			    exports.createElement = createElement$1;
			    exports.createFactory = createFactory;
			    exports.createRef = createRef;
			    exports.forwardRef = forwardRef;
			    exports.isValidElement = isValidElement;
			    exports.lazy = lazy;
			    exports.memo = memo;
			    exports.startTransition = startTransition;
			    exports.unstable_act = act;
			    exports.useCallback = useCallback;
			    exports.useContext = useContext;
			    exports.useDebugValue = useDebugValue;
			    exports.useDeferredValue = useDeferredValue;
			    exports.useEffect = useEffect;
			    exports.useId = useId;
			    exports.useImperativeHandle = useImperativeHandle;
			    exports.useInsertionEffect = useInsertionEffect;
			    exports.useLayoutEffect = useLayoutEffect;
			    exports.useMemo = useMemo;
			    exports.useReducer = useReducer;
			    exports.useRef = useRef;
			    exports.useState = useState;
			    exports.useSyncExternalStore = useSyncExternalStore;
			    exports.useTransition = useTransition;
			    exports.version = ReactVersion;
			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
			    }
			  })();
			} 
		} (react_development, react_development.exports));
		return react_development.exports;
	}

	{
	  react$1.exports = requireReact_development();
	}

	var reactExports = react$1.exports;
	var React = /*@__PURE__*/getDefaultExportFromCjs(reactExports);

	var React$1 = /*#__PURE__*/_mergeNamespaces({
		__proto__: null,
		'default': React
	}, [reactExports]);

	var reactDom = {exports: {}};

	var scheduler = {exports: {}};

	var scheduler_development = {};

	/**
	 * @license React
	 * scheduler.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredScheduler_development;

	function requireScheduler_development () {
		if (hasRequiredScheduler_development) return scheduler_development;
		hasRequiredScheduler_development = 1;
		(function (exports) {

			{
			  (function () {

			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
			    }
			    var enableSchedulerDebugging = false;
			    var enableProfiling = false;
			    var frameYieldMs = 5;
			    function push(heap, node) {
			      var index = heap.length;
			      heap.push(node);
			      siftUp(heap, node, index);
			    }
			    function peek(heap) {
			      return heap.length === 0 ? null : heap[0];
			    }
			    function pop(heap) {
			      if (heap.length === 0) {
			        return null;
			      }
			      var first = heap[0];
			      var last = heap.pop();
			      if (last !== first) {
			        heap[0] = last;
			        siftDown(heap, last, 0);
			      }
			      return first;
			    }
			    function siftUp(heap, node, i) {
			      var index = i;
			      while (index > 0) {
			        var parentIndex = index - 1 >>> 1;
			        var parent = heap[parentIndex];
			        if (compare(parent, node) > 0) {
			          // The parent is larger. Swap positions.
			          heap[parentIndex] = node;
			          heap[index] = parent;
			          index = parentIndex;
			        } else {
			          // The parent is smaller. Exit.
			          return;
			        }
			      }
			    }
			    function siftDown(heap, node, i) {
			      var index = i;
			      var length = heap.length;
			      var halfLength = length >>> 1;
			      while (index < halfLength) {
			        var leftIndex = (index + 1) * 2 - 1;
			        var left = heap[leftIndex];
			        var rightIndex = leftIndex + 1;
			        var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

			        if (compare(left, node) < 0) {
			          if (rightIndex < length && compare(right, left) < 0) {
			            heap[index] = right;
			            heap[rightIndex] = node;
			            index = rightIndex;
			          } else {
			            heap[index] = left;
			            heap[leftIndex] = node;
			            index = leftIndex;
			          }
			        } else if (rightIndex < length && compare(right, node) < 0) {
			          heap[index] = right;
			          heap[rightIndex] = node;
			          index = rightIndex;
			        } else {
			          // Neither child is smaller. Exit.
			          return;
			        }
			      }
			    }
			    function compare(a, b) {
			      // Compare sort index first, then task id.
			      var diff = a.sortIndex - b.sortIndex;
			      return diff !== 0 ? diff : a.id - b.id;
			    }

			    // TODO: Use symbols?
			    var ImmediatePriority = 1;
			    var UserBlockingPriority = 2;
			    var NormalPriority = 3;
			    var LowPriority = 4;
			    var IdlePriority = 5;
			    function markTaskErrored(task, ms) {}

			    /* eslint-disable no-var */

			    var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
			    if (hasPerformanceNow) {
			      var localPerformance = performance;
			      exports.unstable_now = function () {
			        return localPerformance.now();
			      };
			    } else {
			      var localDate = Date;
			      var initialTime = localDate.now();
			      exports.unstable_now = function () {
			        return localDate.now() - initialTime;
			      };
			    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
			    // Math.pow(2, 30) - 1
			    // 0b111111111111111111111111111111

			    var maxSigned31BitInt = 1073741823; // Times out immediately

			    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

			    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
			    var NORMAL_PRIORITY_TIMEOUT = 5000;
			    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

			    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

			    var taskQueue = [];
			    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

			    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
			    var currentTask = null;
			    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.

			    var isPerformingWork = false;
			    var isHostCallbackScheduled = false;
			    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.

			    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
			    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
			    var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom

			    typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
			    function advanceTimers(currentTime) {
			      // Check for tasks that are no longer delayed and add them to the queue.
			      var timer = peek(timerQueue);
			      while (timer !== null) {
			        if (timer.callback === null) {
			          // Timer was cancelled.
			          pop(timerQueue);
			        } else if (timer.startTime <= currentTime) {
			          // Timer fired. Transfer to the task queue.
			          pop(timerQueue);
			          timer.sortIndex = timer.expirationTime;
			          push(taskQueue, timer);
			        } else {
			          // Remaining timers are pending.
			          return;
			        }
			        timer = peek(timerQueue);
			      }
			    }
			    function handleTimeout(currentTime) {
			      isHostTimeoutScheduled = false;
			      advanceTimers(currentTime);
			      if (!isHostCallbackScheduled) {
			        if (peek(taskQueue) !== null) {
			          isHostCallbackScheduled = true;
			          requestHostCallback(flushWork);
			        } else {
			          var firstTimer = peek(timerQueue);
			          if (firstTimer !== null) {
			            requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
			          }
			        }
			      }
			    }
			    function flushWork(hasTimeRemaining, initialTime) {
			      isHostCallbackScheduled = false;
			      if (isHostTimeoutScheduled) {
			        // We scheduled a timeout but it's no longer needed. Cancel it.
			        isHostTimeoutScheduled = false;
			        cancelHostTimeout();
			      }
			      isPerformingWork = true;
			      var previousPriorityLevel = currentPriorityLevel;
			      try {
			        var currentTime; if (enableProfiling) ; else {
			          // No catch in prod code path.
			          return workLoop(hasTimeRemaining, initialTime);
			        }
			      } finally {
			        currentTask = null;
			        currentPriorityLevel = previousPriorityLevel;
			        isPerformingWork = false;
			      }
			    }
			    function workLoop(hasTimeRemaining, initialTime) {
			      var currentTime = initialTime;
			      advanceTimers(currentTime);
			      currentTask = peek(taskQueue);
			      while (currentTask !== null && !enableSchedulerDebugging) {
			        if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
			          // This currentTask hasn't expired, and we've reached the deadline.
			          break;
			        }
			        var callback = currentTask.callback;
			        if (typeof callback === 'function') {
			          currentTask.callback = null;
			          currentPriorityLevel = currentTask.priorityLevel;
			          var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
			          var continuationCallback = callback(didUserCallbackTimeout);
			          currentTime = exports.unstable_now();
			          if (typeof continuationCallback === 'function') {
			            currentTask.callback = continuationCallback;
			          } else {
			            if (currentTask === peek(taskQueue)) {
			              pop(taskQueue);
			            }
			          }
			          advanceTimers(currentTime);
			        } else {
			          pop(taskQueue);
			        }
			        currentTask = peek(taskQueue);
			      } // Return whether there's additional work

			      if (currentTask !== null) {
			        return true;
			      } else {
			        var firstTimer = peek(timerQueue);
			        if (firstTimer !== null) {
			          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
			        }
			        return false;
			      }
			    }
			    function unstable_runWithPriority(priorityLevel, eventHandler) {
			      switch (priorityLevel) {
			        case ImmediatePriority:
			        case UserBlockingPriority:
			        case NormalPriority:
			        case LowPriority:
			        case IdlePriority:
			          break;
			        default:
			          priorityLevel = NormalPriority;
			      }
			      var previousPriorityLevel = currentPriorityLevel;
			      currentPriorityLevel = priorityLevel;
			      try {
			        return eventHandler();
			      } finally {
			        currentPriorityLevel = previousPriorityLevel;
			      }
			    }
			    function unstable_next(eventHandler) {
			      var priorityLevel;
			      switch (currentPriorityLevel) {
			        case ImmediatePriority:
			        case UserBlockingPriority:
			        case NormalPriority:
			          // Shift down to normal priority
			          priorityLevel = NormalPriority;
			          break;
			        default:
			          // Anything lower than normal priority should remain at the current level.
			          priorityLevel = currentPriorityLevel;
			          break;
			      }
			      var previousPriorityLevel = currentPriorityLevel;
			      currentPriorityLevel = priorityLevel;
			      try {
			        return eventHandler();
			      } finally {
			        currentPriorityLevel = previousPriorityLevel;
			      }
			    }
			    function unstable_wrapCallback(callback) {
			      var parentPriorityLevel = currentPriorityLevel;
			      return function () {
			        // This is a fork of runWithPriority, inlined for performance.
			        var previousPriorityLevel = currentPriorityLevel;
			        currentPriorityLevel = parentPriorityLevel;
			        try {
			          return callback.apply(this, arguments);
			        } finally {
			          currentPriorityLevel = previousPriorityLevel;
			        }
			      };
			    }
			    function unstable_scheduleCallback(priorityLevel, callback, options) {
			      var currentTime = exports.unstable_now();
			      var startTime;
			      if (typeof options === 'object' && options !== null) {
			        var delay = options.delay;
			        if (typeof delay === 'number' && delay > 0) {
			          startTime = currentTime + delay;
			        } else {
			          startTime = currentTime;
			        }
			      } else {
			        startTime = currentTime;
			      }
			      var timeout;
			      switch (priorityLevel) {
			        case ImmediatePriority:
			          timeout = IMMEDIATE_PRIORITY_TIMEOUT;
			          break;
			        case UserBlockingPriority:
			          timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
			          break;
			        case IdlePriority:
			          timeout = IDLE_PRIORITY_TIMEOUT;
			          break;
			        case LowPriority:
			          timeout = LOW_PRIORITY_TIMEOUT;
			          break;
			        case NormalPriority:
			        default:
			          timeout = NORMAL_PRIORITY_TIMEOUT;
			          break;
			      }
			      var expirationTime = startTime + timeout;
			      var newTask = {
			        id: taskIdCounter++,
			        callback: callback,
			        priorityLevel: priorityLevel,
			        startTime: startTime,
			        expirationTime: expirationTime,
			        sortIndex: -1
			      };
			      if (startTime > currentTime) {
			        // This is a delayed task.
			        newTask.sortIndex = startTime;
			        push(timerQueue, newTask);
			        if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
			          // All tasks are delayed, and this is the task with the earliest delay.
			          if (isHostTimeoutScheduled) {
			            // Cancel an existing timeout.
			            cancelHostTimeout();
			          } else {
			            isHostTimeoutScheduled = true;
			          } // Schedule a timeout.

			          requestHostTimeout(handleTimeout, startTime - currentTime);
			        }
			      } else {
			        newTask.sortIndex = expirationTime;
			        push(taskQueue, newTask);
			        // wait until the next time we yield.

			        if (!isHostCallbackScheduled && !isPerformingWork) {
			          isHostCallbackScheduled = true;
			          requestHostCallback(flushWork);
			        }
			      }
			      return newTask;
			    }
			    function unstable_pauseExecution() {}
			    function unstable_continueExecution() {
			      if (!isHostCallbackScheduled && !isPerformingWork) {
			        isHostCallbackScheduled = true;
			        requestHostCallback(flushWork);
			      }
			    }
			    function unstable_getFirstCallbackNode() {
			      return peek(taskQueue);
			    }
			    function unstable_cancelCallback(task) {
			      // remove from the queue because you can't remove arbitrary nodes from an
			      // array based heap, only the first one.)

			      task.callback = null;
			    }
			    function unstable_getCurrentPriorityLevel() {
			      return currentPriorityLevel;
			    }
			    var isMessageLoopRunning = false;
			    var scheduledHostCallback = null;
			    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
			    // thread, like user events. By default, it yields multiple times per frame.
			    // It does not attempt to align with frame boundaries, since most tasks don't
			    // need to be frame aligned; for those that do, use requestAnimationFrame.

			    var frameInterval = frameYieldMs;
			    var startTime = -1;
			    function shouldYieldToHost() {
			      var timeElapsed = exports.unstable_now() - startTime;
			      if (timeElapsed < frameInterval) {
			        // The main thread has only been blocked for a really short amount of time;
			        // smaller than a single frame. Don't yield yet.
			        return false;
			      } // The main thread has been blocked for a non-negligible amount of time. We

			      return true;
			    }
			    function requestPaint() {}
			    function forceFrameRate(fps) {
			      if (fps < 0 || fps > 125) {
			        // Using console['error'] to evade Babel and ESLint
			        console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
			        return;
			      }
			      if (fps > 0) {
			        frameInterval = Math.floor(1000 / fps);
			      } else {
			        // reset the framerate
			        frameInterval = frameYieldMs;
			      }
			    }
			    var performWorkUntilDeadline = function () {
			      if (scheduledHostCallback !== null) {
			        var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
			        // has been blocked.

			        startTime = currentTime;
			        var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
			        // error can be observed.
			        //
			        // Intentionally not using a try-catch, since that makes some debugging
			        // techniques harder. Instead, if `scheduledHostCallback` errors, then
			        // `hasMoreWork` will remain true, and we'll continue the work loop.

			        var hasMoreWork = true;
			        try {
			          hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
			        } finally {
			          if (hasMoreWork) {
			            // If there's more work, schedule the next message event at the end
			            // of the preceding one.
			            schedulePerformWorkUntilDeadline();
			          } else {
			            isMessageLoopRunning = false;
			            scheduledHostCallback = null;
			          }
			        }
			      } else {
			        isMessageLoopRunning = false;
			      } // Yielding to the browser will give it a chance to paint, so we can
			    };
			    var schedulePerformWorkUntilDeadline;
			    if (typeof localSetImmediate === 'function') {
			      // Node.js and old IE.
			      // There's a few reasons for why we prefer setImmediate.
			      //
			      // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
			      // (Even though this is a DOM fork of the Scheduler, you could get here
			      // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
			      // https://github.com/facebook/react/issues/20756
			      //
			      // But also, it runs earlier which is the semantic we want.
			      // If other browsers ever implement it, it's better to use it.
			      // Although both of these would be inferior to native scheduling.
			      schedulePerformWorkUntilDeadline = function () {
			        localSetImmediate(performWorkUntilDeadline);
			      };
			    } else if (typeof MessageChannel !== 'undefined') {
			      // DOM and Worker environments.
			      // We prefer MessageChannel because of the 4ms setTimeout clamping.
			      var channel = new MessageChannel();
			      var port = channel.port2;
			      channel.port1.onmessage = performWorkUntilDeadline;
			      schedulePerformWorkUntilDeadline = function () {
			        port.postMessage(null);
			      };
			    } else {
			      // We should only fallback here in non-browser environments.
			      schedulePerformWorkUntilDeadline = function () {
			        localSetTimeout(performWorkUntilDeadline, 0);
			      };
			    }
			    function requestHostCallback(callback) {
			      scheduledHostCallback = callback;
			      if (!isMessageLoopRunning) {
			        isMessageLoopRunning = true;
			        schedulePerformWorkUntilDeadline();
			      }
			    }
			    function requestHostTimeout(callback, ms) {
			      taskTimeoutID = localSetTimeout(function () {
			        callback(exports.unstable_now());
			      }, ms);
			    }
			    function cancelHostTimeout() {
			      localClearTimeout(taskTimeoutID);
			      taskTimeoutID = -1;
			    }
			    var unstable_requestPaint = requestPaint;
			    var unstable_Profiling = null;
			    exports.unstable_IdlePriority = IdlePriority;
			    exports.unstable_ImmediatePriority = ImmediatePriority;
			    exports.unstable_LowPriority = LowPriority;
			    exports.unstable_NormalPriority = NormalPriority;
			    exports.unstable_Profiling = unstable_Profiling;
			    exports.unstable_UserBlockingPriority = UserBlockingPriority;
			    exports.unstable_cancelCallback = unstable_cancelCallback;
			    exports.unstable_continueExecution = unstable_continueExecution;
			    exports.unstable_forceFrameRate = forceFrameRate;
			    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
			    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
			    exports.unstable_next = unstable_next;
			    exports.unstable_pauseExecution = unstable_pauseExecution;
			    exports.unstable_requestPaint = unstable_requestPaint;
			    exports.unstable_runWithPriority = unstable_runWithPriority;
			    exports.unstable_scheduleCallback = unstable_scheduleCallback;
			    exports.unstable_shouldYield = shouldYieldToHost;
			    exports.unstable_wrapCallback = unstable_wrapCallback;
			    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
			    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {
			      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
			    }
			  })();
			} 
		} (scheduler_development));
		return scheduler_development;
	}

	var hasRequiredScheduler;

	function requireScheduler () {
		if (hasRequiredScheduler) return scheduler.exports;
		hasRequiredScheduler = 1;

		{
		  scheduler.exports = requireScheduler_development();
		}
		return scheduler.exports;
	}

	var reactDom_development = {};

	/**
	 * @license React
	 * react-dom.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactDom_development;

	function requireReactDom_development () {
		if (hasRequiredReactDom_development) return reactDom_development;
		hasRequiredReactDom_development = 1;
	{(function(){/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined'&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart==='function'){__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());}var React=reactExports;var Scheduler=requireScheduler();var ReactSharedInternals=React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;var suppressWarning=false;function setSuppressWarning(newSuppressWarning){{suppressWarning=newSuppressWarning;}}// In DEV, calls to console.warn and console.error get replaced
		// by calls to these methods by a Babel plugin.
		//
		// In PROD (or in packages without access to React internals),
		// they are left as they are instead.
		function warn(format){{if(!suppressWarning){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}printWarning('warn',format,args);}}}function error(format){{if(!suppressWarning){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}printWarning('error',format,args);}}}function printWarning(level,format,args){// When changing this logic, you might want to also
		// update consoleWithStackDev.www.js as well.
		{var ReactDebugCurrentFrame=ReactSharedInternals.ReactDebugCurrentFrame;var stack=ReactDebugCurrentFrame.getStackAddendum();if(stack!==''){format+='%s';args=args.concat([stack]);}// eslint-disable-next-line react-internal/safe-string-coercion
		var argsWithFormat=args.map(function(item){return String(item);});// Careful: RN currently depends on this prefix
		argsWithFormat.unshift('Warning: '+format);// We intentionally don't use spread (or .apply) directly because it
		// breaks IE9: https://github.com/facebook/react/issues/13610
		// eslint-disable-next-line react-internal/no-production-logging
		Function.prototype.apply.call(console[level],console,argsWithFormat);}}var FunctionComponent=0;var ClassComponent=1;var IndeterminateComponent=2;// Before we know whether it is function or class
		var HostRoot=3;// Root of a host tree. Could be nested inside another node.
		var HostPortal=4;// A subtree. Could be an entry point to a different renderer.
		var HostComponent=5;var HostText=6;var Fragment=7;var Mode=8;var ContextConsumer=9;var ContextProvider=10;var ForwardRef=11;var Profiler=12;var SuspenseComponent=13;var MemoComponent=14;var SimpleMemoComponent=15;var LazyComponent=16;var IncompleteClassComponent=17;var DehydratedFragment=18;var SuspenseListComponent=19;var ScopeComponent=21;var OffscreenComponent=22;var LegacyHiddenComponent=23;var CacheComponent=24;var TracingMarkerComponent=25;// -----------------------------------------------------------------------------
		var enableClientRenderFallbackOnTextMismatch=true;// TODO: Need to review this code one more time before landing
		// the react-reconciler package.
		var enableNewReconciler=false;// Support legacy Primer support on internal FB www
		var enableLazyContextPropagation=false;// FB-only usage. The new API has different semantics.
		var enableLegacyHidden=false;// Enables unstable_avoidThisFallback feature in Fiber
		var enableSuspenseAvoidThisFallback=false;// Enables unstable_avoidThisFallback feature in Fizz
		// React DOM Chopping Block
		//
		// Similar to main Chopping Block but only flags related to React DOM. These are
		// grouped because we will likely batch all of them into a single major release.
		// -----------------------------------------------------------------------------
		// Disable support for comment nodes as React DOM containers. Already disabled
		// in open source, but www codebase still relies on it. Need to remove.
		var disableCommentsAsDOMContainers=true;// Disable javascript: URL strings in href for XSS protection.
		// and client rendering, mostly to allow JSX attributes to apply to the custom
		// element's object properties instead of only HTML attributes.
		// https://github.com/facebook/react/issues/11347
		var enableCustomElementPropertySupport=false;// Disables children for <textarea> elements
		var warnAboutStringRefs=false;// -----------------------------------------------------------------------------
		// Debugging and DevTools
		// -----------------------------------------------------------------------------
		// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
		// for an experimental timeline tool.
		var enableSchedulingProfiler=true;// Helps identify side effects in render-phase lifecycle hooks and setState
		var enableProfilerTimer=true;// Record durations for commit and passive effects phases.
		var enableProfilerCommitHooks=true;// Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
		var allNativeEvents=new Set();/**
		 * Mapping from registration name to event name
		 */var registrationNameDependencies={};/**
		 * Mapping from lowercase registration names to the properly cased version,
		 * used to warn in the case of missing event handlers. Available
		 * only in true.
		 * @type {Object}
		 */var possibleRegistrationNames={};// Trust the developer to only use possibleRegistrationNames in true
		function registerTwoPhaseEvent(registrationName,dependencies){registerDirectEvent(registrationName,dependencies);registerDirectEvent(registrationName+'Capture',dependencies);}function registerDirectEvent(registrationName,dependencies){{if(registrationNameDependencies[registrationName]){error('EventRegistry: More than one plugin attempted to publish the same '+'registration name, `%s`.',registrationName);}}registrationNameDependencies[registrationName]=dependencies;{var lowerCasedName=registrationName.toLowerCase();possibleRegistrationNames[lowerCasedName]=registrationName;if(registrationName==='onDoubleClick'){possibleRegistrationNames.ondblclick=registrationName;}}for(var i=0;i<dependencies.length;i++){allNativeEvents.add(dependencies[i]);}}var canUseDOM=!!(typeof window!=='undefined'&&typeof window.document!=='undefined'&&typeof window.document.createElement!=='undefined');var hasOwnProperty=Object.prototype.hasOwnProperty;/*
		 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
		 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
		 *
		 * The functions in this module will throw an easier-to-understand,
		 * easier-to-debug exception with a clear errors message message explaining the
		 * problem. (Instead of a confusing exception thrown inside the implementation
		 * of the `value` object).
		 */ // $FlowFixMe only called in DEV, so void return is not possible.
		function typeName(value){{// toStringTag is needed for namespaced types like Temporal.Instant
		var hasToStringTag=typeof Symbol==='function'&&Symbol.toStringTag;var type=hasToStringTag&&value[Symbol.toStringTag]||value.constructor.name||'Object';return type;}}// $FlowFixMe only called in DEV, so void return is not possible.
		function willCoercionThrow(value){{try{testStringCoercion(value);return false;}catch(e){return true;}}}function testStringCoercion(value){// If you ended up here by following an exception call stack, here's what's
		// happened: you supplied an object or symbol value to React (as a prop, key,
		// DOM attribute, CSS property, string ref, etc.) and when React tried to
		// coerce it to a string using `'' + value`, an exception was thrown.
		//
		// The most common types that will cause this exception are `Symbol` instances
		// and Temporal objects like `Temporal.Instant`. But any object that has a
		// `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
		// exception. (Library authors do this to prevent users from using built-in
		// numeric operators like `+` or comparison operators like `>=` because custom
		// methods are needed to perform accurate arithmetic or comparison.)
		//
		// To fix the problem, coerce this object or symbol value to a string before
		// passing it to React. The most reliable way is usually `String(value)`.
		//
		// To find which value is throwing, check the browser or debugger console.
		// Before this exception was thrown, there should be `console.error` output
		// that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
		// problem and how that type was used: key, atrribute, input value prop, etc.
		// In most cases, this console output also shows the component and its
		// ancestor components where the exception happened.
		//
		// eslint-disable-next-line react-internal/safe-string-coercion
		return ''+value;}function checkAttributeStringCoercion(value,attributeName){{if(willCoercionThrow(value)){error('The provided `%s` attribute is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',attributeName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkKeyStringCoercion(value){{if(willCoercionThrow(value)){error('The provided key is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkPropStringCoercion(value,propName){{if(willCoercionThrow(value)){error('The provided `%s` prop is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',propName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkCSSPropertyStringCoercion(value,propName){{if(willCoercionThrow(value)){error('The provided `%s` CSS property is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',propName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkHtmlStringCoercion(value){{if(willCoercionThrow(value)){error('The provided HTML markup uses a value of unsupported type %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}function checkFormFieldValueStringCoercion(value){{if(willCoercionThrow(value)){error('Form field values (value, checked, defaultValue, or defaultChecked props)'+' must be strings, not %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)
		}}}// A reserved attribute.
		// It is handled by React separately and shouldn't be written to the DOM.
		var RESERVED=0;// A simple string attribute.
		// Attributes that aren't in the filter are presumed to have this type.
		var STRING=1;// A string attribute that accepts booleans in React. In HTML, these are called
		// "enumerated" attributes with "true" and "false" as possible values.
		// When true, it should be set to a "true" string.
		// When false, it should be set to a "false" string.
		var BOOLEANISH_STRING=2;// A real boolean attribute.
		// When true, it should be present (set either to an empty string or its name).
		// When false, it should be omitted.
		var BOOLEAN=3;// An attribute that can be used as a flag as well as with a value.
		// When true, it should be present (set either to an empty string or its name).
		// When false, it should be omitted.
		// For any other value, should be present with that value.
		var OVERLOADED_BOOLEAN=4;// An attribute that must be numeric or parse as a numeric.
		// When falsy, it should be removed.
		var NUMERIC=5;// An attribute that must be positive numeric or parse as a positive numeric.
		// When falsy, it should be removed.
		var POSITIVE_NUMERIC=6;/* eslint-disable max-len */var ATTRIBUTE_NAME_START_CHAR=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";/* eslint-enable max-len */var ATTRIBUTE_NAME_CHAR=ATTRIBUTE_NAME_START_CHAR+"\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";var VALID_ATTRIBUTE_NAME_REGEX=new RegExp('^['+ATTRIBUTE_NAME_START_CHAR+']['+ATTRIBUTE_NAME_CHAR+']*$');var illegalAttributeNameCache={};var validatedAttributeNameCache={};function isAttributeNameSafe(attributeName){if(hasOwnProperty.call(validatedAttributeNameCache,attributeName)){return true;}if(hasOwnProperty.call(illegalAttributeNameCache,attributeName)){return false;}if(VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)){validatedAttributeNameCache[attributeName]=true;return true;}illegalAttributeNameCache[attributeName]=true;{error('Invalid attribute name: `%s`',attributeName);}return false;}function shouldIgnoreAttribute(name,propertyInfo,isCustomComponentTag){if(propertyInfo!==null){return propertyInfo.type===RESERVED;}if(isCustomComponentTag){return false;}if(name.length>2&&(name[0]==='o'||name[0]==='O')&&(name[1]==='n'||name[1]==='N')){return true;}return false;}function shouldRemoveAttributeWithWarning(name,value,propertyInfo,isCustomComponentTag){if(propertyInfo!==null&&propertyInfo.type===RESERVED){return false;}switch(typeof value){case'function':// $FlowIssue symbol is perfectly valid here
		case'symbol':// eslint-disable-line
		return true;case'boolean':{if(isCustomComponentTag){return false;}if(propertyInfo!==null){return !propertyInfo.acceptsBooleans;}else {var prefix=name.toLowerCase().slice(0,5);return prefix!=='data-'&&prefix!=='aria-';}}default:return false;}}function shouldRemoveAttribute(name,value,propertyInfo,isCustomComponentTag){if(value===null||typeof value==='undefined'){return true;}if(shouldRemoveAttributeWithWarning(name,value,propertyInfo,isCustomComponentTag)){return true;}if(isCustomComponentTag){return false;}if(propertyInfo!==null){switch(propertyInfo.type){case BOOLEAN:return !value;case OVERLOADED_BOOLEAN:return value===false;case NUMERIC:return isNaN(value);case POSITIVE_NUMERIC:return isNaN(value)||value<1;}}return false;}function getPropertyInfo(name){return properties.hasOwnProperty(name)?properties[name]:null;}function PropertyInfoRecord(name,type,mustUseProperty,attributeName,attributeNamespace,sanitizeURL,removeEmptyString){this.acceptsBooleans=type===BOOLEANISH_STRING||type===BOOLEAN||type===OVERLOADED_BOOLEAN;this.attributeName=attributeName;this.attributeNamespace=attributeNamespace;this.mustUseProperty=mustUseProperty;this.propertyName=name;this.type=type;this.sanitizeURL=sanitizeURL;this.removeEmptyString=removeEmptyString;}// When adding attributes to this list, be sure to also add them to
		// the `possibleStandardNames` module to ensure casing and incorrect
		// name warnings.
		var properties={};// These props are reserved by React. They shouldn't be written to the DOM.
		var reservedProps=['children','dangerouslySetInnerHTML',// TODO: This prevents the assignment of defaultValue to regular
		// elements (not just inputs). Now that ReactDOMInput assigns to the
		// defaultValue property -- do we need this?
		'defaultValue','defaultChecked','innerHTML','suppressContentEditableWarning','suppressHydrationWarning','style'];reservedProps.forEach(function(name){properties[name]=new PropertyInfoRecord(name,RESERVED,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// A few React string attributes have a different name.
		// This is a mapping from React prop names to the attribute names.
		[['acceptCharset','accept-charset'],['className','class'],['htmlFor','for'],['httpEquiv','http-equiv']].forEach(function(_ref){var name=_ref[0],attributeName=_ref[1];properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are "enumerated" HTML attributes that accept "true" and "false".
		// In React, we let users pass `true` and `false` even though technically
		// these aren't boolean attributes (they are coerced to strings).
		['contentEditable','draggable','spellCheck','value'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEANISH_STRING,false,// mustUseProperty
		name.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are "enumerated" SVG attributes that accept "true" and "false".
		// In React, we let users pass `true` and `false` even though technically
		// these aren't boolean attributes (they are coerced to strings).
		// Since these are SVG attributes, their attribute names are case-sensitive.
		['autoReverse','externalResourcesRequired','focusable','preserveAlpha'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEANISH_STRING,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML boolean attributes.
		['allowFullScreen','async',// Note: there is a special case that prevents it from being written to the DOM
		// on the client side because the browsers are inconsistent. Instead we call focus().
		'autoFocus','autoPlay','controls','default','defer','disabled','disablePictureInPicture','disableRemotePlayback','formNoValidate','hidden','loop','noModule','noValidate','open','playsInline','readOnly','required','reversed','scoped','seamless',// Microdata
		'itemScope'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEAN,false,// mustUseProperty
		name.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are the few React props that we set as DOM properties
		// rather than attributes. These are all booleans.
		['checked',// Note: `option.selected` is not updated if `select.multiple` is
		// disabled with `removeAttribute`. We have special logic for handling this.
		'multiple','muted','selected'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(name){properties[name]=new PropertyInfoRecord(name,BOOLEAN,true,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML attributes that are "overloaded booleans": they behave like
		// booleans, but can also accept a string value.
		['capture','download'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(name){properties[name]=new PropertyInfoRecord(name,OVERLOADED_BOOLEAN,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML attributes that must be positive numbers.
		['cols','rows','size','span'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(name){properties[name]=new PropertyInfoRecord(name,POSITIVE_NUMERIC,false,// mustUseProperty
		name,// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These are HTML attributes that must be numbers.
		['rowSpan','start'].forEach(function(name){properties[name]=new PropertyInfoRecord(name,NUMERIC,false,// mustUseProperty
		name.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});var CAMELIZE=/[\-\:]([a-z])/g;var capitalize=function(token){return token[1].toUpperCase();};// This is a list of all SVG attributes that need special casing, namespacing,
		// or boolean value assignment. Regular attributes that just accept strings
		// and have the same names are omitted, just like in the HTML attribute filter.
		// Some of these attributes can be hard to find. This list was created by
		// scraping the MDN documentation.
		['accent-height','alignment-baseline','arabic-form','baseline-shift','cap-height','clip-path','clip-rule','color-interpolation','color-interpolation-filters','color-profile','color-rendering','dominant-baseline','enable-background','fill-opacity','fill-rule','flood-color','flood-opacity','font-family','font-size','font-size-adjust','font-stretch','font-style','font-variant','font-weight','glyph-name','glyph-orientation-horizontal','glyph-orientation-vertical','horiz-adv-x','horiz-origin-x','image-rendering','letter-spacing','lighting-color','marker-end','marker-mid','marker-start','overline-position','overline-thickness','paint-order','panose-1','pointer-events','rendering-intent','shape-rendering','stop-color','stop-opacity','strikethrough-position','strikethrough-thickness','stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke-width','text-anchor','text-decoration','text-rendering','underline-position','underline-thickness','unicode-bidi','unicode-range','units-per-em','v-alphabetic','v-hanging','v-ideographic','v-mathematical','vector-effect','vert-adv-y','vert-origin-x','vert-origin-y','word-spacing','writing-mode','xmlns:xlink','x-height'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(attributeName){var name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,null,// attributeNamespace
		false,// sanitizeURL
		false);});// String SVG attributes with the xlink namespace.
		['xlink:actuate','xlink:arcrole','xlink:role','xlink:show','xlink:title','xlink:type'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(attributeName){var name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,'http://www.w3.org/1999/xlink',false,// sanitizeURL
		false);});// String SVG attributes with the xml namespace.
		['xml:base','xml:lang','xml:space'// NOTE: if you add a camelCased prop to this list,
		// you'll need to set attributeName to name.toLowerCase()
		// instead in the assignment below.
		].forEach(function(attributeName){var name=attributeName.replace(CAMELIZE,capitalize);properties[name]=new PropertyInfoRecord(name,STRING,false,// mustUseProperty
		attributeName,'http://www.w3.org/XML/1998/namespace',false,// sanitizeURL
		false);});// These attribute exists both in HTML and SVG.
		// The attribute name is case-sensitive in SVG so we can't just use
		// the React name like we do for attributes that exist only in HTML.
		['tabIndex','crossOrigin'].forEach(function(attributeName){properties[attributeName]=new PropertyInfoRecord(attributeName,STRING,false,// mustUseProperty
		attributeName.toLowerCase(),// attributeName
		null,// attributeNamespace
		false,// sanitizeURL
		false);});// These attributes accept URLs. These must not allow javascript: URLS.
		// These will also need to accept Trusted Types object in the future.
		var xlinkHref='xlinkHref';properties[xlinkHref]=new PropertyInfoRecord('xlinkHref',STRING,false,// mustUseProperty
		'xlink:href','http://www.w3.org/1999/xlink',true,// sanitizeURL
		false);['src','href','action','formAction'].forEach(function(attributeName){properties[attributeName]=new PropertyInfoRecord(attributeName,STRING,false,// mustUseProperty
		attributeName.toLowerCase(),// attributeName
		null,// attributeNamespace
		true,// sanitizeURL
		true);});// and any newline or tab are filtered out as if they're not part of the URL.
		// https://url.spec.whatwg.org/#url-parsing
		// Tab or newline are defined as \r\n\t:
		// https://infra.spec.whatwg.org/#ascii-tab-or-newline
		// A C0 control is a code point in the range \u0000 NULL to \u001F
		// INFORMATION SEPARATOR ONE, inclusive:
		// https://infra.spec.whatwg.org/#c0-control-or-space
		/* eslint-disable max-len */var isJavaScriptProtocol=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;var didWarn=false;function sanitizeURL(url){{if(!didWarn&&isJavaScriptProtocol.test(url)){didWarn=true;error('A future version of React will block javascript: URLs as a security precaution. '+'Use event handlers instead if you can. If you need to generate unsafe HTML try '+'using dangerouslySetInnerHTML instead. React was passed %s.',JSON.stringify(url));}}}/**
		 * Get the value for a property on a node. Only used in DEV for SSR validation.
		 * The "expected" argument is used as a hint of what the expected value is.
		 * Some properties have multiple equivalent values.
		 */function getValueForProperty(node,name,expected,propertyInfo){{if(propertyInfo.mustUseProperty){var propertyName=propertyInfo.propertyName;return node[propertyName];}else {// This check protects multiple uses of `expected`, which is why the
		// react-internal/safe-string-coercion rule is disabled in several spots
		// below.
		{checkAttributeStringCoercion(expected,name);}if(propertyInfo.sanitizeURL){// If we haven't fully disabled javascript: URLs, and if
		// the hydration is successful of a javascript: URL, we
		// still want to warn on the client.
		// eslint-disable-next-line react-internal/safe-string-coercion
		sanitizeURL(''+expected);}var attributeName=propertyInfo.attributeName;var stringValue=null;if(propertyInfo.type===OVERLOADED_BOOLEAN){if(node.hasAttribute(attributeName)){var value=node.getAttribute(attributeName);if(value===''){return true;}if(shouldRemoveAttribute(name,expected,propertyInfo,false)){return value;}// eslint-disable-next-line react-internal/safe-string-coercion
		if(value===''+expected){return expected;}return value;}}else if(node.hasAttribute(attributeName)){if(shouldRemoveAttribute(name,expected,propertyInfo,false)){// We had an attribute but shouldn't have had one, so read it
		// for the error message.
		return node.getAttribute(attributeName);}if(propertyInfo.type===BOOLEAN){// If this was a boolean, it doesn't matter what the value is
		// the fact that we have it is the same as the expected.
		return expected;}// Even if this property uses a namespace we use getAttribute
		// because we assume its namespaced name is the same as our config.
		// To use getAttributeNS we need the local name which we don't have
		// in our config atm.
		stringValue=node.getAttribute(attributeName);}if(shouldRemoveAttribute(name,expected,propertyInfo,false)){return stringValue===null?expected:stringValue;// eslint-disable-next-line react-internal/safe-string-coercion
		}else if(stringValue===''+expected){return expected;}else {return stringValue;}}}}/**
		 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
		 * The third argument is used as a hint of what the expected value is. Some
		 * attributes have multiple equivalent values.
		 */function getValueForAttribute(node,name,expected,isCustomComponentTag){{if(!isAttributeNameSafe(name)){return;}if(!node.hasAttribute(name)){return expected===undefined?undefined:null;}var value=node.getAttribute(name);{checkAttributeStringCoercion(expected,name);}if(value===''+expected){return expected;}return value;}}/**
		 * Sets the value for a property on a node.
		 *
		 * @param {DOMElement} node
		 * @param {string} name
		 * @param {*} value
		 */function setValueForProperty(node,name,value,isCustomComponentTag){var propertyInfo=getPropertyInfo(name);if(shouldIgnoreAttribute(name,propertyInfo,isCustomComponentTag)){return;}if(shouldRemoveAttribute(name,value,propertyInfo,isCustomComponentTag)){value=null;}if(isCustomComponentTag||propertyInfo===null){if(isAttributeNameSafe(name)){var _attributeName=name;if(value===null){node.removeAttribute(_attributeName);}else {{checkAttributeStringCoercion(value,name);}node.setAttribute(_attributeName,''+value);}}return;}var mustUseProperty=propertyInfo.mustUseProperty;if(mustUseProperty){var propertyName=propertyInfo.propertyName;if(value===null){var type=propertyInfo.type;node[propertyName]=type===BOOLEAN?false:'';}else {// Contrary to `setAttribute`, object properties are properly
		// `toString`ed by IE8/9.
		node[propertyName]=value;}return;}// The rest are treated as attributes with special cases.
		var attributeName=propertyInfo.attributeName,attributeNamespace=propertyInfo.attributeNamespace;if(value===null){node.removeAttribute(attributeName);}else {var _type=propertyInfo.type;var attributeValue;if(_type===BOOLEAN||_type===OVERLOADED_BOOLEAN&&value===true){// If attribute type is boolean, we know for sure it won't be an execution sink
		// and we won't require Trusted Type here.
		attributeValue='';}else {// `setAttribute` with objects becomes only `[object]` in IE8/9,
		// ('' + value) makes it output the correct toString()-value.
		{{checkAttributeStringCoercion(value,attributeName);}attributeValue=''+value;}if(propertyInfo.sanitizeURL){sanitizeURL(attributeValue.toString());}}if(attributeNamespace){node.setAttributeNS(attributeNamespace,attributeName,attributeValue);}else {node.setAttribute(attributeName,attributeValue);}}}// ATTENTION
		// When adding new symbols to this file,
		// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
		// The Symbol used to tag the ReactElement-like types.
		var REACT_ELEMENT_TYPE=Symbol.for('react.element');var REACT_PORTAL_TYPE=Symbol.for('react.portal');var REACT_FRAGMENT_TYPE=Symbol.for('react.fragment');var REACT_STRICT_MODE_TYPE=Symbol.for('react.strict_mode');var REACT_PROFILER_TYPE=Symbol.for('react.profiler');var REACT_PROVIDER_TYPE=Symbol.for('react.provider');var REACT_CONTEXT_TYPE=Symbol.for('react.context');var REACT_FORWARD_REF_TYPE=Symbol.for('react.forward_ref');var REACT_SUSPENSE_TYPE=Symbol.for('react.suspense');var REACT_SUSPENSE_LIST_TYPE=Symbol.for('react.suspense_list');var REACT_MEMO_TYPE=Symbol.for('react.memo');var REACT_LAZY_TYPE=Symbol.for('react.lazy');var REACT_SCOPE_TYPE=Symbol.for('react.scope');var REACT_DEBUG_TRACING_MODE_TYPE=Symbol.for('react.debug_trace_mode');var REACT_OFFSCREEN_TYPE=Symbol.for('react.offscreen');var REACT_LEGACY_HIDDEN_TYPE=Symbol.for('react.legacy_hidden');var REACT_CACHE_TYPE=Symbol.for('react.cache');var REACT_TRACING_MARKER_TYPE=Symbol.for('react.tracing_marker');var MAYBE_ITERATOR_SYMBOL=Symbol.iterator;var FAUX_ITERATOR_SYMBOL='@@iterator';function getIteratorFn(maybeIterable){if(maybeIterable===null||typeof maybeIterable!=='object'){return null;}var maybeIterator=MAYBE_ITERATOR_SYMBOL&&maybeIterable[MAYBE_ITERATOR_SYMBOL]||maybeIterable[FAUX_ITERATOR_SYMBOL];if(typeof maybeIterator==='function'){return maybeIterator;}return null;}var assign=Object.assign;// Helpers to patch console.logs to avoid logging during side-effect free
		// replaying on render function. This currently only patches the object
		// lazily which won't cover if the log function was extracted eagerly.
		// We could also eagerly patch the method.
		var disabledDepth=0;var prevLog;var prevInfo;var prevWarn;var prevError;var prevGroup;var prevGroupCollapsed;var prevGroupEnd;function disabledLog(){}disabledLog.__reactDisabledLog=true;function disableLogs(){{if(disabledDepth===0){/* eslint-disable react-internal/no-production-logging */prevLog=console.log;prevInfo=console.info;prevWarn=console.warn;prevError=console.error;prevGroup=console.group;prevGroupCollapsed=console.groupCollapsed;prevGroupEnd=console.groupEnd;// https://github.com/facebook/react/issues/19099
		var props={configurable:true,enumerable:true,value:disabledLog,writable:true};// $FlowFixMe Flow thinks console is immutable.
		Object.defineProperties(console,{info:props,log:props,warn:props,error:props,group:props,groupCollapsed:props,groupEnd:props});/* eslint-enable react-internal/no-production-logging */}disabledDepth++;}}function reenableLogs(){{disabledDepth--;if(disabledDepth===0){/* eslint-disable react-internal/no-production-logging */var props={configurable:true,enumerable:true,writable:true};// $FlowFixMe Flow thinks console is immutable.
		Object.defineProperties(console,{log:assign({},props,{value:prevLog}),info:assign({},props,{value:prevInfo}),warn:assign({},props,{value:prevWarn}),error:assign({},props,{value:prevError}),group:assign({},props,{value:prevGroup}),groupCollapsed:assign({},props,{value:prevGroupCollapsed}),groupEnd:assign({},props,{value:prevGroupEnd})});/* eslint-enable react-internal/no-production-logging */}if(disabledDepth<0){error('disabledDepth fell below zero. '+'This is a bug in React. Please file an issue.');}}}var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;var prefix;function describeBuiltInComponentFrame(name,source,ownerFn){{if(prefix===undefined){// Extract the VM specific prefix used by each line.
		try{throw Error();}catch(x){var match=x.stack.trim().match(/\n( *(at )?)/);prefix=match&&match[1]||'';}}// We use the prefix to ensure our stacks line up with native stack frames.
		return '\n'+prefix+name;}}var reentry=false;var componentFrameCache;{var PossiblyWeakMap=typeof WeakMap==='function'?WeakMap:Map;componentFrameCache=new PossiblyWeakMap();}function describeNativeComponentFrame(fn,construct){// If something asked for a stack inside a fake render, it should get ignored.
		if(!fn||reentry){return '';}{var frame=componentFrameCache.get(fn);if(frame!==undefined){return frame;}}var control;reentry=true;var previousPrepareStackTrace=Error.prepareStackTrace;// $FlowFixMe It does accept undefined.
		Error.prepareStackTrace=undefined;var previousDispatcher;{previousDispatcher=ReactCurrentDispatcher.current;// Set the dispatcher in DEV because this might be call in the render function
		// for warnings.
		ReactCurrentDispatcher.current=null;disableLogs();}try{// This should throw.
		if(construct){// Something should be setting the props in the constructor.
		var Fake=function(){throw Error();};// $FlowFixMe
		Object.defineProperty(Fake.prototype,'props',{set:function(){// We use a throwing setter instead of frozen or non-writable props
		// because that won't throw in a non-strict mode function.
		throw Error();}});if(typeof Reflect==='object'&&Reflect.construct){// We construct a different control for this case to include any extra
		// frames added by the construct call.
		try{Reflect.construct(Fake,[]);}catch(x){control=x;}Reflect.construct(fn,[],Fake);}else {try{Fake.call();}catch(x){control=x;}fn.call(Fake.prototype);}}else {try{throw Error();}catch(x){control=x;}fn();}}catch(sample){// This is inlined manually because closure doesn't do it for us.
		if(sample&&control&&typeof sample.stack==='string'){// This extracts the first frame from the sample that isn't also in the control.
		// Skipping one frame that we assume is the frame that calls the two.
		var sampleLines=sample.stack.split('\n');var controlLines=control.stack.split('\n');var s=sampleLines.length-1;var c=controlLines.length-1;while(s>=1&&c>=0&&sampleLines[s]!==controlLines[c]){// We expect at least one stack frame to be shared.
		// Typically this will be the root most one. However, stack frames may be
		// cut off due to maximum stack limits. In this case, one maybe cut off
		// earlier than the other. We assume that the sample is longer or the same
		// and there for cut off earlier. So we should find the root most frame in
		// the sample somewhere in the control.
		c--;}for(;s>=1&&c>=0;s--,c--){// Next we find the first one that isn't the same which should be the
		// frame that called our sample function and the control.
		if(sampleLines[s]!==controlLines[c]){// In V8, the first line is describing the message but other VMs don't.
		// If we're about to return the first line, and the control is also on the same
		// line, that's a pretty good indicator that our sample threw at same line as
		// the control. I.e. before we entered the sample frame. So we ignore this result.
		// This can happen if you passed a class to function component, or non-function.
		if(s!==1||c!==1){do{s--;c--;// We may still have similar intermediate frames from the construct call.
		// The next one that isn't the same should be our match though.
		if(c<0||sampleLines[s]!==controlLines[c]){// V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
		var _frame='\n'+sampleLines[s].replace(' at new ',' at ');// If our component frame is labeled "<anonymous>"
		// but we have a user-provided "displayName"
		// splice it in to make the stack more readable.
		if(fn.displayName&&_frame.includes('<anonymous>')){_frame=_frame.replace('<anonymous>',fn.displayName);}{if(typeof fn==='function'){componentFrameCache.set(fn,_frame);}}// Return the line we found.
		return _frame;}}while(s>=1&&c>=0);}break;}}}}finally{reentry=false;{ReactCurrentDispatcher.current=previousDispatcher;reenableLogs();}Error.prepareStackTrace=previousPrepareStackTrace;}// Fallback to just using the name if we couldn't make it throw.
		var name=fn?fn.displayName||fn.name:'';var syntheticFrame=name?describeBuiltInComponentFrame(name):'';{if(typeof fn==='function'){componentFrameCache.set(fn,syntheticFrame);}}return syntheticFrame;}function describeClassComponentFrame(ctor,source,ownerFn){{return describeNativeComponentFrame(ctor,true);}}function describeFunctionComponentFrame(fn,source,ownerFn){{return describeNativeComponentFrame(fn,false);}}function shouldConstruct(Component){var prototype=Component.prototype;return !!(prototype&&prototype.isReactComponent);}function describeUnknownElementTypeFrameInDEV(type,source,ownerFn){if(type==null){return '';}if(typeof type==='function'){{return describeNativeComponentFrame(type,shouldConstruct(type));}}if(typeof type==='string'){return describeBuiltInComponentFrame(type);}switch(type){case REACT_SUSPENSE_TYPE:return describeBuiltInComponentFrame('Suspense');case REACT_SUSPENSE_LIST_TYPE:return describeBuiltInComponentFrame('SuspenseList');}if(typeof type==='object'){switch(type.$$typeof){case REACT_FORWARD_REF_TYPE:return describeFunctionComponentFrame(type.render);case REACT_MEMO_TYPE:// Memo may contain any component type so we recursively resolve it.
		return describeUnknownElementTypeFrameInDEV(type.type,source,ownerFn);case REACT_LAZY_TYPE:{var lazyComponent=type;var payload=lazyComponent._payload;var init=lazyComponent._init;try{// Lazy may contain any component type so we recursively resolve it.
		return describeUnknownElementTypeFrameInDEV(init(payload),source,ownerFn);}catch(x){}}}}return '';}function describeFiber(fiber){fiber._debugOwner?fiber._debugOwner.type:null;fiber._debugSource;switch(fiber.tag){case HostComponent:return describeBuiltInComponentFrame(fiber.type);case LazyComponent:return describeBuiltInComponentFrame('Lazy');case SuspenseComponent:return describeBuiltInComponentFrame('Suspense');case SuspenseListComponent:return describeBuiltInComponentFrame('SuspenseList');case FunctionComponent:case IndeterminateComponent:case SimpleMemoComponent:return describeFunctionComponentFrame(fiber.type);case ForwardRef:return describeFunctionComponentFrame(fiber.type.render);case ClassComponent:return describeClassComponentFrame(fiber.type);default:return '';}}function getStackByFiberInDevAndProd(workInProgress){try{var info='';var node=workInProgress;do{info+=describeFiber(node);node=node.return;}while(node);return info;}catch(x){return '\nError generating stack: '+x.message+'\n'+x.stack;}}function getWrappedName(outerType,innerType,wrapperName){var displayName=outerType.displayName;if(displayName){return displayName;}var functionName=innerType.displayName||innerType.name||'';return functionName!==''?wrapperName+"("+functionName+")":wrapperName;}// Keep in sync with react-reconciler/getComponentNameFromFiber
		function getContextName(type){return type.displayName||'Context';}// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
		function getComponentNameFromType(type){if(type==null){// Host root, text node or just invalid type.
		return null;}{if(typeof type.tag==='number'){error('Received an unexpected object in getComponentNameFromType(). '+'This is likely a bug in React. Please file an issue.');}}if(typeof type==='function'){return type.displayName||type.name||null;}if(typeof type==='string'){return type;}switch(type){case REACT_FRAGMENT_TYPE:return 'Fragment';case REACT_PORTAL_TYPE:return 'Portal';case REACT_PROFILER_TYPE:return 'Profiler';case REACT_STRICT_MODE_TYPE:return 'StrictMode';case REACT_SUSPENSE_TYPE:return 'Suspense';case REACT_SUSPENSE_LIST_TYPE:return 'SuspenseList';}if(typeof type==='object'){switch(type.$$typeof){case REACT_CONTEXT_TYPE:var context=type;return getContextName(context)+'.Consumer';case REACT_PROVIDER_TYPE:var provider=type;return getContextName(provider._context)+'.Provider';case REACT_FORWARD_REF_TYPE:return getWrappedName(type,type.render,'ForwardRef');case REACT_MEMO_TYPE:var outerName=type.displayName||null;if(outerName!==null){return outerName;}return getComponentNameFromType(type.type)||'Memo';case REACT_LAZY_TYPE:{var lazyComponent=type;var payload=lazyComponent._payload;var init=lazyComponent._init;try{return getComponentNameFromType(init(payload));}catch(x){return null;}}// eslint-disable-next-line no-fallthrough
		}}return null;}function getWrappedName$1(outerType,innerType,wrapperName){var functionName=innerType.displayName||innerType.name||'';return outerType.displayName||(functionName!==''?wrapperName+"("+functionName+")":wrapperName);}// Keep in sync with shared/getComponentNameFromType
		function getContextName$1(type){return type.displayName||'Context';}function getComponentNameFromFiber(fiber){var tag=fiber.tag,type=fiber.type;switch(tag){case CacheComponent:return 'Cache';case ContextConsumer:var context=type;return getContextName$1(context)+'.Consumer';case ContextProvider:var provider=type;return getContextName$1(provider._context)+'.Provider';case DehydratedFragment:return 'DehydratedFragment';case ForwardRef:return getWrappedName$1(type,type.render,'ForwardRef');case Fragment:return 'Fragment';case HostComponent:// Host component type is the display name (e.g. "div", "View")
		return type;case HostPortal:return 'Portal';case HostRoot:return 'Root';case HostText:return 'Text';case LazyComponent:// Name comes from the type in this case; we don't have a tag.
		return getComponentNameFromType(type);case Mode:if(type===REACT_STRICT_MODE_TYPE){// Don't be less specific than shared/getComponentNameFromType
		return 'StrictMode';}return 'Mode';case OffscreenComponent:return 'Offscreen';case Profiler:return 'Profiler';case ScopeComponent:return 'Scope';case SuspenseComponent:return 'Suspense';case SuspenseListComponent:return 'SuspenseList';case TracingMarkerComponent:return 'TracingMarker';// The display name for this tags come from the user-provided type:
		case ClassComponent:case FunctionComponent:case IncompleteClassComponent:case IndeterminateComponent:case MemoComponent:case SimpleMemoComponent:if(typeof type==='function'){return type.displayName||type.name||null;}if(typeof type==='string'){return type;}break;}return null;}var ReactDebugCurrentFrame=ReactSharedInternals.ReactDebugCurrentFrame;var current=null;var isRendering=false;function getCurrentFiberOwnerNameInDevOrNull(){{if(current===null){return null;}var owner=current._debugOwner;if(owner!==null&&typeof owner!=='undefined'){return getComponentNameFromFiber(owner);}}return null;}function getCurrentFiberStackInDev(){{if(current===null){return '';}// Safe because if current fiber exists, we are reconciling,
		// and it is guaranteed to be the work-in-progress version.
		return getStackByFiberInDevAndProd(current);}}function resetCurrentFiber(){{ReactDebugCurrentFrame.getCurrentStack=null;current=null;isRendering=false;}}function setCurrentFiber(fiber){{ReactDebugCurrentFrame.getCurrentStack=fiber===null?null:getCurrentFiberStackInDev;current=fiber;isRendering=false;}}function getCurrentFiber(){{return current;}}function setIsRendering(rendering){{isRendering=rendering;}}// Flow does not allow string concatenation of most non-string types. To work
		// around this limitation, we use an opaque type that can only be obtained by
		// passing the value through getToStringValue first.
		function toString(value){// The coercion safety check is performed in getToStringValue().
		// eslint-disable-next-line react-internal/safe-string-coercion
		return ''+value;}function getToStringValue(value){switch(typeof value){case'boolean':case'number':case'string':case'undefined':return value;case'object':{checkFormFieldValueStringCoercion(value);}return value;default:// function, symbol are assigned as empty strings
		return '';}}var hasReadOnlyValue={button:true,checkbox:true,image:true,hidden:true,radio:true,reset:true,submit:true};function checkControlledValueProps(tagName,props){{if(!(hasReadOnlyValue[props.type]||props.onChange||props.onInput||props.readOnly||props.disabled||props.value==null)){error('You provided a `value` prop to a form field without an '+'`onChange` handler. This will render a read-only field. If '+'the field should be mutable use `defaultValue`. Otherwise, '+'set either `onChange` or `readOnly`.');}if(!(props.onChange||props.readOnly||props.disabled||props.checked==null)){error('You provided a `checked` prop to a form field without an '+'`onChange` handler. This will render a read-only field. If '+'the field should be mutable use `defaultChecked`. Otherwise, '+'set either `onChange` or `readOnly`.');}}}function isCheckable(elem){var type=elem.type;var nodeName=elem.nodeName;return nodeName&&nodeName.toLowerCase()==='input'&&(type==='checkbox'||type==='radio');}function getTracker(node){return node._valueTracker;}function detachTracker(node){node._valueTracker=null;}function getValueFromNode(node){var value='';if(!node){return value;}if(isCheckable(node)){value=node.checked?'true':'false';}else {value=node.value;}return value;}function trackValueOnNode(node){var valueField=isCheckable(node)?'checked':'value';var descriptor=Object.getOwnPropertyDescriptor(node.constructor.prototype,valueField);{checkFormFieldValueStringCoercion(node[valueField]);}var currentValue=''+node[valueField];// if someone has already defined a value or Safari, then bail
		// and don't track value will cause over reporting of changes,
		// but it's better then a hard failure
		// (needed for certain tests that spyOn input values and Safari)
		if(node.hasOwnProperty(valueField)||typeof descriptor==='undefined'||typeof descriptor.get!=='function'||typeof descriptor.set!=='function'){return;}var get=descriptor.get,set=descriptor.set;Object.defineProperty(node,valueField,{configurable:true,get:function(){return get.call(this);},set:function(value){{checkFormFieldValueStringCoercion(value);}currentValue=''+value;set.call(this,value);}});// We could've passed this the first time
		// but it triggers a bug in IE11 and Edge 14/15.
		// Calling defineProperty() again should be equivalent.
		// https://github.com/facebook/react/issues/11768
		Object.defineProperty(node,valueField,{enumerable:descriptor.enumerable});var tracker={getValue:function(){return currentValue;},setValue:function(value){{checkFormFieldValueStringCoercion(value);}currentValue=''+value;},stopTracking:function(){detachTracker(node);delete node[valueField];}};return tracker;}function track(node){if(getTracker(node)){return;}// TODO: Once it's just Fiber we can move this to node._wrapperState
		node._valueTracker=trackValueOnNode(node);}function updateValueIfChanged(node){if(!node){return false;}var tracker=getTracker(node);// if there is no tracker at this point it's unlikely
		// that trying again will succeed
		if(!tracker){return true;}var lastValue=tracker.getValue();var nextValue=getValueFromNode(node);if(nextValue!==lastValue){tracker.setValue(nextValue);return true;}return false;}function getActiveElement(doc){doc=doc||(typeof document!=='undefined'?document:undefined);if(typeof doc==='undefined'){return null;}try{return doc.activeElement||doc.body;}catch(e){return doc.body;}}var didWarnValueDefaultValue=false;var didWarnCheckedDefaultChecked=false;var didWarnControlledToUncontrolled=false;var didWarnUncontrolledToControlled=false;function isControlled(props){var usesChecked=props.type==='checkbox'||props.type==='radio';return usesChecked?props.checked!=null:props.value!=null;}/**
		 * Implements an <input> host component that allows setting these optional
		 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
		 *
		 * If `checked` or `value` are not supplied (or null/undefined), user actions
		 * that affect the checked state or value will trigger updates to the element.
		 *
		 * If they are supplied (and not null/undefined), the rendered element will not
		 * trigger updates to the element. Instead, the props must change in order for
		 * the rendered element to be updated.
		 *
		 * The rendered element will be initialized as unchecked (or `defaultChecked`)
		 * with an empty value (or `defaultValue`).
		 *
		 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
		 */function getHostProps(element,props){var node=element;var checked=props.checked;var hostProps=assign({},props,{defaultChecked:undefined,defaultValue:undefined,value:undefined,checked:checked!=null?checked:node._wrapperState.initialChecked});return hostProps;}function initWrapperState(element,props){{checkControlledValueProps('input',props);if(props.checked!==undefined&&props.defaultChecked!==undefined&&!didWarnCheckedDefaultChecked){error('%s contains an input of type %s with both checked and defaultChecked props. '+'Input elements must be either controlled or uncontrolled '+'(specify either the checked prop, or the defaultChecked prop, but not '+'both). Decide between using a controlled or uncontrolled input '+'element and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components',getCurrentFiberOwnerNameInDevOrNull()||'A component',props.type);didWarnCheckedDefaultChecked=true;}if(props.value!==undefined&&props.defaultValue!==undefined&&!didWarnValueDefaultValue){error('%s contains an input of type %s with both value and defaultValue props. '+'Input elements must be either controlled or uncontrolled '+'(specify either the value prop, or the defaultValue prop, but not '+'both). Decide between using a controlled or uncontrolled input '+'element and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components',getCurrentFiberOwnerNameInDevOrNull()||'A component',props.type);didWarnValueDefaultValue=true;}}var node=element;var defaultValue=props.defaultValue==null?'':props.defaultValue;node._wrapperState={initialChecked:props.checked!=null?props.checked:props.defaultChecked,initialValue:getToStringValue(props.value!=null?props.value:defaultValue),controlled:isControlled(props)};}function updateChecked(element,props){var node=element;var checked=props.checked;if(checked!=null){setValueForProperty(node,'checked',checked,false);}}function updateWrapper(element,props){var node=element;{var controlled=isControlled(props);if(!node._wrapperState.controlled&&controlled&&!didWarnUncontrolledToControlled){error('A component is changing an uncontrolled input to be controlled. '+'This is likely caused by the value changing from undefined to '+'a defined value, which should not happen. '+'Decide between using a controlled or uncontrolled input '+'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');didWarnUncontrolledToControlled=true;}if(node._wrapperState.controlled&&!controlled&&!didWarnControlledToUncontrolled){error('A component is changing a controlled input to be uncontrolled. '+'This is likely caused by the value changing from a defined to '+'undefined, which should not happen. '+'Decide between using a controlled or uncontrolled input '+'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');didWarnControlledToUncontrolled=true;}}updateChecked(element,props);var value=getToStringValue(props.value);var type=props.type;if(value!=null){if(type==='number'){if(value===0&&node.value===''||// We explicitly want to coerce to number here if possible.
		// eslint-disable-next-line
		node.value!=value){node.value=toString(value);}}else if(node.value!==toString(value)){node.value=toString(value);}}else if(type==='submit'||type==='reset'){// Submit/reset inputs need the attribute removed completely to avoid
		// blank-text buttons.
		node.removeAttribute('value');return;}{// When syncing the value attribute, the value comes from a cascade of
		// properties:
		//  1. The value React property
		//  2. The defaultValue React property
		//  3. Otherwise there should be no change
		if(props.hasOwnProperty('value')){setDefaultValue(node,props.type,value);}else if(props.hasOwnProperty('defaultValue')){setDefaultValue(node,props.type,getToStringValue(props.defaultValue));}}{// When syncing the checked attribute, it only changes when it needs
		// to be removed, such as transitioning from a checkbox into a text input
		if(props.checked==null&&props.defaultChecked!=null){node.defaultChecked=!!props.defaultChecked;}}}function postMountWrapper(element,props,isHydrating){var node=element;// Do not assign value if it is already set. This prevents user text input
		// from being lost during SSR hydration.
		if(props.hasOwnProperty('value')||props.hasOwnProperty('defaultValue')){var type=props.type;var isButton=type==='submit'||type==='reset';// Avoid setting value attribute on submit/reset inputs as it overrides the
		// default value provided by the browser. See: #12872
		if(isButton&&(props.value===undefined||props.value===null)){return;}var initialValue=toString(node._wrapperState.initialValue);// Do not assign value if it is already set. This prevents user text input
		// from being lost during SSR hydration.
		if(!isHydrating){{// When syncing the value attribute, the value property should use
		// the wrapperState._initialValue property. This uses:
		//
		//   1. The value React property when present
		//   2. The defaultValue React property when present
		//   3. An empty string
		if(initialValue!==node.value){node.value=initialValue;}}}{// Otherwise, the value attribute is synchronized to the property,
		// so we assign defaultValue to the same thing as the value property
		// assignment step above.
		node.defaultValue=initialValue;}}// Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
		// this is needed to work around a chrome bug where setting defaultChecked
		// will sometimes influence the value of checked (even after detachment).
		// Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
		// We need to temporarily unset name to avoid disrupting radio button groups.
		var name=node.name;if(name!==''){node.name='';}{// When syncing the checked attribute, both the checked property and
		// attribute are assigned at the same time using defaultChecked. This uses:
		//
		//   1. The checked React property when present
		//   2. The defaultChecked React property when present
		//   3. Otherwise, false
		node.defaultChecked=!node.defaultChecked;node.defaultChecked=!!node._wrapperState.initialChecked;}if(name!==''){node.name=name;}}function restoreControlledState(element,props){var node=element;updateWrapper(node,props);updateNamedCousins(node,props);}function updateNamedCousins(rootNode,props){var name=props.name;if(props.type==='radio'&&name!=null){var queryRoot=rootNode;while(queryRoot.parentNode){queryRoot=queryRoot.parentNode;}// If `rootNode.form` was non-null, then we could try `form.elements`,
		// but that sometimes behaves strangely in IE8. We could also try using
		// `form.getElementsByName`, but that will only return direct children
		// and won't include inputs that use the HTML5 `form=` attribute. Since
		// the input might not even be in a form. It might not even be in the
		// document. Let's just use the local `querySelectorAll` to ensure we don't
		// miss anything.
		{checkAttributeStringCoercion(name,'name');}var group=queryRoot.querySelectorAll('input[name='+JSON.stringify(''+name)+'][type="radio"]');for(var i=0;i<group.length;i++){var otherNode=group[i];if(otherNode===rootNode||otherNode.form!==rootNode.form){continue;}// This will throw if radio buttons rendered by different copies of React
		// and the same name are rendered into the same form (same as #1939).
		// That's probably okay; we don't support it just as we don't support
		// mixing React radio buttons with non-React ones.
		var otherProps=getFiberCurrentPropsFromNode(otherNode);if(!otherProps){throw new Error('ReactDOMInput: Mixing React and non-React radio inputs with the '+'same `name` is not supported.');}// We need update the tracked value on the named cousin since the value
		// was changed but the input saw no event or value set
		updateValueIfChanged(otherNode);// If this is a controlled radio button group, forcing the input that
		// was previously checked to update will cause it to be come re-checked
		// as appropriate.
		updateWrapper(otherNode,otherProps);}}}// In Chrome, assigning defaultValue to certain input types triggers input validation.
		// For number inputs, the display value loses trailing decimal points. For email inputs,
		// Chrome raises "The specified value <x> is not a valid email address".
		//
		// Here we check to see if the defaultValue has actually changed, avoiding these problems
		// when the user is inputting text
		//
		// https://github.com/facebook/react/issues/7253
		function setDefaultValue(node,type,value){if(// Focused number inputs synchronize on blur. See ChangeEventPlugin.js
		type!=='number'||getActiveElement(node.ownerDocument)!==node){if(value==null){node.defaultValue=toString(node._wrapperState.initialValue);}else if(node.defaultValue!==toString(value)){node.defaultValue=toString(value);}}}var didWarnSelectedSetOnOption=false;var didWarnInvalidChild=false;var didWarnInvalidInnerHTML=false;/**
		 * Implements an <option> host component that warns when `selected` is set.
		 */function validateProps(element,props){{// If a value is not provided, then the children must be simple.
		if(props.value==null){if(typeof props.children==='object'&&props.children!==null){React.Children.forEach(props.children,function(child){if(child==null){return;}if(typeof child==='string'||typeof child==='number'){return;}if(!didWarnInvalidChild){didWarnInvalidChild=true;error('Cannot infer the option value of complex children. '+'Pass a `value` prop or use a plain string as children to <option>.');}});}else if(props.dangerouslySetInnerHTML!=null){if(!didWarnInvalidInnerHTML){didWarnInvalidInnerHTML=true;error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows '+'which value should be selected.');}}}// TODO: Remove support for `selected` in <option>.
		if(props.selected!=null&&!didWarnSelectedSetOnOption){error('Use the `defaultValue` or `value` props on <select> instead of '+'setting `selected` on <option>.');didWarnSelectedSetOnOption=true;}}}function postMountWrapper$1(element,props){// value="" should make a value attribute (#6219)
		if(props.value!=null){element.setAttribute('value',toString(getToStringValue(props.value)));}}var isArrayImpl=Array.isArray;// eslint-disable-next-line no-redeclare
		function isArray(a){return isArrayImpl(a);}var didWarnValueDefaultValue$1;{didWarnValueDefaultValue$1=false;}function getDeclarationErrorAddendum(){var ownerName=getCurrentFiberOwnerNameInDevOrNull();if(ownerName){return '\n\nCheck the render method of `'+ownerName+'`.';}return '';}var valuePropNames=['value','defaultValue'];/**
		 * Validation function for `value` and `defaultValue`.
		 */function checkSelectPropTypes(props){{checkControlledValueProps('select',props);for(var i=0;i<valuePropNames.length;i++){var propName=valuePropNames[i];if(props[propName]==null){continue;}var propNameIsArray=isArray(props[propName]);if(props.multiple&&!propNameIsArray){error('The `%s` prop supplied to <select> must be an array if '+'`multiple` is true.%s',propName,getDeclarationErrorAddendum());}else if(!props.multiple&&propNameIsArray){error('The `%s` prop supplied to <select> must be a scalar '+'value if `multiple` is false.%s',propName,getDeclarationErrorAddendum());}}}}function updateOptions(node,multiple,propValue,setDefaultSelected){var options=node.options;if(multiple){var selectedValues=propValue;var selectedValue={};for(var i=0;i<selectedValues.length;i++){// Prefix to avoid chaos with special keys.
		selectedValue['$'+selectedValues[i]]=true;}for(var _i=0;_i<options.length;_i++){var selected=selectedValue.hasOwnProperty('$'+options[_i].value);if(options[_i].selected!==selected){options[_i].selected=selected;}if(selected&&setDefaultSelected){options[_i].defaultSelected=true;}}}else {// Do not set `select.value` as exact behavior isn't consistent across all
		// browsers for all cases.
		var _selectedValue=toString(getToStringValue(propValue));var defaultSelected=null;for(var _i2=0;_i2<options.length;_i2++){if(options[_i2].value===_selectedValue){options[_i2].selected=true;if(setDefaultSelected){options[_i2].defaultSelected=true;}return;}if(defaultSelected===null&&!options[_i2].disabled){defaultSelected=options[_i2];}}if(defaultSelected!==null){defaultSelected.selected=true;}}}/**
		 * Implements a <select> host component that allows optionally setting the
		 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
		 * stringable. If `multiple` is true, the prop must be an array of stringables.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that change the
		 * selected option will trigger updates to the rendered options.
		 *
		 * If it is supplied (and not null/undefined), the rendered options will not
		 * update in response to user actions. Instead, the `value` prop must change in
		 * order for the rendered options to update.
		 *
		 * If `defaultValue` is provided, any options with the supplied values will be
		 * selected.
		 */function getHostProps$1(element,props){return assign({},props,{value:undefined});}function initWrapperState$1(element,props){var node=element;{checkSelectPropTypes(props);}node._wrapperState={wasMultiple:!!props.multiple};{if(props.value!==undefined&&props.defaultValue!==undefined&&!didWarnValueDefaultValue$1){error('Select elements must be either controlled or uncontrolled '+'(specify either the value prop, or the defaultValue prop, but not '+'both). Decide between using a controlled or uncontrolled select '+'element and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components');didWarnValueDefaultValue$1=true;}}}function postMountWrapper$2(element,props){var node=element;node.multiple=!!props.multiple;var value=props.value;if(value!=null){updateOptions(node,!!props.multiple,value,false);}else if(props.defaultValue!=null){updateOptions(node,!!props.multiple,props.defaultValue,true);}}function postUpdateWrapper(element,props){var node=element;var wasMultiple=node._wrapperState.wasMultiple;node._wrapperState.wasMultiple=!!props.multiple;var value=props.value;if(value!=null){updateOptions(node,!!props.multiple,value,false);}else if(wasMultiple!==!!props.multiple){// For simplicity, reapply `defaultValue` if `multiple` is toggled.
		if(props.defaultValue!=null){updateOptions(node,!!props.multiple,props.defaultValue,true);}else {// Revert the select back to its default unselected state.
		updateOptions(node,!!props.multiple,props.multiple?[]:'',false);}}}function restoreControlledState$1(element,props){var node=element;var value=props.value;if(value!=null){updateOptions(node,!!props.multiple,value,false);}}var didWarnValDefaultVal=false;/**
		 * Implements a <textarea> host component that allows setting `value`, and
		 * `defaultValue`. This differs from the traditional DOM API because value is
		 * usually set as PCDATA children.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that affect the
		 * value will trigger updates to the element.
		 *
		 * If `value` is supplied (and not null/undefined), the rendered element will
		 * not trigger updates to the element. Instead, the `value` prop must change in
		 * order for the rendered element to be updated.
		 *
		 * The rendered element will be initialized with an empty value, the prop
		 * `defaultValue` if specified, or the children content (deprecated).
		 */function getHostProps$2(element,props){var node=element;if(props.dangerouslySetInnerHTML!=null){throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');}// Always set children to the same thing. In IE9, the selection range will
		// get reset if `textContent` is mutated.  We could add a check in setTextContent
		// to only set the value if/when the value differs from the node value (which would
		// completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
		// solution. The value can be a boolean or object so that's why it's forced
		// to be a string.
		var hostProps=assign({},props,{value:undefined,defaultValue:undefined,children:toString(node._wrapperState.initialValue)});return hostProps;}function initWrapperState$2(element,props){var node=element;{checkControlledValueProps('textarea',props);if(props.value!==undefined&&props.defaultValue!==undefined&&!didWarnValDefaultVal){error('%s contains a textarea with both value and defaultValue props. '+'Textarea elements must be either controlled or uncontrolled '+'(specify either the value prop, or the defaultValue prop, but not '+'both). Decide between using a controlled or uncontrolled textarea '+'and remove one of these props. More info: '+'https://reactjs.org/link/controlled-components',getCurrentFiberOwnerNameInDevOrNull()||'A component');didWarnValDefaultVal=true;}}var initialValue=props.value;// Only bother fetching default value if we're going to use it
		if(initialValue==null){var children=props.children,defaultValue=props.defaultValue;if(children!=null){{error('Use the `defaultValue` or `value` props instead of setting '+'children on <textarea>.');}{if(defaultValue!=null){throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');}if(isArray(children)){if(children.length>1){throw new Error('<textarea> can only have at most one child.');}children=children[0];}defaultValue=children;}}if(defaultValue==null){defaultValue='';}initialValue=defaultValue;}node._wrapperState={initialValue:getToStringValue(initialValue)};}function updateWrapper$1(element,props){var node=element;var value=getToStringValue(props.value);var defaultValue=getToStringValue(props.defaultValue);if(value!=null){// Cast `value` to a string to ensure the value is set correctly. While
		// browsers typically do this as necessary, jsdom doesn't.
		var newValue=toString(value);// To avoid side effects (such as losing text selection), only set value if changed
		if(newValue!==node.value){node.value=newValue;}if(props.defaultValue==null&&node.defaultValue!==newValue){node.defaultValue=newValue;}}if(defaultValue!=null){node.defaultValue=toString(defaultValue);}}function postMountWrapper$3(element,props){var node=element;// This is in postMount because we need access to the DOM node, which is not
		// available until after the component has mounted.
		var textContent=node.textContent;// Only set node.value if textContent is equal to the expected
		// initial value. In IE10/IE11 there is a bug where the placeholder attribute
		// will populate textContent as well.
		// https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
		if(textContent===node._wrapperState.initialValue){if(textContent!==''&&textContent!==null){node.value=textContent;}}}function restoreControlledState$2(element,props){// DOM component is still mounted; update
		updateWrapper$1(element,props);}var HTML_NAMESPACE='http://www.w3.org/1999/xhtml';var MATH_NAMESPACE='http://www.w3.org/1998/Math/MathML';var SVG_NAMESPACE='http://www.w3.org/2000/svg';// Assumes there is no parent namespace.
		function getIntrinsicNamespace(type){switch(type){case'svg':return SVG_NAMESPACE;case'math':return MATH_NAMESPACE;default:return HTML_NAMESPACE;}}function getChildNamespace(parentNamespace,type){if(parentNamespace==null||parentNamespace===HTML_NAMESPACE){// No (or default) parent namespace: potential entry point.
		return getIntrinsicNamespace(type);}if(parentNamespace===SVG_NAMESPACE&&type==='foreignObject'){// We're leaving SVG.
		return HTML_NAMESPACE;}// By default, pass namespace below.
		return parentNamespace;}/* globals MSApp */ /**
		 * Create a function which has 'unsafe' privileges (required by windows8 apps)
		 */var createMicrosoftUnsafeLocalFunction=function(func){if(typeof MSApp!=='undefined'&&MSApp.execUnsafeLocalFunction){return function(arg0,arg1,arg2,arg3){MSApp.execUnsafeLocalFunction(function(){return func(arg0,arg1,arg2,arg3);});};}else {return func;}};var reusableSVGContainer;/**
		 * Set the innerHTML property of a node
		 *
		 * @param {DOMElement} node
		 * @param {string} html
		 * @internal
		 */var setInnerHTML=createMicrosoftUnsafeLocalFunction(function(node,html){if(node.namespaceURI===SVG_NAMESPACE){if(!('innerHTML'in node)){// IE does not have innerHTML for SVG nodes, so instead we inject the
		// new markup in a temp node and then move the child nodes across into
		// the target node
		reusableSVGContainer=reusableSVGContainer||document.createElement('div');reusableSVGContainer.innerHTML='<svg>'+html.valueOf().toString()+'</svg>';var svgNode=reusableSVGContainer.firstChild;while(node.firstChild){node.removeChild(node.firstChild);}while(svgNode.firstChild){node.appendChild(svgNode.firstChild);}return;}}node.innerHTML=html;});/**
		 * HTML nodeType values that represent the type of the node
		 */var ELEMENT_NODE=1;var TEXT_NODE=3;var COMMENT_NODE=8;var DOCUMENT_NODE=9;var DOCUMENT_FRAGMENT_NODE=11;/**
		 * Set the textContent property of a node. For text updates, it's faster
		 * to set the `nodeValue` of the Text node directly instead of using
		 * `.textContent` which will remove the existing node and create a new one.
		 *
		 * @param {DOMElement} node
		 * @param {string} text
		 * @internal
		 */var setTextContent=function(node,text){if(text){var firstChild=node.firstChild;if(firstChild&&firstChild===node.lastChild&&firstChild.nodeType===TEXT_NODE){firstChild.nodeValue=text;return;}}node.textContent=text;};// List derived from Gecko source code:
		// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
		var shorthandToLonghand={animation:['animationDelay','animationDirection','animationDuration','animationFillMode','animationIterationCount','animationName','animationPlayState','animationTimingFunction'],background:['backgroundAttachment','backgroundClip','backgroundColor','backgroundImage','backgroundOrigin','backgroundPositionX','backgroundPositionY','backgroundRepeat','backgroundSize'],backgroundPosition:['backgroundPositionX','backgroundPositionY'],border:['borderBottomColor','borderBottomStyle','borderBottomWidth','borderImageOutset','borderImageRepeat','borderImageSlice','borderImageSource','borderImageWidth','borderLeftColor','borderLeftStyle','borderLeftWidth','borderRightColor','borderRightStyle','borderRightWidth','borderTopColor','borderTopStyle','borderTopWidth'],borderBlockEnd:['borderBlockEndColor','borderBlockEndStyle','borderBlockEndWidth'],borderBlockStart:['borderBlockStartColor','borderBlockStartStyle','borderBlockStartWidth'],borderBottom:['borderBottomColor','borderBottomStyle','borderBottomWidth'],borderColor:['borderBottomColor','borderLeftColor','borderRightColor','borderTopColor'],borderImage:['borderImageOutset','borderImageRepeat','borderImageSlice','borderImageSource','borderImageWidth'],borderInlineEnd:['borderInlineEndColor','borderInlineEndStyle','borderInlineEndWidth'],borderInlineStart:['borderInlineStartColor','borderInlineStartStyle','borderInlineStartWidth'],borderLeft:['borderLeftColor','borderLeftStyle','borderLeftWidth'],borderRadius:['borderBottomLeftRadius','borderBottomRightRadius','borderTopLeftRadius','borderTopRightRadius'],borderRight:['borderRightColor','borderRightStyle','borderRightWidth'],borderStyle:['borderBottomStyle','borderLeftStyle','borderRightStyle','borderTopStyle'],borderTop:['borderTopColor','borderTopStyle','borderTopWidth'],borderWidth:['borderBottomWidth','borderLeftWidth','borderRightWidth','borderTopWidth'],columnRule:['columnRuleColor','columnRuleStyle','columnRuleWidth'],columns:['columnCount','columnWidth'],flex:['flexBasis','flexGrow','flexShrink'],flexFlow:['flexDirection','flexWrap'],font:['fontFamily','fontFeatureSettings','fontKerning','fontLanguageOverride','fontSize','fontSizeAdjust','fontStretch','fontStyle','fontVariant','fontVariantAlternates','fontVariantCaps','fontVariantEastAsian','fontVariantLigatures','fontVariantNumeric','fontVariantPosition','fontWeight','lineHeight'],fontVariant:['fontVariantAlternates','fontVariantCaps','fontVariantEastAsian','fontVariantLigatures','fontVariantNumeric','fontVariantPosition'],gap:['columnGap','rowGap'],grid:['gridAutoColumns','gridAutoFlow','gridAutoRows','gridTemplateAreas','gridTemplateColumns','gridTemplateRows'],gridArea:['gridColumnEnd','gridColumnStart','gridRowEnd','gridRowStart'],gridColumn:['gridColumnEnd','gridColumnStart'],gridColumnGap:['columnGap'],gridGap:['columnGap','rowGap'],gridRow:['gridRowEnd','gridRowStart'],gridRowGap:['rowGap'],gridTemplate:['gridTemplateAreas','gridTemplateColumns','gridTemplateRows'],listStyle:['listStyleImage','listStylePosition','listStyleType'],margin:['marginBottom','marginLeft','marginRight','marginTop'],marker:['markerEnd','markerMid','markerStart'],mask:['maskClip','maskComposite','maskImage','maskMode','maskOrigin','maskPositionX','maskPositionY','maskRepeat','maskSize'],maskPosition:['maskPositionX','maskPositionY'],outline:['outlineColor','outlineStyle','outlineWidth'],overflow:['overflowX','overflowY'],padding:['paddingBottom','paddingLeft','paddingRight','paddingTop'],placeContent:['alignContent','justifyContent'],placeItems:['alignItems','justifyItems'],placeSelf:['alignSelf','justifySelf'],textDecoration:['textDecorationColor','textDecorationLine','textDecorationStyle'],textEmphasis:['textEmphasisColor','textEmphasisStyle'],transition:['transitionDelay','transitionDuration','transitionProperty','transitionTimingFunction'],wordWrap:['overflowWrap']};/**
		 * CSS properties which accept numbers but are not in units of "px".
		 */var isUnitlessNumber={animationIterationCount:true,aspectRatio:true,borderImageOutset:true,borderImageSlice:true,borderImageWidth:true,boxFlex:true,boxFlexGroup:true,boxOrdinalGroup:true,columnCount:true,columns:true,flex:true,flexGrow:true,flexPositive:true,flexShrink:true,flexNegative:true,flexOrder:true,gridArea:true,gridRow:true,gridRowEnd:true,gridRowSpan:true,gridRowStart:true,gridColumn:true,gridColumnEnd:true,gridColumnSpan:true,gridColumnStart:true,fontWeight:true,lineClamp:true,lineHeight:true,opacity:true,order:true,orphans:true,tabSize:true,widows:true,zIndex:true,zoom:true,// SVG-related properties
		fillOpacity:true,floodOpacity:true,stopOpacity:true,strokeDasharray:true,strokeDashoffset:true,strokeMiterlimit:true,strokeOpacity:true,strokeWidth:true};/**
		 * @param {string} prefix vendor-specific prefix, eg: Webkit
		 * @param {string} key style name, eg: transitionDuration
		 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
		 * WebkitTransitionDuration
		 */function prefixKey(prefix,key){return prefix+key.charAt(0).toUpperCase()+key.substring(1);}/**
		 * Support style names that may come passed in prefixed by adding permutations
		 * of vendor prefixes.
		 */var prefixes=['Webkit','ms','Moz','O'];// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
		// infinite loop, because it iterates over the newly added props too.
		Object.keys(isUnitlessNumber).forEach(function(prop){prefixes.forEach(function(prefix){isUnitlessNumber[prefixKey(prefix,prop)]=isUnitlessNumber[prop];});});/**
		 * Convert a value into the proper css writable value. The style name `name`
		 * should be logical (no hyphens), as specified
		 * in `CSSProperty.isUnitlessNumber`.
		 *
		 * @param {string} name CSS property name such as `topMargin`.
		 * @param {*} value CSS property value such as `10px`.
		 * @return {string} Normalized style value with dimensions applied.
		 */function dangerousStyleValue(name,value,isCustomProperty){// Note that we've removed escapeTextForBrowser() calls here since the
		// whole string will be escaped when the attribute is injected into
		// the markup. If you provide unsafe user data here they can inject
		// arbitrary CSS which may be problematic (I couldn't repro this):
		// https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
		// http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
		// This is not an XSS hole but instead a potential CSS injection issue
		// which has lead to a greater discussion about how we're going to
		// trust URLs moving forward. See #2115901
		var isEmpty=value==null||typeof value==='boolean'||value==='';if(isEmpty){return '';}if(!isCustomProperty&&typeof value==='number'&&value!==0&&!(isUnitlessNumber.hasOwnProperty(name)&&isUnitlessNumber[name])){return value+'px';// Presumes implicit 'px' suffix for unitless numbers
		}{checkCSSPropertyStringCoercion(value,name);}return (''+value).trim();}var uppercasePattern=/([A-Z])/g;var msPattern=/^ms-/;/**
		 * Hyphenates a camelcased CSS property name, for example:
		 *
		 *   > hyphenateStyleName('backgroundColor')
		 *   < "background-color"
		 *   > hyphenateStyleName('MozTransition')
		 *   < "-moz-transition"
		 *   > hyphenateStyleName('msTransition')
		 *   < "-ms-transition"
		 *
		 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
		 * is converted to `-ms-`.
		 */function hyphenateStyleName(name){return name.replace(uppercasePattern,'-$1').toLowerCase().replace(msPattern,'-ms-');}var warnValidStyle=function(){};{// 'msTransform' is correct, but the other prefixes should be capitalized
		var badVendoredStyleNamePattern=/^(?:webkit|moz|o)[A-Z]/;var msPattern$1=/^-ms-/;var hyphenPattern=/-(.)/g;// style values shouldn't contain a semicolon
		var badStyleValueWithSemicolonPattern=/;\s*$/;var warnedStyleNames={};var warnedStyleValues={};var warnedForNaNValue=false;var warnedForInfinityValue=false;var camelize=function(string){return string.replace(hyphenPattern,function(_,character){return character.toUpperCase();});};var warnHyphenatedStyleName=function(name){if(warnedStyleNames.hasOwnProperty(name)&&warnedStyleNames[name]){return;}warnedStyleNames[name]=true;error('Unsupported style property %s. Did you mean %s?',name,// As Andi Smith suggests
		// (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
		// is converted to lowercase `ms`.
		camelize(name.replace(msPattern$1,'ms-')));};var warnBadVendoredStyleName=function(name){if(warnedStyleNames.hasOwnProperty(name)&&warnedStyleNames[name]){return;}warnedStyleNames[name]=true;error('Unsupported vendor-prefixed style property %s. Did you mean %s?',name,name.charAt(0).toUpperCase()+name.slice(1));};var warnStyleValueWithSemicolon=function(name,value){if(warnedStyleValues.hasOwnProperty(value)&&warnedStyleValues[value]){return;}warnedStyleValues[value]=true;error("Style property values shouldn't contain a semicolon. "+'Try "%s: %s" instead.',name,value.replace(badStyleValueWithSemicolonPattern,''));};var warnStyleValueIsNaN=function(name,value){if(warnedForNaNValue){return;}warnedForNaNValue=true;error('`NaN` is an invalid value for the `%s` css style property.',name);};var warnStyleValueIsInfinity=function(name,value){if(warnedForInfinityValue){return;}warnedForInfinityValue=true;error('`Infinity` is an invalid value for the `%s` css style property.',name);};warnValidStyle=function(name,value){if(name.indexOf('-')>-1){warnHyphenatedStyleName(name);}else if(badVendoredStyleNamePattern.test(name)){warnBadVendoredStyleName(name);}else if(badStyleValueWithSemicolonPattern.test(value)){warnStyleValueWithSemicolon(name,value);}if(typeof value==='number'){if(isNaN(value)){warnStyleValueIsNaN(name,value);}else if(!isFinite(value)){warnStyleValueIsInfinity(name,value);}}};}var warnValidStyle$1=warnValidStyle;/**
		 * Operations for dealing with CSS properties.
		 */ /**
		 * This creates a string that is expected to be equivalent to the style
		 * attribute generated by server-side rendering. It by-passes warnings and
		 * security checks so it's not safe to use this value for anything other than
		 * comparison. It is only used in DEV for SSR validation.
		 */function createDangerousStringForStyles(styles){{var serialized='';var delimiter='';for(var styleName in styles){if(!styles.hasOwnProperty(styleName)){continue;}var styleValue=styles[styleName];if(styleValue!=null){var isCustomProperty=styleName.indexOf('--')===0;serialized+=delimiter+(isCustomProperty?styleName:hyphenateStyleName(styleName))+':';serialized+=dangerousStyleValue(styleName,styleValue,isCustomProperty);delimiter=';';}}return serialized||null;}}/**
		 * Sets the value for multiple styles on a node.  If a value is specified as
		 * '' (empty string), the corresponding style property will be unset.
		 *
		 * @param {DOMElement} node
		 * @param {object} styles
		 */function setValueForStyles(node,styles){var style=node.style;for(var styleName in styles){if(!styles.hasOwnProperty(styleName)){continue;}var isCustomProperty=styleName.indexOf('--')===0;{if(!isCustomProperty){warnValidStyle$1(styleName,styles[styleName]);}}var styleValue=dangerousStyleValue(styleName,styles[styleName],isCustomProperty);if(styleName==='float'){styleName='cssFloat';}if(isCustomProperty){style.setProperty(styleName,styleValue);}else {style[styleName]=styleValue;}}}function isValueEmpty(value){return value==null||typeof value==='boolean'||value==='';}/**
		 * Given {color: 'red', overflow: 'hidden'} returns {
		 *   color: 'color',
		 *   overflowX: 'overflow',
		 *   overflowY: 'overflow',
		 * }. This can be read as "the overflowY property was set by the overflow
		 * shorthand". That is, the values are the property that each was derived from.
		 */function expandShorthandMap(styles){var expanded={};for(var key in styles){var longhands=shorthandToLonghand[key]||[key];for(var i=0;i<longhands.length;i++){expanded[longhands[i]]=key;}}return expanded;}/**
		 * When mixing shorthand and longhand property names, we warn during updates if
		 * we expect an incorrect result to occur. In particular, we warn for:
		 *
		 * Updating a shorthand property (longhand gets overwritten):
		 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
		 *   becomes .style.font = 'baz'
		 * Removing a shorthand property (longhand gets lost too):
		 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
		 *   becomes .style.font = ''
		 * Removing a longhand property (should revert to shorthand; doesn't):
		 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
		 *   becomes .style.fontVariant = ''
		 */function validateShorthandPropertyCollisionInDev(styleUpdates,nextStyles){{if(!nextStyles){return;}var expandedUpdates=expandShorthandMap(styleUpdates);var expandedStyles=expandShorthandMap(nextStyles);var warnedAbout={};for(var key in expandedUpdates){var originalKey=expandedUpdates[key];var correctOriginalKey=expandedStyles[key];if(correctOriginalKey&&originalKey!==correctOriginalKey){var warningKey=originalKey+','+correctOriginalKey;if(warnedAbout[warningKey]){continue;}warnedAbout[warningKey]=true;error('%s a style property during rerender (%s) when a '+'conflicting property is set (%s) can lead to styling bugs. To '+"avoid this, don't mix shorthand and non-shorthand properties "+'for the same value; instead, replace the shorthand with '+'separate values.',isValueEmpty(styleUpdates[originalKey])?'Removing':'Updating',originalKey,correctOriginalKey);}}}}// For HTML, certain tags should omit their close tag. We keep a list for
		// those special-case tags.
		var omittedCloseTags={area:true,base:true,br:true,col:true,embed:true,hr:true,img:true,input:true,keygen:true,link:true,meta:true,param:true,source:true,track:true,wbr:true// NOTE: menuitem's close tag should be omitted, but that causes problems.
		};// `omittedCloseTags` except that `menuitem` should still have its closing tag.
		var voidElementTags=assign({menuitem:true},omittedCloseTags);var HTML='__html';function assertValidProps(tag,props){if(!props){return;}// Note the use of `==` which checks for null or undefined.
		if(voidElementTags[tag]){if(props.children!=null||props.dangerouslySetInnerHTML!=null){throw new Error(tag+" is a void element tag and must neither have `children` nor "+'use `dangerouslySetInnerHTML`.');}}if(props.dangerouslySetInnerHTML!=null){if(props.children!=null){throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');}if(typeof props.dangerouslySetInnerHTML!=='object'||!(HTML in props.dangerouslySetInnerHTML)){throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. '+'Please visit https://reactjs.org/link/dangerously-set-inner-html '+'for more information.');}}{if(!props.suppressContentEditableWarning&&props.contentEditable&&props.children!=null){error('A component is `contentEditable` and contains `children` managed by '+'React. It is now your responsibility to guarantee that none of '+'those nodes are unexpectedly modified or duplicated. This is '+'probably not intentional.');}}if(props.style!=null&&typeof props.style!=='object'){throw new Error('The `style` prop expects a mapping from style properties to values, '+"not a string. For example, style={{marginRight: spacing + 'em'}} when "+'using JSX.');}}function isCustomComponent(tagName,props){if(tagName.indexOf('-')===-1){return typeof props.is==='string';}switch(tagName){// These are reserved SVG and MathML elements.
		// We don't mind this list too much because we expect it to never grow.
		// The alternative is to track the namespace in a few places which is convoluted.
		// https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
		case'annotation-xml':case'color-profile':case'font-face':case'font-face-src':case'font-face-uri':case'font-face-format':case'font-face-name':case'missing-glyph':return false;default:return true;}}// When adding attributes to the HTML or SVG allowed attribute list, be sure to
		// also add them to this module to ensure casing and incorrect name
		// warnings.
		var possibleStandardNames={// HTML
		accept:'accept',acceptcharset:'acceptCharset','accept-charset':'acceptCharset',accesskey:'accessKey',action:'action',allowfullscreen:'allowFullScreen',alt:'alt',as:'as',async:'async',autocapitalize:'autoCapitalize',autocomplete:'autoComplete',autocorrect:'autoCorrect',autofocus:'autoFocus',autoplay:'autoPlay',autosave:'autoSave',capture:'capture',cellpadding:'cellPadding',cellspacing:'cellSpacing',challenge:'challenge',charset:'charSet',checked:'checked',children:'children',cite:'cite',class:'className',classid:'classID',classname:'className',cols:'cols',colspan:'colSpan',content:'content',contenteditable:'contentEditable',contextmenu:'contextMenu',controls:'controls',controlslist:'controlsList',coords:'coords',crossorigin:'crossOrigin',dangerouslysetinnerhtml:'dangerouslySetInnerHTML',data:'data',datetime:'dateTime',default:'default',defaultchecked:'defaultChecked',defaultvalue:'defaultValue',defer:'defer',dir:'dir',disabled:'disabled',disablepictureinpicture:'disablePictureInPicture',disableremoteplayback:'disableRemotePlayback',download:'download',draggable:'draggable',enctype:'encType',enterkeyhint:'enterKeyHint',for:'htmlFor',form:'form',formmethod:'formMethod',formaction:'formAction',formenctype:'formEncType',formnovalidate:'formNoValidate',formtarget:'formTarget',frameborder:'frameBorder',headers:'headers',height:'height',hidden:'hidden',high:'high',href:'href',hreflang:'hrefLang',htmlfor:'htmlFor',httpequiv:'httpEquiv','http-equiv':'httpEquiv',icon:'icon',id:'id',imagesizes:'imageSizes',imagesrcset:'imageSrcSet',innerhtml:'innerHTML',inputmode:'inputMode',integrity:'integrity',is:'is',itemid:'itemID',itemprop:'itemProp',itemref:'itemRef',itemscope:'itemScope',itemtype:'itemType',keyparams:'keyParams',keytype:'keyType',kind:'kind',label:'label',lang:'lang',list:'list',loop:'loop',low:'low',manifest:'manifest',marginwidth:'marginWidth',marginheight:'marginHeight',max:'max',maxlength:'maxLength',media:'media',mediagroup:'mediaGroup',method:'method',min:'min',minlength:'minLength',multiple:'multiple',muted:'muted',name:'name',nomodule:'noModule',nonce:'nonce',novalidate:'noValidate',open:'open',optimum:'optimum',pattern:'pattern',placeholder:'placeholder',playsinline:'playsInline',poster:'poster',preload:'preload',profile:'profile',radiogroup:'radioGroup',readonly:'readOnly',referrerpolicy:'referrerPolicy',rel:'rel',required:'required',reversed:'reversed',role:'role',rows:'rows',rowspan:'rowSpan',sandbox:'sandbox',scope:'scope',scoped:'scoped',scrolling:'scrolling',seamless:'seamless',selected:'selected',shape:'shape',size:'size',sizes:'sizes',span:'span',spellcheck:'spellCheck',src:'src',srcdoc:'srcDoc',srclang:'srcLang',srcset:'srcSet',start:'start',step:'step',style:'style',summary:'summary',tabindex:'tabIndex',target:'target',title:'title',type:'type',usemap:'useMap',value:'value',width:'width',wmode:'wmode',wrap:'wrap',// SVG
		about:'about',accentheight:'accentHeight','accent-height':'accentHeight',accumulate:'accumulate',additive:'additive',alignmentbaseline:'alignmentBaseline','alignment-baseline':'alignmentBaseline',allowreorder:'allowReorder',alphabetic:'alphabetic',amplitude:'amplitude',arabicform:'arabicForm','arabic-form':'arabicForm',ascent:'ascent',attributename:'attributeName',attributetype:'attributeType',autoreverse:'autoReverse',azimuth:'azimuth',basefrequency:'baseFrequency',baselineshift:'baselineShift','baseline-shift':'baselineShift',baseprofile:'baseProfile',bbox:'bbox',begin:'begin',bias:'bias',by:'by',calcmode:'calcMode',capheight:'capHeight','cap-height':'capHeight',clip:'clip',clippath:'clipPath','clip-path':'clipPath',clippathunits:'clipPathUnits',cliprule:'clipRule','clip-rule':'clipRule',color:'color',colorinterpolation:'colorInterpolation','color-interpolation':'colorInterpolation',colorinterpolationfilters:'colorInterpolationFilters','color-interpolation-filters':'colorInterpolationFilters',colorprofile:'colorProfile','color-profile':'colorProfile',colorrendering:'colorRendering','color-rendering':'colorRendering',contentscripttype:'contentScriptType',contentstyletype:'contentStyleType',cursor:'cursor',cx:'cx',cy:'cy',d:'d',datatype:'datatype',decelerate:'decelerate',descent:'descent',diffuseconstant:'diffuseConstant',direction:'direction',display:'display',divisor:'divisor',dominantbaseline:'dominantBaseline','dominant-baseline':'dominantBaseline',dur:'dur',dx:'dx',dy:'dy',edgemode:'edgeMode',elevation:'elevation',enablebackground:'enableBackground','enable-background':'enableBackground',end:'end',exponent:'exponent',externalresourcesrequired:'externalResourcesRequired',fill:'fill',fillopacity:'fillOpacity','fill-opacity':'fillOpacity',fillrule:'fillRule','fill-rule':'fillRule',filter:'filter',filterres:'filterRes',filterunits:'filterUnits',floodopacity:'floodOpacity','flood-opacity':'floodOpacity',floodcolor:'floodColor','flood-color':'floodColor',focusable:'focusable',fontfamily:'fontFamily','font-family':'fontFamily',fontsize:'fontSize','font-size':'fontSize',fontsizeadjust:'fontSizeAdjust','font-size-adjust':'fontSizeAdjust',fontstretch:'fontStretch','font-stretch':'fontStretch',fontstyle:'fontStyle','font-style':'fontStyle',fontvariant:'fontVariant','font-variant':'fontVariant',fontweight:'fontWeight','font-weight':'fontWeight',format:'format',from:'from',fx:'fx',fy:'fy',g1:'g1',g2:'g2',glyphname:'glyphName','glyph-name':'glyphName',glyphorientationhorizontal:'glyphOrientationHorizontal','glyph-orientation-horizontal':'glyphOrientationHorizontal',glyphorientationvertical:'glyphOrientationVertical','glyph-orientation-vertical':'glyphOrientationVertical',glyphref:'glyphRef',gradienttransform:'gradientTransform',gradientunits:'gradientUnits',hanging:'hanging',horizadvx:'horizAdvX','horiz-adv-x':'horizAdvX',horizoriginx:'horizOriginX','horiz-origin-x':'horizOriginX',ideographic:'ideographic',imagerendering:'imageRendering','image-rendering':'imageRendering',in2:'in2',in:'in',inlist:'inlist',intercept:'intercept',k1:'k1',k2:'k2',k3:'k3',k4:'k4',k:'k',kernelmatrix:'kernelMatrix',kernelunitlength:'kernelUnitLength',kerning:'kerning',keypoints:'keyPoints',keysplines:'keySplines',keytimes:'keyTimes',lengthadjust:'lengthAdjust',letterspacing:'letterSpacing','letter-spacing':'letterSpacing',lightingcolor:'lightingColor','lighting-color':'lightingColor',limitingconeangle:'limitingConeAngle',local:'local',markerend:'markerEnd','marker-end':'markerEnd',markerheight:'markerHeight',markermid:'markerMid','marker-mid':'markerMid',markerstart:'markerStart','marker-start':'markerStart',markerunits:'markerUnits',markerwidth:'markerWidth',mask:'mask',maskcontentunits:'maskContentUnits',maskunits:'maskUnits',mathematical:'mathematical',mode:'mode',numoctaves:'numOctaves',offset:'offset',opacity:'opacity',operator:'operator',order:'order',orient:'orient',orientation:'orientation',origin:'origin',overflow:'overflow',overlineposition:'overlinePosition','overline-position':'overlinePosition',overlinethickness:'overlineThickness','overline-thickness':'overlineThickness',paintorder:'paintOrder','paint-order':'paintOrder',panose1:'panose1','panose-1':'panose1',pathlength:'pathLength',patterncontentunits:'patternContentUnits',patterntransform:'patternTransform',patternunits:'patternUnits',pointerevents:'pointerEvents','pointer-events':'pointerEvents',points:'points',pointsatx:'pointsAtX',pointsaty:'pointsAtY',pointsatz:'pointsAtZ',prefix:'prefix',preservealpha:'preserveAlpha',preserveaspectratio:'preserveAspectRatio',primitiveunits:'primitiveUnits',property:'property',r:'r',radius:'radius',refx:'refX',refy:'refY',renderingintent:'renderingIntent','rendering-intent':'renderingIntent',repeatcount:'repeatCount',repeatdur:'repeatDur',requiredextensions:'requiredExtensions',requiredfeatures:'requiredFeatures',resource:'resource',restart:'restart',result:'result',results:'results',rotate:'rotate',rx:'rx',ry:'ry',scale:'scale',security:'security',seed:'seed',shaperendering:'shapeRendering','shape-rendering':'shapeRendering',slope:'slope',spacing:'spacing',specularconstant:'specularConstant',specularexponent:'specularExponent',speed:'speed',spreadmethod:'spreadMethod',startoffset:'startOffset',stddeviation:'stdDeviation',stemh:'stemh',stemv:'stemv',stitchtiles:'stitchTiles',stopcolor:'stopColor','stop-color':'stopColor',stopopacity:'stopOpacity','stop-opacity':'stopOpacity',strikethroughposition:'strikethroughPosition','strikethrough-position':'strikethroughPosition',strikethroughthickness:'strikethroughThickness','strikethrough-thickness':'strikethroughThickness',string:'string',stroke:'stroke',strokedasharray:'strokeDasharray','stroke-dasharray':'strokeDasharray',strokedashoffset:'strokeDashoffset','stroke-dashoffset':'strokeDashoffset',strokelinecap:'strokeLinecap','stroke-linecap':'strokeLinecap',strokelinejoin:'strokeLinejoin','stroke-linejoin':'strokeLinejoin',strokemiterlimit:'strokeMiterlimit','stroke-miterlimit':'strokeMiterlimit',strokewidth:'strokeWidth','stroke-width':'strokeWidth',strokeopacity:'strokeOpacity','stroke-opacity':'strokeOpacity',suppresscontenteditablewarning:'suppressContentEditableWarning',suppresshydrationwarning:'suppressHydrationWarning',surfacescale:'surfaceScale',systemlanguage:'systemLanguage',tablevalues:'tableValues',targetx:'targetX',targety:'targetY',textanchor:'textAnchor','text-anchor':'textAnchor',textdecoration:'textDecoration','text-decoration':'textDecoration',textlength:'textLength',textrendering:'textRendering','text-rendering':'textRendering',to:'to',transform:'transform',typeof:'typeof',u1:'u1',u2:'u2',underlineposition:'underlinePosition','underline-position':'underlinePosition',underlinethickness:'underlineThickness','underline-thickness':'underlineThickness',unicode:'unicode',unicodebidi:'unicodeBidi','unicode-bidi':'unicodeBidi',unicoderange:'unicodeRange','unicode-range':'unicodeRange',unitsperem:'unitsPerEm','units-per-em':'unitsPerEm',unselectable:'unselectable',valphabetic:'vAlphabetic','v-alphabetic':'vAlphabetic',values:'values',vectoreffect:'vectorEffect','vector-effect':'vectorEffect',version:'version',vertadvy:'vertAdvY','vert-adv-y':'vertAdvY',vertoriginx:'vertOriginX','vert-origin-x':'vertOriginX',vertoriginy:'vertOriginY','vert-origin-y':'vertOriginY',vhanging:'vHanging','v-hanging':'vHanging',videographic:'vIdeographic','v-ideographic':'vIdeographic',viewbox:'viewBox',viewtarget:'viewTarget',visibility:'visibility',vmathematical:'vMathematical','v-mathematical':'vMathematical',vocab:'vocab',widths:'widths',wordspacing:'wordSpacing','word-spacing':'wordSpacing',writingmode:'writingMode','writing-mode':'writingMode',x1:'x1',x2:'x2',x:'x',xchannelselector:'xChannelSelector',xheight:'xHeight','x-height':'xHeight',xlinkactuate:'xlinkActuate','xlink:actuate':'xlinkActuate',xlinkarcrole:'xlinkArcrole','xlink:arcrole':'xlinkArcrole',xlinkhref:'xlinkHref','xlink:href':'xlinkHref',xlinkrole:'xlinkRole','xlink:role':'xlinkRole',xlinkshow:'xlinkShow','xlink:show':'xlinkShow',xlinktitle:'xlinkTitle','xlink:title':'xlinkTitle',xlinktype:'xlinkType','xlink:type':'xlinkType',xmlbase:'xmlBase','xml:base':'xmlBase',xmllang:'xmlLang','xml:lang':'xmlLang',xmlns:'xmlns','xml:space':'xmlSpace',xmlnsxlink:'xmlnsXlink','xmlns:xlink':'xmlnsXlink',xmlspace:'xmlSpace',y1:'y1',y2:'y2',y:'y',ychannelselector:'yChannelSelector',z:'z',zoomandpan:'zoomAndPan'};var ariaProperties={'aria-current':0,// state
		'aria-description':0,'aria-details':0,'aria-disabled':0,// state
		'aria-hidden':0,// state
		'aria-invalid':0,// state
		'aria-keyshortcuts':0,'aria-label':0,'aria-roledescription':0,// Widget Attributes
		'aria-autocomplete':0,'aria-checked':0,'aria-expanded':0,'aria-haspopup':0,'aria-level':0,'aria-modal':0,'aria-multiline':0,'aria-multiselectable':0,'aria-orientation':0,'aria-placeholder':0,'aria-pressed':0,'aria-readonly':0,'aria-required':0,'aria-selected':0,'aria-sort':0,'aria-valuemax':0,'aria-valuemin':0,'aria-valuenow':0,'aria-valuetext':0,// Live Region Attributes
		'aria-atomic':0,'aria-busy':0,'aria-live':0,'aria-relevant':0,// Drag-and-Drop Attributes
		'aria-dropeffect':0,'aria-grabbed':0,// Relationship Attributes
		'aria-activedescendant':0,'aria-colcount':0,'aria-colindex':0,'aria-colspan':0,'aria-controls':0,'aria-describedby':0,'aria-errormessage':0,'aria-flowto':0,'aria-labelledby':0,'aria-owns':0,'aria-posinset':0,'aria-rowcount':0,'aria-rowindex':0,'aria-rowspan':0,'aria-setsize':0};var warnedProperties={};var rARIA=new RegExp('^(aria)-['+ATTRIBUTE_NAME_CHAR+']*$');var rARIACamel=new RegExp('^(aria)[A-Z]['+ATTRIBUTE_NAME_CHAR+']*$');function validateProperty(tagName,name){{if(hasOwnProperty.call(warnedProperties,name)&&warnedProperties[name]){return true;}if(rARIACamel.test(name)){var ariaName='aria-'+name.slice(4).toLowerCase();var correctName=ariaProperties.hasOwnProperty(ariaName)?ariaName:null;// If this is an aria-* attribute, but is not listed in the known DOM
		// DOM properties, then it is an invalid aria-* attribute.
		if(correctName==null){error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',name);warnedProperties[name]=true;return true;}// aria-* attributes should be lowercase; suggest the lowercase version.
		if(name!==correctName){error('Invalid ARIA attribute `%s`. Did you mean `%s`?',name,correctName);warnedProperties[name]=true;return true;}}if(rARIA.test(name)){var lowerCasedName=name.toLowerCase();var standardName=ariaProperties.hasOwnProperty(lowerCasedName)?lowerCasedName:null;// If this is an aria-* attribute, but is not listed in the known DOM
		// DOM properties, then it is an invalid aria-* attribute.
		if(standardName==null){warnedProperties[name]=true;return false;}// aria-* attributes should be lowercase; suggest the lowercase version.
		if(name!==standardName){error('Unknown ARIA attribute `%s`. Did you mean `%s`?',name,standardName);warnedProperties[name]=true;return true;}}}return true;}function warnInvalidARIAProps(type,props){{var invalidProps=[];for(var key in props){var isValid=validateProperty(type,key);if(!isValid){invalidProps.push(key);}}var unknownPropString=invalidProps.map(function(prop){return '`'+prop+'`';}).join(', ');if(invalidProps.length===1){error('Invalid aria prop %s on <%s> tag. '+'For details, see https://reactjs.org/link/invalid-aria-props',unknownPropString,type);}else if(invalidProps.length>1){error('Invalid aria props %s on <%s> tag. '+'For details, see https://reactjs.org/link/invalid-aria-props',unknownPropString,type);}}}function validateProperties(type,props){if(isCustomComponent(type,props)){return;}warnInvalidARIAProps(type,props);}var didWarnValueNull=false;function validateProperties$1(type,props){{if(type!=='input'&&type!=='textarea'&&type!=='select'){return;}if(props!=null&&props.value===null&&!didWarnValueNull){didWarnValueNull=true;if(type==='select'&&props.multiple){error('`value` prop on `%s` should not be null. '+'Consider using an empty array when `multiple` is set to `true` '+'to clear the component or `undefined` for uncontrolled components.',type);}else {error('`value` prop on `%s` should not be null. '+'Consider using an empty string to clear the component or `undefined` '+'for uncontrolled components.',type);}}}}var validateProperty$1=function(){};{var warnedProperties$1={};var EVENT_NAME_REGEX=/^on./;var INVALID_EVENT_NAME_REGEX=/^on[^A-Z]/;var rARIA$1=new RegExp('^(aria)-['+ATTRIBUTE_NAME_CHAR+']*$');var rARIACamel$1=new RegExp('^(aria)[A-Z]['+ATTRIBUTE_NAME_CHAR+']*$');validateProperty$1=function(tagName,name,value,eventRegistry){if(hasOwnProperty.call(warnedProperties$1,name)&&warnedProperties$1[name]){return true;}var lowerCasedName=name.toLowerCase();if(lowerCasedName==='onfocusin'||lowerCasedName==='onfocusout'){error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. '+'All React events are normalized to bubble, so onFocusIn and onFocusOut '+'are not needed/supported by React.');warnedProperties$1[name]=true;return true;}// We can't rely on the event system being injected on the server.
		if(eventRegistry!=null){var registrationNameDependencies=eventRegistry.registrationNameDependencies,possibleRegistrationNames=eventRegistry.possibleRegistrationNames;if(registrationNameDependencies.hasOwnProperty(name)){return true;}var registrationName=possibleRegistrationNames.hasOwnProperty(lowerCasedName)?possibleRegistrationNames[lowerCasedName]:null;if(registrationName!=null){error('Invalid event handler property `%s`. Did you mean `%s`?',name,registrationName);warnedProperties$1[name]=true;return true;}if(EVENT_NAME_REGEX.test(name)){error('Unknown event handler property `%s`. It will be ignored.',name);warnedProperties$1[name]=true;return true;}}else if(EVENT_NAME_REGEX.test(name)){// If no event plugins have been injected, we are in a server environment.
		// So we can't tell if the event name is correct for sure, but we can filter
		// out known bad ones like `onclick`. We can't suggest a specific replacement though.
		if(INVALID_EVENT_NAME_REGEX.test(name)){error('Invalid event handler property `%s`. '+'React events use the camelCase naming convention, for example `onClick`.',name);}warnedProperties$1[name]=true;return true;}// Let the ARIA attribute hook validate ARIA attributes
		if(rARIA$1.test(name)||rARIACamel$1.test(name)){return true;}if(lowerCasedName==='innerhtml'){error('Directly setting property `innerHTML` is not permitted. '+'For more information, lookup documentation on `dangerouslySetInnerHTML`.');warnedProperties$1[name]=true;return true;}if(lowerCasedName==='aria'){error('The `aria` attribute is reserved for future use in React. '+'Pass individual `aria-` attributes instead.');warnedProperties$1[name]=true;return true;}if(lowerCasedName==='is'&&value!==null&&value!==undefined&&typeof value!=='string'){error('Received a `%s` for a string attribute `is`. If this is expected, cast '+'the value to a string.',typeof value);warnedProperties$1[name]=true;return true;}if(typeof value==='number'&&isNaN(value)){error('Received NaN for the `%s` attribute. If this is expected, cast '+'the value to a string.',name);warnedProperties$1[name]=true;return true;}var propertyInfo=getPropertyInfo(name);var isReserved=propertyInfo!==null&&propertyInfo.type===RESERVED;// Known attributes should match the casing specified in the property config.
		if(possibleStandardNames.hasOwnProperty(lowerCasedName)){var standardName=possibleStandardNames[lowerCasedName];if(standardName!==name){error('Invalid DOM property `%s`. Did you mean `%s`?',name,standardName);warnedProperties$1[name]=true;return true;}}else if(!isReserved&&name!==lowerCasedName){// Unknown attributes should have lowercase casing since that's how they
		// will be cased anyway with server rendering.
		error('React does not recognize the `%s` prop on a DOM element. If you '+'intentionally want it to appear in the DOM as a custom '+'attribute, spell it as lowercase `%s` instead. '+'If you accidentally passed it from a parent component, remove '+'it from the DOM element.',name,lowerCasedName);warnedProperties$1[name]=true;return true;}if(typeof value==='boolean'&&shouldRemoveAttributeWithWarning(name,value,propertyInfo,false)){if(value){error('Received `%s` for a non-boolean attribute `%s`.\n\n'+'If you want to write it to the DOM, pass a string instead: '+'%s="%s" or %s={value.toString()}.',value,name,name,value,name);}else {error('Received `%s` for a non-boolean attribute `%s`.\n\n'+'If you want to write it to the DOM, pass a string instead: '+'%s="%s" or %s={value.toString()}.\n\n'+'If you used to conditionally omit it with %s={condition && value}, '+'pass %s={condition ? value : undefined} instead.',value,name,name,value,name,name,name);}warnedProperties$1[name]=true;return true;}// Now that we've validated casing, do not validate
		// data types for reserved props
		if(isReserved){return true;}// Warn when a known attribute is a bad type
		if(shouldRemoveAttributeWithWarning(name,value,propertyInfo,false)){warnedProperties$1[name]=true;return false;}// Warn when passing the strings 'false' or 'true' into a boolean prop
		if((value==='false'||value==='true')&&propertyInfo!==null&&propertyInfo.type===BOOLEAN){error('Received the string `%s` for the boolean attribute `%s`. '+'%s '+'Did you mean %s={%s}?',value,name,value==='false'?'The browser will interpret it as a truthy value.':'Although this works, it will not work as expected if you pass the string "false".',name,value);warnedProperties$1[name]=true;return true;}return true;};}var warnUnknownProperties=function(type,props,eventRegistry){{var unknownProps=[];for(var key in props){var isValid=validateProperty$1(type,key,props[key],eventRegistry);if(!isValid){unknownProps.push(key);}}var unknownPropString=unknownProps.map(function(prop){return '`'+prop+'`';}).join(', ');if(unknownProps.length===1){error('Invalid value for prop %s on <%s> tag. Either remove it from the element, '+'or pass a string or number value to keep it in the DOM. '+'For details, see https://reactjs.org/link/attribute-behavior ',unknownPropString,type);}else if(unknownProps.length>1){error('Invalid values for props %s on <%s> tag. Either remove them from the element, '+'or pass a string or number value to keep them in the DOM. '+'For details, see https://reactjs.org/link/attribute-behavior ',unknownPropString,type);}}};function validateProperties$2(type,props,eventRegistry){if(isCustomComponent(type,props)){return;}warnUnknownProperties(type,props,eventRegistry);}var IS_EVENT_HANDLE_NON_MANAGED_NODE=1;var IS_NON_DELEGATED=1<<1;var IS_CAPTURE_PHASE=1<<2;// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
		// we call willDeferLaterForLegacyFBSupport, thus not bailing out
		// will result in endless cycles like an infinite loop.
		// We also don't want to defer during event replaying.
		var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS=IS_EVENT_HANDLE_NON_MANAGED_NODE|IS_NON_DELEGATED|IS_CAPTURE_PHASE;// This exists to avoid circular dependency between ReactDOMEventReplaying
		// and DOMPluginEventSystem.
		var currentReplayingEvent=null;function setReplayingEvent(event){{if(currentReplayingEvent!==null){error('Expected currently replaying event to be null. This error '+'is likely caused by a bug in React. Please file an issue.');}}currentReplayingEvent=event;}function resetReplayingEvent(){{if(currentReplayingEvent===null){error('Expected currently replaying event to not be null. This error '+'is likely caused by a bug in React. Please file an issue.');}}currentReplayingEvent=null;}function isReplayingEvent(event){return event===currentReplayingEvent;}/**
		 * Gets the target node from a native browser event by accounting for
		 * inconsistencies in browser DOM APIs.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {DOMEventTarget} Target node.
		 */function getEventTarget(nativeEvent){// Fallback to nativeEvent.srcElement for IE9
		// https://github.com/facebook/react/issues/12506
		var target=nativeEvent.target||nativeEvent.srcElement||window;// Normalize SVG <use> element events #4963
		if(target.correspondingUseElement){target=target.correspondingUseElement;}// Safari may fire events on text nodes (Node.TEXT_NODE is 3).
		// @see http://www.quirksmode.org/js/events_properties.html
		return target.nodeType===TEXT_NODE?target.parentNode:target;}var restoreImpl=null;var restoreTarget=null;var restoreQueue=null;function restoreStateOfTarget(target){// We perform this translation at the end of the event loop so that we
		// always receive the correct fiber here
		var internalInstance=getInstanceFromNode(target);if(!internalInstance){// Unmounted
		return;}if(typeof restoreImpl!=='function'){throw new Error('setRestoreImplementation() needs to be called to handle a target for controlled '+'events. This error is likely caused by a bug in React. Please file an issue.');}var stateNode=internalInstance.stateNode;// Guard against Fiber being unmounted.
		if(stateNode){var _props=getFiberCurrentPropsFromNode(stateNode);restoreImpl(internalInstance.stateNode,internalInstance.type,_props);}}function setRestoreImplementation(impl){restoreImpl=impl;}function enqueueStateRestore(target){if(restoreTarget){if(restoreQueue){restoreQueue.push(target);}else {restoreQueue=[target];}}else {restoreTarget=target;}}function needsStateRestore(){return restoreTarget!==null||restoreQueue!==null;}function restoreStateIfNeeded(){if(!restoreTarget){return;}var target=restoreTarget;var queuedTargets=restoreQueue;restoreTarget=null;restoreQueue=null;restoreStateOfTarget(target);if(queuedTargets){for(var i=0;i<queuedTargets.length;i++){restoreStateOfTarget(queuedTargets[i]);}}}// the renderer. Such as when we're dispatching events or if third party
		// libraries need to call batchedUpdates. Eventually, this API will go away when
		// everything is batched by default. We'll then have a similar API to opt-out of
		// scheduled work and instead do synchronous work.
		// Defaults
		var batchedUpdatesImpl=function(fn,bookkeeping){return fn(bookkeeping);};var flushSyncImpl=function(){};var isInsideEventHandler=false;function finishEventHandler(){// Here we wait until all updates have propagated, which is important
		// when using controlled components within layers:
		// https://github.com/facebook/react/issues/1698
		// Then we restore state of any controlled component.
		var controlledComponentsHavePendingUpdates=needsStateRestore();if(controlledComponentsHavePendingUpdates){// If a controlled event was fired, we may need to restore the state of
		// the DOM node back to the controlled value. This is necessary when React
		// bails out of the update without touching the DOM.
		// TODO: Restore state in the microtask, after the discrete updates flush,
		// instead of early flushing them here.
		flushSyncImpl();restoreStateIfNeeded();}}function batchedUpdates(fn,a,b){if(isInsideEventHandler){// If we are currently inside another batch, we need to wait until it
		// fully completes before restoring state.
		return fn(a,b);}isInsideEventHandler=true;try{return batchedUpdatesImpl(fn,a,b);}finally{isInsideEventHandler=false;finishEventHandler();}}// TODO: Replace with flushSync
		function setBatchingImplementation(_batchedUpdatesImpl,_discreteUpdatesImpl,_flushSyncImpl){batchedUpdatesImpl=_batchedUpdatesImpl;flushSyncImpl=_flushSyncImpl;}function isInteractive(tag){return tag==='button'||tag==='input'||tag==='select'||tag==='textarea';}function shouldPreventMouseEvent(name,type,props){switch(name){case'onClick':case'onClickCapture':case'onDoubleClick':case'onDoubleClickCapture':case'onMouseDown':case'onMouseDownCapture':case'onMouseMove':case'onMouseMoveCapture':case'onMouseUp':case'onMouseUpCapture':case'onMouseEnter':return !!(props.disabled&&isInteractive(type));default:return false;}}/**
		 * @param {object} inst The instance, which is the source of events.
		 * @param {string} registrationName Name of listener (e.g. `onClick`).
		 * @return {?function} The stored callback.
		 */function getListener(inst,registrationName){var stateNode=inst.stateNode;if(stateNode===null){// Work in progress (ex: onload events in incremental mode).
		return null;}var props=getFiberCurrentPropsFromNode(stateNode);if(props===null){// Work in progress.
		return null;}var listener=props[registrationName];if(shouldPreventMouseEvent(registrationName,inst.type,props)){return null;}if(listener&&typeof listener!=='function'){throw new Error("Expected `"+registrationName+"` listener to be a function, instead got a value of `"+typeof listener+"` type.");}return listener;}var passiveBrowserEventsSupported=false;// Check if browser support events with passive listeners
		// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
		if(canUseDOM){try{var options={};// $FlowFixMe: Ignore Flow complaining about needing a value
		Object.defineProperty(options,'passive',{get:function(){passiveBrowserEventsSupported=true;}});window.addEventListener('test',options,options);window.removeEventListener('test',options,options);}catch(e){passiveBrowserEventsSupported=false;}}function invokeGuardedCallbackProd(name,func,context,a,b,c,d,e,f){var funcArgs=Array.prototype.slice.call(arguments,3);try{func.apply(context,funcArgs);}catch(error){this.onError(error);}}var invokeGuardedCallbackImpl=invokeGuardedCallbackProd;{// In DEV mode, we swap out invokeGuardedCallback for a special version
		// that plays more nicely with the browser's DevTools. The idea is to preserve
		// "Pause on exceptions" behavior. Because React wraps all user-provided
		// functions in invokeGuardedCallback, and the production version of
		// invokeGuardedCallback uses a try-catch, all user exceptions are treated
		// like caught exceptions, and the DevTools won't pause unless the developer
		// takes the extra step of enabling pause on caught exceptions. This is
		// unintuitive, though, because even though React has caught the error, from
		// the developer's perspective, the error is uncaught.
		//
		// To preserve the expected "Pause on exceptions" behavior, we don't use a
		// try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
		// DOM node, and call the user-provided callback from inside an event handler
		// for that fake event. If the callback throws, the error is "captured" using
		// a global event handler. But because the error happens in a different
		// event loop context, it does not interrupt the normal program flow.
		// Effectively, this gives us try-catch behavior without actually using
		// try-catch. Neat!
		// Check that the browser supports the APIs we need to implement our special
		// DEV version of invokeGuardedCallback
		if(typeof window!=='undefined'&&typeof window.dispatchEvent==='function'&&typeof document!=='undefined'&&typeof document.createEvent==='function'){var fakeNode=document.createElement('react');invokeGuardedCallbackImpl=function invokeGuardedCallbackDev(name,func,context,a,b,c,d,e,f){// If document doesn't exist we know for sure we will crash in this method
		// when we call document.createEvent(). However this can cause confusing
		// errors: https://github.com/facebook/create-react-app/issues/3482
		// So we preemptively throw with a better message instead.
		if(typeof document==='undefined'||document===null){throw new Error('The `document` global was defined when React was initialized, but is not '+'defined anymore. This can happen in a test environment if a component '+'schedules an update from an asynchronous callback, but the test has already '+'finished running. To solve this, you can either unmount the component at '+'the end of your test (and ensure that any asynchronous operations get '+'canceled in `componentWillUnmount`), or you can change the test itself '+'to be asynchronous.');}var evt=document.createEvent('Event');var didCall=false;// Keeps track of whether the user-provided callback threw an error. We
		// set this to true at the beginning, then set it to false right after
		// calling the function. If the function errors, `didError` will never be
		// set to false. This strategy works even if the browser is flaky and
		// fails to call our global error handler, because it doesn't rely on
		// the error event at all.
		var didError=true;// Keeps track of the value of window.event so that we can reset it
		// during the callback to let user code access window.event in the
		// browsers that support it.
		var windowEvent=window.event;// Keeps track of the descriptor of window.event to restore it after event
		// dispatching: https://github.com/facebook/react/issues/13688
		var windowEventDescriptor=Object.getOwnPropertyDescriptor(window,'event');function restoreAfterDispatch(){// We immediately remove the callback from event listeners so that
		// nested `invokeGuardedCallback` calls do not clash. Otherwise, a
		// nested call would trigger the fake event handlers of any call higher
		// in the stack.
		fakeNode.removeEventListener(evtType,callCallback,false);// We check for window.hasOwnProperty('event') to prevent the
		// window.event assignment in both IE <= 10 as they throw an error
		// "Member not found" in strict mode, and in Firefox which does not
		// support window.event.
		if(typeof window.event!=='undefined'&&window.hasOwnProperty('event')){window.event=windowEvent;}}// Create an event handler for our fake event. We will synchronously
		// dispatch our fake event using `dispatchEvent`. Inside the handler, we
		// call the user-provided callback.
		var funcArgs=Array.prototype.slice.call(arguments,3);function callCallback(){didCall=true;restoreAfterDispatch();func.apply(context,funcArgs);didError=false;}// Create a global error event handler. We use this to capture the value
		// that was thrown. It's possible that this error handler will fire more
		// than once; for example, if non-React code also calls `dispatchEvent`
		// and a handler for that event throws. We should be resilient to most of
		// those cases. Even if our error event handler fires more than once, the
		// last error event is always used. If the callback actually does error,
		// we know that the last error event is the correct one, because it's not
		// possible for anything else to have happened in between our callback
		// erroring and the code that follows the `dispatchEvent` call below. If
		// the callback doesn't error, but the error event was fired, we know to
		// ignore it because `didError` will be false, as described above.
		var error;// Use this to track whether the error event is ever called.
		var didSetError=false;var isCrossOriginError=false;function handleWindowError(event){error=event.error;didSetError=true;if(error===null&&event.colno===0&&event.lineno===0){isCrossOriginError=true;}if(event.defaultPrevented){// Some other error handler has prevented default.
		// Browsers silence the error report if this happens.
		// We'll remember this to later decide whether to log it or not.
		if(error!=null&&typeof error==='object'){try{error._suppressLogging=true;}catch(inner){// Ignore.
		}}}}// Create a fake event type.
		var evtType="react-"+(name?name:'invokeguardedcallback');// Attach our event handlers
		window.addEventListener('error',handleWindowError);fakeNode.addEventListener(evtType,callCallback,false);// Synchronously dispatch our fake event. If the user-provided function
		// errors, it will trigger our global error handler.
		evt.initEvent(evtType,false,false);fakeNode.dispatchEvent(evt);if(windowEventDescriptor){Object.defineProperty(window,'event',windowEventDescriptor);}if(didCall&&didError){if(!didSetError){// The callback errored, but the error event never fired.
		// eslint-disable-next-line react-internal/prod-error-codes
		error=new Error('An error was thrown inside one of your components, but React '+"doesn't know what it was. This is likely due to browser "+'flakiness. React does its best to preserve the "Pause on '+'exceptions" behavior of the DevTools, which requires some '+"DEV-mode only tricks. It's possible that these don't work in "+'your browser. Try triggering the error in production mode, '+'or switching to a modern browser. If you suspect that this is '+'actually an issue with React, please file an issue.');}else if(isCrossOriginError){// eslint-disable-next-line react-internal/prod-error-codes
		error=new Error("A cross-origin error was thrown. React doesn't have access to "+'the actual error object in development. '+'See https://reactjs.org/link/crossorigin-error for more information.');}this.onError(error);}// Remove our event listeners
		window.removeEventListener('error',handleWindowError);if(!didCall){// Something went really wrong, and our event was not dispatched.
		// https://github.com/facebook/react/issues/16734
		// https://github.com/facebook/react/issues/16585
		// Fall back to the production implementation.
		restoreAfterDispatch();return invokeGuardedCallbackProd.apply(this,arguments);}};}}var invokeGuardedCallbackImpl$1=invokeGuardedCallbackImpl;var hasError=false;var caughtError=null;// Used by event system to capture/rethrow the first error.
		var hasRethrowError=false;var rethrowError=null;var reporter={onError:function(error){hasError=true;caughtError=error;}};/**
		 * Call a function while guarding against errors that happens within it.
		 * Returns an error if it throws, otherwise null.
		 *
		 * In production, this is implemented using a try-catch. The reason we don't
		 * use a try-catch directly is so that we can swap out a different
		 * implementation in DEV mode.
		 *
		 * @param {String} name of the guard to use for logging or debugging
		 * @param {Function} func The function to invoke
		 * @param {*} context The context to use when calling the function
		 * @param {...*} args Arguments for function
		 */function invokeGuardedCallback(name,func,context,a,b,c,d,e,f){hasError=false;caughtError=null;invokeGuardedCallbackImpl$1.apply(reporter,arguments);}/**
		 * Same as invokeGuardedCallback, but instead of returning an error, it stores
		 * it in a global so it can be rethrown by `rethrowCaughtError` later.
		 * TODO: See if caughtError and rethrowError can be unified.
		 *
		 * @param {String} name of the guard to use for logging or debugging
		 * @param {Function} func The function to invoke
		 * @param {*} context The context to use when calling the function
		 * @param {...*} args Arguments for function
		 */function invokeGuardedCallbackAndCatchFirstError(name,func,context,a,b,c,d,e,f){invokeGuardedCallback.apply(this,arguments);if(hasError){var error=clearCaughtError();if(!hasRethrowError){hasRethrowError=true;rethrowError=error;}}}/**
		 * During execution of guarded functions we will capture the first error which
		 * we will rethrow to be handled by the top level error handler.
		 */function rethrowCaughtError(){if(hasRethrowError){var error=rethrowError;hasRethrowError=false;rethrowError=null;throw error;}}function hasCaughtError(){return hasError;}function clearCaughtError(){if(hasError){var error=caughtError;hasError=false;caughtError=null;return error;}else {throw new Error('clearCaughtError was called but no error was captured. This error '+'is likely caused by a bug in React. Please file an issue.');}}/**
		 * `ReactInstanceMap` maintains a mapping from a public facing stateful
		 * instance (key) and the internal representation (value). This allows public
		 * methods to accept the user facing instance as an argument and map them back
		 * to internal methods.
		 *
		 * Note that this module is currently shared and assumed to be stateless.
		 * If this becomes an actual Map, that will break.
		 */function get(key){return key._reactInternals;}function has(key){return key._reactInternals!==undefined;}function set(key,value){key._reactInternals=value;}// Don't change these two values. They're used by React Dev Tools.
		var NoFlags=/*                      */0;var PerformedWork=/*                */1;// You can change the rest (and add more).
		var Placement=/*                    */2;var Update=/*                       */4;var ChildDeletion=/*                */16;var ContentReset=/*                 */32;var Callback=/*                     */64;var DidCapture=/*                   */128;var ForceClientRender=/*            */256;var Ref=/*                          */512;var Snapshot=/*                     */1024;var Passive=/*                      */2048;var Hydrating=/*                    */4096;var Visibility=/*                   */8192;var StoreConsistency=/*             */16384;var LifecycleEffectMask=Passive|Update|Callback|Ref|Snapshot|StoreConsistency;// Union of all commit flags (flags with the lifetime of a particular commit)
		var HostEffectMask=/*               */32767;// These are not really side effects, but we still reuse this field.
		var Incomplete=/*                   */32768;var ShouldCapture=/*                */65536;var ForceUpdateForLegacySuspense=/* */131072;var Forked=/*                       */1048576;// Static tags describe aspects of a fiber that are not specific to a render,
		// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
		// This enables us to defer more work in the unmount case,
		// since we can defer traversing the tree during layout to look for Passive effects,
		// and instead rely on the static flag as a signal that there may be cleanup work.
		var RefStatic=/*                    */2097152;var LayoutStatic=/*                 */4194304;var PassiveStatic=/*                */8388608;// These flags allow us to traverse to fibers that have effects on mount
		// without traversing the entire tree after every commit for
		// double invoking
		var MountLayoutDev=/*               */16777216;var MountPassiveDev=/*              */33554432;// Groups of flags that are used in the commit phase to skip over trees that
		// don't contain effects, by checking subtreeFlags.
		var BeforeMutationMask=// TODO: Remove Update flag from before mutation phase by re-landing Visibility
		// flag logic (see #20043)
		Update|Snapshot|0;var MutationMask=Placement|Update|ChildDeletion|ContentReset|Ref|Hydrating|Visibility;var LayoutMask=Update|Callback|Ref|Visibility;// TODO: Split into PassiveMountMask and PassiveUnmountMask
		var PassiveMask=Passive|ChildDeletion;// Union of tags that don't get reset on clones.
		// This allows certain concepts to persist without recalculating them,
		// e.g. whether a subtree contains passive effects or portals.
		var StaticMask=LayoutStatic|PassiveStatic|RefStatic;var ReactCurrentOwner=ReactSharedInternals.ReactCurrentOwner;function getNearestMountedFiber(fiber){var node=fiber;var nearestMounted=fiber;if(!fiber.alternate){// If there is no alternate, this might be a new tree that isn't inserted
		// yet. If it is, then it will have a pending insertion effect on it.
		var nextNode=node;do{node=nextNode;if((node.flags&(Placement|Hydrating))!==NoFlags){// This is an insertion or in-progress hydration. The nearest possible
		// mounted fiber is the parent but we need to continue to figure out
		// if that one is still mounted.
		nearestMounted=node.return;}nextNode=node.return;}while(nextNode);}else {while(node.return){node=node.return;}}if(node.tag===HostRoot){// TODO: Check if this was a nested HostRoot when used with
		// renderContainerIntoSubtree.
		return nearestMounted;}// If we didn't hit the root, that means that we're in an disconnected tree
		// that has been unmounted.
		return null;}function getSuspenseInstanceFromFiber(fiber){if(fiber.tag===SuspenseComponent){var suspenseState=fiber.memoizedState;if(suspenseState===null){var current=fiber.alternate;if(current!==null){suspenseState=current.memoizedState;}}if(suspenseState!==null){return suspenseState.dehydrated;}}return null;}function getContainerFromFiber(fiber){return fiber.tag===HostRoot?fiber.stateNode.containerInfo:null;}function isFiberMounted(fiber){return getNearestMountedFiber(fiber)===fiber;}function isMounted(component){{var owner=ReactCurrentOwner.current;if(owner!==null&&owner.tag===ClassComponent){var ownerFiber=owner;var instance=ownerFiber.stateNode;if(!instance._warnedAboutRefsInRender){error('%s is accessing isMounted inside its render() function. '+'render() should be a pure function of props and state. It should '+'never access something that requires stale data from the previous '+'render, such as refs. Move this logic to componentDidMount and '+'componentDidUpdate instead.',getComponentNameFromFiber(ownerFiber)||'A component');}instance._warnedAboutRefsInRender=true;}}var fiber=get(component);if(!fiber){return false;}return getNearestMountedFiber(fiber)===fiber;}function assertIsMounted(fiber){if(getNearestMountedFiber(fiber)!==fiber){throw new Error('Unable to find node on an unmounted component.');}}function findCurrentFiberUsingSlowPath(fiber){var alternate=fiber.alternate;if(!alternate){// If there is no alternate, then we only need to check if it is mounted.
		var nearestMounted=getNearestMountedFiber(fiber);if(nearestMounted===null){throw new Error('Unable to find node on an unmounted component.');}if(nearestMounted!==fiber){return null;}return fiber;}// If we have two possible branches, we'll walk backwards up to the root
		// to see what path the root points to. On the way we may hit one of the
		// special cases and we'll deal with them.
		var a=fiber;var b=alternate;while(true){var parentA=a.return;if(parentA===null){// We're at the root.
		break;}var parentB=parentA.alternate;if(parentB===null){// There is no alternate. This is an unusual case. Currently, it only
		// happens when a Suspense component is hidden. An extra fragment fiber
		// is inserted in between the Suspense fiber and its children. Skip
		// over this extra fragment fiber and proceed to the next parent.
		var nextParent=parentA.return;if(nextParent!==null){a=b=nextParent;continue;}// If there's no parent, we're at the root.
		break;}// If both copies of the parent fiber point to the same child, we can
		// assume that the child is current. This happens when we bailout on low
		// priority: the bailed out fiber's child reuses the current child.
		if(parentA.child===parentB.child){var child=parentA.child;while(child){if(child===a){// We've determined that A is the current branch.
		assertIsMounted(parentA);return fiber;}if(child===b){// We've determined that B is the current branch.
		assertIsMounted(parentA);return alternate;}child=child.sibling;}// We should never have an alternate for any mounting node. So the only
		// way this could possibly happen is if this was unmounted, if at all.
		throw new Error('Unable to find node on an unmounted component.');}if(a.return!==b.return){// The return pointer of A and the return pointer of B point to different
		// fibers. We assume that return pointers never criss-cross, so A must
		// belong to the child set of A.return, and B must belong to the child
		// set of B.return.
		a=parentA;b=parentB;}else {// The return pointers point to the same fiber. We'll have to use the
		// default, slow path: scan the child sets of each parent alternate to see
		// which child belongs to which set.
		//
		// Search parent A's child set
		var didFindChild=false;var _child=parentA.child;while(_child){if(_child===a){didFindChild=true;a=parentA;b=parentB;break;}if(_child===b){didFindChild=true;b=parentA;a=parentB;break;}_child=_child.sibling;}if(!didFindChild){// Search parent B's child set
		_child=parentB.child;while(_child){if(_child===a){didFindChild=true;a=parentB;b=parentA;break;}if(_child===b){didFindChild=true;b=parentB;a=parentA;break;}_child=_child.sibling;}if(!didFindChild){throw new Error('Child was not found in either parent set. This indicates a bug '+'in React related to the return pointer. Please file an issue.');}}}if(a.alternate!==b){throw new Error("Return fibers should always be each others' alternates. "+'This error is likely caused by a bug in React. Please file an issue.');}}// If the root is not a host container, we're in a disconnected tree. I.e.
		// unmounted.
		if(a.tag!==HostRoot){throw new Error('Unable to find node on an unmounted component.');}if(a.stateNode.current===a){// We've determined that A is the current branch.
		return fiber;}// Otherwise B has to be current branch.
		return alternate;}function findCurrentHostFiber(parent){var currentParent=findCurrentFiberUsingSlowPath(parent);return currentParent!==null?findCurrentHostFiberImpl(currentParent):null;}function findCurrentHostFiberImpl(node){// Next we'll drill down this component to find the first HostComponent/Text.
		if(node.tag===HostComponent||node.tag===HostText){return node;}var child=node.child;while(child!==null){var match=findCurrentHostFiberImpl(child);if(match!==null){return match;}child=child.sibling;}return null;}function findCurrentHostFiberWithNoPortals(parent){var currentParent=findCurrentFiberUsingSlowPath(parent);return currentParent!==null?findCurrentHostFiberWithNoPortalsImpl(currentParent):null;}function findCurrentHostFiberWithNoPortalsImpl(node){// Next we'll drill down this component to find the first HostComponent/Text.
		if(node.tag===HostComponent||node.tag===HostText){return node;}var child=node.child;while(child!==null){if(child.tag!==HostPortal){var match=findCurrentHostFiberWithNoPortalsImpl(child);if(match!==null){return match;}}child=child.sibling;}return null;}// This module only exists as an ESM wrapper around the external CommonJS
		var scheduleCallback=Scheduler.unstable_scheduleCallback;var cancelCallback=Scheduler.unstable_cancelCallback;var shouldYield=Scheduler.unstable_shouldYield;var requestPaint=Scheduler.unstable_requestPaint;var now=Scheduler.unstable_now;var getCurrentPriorityLevel=Scheduler.unstable_getCurrentPriorityLevel;var ImmediatePriority=Scheduler.unstable_ImmediatePriority;var UserBlockingPriority=Scheduler.unstable_UserBlockingPriority;var NormalPriority=Scheduler.unstable_NormalPriority;var LowPriority=Scheduler.unstable_LowPriority;var IdlePriority=Scheduler.unstable_IdlePriority;// this doesn't actually exist on the scheduler, but it *does*
		// on scheduler/unstable_mock, which we'll need for internal testing
		var unstable_yieldValue=Scheduler.unstable_yieldValue;var unstable_setDisableYieldValue=Scheduler.unstable_setDisableYieldValue;var rendererID=null;var injectedHook=null;var injectedProfilingHooks=null;var hasLoggedError=false;var isDevToolsPresent=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined';function injectInternals(internals){if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__==='undefined'){// No DevTools
		return false;}var hook=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(hook.isDisabled){// This isn't a real property on the hook, but it can be set to opt out
		// of DevTools integration and associated warnings and logs.
		// https://github.com/facebook/react/issues/3877
		return true;}if(!hook.supportsFiber){{error('The installed version of React DevTools is too old and will not work '+'with the current version of React. Please update React DevTools. '+'https://reactjs.org/link/react-devtools');}// DevTools exists, even though it doesn't support Fiber.
		return true;}try{if(enableSchedulingProfiler){// Conditionally inject these hooks only if Timeline profiler is supported by this build.
		// This gives DevTools a way to feature detect that isn't tied to version number
		// (since profiling and timeline are controlled by different feature flags).
		internals=assign({},internals,{getLaneLabelMap:getLaneLabelMap,injectProfilingHooks:injectProfilingHooks});}rendererID=hook.inject(internals);// We have successfully injected, so now it is safe to set up hooks.
		injectedHook=hook;}catch(err){// Catch all errors because it is unsafe to throw during initialization.
		{error('React instrumentation encountered an error: %s.',err);}}if(hook.checkDCE){// This is the real DevTools.
		return true;}else {// This is likely a hook installed by Fast Refresh runtime.
		return false;}}function onScheduleRoot(root,children){{if(injectedHook&&typeof injectedHook.onScheduleFiberRoot==='function'){try{injectedHook.onScheduleFiberRoot(rendererID,root,children);}catch(err){if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onCommitRoot(root,eventPriority){if(injectedHook&&typeof injectedHook.onCommitFiberRoot==='function'){try{var didError=(root.current.flags&DidCapture)===DidCapture;if(enableProfilerTimer){var schedulerPriority;switch(eventPriority){case DiscreteEventPriority:schedulerPriority=ImmediatePriority;break;case ContinuousEventPriority:schedulerPriority=UserBlockingPriority;break;case DefaultEventPriority:schedulerPriority=NormalPriority;break;case IdleEventPriority:schedulerPriority=IdlePriority;break;default:schedulerPriority=NormalPriority;break;}injectedHook.onCommitFiberRoot(rendererID,root,schedulerPriority,didError);}}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onPostCommitRoot(root){if(injectedHook&&typeof injectedHook.onPostCommitFiberRoot==='function'){try{injectedHook.onPostCommitFiberRoot(rendererID,root);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onCommitUnmount(fiber){if(injectedHook&&typeof injectedHook.onCommitFiberUnmount==='function'){try{injectedHook.onCommitFiberUnmount(rendererID,fiber);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function setIsStrictModeForDevtools(newIsStrictMode){{if(typeof unstable_yieldValue==='function'){// We're in a test because Scheduler.unstable_yieldValue only exists
		// in SchedulerMock. To reduce the noise in strict mode tests,
		// suppress warnings and disable scheduler yielding during the double render
		unstable_setDisableYieldValue(newIsStrictMode);setSuppressWarning(newIsStrictMode);}if(injectedHook&&typeof injectedHook.setStrictMode==='function'){try{injectedHook.setStrictMode(rendererID,newIsStrictMode);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}}// Profiler API hooks
		function injectProfilingHooks(profilingHooks){injectedProfilingHooks=profilingHooks;}function getLaneLabelMap(){{var map=new Map();var lane=1;for(var index=0;index<TotalLanes;index++){var label=getLabelForLane(lane);map.set(lane,label);lane*=2;}return map;}}function markCommitStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markCommitStarted==='function'){injectedProfilingHooks.markCommitStarted(lanes);}}}function markCommitStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markCommitStopped==='function'){injectedProfilingHooks.markCommitStopped();}}}function markComponentRenderStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentRenderStarted==='function'){injectedProfilingHooks.markComponentRenderStarted(fiber);}}}function markComponentRenderStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentRenderStopped==='function'){injectedProfilingHooks.markComponentRenderStopped();}}}function markComponentPassiveEffectMountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted==='function'){injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);}}}function markComponentPassiveEffectMountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped==='function'){injectedProfilingHooks.markComponentPassiveEffectMountStopped();}}}function markComponentPassiveEffectUnmountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted==='function'){injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);}}}function markComponentPassiveEffectUnmountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped==='function'){injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();}}}function markComponentLayoutEffectMountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted==='function'){injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);}}}function markComponentLayoutEffectMountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped==='function'){injectedProfilingHooks.markComponentLayoutEffectMountStopped();}}}function markComponentLayoutEffectUnmountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted==='function'){injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);}}}function markComponentLayoutEffectUnmountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped==='function'){injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();}}}function markComponentErrored(fiber,thrownValue,lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentErrored==='function'){injectedProfilingHooks.markComponentErrored(fiber,thrownValue,lanes);}}}function markComponentSuspended(fiber,wakeable,lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentSuspended==='function'){injectedProfilingHooks.markComponentSuspended(fiber,wakeable,lanes);}}}function markLayoutEffectsStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markLayoutEffectsStarted==='function'){injectedProfilingHooks.markLayoutEffectsStarted(lanes);}}}function markLayoutEffectsStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markLayoutEffectsStopped==='function'){injectedProfilingHooks.markLayoutEffectsStopped();}}}function markPassiveEffectsStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markPassiveEffectsStarted==='function'){injectedProfilingHooks.markPassiveEffectsStarted(lanes);}}}function markPassiveEffectsStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markPassiveEffectsStopped==='function'){injectedProfilingHooks.markPassiveEffectsStopped();}}}function markRenderStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderStarted==='function'){injectedProfilingHooks.markRenderStarted(lanes);}}}function markRenderYielded(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderYielded==='function'){injectedProfilingHooks.markRenderYielded();}}}function markRenderStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderStopped==='function'){injectedProfilingHooks.markRenderStopped();}}}function markRenderScheduled(lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderScheduled==='function'){injectedProfilingHooks.markRenderScheduled(lane);}}}function markForceUpdateScheduled(fiber,lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markForceUpdateScheduled==='function'){injectedProfilingHooks.markForceUpdateScheduled(fiber,lane);}}}function markStateUpdateScheduled(fiber,lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markStateUpdateScheduled==='function'){injectedProfilingHooks.markStateUpdateScheduled(fiber,lane);}}}var NoMode=/*                         */0;// TODO: Remove ConcurrentMode by reading from the root tag instead
		var ConcurrentMode=/*                 */1;var ProfileMode=/*                    */2;var StrictLegacyMode=/*               */8;var StrictEffectsMode=/*              */16;// TODO: This is pretty well supported by browsers. Maybe we can drop it.
		var clz32=Math.clz32?Math.clz32:clz32Fallback;// Count leading zeros.
		// Based on:
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
		var log=Math.log;var LN2=Math.LN2;function clz32Fallback(x){var asUint=x>>>0;if(asUint===0){return 32;}return 31-(log(asUint)/LN2|0)|0;}// If those values are changed that package should be rebuilt and redeployed.
		var TotalLanes=31;var NoLanes=/*                        */0;var NoLane=/*                          */0;var SyncLane=/*                        */1;var InputContinuousHydrationLane=/*    */2;var InputContinuousLane=/*             */4;var DefaultHydrationLane=/*            */8;var DefaultLane=/*                     */16;var TransitionHydrationLane=/*                */32;var TransitionLanes=/*                       */4194240;var TransitionLane1=/*                        */64;var TransitionLane2=/*                        */128;var TransitionLane3=/*                        */256;var TransitionLane4=/*                        */512;var TransitionLane5=/*                        */1024;var TransitionLane6=/*                        */2048;var TransitionLane7=/*                        */4096;var TransitionLane8=/*                        */8192;var TransitionLane9=/*                        */16384;var TransitionLane10=/*                       */32768;var TransitionLane11=/*                       */65536;var TransitionLane12=/*                       */131072;var TransitionLane13=/*                       */262144;var TransitionLane14=/*                       */524288;var TransitionLane15=/*                       */1048576;var TransitionLane16=/*                       */2097152;var RetryLanes=/*                            */130023424;var RetryLane1=/*                             */4194304;var RetryLane2=/*                             */8388608;var RetryLane3=/*                             */16777216;var RetryLane4=/*                             */33554432;var RetryLane5=/*                             */67108864;var SomeRetryLane=RetryLane1;var SelectiveHydrationLane=/*          */134217728;var NonIdleLanes=/*                          */268435455;var IdleHydrationLane=/*               */268435456;var IdleLane=/*                        */536870912;var OffscreenLane=/*                   */1073741824;// This function is used for the experimental timeline (react-devtools-timeline)
		// It should be kept in sync with the Lanes values above.
		function getLabelForLane(lane){{if(lane&SyncLane){return 'Sync';}if(lane&InputContinuousHydrationLane){return 'InputContinuousHydration';}if(lane&InputContinuousLane){return 'InputContinuous';}if(lane&DefaultHydrationLane){return 'DefaultHydration';}if(lane&DefaultLane){return 'Default';}if(lane&TransitionHydrationLane){return 'TransitionHydration';}if(lane&TransitionLanes){return 'Transition';}if(lane&RetryLanes){return 'Retry';}if(lane&SelectiveHydrationLane){return 'SelectiveHydration';}if(lane&IdleHydrationLane){return 'IdleHydration';}if(lane&IdleLane){return 'Idle';}if(lane&OffscreenLane){return 'Offscreen';}}}var NoTimestamp=-1;var nextTransitionLane=TransitionLane1;var nextRetryLane=RetryLane1;function getHighestPriorityLanes(lanes){switch(getHighestPriorityLane(lanes)){case SyncLane:return SyncLane;case InputContinuousHydrationLane:return InputContinuousHydrationLane;case InputContinuousLane:return InputContinuousLane;case DefaultHydrationLane:return DefaultHydrationLane;case DefaultLane:return DefaultLane;case TransitionHydrationLane:return TransitionHydrationLane;case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:return lanes&TransitionLanes;case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:return lanes&RetryLanes;case SelectiveHydrationLane:return SelectiveHydrationLane;case IdleHydrationLane:return IdleHydrationLane;case IdleLane:return IdleLane;case OffscreenLane:return OffscreenLane;default:{error('Should have found matching lanes. This is a bug in React.');}// This shouldn't be reachable, but as a fallback, return the entire bitmask.
		return lanes;}}function getNextLanes(root,wipLanes){// Early bailout if there's no pending work left.
		var pendingLanes=root.pendingLanes;if(pendingLanes===NoLanes){return NoLanes;}var nextLanes=NoLanes;var suspendedLanes=root.suspendedLanes;var pingedLanes=root.pingedLanes;// Do not work on any idle work until all the non-idle work has finished,
		// even if the work is suspended.
		var nonIdlePendingLanes=pendingLanes&NonIdleLanes;if(nonIdlePendingLanes!==NoLanes){var nonIdleUnblockedLanes=nonIdlePendingLanes&~suspendedLanes;if(nonIdleUnblockedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(nonIdleUnblockedLanes);}else {var nonIdlePingedLanes=nonIdlePendingLanes&pingedLanes;if(nonIdlePingedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(nonIdlePingedLanes);}}}else {// The only remaining work is Idle.
		var unblockedLanes=pendingLanes&~suspendedLanes;if(unblockedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(unblockedLanes);}else {if(pingedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(pingedLanes);}}}if(nextLanes===NoLanes){// This should only be reachable if we're suspended
		// TODO: Consider warning in this path if a fallback timer is not scheduled.
		return NoLanes;}// If we're already in the middle of a render, switching lanes will interrupt
		// it and we'll lose our progress. We should only do this if the new lanes are
		// higher priority.
		if(wipLanes!==NoLanes&&wipLanes!==nextLanes&&// If we already suspended with a delay, then interrupting is fine. Don't
		// bother waiting until the root is complete.
		(wipLanes&suspendedLanes)===NoLanes){var nextLane=getHighestPriorityLane(nextLanes);var wipLane=getHighestPriorityLane(wipLanes);if(// Tests whether the next lane is equal or lower priority than the wip
		// one. This works because the bits decrease in priority as you go left.
		nextLane>=wipLane||// Default priority updates should not interrupt transition updates. The
		// only difference between default updates and transition updates is that
		// default updates do not support refresh transitions.
		nextLane===DefaultLane&&(wipLane&TransitionLanes)!==NoLanes){// Keep working on the existing in-progress tree. Do not interrupt.
		return wipLanes;}}if((nextLanes&InputContinuousLane)!==NoLanes){// When updates are sync by default, we entangle continuous priority updates
		// and default updates, so they render in the same batch. The only reason
		// they use separate lanes is because continuous updates should interrupt
		// transitions, but default updates should not.
		nextLanes|=pendingLanes&DefaultLane;}// Check for entangled lanes and add them to the batch.
		//
		// A lane is said to be entangled with another when it's not allowed to render
		// in a batch that does not also include the other lane. Typically we do this
		// when multiple updates have the same source, and we only want to respond to
		// the most recent event from that source.
		//
		// Note that we apply entanglements *after* checking for partial work above.
		// This means that if a lane is entangled during an interleaved event while
		// it's already rendering, we won't interrupt it. This is intentional, since
		// entanglement is usually "best effort": we'll try our best to render the
		// lanes in the same batch, but it's not worth throwing out partially
		// completed work in order to do it.
		// TODO: Reconsider this. The counter-argument is that the partial work
		// represents an intermediate state, which we don't want to show to the user.
		// And by spending extra time finishing it, we're increasing the amount of
		// time it takes to show the final state, which is what they are actually
		// waiting for.
		//
		// For those exceptions where entanglement is semantically important, like
		// useMutableSource, we should ensure that there is no partial work at the
		// time we apply the entanglement.
		var entangledLanes=root.entangledLanes;if(entangledLanes!==NoLanes){var entanglements=root.entanglements;var lanes=nextLanes&entangledLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;nextLanes|=entanglements[index];lanes&=~lane;}}return nextLanes;}function getMostRecentEventTime(root,lanes){var eventTimes=root.eventTimes;var mostRecentEventTime=NoTimestamp;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;var eventTime=eventTimes[index];if(eventTime>mostRecentEventTime){mostRecentEventTime=eventTime;}lanes&=~lane;}return mostRecentEventTime;}function computeExpirationTime(lane,currentTime){switch(lane){case SyncLane:case InputContinuousHydrationLane:case InputContinuousLane:// User interactions should expire slightly more quickly.
		//
		// NOTE: This is set to the corresponding constant as in Scheduler.js.
		// When we made it larger, a product metric in www regressed, suggesting
		// there's a user interaction that's being starved by a series of
		// synchronous updates. If that theory is correct, the proper solution is
		// to fix the starvation. However, this scenario supports the idea that
		// expiration times are an important safeguard when starvation
		// does happen.
		return currentTime+250;case DefaultHydrationLane:case DefaultLane:case TransitionHydrationLane:case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:return currentTime+5000;case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:// TODO: Retries should be allowed to expire if they are CPU bound for
		// too long, but when I made this change it caused a spike in browser
		// crashes. There must be some other underlying bug; not super urgent but
		// ideally should figure out why and fix it. Unfortunately we don't have
		// a repro for the crashes, only detected via production metrics.
		return NoTimestamp;case SelectiveHydrationLane:case IdleHydrationLane:case IdleLane:case OffscreenLane:// Anything idle priority or lower should never expire.
		return NoTimestamp;default:{error('Should have found matching lanes. This is a bug in React.');}return NoTimestamp;}}function markStarvedLanesAsExpired(root,currentTime){// TODO: This gets called every time we yield. We can optimize by storing
		// the earliest expiration time on the root. Then use that to quickly bail out
		// of this function.
		var pendingLanes=root.pendingLanes;var suspendedLanes=root.suspendedLanes;var pingedLanes=root.pingedLanes;var expirationTimes=root.expirationTimes;// Iterate through the pending lanes and check if we've reached their
		// expiration time. If so, we'll assume the update is being starved and mark
		// it as expired to force it to finish.
		var lanes=pendingLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;var expirationTime=expirationTimes[index];if(expirationTime===NoTimestamp){// Found a pending lane with no expiration time. If it's not suspended, or
		// if it's pinged, assume it's CPU-bound. Compute a new expiration time
		// using the current time.
		if((lane&suspendedLanes)===NoLanes||(lane&pingedLanes)!==NoLanes){// Assumes timestamps are monotonically increasing.
		expirationTimes[index]=computeExpirationTime(lane,currentTime);}}else if(expirationTime<=currentTime){// This lane expired
		root.expiredLanes|=lane;}lanes&=~lane;}}// This returns the highest priority pending lanes regardless of whether they
		// are suspended.
		function getHighestPriorityPendingLanes(root){return getHighestPriorityLanes(root.pendingLanes);}function getLanesToRetrySynchronouslyOnError(root){var everythingButOffscreen=root.pendingLanes&~OffscreenLane;if(everythingButOffscreen!==NoLanes){return everythingButOffscreen;}if(everythingButOffscreen&OffscreenLane){return OffscreenLane;}return NoLanes;}function includesSyncLane(lanes){return (lanes&SyncLane)!==NoLanes;}function includesNonIdleWork(lanes){return (lanes&NonIdleLanes)!==NoLanes;}function includesOnlyRetries(lanes){return (lanes&RetryLanes)===lanes;}function includesOnlyNonUrgentLanes(lanes){var UrgentLanes=SyncLane|InputContinuousLane|DefaultLane;return (lanes&UrgentLanes)===NoLanes;}function includesOnlyTransitions(lanes){return (lanes&TransitionLanes)===lanes;}function includesBlockingLane(root,lanes){var SyncDefaultLanes=InputContinuousHydrationLane|InputContinuousLane|DefaultHydrationLane|DefaultLane;return (lanes&SyncDefaultLanes)!==NoLanes;}function includesExpiredLane(root,lanes){// This is a separate check from includesBlockingLane because a lane can
		// expire after a render has already started.
		return (lanes&root.expiredLanes)!==NoLanes;}function isTransitionLane(lane){return (lane&TransitionLanes)!==NoLanes;}function claimNextTransitionLane(){// Cycle through the lanes, assigning each new transition to the next lane.
		// In most cases, this means every transition gets its own lane, until we
		// run out of lanes and cycle back to the beginning.
		var lane=nextTransitionLane;nextTransitionLane<<=1;if((nextTransitionLane&TransitionLanes)===NoLanes){nextTransitionLane=TransitionLane1;}return lane;}function claimNextRetryLane(){var lane=nextRetryLane;nextRetryLane<<=1;if((nextRetryLane&RetryLanes)===NoLanes){nextRetryLane=RetryLane1;}return lane;}function getHighestPriorityLane(lanes){return lanes&-lanes;}function pickArbitraryLane(lanes){// This wrapper function gets inlined. Only exists so to communicate that it
		// doesn't matter which bit is selected; you can pick any bit without
		// affecting the algorithms where its used. Here I'm using
		// getHighestPriorityLane because it requires the fewest operations.
		return getHighestPriorityLane(lanes);}function pickArbitraryLaneIndex(lanes){return 31-clz32(lanes);}function laneToIndex(lane){return pickArbitraryLaneIndex(lane);}function includesSomeLane(a,b){return (a&b)!==NoLanes;}function isSubsetOfLanes(set,subset){return (set&subset)===subset;}function mergeLanes(a,b){return a|b;}function removeLanes(set,subset){return set&~subset;}function intersectLanes(a,b){return a&b;}// Seems redundant, but it changes the type from a single lane (used for
		// updates) to a group of lanes (used for flushing work).
		function laneToLanes(lane){return lane;}function higherPriorityLane(a,b){// This works because the bit ranges decrease in priority as you go left.
		return a!==NoLane&&a<b?a:b;}function createLaneMap(initial){// Intentionally pushing one by one.
		// https://v8.dev/blog/elements-kinds#avoid-creating-holes
		var laneMap=[];for(var i=0;i<TotalLanes;i++){laneMap.push(initial);}return laneMap;}function markRootUpdated(root,updateLane,eventTime){root.pendingLanes|=updateLane;// If there are any suspended transitions, it's possible this new update
		// could unblock them. Clear the suspended lanes so that we can try rendering
		// them again.
		//
		// TODO: We really only need to unsuspend only lanes that are in the
		// `subtreeLanes` of the updated fiber, or the update lanes of the return
		// path. This would exclude suspended updates in an unrelated sibling tree,
		// since there's no way for this update to unblock it.
		//
		// We don't do this if the incoming update is idle, because we never process
		// idle updates until after all the regular updates have finished; there's no
		// way it could unblock a transition.
		if(updateLane!==IdleLane){root.suspendedLanes=NoLanes;root.pingedLanes=NoLanes;}var eventTimes=root.eventTimes;var index=laneToIndex(updateLane);// We can always overwrite an existing timestamp because we prefer the most
		// recent event, and we assume time is monotonically increasing.
		eventTimes[index]=eventTime;}function markRootSuspended(root,suspendedLanes){root.suspendedLanes|=suspendedLanes;root.pingedLanes&=~suspendedLanes;// The suspended lanes are no longer CPU-bound. Clear their expiration times.
		var expirationTimes=root.expirationTimes;var lanes=suspendedLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;expirationTimes[index]=NoTimestamp;lanes&=~lane;}}function markRootPinged(root,pingedLanes,eventTime){root.pingedLanes|=root.suspendedLanes&pingedLanes;}function markRootFinished(root,remainingLanes){var noLongerPendingLanes=root.pendingLanes&~remainingLanes;root.pendingLanes=remainingLanes;// Let's try everything again
		root.suspendedLanes=NoLanes;root.pingedLanes=NoLanes;root.expiredLanes&=remainingLanes;root.mutableReadLanes&=remainingLanes;root.entangledLanes&=remainingLanes;var entanglements=root.entanglements;var eventTimes=root.eventTimes;var expirationTimes=root.expirationTimes;// Clear the lanes that no longer have pending work
		var lanes=noLongerPendingLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;entanglements[index]=NoLanes;eventTimes[index]=NoTimestamp;expirationTimes[index]=NoTimestamp;lanes&=~lane;}}function markRootEntangled(root,entangledLanes){// In addition to entangling each of the given lanes with each other, we also
		// have to consider _transitive_ entanglements. For each lane that is already
		// entangled with *any* of the given lanes, that lane is now transitively
		// entangled with *all* the given lanes.
		//
		// Translated: If C is entangled with A, then entangling A with B also
		// entangles C with B.
		//
		// If this is hard to grasp, it might help to intentionally break this
		// function and look at the tests that fail in ReactTransition-test.js. Try
		// commenting out one of the conditions below.
		var rootEntangledLanes=root.entangledLanes|=entangledLanes;var entanglements=root.entanglements;var lanes=rootEntangledLanes;while(lanes){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;if(// Is this one of the newly entangled lanes?
		lane&entangledLanes|// Is this lane transitively entangled with the newly entangled lanes?
		entanglements[index]&entangledLanes){entanglements[index]|=entangledLanes;}lanes&=~lane;}}function getBumpedLaneForHydration(root,renderLanes){var renderLane=getHighestPriorityLane(renderLanes);var lane;switch(renderLane){case InputContinuousLane:lane=InputContinuousHydrationLane;break;case DefaultLane:lane=DefaultHydrationLane;break;case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:lane=TransitionHydrationLane;break;case IdleLane:lane=IdleHydrationLane;break;default:// Everything else is already either a hydration lane, or shouldn't
		// be retried at a hydration lane.
		lane=NoLane;break;}// Check if the lane we chose is suspended. If so, that indicates that we
		// already attempted and failed to hydrate at that level. Also check if we're
		// already rendering that lane, which is rare but could happen.
		if((lane&(root.suspendedLanes|renderLanes))!==NoLane){// Give up trying to hydrate and fall back to client render.
		return NoLane;}return lane;}function addFiberToLanesMap(root,fiber,lanes){if(!isDevToolsPresent){return;}var pendingUpdatersLaneMap=root.pendingUpdatersLaneMap;while(lanes>0){var index=laneToIndex(lanes);var lane=1<<index;var updaters=pendingUpdatersLaneMap[index];updaters.add(fiber);lanes&=~lane;}}function movePendingFibersToMemoized(root,lanes){if(!isDevToolsPresent){return;}var pendingUpdatersLaneMap=root.pendingUpdatersLaneMap;var memoizedUpdaters=root.memoizedUpdaters;while(lanes>0){var index=laneToIndex(lanes);var lane=1<<index;var updaters=pendingUpdatersLaneMap[index];if(updaters.size>0){updaters.forEach(function(fiber){var alternate=fiber.alternate;if(alternate===null||!memoizedUpdaters.has(alternate)){memoizedUpdaters.add(fiber);}});updaters.clear();}lanes&=~lane;}}function getTransitionsForLanes(root,lanes){{return null;}}var DiscreteEventPriority=SyncLane;var ContinuousEventPriority=InputContinuousLane;var DefaultEventPriority=DefaultLane;var IdleEventPriority=IdleLane;var currentUpdatePriority=NoLane;function getCurrentUpdatePriority(){return currentUpdatePriority;}function setCurrentUpdatePriority(newPriority){currentUpdatePriority=newPriority;}function runWithPriority(priority,fn){var previousPriority=currentUpdatePriority;try{currentUpdatePriority=priority;return fn();}finally{currentUpdatePriority=previousPriority;}}function higherEventPriority(a,b){return a!==0&&a<b?a:b;}function lowerEventPriority(a,b){return a===0||a>b?a:b;}function isHigherEventPriority(a,b){return a!==0&&a<b;}function lanesToEventPriority(lanes){var lane=getHighestPriorityLane(lanes);if(!isHigherEventPriority(DiscreteEventPriority,lane)){return DiscreteEventPriority;}if(!isHigherEventPriority(ContinuousEventPriority,lane)){return ContinuousEventPriority;}if(includesNonIdleWork(lane)){return DefaultEventPriority;}return IdleEventPriority;}// This is imported by the event replaying implementation in React DOM. It's
		// in a separate file to break a circular dependency between the renderer and
		// the reconciler.
		function isRootDehydrated(root){var currentState=root.current.memoizedState;return currentState.isDehydrated;}var _attemptSynchronousHydration;function setAttemptSynchronousHydration(fn){_attemptSynchronousHydration=fn;}function attemptSynchronousHydration(fiber){_attemptSynchronousHydration(fiber);}var attemptContinuousHydration;function setAttemptContinuousHydration(fn){attemptContinuousHydration=fn;}var attemptHydrationAtCurrentPriority;function setAttemptHydrationAtCurrentPriority(fn){attemptHydrationAtCurrentPriority=fn;}var getCurrentUpdatePriority$1;function setGetCurrentUpdatePriority(fn){getCurrentUpdatePriority$1=fn;}var attemptHydrationAtPriority;function setAttemptHydrationAtPriority(fn){attemptHydrationAtPriority=fn;}// TODO: Upgrade this definition once we're on a newer version of Flow that
		// has this definition built-in.
		var hasScheduledReplayAttempt=false;// The queue of discrete events to be replayed.
		var queuedDiscreteEvents=[];// Indicates if any continuous event targets are non-null for early bailout.
		// if the last target was dehydrated.
		var queuedFocus=null;var queuedDrag=null;var queuedMouse=null;// For pointer events there can be one latest event per pointerId.
		var queuedPointers=new Map();var queuedPointerCaptures=new Map();// We could consider replaying selectionchange and touchmoves too.
		var queuedExplicitHydrationTargets=[];var discreteReplayableEvents=['mousedown','mouseup','touchcancel','touchend','touchstart','auxclick','dblclick','pointercancel','pointerdown','pointerup','dragend','dragstart','drop','compositionend','compositionstart','keydown','keypress','keyup','input','textInput',// Intentionally camelCase
		'copy','cut','paste','click','change','contextmenu','reset','submit'];function isDiscreteEventThatRequiresHydration(eventType){return discreteReplayableEvents.indexOf(eventType)>-1;}function createQueuedReplayableEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent){return {blockedOn:blockedOn,domEventName:domEventName,eventSystemFlags:eventSystemFlags,nativeEvent:nativeEvent,targetContainers:[targetContainer]};}function clearIfContinuousEvent(domEventName,nativeEvent){switch(domEventName){case'focusin':case'focusout':queuedFocus=null;break;case'dragenter':case'dragleave':queuedDrag=null;break;case'mouseover':case'mouseout':queuedMouse=null;break;case'pointerover':case'pointerout':{var pointerId=nativeEvent.pointerId;queuedPointers.delete(pointerId);break;}case'gotpointercapture':case'lostpointercapture':{var _pointerId=nativeEvent.pointerId;queuedPointerCaptures.delete(_pointerId);break;}}}function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent,blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent){if(existingQueuedEvent===null||existingQueuedEvent.nativeEvent!==nativeEvent){var queuedEvent=createQueuedReplayableEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent);if(blockedOn!==null){var _fiber2=getInstanceFromNode(blockedOn);if(_fiber2!==null){// Attempt to increase the priority of this target.
		attemptContinuousHydration(_fiber2);}}return queuedEvent;}// If we have already queued this exact event, then it's because
		// the different event systems have different DOM event listeners.
		// We can accumulate the flags, and the targetContainers, and
		// store a single event to be replayed.
		existingQueuedEvent.eventSystemFlags|=eventSystemFlags;var targetContainers=existingQueuedEvent.targetContainers;if(targetContainer!==null&&targetContainers.indexOf(targetContainer)===-1){targetContainers.push(targetContainer);}return existingQueuedEvent;}function queueIfContinuousEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent){// These set relatedTarget to null because the replayed event will be treated as if we
		// moved from outside the window (no target) onto the target once it hydrates.
		// Instead of mutating we could clone the event.
		switch(domEventName){case'focusin':{var focusEvent=nativeEvent;queuedFocus=accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus,blockedOn,domEventName,eventSystemFlags,targetContainer,focusEvent);return true;}case'dragenter':{var dragEvent=nativeEvent;queuedDrag=accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag,blockedOn,domEventName,eventSystemFlags,targetContainer,dragEvent);return true;}case'mouseover':{var mouseEvent=nativeEvent;queuedMouse=accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse,blockedOn,domEventName,eventSystemFlags,targetContainer,mouseEvent);return true;}case'pointerover':{var pointerEvent=nativeEvent;var pointerId=pointerEvent.pointerId;queuedPointers.set(pointerId,accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId)||null,blockedOn,domEventName,eventSystemFlags,targetContainer,pointerEvent));return true;}case'gotpointercapture':{var _pointerEvent=nativeEvent;var _pointerId2=_pointerEvent.pointerId;queuedPointerCaptures.set(_pointerId2,accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2)||null,blockedOn,domEventName,eventSystemFlags,targetContainer,_pointerEvent));return true;}}return false;}// Check if this target is unblocked. Returns true if it's unblocked.
		function attemptExplicitHydrationTarget(queuedTarget){// TODO: This function shares a lot of logic with findInstanceBlockingEvent.
		// Try to unify them. It's a bit tricky since it would require two return
		// values.
		var targetInst=getClosestInstanceFromNode(queuedTarget.target);if(targetInst!==null){var nearestMounted=getNearestMountedFiber(targetInst);if(nearestMounted!==null){var tag=nearestMounted.tag;if(tag===SuspenseComponent){var instance=getSuspenseInstanceFromFiber(nearestMounted);if(instance!==null){// We're blocked on hydrating this boundary.
		// Increase its priority.
		queuedTarget.blockedOn=instance;attemptHydrationAtPriority(queuedTarget.priority,function(){attemptHydrationAtCurrentPriority(nearestMounted);});return;}}else if(tag===HostRoot){var root=nearestMounted.stateNode;if(isRootDehydrated(root)){queuedTarget.blockedOn=getContainerFromFiber(nearestMounted);// We don't currently have a way to increase the priority of
		// a root other than sync.
		return;}}}}queuedTarget.blockedOn=null;}function queueExplicitHydrationTarget(target){// TODO: This will read the priority if it's dispatched by the React
		// event system but not native events. Should read window.event.type, like
		// we do for updates (getCurrentEventPriority).
		var updatePriority=getCurrentUpdatePriority$1();var queuedTarget={blockedOn:null,target:target,priority:updatePriority};var i=0;for(;i<queuedExplicitHydrationTargets.length;i++){// Stop once we hit the first target with lower priority than
		if(!isHigherEventPriority(updatePriority,queuedExplicitHydrationTargets[i].priority)){break;}}queuedExplicitHydrationTargets.splice(i,0,queuedTarget);if(i===0){attemptExplicitHydrationTarget(queuedTarget);}}function attemptReplayContinuousQueuedEvent(queuedEvent){if(queuedEvent.blockedOn!==null){return false;}var targetContainers=queuedEvent.targetContainers;while(targetContainers.length>0){var targetContainer=targetContainers[0];var nextBlockedOn=findInstanceBlockingEvent(queuedEvent.domEventName,queuedEvent.eventSystemFlags,targetContainer,queuedEvent.nativeEvent);if(nextBlockedOn===null){{var nativeEvent=queuedEvent.nativeEvent;var nativeEventClone=new nativeEvent.constructor(nativeEvent.type,nativeEvent);setReplayingEvent(nativeEventClone);nativeEvent.target.dispatchEvent(nativeEventClone);resetReplayingEvent();}}else {// We're still blocked. Try again later.
		var _fiber3=getInstanceFromNode(nextBlockedOn);if(_fiber3!==null){attemptContinuousHydration(_fiber3);}queuedEvent.blockedOn=nextBlockedOn;return false;}// This target container was successfully dispatched. Try the next.
		targetContainers.shift();}return true;}function attemptReplayContinuousQueuedEventInMap(queuedEvent,key,map){if(attemptReplayContinuousQueuedEvent(queuedEvent)){map.delete(key);}}function replayUnblockedEvents(){hasScheduledReplayAttempt=false;if(queuedFocus!==null&&attemptReplayContinuousQueuedEvent(queuedFocus)){queuedFocus=null;}if(queuedDrag!==null&&attemptReplayContinuousQueuedEvent(queuedDrag)){queuedDrag=null;}if(queuedMouse!==null&&attemptReplayContinuousQueuedEvent(queuedMouse)){queuedMouse=null;}queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);}function scheduleCallbackIfUnblocked(queuedEvent,unblocked){if(queuedEvent.blockedOn===unblocked){queuedEvent.blockedOn=null;if(!hasScheduledReplayAttempt){hasScheduledReplayAttempt=true;// Schedule a callback to attempt replaying as many events as are
		// now unblocked. This first might not actually be unblocked yet.
		// We could check it early to avoid scheduling an unnecessary callback.
		Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority,replayUnblockedEvents);}}}function retryIfBlockedOn(unblocked){// Mark anything that was blocked on this as no longer blocked
		// and eligible for a replay.
		if(queuedDiscreteEvents.length>0){scheduleCallbackIfUnblocked(queuedDiscreteEvents[0],unblocked);// This is a exponential search for each boundary that commits. I think it's
		// worth it because we expect very few discrete events to queue up and once
		// we are actually fully unblocked it will be fast to replay them.
		for(var i=1;i<queuedDiscreteEvents.length;i++){var queuedEvent=queuedDiscreteEvents[i];if(queuedEvent.blockedOn===unblocked){queuedEvent.blockedOn=null;}}}if(queuedFocus!==null){scheduleCallbackIfUnblocked(queuedFocus,unblocked);}if(queuedDrag!==null){scheduleCallbackIfUnblocked(queuedDrag,unblocked);}if(queuedMouse!==null){scheduleCallbackIfUnblocked(queuedMouse,unblocked);}var unblock=function(queuedEvent){return scheduleCallbackIfUnblocked(queuedEvent,unblocked);};queuedPointers.forEach(unblock);queuedPointerCaptures.forEach(unblock);for(var _i=0;_i<queuedExplicitHydrationTargets.length;_i++){var queuedTarget=queuedExplicitHydrationTargets[_i];if(queuedTarget.blockedOn===unblocked){queuedTarget.blockedOn=null;}}while(queuedExplicitHydrationTargets.length>0){var nextExplicitTarget=queuedExplicitHydrationTargets[0];if(nextExplicitTarget.blockedOn!==null){// We're still blocked.
		break;}else {attemptExplicitHydrationTarget(nextExplicitTarget);if(nextExplicitTarget.blockedOn===null){// We're unblocked.
		queuedExplicitHydrationTargets.shift();}}}}var ReactCurrentBatchConfig=ReactSharedInternals.ReactCurrentBatchConfig;// TODO: can we stop exporting these?
		var _enabled=true;// This is exported in FB builds for use by legacy FB layer infra.
		// We'd like to remove this but it's not clear if this is safe.
		function setEnabled(enabled){_enabled=!!enabled;}function isEnabled(){return _enabled;}function createEventListenerWrapperWithPriority(targetContainer,domEventName,eventSystemFlags){var eventPriority=getEventPriority(domEventName);var listenerWrapper;switch(eventPriority){case DiscreteEventPriority:listenerWrapper=dispatchDiscreteEvent;break;case ContinuousEventPriority:listenerWrapper=dispatchContinuousEvent;break;case DefaultEventPriority:default:listenerWrapper=dispatchEvent;break;}return listenerWrapper.bind(null,domEventName,eventSystemFlags,targetContainer);}function dispatchDiscreteEvent(domEventName,eventSystemFlags,container,nativeEvent){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig.transition;ReactCurrentBatchConfig.transition=null;try{setCurrentUpdatePriority(DiscreteEventPriority);dispatchEvent(domEventName,eventSystemFlags,container,nativeEvent);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig.transition=prevTransition;}}function dispatchContinuousEvent(domEventName,eventSystemFlags,container,nativeEvent){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig.transition;ReactCurrentBatchConfig.transition=null;try{setCurrentUpdatePriority(ContinuousEventPriority);dispatchEvent(domEventName,eventSystemFlags,container,nativeEvent);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig.transition=prevTransition;}}function dispatchEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent){if(!_enabled){return;}{dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName,eventSystemFlags,targetContainer,nativeEvent);}}function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName,eventSystemFlags,targetContainer,nativeEvent){var blockedOn=findInstanceBlockingEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent);if(blockedOn===null){dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,return_targetInst,targetContainer);clearIfContinuousEvent(domEventName,nativeEvent);return;}if(queueIfContinuousEvent(blockedOn,domEventName,eventSystemFlags,targetContainer,nativeEvent)){nativeEvent.stopPropagation();return;}// We need to clear only if we didn't queue because
		// queueing is accumulative.
		clearIfContinuousEvent(domEventName,nativeEvent);if(eventSystemFlags&IS_CAPTURE_PHASE&&isDiscreteEventThatRequiresHydration(domEventName)){while(blockedOn!==null){var fiber=getInstanceFromNode(blockedOn);if(fiber!==null){attemptSynchronousHydration(fiber);}var nextBlockedOn=findInstanceBlockingEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent);if(nextBlockedOn===null){dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,return_targetInst,targetContainer);}if(nextBlockedOn===blockedOn){break;}blockedOn=nextBlockedOn;}if(blockedOn!==null){nativeEvent.stopPropagation();}return;}// This is not replayable so we'll invoke it but without a target,
		// in case the event system needs to trace it.
		dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,null,targetContainer);}var return_targetInst=null;// Returns a SuspenseInstance or Container if it's blocked.
		// The return_targetInst field above is conceptually part of the return value.
		function findInstanceBlockingEvent(domEventName,eventSystemFlags,targetContainer,nativeEvent){// TODO: Warn if _enabled is false.
		return_targetInst=null;var nativeEventTarget=getEventTarget(nativeEvent);var targetInst=getClosestInstanceFromNode(nativeEventTarget);if(targetInst!==null){var nearestMounted=getNearestMountedFiber(targetInst);if(nearestMounted===null){// This tree has been unmounted already. Dispatch without a target.
		targetInst=null;}else {var tag=nearestMounted.tag;if(tag===SuspenseComponent){var instance=getSuspenseInstanceFromFiber(nearestMounted);if(instance!==null){// Queue the event to be replayed later. Abort dispatching since we
		// don't want this event dispatched twice through the event system.
		// TODO: If this is the first discrete event in the queue. Schedule an increased
		// priority for this boundary.
		return instance;}// This shouldn't happen, something went wrong but to avoid blocking
		// the whole system, dispatch the event without a target.
		// TODO: Warn.
		targetInst=null;}else if(tag===HostRoot){var root=nearestMounted.stateNode;if(isRootDehydrated(root)){// If this happens during a replay something went wrong and it might block
		// the whole system.
		return getContainerFromFiber(nearestMounted);}targetInst=null;}else if(nearestMounted!==targetInst){// If we get an event (ex: img onload) before committing that
		// component's mount, ignore it for now (that is, treat it as if it was an
		// event on a non-React tree). We might also consider queueing events and
		// dispatching them after the mount.
		targetInst=null;}}}return_targetInst=targetInst;// We're not blocked on anything.
		return null;}function getEventPriority(domEventName){switch(domEventName){// Used by SimpleEventPlugin:
		case'cancel':case'click':case'close':case'contextmenu':case'copy':case'cut':case'auxclick':case'dblclick':case'dragend':case'dragstart':case'drop':case'focusin':case'focusout':case'input':case'invalid':case'keydown':case'keypress':case'keyup':case'mousedown':case'mouseup':case'paste':case'pause':case'play':case'pointercancel':case'pointerdown':case'pointerup':case'ratechange':case'reset':case'resize':case'seeked':case'submit':case'touchcancel':case'touchend':case'touchstart':case'volumechange':// Used by polyfills:
		// eslint-disable-next-line no-fallthrough
		case'change':case'selectionchange':case'textInput':case'compositionstart':case'compositionend':case'compositionupdate':// Only enableCreateEventHandleAPI:
		// eslint-disable-next-line no-fallthrough
		case'beforeblur':case'afterblur':// Not used by React but could be by user code:
		// eslint-disable-next-line no-fallthrough
		case'beforeinput':case'blur':case'fullscreenchange':case'focus':case'hashchange':case'popstate':case'select':case'selectstart':return DiscreteEventPriority;case'drag':case'dragenter':case'dragexit':case'dragleave':case'dragover':case'mousemove':case'mouseout':case'mouseover':case'pointermove':case'pointerout':case'pointerover':case'scroll':case'toggle':case'touchmove':case'wheel':// Not used by React but could be by user code:
		// eslint-disable-next-line no-fallthrough
		case'mouseenter':case'mouseleave':case'pointerenter':case'pointerleave':return ContinuousEventPriority;case'message':{// We might be in the Scheduler callback.
		// Eventually this mechanism will be replaced by a check
		// of the current priority on the native scheduler.
		var schedulerPriority=getCurrentPriorityLevel();switch(schedulerPriority){case ImmediatePriority:return DiscreteEventPriority;case UserBlockingPriority:return ContinuousEventPriority;case NormalPriority:case LowPriority:// TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
		return DefaultEventPriority;case IdlePriority:return IdleEventPriority;default:return DefaultEventPriority;}}default:return DefaultEventPriority;}}function addEventBubbleListener(target,eventType,listener){target.addEventListener(eventType,listener,false);return listener;}function addEventCaptureListener(target,eventType,listener){target.addEventListener(eventType,listener,true);return listener;}function addEventCaptureListenerWithPassiveFlag(target,eventType,listener,passive){target.addEventListener(eventType,listener,{capture:true,passive:passive});return listener;}function addEventBubbleListenerWithPassiveFlag(target,eventType,listener,passive){target.addEventListener(eventType,listener,{passive:passive});return listener;}/**
		 * These variables store information about text content of a target node,
		 * allowing comparison of content before and after a given event.
		 *
		 * Identify the node where selection currently begins, then observe
		 * both its text content and its current position in the DOM. Since the
		 * browser may natively replace the target node during composition, we can
		 * use its position to find its replacement.
		 *
		 *
		 */var root=null;var startText=null;var fallbackText=null;function initialize(nativeEventTarget){root=nativeEventTarget;startText=getText();return true;}function reset(){root=null;startText=null;fallbackText=null;}function getData(){if(fallbackText){return fallbackText;}var start;var startValue=startText;var startLength=startValue.length;var end;var endValue=getText();var endLength=endValue.length;for(start=0;start<startLength;start++){if(startValue[start]!==endValue[start]){break;}}var minEnd=startLength-start;for(end=1;end<=minEnd;end++){if(startValue[startLength-end]!==endValue[endLength-end]){break;}}var sliceTail=end>1?1-end:undefined;fallbackText=endValue.slice(start,sliceTail);return fallbackText;}function getText(){if('value'in root){return root.value;}return root.textContent;}/**
		 * `charCode` represents the actual "character code" and is safe to use with
		 * `String.fromCharCode`. As such, only keys that correspond to printable
		 * characters produce a valid `charCode`, the only exception to this is Enter.
		 * The Tab-key is considered non-printable and does not have a `charCode`,
		 * presumably because it does not produce a tab-character in browsers.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {number} Normalized `charCode` property.
		 */function getEventCharCode(nativeEvent){var charCode;var keyCode=nativeEvent.keyCode;if('charCode'in nativeEvent){charCode=nativeEvent.charCode;// FF does not set `charCode` for the Enter-key, check against `keyCode`.
		if(charCode===0&&keyCode===13){charCode=13;}}else {// IE8 does not implement `charCode`, but `keyCode` has the correct value.
		charCode=keyCode;}// IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
		// report Enter as charCode 10 when ctrl is pressed.
		if(charCode===10){charCode=13;}// Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
		// Must not discard the (non-)printable Enter-key.
		if(charCode>=32||charCode===13){return charCode;}return 0;}function functionThatReturnsTrue(){return true;}function functionThatReturnsFalse(){return false;}// This is intentionally a factory so that we have different returned constructors.
		// If we had a single constructor, it would be megamorphic and engines would deopt.
		function createSyntheticEvent(Interface){/**
		   * Synthetic events are dispatched by event plugins, typically in response to a
		   * top-level event delegation handler.
		   *
		   * These systems should generally use pooling to reduce the frequency of garbage
		   * collection. The system should check `isPersistent` to determine whether the
		   * event should be released into the pool after being dispatched. Users that
		   * need a persisted event should invoke `persist`.
		   *
		   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
		   * normalizing browser quirks. Subclasses do not necessarily have to implement a
		   * DOM interface; custom application-specific events can also subclass this.
		   */function SyntheticBaseEvent(reactName,reactEventType,targetInst,nativeEvent,nativeEventTarget){this._reactName=reactName;this._targetInst=targetInst;this.type=reactEventType;this.nativeEvent=nativeEvent;this.target=nativeEventTarget;this.currentTarget=null;for(var _propName in Interface){if(!Interface.hasOwnProperty(_propName)){continue;}var normalize=Interface[_propName];if(normalize){this[_propName]=normalize(nativeEvent);}else {this[_propName]=nativeEvent[_propName];}}var defaultPrevented=nativeEvent.defaultPrevented!=null?nativeEvent.defaultPrevented:nativeEvent.returnValue===false;if(defaultPrevented){this.isDefaultPrevented=functionThatReturnsTrue;}else {this.isDefaultPrevented=functionThatReturnsFalse;}this.isPropagationStopped=functionThatReturnsFalse;return this;}assign(SyntheticBaseEvent.prototype,{preventDefault:function(){this.defaultPrevented=true;var event=this.nativeEvent;if(!event){return;}if(event.preventDefault){event.preventDefault();// $FlowFixMe - flow is not aware of `unknown` in IE
		}else if(typeof event.returnValue!=='unknown'){event.returnValue=false;}this.isDefaultPrevented=functionThatReturnsTrue;},stopPropagation:function(){var event=this.nativeEvent;if(!event){return;}if(event.stopPropagation){event.stopPropagation();// $FlowFixMe - flow is not aware of `unknown` in IE
		}else if(typeof event.cancelBubble!=='unknown'){// The ChangeEventPlugin registers a "propertychange" event for
		// IE. This event does not support bubbling or cancelling, and
		// any references to cancelBubble throw "Member not found".  A
		// typeof check of "unknown" circumvents this issue (and is also
		// IE specific).
		event.cancelBubble=true;}this.isPropagationStopped=functionThatReturnsTrue;},/**
		     * We release all dispatched `SyntheticEvent`s after each event loop, adding
		     * them back into the pool. This allows a way to hold onto a reference that
		     * won't be added back into the pool.
		     */persist:function(){// Modern event system doesn't use pooling.
		},/**
		     * Checks if this event should be released back into the pool.
		     *
		     * @return {boolean} True if this should not be released, false otherwise.
		     */isPersistent:functionThatReturnsTrue});return SyntheticBaseEvent;}/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var EventInterface={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(event){return event.timeStamp||Date.now();},defaultPrevented:0,isTrusted:0};var SyntheticEvent=createSyntheticEvent(EventInterface);var UIEventInterface=assign({},EventInterface,{view:0,detail:0});var SyntheticUIEvent=createSyntheticEvent(UIEventInterface);var lastMovementX;var lastMovementY;var lastMouseEvent;function updateMouseMovementPolyfillState(event){if(event!==lastMouseEvent){if(lastMouseEvent&&event.type==='mousemove'){lastMovementX=event.screenX-lastMouseEvent.screenX;lastMovementY=event.screenY-lastMouseEvent.screenY;}else {lastMovementX=0;lastMovementY=0;}lastMouseEvent=event;}}/**
		 * @interface MouseEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var MouseEventInterface=assign({},UIEventInterface,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:getEventModifierState,button:0,buttons:0,relatedTarget:function(event){if(event.relatedTarget===undefined)return event.fromElement===event.srcElement?event.toElement:event.fromElement;return event.relatedTarget;},movementX:function(event){if('movementX'in event){return event.movementX;}updateMouseMovementPolyfillState(event);return lastMovementX;},movementY:function(event){if('movementY'in event){return event.movementY;}// Don't need to call updateMouseMovementPolyfillState() here
		// because it's guaranteed to have already run when movementX
		// was copied.
		return lastMovementY;}});var SyntheticMouseEvent=createSyntheticEvent(MouseEventInterface);/**
		 * @interface DragEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var DragEventInterface=assign({},MouseEventInterface,{dataTransfer:0});var SyntheticDragEvent=createSyntheticEvent(DragEventInterface);/**
		 * @interface FocusEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var FocusEventInterface=assign({},UIEventInterface,{relatedTarget:0});var SyntheticFocusEvent=createSyntheticEvent(FocusEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
		 */var AnimationEventInterface=assign({},EventInterface,{animationName:0,elapsedTime:0,pseudoElement:0});var SyntheticAnimationEvent=createSyntheticEvent(AnimationEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/clipboard-apis/
		 */var ClipboardEventInterface=assign({},EventInterface,{clipboardData:function(event){return 'clipboardData'in event?event.clipboardData:window.clipboardData;}});var SyntheticClipboardEvent=createSyntheticEvent(ClipboardEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
		 */var CompositionEventInterface=assign({},EventInterface,{data:0});var SyntheticCompositionEvent=createSyntheticEvent(CompositionEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
		 *      /#events-inputevents
		 */ // Happens to share the same list for now.
		var SyntheticInputEvent=SyntheticCompositionEvent;/**
		 * Normalization of deprecated HTML5 `key` values
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */var normalizeKey={Esc:'Escape',Spacebar:' ',Left:'ArrowLeft',Up:'ArrowUp',Right:'ArrowRight',Down:'ArrowDown',Del:'Delete',Win:'OS',Menu:'ContextMenu',Apps:'ContextMenu',Scroll:'ScrollLock',MozPrintableKey:'Unidentified'};/**
		 * Translation from legacy `keyCode` to HTML5 `key`
		 * Only special keys supported, all others depend on keyboard layout or browser
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */var translateToKey={'8':'Backspace','9':'Tab','12':'Clear','13':'Enter','16':'Shift','17':'Control','18':'Alt','19':'Pause','20':'CapsLock','27':'Escape','32':' ','33':'PageUp','34':'PageDown','35':'End','36':'Home','37':'ArrowLeft','38':'ArrowUp','39':'ArrowRight','40':'ArrowDown','45':'Insert','46':'Delete','112':'F1','113':'F2','114':'F3','115':'F4','116':'F5','117':'F6','118':'F7','119':'F8','120':'F9','121':'F10','122':'F11','123':'F12','144':'NumLock','145':'ScrollLock','224':'Meta'};/**
		 * @param {object} nativeEvent Native browser event.
		 * @return {string} Normalized `key` property.
		 */function getEventKey(nativeEvent){if(nativeEvent.key){// Normalize inconsistent values reported by browsers due to
		// implementations of a working draft specification.
		// FireFox implements `key` but returns `MozPrintableKey` for all
		// printable characters (normalized to `Unidentified`), ignore it.
		var key=normalizeKey[nativeEvent.key]||nativeEvent.key;if(key!=='Unidentified'){return key;}}// Browser does not implement `key`, polyfill as much of it as we can.
		if(nativeEvent.type==='keypress'){var charCode=getEventCharCode(nativeEvent);// The enter-key is technically both printable and non-printable and can
		// thus be captured by `keypress`, no other non-printable key should.
		return charCode===13?'Enter':String.fromCharCode(charCode);}if(nativeEvent.type==='keydown'||nativeEvent.type==='keyup'){// While user keyboard layout determines the actual meaning of each
		// `keyCode` value, almost all function keys have a universal value.
		return translateToKey[nativeEvent.keyCode]||'Unidentified';}return '';}/**
		 * Translation from modifier key to the associated property in the event.
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
		 */var modifierKeyToProp={Alt:'altKey',Control:'ctrlKey',Meta:'metaKey',Shift:'shiftKey'};// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
		// getModifierState. If getModifierState is not supported, we map it to a set of
		// modifier keys exposed by the event. In this case, Lock-keys are not supported.
		function modifierStateGetter(keyArg){var syntheticEvent=this;var nativeEvent=syntheticEvent.nativeEvent;if(nativeEvent.getModifierState){return nativeEvent.getModifierState(keyArg);}var keyProp=modifierKeyToProp[keyArg];return keyProp?!!nativeEvent[keyProp]:false;}function getEventModifierState(nativeEvent){return modifierStateGetter;}/**
		 * @interface KeyboardEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var KeyboardEventInterface=assign({},UIEventInterface,{key:getEventKey,code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:getEventModifierState,// Legacy Interface
		charCode:function(event){// `charCode` is the result of a KeyPress event and represents the value of
		// the actual printable character.
		// KeyPress is deprecated, but its replacement is not yet final and not
		// implemented in any major browser. Only KeyPress has charCode.
		if(event.type==='keypress'){return getEventCharCode(event);}return 0;},keyCode:function(event){// `keyCode` is the result of a KeyDown/Up event and represents the value of
		// physical keyboard key.
		// The actual meaning of the value depends on the users' keyboard layout
		// which cannot be detected. Assuming that it is a US keyboard layout
		// provides a surprisingly accurate mapping for US and European users.
		// Due to this, it is left to the user to implement at this time.
		if(event.type==='keydown'||event.type==='keyup'){return event.keyCode;}return 0;},which:function(event){// `which` is an alias for either `keyCode` or `charCode` depending on the
		// type of the event.
		if(event.type==='keypress'){return getEventCharCode(event);}if(event.type==='keydown'||event.type==='keyup'){return event.keyCode;}return 0;}});var SyntheticKeyboardEvent=createSyntheticEvent(KeyboardEventInterface);/**
		 * @interface PointerEvent
		 * @see http://www.w3.org/TR/pointerevents/
		 */var PointerEventInterface=assign({},MouseEventInterface,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0});var SyntheticPointerEvent=createSyntheticEvent(PointerEventInterface);/**
		 * @interface TouchEvent
		 * @see http://www.w3.org/TR/touch-events/
		 */var TouchEventInterface=assign({},UIEventInterface,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:getEventModifierState});var SyntheticTouchEvent=createSyntheticEvent(TouchEventInterface);/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
		 */var TransitionEventInterface=assign({},EventInterface,{propertyName:0,elapsedTime:0,pseudoElement:0});var SyntheticTransitionEvent=createSyntheticEvent(TransitionEventInterface);/**
		 * @interface WheelEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */var WheelEventInterface=assign({},MouseEventInterface,{deltaX:function(event){return 'deltaX'in event?event.deltaX:// Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
		'wheelDeltaX'in event?-event.wheelDeltaX:0;},deltaY:function(event){return 'deltaY'in event?event.deltaY:// Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
		'wheelDeltaY'in event?-event.wheelDeltaY:// Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
		'wheelDelta'in event?-event.wheelDelta:0;},deltaZ:0,// Browsers without "deltaMode" is reporting in raw wheel delta where one
		// notch on the scroll is always +/- 120, roughly equivalent to pixels.
		// A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
		// ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
		deltaMode:0});var SyntheticWheelEvent=createSyntheticEvent(WheelEventInterface);var END_KEYCODES=[9,13,27,32];// Tab, Return, Esc, Space
		var START_KEYCODE=229;var canUseCompositionEvent=canUseDOM&&'CompositionEvent'in window;var documentMode=null;if(canUseDOM&&'documentMode'in document){documentMode=document.documentMode;}// Webkit offers a very useful `textInput` event that can be used to
		// directly represent `beforeInput`. The IE `textinput` event is not as
		// useful, so we don't use it.
		var canUseTextInputEvent=canUseDOM&&'TextEvent'in window&&!documentMode;// In IE9+, we have access to composition events, but the data supplied
		// by the native compositionend event may be incorrect. Japanese ideographic
		// spaces, for instance (\u3000) are not recorded correctly.
		var useFallbackCompositionData=canUseDOM&&(!canUseCompositionEvent||documentMode&&documentMode>8&&documentMode<=11);var SPACEBAR_CODE=32;var SPACEBAR_CHAR=String.fromCharCode(SPACEBAR_CODE);function registerEvents(){registerTwoPhaseEvent('onBeforeInput',['compositionend','keypress','textInput','paste']);registerTwoPhaseEvent('onCompositionEnd',['compositionend','focusout','keydown','keypress','keyup','mousedown']);registerTwoPhaseEvent('onCompositionStart',['compositionstart','focusout','keydown','keypress','keyup','mousedown']);registerTwoPhaseEvent('onCompositionUpdate',['compositionupdate','focusout','keydown','keypress','keyup','mousedown']);}// Track whether we've ever handled a keypress on the space key.
		var hasSpaceKeypress=false;/**
		 * Return whether a native keypress event is assumed to be a command.
		 * This is required because Firefox fires `keypress` events for key commands
		 * (cut, copy, select-all, etc.) even though no character is inserted.
		 */function isKeypressCommand(nativeEvent){return (nativeEvent.ctrlKey||nativeEvent.altKey||nativeEvent.metaKey)&&// ctrlKey && altKey is equivalent to AltGr, and is not a command.
		!(nativeEvent.ctrlKey&&nativeEvent.altKey);}/**
		 * Translate native top level events into event types.
		 */function getCompositionEventType(domEventName){switch(domEventName){case'compositionstart':return 'onCompositionStart';case'compositionend':return 'onCompositionEnd';case'compositionupdate':return 'onCompositionUpdate';}}/**
		 * Does our fallback best-guess model think this event signifies that
		 * composition has begun?
		 */function isFallbackCompositionStart(domEventName,nativeEvent){return domEventName==='keydown'&&nativeEvent.keyCode===START_KEYCODE;}/**
		 * Does our fallback mode think that this event is the end of composition?
		 */function isFallbackCompositionEnd(domEventName,nativeEvent){switch(domEventName){case'keyup':// Command keys insert or clear IME input.
		return END_KEYCODES.indexOf(nativeEvent.keyCode)!==-1;case'keydown':// Expect IME keyCode on each keydown. If we get any other
		// code we must have exited earlier.
		return nativeEvent.keyCode!==START_KEYCODE;case'keypress':case'mousedown':case'focusout':// Events are not possible without cancelling IME.
		return true;default:return false;}}/**
		 * Google Input Tools provides composition data via a CustomEvent,
		 * with the `data` property populated in the `detail` object. If this
		 * is available on the event object, use it. If not, this is a plain
		 * composition event and we have nothing special to extract.
		 *
		 * @param {object} nativeEvent
		 * @return {?string}
		 */function getDataFromCustomEvent(nativeEvent){var detail=nativeEvent.detail;if(typeof detail==='object'&&'data'in detail){return detail.data;}return null;}/**
		 * Check if a composition event was triggered by Korean IME.
		 * Our fallback mode does not work well with IE's Korean IME,
		 * so just use native composition events when Korean IME is used.
		 * Although CompositionEvent.locale property is deprecated,
		 * it is available in IE, where our fallback mode is enabled.
		 *
		 * @param {object} nativeEvent
		 * @return {boolean}
		 */function isUsingKoreanIME(nativeEvent){return nativeEvent.locale==='ko';}// Track the current IME composition status, if any.
		var isComposing=false;/**
		 * @return {?object} A SyntheticCompositionEvent.
		 */function extractCompositionEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget){var eventType;var fallbackData;if(canUseCompositionEvent){eventType=getCompositionEventType(domEventName);}else if(!isComposing){if(isFallbackCompositionStart(domEventName,nativeEvent)){eventType='onCompositionStart';}}else if(isFallbackCompositionEnd(domEventName,nativeEvent)){eventType='onCompositionEnd';}if(!eventType){return null;}if(useFallbackCompositionData&&!isUsingKoreanIME(nativeEvent)){// The current composition is stored statically and must not be
		// overwritten while composition continues.
		if(!isComposing&&eventType==='onCompositionStart'){isComposing=initialize(nativeEventTarget);}else if(eventType==='onCompositionEnd'){if(isComposing){fallbackData=getData();}}}var listeners=accumulateTwoPhaseListeners(targetInst,eventType);if(listeners.length>0){var event=new SyntheticCompositionEvent(eventType,domEventName,null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:event,listeners:listeners});if(fallbackData){// Inject data generated from fallback path into the synthetic event.
		// This matches the property of native CompositionEventInterface.
		event.data=fallbackData;}else {var customData=getDataFromCustomEvent(nativeEvent);if(customData!==null){event.data=customData;}}}}function getNativeBeforeInputChars(domEventName,nativeEvent){switch(domEventName){case'compositionend':return getDataFromCustomEvent(nativeEvent);case'keypress':/**
		       * If native `textInput` events are available, our goal is to make
		       * use of them. However, there is a special case: the spacebar key.
		       * In Webkit, preventing default on a spacebar `textInput` event
		       * cancels character insertion, but it *also* causes the browser
		       * to fall back to its default spacebar behavior of scrolling the
		       * page.
		       *
		       * Tracking at:
		       * https://code.google.com/p/chromium/issues/detail?id=355103
		       *
		       * To avoid this issue, use the keypress event as if no `textInput`
		       * event is available.
		       */var which=nativeEvent.which;if(which!==SPACEBAR_CODE){return null;}hasSpaceKeypress=true;return SPACEBAR_CHAR;case'textInput':// Record the characters to be added to the DOM.
		var chars=nativeEvent.data;// If it's a spacebar character, assume that we have already handled
		// it at the keypress level and bail immediately. Android Chrome
		// doesn't give us keycodes, so we need to ignore it.
		if(chars===SPACEBAR_CHAR&&hasSpaceKeypress){return null;}return chars;default:// For other native event types, do nothing.
		return null;}}/**
		 * For browsers that do not provide the `textInput` event, extract the
		 * appropriate string to use for SyntheticInputEvent.
		 */function getFallbackBeforeInputChars(domEventName,nativeEvent){// If we are currently composing (IME) and using a fallback to do so,
		// try to extract the composed characters from the fallback object.
		// If composition event is available, we extract a string only at
		// compositionevent, otherwise extract it at fallback events.
		if(isComposing){if(domEventName==='compositionend'||!canUseCompositionEvent&&isFallbackCompositionEnd(domEventName,nativeEvent)){var chars=getData();reset();isComposing=false;return chars;}return null;}switch(domEventName){case'paste':// If a paste event occurs after a keypress, throw out the input
		// chars. Paste events should not lead to BeforeInput events.
		return null;case'keypress':/**
		       * As of v27, Firefox may fire keypress events even when no character
		       * will be inserted. A few possibilities:
		       *
		       * - `which` is `0`. Arrow keys, Esc key, etc.
		       *
		       * - `which` is the pressed key code, but no char is available.
		       *   Ex: 'AltGr + d` in Polish. There is no modified character for
		       *   this key combination and no character is inserted into the
		       *   document, but FF fires the keypress for char code `100` anyway.
		       *   No `input` event will occur.
		       *
		       * - `which` is the pressed key code, but a command combination is
		       *   being used. Ex: `Cmd+C`. No character is inserted, and no
		       *   `input` event will occur.
		       */if(!isKeypressCommand(nativeEvent)){// IE fires the `keypress` event when a user types an emoji via
		// Touch keyboard of Windows.  In such a case, the `char` property
		// holds an emoji character like `\uD83D\uDE0A`.  Because its length
		// is 2, the property `which` does not represent an emoji correctly.
		// In such a case, we directly return the `char` property instead of
		// using `which`.
		if(nativeEvent.char&&nativeEvent.char.length>1){return nativeEvent.char;}else if(nativeEvent.which){return String.fromCharCode(nativeEvent.which);}}return null;case'compositionend':return useFallbackCompositionData&&!isUsingKoreanIME(nativeEvent)?null:nativeEvent.data;default:return null;}}/**
		 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
		 * `textInput` or fallback behavior.
		 *
		 * @return {?object} A SyntheticInputEvent.
		 */function extractBeforeInputEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget){var chars;if(canUseTextInputEvent){chars=getNativeBeforeInputChars(domEventName,nativeEvent);}else {chars=getFallbackBeforeInputChars(domEventName,nativeEvent);}// If no characters are being inserted, no BeforeInput event should
		// be fired.
		if(!chars){return null;}var listeners=accumulateTwoPhaseListeners(targetInst,'onBeforeInput');if(listeners.length>0){var event=new SyntheticInputEvent('onBeforeInput','beforeinput',null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:event,listeners:listeners});event.data=chars;}}/**
		 * Create an `onBeforeInput` event to match
		 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
		 *
		 * This event plugin is based on the native `textInput` event
		 * available in Chrome, Safari, Opera, and IE. This event fires after
		 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
		 *
		 * `beforeInput` is spec'd but not implemented in any browsers, and
		 * the `input` event does not provide any useful information about what has
		 * actually been added, contrary to the spec. Thus, `textInput` is the best
		 * available event to identify the characters that have actually been inserted
		 * into the target node.
		 *
		 * This plugin is also responsible for emitting `composition` events, thus
		 * allowing us to share composition fallback code for both `beforeInput` and
		 * `composition` event types.
		 */function extractEvents(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){extractCompositionEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractBeforeInputEvent(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);}/**
		 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
		 */var supportedInputTypes={color:true,date:true,datetime:true,'datetime-local':true,email:true,month:true,number:true,password:true,range:true,search:true,tel:true,text:true,time:true,url:true,week:true};function isTextInputElement(elem){var nodeName=elem&&elem.nodeName&&elem.nodeName.toLowerCase();if(nodeName==='input'){return !!supportedInputTypes[elem.type];}if(nodeName==='textarea'){return true;}return false;}/**
		 * Checks if an event is supported in the current execution environment.
		 *
		 * NOTE: This will not work correctly for non-generic events such as `change`,
		 * `reset`, `load`, `error`, and `select`.
		 *
		 * Borrows from Modernizr.
		 *
		 * @param {string} eventNameSuffix Event name, e.g. "click".
		 * @return {boolean} True if the event is supported.
		 * @internal
		 * @license Modernizr 3.0.0pre (Custom Build) | MIT
		 */function isEventSupported(eventNameSuffix){if(!canUseDOM){return false;}var eventName='on'+eventNameSuffix;var isSupported=(eventName in document);if(!isSupported){var element=document.createElement('div');element.setAttribute(eventName,'return;');isSupported=typeof element[eventName]==='function';}return isSupported;}function registerEvents$1(){registerTwoPhaseEvent('onChange',['change','click','focusin','focusout','input','keydown','keyup','selectionchange']);}function createAndAccumulateChangeEvent(dispatchQueue,inst,nativeEvent,target){// Flag this event loop as needing state restore.
		enqueueStateRestore(target);var listeners=accumulateTwoPhaseListeners(inst,'onChange');if(listeners.length>0){var event=new SyntheticEvent('onChange','change',null,nativeEvent,target);dispatchQueue.push({event:event,listeners:listeners});}}/**
		 * For IE shims
		 */var activeElement=null;var activeElementInst=null;/**
		 * SECTION: handle `change` event
		 */function shouldUseChangeEvent(elem){var nodeName=elem.nodeName&&elem.nodeName.toLowerCase();return nodeName==='select'||nodeName==='input'&&elem.type==='file';}function manualDispatchChangeEvent(nativeEvent){var dispatchQueue=[];createAndAccumulateChangeEvent(dispatchQueue,activeElementInst,nativeEvent,getEventTarget(nativeEvent));// If change and propertychange bubbled, we'd just bind to it like all the
		// other events and have it go through ReactBrowserEventEmitter. Since it
		// doesn't, we manually listen for the events and so we have to enqueue and
		// process the abstract event manually.
		//
		// Batching is necessary here in order to ensure that all event handlers run
		// before the next rerender (including event handlers attached to ancestor
		// elements instead of directly on the input). Without this, controlled
		// components don't work properly in conjunction with event bubbling because
		// the component is rerendered and the value reverted before all the event
		// handlers can run. See https://github.com/facebook/react/issues/708.
		batchedUpdates(runEventInBatch,dispatchQueue);}function runEventInBatch(dispatchQueue){processDispatchQueue(dispatchQueue,0);}function getInstIfValueChanged(targetInst){var targetNode=getNodeFromInstance(targetInst);if(updateValueIfChanged(targetNode)){return targetInst;}}function getTargetInstForChangeEvent(domEventName,targetInst){if(domEventName==='change'){return targetInst;}}/**
		 * SECTION: handle `input` event
		 */var isInputEventSupported=false;if(canUseDOM){// IE9 claims to support the input event but fails to trigger it when
		// deleting text, so we ignore its input events.
		isInputEventSupported=isEventSupported('input')&&(!document.documentMode||document.documentMode>9);}/**
		 * (For IE <=9) Starts tracking propertychange events on the passed-in element
		 * and override the value property so that we can distinguish user events from
		 * value changes in JS.
		 */function startWatchingForValueChange(target,targetInst){activeElement=target;activeElementInst=targetInst;activeElement.attachEvent('onpropertychange',handlePropertyChange);}/**
		 * (For IE <=9) Removes the event listeners from the currently-tracked element,
		 * if any exists.
		 */function stopWatchingForValueChange(){if(!activeElement){return;}activeElement.detachEvent('onpropertychange',handlePropertyChange);activeElement=null;activeElementInst=null;}/**
		 * (For IE <=9) Handles a propertychange event, sending a `change` event if
		 * the value of the active element has changed.
		 */function handlePropertyChange(nativeEvent){if(nativeEvent.propertyName!=='value'){return;}if(getInstIfValueChanged(activeElementInst)){manualDispatchChangeEvent(nativeEvent);}}function handleEventsForInputEventPolyfill(domEventName,target,targetInst){if(domEventName==='focusin'){// In IE9, propertychange fires for most input events but is buggy and
		// doesn't fire when text is deleted, but conveniently, selectionchange
		// appears to fire in all of the remaining cases so we catch those and
		// forward the event if the value has changed
		// In either case, we don't want to call the event handler if the value
		// is changed from JS so we redefine a setter for `.value` that updates
		// our activeElementValue variable, allowing us to ignore those changes
		//
		// stopWatching() should be a noop here but we call it just in case we
		// missed a blur event somehow.
		stopWatchingForValueChange();startWatchingForValueChange(target,targetInst);}else if(domEventName==='focusout'){stopWatchingForValueChange();}}// For IE8 and IE9.
		function getTargetInstForInputEventPolyfill(domEventName,targetInst){if(domEventName==='selectionchange'||domEventName==='keyup'||domEventName==='keydown'){// On the selectionchange event, the target is just document which isn't
		// helpful for us so just check activeElement instead.
		//
		// 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
		// propertychange on the first input event after setting `value` from a
		// script and fires only keydown, keypress, keyup. Catching keyup usually
		// gets it and catching keydown lets us fire an event for the first
		// keystroke if user does a key repeat (it'll be a little delayed: right
		// before the second keystroke). Other input methods (e.g., paste) seem to
		// fire selectionchange normally.
		return getInstIfValueChanged(activeElementInst);}}/**
		 * SECTION: handle `click` event
		 */function shouldUseClickEvent(elem){// Use the `click` event to detect changes to checkbox and radio inputs.
		// This approach works across all browsers, whereas `change` does not fire
		// until `blur` in IE8.
		var nodeName=elem.nodeName;return nodeName&&nodeName.toLowerCase()==='input'&&(elem.type==='checkbox'||elem.type==='radio');}function getTargetInstForClickEvent(domEventName,targetInst){if(domEventName==='click'){return getInstIfValueChanged(targetInst);}}function getTargetInstForInputOrChangeEvent(domEventName,targetInst){if(domEventName==='input'||domEventName==='change'){return getInstIfValueChanged(targetInst);}}function handleControlledInputBlur(node){var state=node._wrapperState;if(!state||!state.controlled||node.type!=='number'){return;}{// If controlled, assign the value attribute to the current value on blur
		setDefaultValue(node,'number',node.value);}}/**
		 * This plugin creates an `onChange` event that normalizes change events
		 * across form elements. This event fires at a time when it's possible to
		 * change the element's value without seeing a flicker.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - select
		 */function extractEvents$1(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var targetNode=targetInst?getNodeFromInstance(targetInst):window;var getTargetInstFunc,handleEventFunc;if(shouldUseChangeEvent(targetNode)){getTargetInstFunc=getTargetInstForChangeEvent;}else if(isTextInputElement(targetNode)){if(isInputEventSupported){getTargetInstFunc=getTargetInstForInputOrChangeEvent;}else {getTargetInstFunc=getTargetInstForInputEventPolyfill;handleEventFunc=handleEventsForInputEventPolyfill;}}else if(shouldUseClickEvent(targetNode)){getTargetInstFunc=getTargetInstForClickEvent;}if(getTargetInstFunc){var inst=getTargetInstFunc(domEventName,targetInst);if(inst){createAndAccumulateChangeEvent(dispatchQueue,inst,nativeEvent,nativeEventTarget);return;}}if(handleEventFunc){handleEventFunc(domEventName,targetNode,targetInst);}// When blurring, set the value attribute for number inputs
		if(domEventName==='focusout'){handleControlledInputBlur(targetNode);}}function registerEvents$2(){registerDirectEvent('onMouseEnter',['mouseout','mouseover']);registerDirectEvent('onMouseLeave',['mouseout','mouseover']);registerDirectEvent('onPointerEnter',['pointerout','pointerover']);registerDirectEvent('onPointerLeave',['pointerout','pointerover']);}/**
		 * For almost every interaction we care about, there will be both a top-level
		 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
		 * we do not extract duplicate events. However, moving the mouse into the
		 * browser from outside will not fire a `mouseout` event. In this case, we use
		 * the `mouseover` top-level event.
		 */function extractEvents$2(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var isOverEvent=domEventName==='mouseover'||domEventName==='pointerover';var isOutEvent=domEventName==='mouseout'||domEventName==='pointerout';if(isOverEvent&&!isReplayingEvent(nativeEvent)){// If this is an over event with a target, we might have already dispatched
		// the event in the out event of the other target. If this is replayed,
		// then it's because we couldn't dispatch against this target previously
		// so we have to do it now instead.
		var related=nativeEvent.relatedTarget||nativeEvent.fromElement;if(related){// If the related node is managed by React, we can assume that we have
		// already dispatched the corresponding events during its mouseout.
		if(getClosestInstanceFromNode(related)||isContainerMarkedAsRoot(related)){return;}}}if(!isOutEvent&&!isOverEvent){// Must not be a mouse or pointer in or out - ignoring.
		return;}var win;// TODO: why is this nullable in the types but we read from it?
		if(nativeEventTarget.window===nativeEventTarget){// `nativeEventTarget` is probably a window object.
		win=nativeEventTarget;}else {// TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
		var doc=nativeEventTarget.ownerDocument;if(doc){win=doc.defaultView||doc.parentWindow;}else {win=window;}}var from;var to;if(isOutEvent){var _related=nativeEvent.relatedTarget||nativeEvent.toElement;from=targetInst;to=_related?getClosestInstanceFromNode(_related):null;if(to!==null){var nearestMounted=getNearestMountedFiber(to);if(to!==nearestMounted||to.tag!==HostComponent&&to.tag!==HostText){to=null;}}}else {// Moving to a node from outside the window.
		from=null;to=targetInst;}if(from===to){// Nothing pertains to our managed components.
		return;}var SyntheticEventCtor=SyntheticMouseEvent;var leaveEventType='onMouseLeave';var enterEventType='onMouseEnter';var eventTypePrefix='mouse';if(domEventName==='pointerout'||domEventName==='pointerover'){SyntheticEventCtor=SyntheticPointerEvent;leaveEventType='onPointerLeave';enterEventType='onPointerEnter';eventTypePrefix='pointer';}var fromNode=from==null?win:getNodeFromInstance(from);var toNode=to==null?win:getNodeFromInstance(to);var leave=new SyntheticEventCtor(leaveEventType,eventTypePrefix+'leave',from,nativeEvent,nativeEventTarget);leave.target=fromNode;leave.relatedTarget=toNode;var enter=null;// We should only process this nativeEvent if we are processing
		// the first ancestor. Next time, we will ignore the event.
		var nativeTargetInst=getClosestInstanceFromNode(nativeEventTarget);if(nativeTargetInst===targetInst){var enterEvent=new SyntheticEventCtor(enterEventType,eventTypePrefix+'enter',to,nativeEvent,nativeEventTarget);enterEvent.target=toNode;enterEvent.relatedTarget=fromNode;enter=enterEvent;}accumulateEnterLeaveTwoPhaseListeners(dispatchQueue,leave,enter,from,to);}/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */function is(x,y){return x===y&&(x!==0||1/x===1/y)||x!==x&&y!==y// eslint-disable-line no-self-compare
		;}var objectIs=typeof Object.is==='function'?Object.is:is;/**
		 * Performs equality by iterating through keys on an object and returning false
		 * when any key has values which are not strictly equal between the arguments.
		 * Returns true when the values of all keys are strictly equal.
		 */function shallowEqual(objA,objB){if(objectIs(objA,objB)){return true;}if(typeof objA!=='object'||objA===null||typeof objB!=='object'||objB===null){return false;}var keysA=Object.keys(objA);var keysB=Object.keys(objB);if(keysA.length!==keysB.length){return false;}// Test for A's keys different from B.
		for(var i=0;i<keysA.length;i++){var currentKey=keysA[i];if(!hasOwnProperty.call(objB,currentKey)||!objectIs(objA[currentKey],objB[currentKey])){return false;}}return true;}/**
		 * Given any node return the first leaf node without children.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {DOMElement|DOMTextNode}
		 */function getLeafNode(node){while(node&&node.firstChild){node=node.firstChild;}return node;}/**
		 * Get the next sibling within a container. This will walk up the
		 * DOM if a node's siblings have been exhausted.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {?DOMElement|DOMTextNode}
		 */function getSiblingNode(node){while(node){if(node.nextSibling){return node.nextSibling;}node=node.parentNode;}}/**
		 * Get object describing the nodes which contain characters at offset.
		 *
		 * @param {DOMElement|DOMTextNode} root
		 * @param {number} offset
		 * @return {?object}
		 */function getNodeForCharacterOffset(root,offset){var node=getLeafNode(root);var nodeStart=0;var nodeEnd=0;while(node){if(node.nodeType===TEXT_NODE){nodeEnd=nodeStart+node.textContent.length;if(nodeStart<=offset&&nodeEnd>=offset){return {node:node,offset:offset-nodeStart};}nodeStart=nodeEnd;}node=getLeafNode(getSiblingNode(node));}}/**
		 * @param {DOMElement} outerNode
		 * @return {?object}
		 */function getOffsets(outerNode){var ownerDocument=outerNode.ownerDocument;var win=ownerDocument&&ownerDocument.defaultView||window;var selection=win.getSelection&&win.getSelection();if(!selection||selection.rangeCount===0){return null;}var anchorNode=selection.anchorNode,anchorOffset=selection.anchorOffset,focusNode=selection.focusNode,focusOffset=selection.focusOffset;// In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
		// up/down buttons on an <input type="number">. Anonymous divs do not seem to
		// expose properties, triggering a "Permission denied error" if any of its
		// properties are accessed. The only seemingly possible way to avoid erroring
		// is to access a property that typically works for non-anonymous divs and
		// catch any error that may otherwise arise. See
		// https://bugzilla.mozilla.org/show_bug.cgi?id=208427
		try{/* eslint-disable no-unused-expressions */anchorNode.nodeType;focusNode.nodeType;/* eslint-enable no-unused-expressions */}catch(e){return null;}return getModernOffsetsFromPoints(outerNode,anchorNode,anchorOffset,focusNode,focusOffset);}/**
		 * Returns {start, end} where `start` is the character/codepoint index of
		 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
		 * `end` is the index of (focusNode, focusOffset).
		 *
		 * Returns null if you pass in garbage input but we should probably just crash.
		 *
		 * Exported only for testing.
		 */function getModernOffsetsFromPoints(outerNode,anchorNode,anchorOffset,focusNode,focusOffset){var length=0;var start=-1;var end=-1;var indexWithinAnchor=0;var indexWithinFocus=0;var node=outerNode;var parentNode=null;outer:while(true){var next=null;while(true){if(node===anchorNode&&(anchorOffset===0||node.nodeType===TEXT_NODE)){start=length+anchorOffset;}if(node===focusNode&&(focusOffset===0||node.nodeType===TEXT_NODE)){end=length+focusOffset;}if(node.nodeType===TEXT_NODE){length+=node.nodeValue.length;}if((next=node.firstChild)===null){break;}// Moving from `node` to its first child `next`.
		parentNode=node;node=next;}while(true){if(node===outerNode){// If `outerNode` has children, this is always the second time visiting
		// it. If it has no children, this is still the first loop, and the only
		// valid selection is anchorNode and focusNode both equal to this node
		// and both offsets 0, in which case we will have handled above.
		break outer;}if(parentNode===anchorNode&&++indexWithinAnchor===anchorOffset){start=length;}if(parentNode===focusNode&&++indexWithinFocus===focusOffset){end=length;}if((next=node.nextSibling)!==null){break;}node=parentNode;parentNode=node.parentNode;}// Moving from `node` to its next sibling `next`.
		node=next;}if(start===-1||end===-1){// This should never happen. (Would happen if the anchor/focus nodes aren't
		// actually inside the passed-in node.)
		return null;}return {start:start,end:end};}/**
		 * In modern non-IE browsers, we can support both forward and backward
		 * selections.
		 *
		 * Note: IE10+ supports the Selection object, but it does not support
		 * the `extend` method, which means that even in modern IE, it's not possible
		 * to programmatically create a backward selection. Thus, for all IE
		 * versions, we use the old IE API to create our selections.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @param {object} offsets
		 */function setOffsets(node,offsets){var doc=node.ownerDocument||document;var win=doc&&doc.defaultView||window;// Edge fails with "Object expected" in some scenarios.
		// (For instance: TinyMCE editor used in a list component that supports pasting to add more,
		// fails when pasting 100+ items)
		if(!win.getSelection){return;}var selection=win.getSelection();var length=node.textContent.length;var start=Math.min(offsets.start,length);var end=offsets.end===undefined?start:Math.min(offsets.end,length);// IE 11 uses modern selection, but doesn't support the extend method.
		// Flip backward selections, so we can set with a single range.
		if(!selection.extend&&start>end){var temp=end;end=start;start=temp;}var startMarker=getNodeForCharacterOffset(node,start);var endMarker=getNodeForCharacterOffset(node,end);if(startMarker&&endMarker){if(selection.rangeCount===1&&selection.anchorNode===startMarker.node&&selection.anchorOffset===startMarker.offset&&selection.focusNode===endMarker.node&&selection.focusOffset===endMarker.offset){return;}var range=doc.createRange();range.setStart(startMarker.node,startMarker.offset);selection.removeAllRanges();if(start>end){selection.addRange(range);selection.extend(endMarker.node,endMarker.offset);}else {range.setEnd(endMarker.node,endMarker.offset);selection.addRange(range);}}}function isTextNode(node){return node&&node.nodeType===TEXT_NODE;}function containsNode(outerNode,innerNode){if(!outerNode||!innerNode){return false;}else if(outerNode===innerNode){return true;}else if(isTextNode(outerNode)){return false;}else if(isTextNode(innerNode)){return containsNode(outerNode,innerNode.parentNode);}else if('contains'in outerNode){return outerNode.contains(innerNode);}else if(outerNode.compareDocumentPosition){return !!(outerNode.compareDocumentPosition(innerNode)&16);}else {return false;}}function isInDocument(node){return node&&node.ownerDocument&&containsNode(node.ownerDocument.documentElement,node);}function isSameOriginFrame(iframe){try{// Accessing the contentDocument of a HTMLIframeElement can cause the browser
		// to throw, e.g. if it has a cross-origin src attribute.
		// Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
		// iframe.contentDocument.defaultView;
		// A safety way is to access one of the cross origin properties: Window or Location
		// Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
		// https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
		return typeof iframe.contentWindow.location.href==='string';}catch(err){return false;}}function getActiveElementDeep(){var win=window;var element=getActiveElement();while(element instanceof win.HTMLIFrameElement){if(isSameOriginFrame(element)){win=element.contentWindow;}else {return element;}element=getActiveElement(win.document);}return element;}/**
		 * @ReactInputSelection: React input selection module. Based on Selection.js,
		 * but modified to be suitable for react and has a couple of bug fixes (doesn't
		 * assume buttons have range selections allowed).
		 * Input selection module for React.
		 */ /**
		 * @hasSelectionCapabilities: we get the element types that support selection
		 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
		 * and `selectionEnd` rows.
		 */function hasSelectionCapabilities(elem){var nodeName=elem&&elem.nodeName&&elem.nodeName.toLowerCase();return nodeName&&(nodeName==='input'&&(elem.type==='text'||elem.type==='search'||elem.type==='tel'||elem.type==='url'||elem.type==='password')||nodeName==='textarea'||elem.contentEditable==='true');}function getSelectionInformation(){var focusedElem=getActiveElementDeep();return {focusedElem:focusedElem,selectionRange:hasSelectionCapabilities(focusedElem)?getSelection(focusedElem):null};}/**
		 * @restoreSelection: If any selection information was potentially lost,
		 * restore it. This is useful when performing operations that could remove dom
		 * nodes and place them back in, resulting in focus being lost.
		 */function restoreSelection(priorSelectionInformation){var curFocusedElem=getActiveElementDeep();var priorFocusedElem=priorSelectionInformation.focusedElem;var priorSelectionRange=priorSelectionInformation.selectionRange;if(curFocusedElem!==priorFocusedElem&&isInDocument(priorFocusedElem)){if(priorSelectionRange!==null&&hasSelectionCapabilities(priorFocusedElem)){setSelection(priorFocusedElem,priorSelectionRange);}// Focusing a node can change the scroll position, which is undesirable
		var ancestors=[];var ancestor=priorFocusedElem;while(ancestor=ancestor.parentNode){if(ancestor.nodeType===ELEMENT_NODE){ancestors.push({element:ancestor,left:ancestor.scrollLeft,top:ancestor.scrollTop});}}if(typeof priorFocusedElem.focus==='function'){priorFocusedElem.focus();}for(var i=0;i<ancestors.length;i++){var info=ancestors[i];info.element.scrollLeft=info.left;info.element.scrollTop=info.top;}}}/**
		 * @getSelection: Gets the selection bounds of a focused textarea, input or
		 * contentEditable node.
		 * -@input: Look up selection bounds of this input
		 * -@return {start: selectionStart, end: selectionEnd}
		 */function getSelection(input){var selection;if('selectionStart'in input){// Modern browser with input or textarea.
		selection={start:input.selectionStart,end:input.selectionEnd};}else {// Content editable or old IE textarea.
		selection=getOffsets(input);}return selection||{start:0,end:0};}/**
		 * @setSelection: Sets the selection bounds of a textarea or input and focuses
		 * the input.
		 * -@input     Set selection bounds of this input or textarea
		 * -@offsets   Object of same form that is returned from get*
		 */function setSelection(input,offsets){var start=offsets.start;var end=offsets.end;if(end===undefined){end=start;}if('selectionStart'in input){input.selectionStart=start;input.selectionEnd=Math.min(end,input.value.length);}else {setOffsets(input,offsets);}}var skipSelectionChangeEvent=canUseDOM&&'documentMode'in document&&document.documentMode<=11;function registerEvents$3(){registerTwoPhaseEvent('onSelect',['focusout','contextmenu','dragend','focusin','keydown','keyup','mousedown','mouseup','selectionchange']);}var activeElement$1=null;var activeElementInst$1=null;var lastSelection=null;var mouseDown=false;/**
		 * Get an object which is a unique representation of the current selection.
		 *
		 * The return value will not be consistent across nodes or browsers, but
		 * two identical selections on the same node will return identical objects.
		 */function getSelection$1(node){if('selectionStart'in node&&hasSelectionCapabilities(node)){return {start:node.selectionStart,end:node.selectionEnd};}else {var win=node.ownerDocument&&node.ownerDocument.defaultView||window;var selection=win.getSelection();return {anchorNode:selection.anchorNode,anchorOffset:selection.anchorOffset,focusNode:selection.focusNode,focusOffset:selection.focusOffset};}}/**
		 * Get document associated with the event target.
		 */function getEventTargetDocument(eventTarget){return eventTarget.window===eventTarget?eventTarget.document:eventTarget.nodeType===DOCUMENT_NODE?eventTarget:eventTarget.ownerDocument;}/**
		 * Poll selection to see whether it's changed.
		 *
		 * @param {object} nativeEvent
		 * @param {object} nativeEventTarget
		 * @return {?SyntheticEvent}
		 */function constructSelectEvent(dispatchQueue,nativeEvent,nativeEventTarget){// Ensure we have the right element, and that the user is not dragging a
		// selection (this matches native `select` event behavior). In HTML5, select
		// fires only on input and textarea thus if there's no focused element we
		// won't dispatch.
		var doc=getEventTargetDocument(nativeEventTarget);if(mouseDown||activeElement$1==null||activeElement$1!==getActiveElement(doc)){return;}// Only fire when selection has actually changed.
		var currentSelection=getSelection$1(activeElement$1);if(!lastSelection||!shallowEqual(lastSelection,currentSelection)){lastSelection=currentSelection;var listeners=accumulateTwoPhaseListeners(activeElementInst$1,'onSelect');if(listeners.length>0){var event=new SyntheticEvent('onSelect','select',null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:event,listeners:listeners});event.target=activeElement$1;}}}/**
		 * This plugin creates an `onSelect` event that normalizes select events
		 * across form elements.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - contentEditable
		 *
		 * This differs from native browser implementations in the following ways:
		 * - Fires on contentEditable fields as well as inputs.
		 * - Fires for collapsed selection.
		 * - Fires after user input.
		 */function extractEvents$3(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var targetNode=targetInst?getNodeFromInstance(targetInst):window;switch(domEventName){// Track the input node that has focus.
		case'focusin':if(isTextInputElement(targetNode)||targetNode.contentEditable==='true'){activeElement$1=targetNode;activeElementInst$1=targetInst;lastSelection=null;}break;case'focusout':activeElement$1=null;activeElementInst$1=null;lastSelection=null;break;// Don't fire the event while the user is dragging. This matches the
		// semantics of the native select event.
		case'mousedown':mouseDown=true;break;case'contextmenu':case'mouseup':case'dragend':mouseDown=false;constructSelectEvent(dispatchQueue,nativeEvent,nativeEventTarget);break;// Chrome and IE fire non-standard event when selection is changed (and
		// sometimes when it hasn't). IE's event fires out of order with respect
		// to key and input events on deletion, so we discard it.
		//
		// Firefox doesn't support selectionchange, so check selection status
		// after each key entry. The selection changes after keydown and before
		// keyup, but we check on keydown as well in the case of holding down a
		// key, when multiple keydown events are fired but only one keyup is.
		// This is also our approach for IE handling, for the reason above.
		case'selectionchange':if(skipSelectionChangeEvent){break;}// falls through
		case'keydown':case'keyup':constructSelectEvent(dispatchQueue,nativeEvent,nativeEventTarget);}}/**
		 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
		 *
		 * @param {string} styleProp
		 * @param {string} eventName
		 * @returns {object}
		 */function makePrefixMap(styleProp,eventName){var prefixes={};prefixes[styleProp.toLowerCase()]=eventName.toLowerCase();prefixes['Webkit'+styleProp]='webkit'+eventName;prefixes['Moz'+styleProp]='moz'+eventName;return prefixes;}/**
		 * A list of event names to a configurable list of vendor prefixes.
		 */var vendorPrefixes={animationend:makePrefixMap('Animation','AnimationEnd'),animationiteration:makePrefixMap('Animation','AnimationIteration'),animationstart:makePrefixMap('Animation','AnimationStart'),transitionend:makePrefixMap('Transition','TransitionEnd')};/**
		 * Event names that have already been detected and prefixed (if applicable).
		 */var prefixedEventNames={};/**
		 * Element to check for prefixes on.
		 */var style={};/**
		 * Bootstrap if a DOM exists.
		 */if(canUseDOM){style=document.createElement('div').style;// On some platforms, in particular some releases of Android 4.x,
		// the un-prefixed "animation" and "transition" properties are defined on the
		// style object but the events that fire will still be prefixed, so we need
		// to check if the un-prefixed events are usable, and if not remove them from the map.
		if(!('AnimationEvent'in window)){delete vendorPrefixes.animationend.animation;delete vendorPrefixes.animationiteration.animation;delete vendorPrefixes.animationstart.animation;}// Same as above
		if(!('TransitionEvent'in window)){delete vendorPrefixes.transitionend.transition;}}/**
		 * Attempts to determine the correct vendor prefixed event name.
		 *
		 * @param {string} eventName
		 * @returns {string}
		 */function getVendorPrefixedEventName(eventName){if(prefixedEventNames[eventName]){return prefixedEventNames[eventName];}else if(!vendorPrefixes[eventName]){return eventName;}var prefixMap=vendorPrefixes[eventName];for(var styleProp in prefixMap){if(prefixMap.hasOwnProperty(styleProp)&&styleProp in style){return prefixedEventNames[eventName]=prefixMap[styleProp];}}return eventName;}var ANIMATION_END=getVendorPrefixedEventName('animationend');var ANIMATION_ITERATION=getVendorPrefixedEventName('animationiteration');var ANIMATION_START=getVendorPrefixedEventName('animationstart');var TRANSITION_END=getVendorPrefixedEventName('transitionend');var topLevelEventsToReactNames=new Map();// NOTE: Capitalization is important in this list!
		//
		// E.g. it needs "pointerDown", not "pointerdown".
		// This is because we derive both React name ("onPointerDown")
		// and DOM name ("pointerdown") from the same list.
		//
		// Exceptions that don't match this convention are listed separately.
		//
		// prettier-ignore
		var simpleEventPluginEvents=['abort','auxClick','cancel','canPlay','canPlayThrough','click','close','contextMenu','copy','cut','drag','dragEnd','dragEnter','dragExit','dragLeave','dragOver','dragStart','drop','durationChange','emptied','encrypted','ended','error','gotPointerCapture','input','invalid','keyDown','keyPress','keyUp','load','loadedData','loadedMetadata','loadStart','lostPointerCapture','mouseDown','mouseMove','mouseOut','mouseOver','mouseUp','paste','pause','play','playing','pointerCancel','pointerDown','pointerMove','pointerOut','pointerOver','pointerUp','progress','rateChange','reset','resize','seeked','seeking','stalled','submit','suspend','timeUpdate','touchCancel','touchEnd','touchStart','volumeChange','scroll','toggle','touchMove','waiting','wheel'];function registerSimpleEvent(domEventName,reactName){topLevelEventsToReactNames.set(domEventName,reactName);registerTwoPhaseEvent(reactName,[domEventName]);}function registerSimpleEvents(){for(var i=0;i<simpleEventPluginEvents.length;i++){var eventName=simpleEventPluginEvents[i];var domEventName=eventName.toLowerCase();var capitalizedEvent=eventName[0].toUpperCase()+eventName.slice(1);registerSimpleEvent(domEventName,'on'+capitalizedEvent);}// Special cases where event names don't match.
		registerSimpleEvent(ANIMATION_END,'onAnimationEnd');registerSimpleEvent(ANIMATION_ITERATION,'onAnimationIteration');registerSimpleEvent(ANIMATION_START,'onAnimationStart');registerSimpleEvent('dblclick','onDoubleClick');registerSimpleEvent('focusin','onFocus');registerSimpleEvent('focusout','onBlur');registerSimpleEvent(TRANSITION_END,'onTransitionEnd');}function extractEvents$4(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){var reactName=topLevelEventsToReactNames.get(domEventName);if(reactName===undefined){return;}var SyntheticEventCtor=SyntheticEvent;var reactEventType=domEventName;switch(domEventName){case'keypress':// Firefox creates a keypress event for function keys too. This removes
		// the unwanted keypress events. Enter is however both printable and
		// non-printable. One would expect Tab to be as well (but it isn't).
		if(getEventCharCode(nativeEvent)===0){return;}/* falls through */case'keydown':case'keyup':SyntheticEventCtor=SyntheticKeyboardEvent;break;case'focusin':reactEventType='focus';SyntheticEventCtor=SyntheticFocusEvent;break;case'focusout':reactEventType='blur';SyntheticEventCtor=SyntheticFocusEvent;break;case'beforeblur':case'afterblur':SyntheticEventCtor=SyntheticFocusEvent;break;case'click':// Firefox creates a click event on right mouse clicks. This removes the
		// unwanted click events.
		if(nativeEvent.button===2){return;}/* falls through */case'auxclick':case'dblclick':case'mousedown':case'mousemove':case'mouseup':// TODO: Disabled elements should not respond to mouse events
		/* falls through */case'mouseout':case'mouseover':case'contextmenu':SyntheticEventCtor=SyntheticMouseEvent;break;case'drag':case'dragend':case'dragenter':case'dragexit':case'dragleave':case'dragover':case'dragstart':case'drop':SyntheticEventCtor=SyntheticDragEvent;break;case'touchcancel':case'touchend':case'touchmove':case'touchstart':SyntheticEventCtor=SyntheticTouchEvent;break;case ANIMATION_END:case ANIMATION_ITERATION:case ANIMATION_START:SyntheticEventCtor=SyntheticAnimationEvent;break;case TRANSITION_END:SyntheticEventCtor=SyntheticTransitionEvent;break;case'scroll':SyntheticEventCtor=SyntheticUIEvent;break;case'wheel':SyntheticEventCtor=SyntheticWheelEvent;break;case'copy':case'cut':case'paste':SyntheticEventCtor=SyntheticClipboardEvent;break;case'gotpointercapture':case'lostpointercapture':case'pointercancel':case'pointerdown':case'pointermove':case'pointerout':case'pointerover':case'pointerup':SyntheticEventCtor=SyntheticPointerEvent;break;}var inCapturePhase=(eventSystemFlags&IS_CAPTURE_PHASE)!==0;{// Some events don't bubble in the browser.
		// In the past, React has always bubbled them, but this can be surprising.
		// We're going to try aligning closer to the browser behavior by not bubbling
		// them in React either. We'll start by not bubbling onScroll, and then expand.
		var accumulateTargetOnly=!inCapturePhase&&// TODO: ideally, we'd eventually add all events from
		// nonDelegatedEvents list in DOMPluginEventSystem.
		// Then we can remove this special list.
		// This is a breaking change that can wait until React 18.
		domEventName==='scroll';var _listeners=accumulateSinglePhaseListeners(targetInst,reactName,nativeEvent.type,inCapturePhase,accumulateTargetOnly);if(_listeners.length>0){// Intentionally create event lazily.
		var _event=new SyntheticEventCtor(reactName,reactEventType,null,nativeEvent,nativeEventTarget);dispatchQueue.push({event:_event,listeners:_listeners});}}}// TODO: remove top-level side effect.
		registerSimpleEvents();registerEvents$2();registerEvents$1();registerEvents$3();registerEvents();function extractEvents$5(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags,targetContainer){// TODO: we should remove the concept of a "SimpleEventPlugin".
		// This is the basic functionality of the event system. All
		// the other plugins are essentially polyfills. So the plugin
		// should probably be inlined somewhere and have its logic
		// be core the to event system. This would potentially allow
		// us to ship builds of React without the polyfilled plugins below.
		extractEvents$4(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags);var shouldProcessPolyfillPlugins=(eventSystemFlags&SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS)===0;// We don't process these events unless we are in the
		// event's native "bubble" phase, which means that we're
		// not in the capture phase. That's because we emulate
		// the capture phase here still. This is a trade-off,
		// because in an ideal world we would not emulate and use
		// the phases properly, like we do with the SimpleEvent
		// plugin. However, the plugins below either expect
		// emulation (EnterLeave) or use state localized to that
		// plugin (BeforeInput, Change, Select). The state in
		// these modules complicates things, as you'll essentially
		// get the case where the capture phase event might change
		// state, only for the following bubble event to come in
		// later and not trigger anything as the state now
		// invalidates the heuristics of the event plugin. We
		// could alter all these plugins to work in such ways, but
		// that might cause other unknown side-effects that we
		// can't foresee right now.
		if(shouldProcessPolyfillPlugins){extractEvents$2(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractEvents$1(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractEvents$3(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);extractEvents(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget);}}// List of events that need to be individually attached to media elements.
		var mediaEventTypes=['abort','canplay','canplaythrough','durationchange','emptied','encrypted','ended','error','loadeddata','loadedmetadata','loadstart','pause','play','playing','progress','ratechange','resize','seeked','seeking','stalled','suspend','timeupdate','volumechange','waiting'];// We should not delegate these events to the container, but rather
		// set them on the actual target element itself. This is primarily
		// because these events do not consistently bubble in the DOM.
		var nonDelegatedEvents=new Set(['cancel','close','invalid','load','scroll','toggle'].concat(mediaEventTypes));function executeDispatch(event,listener,currentTarget){var type=event.type||'unknown-event';event.currentTarget=currentTarget;invokeGuardedCallbackAndCatchFirstError(type,listener,undefined,event);event.currentTarget=null;}function processDispatchQueueItemsInOrder(event,dispatchListeners,inCapturePhase){var previousInstance;if(inCapturePhase){for(var i=dispatchListeners.length-1;i>=0;i--){var _dispatchListeners$i=dispatchListeners[i],instance=_dispatchListeners$i.instance,currentTarget=_dispatchListeners$i.currentTarget,listener=_dispatchListeners$i.listener;if(instance!==previousInstance&&event.isPropagationStopped()){return;}executeDispatch(event,listener,currentTarget);previousInstance=instance;}}else {for(var _i=0;_i<dispatchListeners.length;_i++){var _dispatchListeners$_i=dispatchListeners[_i],_instance=_dispatchListeners$_i.instance,_currentTarget=_dispatchListeners$_i.currentTarget,_listener=_dispatchListeners$_i.listener;if(_instance!==previousInstance&&event.isPropagationStopped()){return;}executeDispatch(event,_listener,_currentTarget);previousInstance=_instance;}}}function processDispatchQueue(dispatchQueue,eventSystemFlags){var inCapturePhase=(eventSystemFlags&IS_CAPTURE_PHASE)!==0;for(var i=0;i<dispatchQueue.length;i++){var _dispatchQueue$i=dispatchQueue[i],event=_dispatchQueue$i.event,listeners=_dispatchQueue$i.listeners;processDispatchQueueItemsInOrder(event,listeners,inCapturePhase);//  event system doesn't use pooling.
		}// This would be a good time to rethrow if any of the event handlers threw.
		rethrowCaughtError();}function dispatchEventsForPlugins(domEventName,eventSystemFlags,nativeEvent,targetInst,targetContainer){var nativeEventTarget=getEventTarget(nativeEvent);var dispatchQueue=[];extractEvents$5(dispatchQueue,domEventName,targetInst,nativeEvent,nativeEventTarget,eventSystemFlags);processDispatchQueue(dispatchQueue,eventSystemFlags);}function listenToNonDelegatedEvent(domEventName,targetElement){{if(!nonDelegatedEvents.has(domEventName)){error('Did not expect a listenToNonDelegatedEvent() call for "%s". '+'This is a bug in React. Please file an issue.',domEventName);}}var isCapturePhaseListener=false;var listenerSet=getEventListenerSet(targetElement);var listenerSetKey=getListenerSetKey(domEventName,isCapturePhaseListener);if(!listenerSet.has(listenerSetKey)){addTrappedEventListener(targetElement,domEventName,IS_NON_DELEGATED,isCapturePhaseListener);listenerSet.add(listenerSetKey);}}function listenToNativeEvent(domEventName,isCapturePhaseListener,target){{if(nonDelegatedEvents.has(domEventName)&&!isCapturePhaseListener){error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. '+'This is a bug in React. Please file an issue.',domEventName);}}var eventSystemFlags=0;if(isCapturePhaseListener){eventSystemFlags|=IS_CAPTURE_PHASE;}addTrappedEventListener(target,domEventName,eventSystemFlags,isCapturePhaseListener);}// This is only used by createEventHandle when the
		var listeningMarker='_reactListening'+Math.random().toString(36).slice(2);function listenToAllSupportedEvents(rootContainerElement){if(!rootContainerElement[listeningMarker]){rootContainerElement[listeningMarker]=true;allNativeEvents.forEach(function(domEventName){// We handle selectionchange separately because it
		// doesn't bubble and needs to be on the document.
		if(domEventName!=='selectionchange'){if(!nonDelegatedEvents.has(domEventName)){listenToNativeEvent(domEventName,false,rootContainerElement);}listenToNativeEvent(domEventName,true,rootContainerElement);}});var ownerDocument=rootContainerElement.nodeType===DOCUMENT_NODE?rootContainerElement:rootContainerElement.ownerDocument;if(ownerDocument!==null){// The selectionchange event also needs deduplication
		// but it is attached to the document.
		if(!ownerDocument[listeningMarker]){ownerDocument[listeningMarker]=true;listenToNativeEvent('selectionchange',false,ownerDocument);}}}}function addTrappedEventListener(targetContainer,domEventName,eventSystemFlags,isCapturePhaseListener,isDeferredListenerForLegacyFBSupport){var listener=createEventListenerWrapperWithPriority(targetContainer,domEventName,eventSystemFlags);// If passive option is not supported, then the event will be
		// active and not passive.
		var isPassiveListener=undefined;if(passiveBrowserEventsSupported){// Browsers introduced an intervention, making these events
		// passive by default on document. React doesn't bind them
		// to document anymore, but changing this now would undo
		// the performance wins from the change. So we emulate
		// the existing behavior manually on the roots now.
		// https://github.com/facebook/react/issues/19651
		if(domEventName==='touchstart'||domEventName==='touchmove'||domEventName==='wheel'){isPassiveListener=true;}}targetContainer=targetContainer;	if(isCapturePhaseListener){if(isPassiveListener!==undefined){addEventCaptureListenerWithPassiveFlag(targetContainer,domEventName,listener,isPassiveListener);}else {addEventCaptureListener(targetContainer,domEventName,listener);}}else {if(isPassiveListener!==undefined){addEventBubbleListenerWithPassiveFlag(targetContainer,domEventName,listener,isPassiveListener);}else {addEventBubbleListener(targetContainer,domEventName,listener);}}}function isMatchingRootContainer(grandContainer,targetContainer){return grandContainer===targetContainer||grandContainer.nodeType===COMMENT_NODE&&grandContainer.parentNode===targetContainer;}function dispatchEventForPluginEventSystem(domEventName,eventSystemFlags,nativeEvent,targetInst,targetContainer){var ancestorInst=targetInst;if((eventSystemFlags&IS_EVENT_HANDLE_NON_MANAGED_NODE)===0&&(eventSystemFlags&IS_NON_DELEGATED)===0){var targetContainerNode=targetContainer;// If we are using the legacy FB support flag, we
		if(targetInst!==null){// The below logic attempts to work out if we need to change
		// the target fiber to a different ancestor. We had similar logic
		// in the legacy event system, except the big difference between
		// systems is that the modern event system now has an event listener
		// attached to each React Root and React Portal Root. Together,
		// the DOM nodes representing these roots are the "rootContainer".
		// To figure out which ancestor instance we should use, we traverse
		// up the fiber tree from the target instance and attempt to find
		// root boundaries that match that of our current "rootContainer".
		// If we find that "rootContainer", we find the parent fiber
		// sub-tree for that root and make that our ancestor instance.
		var node=targetInst;mainLoop:while(true){if(node===null){return;}var nodeTag=node.tag;if(nodeTag===HostRoot||nodeTag===HostPortal){var container=node.stateNode.containerInfo;if(isMatchingRootContainer(container,targetContainerNode)){break;}if(nodeTag===HostPortal){// The target is a portal, but it's not the rootContainer we're looking for.
		// Normally portals handle their own events all the way down to the root.
		// So we should be able to stop now. However, we don't know if this portal
		// was part of *our* root.
		var grandNode=node.return;while(grandNode!==null){var grandTag=grandNode.tag;if(grandTag===HostRoot||grandTag===HostPortal){var grandContainer=grandNode.stateNode.containerInfo;if(isMatchingRootContainer(grandContainer,targetContainerNode)){// This is the rootContainer we're looking for and we found it as
		// a parent of the Portal. That means we can ignore it because the
		// Portal will bubble through to us.
		return;}}grandNode=grandNode.return;}}// Now we need to find it's corresponding host fiber in the other
		// tree. To do this we can use getClosestInstanceFromNode, but we
		// need to validate that the fiber is a host instance, otherwise
		// we need to traverse up through the DOM till we find the correct
		// node that is from the other tree.
		while(container!==null){var parentNode=getClosestInstanceFromNode(container);if(parentNode===null){return;}var parentTag=parentNode.tag;if(parentTag===HostComponent||parentTag===HostText){node=ancestorInst=parentNode;continue mainLoop;}container=container.parentNode;}}node=node.return;}}}batchedUpdates(function(){return dispatchEventsForPlugins(domEventName,eventSystemFlags,nativeEvent,ancestorInst);});}function createDispatchListener(instance,listener,currentTarget){return {instance:instance,listener:listener,currentTarget:currentTarget};}function accumulateSinglePhaseListeners(targetFiber,reactName,nativeEventType,inCapturePhase,accumulateTargetOnly,nativeEvent){var captureName=reactName!==null?reactName+'Capture':null;var reactEventName=inCapturePhase?captureName:reactName;var listeners=[];var instance=targetFiber;var lastHostComponent=null;// Accumulate all instances and listeners via the target -> root path.
		while(instance!==null){var _instance2=instance,stateNode=_instance2.stateNode,tag=_instance2.tag;// Handle listeners that are on HostComponents (i.e. <div>)
		if(tag===HostComponent&&stateNode!==null){lastHostComponent=stateNode;// createEventHandle listeners
		if(reactEventName!==null){var listener=getListener(instance,reactEventName);if(listener!=null){listeners.push(createDispatchListener(instance,listener,lastHostComponent));}}}// If we are only accumulating events for the target, then we don't
		// continue to propagate through the React fiber tree to find other
		// listeners.
		if(accumulateTargetOnly){break;}// If we are processing the onBeforeBlur event, then we need to take
		instance=instance.return;}return listeners;}// We should only use this function for:
		// - BeforeInputEventPlugin
		// - ChangeEventPlugin
		// - SelectEventPlugin
		// This is because we only process these plugins
		// in the bubble phase, so we need to accumulate two
		// phase event listeners (via emulation).
		function accumulateTwoPhaseListeners(targetFiber,reactName){var captureName=reactName+'Capture';var listeners=[];var instance=targetFiber;// Accumulate all instances and listeners via the target -> root path.
		while(instance!==null){var _instance3=instance,stateNode=_instance3.stateNode,tag=_instance3.tag;// Handle listeners that are on HostComponents (i.e. <div>)
		if(tag===HostComponent&&stateNode!==null){var currentTarget=stateNode;var captureListener=getListener(instance,captureName);if(captureListener!=null){listeners.unshift(createDispatchListener(instance,captureListener,currentTarget));}var bubbleListener=getListener(instance,reactName);if(bubbleListener!=null){listeners.push(createDispatchListener(instance,bubbleListener,currentTarget));}}instance=instance.return;}return listeners;}function getParent(inst){if(inst===null){return null;}do{inst=inst.return;// TODO: If this is a HostRoot we might want to bail out.
		// That is depending on if we want nested subtrees (layers) to bubble
		// events to their parent. We could also go through parentNode on the
		// host node but that wouldn't work for React Native and doesn't let us
		// do the portal feature.
		}while(inst&&inst.tag!==HostComponent);if(inst){return inst;}return null;}/**
		 * Return the lowest common ancestor of A and B, or null if they are in
		 * different trees.
		 */function getLowestCommonAncestor(instA,instB){var nodeA=instA;var nodeB=instB;var depthA=0;for(var tempA=nodeA;tempA;tempA=getParent(tempA)){depthA++;}var depthB=0;for(var tempB=nodeB;tempB;tempB=getParent(tempB)){depthB++;}// If A is deeper, crawl up.
		while(depthA-depthB>0){nodeA=getParent(nodeA);depthA--;}// If B is deeper, crawl up.
		while(depthB-depthA>0){nodeB=getParent(nodeB);depthB--;}// Walk in lockstep until we find a match.
		var depth=depthA;while(depth--){if(nodeA===nodeB||nodeB!==null&&nodeA===nodeB.alternate){return nodeA;}nodeA=getParent(nodeA);nodeB=getParent(nodeB);}return null;}function accumulateEnterLeaveListenersForEvent(dispatchQueue,event,target,common,inCapturePhase){var registrationName=event._reactName;var listeners=[];var instance=target;while(instance!==null){if(instance===common){break;}var _instance4=instance,alternate=_instance4.alternate,stateNode=_instance4.stateNode,tag=_instance4.tag;if(alternate!==null&&alternate===common){break;}if(tag===HostComponent&&stateNode!==null){var currentTarget=stateNode;if(inCapturePhase){var captureListener=getListener(instance,registrationName);if(captureListener!=null){listeners.unshift(createDispatchListener(instance,captureListener,currentTarget));}}else if(!inCapturePhase){var bubbleListener=getListener(instance,registrationName);if(bubbleListener!=null){listeners.push(createDispatchListener(instance,bubbleListener,currentTarget));}}}instance=instance.return;}if(listeners.length!==0){dispatchQueue.push({event:event,listeners:listeners});}}// We should only use this function for:
		// - EnterLeaveEventPlugin
		// This is because we only process this plugin
		// in the bubble phase, so we need to accumulate two
		// phase event listeners.
		function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue,leaveEvent,enterEvent,from,to){var common=from&&to?getLowestCommonAncestor(from,to):null;if(from!==null){accumulateEnterLeaveListenersForEvent(dispatchQueue,leaveEvent,from,common,false);}if(to!==null&&enterEvent!==null){accumulateEnterLeaveListenersForEvent(dispatchQueue,enterEvent,to,common,true);}}function getListenerSetKey(domEventName,capture){return domEventName+"__"+(capture?'capture':'bubble');}var didWarnInvalidHydration=false;var DANGEROUSLY_SET_INNER_HTML='dangerouslySetInnerHTML';var SUPPRESS_CONTENT_EDITABLE_WARNING='suppressContentEditableWarning';var SUPPRESS_HYDRATION_WARNING='suppressHydrationWarning';var AUTOFOCUS='autoFocus';var CHILDREN='children';var STYLE='style';var HTML$1='__html';var warnedUnknownTags;var validatePropertiesInDevelopment;var warnForPropDifference;var warnForExtraAttributes;var warnForInvalidEventListener;var canDiffStyleForHydrationWarning;var normalizeHTML;{warnedUnknownTags={// There are working polyfills for <dialog>. Let people use it.
		dialog:true,// Electron ships a custom <webview> tag to display external web content in
		// an isolated frame and process.
		// This tag is not present in non Electron environments such as JSDom which
		// is often used for testing purposes.
		// @see https://electronjs.org/docs/api/webview-tag
		webview:true};validatePropertiesInDevelopment=function(type,props){validateProperties(type,props);validateProperties$1(type,props);validateProperties$2(type,props,{registrationNameDependencies:registrationNameDependencies,possibleRegistrationNames:possibleRegistrationNames});};// IE 11 parses & normalizes the style attribute as opposed to other
		// browsers. It adds spaces and sorts the properties in some
		// non-alphabetical order. Handling that would require sorting CSS
		// properties in the client & server versions or applying
		// `expectedStyle` to a temporary DOM node to read its `style` attribute
		// normalized. Since it only affects IE, we're skipping style warnings
		// in that browser completely in favor of doing all that work.
		// See https://github.com/facebook/react/issues/11807
		canDiffStyleForHydrationWarning=canUseDOM&&!document.documentMode;warnForPropDifference=function(propName,serverValue,clientValue){if(didWarnInvalidHydration){return;}var normalizedClientValue=normalizeMarkupForTextOrAttribute(clientValue);var normalizedServerValue=normalizeMarkupForTextOrAttribute(serverValue);if(normalizedServerValue===normalizedClientValue){return;}didWarnInvalidHydration=true;error('Prop `%s` did not match. Server: %s Client: %s',propName,JSON.stringify(normalizedServerValue),JSON.stringify(normalizedClientValue));};warnForExtraAttributes=function(attributeNames){if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;var names=[];attributeNames.forEach(function(name){names.push(name);});error('Extra attributes from the server: %s',names);};warnForInvalidEventListener=function(registrationName,listener){if(listener===false){error('Expected `%s` listener to be a function, instead got `false`.\n\n'+'If you used to conditionally omit it with %s={condition && value}, '+'pass %s={condition ? value : undefined} instead.',registrationName,registrationName,registrationName);}else {error('Expected `%s` listener to be a function, instead got a value of `%s` type.',registrationName,typeof listener);}};// Parse the HTML and read it back to normalize the HTML string so that it
		// can be used for comparison.
		normalizeHTML=function(parent,html){// We could have created a separate document here to avoid
		// re-initializing custom elements if they exist. But this breaks
		// how <noscript> is being handled. So we use the same document.
		// See the discussion in https://github.com/facebook/react/pull/11157.
		var testElement=parent.namespaceURI===HTML_NAMESPACE?parent.ownerDocument.createElement(parent.tagName):parent.ownerDocument.createElementNS(parent.namespaceURI,parent.tagName);testElement.innerHTML=html;return testElement.innerHTML;};}// HTML parsing normalizes CR and CRLF to LF.
		// It also can turn \u0000 into \uFFFD inside attributes.
		// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
		// If we have a mismatch, it might be caused by that.
		// We will still patch up in this case but not fire the warning.
		var NORMALIZE_NEWLINES_REGEX=/\r\n?/g;var NORMALIZE_NULL_AND_REPLACEMENT_REGEX=/\u0000|\uFFFD/g;function normalizeMarkupForTextOrAttribute(markup){{checkHtmlStringCoercion(markup);}var markupString=typeof markup==='string'?markup:''+markup;return markupString.replace(NORMALIZE_NEWLINES_REGEX,'\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX,'');}function checkForUnmatchedText(serverText,clientText,isConcurrentMode,shouldWarnDev){var normalizedClientText=normalizeMarkupForTextOrAttribute(clientText);var normalizedServerText=normalizeMarkupForTextOrAttribute(serverText);if(normalizedServerText===normalizedClientText){return;}if(shouldWarnDev){{if(!didWarnInvalidHydration){didWarnInvalidHydration=true;error('Text content did not match. Server: "%s" Client: "%s"',normalizedServerText,normalizedClientText);}}}if(isConcurrentMode&&enableClientRenderFallbackOnTextMismatch){// In concurrent roots, we throw when there's a text mismatch and revert to
		// client rendering, up to the nearest Suspense boundary.
		throw new Error('Text content does not match server-rendered HTML.');}}function getOwnerDocumentFromRootContainer(rootContainerElement){return rootContainerElement.nodeType===DOCUMENT_NODE?rootContainerElement:rootContainerElement.ownerDocument;}function noop(){}function trapClickOnNonInteractiveElement(node){// Mobile Safari does not fire properly bubble click events on
		// non-interactive elements, which means delegated click listeners do not
		// fire. The workaround for this bug involves attaching an empty click
		// listener on the target node.
		// https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
		// Just set it using the onclick property so that we don't have to manage any
		// bookkeeping for it. Not sure if we need to clear it when the listener is
		// removed.
		// TODO: Only do this for the relevant Safaris maybe?
		node.onclick=noop;}function setInitialDOMProperties(tag,domElement,rootContainerElement,nextProps,isCustomComponentTag){for(var propKey in nextProps){if(!nextProps.hasOwnProperty(propKey)){continue;}var nextProp=nextProps[propKey];if(propKey===STYLE){{if(nextProp){// Freeze the next style object so that we can assume it won't be
		// mutated. We have already warned for this in the past.
		Object.freeze(nextProp);}}// Relies on `updateStylesByID` not mutating `styleUpdates`.
		setValueForStyles(domElement,nextProp);}else if(propKey===DANGEROUSLY_SET_INNER_HTML){var nextHtml=nextProp?nextProp[HTML$1]:undefined;if(nextHtml!=null){setInnerHTML(domElement,nextHtml);}}else if(propKey===CHILDREN){if(typeof nextProp==='string'){// Avoid setting initial textContent when the text is empty. In IE11 setting
		// textContent on a <textarea> will cause the placeholder to not
		// show within the <textarea> until it has been focused and blurred again.
		// https://github.com/facebook/react/issues/6731#issuecomment-254874553
		var canSetTextContent=tag!=='textarea'||nextProp!=='';if(canSetTextContent){setTextContent(domElement,nextProp);}}else if(typeof nextProp==='number'){setTextContent(domElement,''+nextProp);}}else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING);else if(propKey===AUTOFOCUS);else if(registrationNameDependencies.hasOwnProperty(propKey)){if(nextProp!=null){if(typeof nextProp!=='function'){warnForInvalidEventListener(propKey,nextProp);}if(propKey==='onScroll'){listenToNonDelegatedEvent('scroll',domElement);}}}else if(nextProp!=null){setValueForProperty(domElement,propKey,nextProp,isCustomComponentTag);}}}function updateDOMProperties(domElement,updatePayload,wasCustomComponentTag,isCustomComponentTag){// TODO: Handle wasCustomComponentTag
		for(var i=0;i<updatePayload.length;i+=2){var propKey=updatePayload[i];var propValue=updatePayload[i+1];if(propKey===STYLE){setValueForStyles(domElement,propValue);}else if(propKey===DANGEROUSLY_SET_INNER_HTML){setInnerHTML(domElement,propValue);}else if(propKey===CHILDREN){setTextContent(domElement,propValue);}else {setValueForProperty(domElement,propKey,propValue,isCustomComponentTag);}}}function createElement(type,props,rootContainerElement,parentNamespace){var isCustomComponentTag;// We create tags in the namespace of their parent container, except HTML
		// tags get no namespace.
		var ownerDocument=getOwnerDocumentFromRootContainer(rootContainerElement);var domElement;var namespaceURI=parentNamespace;if(namespaceURI===HTML_NAMESPACE){namespaceURI=getIntrinsicNamespace(type);}if(namespaceURI===HTML_NAMESPACE){{isCustomComponentTag=isCustomComponent(type,props);// Should this check be gated by parent namespace? Not sure we want to
		// allow <SVG> or <mATH>.
		if(!isCustomComponentTag&&type!==type.toLowerCase()){error('<%s /> is using incorrect casing. '+'Use PascalCase for React components, '+'or lowercase for HTML elements.',type);}}if(type==='script'){// Create the script via .innerHTML so its "parser-inserted" flag is
		// set to true and it does not execute
		var div=ownerDocument.createElement('div');div.innerHTML='<script><'+'/script>';// eslint-disable-line
		// This is guaranteed to yield a script element.
		var firstChild=div.firstChild;domElement=div.removeChild(firstChild);}else if(typeof props.is==='string'){// $FlowIssue `createElement` should be updated for Web Components
		domElement=ownerDocument.createElement(type,{is:props.is});}else {// Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
		// See discussion in https://github.com/facebook/react/pull/6896
		// and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
		domElement=ownerDocument.createElement(type);// Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
		// attributes on `select`s needs to be added before `option`s are inserted.
		// This prevents:
		// - a bug where the `select` does not scroll to the correct option because singular
		//  `select` elements automatically pick the first item #13222
		// - a bug where the `select` set the first item as selected despite the `size` attribute #14239
		// See https://github.com/facebook/react/issues/13222
		// and https://github.com/facebook/react/issues/14239
		if(type==='select'){var node=domElement;if(props.multiple){node.multiple=true;}else if(props.size){// Setting a size greater than 1 causes a select to behave like `multiple=true`, where
		// it is possible that no option is selected.
		//
		// This is only necessary when a select in "single selection mode".
		node.size=props.size;}}}}else {domElement=ownerDocument.createElementNS(namespaceURI,type);}{if(namespaceURI===HTML_NAMESPACE){if(!isCustomComponentTag&&Object.prototype.toString.call(domElement)==='[object HTMLUnknownElement]'&&!hasOwnProperty.call(warnedUnknownTags,type)){warnedUnknownTags[type]=true;error('The tag <%s> is unrecognized in this browser. '+'If you meant to render a React component, start its name with '+'an uppercase letter.',type);}}}return domElement;}function createTextNode(text,rootContainerElement){return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);}function setInitialProperties(domElement,tag,rawProps,rootContainerElement){var isCustomComponentTag=isCustomComponent(tag,rawProps);{validatePropertiesInDevelopment(tag,rawProps);}// TODO: Make sure that we check isMounted before firing any of these events.
		var props;switch(tag){case'dialog':listenToNonDelegatedEvent('cancel',domElement);listenToNonDelegatedEvent('close',domElement);props=rawProps;break;case'iframe':case'object':case'embed':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the load event.
		listenToNonDelegatedEvent('load',domElement);props=rawProps;break;case'video':case'audio':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for all the media events.
		for(var i=0;i<mediaEventTypes.length;i++){listenToNonDelegatedEvent(mediaEventTypes[i],domElement);}props=rawProps;break;case'source':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the error event.
		listenToNonDelegatedEvent('error',domElement);props=rawProps;break;case'img':case'image':case'link':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for error and load events.
		listenToNonDelegatedEvent('error',domElement);listenToNonDelegatedEvent('load',domElement);props=rawProps;break;case'details':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the toggle event.
		listenToNonDelegatedEvent('toggle',domElement);props=rawProps;break;case'input':initWrapperState(domElement,rawProps);props=getHostProps(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'option':validateProps(domElement,rawProps);props=rawProps;break;case'select':initWrapperState$1(domElement,rawProps);props=getHostProps$1(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'textarea':initWrapperState$2(domElement,rawProps);props=getHostProps$2(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;default:props=rawProps;}assertValidProps(tag,props);setInitialDOMProperties(tag,domElement,rootContainerElement,props,isCustomComponentTag);switch(tag){case'input':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper(domElement,rawProps,false);break;case'textarea':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper$3(domElement);break;case'option':postMountWrapper$1(domElement,rawProps);break;case'select':postMountWrapper$2(domElement,rawProps);break;default:if(typeof props.onClick==='function'){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(domElement);}break;}}// Calculate the diff between the two objects.
		function diffProperties(domElement,tag,lastRawProps,nextRawProps,rootContainerElement){{validatePropertiesInDevelopment(tag,nextRawProps);}var updatePayload=null;var lastProps;var nextProps;switch(tag){case'input':lastProps=getHostProps(domElement,lastRawProps);nextProps=getHostProps(domElement,nextRawProps);updatePayload=[];break;case'select':lastProps=getHostProps$1(domElement,lastRawProps);nextProps=getHostProps$1(domElement,nextRawProps);updatePayload=[];break;case'textarea':lastProps=getHostProps$2(domElement,lastRawProps);nextProps=getHostProps$2(domElement,nextRawProps);updatePayload=[];break;default:lastProps=lastRawProps;nextProps=nextRawProps;if(typeof lastProps.onClick!=='function'&&typeof nextProps.onClick==='function'){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(domElement);}break;}assertValidProps(tag,nextProps);var propKey;var styleName;var styleUpdates=null;for(propKey in lastProps){if(nextProps.hasOwnProperty(propKey)||!lastProps.hasOwnProperty(propKey)||lastProps[propKey]==null){continue;}if(propKey===STYLE){var lastStyle=lastProps[propKey];for(styleName in lastStyle){if(lastStyle.hasOwnProperty(styleName)){if(!styleUpdates){styleUpdates={};}styleUpdates[styleName]='';}}}else if(propKey===DANGEROUSLY_SET_INNER_HTML||propKey===CHILDREN);else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING);else if(propKey===AUTOFOCUS);else if(registrationNameDependencies.hasOwnProperty(propKey)){// This is a special case. If any listener updates we need to ensure
		// that the "current" fiber pointer gets updated so we need a commit
		// to update this element.
		if(!updatePayload){updatePayload=[];}}else {// For all other deleted properties we add it to the queue. We use
		// the allowed property list in the commit phase instead.
		(updatePayload=updatePayload||[]).push(propKey,null);}}for(propKey in nextProps){var nextProp=nextProps[propKey];var lastProp=lastProps!=null?lastProps[propKey]:undefined;if(!nextProps.hasOwnProperty(propKey)||nextProp===lastProp||nextProp==null&&lastProp==null){continue;}if(propKey===STYLE){{if(nextProp){// Freeze the next style object so that we can assume it won't be
		// mutated. We have already warned for this in the past.
		Object.freeze(nextProp);}}if(lastProp){// Unset styles on `lastProp` but not on `nextProp`.
		for(styleName in lastProp){if(lastProp.hasOwnProperty(styleName)&&(!nextProp||!nextProp.hasOwnProperty(styleName))){if(!styleUpdates){styleUpdates={};}styleUpdates[styleName]='';}}// Update styles that changed since `lastProp`.
		for(styleName in nextProp){if(nextProp.hasOwnProperty(styleName)&&lastProp[styleName]!==nextProp[styleName]){if(!styleUpdates){styleUpdates={};}styleUpdates[styleName]=nextProp[styleName];}}}else {// Relies on `updateStylesByID` not mutating `styleUpdates`.
		if(!styleUpdates){if(!updatePayload){updatePayload=[];}updatePayload.push(propKey,styleUpdates);}styleUpdates=nextProp;}}else if(propKey===DANGEROUSLY_SET_INNER_HTML){var nextHtml=nextProp?nextProp[HTML$1]:undefined;var lastHtml=lastProp?lastProp[HTML$1]:undefined;if(nextHtml!=null){if(lastHtml!==nextHtml){(updatePayload=updatePayload||[]).push(propKey,nextHtml);}}}else if(propKey===CHILDREN){if(typeof nextProp==='string'||typeof nextProp==='number'){(updatePayload=updatePayload||[]).push(propKey,''+nextProp);}}else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING);else if(registrationNameDependencies.hasOwnProperty(propKey)){if(nextProp!=null){// We eagerly listen to this even though we haven't committed yet.
		if(typeof nextProp!=='function'){warnForInvalidEventListener(propKey,nextProp);}if(propKey==='onScroll'){listenToNonDelegatedEvent('scroll',domElement);}}if(!updatePayload&&lastProp!==nextProp){// This is a special case. If any listener updates we need to ensure
		// that the "current" props pointer gets updated so we need a commit
		// to update this element.
		updatePayload=[];}}else {// For any other property we always add it to the queue and then we
		// filter it out using the allowed property list during the commit.
		(updatePayload=updatePayload||[]).push(propKey,nextProp);}}if(styleUpdates){{validateShorthandPropertyCollisionInDev(styleUpdates,nextProps[STYLE]);}(updatePayload=updatePayload||[]).push(STYLE,styleUpdates);}return updatePayload;}// Apply the diff.
		function updateProperties(domElement,updatePayload,tag,lastRawProps,nextRawProps){// Update checked *before* name.
		// In the middle of an update, it is possible to have multiple checked.
		// When a checked radio tries to change name, browser makes another radio's checked false.
		if(tag==='input'&&nextRawProps.type==='radio'&&nextRawProps.name!=null){updateChecked(domElement,nextRawProps);}var wasCustomComponentTag=isCustomComponent(tag,lastRawProps);var isCustomComponentTag=isCustomComponent(tag,nextRawProps);// Apply the diff.
		updateDOMProperties(domElement,updatePayload,wasCustomComponentTag,isCustomComponentTag);// TODO: Ensure that an update gets scheduled if any of the special props
		// changed.
		switch(tag){case'input':// Update the wrapper around inputs *after* updating props. This has to
		// happen after `updateDOMProperties`. Otherwise HTML5 input validations
		// raise warnings and prevent the new value from being assigned.
		updateWrapper(domElement,nextRawProps);break;case'textarea':updateWrapper$1(domElement,nextRawProps);break;case'select':// <select> value update needs to occur after <option> children
		// reconciliation
		postUpdateWrapper(domElement,nextRawProps);break;}}function getPossibleStandardName(propName){{var lowerCasedName=propName.toLowerCase();if(!possibleStandardNames.hasOwnProperty(lowerCasedName)){return null;}return possibleStandardNames[lowerCasedName]||null;}}function diffHydratedProperties(domElement,tag,rawProps,parentNamespace,rootContainerElement,isConcurrentMode,shouldWarnDev){var isCustomComponentTag;var extraAttributeNames;{isCustomComponentTag=isCustomComponent(tag,rawProps);validatePropertiesInDevelopment(tag,rawProps);}// TODO: Make sure that we check isMounted before firing any of these events.
		switch(tag){case'dialog':listenToNonDelegatedEvent('cancel',domElement);listenToNonDelegatedEvent('close',domElement);break;case'iframe':case'object':case'embed':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the load event.
		listenToNonDelegatedEvent('load',domElement);break;case'video':case'audio':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for all the media events.
		for(var i=0;i<mediaEventTypes.length;i++){listenToNonDelegatedEvent(mediaEventTypes[i],domElement);}break;case'source':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the error event.
		listenToNonDelegatedEvent('error',domElement);break;case'img':case'image':case'link':// We listen to these events in case to ensure emulated bubble
		// listeners still fire for error and load events.
		listenToNonDelegatedEvent('error',domElement);listenToNonDelegatedEvent('load',domElement);break;case'details':// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the toggle event.
		listenToNonDelegatedEvent('toggle',domElement);break;case'input':initWrapperState(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'option':validateProps(domElement,rawProps);break;case'select':initWrapperState$1(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;case'textarea':initWrapperState$2(domElement,rawProps);// We listen to this event in case to ensure emulated bubble
		// listeners still fire for the invalid event.
		listenToNonDelegatedEvent('invalid',domElement);break;}assertValidProps(tag,rawProps);{extraAttributeNames=new Set();var attributes=domElement.attributes;for(var _i=0;_i<attributes.length;_i++){var name=attributes[_i].name.toLowerCase();switch(name){// Controlled attributes are not validated
		// TODO: Only ignore them on controlled tags.
		case'value':break;case'checked':break;case'selected':break;default:// Intentionally use the original name.
		// See discussion in https://github.com/facebook/react/pull/10676.
		extraAttributeNames.add(attributes[_i].name);}}}var updatePayload=null;for(var propKey in rawProps){if(!rawProps.hasOwnProperty(propKey)){continue;}var nextProp=rawProps[propKey];if(propKey===CHILDREN){// For text content children we compare against textContent. This
		// might match additional HTML that is hidden when we read it using
		// textContent. E.g. "foo" will match "f<span>oo</span>" but that still
		// satisfies our requirement. Our requirement is not to produce perfect
		// HTML and attributes. Ideally we should preserve structure but it's
		// ok not to if the visible content is still enough to indicate what
		// even listeners these nodes might be wired up to.
		// TODO: Warn if there is more than a single textNode as a child.
		// TODO: Should we use domElement.firstChild.nodeValue to compare?
		if(typeof nextProp==='string'){if(domElement.textContent!==nextProp){if(rawProps[SUPPRESS_HYDRATION_WARNING]!==true){checkForUnmatchedText(domElement.textContent,nextProp,isConcurrentMode,shouldWarnDev);}updatePayload=[CHILDREN,nextProp];}}else if(typeof nextProp==='number'){if(domElement.textContent!==''+nextProp){if(rawProps[SUPPRESS_HYDRATION_WARNING]!==true){checkForUnmatchedText(domElement.textContent,nextProp,isConcurrentMode,shouldWarnDev);}updatePayload=[CHILDREN,''+nextProp];}}}else if(registrationNameDependencies.hasOwnProperty(propKey)){if(nextProp!=null){if(typeof nextProp!=='function'){warnForInvalidEventListener(propKey,nextProp);}if(propKey==='onScroll'){listenToNonDelegatedEvent('scroll',domElement);}}}else if(shouldWarnDev&&true&&// Convince Flow we've calculated it (it's DEV-only in this method.)
		typeof isCustomComponentTag==='boolean'){// Validate that the properties correspond to their expected values.
		var serverValue=void 0;var propertyInfo=isCustomComponentTag&&enableCustomElementPropertySupport?null:getPropertyInfo(propKey);if(rawProps[SUPPRESS_HYDRATION_WARNING]===true);else if(propKey===SUPPRESS_CONTENT_EDITABLE_WARNING||propKey===SUPPRESS_HYDRATION_WARNING||// Controlled attributes are not validated
		// TODO: Only ignore them on controlled tags.
		propKey==='value'||propKey==='checked'||propKey==='selected');else if(propKey===DANGEROUSLY_SET_INNER_HTML){var serverHTML=domElement.innerHTML;var nextHtml=nextProp?nextProp[HTML$1]:undefined;if(nextHtml!=null){var expectedHTML=normalizeHTML(domElement,nextHtml);if(expectedHTML!==serverHTML){warnForPropDifference(propKey,serverHTML,expectedHTML);}}}else if(propKey===STYLE){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey);if(canDiffStyleForHydrationWarning){var expectedStyle=createDangerousStringForStyles(nextProp);serverValue=domElement.getAttribute('style');if(expectedStyle!==serverValue){warnForPropDifference(propKey,serverValue,expectedStyle);}}}else if(isCustomComponentTag&&!enableCustomElementPropertySupport){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey.toLowerCase());serverValue=getValueForAttribute(domElement,propKey,nextProp);if(nextProp!==serverValue){warnForPropDifference(propKey,serverValue,nextProp);}}else if(!shouldIgnoreAttribute(propKey,propertyInfo,isCustomComponentTag)&&!shouldRemoveAttribute(propKey,nextProp,propertyInfo,isCustomComponentTag)){var isMismatchDueToBadCasing=false;if(propertyInfo!==null){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propertyInfo.attributeName);serverValue=getValueForProperty(domElement,propKey,nextProp,propertyInfo);}else {var ownNamespace=parentNamespace;if(ownNamespace===HTML_NAMESPACE){ownNamespace=getIntrinsicNamespace(tag);}if(ownNamespace===HTML_NAMESPACE){// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey.toLowerCase());}else {var standardName=getPossibleStandardName(propKey);if(standardName!==null&&standardName!==propKey){// If an SVG prop is supplied with bad casing, it will
		// be successfully parsed from HTML, but will produce a mismatch
		// (and would be incorrectly rendered on the client).
		// However, we already warn about bad casing elsewhere.
		// So we'll skip the misleading extra mismatch warning in this case.
		isMismatchDueToBadCasing=true;// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(standardName);}// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.delete(propKey);}serverValue=getValueForAttribute(domElement,propKey,nextProp);}var dontWarnCustomElement=enableCustomElementPropertySupport;if(!dontWarnCustomElement&&nextProp!==serverValue&&!isMismatchDueToBadCasing){warnForPropDifference(propKey,serverValue,nextProp);}}}}{if(shouldWarnDev){if(// $FlowFixMe - Should be inferred as not undefined.
		extraAttributeNames.size>0&&rawProps[SUPPRESS_HYDRATION_WARNING]!==true){// $FlowFixMe - Should be inferred as not undefined.
		warnForExtraAttributes(extraAttributeNames);}}}switch(tag){case'input':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper(domElement,rawProps,true);break;case'textarea':// TODO: Make sure we check if this is still unmounted or do any clean
		// up necessary since we never stop tracking anymore.
		track(domElement);postMountWrapper$3(domElement);break;case'select':case'option':// For input and textarea we current always set the value property at
		// post mount to force it to diverge from attributes. However, for
		// option and select we don't quite do the same thing and select
		// is not resilient to the DOM state changing so we don't do that here.
		// TODO: Consider not doing this for input and textarea.
		break;default:if(typeof rawProps.onClick==='function'){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(domElement);}break;}return updatePayload;}function diffHydratedText(textNode,text,isConcurrentMode){var isDifferent=textNode.nodeValue!==text;return isDifferent;}function warnForDeletedHydratableElement(parentNode,child){{if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Did not expect server HTML to contain a <%s> in <%s>.',child.nodeName.toLowerCase(),parentNode.nodeName.toLowerCase());}}function warnForDeletedHydratableText(parentNode,child){{if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Did not expect server HTML to contain the text node "%s" in <%s>.',child.nodeValue,parentNode.nodeName.toLowerCase());}}function warnForInsertedHydratedElement(parentNode,tag,props){{if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Expected server HTML to contain a matching <%s> in <%s>.',tag,parentNode.nodeName.toLowerCase());}}function warnForInsertedHydratedText(parentNode,text){{if(text===''){// We expect to insert empty text nodes since they're not represented in
		// the HTML.
		// TODO: Remove this special case if we can just avoid inserting empty
		// text nodes.
		return;}if(didWarnInvalidHydration){return;}didWarnInvalidHydration=true;error('Expected server HTML to contain a matching text node for "%s" in <%s>.',text,parentNode.nodeName.toLowerCase());}}function restoreControlledState$3(domElement,tag,props){switch(tag){case'input':restoreControlledState(domElement,props);return;case'textarea':restoreControlledState$2(domElement,props);return;case'select':restoreControlledState$1(domElement,props);return;}}var validateDOMNesting=function(){};var updatedAncestorInfo=function(){};{// This validation code was written based on the HTML5 parsing spec:
		// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		//
		// Note: this does not catch all invalid nesting, nor does it try to (as it's
		// not clear what practical benefit doing so provides); instead, we warn only
		// for cases where the parser will give a parse tree differing from what React
		// intended. For example, <b><div></div></b> is invalid but we don't warn
		// because it still parses correctly; we do warn for other cases like nested
		// <p> tags where the beginning of the second element implicitly closes the
		// first, causing a confusing mess.
		// https://html.spec.whatwg.org/multipage/syntax.html#special
		var specialTags=['address','applet','area','article','aside','base','basefont','bgsound','blockquote','body','br','button','caption','center','col','colgroup','dd','details','dir','div','dl','dt','embed','fieldset','figcaption','figure','footer','form','frame','frameset','h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','iframe','img','input','isindex','li','link','listing','main','marquee','menu','menuitem','meta','nav','noembed','noframes','noscript','object','ol','p','param','plaintext','pre','script','section','select','source','style','summary','table','tbody','td','template','textarea','tfoot','th','thead','title','tr','track','ul','wbr','xmp'];// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		var inScopeTags=['applet','caption','html','table','td','th','marquee','object','template',// https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
		// TODO: Distinguish by namespace here -- for <title>, including it here
		// errs on the side of fewer warnings
		'foreignObject','desc','title'];// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
		var buttonScopeTags=inScopeTags.concat(['button']);// https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
		var impliedEndTags=['dd','dt','li','option','optgroup','p','rp','rt'];var emptyAncestorInfo={current:null,formTag:null,aTagInScope:null,buttonTagInScope:null,nobrTagInScope:null,pTagInButtonScope:null,listItemTagAutoclosing:null,dlItemTagAutoclosing:null};updatedAncestorInfo=function(oldInfo,tag){var ancestorInfo=assign({},oldInfo||emptyAncestorInfo);var info={tag:tag};if(inScopeTags.indexOf(tag)!==-1){ancestorInfo.aTagInScope=null;ancestorInfo.buttonTagInScope=null;ancestorInfo.nobrTagInScope=null;}if(buttonScopeTags.indexOf(tag)!==-1){ancestorInfo.pTagInButtonScope=null;}// See rules for 'li', 'dd', 'dt' start tags in
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		if(specialTags.indexOf(tag)!==-1&&tag!=='address'&&tag!=='div'&&tag!=='p'){ancestorInfo.listItemTagAutoclosing=null;ancestorInfo.dlItemTagAutoclosing=null;}ancestorInfo.current=info;if(tag==='form'){ancestorInfo.formTag=info;}if(tag==='a'){ancestorInfo.aTagInScope=info;}if(tag==='button'){ancestorInfo.buttonTagInScope=info;}if(tag==='nobr'){ancestorInfo.nobrTagInScope=info;}if(tag==='p'){ancestorInfo.pTagInButtonScope=info;}if(tag==='li'){ancestorInfo.listItemTagAutoclosing=info;}if(tag==='dd'||tag==='dt'){ancestorInfo.dlItemTagAutoclosing=info;}return ancestorInfo;};/**
		   * Returns whether
		   */var isTagValidWithParent=function(tag,parentTag){// First, let's check if we're in an unusual parsing mode...
		switch(parentTag){// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
		case'select':return tag==='option'||tag==='optgroup'||tag==='#text';case'optgroup':return tag==='option'||tag==='#text';// Strictly speaking, seeing an <option> doesn't mean we're in a <select>
		// but
		case'option':return tag==='#text';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
		// No special behavior since these rules fall back to "in body" mode for
		// all except special table nodes which cause bad parsing behavior anyway.
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
		case'tr':return tag==='th'||tag==='td'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
		case'tbody':case'thead':case'tfoot':return tag==='tr'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
		case'colgroup':return tag==='col'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
		case'table':return tag==='caption'||tag==='colgroup'||tag==='tbody'||tag==='tfoot'||tag==='thead'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
		case'head':return tag==='base'||tag==='basefont'||tag==='bgsound'||tag==='link'||tag==='meta'||tag==='title'||tag==='noscript'||tag==='noframes'||tag==='style'||tag==='script'||tag==='template';// https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
		case'html':return tag==='head'||tag==='body'||tag==='frameset';case'frameset':return tag==='frame';case'#document':return tag==='html';}// Probably in the "in body" parsing mode, so we outlaw only tag combos
		// where the parsing rules cause implicit opens or closes to be added.
		// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		switch(tag){case'h1':case'h2':case'h3':case'h4':case'h5':case'h6':return parentTag!=='h1'&&parentTag!=='h2'&&parentTag!=='h3'&&parentTag!=='h4'&&parentTag!=='h5'&&parentTag!=='h6';case'rp':case'rt':return impliedEndTags.indexOf(parentTag)===-1;case'body':case'caption':case'col':case'colgroup':case'frameset':case'frame':case'head':case'html':case'tbody':case'td':case'tfoot':case'th':case'thead':case'tr':// These tags are only valid with a few parents that have special child
		// parsing rules -- if we're down here, then none of those matched and
		// so we allow it only if we don't know what the parent is, as all other
		// cases are invalid.
		return parentTag==null;}return true;};/**
		   * Returns whether
		   */var findInvalidAncestorForTag=function(tag,ancestorInfo){switch(tag){case'address':case'article':case'aside':case'blockquote':case'center':case'details':case'dialog':case'dir':case'div':case'dl':case'fieldset':case'figcaption':case'figure':case'footer':case'header':case'hgroup':case'main':case'menu':case'nav':case'ol':case'p':case'section':case'summary':case'ul':case'pre':case'listing':case'table':case'hr':case'xmp':case'h1':case'h2':case'h3':case'h4':case'h5':case'h6':return ancestorInfo.pTagInButtonScope;case'form':return ancestorInfo.formTag||ancestorInfo.pTagInButtonScope;case'li':return ancestorInfo.listItemTagAutoclosing;case'dd':case'dt':return ancestorInfo.dlItemTagAutoclosing;case'button':return ancestorInfo.buttonTagInScope;case'a':// Spec says something about storing a list of markers, but it sounds
		// equivalent to this check.
		return ancestorInfo.aTagInScope;case'nobr':return ancestorInfo.nobrTagInScope;}return null;};var didWarn$1={};validateDOMNesting=function(childTag,childText,ancestorInfo){ancestorInfo=ancestorInfo||emptyAncestorInfo;var parentInfo=ancestorInfo.current;var parentTag=parentInfo&&parentInfo.tag;if(childText!=null){if(childTag!=null){error('validateDOMNesting: when childText is passed, childTag should be null');}childTag='#text';}var invalidParent=isTagValidWithParent(childTag,parentTag)?null:parentInfo;var invalidAncestor=invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);var invalidParentOrAncestor=invalidParent||invalidAncestor;if(!invalidParentOrAncestor){return;}var ancestorTag=invalidParentOrAncestor.tag;var warnKey=!!invalidParent+'|'+childTag+'|'+ancestorTag;if(didWarn$1[warnKey]){return;}didWarn$1[warnKey]=true;var tagDisplayName=childTag;var whitespaceInfo='';if(childTag==='#text'){if(/\S/.test(childText)){tagDisplayName='Text nodes';}else {tagDisplayName='Whitespace text nodes';whitespaceInfo=" Make sure you don't have any extra whitespace between tags on "+'each line of your source code.';}}else {tagDisplayName='<'+childTag+'>';}if(invalidParent){var info='';if(ancestorTag==='table'&&childTag==='tr'){info+=' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by '+'the browser.';}error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s',tagDisplayName,ancestorTag,whitespaceInfo,info);}else {error('validateDOMNesting(...): %s cannot appear as a descendant of '+'<%s>.',tagDisplayName,ancestorTag);}};}var SUPPRESS_HYDRATION_WARNING$1='suppressHydrationWarning';var SUSPENSE_START_DATA='$';var SUSPENSE_END_DATA='/$';var SUSPENSE_PENDING_START_DATA='$?';var SUSPENSE_FALLBACK_START_DATA='$!';var STYLE$1='style';var eventsEnabled=null;var selectionInformation=null;function getRootHostContext(rootContainerInstance){var type;var namespace;var nodeType=rootContainerInstance.nodeType;switch(nodeType){case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:{type=nodeType===DOCUMENT_NODE?'#document':'#fragment';var root=rootContainerInstance.documentElement;namespace=root?root.namespaceURI:getChildNamespace(null,'');break;}default:{var container=nodeType===COMMENT_NODE?rootContainerInstance.parentNode:rootContainerInstance;var ownNamespace=container.namespaceURI||null;type=container.tagName;namespace=getChildNamespace(ownNamespace,type);break;}}{var validatedTag=type.toLowerCase();var ancestorInfo=updatedAncestorInfo(null,validatedTag);return {namespace:namespace,ancestorInfo:ancestorInfo};}}function getChildHostContext(parentHostContext,type,rootContainerInstance){{var parentHostContextDev=parentHostContext;var namespace=getChildNamespace(parentHostContextDev.namespace,type);var ancestorInfo=updatedAncestorInfo(parentHostContextDev.ancestorInfo,type);return {namespace:namespace,ancestorInfo:ancestorInfo};}}function getPublicInstance(instance){return instance;}function prepareForCommit(containerInfo){eventsEnabled=isEnabled();selectionInformation=getSelectionInformation();var activeInstance=null;setEnabled(false);return activeInstance;}function resetAfterCommit(containerInfo){restoreSelection(selectionInformation);setEnabled(eventsEnabled);eventsEnabled=null;selectionInformation=null;}function createInstance(type,props,rootContainerInstance,hostContext,internalInstanceHandle){var parentNamespace;{// TODO: take namespace into account when validating.
		var hostContextDev=hostContext;validateDOMNesting(type,null,hostContextDev.ancestorInfo);if(typeof props.children==='string'||typeof props.children==='number'){var string=''+props.children;var ownAncestorInfo=updatedAncestorInfo(hostContextDev.ancestorInfo,type);validateDOMNesting(null,string,ownAncestorInfo);}parentNamespace=hostContextDev.namespace;}var domElement=createElement(type,props,rootContainerInstance,parentNamespace);precacheFiberNode(internalInstanceHandle,domElement);updateFiberProps(domElement,props);return domElement;}function appendInitialChild(parentInstance,child){parentInstance.appendChild(child);}function finalizeInitialChildren(domElement,type,props,rootContainerInstance,hostContext){setInitialProperties(domElement,type,props,rootContainerInstance);switch(type){case'button':case'input':case'select':case'textarea':return !!props.autoFocus;case'img':return true;default:return false;}}function prepareUpdate(domElement,type,oldProps,newProps,rootContainerInstance,hostContext){{var hostContextDev=hostContext;if(typeof newProps.children!==typeof oldProps.children&&(typeof newProps.children==='string'||typeof newProps.children==='number')){var string=''+newProps.children;var ownAncestorInfo=updatedAncestorInfo(hostContextDev.ancestorInfo,type);validateDOMNesting(null,string,ownAncestorInfo);}}return diffProperties(domElement,type,oldProps,newProps);}function shouldSetTextContent(type,props){return type==='textarea'||type==='noscript'||typeof props.children==='string'||typeof props.children==='number'||typeof props.dangerouslySetInnerHTML==='object'&&props.dangerouslySetInnerHTML!==null&&props.dangerouslySetInnerHTML.__html!=null;}function createTextInstance(text,rootContainerInstance,hostContext,internalInstanceHandle){{var hostContextDev=hostContext;validateDOMNesting(null,text,hostContextDev.ancestorInfo);}var textNode=createTextNode(text,rootContainerInstance);precacheFiberNode(internalInstanceHandle,textNode);return textNode;}function getCurrentEventPriority(){var currentEvent=window.event;if(currentEvent===undefined){return DefaultEventPriority;}return getEventPriority(currentEvent.type);}// if a component just imports ReactDOM (e.g. for findDOMNode).
		// Some environments might not have setTimeout or clearTimeout.
		var scheduleTimeout=typeof setTimeout==='function'?setTimeout:undefined;var cancelTimeout=typeof clearTimeout==='function'?clearTimeout:undefined;var noTimeout=-1;var localPromise=typeof Promise==='function'?Promise:undefined;// -------------------
		var scheduleMicrotask=typeof queueMicrotask==='function'?queueMicrotask:typeof localPromise!=='undefined'?function(callback){return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);}:scheduleTimeout;// TODO: Determine the best fallback here.
		function handleErrorInNextTick(error){setTimeout(function(){throw error;});}// -------------------
		function commitMount(domElement,type,newProps,internalInstanceHandle){// Despite the naming that might imply otherwise, this method only
		// fires if there is an `Update` effect scheduled during mounting.
		// This happens if `finalizeInitialChildren` returns `true` (which it
		// does to implement the `autoFocus` attribute on the client). But
		// there are also other cases when this might happen (such as patching
		// up text content during hydration mismatch). So we'll check this again.
		switch(type){case'button':case'input':case'select':case'textarea':if(newProps.autoFocus){domElement.focus();}return;case'img':{if(newProps.src){domElement.src=newProps.src;}return;}}}function commitUpdate(domElement,updatePayload,type,oldProps,newProps,internalInstanceHandle){// Apply the diff to the DOM node.
		updateProperties(domElement,updatePayload,type,oldProps,newProps);// Update the props handle so that we know which props are the ones with
		// with current event handlers.
		updateFiberProps(domElement,newProps);}function resetTextContent(domElement){setTextContent(domElement,'');}function commitTextUpdate(textInstance,oldText,newText){textInstance.nodeValue=newText;}function appendChild(parentInstance,child){parentInstance.appendChild(child);}function appendChildToContainer(container,child){var parentNode;if(container.nodeType===COMMENT_NODE){parentNode=container.parentNode;parentNode.insertBefore(child,container);}else {parentNode=container;parentNode.appendChild(child);}// This container might be used for a portal.
		// If something inside a portal is clicked, that click should bubble
		// through the React tree. However, on Mobile Safari the click would
		// never bubble through the *DOM* tree unless an ancestor with onclick
		// event exists. So we wouldn't see it and dispatch it.
		// This is why we ensure that non React root containers have inline onclick
		// defined.
		// https://github.com/facebook/react/issues/11918
		var reactRootContainer=container._reactRootContainer;if((reactRootContainer===null||reactRootContainer===undefined)&&parentNode.onclick===null){// TODO: This cast may not be sound for SVG, MathML or custom elements.
		trapClickOnNonInteractiveElement(parentNode);}}function insertBefore(parentInstance,child,beforeChild){parentInstance.insertBefore(child,beforeChild);}function insertInContainerBefore(container,child,beforeChild){if(container.nodeType===COMMENT_NODE){container.parentNode.insertBefore(child,beforeChild);}else {container.insertBefore(child,beforeChild);}}function removeChild(parentInstance,child){parentInstance.removeChild(child);}function removeChildFromContainer(container,child){if(container.nodeType===COMMENT_NODE){container.parentNode.removeChild(child);}else {container.removeChild(child);}}function clearSuspenseBoundary(parentInstance,suspenseInstance){var node=suspenseInstance;// Delete all nodes within this suspense boundary.
		// There might be nested nodes so we need to keep track of how
		// deep we are and only break out when we're back on top.
		var depth=0;do{var nextNode=node.nextSibling;parentInstance.removeChild(node);if(nextNode&&nextNode.nodeType===COMMENT_NODE){var data=nextNode.data;if(data===SUSPENSE_END_DATA){if(depth===0){parentInstance.removeChild(nextNode);// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(suspenseInstance);return;}else {depth--;}}else if(data===SUSPENSE_START_DATA||data===SUSPENSE_PENDING_START_DATA||data===SUSPENSE_FALLBACK_START_DATA){depth++;}}node=nextNode;}while(node);// TODO: Warn, we didn't find the end comment boundary.
		// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(suspenseInstance);}function clearSuspenseBoundaryFromContainer(container,suspenseInstance){if(container.nodeType===COMMENT_NODE){clearSuspenseBoundary(container.parentNode,suspenseInstance);}else if(container.nodeType===ELEMENT_NODE){clearSuspenseBoundary(container,suspenseInstance);}// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(container);}function hideInstance(instance){// TODO: Does this work for all element types? What about MathML? Should we
		// pass host context to this method?
		instance=instance;var style=instance.style;if(typeof style.setProperty==='function'){style.setProperty('display','none','important');}else {style.display='none';}}function hideTextInstance(textInstance){textInstance.nodeValue='';}function unhideInstance(instance,props){instance=instance;var styleProp=props[STYLE$1];var display=styleProp!==undefined&&styleProp!==null&&styleProp.hasOwnProperty('display')?styleProp.display:null;instance.style.display=dangerousStyleValue('display',display);}function unhideTextInstance(textInstance,text){textInstance.nodeValue=text;}function clearContainer(container){if(container.nodeType===ELEMENT_NODE){container.textContent='';}else if(container.nodeType===DOCUMENT_NODE){if(container.documentElement){container.removeChild(container.documentElement);}}}// -------------------
		function canHydrateInstance(instance,type,props){if(instance.nodeType!==ELEMENT_NODE||type.toLowerCase()!==instance.nodeName.toLowerCase()){return null;}// This has now been refined to an element node.
		return instance;}function canHydrateTextInstance(instance,text){if(text===''||instance.nodeType!==TEXT_NODE){// Empty strings are not parsed by HTML so there won't be a correct match here.
		return null;}// This has now been refined to a text node.
		return instance;}function canHydrateSuspenseInstance(instance){if(instance.nodeType!==COMMENT_NODE){// Empty strings are not parsed by HTML so there won't be a correct match here.
		return null;}// This has now been refined to a suspense node.
		return instance;}function isSuspenseInstancePending(instance){return instance.data===SUSPENSE_PENDING_START_DATA;}function isSuspenseInstanceFallback(instance){return instance.data===SUSPENSE_FALLBACK_START_DATA;}function getSuspenseInstanceFallbackErrorDetails(instance){var dataset=instance.nextSibling&&instance.nextSibling.dataset;var digest,message,stack;if(dataset){digest=dataset.dgst;{message=dataset.msg;stack=dataset.stck;}}{return {message:message,digest:digest,stack:stack};}// let value = {message: undefined, hash: undefined};
		// const nextSibling = instance.nextSibling;
		// if (nextSibling) {
		//   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
		//   value.message = dataset.msg;
		//   value.hash = dataset.hash;
		//   if (true) {
		//     value.stack = dataset.stack;
		//   }
		// }
		// return value;
		}function registerSuspenseInstanceRetry(instance,callback){instance._reactRetry=callback;}function getNextHydratable(node){// Skip non-hydratable nodes.
		for(;node!=null;node=node.nextSibling){var nodeType=node.nodeType;if(nodeType===ELEMENT_NODE||nodeType===TEXT_NODE){break;}if(nodeType===COMMENT_NODE){var nodeData=node.data;if(nodeData===SUSPENSE_START_DATA||nodeData===SUSPENSE_FALLBACK_START_DATA||nodeData===SUSPENSE_PENDING_START_DATA){break;}if(nodeData===SUSPENSE_END_DATA){return null;}}}return node;}function getNextHydratableSibling(instance){return getNextHydratable(instance.nextSibling);}function getFirstHydratableChild(parentInstance){return getNextHydratable(parentInstance.firstChild);}function getFirstHydratableChildWithinContainer(parentContainer){return getNextHydratable(parentContainer.firstChild);}function getFirstHydratableChildWithinSuspenseInstance(parentInstance){return getNextHydratable(parentInstance.nextSibling);}function hydrateInstance(instance,type,props,rootContainerInstance,hostContext,internalInstanceHandle,shouldWarnDev){precacheFiberNode(internalInstanceHandle,instance);// TODO: Possibly defer this until the commit phase where all the events
		// get attached.
		updateFiberProps(instance,props);var parentNamespace;{var hostContextDev=hostContext;parentNamespace=hostContextDev.namespace;}// TODO: Temporary hack to check if we're in a concurrent root. We can delete
		// when the legacy root API is removed.
		var isConcurrentMode=(internalInstanceHandle.mode&ConcurrentMode)!==NoMode;return diffHydratedProperties(instance,type,props,parentNamespace,rootContainerInstance,isConcurrentMode,shouldWarnDev);}function hydrateTextInstance(textInstance,text,internalInstanceHandle,shouldWarnDev){precacheFiberNode(internalInstanceHandle,textInstance);// TODO: Temporary hack to check if we're in a concurrent root. We can delete
		// when the legacy root API is removed.
		(internalInstanceHandle.mode&ConcurrentMode)!==NoMode;return diffHydratedText(textInstance,text);}function hydrateSuspenseInstance(suspenseInstance,internalInstanceHandle){precacheFiberNode(internalInstanceHandle,suspenseInstance);}function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance){var node=suspenseInstance.nextSibling;// Skip past all nodes within this suspense boundary.
		// There might be nested nodes so we need to keep track of how
		// deep we are and only break out when we're back on top.
		var depth=0;while(node){if(node.nodeType===COMMENT_NODE){var data=node.data;if(data===SUSPENSE_END_DATA){if(depth===0){return getNextHydratableSibling(node);}else {depth--;}}else if(data===SUSPENSE_START_DATA||data===SUSPENSE_FALLBACK_START_DATA||data===SUSPENSE_PENDING_START_DATA){depth++;}}node=node.nextSibling;}// TODO: Warn, we didn't find the end comment boundary.
		return null;}// Returns the SuspenseInstance if this node is a direct child of a
		// SuspenseInstance. I.e. if its previous sibling is a Comment with
		// SUSPENSE_x_START_DATA. Otherwise, null.
		function getParentSuspenseInstance(targetInstance){var node=targetInstance.previousSibling;// Skip past all nodes within this suspense boundary.
		// There might be nested nodes so we need to keep track of how
		// deep we are and only break out when we're back on top.
		var depth=0;while(node){if(node.nodeType===COMMENT_NODE){var data=node.data;if(data===SUSPENSE_START_DATA||data===SUSPENSE_FALLBACK_START_DATA||data===SUSPENSE_PENDING_START_DATA){if(depth===0){return node;}else {depth--;}}else if(data===SUSPENSE_END_DATA){depth++;}}node=node.previousSibling;}return null;}function commitHydratedContainer(container){// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(container);}function commitHydratedSuspenseInstance(suspenseInstance){// Retry if any event replaying was blocked on this.
		retryIfBlockedOn(suspenseInstance);}function shouldDeleteUnhydratedTailInstances(parentType){return parentType!=='head'&&parentType!=='body';}function didNotMatchHydratedContainerTextInstance(parentContainer,textInstance,text,isConcurrentMode){var shouldWarnDev=true;checkForUnmatchedText(textInstance.nodeValue,text,isConcurrentMode,shouldWarnDev);}function didNotMatchHydratedTextInstance(parentType,parentProps,parentInstance,textInstance,text,isConcurrentMode){if(parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){var shouldWarnDev=true;checkForUnmatchedText(textInstance.nodeValue,text,isConcurrentMode,shouldWarnDev);}}function didNotHydrateInstanceWithinContainer(parentContainer,instance){{if(instance.nodeType===ELEMENT_NODE){warnForDeletedHydratableElement(parentContainer,instance);}else if(instance.nodeType===COMMENT_NODE);else {warnForDeletedHydratableText(parentContainer,instance);}}}function didNotHydrateInstanceWithinSuspenseInstance(parentInstance,instance){{// $FlowFixMe: Only Element or Document can be parent nodes.
		var parentNode=parentInstance.parentNode;if(parentNode!==null){if(instance.nodeType===ELEMENT_NODE){warnForDeletedHydratableElement(parentNode,instance);}else if(instance.nodeType===COMMENT_NODE);else {warnForDeletedHydratableText(parentNode,instance);}}}}function didNotHydrateInstance(parentType,parentProps,parentInstance,instance,isConcurrentMode){{if(isConcurrentMode||parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){if(instance.nodeType===ELEMENT_NODE){warnForDeletedHydratableElement(parentInstance,instance);}else if(instance.nodeType===COMMENT_NODE);else {warnForDeletedHydratableText(parentInstance,instance);}}}}function didNotFindHydratableInstanceWithinContainer(parentContainer,type,props){{warnForInsertedHydratedElement(parentContainer,type);}}function didNotFindHydratableTextInstanceWithinContainer(parentContainer,text){{warnForInsertedHydratedText(parentContainer,text);}}function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance,type,props){{// $FlowFixMe: Only Element or Document can be parent nodes.
		var parentNode=parentInstance.parentNode;if(parentNode!==null)warnForInsertedHydratedElement(parentNode,type);}}function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance,text){{// $FlowFixMe: Only Element or Document can be parent nodes.
		var parentNode=parentInstance.parentNode;if(parentNode!==null)warnForInsertedHydratedText(parentNode,text);}}function didNotFindHydratableInstance(parentType,parentProps,parentInstance,type,props,isConcurrentMode){{if(isConcurrentMode||parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){warnForInsertedHydratedElement(parentInstance,type);}}}function didNotFindHydratableTextInstance(parentType,parentProps,parentInstance,text,isConcurrentMode){{if(isConcurrentMode||parentProps[SUPPRESS_HYDRATION_WARNING$1]!==true){warnForInsertedHydratedText(parentInstance,text);}}}function errorHydratingContainer(parentContainer){{// TODO: This gets logged by onRecoverableError, too, so we should be
		// able to remove it.
		error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.',parentContainer.nodeName.toLowerCase());}}function preparePortalMount(portalInstance){listenToAllSupportedEvents(portalInstance);}var randomKey=Math.random().toString(36).slice(2);var internalInstanceKey='__reactFiber$'+randomKey;var internalPropsKey='__reactProps$'+randomKey;var internalContainerInstanceKey='__reactContainer$'+randomKey;var internalEventHandlersKey='__reactEvents$'+randomKey;var internalEventHandlerListenersKey='__reactListeners$'+randomKey;var internalEventHandlesSetKey='__reactHandles$'+randomKey;function detachDeletedInstance(node){// TODO: This function is only called on host components. I don't think all of
		// these fields are relevant.
		delete node[internalInstanceKey];delete node[internalPropsKey];delete node[internalEventHandlersKey];delete node[internalEventHandlerListenersKey];delete node[internalEventHandlesSetKey];}function precacheFiberNode(hostInst,node){node[internalInstanceKey]=hostInst;}function markContainerAsRoot(hostRoot,node){node[internalContainerInstanceKey]=hostRoot;}function unmarkContainerAsRoot(node){node[internalContainerInstanceKey]=null;}function isContainerMarkedAsRoot(node){return !!node[internalContainerInstanceKey];}// Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
		// If the target node is part of a hydrated or not yet rendered subtree, then
		// this may also return a SuspenseComponent or HostRoot to indicate that.
		// Conceptually the HostRoot fiber is a child of the Container node. So if you
		// pass the Container node as the targetNode, you will not actually get the
		// HostRoot back. To get to the HostRoot, you need to pass a child of it.
		// The same thing applies to Suspense boundaries.
		function getClosestInstanceFromNode(targetNode){var targetInst=targetNode[internalInstanceKey];if(targetInst){// Don't return HostRoot or SuspenseComponent here.
		return targetInst;}// If the direct event target isn't a React owned DOM node, we need to look
		// to see if one of its parents is a React owned DOM node.
		var parentNode=targetNode.parentNode;while(parentNode){// We'll check if this is a container root that could include
		// React nodes in the future. We need to check this first because
		// if we're a child of a dehydrated container, we need to first
		// find that inner container before moving on to finding the parent
		// instance. Note that we don't check this field on  the targetNode
		// itself because the fibers are conceptually between the container
		// node and the first child. It isn't surrounding the container node.
		// If it's not a container, we check if it's an instance.
		targetInst=parentNode[internalContainerInstanceKey]||parentNode[internalInstanceKey];if(targetInst){// Since this wasn't the direct target of the event, we might have
		// stepped past dehydrated DOM nodes to get here. However they could
		// also have been non-React nodes. We need to answer which one.
		// If we the instance doesn't have any children, then there can't be
		// a nested suspense boundary within it. So we can use this as a fast
		// bailout. Most of the time, when people add non-React children to
		// the tree, it is using a ref to a child-less DOM node.
		// Normally we'd only need to check one of the fibers because if it
		// has ever gone from having children to deleting them or vice versa
		// it would have deleted the dehydrated boundary nested inside already.
		// However, since the HostRoot starts out with an alternate it might
		// have one on the alternate so we need to check in case this was a
		// root.
		var alternate=targetInst.alternate;if(targetInst.child!==null||alternate!==null&&alternate.child!==null){// Next we need to figure out if the node that skipped past is
		// nested within a dehydrated boundary and if so, which one.
		var suspenseInstance=getParentSuspenseInstance(targetNode);while(suspenseInstance!==null){// We found a suspense instance. That means that we haven't
		// hydrated it yet. Even though we leave the comments in the
		// DOM after hydrating, and there are boundaries in the DOM
		// that could already be hydrated, we wouldn't have found them
		// through this pass since if the target is hydrated it would
		// have had an internalInstanceKey on it.
		// Let's get the fiber associated with the SuspenseComponent
		// as the deepest instance.
		var targetSuspenseInst=suspenseInstance[internalInstanceKey];if(targetSuspenseInst){return targetSuspenseInst;}// If we don't find a Fiber on the comment, it might be because
		// we haven't gotten to hydrate it yet. There might still be a
		// parent boundary that hasn't above this one so we need to find
		// the outer most that is known.
		suspenseInstance=getParentSuspenseInstance(suspenseInstance);// If we don't find one, then that should mean that the parent
		// host component also hasn't hydrated yet. We can return it
		// below since it will bail out on the isMounted check later.
		}}return targetInst;}targetNode=parentNode;parentNode=targetNode.parentNode;}return null;}/**
		 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
		 * instance, or null if the node was not rendered by this React.
		 */function getInstanceFromNode(node){var inst=node[internalInstanceKey]||node[internalContainerInstanceKey];if(inst){if(inst.tag===HostComponent||inst.tag===HostText||inst.tag===SuspenseComponent||inst.tag===HostRoot){return inst;}else {return null;}}return null;}/**
		 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
		 * DOM node.
		 */function getNodeFromInstance(inst){if(inst.tag===HostComponent||inst.tag===HostText){// In Fiber this, is just the state node right now. We assume it will be
		// a host component or host text.
		return inst.stateNode;}// Without this first invariant, passing a non-DOM-component triggers the next
		// invariant for a missing parent, which is super confusing.
		throw new Error('getNodeFromInstance: Invalid argument.');}function getFiberCurrentPropsFromNode(node){return node[internalPropsKey]||null;}function updateFiberProps(node,props){node[internalPropsKey]=props;}function getEventListenerSet(node){var elementListenerSet=node[internalEventHandlersKey];if(elementListenerSet===undefined){elementListenerSet=node[internalEventHandlersKey]=new Set();}return elementListenerSet;}var loggedTypeFailures={};var ReactDebugCurrentFrame$1=ReactSharedInternals.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(element){{if(element){var owner=element._owner;var stack=describeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null);ReactDebugCurrentFrame$1.setExtraStackFrame(stack);}else {ReactDebugCurrentFrame$1.setExtraStackFrame(null);}}}function checkPropTypes(typeSpecs,values,location,componentName,element){{// $FlowFixMe This is okay but Flow doesn't know it.
		var has=Function.call.bind(hasOwnProperty);for(var typeSpecName in typeSpecs){if(has(typeSpecs,typeSpecName)){var error$1=void 0;// Prop type validation may throw. In case they do, we don't want to
		// fail the render phase where it didn't fail before. So we log it.
		// After these have been cleaned up, we'll let them throw.
		try{// This is intentionally an invariant that gets caught. It's the same
		// behavior as without this statement except with a better message.
		if(typeof typeSpecs[typeSpecName]!=='function'){// eslint-disable-next-line react-internal/prod-error-codes
		var err=Error((componentName||'React class')+': '+location+' type `'+typeSpecName+'` is invalid; '+'it must be a function, usually from the `prop-types` package, but received `'+typeof typeSpecs[typeSpecName]+'`.'+'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');err.name='Invariant Violation';throw err;}error$1=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');}catch(ex){error$1=ex;}if(error$1&&!(error$1 instanceof Error)){setCurrentlyValidatingElement(element);error('%s: type specification of %s'+' `%s` is invalid; the type checker '+'function must return `null` or an `Error` but returned a %s. '+'You may have forgotten to pass an argument to the type checker '+'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and '+'shape all require an argument).',componentName||'React class',location,typeSpecName,typeof error$1);setCurrentlyValidatingElement(null);}if(error$1 instanceof Error&&!(error$1.message in loggedTypeFailures)){// Only monitor this failure once because there tends to be a lot of the
		// same error.
		loggedTypeFailures[error$1.message]=true;setCurrentlyValidatingElement(element);error('Failed %s type: %s',location,error$1.message);setCurrentlyValidatingElement(null);}}}}}var valueStack=[];var fiberStack;{fiberStack=[];}var index=-1;function createCursor(defaultValue){return {current:defaultValue};}function pop(cursor,fiber){if(index<0){{error('Unexpected pop.');}return;}{if(fiber!==fiberStack[index]){error('Unexpected Fiber popped.');}}cursor.current=valueStack[index];valueStack[index]=null;{fiberStack[index]=null;}index--;}function push(cursor,value,fiber){index++;valueStack[index]=cursor.current;{fiberStack[index]=fiber;}cursor.current=value;}var warnedAboutMissingGetChildContext;{warnedAboutMissingGetChildContext={};}var emptyContextObject={};{Object.freeze(emptyContextObject);}// A cursor to the current merged context object on the stack.
		var contextStackCursor=createCursor(emptyContextObject);// A cursor to a boolean indicating whether the context has changed.
		var didPerformWorkStackCursor=createCursor(false);// Keep track of the previous context object that was on the stack.
		// We use this to get access to the parent context after we have already
		// pushed the next context provider, and now need to merge their contexts.
		var previousContext=emptyContextObject;function getUnmaskedContext(workInProgress,Component,didPushOwnContextIfProvider){{if(didPushOwnContextIfProvider&&isContextProvider(Component)){// If the fiber is a context provider itself, when we read its context
		// we may have already pushed its own child context on the stack. A context
		// provider should not "see" its own child context. Therefore we read the
		// previous (parent) context instead for a context provider.
		return previousContext;}return contextStackCursor.current;}}function cacheContext(workInProgress,unmaskedContext,maskedContext){{var instance=workInProgress.stateNode;instance.__reactInternalMemoizedUnmaskedChildContext=unmaskedContext;instance.__reactInternalMemoizedMaskedChildContext=maskedContext;}}function getMaskedContext(workInProgress,unmaskedContext){{var type=workInProgress.type;var contextTypes=type.contextTypes;if(!contextTypes){return emptyContextObject;}// Avoid recreating masked context unless unmasked context has changed.
		// Failing to do this will result in unnecessary calls to componentWillReceiveProps.
		// This may trigger infinite loops if componentWillReceiveProps calls setState.
		var instance=workInProgress.stateNode;if(instance&&instance.__reactInternalMemoizedUnmaskedChildContext===unmaskedContext){return instance.__reactInternalMemoizedMaskedChildContext;}var context={};for(var key in contextTypes){context[key]=unmaskedContext[key];}{var name=getComponentNameFromFiber(workInProgress)||'Unknown';checkPropTypes(contextTypes,context,'context',name);}// Cache unmasked context so we can avoid recreating masked context unless necessary.
		// Context is created before the class component is instantiated so check for instance.
		if(instance){cacheContext(workInProgress,unmaskedContext,context);}return context;}}function hasContextChanged(){{return didPerformWorkStackCursor.current;}}function isContextProvider(type){{var childContextTypes=type.childContextTypes;return childContextTypes!==null&&childContextTypes!==undefined;}}function popContext(fiber){{pop(didPerformWorkStackCursor,fiber);pop(contextStackCursor,fiber);}}function popTopLevelContextObject(fiber){{pop(didPerformWorkStackCursor,fiber);pop(contextStackCursor,fiber);}}function pushTopLevelContextObject(fiber,context,didChange){{if(contextStackCursor.current!==emptyContextObject){throw new Error('Unexpected context found on stack. '+'This error is likely caused by a bug in React. Please file an issue.');}push(contextStackCursor,context,fiber);push(didPerformWorkStackCursor,didChange,fiber);}}function processChildContext(fiber,type,parentContext){{var instance=fiber.stateNode;var childContextTypes=type.childContextTypes;// TODO (bvaughn) Replace this behavior with an invariant() in the future.
		// It has only been added in Fiber to match the (unintentional) behavior in Stack.
		if(typeof instance.getChildContext!=='function'){{var componentName=getComponentNameFromFiber(fiber)||'Unknown';if(!warnedAboutMissingGetChildContext[componentName]){warnedAboutMissingGetChildContext[componentName]=true;error('%s.childContextTypes is specified but there is no getChildContext() method '+'on the instance. You can either define getChildContext() on %s or remove '+'childContextTypes from it.',componentName,componentName);}}return parentContext;}var childContext=instance.getChildContext();for(var contextKey in childContext){if(!(contextKey in childContextTypes)){throw new Error((getComponentNameFromFiber(fiber)||'Unknown')+".getChildContext(): key \""+contextKey+"\" is not defined in childContextTypes.");}}{var name=getComponentNameFromFiber(fiber)||'Unknown';checkPropTypes(childContextTypes,childContext,'child context',name);}return assign({},parentContext,childContext);}}function pushContextProvider(workInProgress){{var instance=workInProgress.stateNode;// We push the context as early as possible to ensure stack integrity.
		// If the instance does not exist yet, we will push null at first,
		// and replace it on the stack later when invalidating the context.
		var memoizedMergedChildContext=instance&&instance.__reactInternalMemoizedMergedChildContext||emptyContextObject;// Remember the parent context so we can merge with it later.
		// Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
		previousContext=contextStackCursor.current;push(contextStackCursor,memoizedMergedChildContext,workInProgress);push(didPerformWorkStackCursor,didPerformWorkStackCursor.current,workInProgress);return true;}}function invalidateContextProvider(workInProgress,type,didChange){{var instance=workInProgress.stateNode;if(!instance){throw new Error('Expected to have an instance by this point. '+'This error is likely caused by a bug in React. Please file an issue.');}if(didChange){// Merge parent and own context.
		// Skip this if we're not updating due to sCU.
		// This avoids unnecessarily recomputing memoized values.
		var mergedContext=processChildContext(workInProgress,type,previousContext);instance.__reactInternalMemoizedMergedChildContext=mergedContext;// Replace the old (or empty) context with the new one.
		// It is important to unwind the context in the reverse order.
		pop(didPerformWorkStackCursor,workInProgress);pop(contextStackCursor,workInProgress);// Now push the new context and mark that it has changed.
		push(contextStackCursor,mergedContext,workInProgress);push(didPerformWorkStackCursor,didChange,workInProgress);}else {pop(didPerformWorkStackCursor,workInProgress);push(didPerformWorkStackCursor,didChange,workInProgress);}}}function findCurrentUnmaskedContext(fiber){{// Currently this is only used with renderSubtreeIntoContainer; not sure if it
		// makes sense elsewhere
		if(!isFiberMounted(fiber)||fiber.tag!==ClassComponent){throw new Error('Expected subtree parent to be a mounted class component. '+'This error is likely caused by a bug in React. Please file an issue.');}var node=fiber;do{switch(node.tag){case HostRoot:return node.stateNode.context;case ClassComponent:{var Component=node.type;if(isContextProvider(Component)){return node.stateNode.__reactInternalMemoizedMergedChildContext;}break;}}node=node.return;}while(node!==null);throw new Error('Found unexpected detached subtree parent. '+'This error is likely caused by a bug in React. Please file an issue.');}}var LegacyRoot=0;var ConcurrentRoot=1;var syncQueue=null;var includesLegacySyncCallbacks=false;var isFlushingSyncQueue=false;function scheduleSyncCallback(callback){// Push this callback into an internal queue. We'll flush these either in
		// the next tick, or earlier if something calls `flushSyncCallbackQueue`.
		if(syncQueue===null){syncQueue=[callback];}else {// Push onto existing queue. Don't need to schedule a callback because
		// we already scheduled one when we created the queue.
		syncQueue.push(callback);}}function scheduleLegacySyncCallback(callback){includesLegacySyncCallbacks=true;scheduleSyncCallback(callback);}function flushSyncCallbacksOnlyInLegacyMode(){// Only flushes the queue if there's a legacy sync callback scheduled.
		// TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
		// it might make more sense for the queue to be a list of roots instead of a
		// list of generic callbacks. Then we can have two: one for legacy roots, one
		// for concurrent roots. And this method would only flush the legacy ones.
		if(includesLegacySyncCallbacks){flushSyncCallbacks();}}function flushSyncCallbacks(){if(!isFlushingSyncQueue&&syncQueue!==null){// Prevent re-entrance.
		isFlushingSyncQueue=true;var i=0;var previousUpdatePriority=getCurrentUpdatePriority();try{var isSync=true;var queue=syncQueue;// TODO: Is this necessary anymore? The only user code that runs in this
		// queue is in the render or commit phases.
		setCurrentUpdatePriority(DiscreteEventPriority);for(;i<queue.length;i++){var callback=queue[i];do{callback=callback(isSync);}while(callback!==null);}syncQueue=null;includesLegacySyncCallbacks=false;}catch(error){// If something throws, leave the remaining callbacks on the queue.
		if(syncQueue!==null){syncQueue=syncQueue.slice(i+1);}// Resume flushing in the next tick
		scheduleCallback(ImmediatePriority,flushSyncCallbacks);throw error;}finally{setCurrentUpdatePriority(previousUpdatePriority);isFlushingSyncQueue=false;}}return null;}// TODO: Use the unified fiber stack module instead of this local one?
		// Intentionally not using it yet to derisk the initial implementation, because
		// the way we push/pop these values is a bit unusual. If there's a mistake, I'd
		// rather the ids be wrong than crash the whole reconciler.
		var forkStack=[];var forkStackIndex=0;var treeForkProvider=null;var treeForkCount=0;var idStack=[];var idStackIndex=0;var treeContextProvider=null;var treeContextId=1;var treeContextOverflow='';function isForkedChild(workInProgress){warnIfNotHydrating();return (workInProgress.flags&Forked)!==NoFlags;}function getForksAtLevel(workInProgress){warnIfNotHydrating();return treeForkCount;}function getTreeId(){var overflow=treeContextOverflow;var idWithLeadingBit=treeContextId;var id=idWithLeadingBit&~getLeadingBit(idWithLeadingBit);return id.toString(32)+overflow;}function pushTreeFork(workInProgress,totalChildren){// This is called right after we reconcile an array (or iterator) of child
		// fibers, because that's the only place where we know how many children in
		// the whole set without doing extra work later, or storing addtional
		// information on the fiber.
		//
		// That's why this function is separate from pushTreeId — it's called during
		// the render phase of the fork parent, not the child, which is where we push
		// the other context values.
		//
		// In the Fizz implementation this is much simpler because the child is
		// rendered in the same callstack as the parent.
		//
		// It might be better to just add a `forks` field to the Fiber type. It would
		// make this module simpler.
		warnIfNotHydrating();forkStack[forkStackIndex++]=treeForkCount;forkStack[forkStackIndex++]=treeForkProvider;treeForkProvider=workInProgress;treeForkCount=totalChildren;}function pushTreeId(workInProgress,totalChildren,index){warnIfNotHydrating();idStack[idStackIndex++]=treeContextId;idStack[idStackIndex++]=treeContextOverflow;idStack[idStackIndex++]=treeContextProvider;treeContextProvider=workInProgress;var baseIdWithLeadingBit=treeContextId;var baseOverflow=treeContextOverflow;// The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
		// of the id; we use it to account for leading 0s.
		var baseLength=getBitLength(baseIdWithLeadingBit)-1;var baseId=baseIdWithLeadingBit&~(1<<baseLength);var slot=index+1;var length=getBitLength(totalChildren)+baseLength;// 30 is the max length we can store without overflowing, taking into
		// consideration the leading 1 we use to mark the end of the sequence.
		if(length>30){// We overflowed the bitwise-safe range. Fall back to slower algorithm.
		// This branch assumes the length of the base id is greater than 5; it won't
		// work for smaller ids, because you need 5 bits per character.
		//
		// We encode the id in multiple steps: first the base id, then the
		// remaining digits.
		//
		// Each 5 bit sequence corresponds to a single base 32 character. So for
		// example, if the current id is 23 bits long, we can convert 20 of those
		// bits into a string of 4 characters, with 3 bits left over.
		//
		// First calculate how many bits in the base id represent a complete
		// sequence of characters.
		var numberOfOverflowBits=baseLength-baseLength%5;// Then create a bitmask that selects only those bits.
		var newOverflowBits=(1<<numberOfOverflowBits)-1;// Select the bits, and convert them to a base 32 string.
		var newOverflow=(baseId&newOverflowBits).toString(32);// Now we can remove those bits from the base id.
		var restOfBaseId=baseId>>numberOfOverflowBits;var restOfBaseLength=baseLength-numberOfOverflowBits;// Finally, encode the rest of the bits using the normal algorithm. Because
		// we made more room, this time it won't overflow.
		var restOfLength=getBitLength(totalChildren)+restOfBaseLength;var restOfNewBits=slot<<restOfBaseLength;var id=restOfNewBits|restOfBaseId;var overflow=newOverflow+baseOverflow;treeContextId=1<<restOfLength|id;treeContextOverflow=overflow;}else {// Normal path
		var newBits=slot<<baseLength;var _id=newBits|baseId;var _overflow=baseOverflow;treeContextId=1<<length|_id;treeContextOverflow=_overflow;}}function pushMaterializedTreeId(workInProgress){warnIfNotHydrating();// This component materialized an id. This will affect any ids that appear
		// in its children.
		var returnFiber=workInProgress.return;if(returnFiber!==null){var numberOfForks=1;var slotIndex=0;pushTreeFork(workInProgress,numberOfForks);pushTreeId(workInProgress,numberOfForks,slotIndex);}}function getBitLength(number){return 32-clz32(number);}function getLeadingBit(id){return 1<<getBitLength(id)-1;}function popTreeContext(workInProgress){// Restore the previous values.
		// This is a bit more complicated than other context-like modules in Fiber
		// because the same Fiber may appear on the stack multiple times and for
		// different reasons. We have to keep popping until the work-in-progress is
		// no longer at the top of the stack.
		while(workInProgress===treeForkProvider){treeForkProvider=forkStack[--forkStackIndex];forkStack[forkStackIndex]=null;treeForkCount=forkStack[--forkStackIndex];forkStack[forkStackIndex]=null;}while(workInProgress===treeContextProvider){treeContextProvider=idStack[--idStackIndex];idStack[idStackIndex]=null;treeContextOverflow=idStack[--idStackIndex];idStack[idStackIndex]=null;treeContextId=idStack[--idStackIndex];idStack[idStackIndex]=null;}}function getSuspendedTreeContext(){warnIfNotHydrating();if(treeContextProvider!==null){return {id:treeContextId,overflow:treeContextOverflow};}else {return null;}}function restoreSuspendedTreeContext(workInProgress,suspendedContext){warnIfNotHydrating();idStack[idStackIndex++]=treeContextId;idStack[idStackIndex++]=treeContextOverflow;idStack[idStackIndex++]=treeContextProvider;treeContextId=suspendedContext.id;treeContextOverflow=suspendedContext.overflow;treeContextProvider=workInProgress;}function warnIfNotHydrating(){{if(!getIsHydrating()){error('Expected to be hydrating. This is a bug in React. Please file '+'an issue.');}}}// This may have been an insertion or a hydration.
		var hydrationParentFiber=null;var nextHydratableInstance=null;var isHydrating=false;// This flag allows for warning supression when we expect there to be mismatches
		// due to earlier mismatches or a suspended fiber.
		var didSuspendOrErrorDEV=false;// Hydration errors that were thrown inside this boundary
		var hydrationErrors=null;function warnIfHydrating(){{if(isHydrating){error('We should not be hydrating here. This is a bug in React. Please file a bug.');}}}function markDidThrowWhileHydratingDEV(){{didSuspendOrErrorDEV=true;}}function didSuspendOrErrorWhileHydratingDEV(){{return didSuspendOrErrorDEV;}}function enterHydrationState(fiber){var parentInstance=fiber.stateNode.containerInfo;nextHydratableInstance=getFirstHydratableChildWithinContainer(parentInstance);hydrationParentFiber=fiber;isHydrating=true;hydrationErrors=null;didSuspendOrErrorDEV=false;return true;}function reenterHydrationStateFromDehydratedSuspenseInstance(fiber,suspenseInstance,treeContext){nextHydratableInstance=getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);hydrationParentFiber=fiber;isHydrating=true;hydrationErrors=null;didSuspendOrErrorDEV=false;if(treeContext!==null){restoreSuspendedTreeContext(fiber,treeContext);}return true;}function warnUnhydratedInstance(returnFiber,instance){{switch(returnFiber.tag){case HostRoot:{didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo,instance);break;}case HostComponent:{var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotHydrateInstance(returnFiber.type,returnFiber.memoizedProps,returnFiber.stateNode,instance,// TODO: Delete this argument when we remove the legacy root API.
		isConcurrentMode);break;}case SuspenseComponent:{var suspenseState=returnFiber.memoizedState;if(suspenseState.dehydrated!==null)didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated,instance);break;}}}}function deleteHydratableInstance(returnFiber,instance){warnUnhydratedInstance(returnFiber,instance);var childToDelete=createFiberFromHostInstanceForDeletion();childToDelete.stateNode=instance;childToDelete.return=returnFiber;var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[childToDelete];returnFiber.flags|=ChildDeletion;}else {deletions.push(childToDelete);}}function warnNonhydratedInstance(returnFiber,fiber){{if(didSuspendOrErrorDEV){// Inside a boundary that already suspended. We're currently rendering the
		// siblings of a suspended node. The mismatch may be due to the missing
		// data, so it's probably a false positive.
		return;}switch(returnFiber.tag){case HostRoot:{var parentContainer=returnFiber.stateNode.containerInfo;switch(fiber.tag){case HostComponent:var type=fiber.type;fiber.pendingProps;didNotFindHydratableInstanceWithinContainer(parentContainer,type);break;case HostText:var text=fiber.pendingProps;didNotFindHydratableTextInstanceWithinContainer(parentContainer,text);break;}break;}case HostComponent:{var parentType=returnFiber.type;var parentProps=returnFiber.memoizedProps;var parentInstance=returnFiber.stateNode;switch(fiber.tag){case HostComponent:{var _type=fiber.type;var _props=fiber.pendingProps;var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotFindHydratableInstance(parentType,parentProps,parentInstance,_type,_props,// TODO: Delete this argument when we remove the legacy root API.
		isConcurrentMode);break;}case HostText:{var _text=fiber.pendingProps;var _isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotFindHydratableTextInstance(parentType,parentProps,parentInstance,_text,// TODO: Delete this argument when we remove the legacy root API.
		_isConcurrentMode);break;}}break;}case SuspenseComponent:{var suspenseState=returnFiber.memoizedState;var _parentInstance=suspenseState.dehydrated;if(_parentInstance!==null)switch(fiber.tag){case HostComponent:var _type2=fiber.type;fiber.pendingProps;didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance,_type2);break;case HostText:var _text2=fiber.pendingProps;didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance,_text2);break;}break;}default:return;}}}function insertNonHydratedInstance(returnFiber,fiber){fiber.flags=fiber.flags&~Hydrating|Placement;warnNonhydratedInstance(returnFiber,fiber);}function tryHydrate(fiber,nextInstance){switch(fiber.tag){case HostComponent:{var type=fiber.type;fiber.pendingProps;var instance=canHydrateInstance(nextInstance,type);if(instance!==null){fiber.stateNode=instance;hydrationParentFiber=fiber;nextHydratableInstance=getFirstHydratableChild(instance);return true;}return false;}case HostText:{var text=fiber.pendingProps;var textInstance=canHydrateTextInstance(nextInstance,text);if(textInstance!==null){fiber.stateNode=textInstance;hydrationParentFiber=fiber;// Text Instances don't have children so there's nothing to hydrate.
		nextHydratableInstance=null;return true;}return false;}case SuspenseComponent:{var suspenseInstance=canHydrateSuspenseInstance(nextInstance);if(suspenseInstance!==null){var suspenseState={dehydrated:suspenseInstance,treeContext:getSuspendedTreeContext(),retryLane:OffscreenLane};fiber.memoizedState=suspenseState;// Store the dehydrated fragment as a child fiber.
		// This simplifies the code for getHostSibling and deleting nodes,
		// since it doesn't have to consider all Suspense boundaries and
		// check if they're dehydrated ones or not.
		var dehydratedFragment=createFiberFromDehydratedFragment(suspenseInstance);dehydratedFragment.return=fiber;fiber.child=dehydratedFragment;hydrationParentFiber=fiber;// While a Suspense Instance does have children, we won't step into
		// it during the first pass. Instead, we'll reenter it later.
		nextHydratableInstance=null;return true;}return false;}default:return false;}}function shouldClientRenderOnMismatch(fiber){return (fiber.mode&ConcurrentMode)!==NoMode&&(fiber.flags&DidCapture)===NoFlags;}function throwOnHydrationMismatch(fiber){throw new Error('Hydration failed because the initial UI does not match what was '+'rendered on the server.');}function tryToClaimNextHydratableInstance(fiber){if(!isHydrating){return;}var nextInstance=nextHydratableInstance;if(!nextInstance){if(shouldClientRenderOnMismatch(fiber)){warnNonhydratedInstance(hydrationParentFiber,fiber);throwOnHydrationMismatch();}// Nothing to hydrate. Make it an insertion.
		insertNonHydratedInstance(hydrationParentFiber,fiber);isHydrating=false;hydrationParentFiber=fiber;return;}var firstAttemptedInstance=nextInstance;if(!tryHydrate(fiber,nextInstance)){if(shouldClientRenderOnMismatch(fiber)){warnNonhydratedInstance(hydrationParentFiber,fiber);throwOnHydrationMismatch();}// If we can't hydrate this instance let's try the next one.
		// We use this as a heuristic. It's based on intuition and not data so it
		// might be flawed or unnecessary.
		nextInstance=getNextHydratableSibling(firstAttemptedInstance);var prevHydrationParentFiber=hydrationParentFiber;if(!nextInstance||!tryHydrate(fiber,nextInstance)){// Nothing to hydrate. Make it an insertion.
		insertNonHydratedInstance(hydrationParentFiber,fiber);isHydrating=false;hydrationParentFiber=fiber;return;}// We matched the next one, we'll now assume that the first one was
		// superfluous and we'll delete it. Since we can't eagerly delete it
		// we'll have to schedule a deletion. To do that, this node needs a dummy
		// fiber associated with it.
		deleteHydratableInstance(prevHydrationParentFiber,firstAttemptedInstance);}}function prepareToHydrateHostInstance(fiber,rootContainerInstance,hostContext){var instance=fiber.stateNode;var shouldWarnIfMismatchDev=!didSuspendOrErrorDEV;var updatePayload=hydrateInstance(instance,fiber.type,fiber.memoizedProps,rootContainerInstance,hostContext,fiber,shouldWarnIfMismatchDev);// TODO: Type this specific to this type of component.
		fiber.updateQueue=updatePayload;// If the update payload indicates that there is a change or if there
		// is a new ref we mark this as an update.
		if(updatePayload!==null){return true;}return false;}function prepareToHydrateHostTextInstance(fiber){var textInstance=fiber.stateNode;var textContent=fiber.memoizedProps;var shouldUpdate=hydrateTextInstance(textInstance,textContent,fiber);if(shouldUpdate){// We assume that prepareToHydrateHostTextInstance is called in a context where the
		// hydration parent is the parent host component of this host text.
		var returnFiber=hydrationParentFiber;if(returnFiber!==null){switch(returnFiber.tag){case HostRoot:{var parentContainer=returnFiber.stateNode.containerInfo;var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotMatchHydratedContainerTextInstance(parentContainer,textInstance,textContent,// TODO: Delete this argument when we remove the legacy root API.
		isConcurrentMode);break;}case HostComponent:{var parentType=returnFiber.type;var parentProps=returnFiber.memoizedProps;var parentInstance=returnFiber.stateNode;var _isConcurrentMode2=(returnFiber.mode&ConcurrentMode)!==NoMode;didNotMatchHydratedTextInstance(parentType,parentProps,parentInstance,textInstance,textContent,// TODO: Delete this argument when we remove the legacy root API.
		_isConcurrentMode2);break;}}}}return shouldUpdate;}function prepareToHydrateHostSuspenseInstance(fiber){var suspenseState=fiber.memoizedState;var suspenseInstance=suspenseState!==null?suspenseState.dehydrated:null;if(!suspenseInstance){throw new Error('Expected to have a hydrated suspense instance. '+'This error is likely caused by a bug in React. Please file an issue.');}hydrateSuspenseInstance(suspenseInstance,fiber);}function skipPastDehydratedSuspenseInstance(fiber){var suspenseState=fiber.memoizedState;var suspenseInstance=suspenseState!==null?suspenseState.dehydrated:null;if(!suspenseInstance){throw new Error('Expected to have a hydrated suspense instance. '+'This error is likely caused by a bug in React. Please file an issue.');}return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);}function popToNextHostParent(fiber){var parent=fiber.return;while(parent!==null&&parent.tag!==HostComponent&&parent.tag!==HostRoot&&parent.tag!==SuspenseComponent){parent=parent.return;}hydrationParentFiber=parent;}function popHydrationState(fiber){if(fiber!==hydrationParentFiber){// We're deeper than the current hydration context, inside an inserted
		// tree.
		return false;}if(!isHydrating){// If we're not currently hydrating but we're in a hydration context, then
		// we were an insertion and now need to pop up reenter hydration of our
		// siblings.
		popToNextHostParent(fiber);isHydrating=true;return false;}// If we have any remaining hydratable nodes, we need to delete them now.
		// We only do this deeper than head and body since they tend to have random
		// other nodes in them. We also ignore components with pure text content in
		// side of them. We also don't delete anything inside the root container.
		if(fiber.tag!==HostRoot&&(fiber.tag!==HostComponent||shouldDeleteUnhydratedTailInstances(fiber.type)&&!shouldSetTextContent(fiber.type,fiber.memoizedProps))){var nextInstance=nextHydratableInstance;if(nextInstance){if(shouldClientRenderOnMismatch(fiber)){warnIfUnhydratedTailNodes(fiber);throwOnHydrationMismatch();}else {while(nextInstance){deleteHydratableInstance(fiber,nextInstance);nextInstance=getNextHydratableSibling(nextInstance);}}}}popToNextHostParent(fiber);if(fiber.tag===SuspenseComponent){nextHydratableInstance=skipPastDehydratedSuspenseInstance(fiber);}else {nextHydratableInstance=hydrationParentFiber?getNextHydratableSibling(fiber.stateNode):null;}return true;}function hasUnhydratedTailNodes(){return isHydrating&&nextHydratableInstance!==null;}function warnIfUnhydratedTailNodes(fiber){var nextInstance=nextHydratableInstance;while(nextInstance){warnUnhydratedInstance(fiber,nextInstance);nextInstance=getNextHydratableSibling(nextInstance);}}function resetHydrationState(){hydrationParentFiber=null;nextHydratableInstance=null;isHydrating=false;didSuspendOrErrorDEV=false;}function upgradeHydrationErrorsToRecoverable(){if(hydrationErrors!==null){// Successfully completed a forced client render. The errors that occurred
		// during the hydration attempt are now recovered. We will log them in
		// commit phase, once the entire tree has finished.
		queueRecoverableErrors(hydrationErrors);hydrationErrors=null;}}function getIsHydrating(){return isHydrating;}function queueHydrationError(error){if(hydrationErrors===null){hydrationErrors=[error];}else {hydrationErrors.push(error);}}var ReactCurrentBatchConfig$1=ReactSharedInternals.ReactCurrentBatchConfig;var NoTransition=null;function requestCurrentTransition(){return ReactCurrentBatchConfig$1.transition;}var ReactStrictModeWarnings={recordUnsafeLifecycleWarnings:function(fiber,instance){},flushPendingUnsafeLifecycleWarnings:function(){},recordLegacyContextWarning:function(fiber,instance){},flushLegacyContextWarning:function(){},discardPendingWarnings:function(){}};{var findStrictRoot=function(fiber){var maybeStrictRoot=null;var node=fiber;while(node!==null){if(node.mode&StrictLegacyMode){maybeStrictRoot=node;}node=node.return;}return maybeStrictRoot;};var setToSortedString=function(set){var array=[];set.forEach(function(value){array.push(value);});return array.sort().join(', ');};var pendingComponentWillMountWarnings=[];var pendingUNSAFE_ComponentWillMountWarnings=[];var pendingComponentWillReceivePropsWarnings=[];var pendingUNSAFE_ComponentWillReceivePropsWarnings=[];var pendingComponentWillUpdateWarnings=[];var pendingUNSAFE_ComponentWillUpdateWarnings=[];// Tracks components we have already warned about.
		var didWarnAboutUnsafeLifecycles=new Set();ReactStrictModeWarnings.recordUnsafeLifecycleWarnings=function(fiber,instance){// Dedupe strategy: Warn once per component.
		if(didWarnAboutUnsafeLifecycles.has(fiber.type)){return;}if(typeof instance.componentWillMount==='function'&&// Don't warn about react-lifecycles-compat polyfilled components.
		instance.componentWillMount.__suppressDeprecationWarning!==true){pendingComponentWillMountWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillMount==='function'){pendingUNSAFE_ComponentWillMountWarnings.push(fiber);}if(typeof instance.componentWillReceiveProps==='function'&&instance.componentWillReceiveProps.__suppressDeprecationWarning!==true){pendingComponentWillReceivePropsWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillReceiveProps==='function'){pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);}if(typeof instance.componentWillUpdate==='function'&&instance.componentWillUpdate.__suppressDeprecationWarning!==true){pendingComponentWillUpdateWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillUpdate==='function'){pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);}};ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings=function(){// We do an initial pass to gather component names
		var componentWillMountUniqueNames=new Set();if(pendingComponentWillMountWarnings.length>0){pendingComponentWillMountWarnings.forEach(function(fiber){componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillMountWarnings=[];}var UNSAFE_componentWillMountUniqueNames=new Set();if(pendingUNSAFE_ComponentWillMountWarnings.length>0){pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber){UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillMountWarnings=[];}var componentWillReceivePropsUniqueNames=new Set();if(pendingComponentWillReceivePropsWarnings.length>0){pendingComponentWillReceivePropsWarnings.forEach(function(fiber){componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillReceivePropsWarnings=[];}var UNSAFE_componentWillReceivePropsUniqueNames=new Set();if(pendingUNSAFE_ComponentWillReceivePropsWarnings.length>0){pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber){UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillReceivePropsWarnings=[];}var componentWillUpdateUniqueNames=new Set();if(pendingComponentWillUpdateWarnings.length>0){pendingComponentWillUpdateWarnings.forEach(function(fiber){componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillUpdateWarnings=[];}var UNSAFE_componentWillUpdateUniqueNames=new Set();if(pendingUNSAFE_ComponentWillUpdateWarnings.length>0){pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber){UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillUpdateWarnings=[];}// Finally, we flush all the warnings
		// UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
		if(UNSAFE_componentWillMountUniqueNames.size>0){var sortedNames=setToSortedString(UNSAFE_componentWillMountUniqueNames);error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move code with side effects to componentDidMount, and set initial state in the constructor.\n'+'\nPlease update the following components: %s',sortedNames);}if(UNSAFE_componentWillReceivePropsUniqueNames.size>0){var _sortedNames=setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended '+'and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+"* If you're updating state whenever props change, "+'refactor your code to use memoization techniques or move it to '+'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n'+'\nPlease update the following components: %s',_sortedNames);}if(UNSAFE_componentWillUpdateUniqueNames.size>0){var _sortedNames2=setToSortedString(UNSAFE_componentWillUpdateUniqueNames);error('Using UNSAFE_componentWillUpdate in strict mode is not recommended '+'and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+'\nPlease update the following components: %s',_sortedNames2);}if(componentWillMountUniqueNames.size>0){var _sortedNames3=setToSortedString(componentWillMountUniqueNames);warn('componentWillMount has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move code with side effects to componentDidMount, and set initial state in the constructor.\n'+'* Rename componentWillMount to UNSAFE_componentWillMount to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n'+'\nPlease update the following components: %s',_sortedNames3);}if(componentWillReceivePropsUniqueNames.size>0){var _sortedNames4=setToSortedString(componentWillReceivePropsUniqueNames);warn('componentWillReceiveProps has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+"* If you're updating state whenever props change, refactor your "+'code to use memoization techniques or move it to '+'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n'+'* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n'+'\nPlease update the following components: %s',_sortedNames4);}if(componentWillUpdateUniqueNames.size>0){var _sortedNames5=setToSortedString(componentWillUpdateUniqueNames);warn('componentWillUpdate has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n'+'* Move data fetching code or side effects to componentDidUpdate.\n'+'* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n'+'\nPlease update the following components: %s',_sortedNames5);}};var pendingLegacyContextWarning=new Map();// Tracks components we have already warned about.
		var didWarnAboutLegacyContext=new Set();ReactStrictModeWarnings.recordLegacyContextWarning=function(fiber,instance){var strictRoot=findStrictRoot(fiber);if(strictRoot===null){error('Expected to find a StrictMode component in a strict mode tree. '+'This error is likely caused by a bug in React. Please file an issue.');return;}// Dedup strategy: Warn once per component.
		if(didWarnAboutLegacyContext.has(fiber.type)){return;}var warningsForRoot=pendingLegacyContextWarning.get(strictRoot);if(fiber.type.contextTypes!=null||fiber.type.childContextTypes!=null||instance!==null&&typeof instance.getChildContext==='function'){if(warningsForRoot===undefined){warningsForRoot=[];pendingLegacyContextWarning.set(strictRoot,warningsForRoot);}warningsForRoot.push(fiber);}};ReactStrictModeWarnings.flushLegacyContextWarning=function(){pendingLegacyContextWarning.forEach(function(fiberArray,strictRoot){if(fiberArray.length===0){return;}var firstFiber=fiberArray[0];var uniqueNames=new Set();fiberArray.forEach(function(fiber){uniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutLegacyContext.add(fiber.type);});var sortedNames=setToSortedString(uniqueNames);try{setCurrentFiber(firstFiber);error('Legacy context API has been detected within a strict-mode tree.'+'\n\nThe old API will be supported in all 16.x releases, but applications '+'using it should migrate to the new version.'+'\n\nPlease update the following components: %s'+'\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context',sortedNames);}finally{resetCurrentFiber();}});};ReactStrictModeWarnings.discardPendingWarnings=function(){pendingComponentWillMountWarnings=[];pendingUNSAFE_ComponentWillMountWarnings=[];pendingComponentWillReceivePropsWarnings=[];pendingUNSAFE_ComponentWillReceivePropsWarnings=[];pendingComponentWillUpdateWarnings=[];pendingUNSAFE_ComponentWillUpdateWarnings=[];pendingLegacyContextWarning=new Map();};}function resolveDefaultProps(Component,baseProps){if(Component&&Component.defaultProps){// Resolve default props. Taken from ReactElement
		var props=assign({},baseProps);var defaultProps=Component.defaultProps;for(var propName in defaultProps){if(props[propName]===undefined){props[propName]=defaultProps[propName];}}return props;}return baseProps;}var valueCursor=createCursor(null);var rendererSigil;{// Use this to detect multiple renderers using the same context
		rendererSigil={};}var currentlyRenderingFiber=null;var lastContextDependency=null;var lastFullyObservedContext=null;var isDisallowedContextReadInDEV=false;function resetContextDependencies(){// This is called right before React yields execution, to ensure `readContext`
		// cannot be called outside the render phase.
		currentlyRenderingFiber=null;lastContextDependency=null;lastFullyObservedContext=null;{isDisallowedContextReadInDEV=false;}}function enterDisallowedContextReadInDEV(){{isDisallowedContextReadInDEV=true;}}function exitDisallowedContextReadInDEV(){{isDisallowedContextReadInDEV=false;}}function pushProvider(providerFiber,context,nextValue){{push(valueCursor,context._currentValue,providerFiber);context._currentValue=nextValue;{if(context._currentRenderer!==undefined&&context._currentRenderer!==null&&context._currentRenderer!==rendererSigil){error('Detected multiple renderers concurrently rendering the '+'same context provider. This is currently unsupported.');}context._currentRenderer=rendererSigil;}}}function popProvider(context,providerFiber){var currentValue=valueCursor.current;pop(valueCursor,providerFiber);{{context._currentValue=currentValue;}}}function scheduleContextWorkOnParentPath(parent,renderLanes,propagationRoot){// Update the child lanes of all the ancestors, including the alternates.
		var node=parent;while(node!==null){var alternate=node.alternate;if(!isSubsetOfLanes(node.childLanes,renderLanes)){node.childLanes=mergeLanes(node.childLanes,renderLanes);if(alternate!==null){alternate.childLanes=mergeLanes(alternate.childLanes,renderLanes);}}else if(alternate!==null&&!isSubsetOfLanes(alternate.childLanes,renderLanes)){alternate.childLanes=mergeLanes(alternate.childLanes,renderLanes);}if(node===propagationRoot){break;}node=node.return;}{if(node!==propagationRoot){error('Expected to find the propagation root when scheduling context work. '+'This error is likely caused by a bug in React. Please file an issue.');}}}function propagateContextChange(workInProgress,context,renderLanes){{propagateContextChange_eager(workInProgress,context,renderLanes);}}function propagateContextChange_eager(workInProgress,context,renderLanes){var fiber=workInProgress.child;if(fiber!==null){// Set the return pointer of the child to the work-in-progress fiber.
		fiber.return=workInProgress;}while(fiber!==null){var nextFiber=void 0;// Visit this fiber.
		var list=fiber.dependencies;if(list!==null){nextFiber=fiber.child;var dependency=list.firstContext;while(dependency!==null){// Check if the context matches.
		if(dependency.context===context){// Match! Schedule an update on this fiber.
		if(fiber.tag===ClassComponent){// Schedule a force update on the work-in-progress.
		var lane=pickArbitraryLane(renderLanes);var update=createUpdate(NoTimestamp,lane);update.tag=ForceUpdate;// TODO: Because we don't have a work-in-progress, this will add the
		// update to the current fiber, too, which means it will persist even if
		// this render is thrown away. Since it's a race condition, not sure it's
		// worth fixing.
		// Inlined `enqueueUpdate` to remove interleaved update check
		var updateQueue=fiber.updateQueue;if(updateQueue===null);else {var sharedQueue=updateQueue.shared;var pending=sharedQueue.pending;if(pending===null){// This is the first update. Create a circular list.
		update.next=update;}else {update.next=pending.next;pending.next=update;}sharedQueue.pending=update;}}fiber.lanes=mergeLanes(fiber.lanes,renderLanes);var alternate=fiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,renderLanes);}scheduleContextWorkOnParentPath(fiber.return,renderLanes,workInProgress);// Mark the updated lanes on the list, too.
		list.lanes=mergeLanes(list.lanes,renderLanes);// Since we already found a match, we can stop traversing the
		// dependency list.
		break;}dependency=dependency.next;}}else if(fiber.tag===ContextProvider){// Don't scan deeper if this is a matching provider
		nextFiber=fiber.type===workInProgress.type?null:fiber.child;}else if(fiber.tag===DehydratedFragment){// If a dehydrated suspense boundary is in this subtree, we don't know
		// if it will have any context consumers in it. The best we can do is
		// mark it as having updates.
		var parentSuspense=fiber.return;if(parentSuspense===null){throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');}parentSuspense.lanes=mergeLanes(parentSuspense.lanes,renderLanes);var _alternate=parentSuspense.alternate;if(_alternate!==null){_alternate.lanes=mergeLanes(_alternate.lanes,renderLanes);}// This is intentionally passing this fiber as the parent
		// because we want to schedule this fiber as having work
		// on its children. We'll use the childLanes on
		// this fiber to indicate that a context has changed.
		scheduleContextWorkOnParentPath(parentSuspense,renderLanes,workInProgress);nextFiber=fiber.sibling;}else {// Traverse down.
		nextFiber=fiber.child;}if(nextFiber!==null){// Set the return pointer of the child to the work-in-progress fiber.
		nextFiber.return=fiber;}else {// No child. Traverse to next sibling.
		nextFiber=fiber;while(nextFiber!==null){if(nextFiber===workInProgress){// We're back to the root of this subtree. Exit.
		nextFiber=null;break;}var sibling=nextFiber.sibling;if(sibling!==null){// Set the return pointer of the sibling to the work-in-progress fiber.
		sibling.return=nextFiber.return;nextFiber=sibling;break;}// No more siblings. Traverse up.
		nextFiber=nextFiber.return;}}fiber=nextFiber;}}function prepareToReadContext(workInProgress,renderLanes){currentlyRenderingFiber=workInProgress;lastContextDependency=null;lastFullyObservedContext=null;var dependencies=workInProgress.dependencies;if(dependencies!==null){{var firstContext=dependencies.firstContext;if(firstContext!==null){if(includesSomeLane(dependencies.lanes,renderLanes)){// Context list has a pending update. Mark that this fiber performed work.
		markWorkInProgressReceivedUpdate();}// Reset the work-in-progress list
		dependencies.firstContext=null;}}}}function readContext(context){{// This warning would fire if you read context inside a Hook like useMemo.
		// Unlike the class check below, it's not enforced in production for perf.
		if(isDisallowedContextReadInDEV){error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');}}var value=context._currentValue;if(lastFullyObservedContext===context);else {var contextItem={context:context,memoizedValue:value,next:null};if(lastContextDependency===null){if(currentlyRenderingFiber===null){throw new Error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');}// This is the first dependency for this component. Create a new list.
		lastContextDependency=contextItem;currentlyRenderingFiber.dependencies={lanes:NoLanes,firstContext:contextItem};}else {// Append a new context item.
		lastContextDependency=lastContextDependency.next=contextItem;}}return value;}// render. When this render exits, either because it finishes or because it is
		// interrupted, the interleaved updates will be transferred onto the main part
		// of the queue.
		var concurrentQueues=null;function pushConcurrentUpdateQueue(queue){if(concurrentQueues===null){concurrentQueues=[queue];}else {concurrentQueues.push(queue);}}function finishQueueingConcurrentUpdates(){// Transfer the interleaved updates onto the main queue. Each queue has a
		// `pending` field and an `interleaved` field. When they are not null, they
		// point to the last node in a circular linked list. We need to append the
		// interleaved list to the end of the pending list by joining them into a
		// single, circular list.
		if(concurrentQueues!==null){for(var i=0;i<concurrentQueues.length;i++){var queue=concurrentQueues[i];var lastInterleavedUpdate=queue.interleaved;if(lastInterleavedUpdate!==null){queue.interleaved=null;var firstInterleavedUpdate=lastInterleavedUpdate.next;var lastPendingUpdate=queue.pending;if(lastPendingUpdate!==null){var firstPendingUpdate=lastPendingUpdate.next;lastPendingUpdate.next=firstInterleavedUpdate;lastInterleavedUpdate.next=firstPendingUpdate;}queue.pending=lastInterleavedUpdate;}}concurrentQueues=null;}}function enqueueConcurrentHookUpdate(fiber,queue,update,lane){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.
		update.next=update;// At the end of the current render, this queue's interleaved updates will
		// be transferred to the pending queue.
		pushConcurrentUpdateQueue(queue);}else {update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;return markUpdateLaneFromFiberToRoot(fiber,lane);}function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber,queue,update,lane){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.
		update.next=update;// At the end of the current render, this queue's interleaved updates will
		// be transferred to the pending queue.
		pushConcurrentUpdateQueue(queue);}else {update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;}function enqueueConcurrentClassUpdate(fiber,queue,update,lane){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.
		update.next=update;// At the end of the current render, this queue's interleaved updates will
		// be transferred to the pending queue.
		pushConcurrentUpdateQueue(queue);}else {update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;return markUpdateLaneFromFiberToRoot(fiber,lane);}function enqueueConcurrentRenderForLane(fiber,lane){return markUpdateLaneFromFiberToRoot(fiber,lane);}// Calling this function outside this module should only be done for backwards
		// compatibility and should always be accompanied by a warning.
		var unsafe_markUpdateLaneFromFiberToRoot=markUpdateLaneFromFiberToRoot;function markUpdateLaneFromFiberToRoot(sourceFiber,lane){// Update the source fiber's lanes
		sourceFiber.lanes=mergeLanes(sourceFiber.lanes,lane);var alternate=sourceFiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,lane);}{if(alternate===null&&(sourceFiber.flags&(Placement|Hydrating))!==NoFlags){warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);}}// Walk the parent path to the root and update the child lanes.
		var node=sourceFiber;var parent=sourceFiber.return;while(parent!==null){parent.childLanes=mergeLanes(parent.childLanes,lane);alternate=parent.alternate;if(alternate!==null){alternate.childLanes=mergeLanes(alternate.childLanes,lane);}else {{if((parent.flags&(Placement|Hydrating))!==NoFlags){warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);}}}node=parent;parent=parent.return;}if(node.tag===HostRoot){var root=node.stateNode;return root;}else {return null;}}var UpdateState=0;var ReplaceState=1;var ForceUpdate=2;var CaptureUpdate=3;// Global state that is reset at the beginning of calling `processUpdateQueue`.
		// It should only be read right after calling `processUpdateQueue`, via
		// `checkHasForceUpdateAfterProcessing`.
		var hasForceUpdate=false;var didWarnUpdateInsideUpdate;var currentlyProcessingQueue;{didWarnUpdateInsideUpdate=false;currentlyProcessingQueue=null;}function initializeUpdateQueue(fiber){var queue={baseState:fiber.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:NoLanes},effects:null};fiber.updateQueue=queue;}function cloneUpdateQueue(current,workInProgress){// Clone the update queue from current. Unless it's already a clone.
		var queue=workInProgress.updateQueue;var currentQueue=current.updateQueue;if(queue===currentQueue){var clone={baseState:currentQueue.baseState,firstBaseUpdate:currentQueue.firstBaseUpdate,lastBaseUpdate:currentQueue.lastBaseUpdate,shared:currentQueue.shared,effects:currentQueue.effects};workInProgress.updateQueue=clone;}}function createUpdate(eventTime,lane){var update={eventTime:eventTime,lane:lane,tag:UpdateState,payload:null,callback:null,next:null};return update;}function enqueueUpdate(fiber,update,lane){var updateQueue=fiber.updateQueue;if(updateQueue===null){// Only occurs if the fiber has been unmounted.
		return null;}var sharedQueue=updateQueue.shared;{if(currentlyProcessingQueue===sharedQueue&&!didWarnUpdateInsideUpdate){error('An update (setState, replaceState, or forceUpdate) was scheduled '+'from inside an update function. Update functions should be pure, '+'with zero side-effects. Consider using componentDidUpdate or a '+'callback.');didWarnUpdateInsideUpdate=true;}}if(isUnsafeClassRenderPhaseUpdate()){// This is an unsafe render phase update. Add directly to the update
		// queue so we can process it immediately during the current render.
		var pending=sharedQueue.pending;if(pending===null){// This is the first update. Create a circular list.
		update.next=update;}else {update.next=pending.next;pending.next=update;}sharedQueue.pending=update;// Update the childLanes even though we're most likely already rendering
		// this fiber. This is for backwards compatibility in the case where you
		// update a different component during render phase than the one that is
		// currently renderings (a pattern that is accompanied by a warning).
		return unsafe_markUpdateLaneFromFiberToRoot(fiber,lane);}else {return enqueueConcurrentClassUpdate(fiber,sharedQueue,update,lane);}}function entangleTransitions(root,fiber,lane){var updateQueue=fiber.updateQueue;if(updateQueue===null){// Only occurs if the fiber has been unmounted.
		return;}var sharedQueue=updateQueue.shared;if(isTransitionLane(lane)){var queueLanes=sharedQueue.lanes;// If any entangled lanes are no longer pending on the root, then they must
		// have finished. We can remove them from the shared queue, which represents
		// a superset of the actually pending lanes. In some cases we may entangle
		// more than we need to, but that's OK. In fact it's worse if we *don't*
		// entangle when we should.
		queueLanes=intersectLanes(queueLanes,root.pendingLanes);// Entangle the new transition lane with the other transition lanes.
		var newQueueLanes=mergeLanes(queueLanes,lane);sharedQueue.lanes=newQueueLanes;// Even if queue.lanes already include lane, we don't know for certain if
		// the lane finished since the last time we entangled it. So we need to
		// entangle it again, just to be sure.
		markRootEntangled(root,newQueueLanes);}}function enqueueCapturedUpdate(workInProgress,capturedUpdate){// Captured updates are updates that are thrown by a child during the render
		// phase. They should be discarded if the render is aborted. Therefore,
		// we should only put them on the work-in-progress queue, not the current one.
		var queue=workInProgress.updateQueue;// Check if the work-in-progress queue is a clone.
		var current=workInProgress.alternate;if(current!==null){var currentQueue=current.updateQueue;if(queue===currentQueue){// The work-in-progress queue is the same as current. This happens when
		// we bail out on a parent fiber that then captures an error thrown by
		// a child. Since we want to append the update only to the work-in
		// -progress queue, we need to clone the updates. We usually clone during
		// processUpdateQueue, but that didn't happen in this case because we
		// skipped over the parent when we bailed out.
		var newFirst=null;var newLast=null;var firstBaseUpdate=queue.firstBaseUpdate;if(firstBaseUpdate!==null){// Loop through the updates and clone them.
		var update=firstBaseUpdate;do{var clone={eventTime:update.eventTime,lane:update.lane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};if(newLast===null){newFirst=newLast=clone;}else {newLast.next=clone;newLast=clone;}update=update.next;}while(update!==null);// Append the captured update the end of the cloned list.
		if(newLast===null){newFirst=newLast=capturedUpdate;}else {newLast.next=capturedUpdate;newLast=capturedUpdate;}}else {// There are no base updates.
		newFirst=newLast=capturedUpdate;}queue={baseState:currentQueue.baseState,firstBaseUpdate:newFirst,lastBaseUpdate:newLast,shared:currentQueue.shared,effects:currentQueue.effects};workInProgress.updateQueue=queue;return;}}// Append the update to the end of the list.
		var lastBaseUpdate=queue.lastBaseUpdate;if(lastBaseUpdate===null){queue.firstBaseUpdate=capturedUpdate;}else {lastBaseUpdate.next=capturedUpdate;}queue.lastBaseUpdate=capturedUpdate;}function getStateFromUpdate(workInProgress,queue,update,prevState,nextProps,instance){switch(update.tag){case ReplaceState:{var payload=update.payload;if(typeof payload==='function'){// Updater function
		{enterDisallowedContextReadInDEV();}var nextState=payload.call(instance,prevState,nextProps);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{payload.call(instance,prevState,nextProps);}finally{setIsStrictModeForDevtools(false);}}exitDisallowedContextReadInDEV();}return nextState;}// State object
		return payload;}case CaptureUpdate:{workInProgress.flags=workInProgress.flags&~ShouldCapture|DidCapture;}// Intentional fallthrough
		case UpdateState:{var _payload=update.payload;var partialState;if(typeof _payload==='function'){// Updater function
		{enterDisallowedContextReadInDEV();}partialState=_payload.call(instance,prevState,nextProps);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{_payload.call(instance,prevState,nextProps);}finally{setIsStrictModeForDevtools(false);}}exitDisallowedContextReadInDEV();}}else {// Partial state object
		partialState=_payload;}if(partialState===null||partialState===undefined){// Null and undefined are treated as no-ops.
		return prevState;}// Merge the partial state and the previous state.
		return assign({},prevState,partialState);}case ForceUpdate:{hasForceUpdate=true;return prevState;}}return prevState;}function processUpdateQueue(workInProgress,props,instance,renderLanes){// This is always non-null on a ClassComponent or HostRoot
		var queue=workInProgress.updateQueue;hasForceUpdate=false;{currentlyProcessingQueue=queue.shared;}var firstBaseUpdate=queue.firstBaseUpdate;var lastBaseUpdate=queue.lastBaseUpdate;// Check if there are pending updates. If so, transfer them to the base queue.
		var pendingQueue=queue.shared.pending;if(pendingQueue!==null){queue.shared.pending=null;// The pending queue is circular. Disconnect the pointer between first
		// and last so that it's non-circular.
		var lastPendingUpdate=pendingQueue;var firstPendingUpdate=lastPendingUpdate.next;lastPendingUpdate.next=null;// Append pending updates to base queue
		if(lastBaseUpdate===null){firstBaseUpdate=firstPendingUpdate;}else {lastBaseUpdate.next=firstPendingUpdate;}lastBaseUpdate=lastPendingUpdate;// If there's a current queue, and it's different from the base queue, then
		// we need to transfer the updates to that queue, too. Because the base
		// queue is a singly-linked list with no cycles, we can append to both
		// lists and take advantage of structural sharing.
		// TODO: Pass `current` as argument
		var current=workInProgress.alternate;if(current!==null){// This is always non-null on a ClassComponent or HostRoot
		var currentQueue=current.updateQueue;var currentLastBaseUpdate=currentQueue.lastBaseUpdate;if(currentLastBaseUpdate!==lastBaseUpdate){if(currentLastBaseUpdate===null){currentQueue.firstBaseUpdate=firstPendingUpdate;}else {currentLastBaseUpdate.next=firstPendingUpdate;}currentQueue.lastBaseUpdate=lastPendingUpdate;}}}// These values may change as we process the queue.
		if(firstBaseUpdate!==null){// Iterate through the list of updates to compute the result.
		var newState=queue.baseState;// TODO: Don't need to accumulate this. Instead, we can remove renderLanes
		// from the original lanes.
		var newLanes=NoLanes;var newBaseState=null;var newFirstBaseUpdate=null;var newLastBaseUpdate=null;var update=firstBaseUpdate;do{var updateLane=update.lane;var updateEventTime=update.eventTime;if(!isSubsetOfLanes(renderLanes,updateLane)){// Priority is insufficient. Skip this update. If this is the first
		// skipped update, the previous update/state is the new base
		// update/state.
		var clone={eventTime:updateEventTime,lane:updateLane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};if(newLastBaseUpdate===null){newFirstBaseUpdate=newLastBaseUpdate=clone;newBaseState=newState;}else {newLastBaseUpdate=newLastBaseUpdate.next=clone;}// Update the remaining priority in the queue.
		newLanes=mergeLanes(newLanes,updateLane);}else {// This update does have sufficient priority.
		if(newLastBaseUpdate!==null){var _clone={eventTime:updateEventTime,// This update is going to be committed so we never want uncommit
		// it. Using NoLane works because 0 is a subset of all bitmasks, so
		// this will never be skipped by the check above.
		lane:NoLane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};newLastBaseUpdate=newLastBaseUpdate.next=_clone;}// Process this update.
		newState=getStateFromUpdate(workInProgress,queue,update,newState,props,instance);var callback=update.callback;if(callback!==null&&// If the update was already committed, we should not queue its
		// callback again.
		update.lane!==NoLane){workInProgress.flags|=Callback;var effects=queue.effects;if(effects===null){queue.effects=[update];}else {effects.push(update);}}}update=update.next;if(update===null){pendingQueue=queue.shared.pending;if(pendingQueue===null){break;}else {// An update was scheduled from inside a reducer. Add the new
		// pending updates to the end of the list and keep processing.
		var _lastPendingUpdate=pendingQueue;// Intentionally unsound. Pending updates form a circular list, but we
		// unravel them when transferring them to the base queue.
		var _firstPendingUpdate=_lastPendingUpdate.next;_lastPendingUpdate.next=null;update=_firstPendingUpdate;queue.lastBaseUpdate=_lastPendingUpdate;queue.shared.pending=null;}}}while(true);if(newLastBaseUpdate===null){newBaseState=newState;}queue.baseState=newBaseState;queue.firstBaseUpdate=newFirstBaseUpdate;queue.lastBaseUpdate=newLastBaseUpdate;// Interleaved updates are stored on a separate queue. We aren't going to
		// process them during this render, but we do need to track which lanes
		// are remaining.
		var lastInterleaved=queue.shared.interleaved;if(lastInterleaved!==null){var interleaved=lastInterleaved;do{newLanes=mergeLanes(newLanes,interleaved.lane);interleaved=interleaved.next;}while(interleaved!==lastInterleaved);}else if(firstBaseUpdate===null){// `queue.lanes` is used for entangling transitions. We can set it back to
		// zero once the queue is empty.
		queue.shared.lanes=NoLanes;}// Set the remaining expiration time to be whatever is remaining in the queue.
		// This should be fine because the only two other things that contribute to
		// expiration time are props and context. We're already in the middle of the
		// begin phase by the time we start processing the queue, so we've already
		// dealt with the props. Context in components that specify
		// shouldComponentUpdate is tricky; but we'll have to account for
		// that regardless.
		markSkippedUpdateLanes(newLanes);workInProgress.lanes=newLanes;workInProgress.memoizedState=newState;}{currentlyProcessingQueue=null;}}function callCallback(callback,context){if(typeof callback!=='function'){throw new Error('Invalid argument passed as callback. Expected a function. Instead '+("received: "+callback));}callback.call(context);}function resetHasForceUpdateBeforeProcessing(){hasForceUpdate=false;}function checkHasForceUpdateAfterProcessing(){return hasForceUpdate;}function commitUpdateQueue(finishedWork,finishedQueue,instance){// Commit the effects
		var effects=finishedQueue.effects;finishedQueue.effects=null;if(effects!==null){for(var i=0;i<effects.length;i++){var effect=effects[i];var callback=effect.callback;if(callback!==null){effect.callback=null;callCallback(callback,instance);}}}}var fakeInternalInstance={};// React.Component uses a shared frozen object by default.
		// We'll use it to determine whether we need to initialize legacy refs.
		var emptyRefsObject=new React.Component().refs;var didWarnAboutStateAssignmentForComponent;var didWarnAboutUninitializedState;var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;var didWarnAboutLegacyLifecyclesAndDerivedState;var didWarnAboutUndefinedDerivedState;var warnOnUndefinedDerivedState;var warnOnInvalidCallback;var didWarnAboutDirectlyAssigningPropsToState;var didWarnAboutContextTypeAndContextTypes;var didWarnAboutInvalidateContextType;{didWarnAboutStateAssignmentForComponent=new Set();didWarnAboutUninitializedState=new Set();didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate=new Set();didWarnAboutLegacyLifecyclesAndDerivedState=new Set();didWarnAboutDirectlyAssigningPropsToState=new Set();didWarnAboutUndefinedDerivedState=new Set();didWarnAboutContextTypeAndContextTypes=new Set();didWarnAboutInvalidateContextType=new Set();var didWarnOnInvalidCallback=new Set();warnOnInvalidCallback=function(callback,callerName){if(callback===null||typeof callback==='function'){return;}var key=callerName+'_'+callback;if(!didWarnOnInvalidCallback.has(key)){didWarnOnInvalidCallback.add(key);error('%s(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callerName,callback);}};warnOnUndefinedDerivedState=function(type,partialState){if(partialState===undefined){var componentName=getComponentNameFromType(type)||'Component';if(!didWarnAboutUndefinedDerivedState.has(componentName)){didWarnAboutUndefinedDerivedState.add(componentName);error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. '+'You have returned undefined.',componentName);}}};// This is so gross but it's at least non-critical and can be removed if
		// it causes problems. This is meant to give a nicer error message for
		// ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
		// ...)) which otherwise throws a "_processChildContext is not a function"
		// exception.
		Object.defineProperty(fakeInternalInstance,'_processChildContext',{enumerable:false,value:function(){throw new Error('_processChildContext is not available in React 16+. This likely '+'means you have multiple copies of React and are attempting to nest '+'a React 15 tree inside a React 16 tree using '+"unstable_renderSubtreeIntoContainer, which isn't supported. Try "+'to make sure you have only one copy of React (and ideally, switch '+'to ReactDOM.createPortal).');}});Object.freeze(fakeInternalInstance);}function applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,nextProps){var prevState=workInProgress.memoizedState;var partialState=getDerivedStateFromProps(nextProps,prevState);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{// Invoke the function an extra time to help detect side-effects.
		partialState=getDerivedStateFromProps(nextProps,prevState);}finally{setIsStrictModeForDevtools(false);}}warnOnUndefinedDerivedState(ctor,partialState);}// Merge the partial state and the previous state.
		var memoizedState=partialState===null||partialState===undefined?prevState:assign({},prevState,partialState);workInProgress.memoizedState=memoizedState;// Once the update queue is empty, persist the derived state onto the
		// base state.
		if(workInProgress.lanes===NoLanes){// Queue is always non-null for classes
		var updateQueue=workInProgress.updateQueue;updateQueue.baseState=memoizedState;}}var classComponentUpdater={isMounted:isMounted,enqueueSetState:function(inst,payload,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.payload=payload;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'setState');}update.callback=callback;}var root=enqueueUpdate(fiber,update,lane);if(root!==null){scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitions(root,fiber,lane);}{markStateUpdateScheduled(fiber,lane);}},enqueueReplaceState:function(inst,payload,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.tag=ReplaceState;update.payload=payload;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'replaceState');}update.callback=callback;}var root=enqueueUpdate(fiber,update,lane);if(root!==null){scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitions(root,fiber,lane);}{markStateUpdateScheduled(fiber,lane);}},enqueueForceUpdate:function(inst,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.tag=ForceUpdate;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'forceUpdate');}update.callback=callback;}var root=enqueueUpdate(fiber,update,lane);if(root!==null){scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitions(root,fiber,lane);}{markForceUpdateScheduled(fiber,lane);}}};function checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext){var instance=workInProgress.stateNode;if(typeof instance.shouldComponentUpdate==='function'){var shouldUpdate=instance.shouldComponentUpdate(newProps,newState,nextContext);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{// Invoke the function an extra time to help detect side-effects.
		shouldUpdate=instance.shouldComponentUpdate(newProps,newState,nextContext);}finally{setIsStrictModeForDevtools(false);}}if(shouldUpdate===undefined){error('%s.shouldComponentUpdate(): Returned undefined instead of a '+'boolean value. Make sure to return true or false.',getComponentNameFromType(ctor)||'Component');}}return shouldUpdate;}if(ctor.prototype&&ctor.prototype.isPureReactComponent){return !shallowEqual(oldProps,newProps)||!shallowEqual(oldState,newState);}return true;}function checkClassInstance(workInProgress,ctor,newProps){var instance=workInProgress.stateNode;{var name=getComponentNameFromType(ctor)||'Component';var renderPresent=instance.render;if(!renderPresent){if(ctor.prototype&&typeof ctor.prototype.render==='function'){error('%s(...): No `render` method found on the returned component '+'instance: did you accidentally return an object from the constructor?',name);}else {error('%s(...): No `render` method found on the returned component '+'instance: you may have forgotten to define `render`.',name);}}if(instance.getInitialState&&!instance.getInitialState.isReactClassApproved&&!instance.state){error('getInitialState was defined on %s, a plain JavaScript class. '+'This is only supported for classes created using React.createClass. '+'Did you mean to define a state property instead?',name);}if(instance.getDefaultProps&&!instance.getDefaultProps.isReactClassApproved){error('getDefaultProps was defined on %s, a plain JavaScript class. '+'This is only supported for classes created using React.createClass. '+'Use a static property to define defaultProps instead.',name);}if(instance.propTypes){error('propTypes was defined as an instance property on %s. Use a static '+'property to define propTypes instead.',name);}if(instance.contextType){error('contextType was defined as an instance property on %s. Use a static '+'property to define contextType instead.',name);}{if(instance.contextTypes){error('contextTypes was defined as an instance property on %s. Use a static '+'property to define contextTypes instead.',name);}if(ctor.contextType&&ctor.contextTypes&&!didWarnAboutContextTypeAndContextTypes.has(ctor)){didWarnAboutContextTypeAndContextTypes.add(ctor);error('%s declares both contextTypes and contextType static properties. '+'The legacy contextTypes property will be ignored.',name);}}if(typeof instance.componentShouldUpdate==='function'){error('%s has a method called '+'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+'The name is phrased as a question because the function is '+'expected to return a value.',name);}if(ctor.prototype&&ctor.prototype.isPureReactComponent&&typeof instance.shouldComponentUpdate!=='undefined'){error('%s has a method called shouldComponentUpdate(). '+'shouldComponentUpdate should not be used when extending React.PureComponent. '+'Please extend React.Component if shouldComponentUpdate is used.',getComponentNameFromType(ctor)||'A pure component');}if(typeof instance.componentDidUnmount==='function'){error('%s has a method called '+'componentDidUnmount(). But there is no such lifecycle method. '+'Did you mean componentWillUnmount()?',name);}if(typeof instance.componentDidReceiveProps==='function'){error('%s has a method called '+'componentDidReceiveProps(). But there is no such lifecycle method. '+'If you meant to update the state in response to changing props, '+'use componentWillReceiveProps(). If you meant to fetch data or '+'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',name);}if(typeof instance.componentWillRecieveProps==='function'){error('%s has a method called '+'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',name);}if(typeof instance.UNSAFE_componentWillRecieveProps==='function'){error('%s has a method called '+'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',name);}var hasMutatedProps=instance.props!==newProps;if(instance.props!==undefined&&hasMutatedProps){error('%s(...): When calling super() in `%s`, make sure to pass '+"up the same props that your component's constructor was passed.",name,name);}if(instance.defaultProps){error('Setting defaultProps as an instance property on %s is not supported and will be ignored.'+' Instead, define defaultProps as a static property on %s.',name,name);}if(typeof instance.getSnapshotBeforeUpdate==='function'&&typeof instance.componentDidUpdate!=='function'&&!didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)){didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). '+'This component defines getSnapshotBeforeUpdate() only.',getComponentNameFromType(ctor));}if(typeof instance.getDerivedStateFromProps==='function'){error('%s: getDerivedStateFromProps() is defined as an instance method '+'and will be ignored. Instead, declare it as a static method.',name);}if(typeof instance.getDerivedStateFromError==='function'){error('%s: getDerivedStateFromError() is defined as an instance method '+'and will be ignored. Instead, declare it as a static method.',name);}if(typeof ctor.getSnapshotBeforeUpdate==='function'){error('%s: getSnapshotBeforeUpdate() is defined as a static method '+'and will be ignored. Instead, declare it as an instance method.',name);}var _state=instance.state;if(_state&&(typeof _state!=='object'||isArray(_state))){error('%s.state: must be set to an object or null',name);}if(typeof instance.getChildContext==='function'&&typeof ctor.childContextTypes!=='object'){error('%s.getChildContext(): childContextTypes must be defined in order to '+'use getChildContext().',name);}}}function adoptClassInstance(workInProgress,instance){instance.updater=classComponentUpdater;workInProgress.stateNode=instance;// The instance needs access to the fiber so that it can schedule updates
		set(instance,workInProgress);{instance._reactInternalInstance=fakeInternalInstance;}}function constructClassInstance(workInProgress,ctor,props){var isLegacyContextConsumer=false;var unmaskedContext=emptyContextObject;var context=emptyContextObject;var contextType=ctor.contextType;{if('contextType'in ctor){var isValid=// Allow null for conditional declaration
		contextType===null||contextType!==undefined&&contextType.$$typeof===REACT_CONTEXT_TYPE&&contextType._context===undefined;// Not a <Context.Consumer>
		if(!isValid&&!didWarnAboutInvalidateContextType.has(ctor)){didWarnAboutInvalidateContextType.add(ctor);var addendum='';if(contextType===undefined){addendum=' However, it is set to undefined. '+'This can be caused by a typo or by mixing up named and default imports. '+'This can also happen due to a circular dependency, so '+'try moving the createContext() call to a separate file.';}else if(typeof contextType!=='object'){addendum=' However, it is set to a '+typeof contextType+'.';}else if(contextType.$$typeof===REACT_PROVIDER_TYPE){addendum=' Did you accidentally pass the Context.Provider instead?';}else if(contextType._context!==undefined){// <Context.Consumer>
		addendum=' Did you accidentally pass the Context.Consumer instead?';}else {addendum=' However, it is set to an object with keys {'+Object.keys(contextType).join(', ')+'}.';}error('%s defines an invalid contextType. '+'contextType should point to the Context object returned by React.createContext().%s',getComponentNameFromType(ctor)||'Component',addendum);}}}if(typeof contextType==='object'&&contextType!==null){context=readContext(contextType);}else {unmaskedContext=getUnmaskedContext(workInProgress,ctor,true);var contextTypes=ctor.contextTypes;isLegacyContextConsumer=contextTypes!==null&&contextTypes!==undefined;context=isLegacyContextConsumer?getMaskedContext(workInProgress,unmaskedContext):emptyContextObject;}var instance=new ctor(props,context);// Instantiate twice to help detect side-effects.
		{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{instance=new ctor(props,context);// eslint-disable-line no-new
		}finally{setIsStrictModeForDevtools(false);}}}var state=workInProgress.memoizedState=instance.state!==null&&instance.state!==undefined?instance.state:null;adoptClassInstance(workInProgress,instance);{if(typeof ctor.getDerivedStateFromProps==='function'&&state===null){var componentName=getComponentNameFromType(ctor)||'Component';if(!didWarnAboutUninitializedState.has(componentName)){didWarnAboutUninitializedState.add(componentName);error('`%s` uses `getDerivedStateFromProps` but its initial state is '+'%s. This is not recommended. Instead, define the initial state by '+'assigning an object to `this.state` in the constructor of `%s`. '+'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',componentName,instance.state===null?'null':'undefined',componentName);}}// If new component APIs are defined, "unsafe" lifecycles won't be called.
		// Warn about these lifecycles if they are present.
		// Don't warn about react-lifecycles-compat polyfilled methods though.
		if(typeof ctor.getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function'){var foundWillMountName=null;var foundWillReceivePropsName=null;var foundWillUpdateName=null;if(typeof instance.componentWillMount==='function'&&instance.componentWillMount.__suppressDeprecationWarning!==true){foundWillMountName='componentWillMount';}else if(typeof instance.UNSAFE_componentWillMount==='function'){foundWillMountName='UNSAFE_componentWillMount';}if(typeof instance.componentWillReceiveProps==='function'&&instance.componentWillReceiveProps.__suppressDeprecationWarning!==true){foundWillReceivePropsName='componentWillReceiveProps';}else if(typeof instance.UNSAFE_componentWillReceiveProps==='function'){foundWillReceivePropsName='UNSAFE_componentWillReceiveProps';}if(typeof instance.componentWillUpdate==='function'&&instance.componentWillUpdate.__suppressDeprecationWarning!==true){foundWillUpdateName='componentWillUpdate';}else if(typeof instance.UNSAFE_componentWillUpdate==='function'){foundWillUpdateName='UNSAFE_componentWillUpdate';}if(foundWillMountName!==null||foundWillReceivePropsName!==null||foundWillUpdateName!==null){var _componentName=getComponentNameFromType(ctor)||'Component';var newApiName=typeof ctor.getDerivedStateFromProps==='function'?'getDerivedStateFromProps()':'getSnapshotBeforeUpdate()';if(!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)){didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n'+'%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n'+'The above lifecycles should be removed. Learn more about this warning here:\n'+'https://reactjs.org/link/unsafe-component-lifecycles',_componentName,newApiName,foundWillMountName!==null?"\n  "+foundWillMountName:'',foundWillReceivePropsName!==null?"\n  "+foundWillReceivePropsName:'',foundWillUpdateName!==null?"\n  "+foundWillUpdateName:'');}}}}// Cache unmasked context so we can avoid recreating masked context unless necessary.
		// ReactFiberContext usually updates this cache but can't for newly-created instances.
		if(isLegacyContextConsumer){cacheContext(workInProgress,unmaskedContext,context);}return instance;}function callComponentWillMount(workInProgress,instance){var oldState=instance.state;if(typeof instance.componentWillMount==='function'){instance.componentWillMount();}if(typeof instance.UNSAFE_componentWillMount==='function'){instance.UNSAFE_componentWillMount();}if(oldState!==instance.state){{error('%s.componentWillMount(): Assigning directly to this.state is '+"deprecated (except inside a component's "+'constructor). Use setState instead.',getComponentNameFromFiber(workInProgress)||'Component');}classComponentUpdater.enqueueReplaceState(instance,instance.state,null);}}function callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext){var oldState=instance.state;if(typeof instance.componentWillReceiveProps==='function'){instance.componentWillReceiveProps(newProps,nextContext);}if(typeof instance.UNSAFE_componentWillReceiveProps==='function'){instance.UNSAFE_componentWillReceiveProps(newProps,nextContext);}if(instance.state!==oldState){{var componentName=getComponentNameFromFiber(workInProgress)||'Component';if(!didWarnAboutStateAssignmentForComponent.has(componentName)){didWarnAboutStateAssignmentForComponent.add(componentName);error('%s.componentWillReceiveProps(): Assigning directly to '+"this.state is deprecated (except inside a component's "+'constructor). Use setState instead.',componentName);}}classComponentUpdater.enqueueReplaceState(instance,instance.state,null);}}// Invokes the mount life-cycles on a previously never rendered instance.
		function mountClassInstance(workInProgress,ctor,newProps,renderLanes){{checkClassInstance(workInProgress,ctor,newProps);}var instance=workInProgress.stateNode;instance.props=newProps;instance.state=workInProgress.memoizedState;instance.refs=emptyRefsObject;initializeUpdateQueue(workInProgress);var contextType=ctor.contextType;if(typeof contextType==='object'&&contextType!==null){instance.context=readContext(contextType);}else {var unmaskedContext=getUnmaskedContext(workInProgress,ctor,true);instance.context=getMaskedContext(workInProgress,unmaskedContext);}{if(instance.state===newProps){var componentName=getComponentNameFromType(ctor)||'Component';if(!didWarnAboutDirectlyAssigningPropsToState.has(componentName)){didWarnAboutDirectlyAssigningPropsToState.add(componentName);error('%s: It is not recommended to assign props directly to state '+"because updates to props won't be reflected in state. "+'In most cases, it is better to use props directly.',componentName);}}if(workInProgress.mode&StrictLegacyMode){ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress,instance);}{ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress,instance);}}instance.state=workInProgress.memoizedState;var getDerivedStateFromProps=ctor.getDerivedStateFromProps;if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);instance.state=workInProgress.memoizedState;}// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(typeof ctor.getDerivedStateFromProps!=='function'&&typeof instance.getSnapshotBeforeUpdate!=='function'&&(typeof instance.UNSAFE_componentWillMount==='function'||typeof instance.componentWillMount==='function')){callComponentWillMount(workInProgress,instance);// If we had additional state updates during this life-cycle, let's
		// process them now.
		processUpdateQueue(workInProgress,newProps,instance,renderLanes);instance.state=workInProgress.memoizedState;}if(typeof instance.componentDidMount==='function'){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}workInProgress.flags|=fiberFlags;}}function resumeMountClassInstance(workInProgress,ctor,newProps,renderLanes){var instance=workInProgress.stateNode;var oldProps=workInProgress.memoizedProps;instance.props=oldProps;var oldContext=instance.context;var contextType=ctor.contextType;var nextContext=emptyContextObject;if(typeof contextType==='object'&&contextType!==null){nextContext=readContext(contextType);}else {var nextLegacyUnmaskedContext=getUnmaskedContext(workInProgress,ctor,true);nextContext=getMaskedContext(workInProgress,nextLegacyUnmaskedContext);}var getDerivedStateFromProps=ctor.getDerivedStateFromProps;var hasNewLifecycles=typeof getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function';// Note: During these life-cycles, instance.props/instance.state are what
		// ever the previously attempted to render - not the "current". However,
		// during componentDidUpdate we pass the "current" props.
		// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillReceiveProps==='function'||typeof instance.componentWillReceiveProps==='function')){if(oldProps!==newProps||oldContext!==nextContext){callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext);}}resetHasForceUpdateBeforeProcessing();var oldState=workInProgress.memoizedState;var newState=instance.state=oldState;processUpdateQueue(workInProgress,newProps,instance,renderLanes);newState=workInProgress.memoizedState;if(oldProps===newProps&&oldState===newState&&!hasContextChanged()&&!checkHasForceUpdateAfterProcessing()){// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidMount==='function'){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}workInProgress.flags|=fiberFlags;}return false;}if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);newState=workInProgress.memoizedState;}var shouldUpdate=checkHasForceUpdateAfterProcessing()||checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext);if(shouldUpdate){// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillMount==='function'||typeof instance.componentWillMount==='function')){if(typeof instance.componentWillMount==='function'){instance.componentWillMount();}if(typeof instance.UNSAFE_componentWillMount==='function'){instance.UNSAFE_componentWillMount();}}if(typeof instance.componentDidMount==='function'){var _fiberFlags=Update;{_fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){_fiberFlags|=MountLayoutDev;}workInProgress.flags|=_fiberFlags;}}else {// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidMount==='function'){var _fiberFlags2=Update;{_fiberFlags2|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){_fiberFlags2|=MountLayoutDev;}workInProgress.flags|=_fiberFlags2;}// If shouldComponentUpdate returned false, we should still update the
		// memoized state to indicate that this work can be reused.
		workInProgress.memoizedProps=newProps;workInProgress.memoizedState=newState;}// Update the existing instance's state, props, and context pointers even
		// if shouldComponentUpdate returns false.
		instance.props=newProps;instance.state=newState;instance.context=nextContext;return shouldUpdate;}// Invokes the update life-cycles and returns false if it shouldn't rerender.
		function updateClassInstance(current,workInProgress,ctor,newProps,renderLanes){var instance=workInProgress.stateNode;cloneUpdateQueue(current,workInProgress);var unresolvedOldProps=workInProgress.memoizedProps;var oldProps=workInProgress.type===workInProgress.elementType?unresolvedOldProps:resolveDefaultProps(workInProgress.type,unresolvedOldProps);instance.props=oldProps;var unresolvedNewProps=workInProgress.pendingProps;var oldContext=instance.context;var contextType=ctor.contextType;var nextContext=emptyContextObject;if(typeof contextType==='object'&&contextType!==null){nextContext=readContext(contextType);}else {var nextUnmaskedContext=getUnmaskedContext(workInProgress,ctor,true);nextContext=getMaskedContext(workInProgress,nextUnmaskedContext);}var getDerivedStateFromProps=ctor.getDerivedStateFromProps;var hasNewLifecycles=typeof getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function';// Note: During these life-cycles, instance.props/instance.state are what
		// ever the previously attempted to render - not the "current". However,
		// during componentDidUpdate we pass the "current" props.
		// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillReceiveProps==='function'||typeof instance.componentWillReceiveProps==='function')){if(unresolvedOldProps!==unresolvedNewProps||oldContext!==nextContext){callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext);}}resetHasForceUpdateBeforeProcessing();var oldState=workInProgress.memoizedState;var newState=instance.state=oldState;processUpdateQueue(workInProgress,newProps,instance,renderLanes);newState=workInProgress.memoizedState;if(unresolvedOldProps===unresolvedNewProps&&oldState===newState&&!hasContextChanged()&&!checkHasForceUpdateAfterProcessing()&&!enableLazyContextPropagation){// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Update;}}if(typeof instance.getSnapshotBeforeUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Snapshot;}}return false;}if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);newState=workInProgress.memoizedState;}var shouldUpdate=checkHasForceUpdateAfterProcessing()||checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext)||// TODO: In some cases, we'll end up checking if context has changed twice,
		// both before and after `shouldComponentUpdate` has been called. Not ideal,
		// but I'm loath to refactor this function. This only happens for memoized
		// components so it's not that common.
		enableLazyContextPropagation;if(shouldUpdate){// In order to support react-lifecycles-compat polyfilled components,
		// Unsafe lifecycles should not be invoked for components using the new APIs.
		if(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillUpdate==='function'||typeof instance.componentWillUpdate==='function')){if(typeof instance.componentWillUpdate==='function'){instance.componentWillUpdate(newProps,newState,nextContext);}if(typeof instance.UNSAFE_componentWillUpdate==='function'){instance.UNSAFE_componentWillUpdate(newProps,newState,nextContext);}}if(typeof instance.componentDidUpdate==='function'){workInProgress.flags|=Update;}if(typeof instance.getSnapshotBeforeUpdate==='function'){workInProgress.flags|=Snapshot;}}else {// If an update was already in progress, we should schedule an Update
		// effect even though we're bailing out, so that cWU/cDU are called.
		if(typeof instance.componentDidUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Update;}}if(typeof instance.getSnapshotBeforeUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Snapshot;}}// If shouldComponentUpdate returned false, we should still update the
		// memoized props/state to indicate that this work can be reused.
		workInProgress.memoizedProps=newProps;workInProgress.memoizedState=newState;}// Update the existing instance's state, props, and context pointers even
		// if shouldComponentUpdate returns false.
		instance.props=newProps;instance.state=newState;instance.context=nextContext;return shouldUpdate;}var didWarnAboutMaps;var didWarnAboutGenerators;var didWarnAboutStringRefs;var ownerHasKeyUseWarning;var ownerHasFunctionTypeWarning;var warnForMissingKey=function(child,returnFiber){};{didWarnAboutMaps=false;didWarnAboutGenerators=false;didWarnAboutStringRefs={};/**
		   * Warn if there's no key explicitly set on dynamic arrays of children or
		   * object keys are not valid. This allows us to keep track of children between
		   * updates.
		   */ownerHasKeyUseWarning={};ownerHasFunctionTypeWarning={};warnForMissingKey=function(child,returnFiber){if(child===null||typeof child!=='object'){return;}if(!child._store||child._store.validated||child.key!=null){return;}if(typeof child._store!=='object'){throw new Error('React Component in warnForMissingKey should have a _store. '+'This error is likely caused by a bug in React. Please file an issue.');}child._store.validated=true;var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(ownerHasKeyUseWarning[componentName]){return;}ownerHasKeyUseWarning[componentName]=true;error('Each child in a list should have a unique '+'"key" prop. See https://reactjs.org/link/warning-keys for '+'more information.');};}function coerceRef(returnFiber,current,element){var mixedRef=element.ref;if(mixedRef!==null&&typeof mixedRef!=='function'&&typeof mixedRef!=='object'){{// TODO: Clean this up once we turn on the string ref warning for
		// everyone, because the strict mode case will no longer be relevant
		if((returnFiber.mode&StrictLegacyMode||warnAboutStringRefs)&&// We warn in ReactElement.js if owner and self are equal for string refs
		// because these cannot be automatically converted to an arrow function
		// using a codemod. Therefore, we don't have to warn about string refs again.
		!(element._owner&&element._self&&element._owner.stateNode!==element._self)){var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(!didWarnAboutStringRefs[componentName]){{error('A string ref, "%s", has been found within a strict mode tree. '+'String refs are a source of potential bugs and should be avoided. '+'We recommend using useRef() or createRef() instead. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-string-ref',mixedRef);}didWarnAboutStringRefs[componentName]=true;}}}if(element._owner){var owner=element._owner;var inst;if(owner){var ownerFiber=owner;if(ownerFiber.tag!==ClassComponent){throw new Error('Function components cannot have string refs. '+'We recommend using useRef() instead. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-string-ref');}inst=ownerFiber.stateNode;}if(!inst){throw new Error("Missing owner for string ref "+mixedRef+". This error is likely caused by a "+'bug in React. Please file an issue.');}// Assigning this to a const so Flow knows it won't change in the closure
		var resolvedInst=inst;{checkPropStringCoercion(mixedRef,'ref');}var stringRef=''+mixedRef;// Check if previous string ref matches new string ref
		if(current!==null&&current.ref!==null&&typeof current.ref==='function'&&current.ref._stringRef===stringRef){return current.ref;}var ref=function(value){var refs=resolvedInst.refs;if(refs===emptyRefsObject){// This is a lazy pooled frozen object, so we need to initialize.
		refs=resolvedInst.refs={};}if(value===null){delete refs[stringRef];}else {refs[stringRef]=value;}};ref._stringRef=stringRef;return ref;}else {if(typeof mixedRef!=='string'){throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');}if(!element._owner){throw new Error("Element ref was specified as a string ("+mixedRef+") but no owner was set. This could happen for one of"+' the following reasons:\n'+'1. You may be adding a ref to a function component\n'+"2. You may be adding a ref to a component that was not created inside a component's render method\n"+'3. You have multiple copies of React loaded\n'+'See https://reactjs.org/link/refs-must-have-owner for more information.');}}}return mixedRef;}function throwOnInvalidObjectType(returnFiber,newChild){var childString=Object.prototype.toString.call(newChild);throw new Error("Objects are not valid as a React child (found: "+(childString==='[object Object]'?'object with keys {'+Object.keys(newChild).join(', ')+'}':childString)+"). "+'If you meant to render a collection of children, use an array '+'instead.');}function warnOnFunctionType(returnFiber){{var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(ownerHasFunctionTypeWarning[componentName]){return;}ownerHasFunctionTypeWarning[componentName]=true;error('Functions are not valid as a React child. This may happen if '+'you return a Component instead of <Component /> from render. '+'Or maybe you meant to call this function rather than return it.');}}function resolveLazy(lazyType){var payload=lazyType._payload;var init=lazyType._init;return init(payload);}// This wrapper function exists because I expect to clone the code in each path
		// to be able to optimize each path individually by branching early. This needs
		// a compiler or we can do it manually. Helpers that don't need this branching
		// live outside of this function.
		function ChildReconciler(shouldTrackSideEffects){function deleteChild(returnFiber,childToDelete){if(!shouldTrackSideEffects){// Noop.
		return;}var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[childToDelete];returnFiber.flags|=ChildDeletion;}else {deletions.push(childToDelete);}}function deleteRemainingChildren(returnFiber,currentFirstChild){if(!shouldTrackSideEffects){// Noop.
		return null;}// TODO: For the shouldClone case, this could be micro-optimized a bit by
		// assuming that after the first child we've already added everything.
		var childToDelete=currentFirstChild;while(childToDelete!==null){deleteChild(returnFiber,childToDelete);childToDelete=childToDelete.sibling;}return null;}function mapRemainingChildren(returnFiber,currentFirstChild){// Add the remaining children to a temporary map so that we can find them by
		// keys quickly. Implicit (null) keys get added to this set with their index
		// instead.
		var existingChildren=new Map();var existingChild=currentFirstChild;while(existingChild!==null){if(existingChild.key!==null){existingChildren.set(existingChild.key,existingChild);}else {existingChildren.set(existingChild.index,existingChild);}existingChild=existingChild.sibling;}return existingChildren;}function useFiber(fiber,pendingProps){// We currently set sibling to null and index to 0 here because it is easy
		// to forget to do before returning it. E.g. for the single child case.
		var clone=createWorkInProgress(fiber,pendingProps);clone.index=0;clone.sibling=null;return clone;}function placeChild(newFiber,lastPlacedIndex,newIndex){newFiber.index=newIndex;if(!shouldTrackSideEffects){// During hydration, the useId algorithm needs to know which fibers are
		// part of a list of children (arrays, iterators).
		newFiber.flags|=Forked;return lastPlacedIndex;}var current=newFiber.alternate;if(current!==null){var oldIndex=current.index;if(oldIndex<lastPlacedIndex){// This is a move.
		newFiber.flags|=Placement;return lastPlacedIndex;}else {// This item can stay in place.
		return oldIndex;}}else {// This is an insertion.
		newFiber.flags|=Placement;return lastPlacedIndex;}}function placeSingleChild(newFiber){// This is simpler for the single child case. We only need to do a
		// placement for inserting new children.
		if(shouldTrackSideEffects&&newFiber.alternate===null){newFiber.flags|=Placement;}return newFiber;}function updateTextNode(returnFiber,current,textContent,lanes){if(current===null||current.tag!==HostText){// Insert
		var created=createFiberFromText(textContent,returnFiber.mode,lanes);created.return=returnFiber;return created;}else {// Update
		var existing=useFiber(current,textContent);existing.return=returnFiber;return existing;}}function updateElement(returnFiber,current,element,lanes){var elementType=element.type;if(elementType===REACT_FRAGMENT_TYPE){return updateFragment(returnFiber,current,element.props.children,lanes,element.key);}if(current!==null){if(current.elementType===elementType||// Keep this check inline so it only runs on the false path:
		isCompatibleFamilyForHotReloading(current,element)||// Lazy types should reconcile their resolved type.
		// We need to do this after the Hot Reloading check above,
		// because hot reloading has different semantics than prod because
		// it doesn't resuspend. So we can't let the call below suspend.
		typeof elementType==='object'&&elementType!==null&&elementType.$$typeof===REACT_LAZY_TYPE&&resolveLazy(elementType)===current.type){// Move based on index
		var existing=useFiber(current,element.props);existing.ref=coerceRef(returnFiber,current,element);existing.return=returnFiber;{existing._debugSource=element._source;existing._debugOwner=element._owner;}return existing;}}// Insert
		var created=createFiberFromElement(element,returnFiber.mode,lanes);created.ref=coerceRef(returnFiber,current,element);created.return=returnFiber;return created;}function updatePortal(returnFiber,current,portal,lanes){if(current===null||current.tag!==HostPortal||current.stateNode.containerInfo!==portal.containerInfo||current.stateNode.implementation!==portal.implementation){// Insert
		var created=createFiberFromPortal(portal,returnFiber.mode,lanes);created.return=returnFiber;return created;}else {// Update
		var existing=useFiber(current,portal.children||[]);existing.return=returnFiber;return existing;}}function updateFragment(returnFiber,current,fragment,lanes,key){if(current===null||current.tag!==Fragment){// Insert
		var created=createFiberFromFragment(fragment,returnFiber.mode,lanes,key);created.return=returnFiber;return created;}else {// Update
		var existing=useFiber(current,fragment);existing.return=returnFiber;return existing;}}function createChild(returnFiber,newChild,lanes){if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys. If the previous node is implicitly keyed
		// we can continue to replace it without aborting even if it is not a text
		// node.
		var created=createFiberFromText(''+newChild,returnFiber.mode,lanes);created.return=returnFiber;return created;}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{var _created=createFiberFromElement(newChild,returnFiber.mode,lanes);_created.ref=coerceRef(returnFiber,null,newChild);_created.return=returnFiber;return _created;}case REACT_PORTAL_TYPE:{var _created2=createFiberFromPortal(newChild,returnFiber.mode,lanes);_created2.return=returnFiber;return _created2;}case REACT_LAZY_TYPE:{var payload=newChild._payload;var init=newChild._init;return createChild(returnFiber,init(payload),lanes);}}if(isArray(newChild)||getIteratorFn(newChild)){var _created3=createFiberFromFragment(newChild,returnFiber.mode,lanes,null);_created3.return=returnFiber;return _created3;}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}function updateSlot(returnFiber,oldFiber,newChild,lanes){// Update the fiber if the keys match, otherwise return null.
		var key=oldFiber!==null?oldFiber.key:null;if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys. If the previous node is implicitly keyed
		// we can continue to replace it without aborting even if it is not a text
		// node.
		if(key!==null){return null;}return updateTextNode(returnFiber,oldFiber,''+newChild,lanes);}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{if(newChild.key===key){return updateElement(returnFiber,oldFiber,newChild,lanes);}else {return null;}}case REACT_PORTAL_TYPE:{if(newChild.key===key){return updatePortal(returnFiber,oldFiber,newChild,lanes);}else {return null;}}case REACT_LAZY_TYPE:{var payload=newChild._payload;var init=newChild._init;return updateSlot(returnFiber,oldFiber,init(payload),lanes);}}if(isArray(newChild)||getIteratorFn(newChild)){if(key!==null){return null;}return updateFragment(returnFiber,oldFiber,newChild,lanes,null);}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}function updateFromMap(existingChildren,returnFiber,newIdx,newChild,lanes){if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys, so we neither have to check the old nor
		// new node for the key. If both are text nodes, they match.
		var matchedFiber=existingChildren.get(newIdx)||null;return updateTextNode(returnFiber,matchedFiber,''+newChild,lanes);}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{var _matchedFiber=existingChildren.get(newChild.key===null?newIdx:newChild.key)||null;return updateElement(returnFiber,_matchedFiber,newChild,lanes);}case REACT_PORTAL_TYPE:{var _matchedFiber2=existingChildren.get(newChild.key===null?newIdx:newChild.key)||null;return updatePortal(returnFiber,_matchedFiber2,newChild,lanes);}case REACT_LAZY_TYPE:var payload=newChild._payload;var init=newChild._init;return updateFromMap(existingChildren,returnFiber,newIdx,init(payload),lanes);}if(isArray(newChild)||getIteratorFn(newChild)){var _matchedFiber3=existingChildren.get(newIdx)||null;return updateFragment(returnFiber,_matchedFiber3,newChild,lanes,null);}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}/**
		   * Warns if there is a duplicate or missing key
		   */function warnOnInvalidKey(child,knownKeys,returnFiber){{if(typeof child!=='object'||child===null){return knownKeys;}switch(child.$$typeof){case REACT_ELEMENT_TYPE:case REACT_PORTAL_TYPE:warnForMissingKey(child,returnFiber);var key=child.key;if(typeof key!=='string'){break;}if(knownKeys===null){knownKeys=new Set();knownKeys.add(key);break;}if(!knownKeys.has(key)){knownKeys.add(key);break;}error('Encountered two children with the same key, `%s`. '+'Keys should be unique so that components maintain their identity '+'across updates. Non-unique keys may cause children to be '+'duplicated and/or omitted — the behavior is unsupported and '+'could change in a future version.',key);break;case REACT_LAZY_TYPE:var payload=child._payload;var init=child._init;warnOnInvalidKey(init(payload),knownKeys,returnFiber);break;}}return knownKeys;}function reconcileChildrenArray(returnFiber,currentFirstChild,newChildren,lanes){// This algorithm can't optimize by searching from both ends since we
		// don't have backpointers on fibers. I'm trying to see how far we can get
		// with that model. If it ends up not being worth the tradeoffs, we can
		// add it later.
		// Even with a two ended optimization, we'd want to optimize for the case
		// where there are few changes and brute force the comparison instead of
		// going for the Map. It'd like to explore hitting that path first in
		// forward-only mode and only go for the Map once we notice that we need
		// lots of look ahead. This doesn't handle reversal as well as two ended
		// search but that's unusual. Besides, for the two ended optimization to
		// work on Iterables, we'd need to copy the whole set.
		// In this first iteration, we'll just live with hitting the bad case
		// (adding everything to a Map) in for every insert/move.
		// If you change this code, also update reconcileChildrenIterator() which
		// uses the same algorithm.
		{// First, validate keys.
		var knownKeys=null;for(var i=0;i<newChildren.length;i++){var child=newChildren[i];knownKeys=warnOnInvalidKey(child,knownKeys,returnFiber);}}var resultingFirstChild=null;var previousNewFiber=null;var oldFiber=currentFirstChild;var lastPlacedIndex=0;var newIdx=0;var nextOldFiber=null;for(;oldFiber!==null&&newIdx<newChildren.length;newIdx++){if(oldFiber.index>newIdx){nextOldFiber=oldFiber;oldFiber=null;}else {nextOldFiber=oldFiber.sibling;}var newFiber=updateSlot(returnFiber,oldFiber,newChildren[newIdx],lanes);if(newFiber===null){// TODO: This breaks on empty slots like null children. That's
		// unfortunate because it triggers the slow path all the time. We need
		// a better way to communicate whether this was a miss or null,
		// boolean, undefined, etc.
		if(oldFiber===null){oldFiber=nextOldFiber;}break;}if(shouldTrackSideEffects){if(oldFiber&&newFiber.alternate===null){// We matched the slot, but we didn't reuse the existing fiber, so we
		// need to delete the existing child.
		deleteChild(returnFiber,oldFiber);}}lastPlacedIndex=placeChild(newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=newFiber;}else {// TODO: Defer siblings if we're not at the right index for this slot.
		// I.e. if we had null values before, then we want to defer this
		// for each null value. However, we also don't want to call updateSlot
		// with the previous one.
		previousNewFiber.sibling=newFiber;}previousNewFiber=newFiber;oldFiber=nextOldFiber;}if(newIdx===newChildren.length){// We've reached the end of the new children. We can delete the rest.
		deleteRemainingChildren(returnFiber,oldFiber);if(getIsHydrating()){var numberOfForks=newIdx;pushTreeFork(returnFiber,numberOfForks);}return resultingFirstChild;}if(oldFiber===null){// If we don't have any more existing children we can choose a fast path
		// since the rest will all be insertions.
		for(;newIdx<newChildren.length;newIdx++){var _newFiber=createChild(returnFiber,newChildren[newIdx],lanes);if(_newFiber===null){continue;}lastPlacedIndex=placeChild(_newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=_newFiber;}else {previousNewFiber.sibling=_newFiber;}previousNewFiber=_newFiber;}if(getIsHydrating()){var _numberOfForks=newIdx;pushTreeFork(returnFiber,_numberOfForks);}return resultingFirstChild;}// Add all children to a key map for quick lookups.
		var existingChildren=mapRemainingChildren(returnFiber,oldFiber);// Keep scanning and use the map to restore deleted items as moves.
		for(;newIdx<newChildren.length;newIdx++){var _newFiber2=updateFromMap(existingChildren,returnFiber,newIdx,newChildren[newIdx],lanes);if(_newFiber2!==null){if(shouldTrackSideEffects){if(_newFiber2.alternate!==null){// The new fiber is a work in progress, but if there exists a
		// current, that means that we reused the fiber. We need to delete
		// it from the child list so that we don't add it to the deletion
		// list.
		existingChildren.delete(_newFiber2.key===null?newIdx:_newFiber2.key);}}lastPlacedIndex=placeChild(_newFiber2,lastPlacedIndex,newIdx);if(previousNewFiber===null){resultingFirstChild=_newFiber2;}else {previousNewFiber.sibling=_newFiber2;}previousNewFiber=_newFiber2;}}if(shouldTrackSideEffects){// Any existing children that weren't consumed above were deleted. We need
		// to add them to the deletion list.
		existingChildren.forEach(function(child){return deleteChild(returnFiber,child);});}if(getIsHydrating()){var _numberOfForks2=newIdx;pushTreeFork(returnFiber,_numberOfForks2);}return resultingFirstChild;}function reconcileChildrenIterator(returnFiber,currentFirstChild,newChildrenIterable,lanes){// This is the same implementation as reconcileChildrenArray(),
		// but using the iterator instead.
		var iteratorFn=getIteratorFn(newChildrenIterable);if(typeof iteratorFn!=='function'){throw new Error('An object is not an iterable. This error is likely caused by a bug in '+'React. Please file an issue.');}{// We don't support rendering Generators because it's a mutation.
		// See https://github.com/facebook/react/issues/12995
		if(typeof Symbol==='function'&&// $FlowFixMe Flow doesn't know about toStringTag
		newChildrenIterable[Symbol.toStringTag]==='Generator'){if(!didWarnAboutGenerators){error('Using Generators as children is unsupported and will likely yield '+'unexpected results because enumerating a generator mutates it. '+'You may convert it to an array with `Array.from()` or the '+'`[...spread]` operator before rendering. Keep in mind '+'you might need to polyfill these features for older browsers.');}didWarnAboutGenerators=true;}// Warn about using Maps as children
		if(newChildrenIterable.entries===iteratorFn){if(!didWarnAboutMaps){error('Using Maps as children is not supported. '+'Use an array of keyed ReactElements instead.');}didWarnAboutMaps=true;}// First, validate keys.
		// We'll get a different iterator later for the main pass.
		var _newChildren=iteratorFn.call(newChildrenIterable);if(_newChildren){var knownKeys=null;var _step=_newChildren.next();for(;!_step.done;_step=_newChildren.next()){var child=_step.value;knownKeys=warnOnInvalidKey(child,knownKeys,returnFiber);}}}var newChildren=iteratorFn.call(newChildrenIterable);if(newChildren==null){throw new Error('An iterable object provided no iterator.');}var resultingFirstChild=null;var previousNewFiber=null;var oldFiber=currentFirstChild;var lastPlacedIndex=0;var newIdx=0;var nextOldFiber=null;var step=newChildren.next();for(;oldFiber!==null&&!step.done;newIdx++,step=newChildren.next()){if(oldFiber.index>newIdx){nextOldFiber=oldFiber;oldFiber=null;}else {nextOldFiber=oldFiber.sibling;}var newFiber=updateSlot(returnFiber,oldFiber,step.value,lanes);if(newFiber===null){// TODO: This breaks on empty slots like null children. That's
		// unfortunate because it triggers the slow path all the time. We need
		// a better way to communicate whether this was a miss or null,
		// boolean, undefined, etc.
		if(oldFiber===null){oldFiber=nextOldFiber;}break;}if(shouldTrackSideEffects){if(oldFiber&&newFiber.alternate===null){// We matched the slot, but we didn't reuse the existing fiber, so we
		// need to delete the existing child.
		deleteChild(returnFiber,oldFiber);}}lastPlacedIndex=placeChild(newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=newFiber;}else {// TODO: Defer siblings if we're not at the right index for this slot.
		// I.e. if we had null values before, then we want to defer this
		// for each null value. However, we also don't want to call updateSlot
		// with the previous one.
		previousNewFiber.sibling=newFiber;}previousNewFiber=newFiber;oldFiber=nextOldFiber;}if(step.done){// We've reached the end of the new children. We can delete the rest.
		deleteRemainingChildren(returnFiber,oldFiber);if(getIsHydrating()){var numberOfForks=newIdx;pushTreeFork(returnFiber,numberOfForks);}return resultingFirstChild;}if(oldFiber===null){// If we don't have any more existing children we can choose a fast path
		// since the rest will all be insertions.
		for(;!step.done;newIdx++,step=newChildren.next()){var _newFiber3=createChild(returnFiber,step.value,lanes);if(_newFiber3===null){continue;}lastPlacedIndex=placeChild(_newFiber3,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.
		resultingFirstChild=_newFiber3;}else {previousNewFiber.sibling=_newFiber3;}previousNewFiber=_newFiber3;}if(getIsHydrating()){var _numberOfForks3=newIdx;pushTreeFork(returnFiber,_numberOfForks3);}return resultingFirstChild;}// Add all children to a key map for quick lookups.
		var existingChildren=mapRemainingChildren(returnFiber,oldFiber);// Keep scanning and use the map to restore deleted items as moves.
		for(;!step.done;newIdx++,step=newChildren.next()){var _newFiber4=updateFromMap(existingChildren,returnFiber,newIdx,step.value,lanes);if(_newFiber4!==null){if(shouldTrackSideEffects){if(_newFiber4.alternate!==null){// The new fiber is a work in progress, but if there exists a
		// current, that means that we reused the fiber. We need to delete
		// it from the child list so that we don't add it to the deletion
		// list.
		existingChildren.delete(_newFiber4.key===null?newIdx:_newFiber4.key);}}lastPlacedIndex=placeChild(_newFiber4,lastPlacedIndex,newIdx);if(previousNewFiber===null){resultingFirstChild=_newFiber4;}else {previousNewFiber.sibling=_newFiber4;}previousNewFiber=_newFiber4;}}if(shouldTrackSideEffects){// Any existing children that weren't consumed above were deleted. We need
		// to add them to the deletion list.
		existingChildren.forEach(function(child){return deleteChild(returnFiber,child);});}if(getIsHydrating()){var _numberOfForks4=newIdx;pushTreeFork(returnFiber,_numberOfForks4);}return resultingFirstChild;}function reconcileSingleTextNode(returnFiber,currentFirstChild,textContent,lanes){// There's no need to check for keys on text nodes since we don't have a
		// way to define them.
		if(currentFirstChild!==null&&currentFirstChild.tag===HostText){// We already have an existing node so let's just update it and delete
		// the rest.
		deleteRemainingChildren(returnFiber,currentFirstChild.sibling);var existing=useFiber(currentFirstChild,textContent);existing.return=returnFiber;return existing;}// The existing first child is not a text node so we need to create one
		// and delete the existing ones.
		deleteRemainingChildren(returnFiber,currentFirstChild);var created=createFiberFromText(textContent,returnFiber.mode,lanes);created.return=returnFiber;return created;}function reconcileSingleElement(returnFiber,currentFirstChild,element,lanes){var key=element.key;var child=currentFirstChild;while(child!==null){// TODO: If key === null and child.key === null, then this only applies to
		// the first item in the list.
		if(child.key===key){var elementType=element.type;if(elementType===REACT_FRAGMENT_TYPE){if(child.tag===Fragment){deleteRemainingChildren(returnFiber,child.sibling);var existing=useFiber(child,element.props.children);existing.return=returnFiber;{existing._debugSource=element._source;existing._debugOwner=element._owner;}return existing;}}else {if(child.elementType===elementType||// Keep this check inline so it only runs on the false path:
		isCompatibleFamilyForHotReloading(child,element)||// Lazy types should reconcile their resolved type.
		// We need to do this after the Hot Reloading check above,
		// because hot reloading has different semantics than prod because
		// it doesn't resuspend. So we can't let the call below suspend.
		typeof elementType==='object'&&elementType!==null&&elementType.$$typeof===REACT_LAZY_TYPE&&resolveLazy(elementType)===child.type){deleteRemainingChildren(returnFiber,child.sibling);var _existing=useFiber(child,element.props);_existing.ref=coerceRef(returnFiber,child,element);_existing.return=returnFiber;{_existing._debugSource=element._source;_existing._debugOwner=element._owner;}return _existing;}}// Didn't match.
		deleteRemainingChildren(returnFiber,child);break;}else {deleteChild(returnFiber,child);}child=child.sibling;}if(element.type===REACT_FRAGMENT_TYPE){var created=createFiberFromFragment(element.props.children,returnFiber.mode,lanes,element.key);created.return=returnFiber;return created;}else {var _created4=createFiberFromElement(element,returnFiber.mode,lanes);_created4.ref=coerceRef(returnFiber,currentFirstChild,element);_created4.return=returnFiber;return _created4;}}function reconcileSinglePortal(returnFiber,currentFirstChild,portal,lanes){var key=portal.key;var child=currentFirstChild;while(child!==null){// TODO: If key === null and child.key === null, then this only applies to
		// the first item in the list.
		if(child.key===key){if(child.tag===HostPortal&&child.stateNode.containerInfo===portal.containerInfo&&child.stateNode.implementation===portal.implementation){deleteRemainingChildren(returnFiber,child.sibling);var existing=useFiber(child,portal.children||[]);existing.return=returnFiber;return existing;}else {deleteRemainingChildren(returnFiber,child);break;}}else {deleteChild(returnFiber,child);}child=child.sibling;}var created=createFiberFromPortal(portal,returnFiber.mode,lanes);created.return=returnFiber;return created;}// This API will tag the children with the side-effect of the reconciliation
		// itself. They will be added to the side-effect list as we pass through the
		// children and the parent.
		function reconcileChildFibers(returnFiber,currentFirstChild,newChild,lanes){// This function is not recursive.
		// If the top level item is an array, we treat it as a set of children,
		// not as a fragment. Nested arrays on the other hand will be treated as
		// fragment nodes. Recursion happens at the normal flow.
		// Handle top level unkeyed fragments as if they were arrays.
		// This leads to an ambiguity between <>{[...]}</> and <>...</>.
		// We treat the ambiguous cases above the same.
		var isUnkeyedTopLevelFragment=typeof newChild==='object'&&newChild!==null&&newChild.type===REACT_FRAGMENT_TYPE&&newChild.key===null;if(isUnkeyedTopLevelFragment){newChild=newChild.props.children;}// Handle object types
		if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:return placeSingleChild(reconcileSingleElement(returnFiber,currentFirstChild,newChild,lanes));case REACT_PORTAL_TYPE:return placeSingleChild(reconcileSinglePortal(returnFiber,currentFirstChild,newChild,lanes));case REACT_LAZY_TYPE:var payload=newChild._payload;var init=newChild._init;// TODO: This function is supposed to be non-recursive.
		return reconcileChildFibers(returnFiber,currentFirstChild,init(payload),lanes);}if(isArray(newChild)){return reconcileChildrenArray(returnFiber,currentFirstChild,newChild,lanes);}if(getIteratorFn(newChild)){return reconcileChildrenIterator(returnFiber,currentFirstChild,newChild,lanes);}throwOnInvalidObjectType(returnFiber,newChild);}if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){return placeSingleChild(reconcileSingleTextNode(returnFiber,currentFirstChild,''+newChild,lanes));}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}// Remaining cases are all treated as empty.
		return deleteRemainingChildren(returnFiber,currentFirstChild);}return reconcileChildFibers;}var reconcileChildFibers=ChildReconciler(true);var mountChildFibers=ChildReconciler(false);function cloneChildFibers(current,workInProgress){if(current!==null&&workInProgress.child!==current.child){throw new Error('Resuming work not yet implemented.');}if(workInProgress.child===null){return;}var currentChild=workInProgress.child;var newChild=createWorkInProgress(currentChild,currentChild.pendingProps);workInProgress.child=newChild;newChild.return=workInProgress;while(currentChild.sibling!==null){currentChild=currentChild.sibling;newChild=newChild.sibling=createWorkInProgress(currentChild,currentChild.pendingProps);newChild.return=workInProgress;}newChild.sibling=null;}// Reset a workInProgress child set to prepare it for a second pass.
		function resetChildFibers(workInProgress,lanes){var child=workInProgress.child;while(child!==null){resetWorkInProgress(child,lanes);child=child.sibling;}}var NO_CONTEXT={};var contextStackCursor$1=createCursor(NO_CONTEXT);var contextFiberStackCursor=createCursor(NO_CONTEXT);var rootInstanceStackCursor=createCursor(NO_CONTEXT);function requiredContext(c){if(c===NO_CONTEXT){throw new Error('Expected host context to exist. This error is likely caused by a bug '+'in React. Please file an issue.');}return c;}function getRootHostContainer(){var rootInstance=requiredContext(rootInstanceStackCursor.current);return rootInstance;}function pushHostContainer(fiber,nextRootInstance){// Push current root instance onto the stack;
		// This allows us to reset root when portals are popped.
		push(rootInstanceStackCursor,nextRootInstance,fiber);// Track the context and the Fiber that provided it.
		// This enables us to pop only Fibers that provide unique contexts.
		push(contextFiberStackCursor,fiber,fiber);// Finally, we need to push the host context to the stack.
		// However, we can't just call getRootHostContext() and push it because
		// we'd have a different number of entries on the stack depending on
		// whether getRootHostContext() throws somewhere in renderer code or not.
		// So we push an empty value first. This lets us safely unwind on errors.
		push(contextStackCursor$1,NO_CONTEXT,fiber);var nextRootContext=getRootHostContext(nextRootInstance);// Now that we know this function doesn't throw, replace it.
		pop(contextStackCursor$1,fiber);push(contextStackCursor$1,nextRootContext,fiber);}function popHostContainer(fiber){pop(contextStackCursor$1,fiber);pop(contextFiberStackCursor,fiber);pop(rootInstanceStackCursor,fiber);}function getHostContext(){var context=requiredContext(contextStackCursor$1.current);return context;}function pushHostContext(fiber){requiredContext(rootInstanceStackCursor.current);var context=requiredContext(contextStackCursor$1.current);var nextContext=getChildHostContext(context,fiber.type);// Don't push this Fiber's context unless it's unique.
		if(context===nextContext){return;}// Track the context and the Fiber that provided it.
		// This enables us to pop only Fibers that provide unique contexts.
		push(contextFiberStackCursor,fiber,fiber);push(contextStackCursor$1,nextContext,fiber);}function popHostContext(fiber){// Do not pop unless this Fiber provided the current context.
		// pushHostContext() only pushes Fibers that provide unique contexts.
		if(contextFiberStackCursor.current!==fiber){return;}pop(contextStackCursor$1,fiber);pop(contextFiberStackCursor,fiber);}var DefaultSuspenseContext=0;// The Suspense Context is split into two parts. The lower bits is
		// inherited deeply down the subtree. The upper bits only affect
		// this immediate suspense boundary and gets reset each new
		// boundary or suspense list.
		var SubtreeSuspenseContextMask=1;// Subtree Flags:
		// InvisibleParentSuspenseContext indicates that one of our parent Suspense
		// boundaries is not currently showing visible main content.
		// Either because it is already showing a fallback or is not mounted at all.
		// We can use this to determine if it is desirable to trigger a fallback at
		// the parent. If not, then we might need to trigger undesirable boundaries
		// and/or suspend the commit to avoid hiding the parent content.
		var InvisibleParentSuspenseContext=1;// Shallow Flags:
		// ForceSuspenseFallback can be used by SuspenseList to force newly added
		// items into their fallback state during one of the render passes.
		var ForceSuspenseFallback=2;var suspenseStackCursor=createCursor(DefaultSuspenseContext);function hasSuspenseContext(parentContext,flag){return (parentContext&flag)!==0;}function setDefaultShallowSuspenseContext(parentContext){return parentContext&SubtreeSuspenseContextMask;}function setShallowSuspenseContext(parentContext,shallowContext){return parentContext&SubtreeSuspenseContextMask|shallowContext;}function addSubtreeSuspenseContext(parentContext,subtreeContext){return parentContext|subtreeContext;}function pushSuspenseContext(fiber,newContext){push(suspenseStackCursor,newContext,fiber);}function popSuspenseContext(fiber){pop(suspenseStackCursor,fiber);}function shouldCaptureSuspense(workInProgress,hasInvisibleParent){// If it was the primary children that just suspended, capture and render the
		// fallback. Otherwise, don't capture and bubble to the next boundary.
		var nextState=workInProgress.memoizedState;if(nextState!==null){if(nextState.dehydrated!==null){// A dehydrated boundary always captures.
		return true;}return false;}workInProgress.memoizedProps;// Regular boundaries always capture.
		{return true;}// If it's a boundary we should avoid, then we prefer to bubble up to the
		}function findFirstSuspended(row){var node=row;while(node!==null){if(node.tag===SuspenseComponent){var state=node.memoizedState;if(state!==null){var dehydrated=state.dehydrated;if(dehydrated===null||isSuspenseInstancePending(dehydrated)||isSuspenseInstanceFallback(dehydrated)){return node;}}}else if(node.tag===SuspenseListComponent&&// revealOrder undefined can't be trusted because it don't
		// keep track of whether it suspended or not.
		node.memoizedProps.revealOrder!==undefined){var didSuspend=(node.flags&DidCapture)!==NoFlags;if(didSuspend){return node;}}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===row){return null;}while(node.sibling===null){if(node.return===null||node.return===row){return null;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}return null;}var NoFlags$1=/*   */0;// Represents whether effect should fire.
		var HasEffect=/* */1;// Represents the phase in which the effect (not the clean-up) fires.
		var Insertion=/*  */2;var Layout=/*    */4;var Passive$1=/*   */8;// and should be reset before starting a new render.
		// This tracks which mutable sources need to be reset after a render.
		var workInProgressSources=[];function resetWorkInProgressVersions(){for(var i=0;i<workInProgressSources.length;i++){var mutableSource=workInProgressSources[i];{mutableSource._workInProgressVersionPrimary=null;}}workInProgressSources.length=0;}// This ensures that the version used for server rendering matches the one
		// that is eventually read during hydration.
		// If they don't match there's a potential tear and a full deopt render is required.
		function registerMutableSourceForHydration(root,mutableSource){var getVersion=mutableSource._getVersion;var version=getVersion(mutableSource._source);// TODO Clear this data once all pending hydration work is finished.
		// Retaining it forever may interfere with GC.
		if(root.mutableSourceEagerHydrationData==null){root.mutableSourceEagerHydrationData=[mutableSource,version];}else {root.mutableSourceEagerHydrationData.push(mutableSource,version);}}var ReactCurrentDispatcher$1=ReactSharedInternals.ReactCurrentDispatcher,ReactCurrentBatchConfig$2=ReactSharedInternals.ReactCurrentBatchConfig;var didWarnAboutMismatchedHooksForComponent;var didWarnUncachedGetSnapshot;{didWarnAboutMismatchedHooksForComponent=new Set();}// These are set right before calling the component.
		var renderLanes=NoLanes;// The work-in-progress fiber. I've named it differently to distinguish it from
		// the work-in-progress hook.
		var currentlyRenderingFiber$1=null;// Hooks are stored as a linked list on the fiber's memoizedState field. The
		// current hook list is the list that belongs to the current fiber. The
		// work-in-progress hook list is a new list that will be added to the
		// work-in-progress fiber.
		var currentHook=null;var workInProgressHook=null;// Whether an update was scheduled at any point during the render phase. This
		// does not get reset if we do another render pass; only when we're completely
		// finished evaluating this component. This is an optimization so we know
		// whether we need to clear render phase updates after a throw.
		var didScheduleRenderPhaseUpdate=false;// Where an update was scheduled only during the current render pass. This
		// gets reset after each attempt.
		// TODO: Maybe there's some way to consolidate this with
		// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
		var didScheduleRenderPhaseUpdateDuringThisPass=false;// Counts the number of useId hooks in this component.
		var localIdCounter=0;// Used for ids that are generated completely client-side (i.e. not during
		// hydration). This counter is global, so client ids are not stable across
		// render attempts.
		var globalClientIdCounter=0;var RE_RENDER_LIMIT=25;// In DEV, this is the name of the currently executing primitive hook
		var currentHookNameInDev=null;// In DEV, this list ensures that hooks are called in the same order between renders.
		// The list stores the order of hooks used during the initial render (mount).
		// Subsequent renders (updates) reference this list.
		var hookTypesDev=null;var hookTypesUpdateIndexDev=-1;// In DEV, this tracks whether currently rendering component needs to ignore
		// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
		// When true, such Hooks will always be "remounted". Only used during hot reload.
		var ignorePreviousDependencies=false;function mountHookTypesDev(){{var hookName=currentHookNameInDev;if(hookTypesDev===null){hookTypesDev=[hookName];}else {hookTypesDev.push(hookName);}}}function updateHookTypesDev(){{var hookName=currentHookNameInDev;if(hookTypesDev!==null){hookTypesUpdateIndexDev++;if(hookTypesDev[hookTypesUpdateIndexDev]!==hookName){warnOnHookMismatchInDev(hookName);}}}}function checkDepsAreArrayDev(deps){{if(deps!==undefined&&deps!==null&&!isArray(deps)){// Verify deps, but only on mount to avoid extra checks.
		// It's unlikely their type would change as usually you define them inline.
		error('%s received a final argument that is not an array (instead, received `%s`). When '+'specified, the final argument must be an array.',currentHookNameInDev,typeof deps);}}}function warnOnHookMismatchInDev(currentHookName){{var componentName=getComponentNameFromFiber(currentlyRenderingFiber$1);if(!didWarnAboutMismatchedHooksForComponent.has(componentName)){didWarnAboutMismatchedHooksForComponent.add(componentName);if(hookTypesDev!==null){var table='';var secondColumnStart=30;for(var i=0;i<=hookTypesUpdateIndexDev;i++){var oldHookName=hookTypesDev[i];var newHookName=i===hookTypesUpdateIndexDev?currentHookName:oldHookName;var row=i+1+". "+oldHookName;// Extra space so second column lines up
		// lol @ IE not supporting String#repeat
		while(row.length<secondColumnStart){row+=' ';}row+=newHookName+'\n';table+=row;}error('React has detected a change in the order of Hooks called by %s. '+'This will lead to bugs and errors if not fixed. '+'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n'+'   Previous render            Next render\n'+'   ------------------------------------------------------\n'+'%s'+'   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',componentName,table);}}}}function throwInvalidHookError(){throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for'+' one of the following reasons:\n'+'1. You might have mismatching versions of React and the renderer (such as React DOM)\n'+'2. You might be breaking the Rules of Hooks\n'+'3. You might have more than one copy of React in the same app\n'+'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');}function areHookInputsEqual(nextDeps,prevDeps){{if(ignorePreviousDependencies){// Only true when this component is being hot reloaded.
		return false;}}if(prevDeps===null){{error('%s received a final argument during this render, but not during '+'the previous render. Even though the final argument is optional, '+'its type cannot change between renders.',currentHookNameInDev);}return false;}{// Don't bother comparing lengths in prod because these arrays should be
		// passed inline.
		if(nextDeps.length!==prevDeps.length){error('The final argument passed to %s changed size between renders. The '+'order and size of this array must remain constant.\n\n'+'Previous: %s\n'+'Incoming: %s',currentHookNameInDev,"["+prevDeps.join(', ')+"]","["+nextDeps.join(', ')+"]");}}for(var i=0;i<prevDeps.length&&i<nextDeps.length;i++){if(objectIs(nextDeps[i],prevDeps[i])){continue;}return false;}return true;}function renderWithHooks(current,workInProgress,Component,props,secondArg,nextRenderLanes){renderLanes=nextRenderLanes;currentlyRenderingFiber$1=workInProgress;{hookTypesDev=current!==null?current._debugHookTypes:null;hookTypesUpdateIndexDev=-1;// Used for hot reloading:
		ignorePreviousDependencies=current!==null&&current.type!==workInProgress.type;}workInProgress.memoizedState=null;workInProgress.updateQueue=null;workInProgress.lanes=NoLanes;// The following should have already been reset
		// currentHook = null;
		// workInProgressHook = null;
		// didScheduleRenderPhaseUpdate = false;
		// localIdCounter = 0;
		// TODO Warn if no hooks are used at all during mount, then some are used during update.
		// Currently we will identify the update render as a mount because memoizedState === null.
		// This is tricky because it's valid for certain types of components (e.g. React.lazy)
		// Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
		// Non-stateful hooks (e.g. context) don't get added to memoizedState,
		// so memoizedState would be null during updates and mounts.
		{if(current!==null&&current.memoizedState!==null){ReactCurrentDispatcher$1.current=HooksDispatcherOnUpdateInDEV;}else if(hookTypesDev!==null){// This dispatcher handles an edge case where a component is updating,
		// but no stateful hooks have been used.
		// We want to match the production code behavior (which will use HooksDispatcherOnMount),
		// but with the extra DEV validation to ensure hooks ordering hasn't changed.
		// This dispatcher does that.
		ReactCurrentDispatcher$1.current=HooksDispatcherOnMountWithHookTypesInDEV;}else {ReactCurrentDispatcher$1.current=HooksDispatcherOnMountInDEV;}}var children=Component(props,secondArg);// Check if there was a render phase update
		if(didScheduleRenderPhaseUpdateDuringThisPass){// Keep rendering in a loop for as long as render phase updates continue to
		// be scheduled. Use a counter to prevent infinite loops.
		var numberOfReRenders=0;do{didScheduleRenderPhaseUpdateDuringThisPass=false;localIdCounter=0;if(numberOfReRenders>=RE_RENDER_LIMIT){throw new Error('Too many re-renders. React limits the number of renders to prevent '+'an infinite loop.');}numberOfReRenders+=1;{// Even when hot reloading, allow dependencies to stabilize
		// after first render to prevent infinite render phase updates.
		ignorePreviousDependencies=false;}// Start over from the beginning of the list
		currentHook=null;workInProgressHook=null;workInProgress.updateQueue=null;{// Also validate hook order for cascading updates.
		hookTypesUpdateIndexDev=-1;}ReactCurrentDispatcher$1.current=HooksDispatcherOnRerenderInDEV;children=Component(props,secondArg);}while(didScheduleRenderPhaseUpdateDuringThisPass);}// We can assume the previous dispatcher is always this one, since we set it
		// at the beginning of the render phase and there's no re-entrance.
		ReactCurrentDispatcher$1.current=ContextOnlyDispatcher;{workInProgress._debugHookTypes=hookTypesDev;}// This check uses currentHook so that it works the same in DEV and prod bundles.
		// hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
		var didRenderTooFewHooks=currentHook!==null&&currentHook.next!==null;renderLanes=NoLanes;currentlyRenderingFiber$1=null;currentHook=null;workInProgressHook=null;{currentHookNameInDev=null;hookTypesDev=null;hookTypesUpdateIndexDev=-1;// Confirm that a static flag was not added or removed since the last
		// render. If this fires, it suggests that we incorrectly reset the static
		// flags in some other part of the codebase. This has happened before, for
		// example, in the SuspenseList implementation.
		if(current!==null&&(current.flags&StaticMask)!==(workInProgress.flags&StaticMask)&&// Disable this warning in legacy mode, because legacy Suspense is weird
		// and creates false positives. To make this work in legacy mode, we'd
		// need to mark fibers that commit in an incomplete state, somehow. For
		// now I'll disable the warning that most of the bugs that would trigger
		// it are either exclusive to concurrent mode or exist in both.
		(current.mode&ConcurrentMode)!==NoMode){error('Internal React error: Expected static flag was missing. Please '+'notify the React team.');}}didScheduleRenderPhaseUpdate=false;// This is reset by checkDidRenderIdHook
		// localIdCounter = 0;
		if(didRenderTooFewHooks){throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental '+'early return statement.');}return children;}function checkDidRenderIdHook(){// This should be called immediately after every renderWithHooks call.
		// Conceptually, it's part of the return value of renderWithHooks; it's only a
		// separate function to avoid using an array tuple.
		var didRenderIdHook=localIdCounter!==0;localIdCounter=0;return didRenderIdHook;}function bailoutHooks(current,workInProgress,lanes){workInProgress.updateQueue=current.updateQueue;// TODO: Don't need to reset the flags here, because they're reset in the
		// complete phase (bubbleProperties).
		if((workInProgress.mode&StrictEffectsMode)!==NoMode){workInProgress.flags&=~(MountPassiveDev|MountLayoutDev|Passive|Update);}else {workInProgress.flags&=~(Passive|Update);}current.lanes=removeLanes(current.lanes,lanes);}function resetHooksAfterThrow(){// We can assume the previous dispatcher is always this one, since we set it
		// at the beginning of the render phase and there's no re-entrance.
		ReactCurrentDispatcher$1.current=ContextOnlyDispatcher;if(didScheduleRenderPhaseUpdate){// There were render phase updates. These are only valid for this render
		// phase, which we are now aborting. Remove the updates from the queues so
		// they do not persist to the next render. Do not remove updates from hooks
		// that weren't processed.
		//
		// Only reset the updates from the queue if it has a clone. If it does
		// not have a clone, that means it wasn't processed, and the updates were
		// scheduled before we entered the render phase.
		var hook=currentlyRenderingFiber$1.memoizedState;while(hook!==null){var queue=hook.queue;if(queue!==null){queue.pending=null;}hook=hook.next;}didScheduleRenderPhaseUpdate=false;}renderLanes=NoLanes;currentlyRenderingFiber$1=null;currentHook=null;workInProgressHook=null;{hookTypesDev=null;hookTypesUpdateIndexDev=-1;currentHookNameInDev=null;isUpdatingOpaqueValueInRenderPhase=false;}didScheduleRenderPhaseUpdateDuringThisPass=false;localIdCounter=0;}function mountWorkInProgressHook(){var hook={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};if(workInProgressHook===null){// This is the first hook in the list
		currentlyRenderingFiber$1.memoizedState=workInProgressHook=hook;}else {// Append to the end of the list
		workInProgressHook=workInProgressHook.next=hook;}return workInProgressHook;}function updateWorkInProgressHook(){// This function is used both for updates and for re-renders triggered by a
		// render phase update. It assumes there is either a current hook we can
		// clone, or a work-in-progress hook from a previous render pass that we can
		// use as a base. When we reach the end of the base list, we must switch to
		// the dispatcher used for mounts.
		var nextCurrentHook;if(currentHook===null){var current=currentlyRenderingFiber$1.alternate;if(current!==null){nextCurrentHook=current.memoizedState;}else {nextCurrentHook=null;}}else {nextCurrentHook=currentHook.next;}var nextWorkInProgressHook;if(workInProgressHook===null){nextWorkInProgressHook=currentlyRenderingFiber$1.memoizedState;}else {nextWorkInProgressHook=workInProgressHook.next;}if(nextWorkInProgressHook!==null){// There's already a work-in-progress. Reuse it.
		workInProgressHook=nextWorkInProgressHook;nextWorkInProgressHook=workInProgressHook.next;currentHook=nextCurrentHook;}else {// Clone from the current hook.
		if(nextCurrentHook===null){throw new Error('Rendered more hooks than during the previous render.');}currentHook=nextCurrentHook;var newHook={memoizedState:currentHook.memoizedState,baseState:currentHook.baseState,baseQueue:currentHook.baseQueue,queue:currentHook.queue,next:null};if(workInProgressHook===null){// This is the first hook in the list.
		currentlyRenderingFiber$1.memoizedState=workInProgressHook=newHook;}else {// Append to the end of the list.
		workInProgressHook=workInProgressHook.next=newHook;}}return workInProgressHook;}function createFunctionComponentUpdateQueue(){return {lastEffect:null,stores:null};}function basicStateReducer(state,action){// $FlowFixMe: Flow doesn't like mixed types
		return typeof action==='function'?action(state):action;}function mountReducer(reducer,initialArg,init){var hook=mountWorkInProgressHook();var initialState;if(init!==undefined){initialState=init(initialArg);}else {initialState=initialArg;}hook.memoizedState=hook.baseState=initialState;var queue={pending:null,interleaved:null,lanes:NoLanes,dispatch:null,lastRenderedReducer:reducer,lastRenderedState:initialState};hook.queue=queue;var dispatch=queue.dispatch=dispatchReducerAction.bind(null,currentlyRenderingFiber$1,queue);return [hook.memoizedState,dispatch];}function updateReducer(reducer,initialArg,init){var hook=updateWorkInProgressHook();var queue=hook.queue;if(queue===null){throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');}queue.lastRenderedReducer=reducer;var current=currentHook;// The last rebase update that is NOT part of the base state.
		var baseQueue=current.baseQueue;// The last pending update that hasn't been processed yet.
		var pendingQueue=queue.pending;if(pendingQueue!==null){// We have new updates that haven't been processed yet.
		// We'll add them to the base queue.
		if(baseQueue!==null){// Merge the pending queue and the base queue.
		var baseFirst=baseQueue.next;var pendingFirst=pendingQueue.next;baseQueue.next=pendingFirst;pendingQueue.next=baseFirst;}{if(current.baseQueue!==baseQueue){// Internal invariant that should never happen, but feasibly could in
		// the future if we implement resuming, or some form of that.
		error('Internal error: Expected work-in-progress queue to be a clone. '+'This is a bug in React.');}}current.baseQueue=baseQueue=pendingQueue;queue.pending=null;}if(baseQueue!==null){// We have a queue to process.
		var first=baseQueue.next;var newState=current.baseState;var newBaseState=null;var newBaseQueueFirst=null;var newBaseQueueLast=null;var update=first;do{var updateLane=update.lane;if(!isSubsetOfLanes(renderLanes,updateLane)){// Priority is insufficient. Skip this update. If this is the first
		// skipped update, the previous update/state is the new base
		// update/state.
		var clone={lane:updateLane,action:update.action,hasEagerState:update.hasEagerState,eagerState:update.eagerState,next:null};if(newBaseQueueLast===null){newBaseQueueFirst=newBaseQueueLast=clone;newBaseState=newState;}else {newBaseQueueLast=newBaseQueueLast.next=clone;}// Update the remaining priority in the queue.
		// TODO: Don't need to accumulate this. Instead, we can remove
		// renderLanes from the original lanes.
		currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,updateLane);markSkippedUpdateLanes(updateLane);}else {// This update does have sufficient priority.
		if(newBaseQueueLast!==null){var _clone={// This update is going to be committed so we never want uncommit
		// it. Using NoLane works because 0 is a subset of all bitmasks, so
		// this will never be skipped by the check above.
		lane:NoLane,action:update.action,hasEagerState:update.hasEagerState,eagerState:update.eagerState,next:null};newBaseQueueLast=newBaseQueueLast.next=_clone;}// Process this update.
		if(update.hasEagerState){// If this update is a state update (not a reducer) and was processed eagerly,
		// we can use the eagerly computed state
		newState=update.eagerState;}else {var action=update.action;newState=reducer(newState,action);}}update=update.next;}while(update!==null&&update!==first);if(newBaseQueueLast===null){newBaseState=newState;}else {newBaseQueueLast.next=newBaseQueueFirst;}// Mark that the fiber performed work, but only if the new state is
		// different from the current state.
		if(!objectIs(newState,hook.memoizedState)){markWorkInProgressReceivedUpdate();}hook.memoizedState=newState;hook.baseState=newBaseState;hook.baseQueue=newBaseQueueLast;queue.lastRenderedState=newState;}// Interleaved updates are stored on a separate queue. We aren't going to
		// process them during this render, but we do need to track which lanes
		// are remaining.
		var lastInterleaved=queue.interleaved;if(lastInterleaved!==null){var interleaved=lastInterleaved;do{var interleavedLane=interleaved.lane;currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,interleavedLane);markSkippedUpdateLanes(interleavedLane);interleaved=interleaved.next;}while(interleaved!==lastInterleaved);}else if(baseQueue===null){// `queue.lanes` is used for entangling transitions. We can set it back to
		// zero once the queue is empty.
		queue.lanes=NoLanes;}var dispatch=queue.dispatch;return [hook.memoizedState,dispatch];}function rerenderReducer(reducer,initialArg,init){var hook=updateWorkInProgressHook();var queue=hook.queue;if(queue===null){throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');}queue.lastRenderedReducer=reducer;// This is a re-render. Apply the new render phase updates to the previous
		// work-in-progress hook.
		var dispatch=queue.dispatch;var lastRenderPhaseUpdate=queue.pending;var newState=hook.memoizedState;if(lastRenderPhaseUpdate!==null){// The queue doesn't persist past this render pass.
		queue.pending=null;var firstRenderPhaseUpdate=lastRenderPhaseUpdate.next;var update=firstRenderPhaseUpdate;do{// Process this render phase update. We don't have to check the
		// priority because it will always be the same as the current
		// render's.
		var action=update.action;newState=reducer(newState,action);update=update.next;}while(update!==firstRenderPhaseUpdate);// Mark that the fiber performed work, but only if the new state is
		// different from the current state.
		if(!objectIs(newState,hook.memoizedState)){markWorkInProgressReceivedUpdate();}hook.memoizedState=newState;// Don't persist the state accumulated from the render phase updates to
		// the base state unless the queue is empty.
		// TODO: Not sure if this is the desired semantics, but it's what we
		// do for gDSFP. I can't remember why.
		if(hook.baseQueue===null){hook.baseState=newState;}queue.lastRenderedState=newState;}return [newState,dispatch];}function mountMutableSource(source,getSnapshot,subscribe){{return undefined;}}function updateMutableSource(source,getSnapshot,subscribe){{return undefined;}}function mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot){var fiber=currentlyRenderingFiber$1;var hook=mountWorkInProgressHook();var nextSnapshot;var isHydrating=getIsHydrating();if(isHydrating){if(getServerSnapshot===undefined){throw new Error('Missing getServerSnapshot, which is required for '+'server-rendered content. Will revert to client rendering.');}nextSnapshot=getServerSnapshot();{if(!didWarnUncachedGetSnapshot){if(nextSnapshot!==getServerSnapshot()){error('The result of getServerSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}}else {nextSnapshot=getSnapshot();{if(!didWarnUncachedGetSnapshot){var cachedSnapshot=getSnapshot();if(!objectIs(nextSnapshot,cachedSnapshot)){error('The result of getSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}// Unless we're rendering a blocking lane, schedule a consistency check.
		// Right before committing, we will walk the tree and check if any of the
		// stores were mutated.
		//
		// We won't do this if we're hydrating server-rendered content, because if
		// the content is stale, it's already visible anyway. Instead we'll patch
		// it up in a passive effect.
		var root=getWorkInProgressRoot();if(root===null){throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');}if(!includesBlockingLane(root,renderLanes)){pushStoreConsistencyCheck(fiber,getSnapshot,nextSnapshot);}}// Read the current snapshot from the store on every render. This breaks the
		// normal rules of React, and only works because store updates are
		// always synchronous.
		hook.memoizedState=nextSnapshot;var inst={value:nextSnapshot,getSnapshot:getSnapshot};hook.queue=inst;// Schedule an effect to subscribe to the store.
		mountEffect(subscribeToStore.bind(null,fiber,inst,subscribe),[subscribe]);// Schedule an effect to update the mutable instance fields. We will update
		// this whenever subscribe, getSnapshot, or value changes. Because there's no
		// clean-up function, and we track the deps correctly, we can call pushEffect
		// directly, without storing any additional state. For the same reason, we
		// don't need to set a static flag, either.
		// TODO: We can move this to the passive phase once we add a pre-commit
		// consistency check. See the next comment.
		fiber.flags|=Passive;pushEffect(HasEffect|Passive$1,updateStoreInstance.bind(null,fiber,inst,nextSnapshot,getSnapshot),undefined,null);return nextSnapshot;}function updateSyncExternalStore(subscribe,getSnapshot,getServerSnapshot){var fiber=currentlyRenderingFiber$1;var hook=updateWorkInProgressHook();// Read the current snapshot from the store on every render. This breaks the
		// normal rules of React, and only works because store updates are
		// always synchronous.
		var nextSnapshot=getSnapshot();{if(!didWarnUncachedGetSnapshot){var cachedSnapshot=getSnapshot();if(!objectIs(nextSnapshot,cachedSnapshot)){error('The result of getSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}var prevSnapshot=hook.memoizedState;var snapshotChanged=!objectIs(prevSnapshot,nextSnapshot);if(snapshotChanged){hook.memoizedState=nextSnapshot;markWorkInProgressReceivedUpdate();}var inst=hook.queue;updateEffect(subscribeToStore.bind(null,fiber,inst,subscribe),[subscribe]);// Whenever getSnapshot or subscribe changes, we need to check in the
		// commit phase if there was an interleaved mutation. In concurrent mode
		// this can happen all the time, but even in synchronous mode, an earlier
		// effect may have mutated the store.
		if(inst.getSnapshot!==getSnapshot||snapshotChanged||// Check if the susbcribe function changed. We can save some memory by
		// checking whether we scheduled a subscription effect above.
		workInProgressHook!==null&&workInProgressHook.memoizedState.tag&HasEffect){fiber.flags|=Passive;pushEffect(HasEffect|Passive$1,updateStoreInstance.bind(null,fiber,inst,nextSnapshot,getSnapshot),undefined,null);// Unless we're rendering a blocking lane, schedule a consistency check.
		// Right before committing, we will walk the tree and check if any of the
		// stores were mutated.
		var root=getWorkInProgressRoot();if(root===null){throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');}if(!includesBlockingLane(root,renderLanes)){pushStoreConsistencyCheck(fiber,getSnapshot,nextSnapshot);}}return nextSnapshot;}function pushStoreConsistencyCheck(fiber,getSnapshot,renderedSnapshot){fiber.flags|=StoreConsistency;var check={getSnapshot:getSnapshot,value:renderedSnapshot};var componentUpdateQueue=currentlyRenderingFiber$1.updateQueue;if(componentUpdateQueue===null){componentUpdateQueue=createFunctionComponentUpdateQueue();currentlyRenderingFiber$1.updateQueue=componentUpdateQueue;componentUpdateQueue.stores=[check];}else {var stores=componentUpdateQueue.stores;if(stores===null){componentUpdateQueue.stores=[check];}else {stores.push(check);}}}function updateStoreInstance(fiber,inst,nextSnapshot,getSnapshot){// These are updated in the passive phase
		inst.value=nextSnapshot;inst.getSnapshot=getSnapshot;// Something may have been mutated in between render and commit. This could
		// have been in an event that fired before the passive effects, or it could
		// have been in a layout effect. In that case, we would have used the old
		// snapsho and getSnapshot values to bail out. We need to check one more time.
		if(checkIfSnapshotChanged(inst)){// Force a re-render.
		forceStoreRerender(fiber);}}function subscribeToStore(fiber,inst,subscribe){var handleStoreChange=function(){// The store changed. Check if the snapshot changed since the last time we
		// read from the store.
		if(checkIfSnapshotChanged(inst)){// Force a re-render.
		forceStoreRerender(fiber);}};// Subscribe to the store and return a clean-up function.
		return subscribe(handleStoreChange);}function checkIfSnapshotChanged(inst){var latestGetSnapshot=inst.getSnapshot;var prevValue=inst.value;try{var nextValue=latestGetSnapshot();return !objectIs(prevValue,nextValue);}catch(error){return true;}}function forceStoreRerender(fiber){var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}function mountState(initialState){var hook=mountWorkInProgressHook();if(typeof initialState==='function'){// $FlowFixMe: Flow doesn't like mixed types
		initialState=initialState();}hook.memoizedState=hook.baseState=initialState;var queue={pending:null,interleaved:null,lanes:NoLanes,dispatch:null,lastRenderedReducer:basicStateReducer,lastRenderedState:initialState};hook.queue=queue;var dispatch=queue.dispatch=dispatchSetState.bind(null,currentlyRenderingFiber$1,queue);return [hook.memoizedState,dispatch];}function updateState(initialState){return updateReducer(basicStateReducer);}function rerenderState(initialState){return rerenderReducer(basicStateReducer);}function pushEffect(tag,create,destroy,deps){var effect={tag:tag,create:create,destroy:destroy,deps:deps,// Circular
		next:null};var componentUpdateQueue=currentlyRenderingFiber$1.updateQueue;if(componentUpdateQueue===null){componentUpdateQueue=createFunctionComponentUpdateQueue();currentlyRenderingFiber$1.updateQueue=componentUpdateQueue;componentUpdateQueue.lastEffect=effect.next=effect;}else {var lastEffect=componentUpdateQueue.lastEffect;if(lastEffect===null){componentUpdateQueue.lastEffect=effect.next=effect;}else {var firstEffect=lastEffect.next;lastEffect.next=effect;effect.next=firstEffect;componentUpdateQueue.lastEffect=effect;}}return effect;}function mountRef(initialValue){var hook=mountWorkInProgressHook();{var _ref2={current:initialValue};hook.memoizedState=_ref2;return _ref2;}}function updateRef(initialValue){var hook=updateWorkInProgressHook();return hook.memoizedState;}function mountEffectImpl(fiberFlags,hookFlags,create,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;currentlyRenderingFiber$1.flags|=fiberFlags;hook.memoizedState=pushEffect(HasEffect|hookFlags,create,undefined,nextDeps);}function updateEffectImpl(fiberFlags,hookFlags,create,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var destroy=undefined;if(currentHook!==null){var prevEffect=currentHook.memoizedState;destroy=prevEffect.destroy;if(nextDeps!==null){var prevDeps=prevEffect.deps;if(areHookInputsEqual(nextDeps,prevDeps)){hook.memoizedState=pushEffect(hookFlags,create,destroy,nextDeps);return;}}}currentlyRenderingFiber$1.flags|=fiberFlags;hook.memoizedState=pushEffect(HasEffect|hookFlags,create,destroy,nextDeps);}function mountEffect(create,deps){if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){return mountEffectImpl(MountPassiveDev|Passive|PassiveStatic,Passive$1,create,deps);}else {return mountEffectImpl(Passive|PassiveStatic,Passive$1,create,deps);}}function updateEffect(create,deps){return updateEffectImpl(Passive,Passive$1,create,deps);}function mountInsertionEffect(create,deps){return mountEffectImpl(Update,Insertion,create,deps);}function updateInsertionEffect(create,deps){return updateEffectImpl(Update,Insertion,create,deps);}function mountLayoutEffect(create,deps){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}return mountEffectImpl(fiberFlags,Layout,create,deps);}function updateLayoutEffect(create,deps){return updateEffectImpl(Update,Layout,create,deps);}function imperativeHandleEffect(create,ref){if(typeof ref==='function'){var refCallback=ref;var _inst=create();refCallback(_inst);return function(){refCallback(null);};}else if(ref!==null&&ref!==undefined){var refObject=ref;{if(!refObject.hasOwnProperty('current')){error('Expected useImperativeHandle() first argument to either be a '+'ref callback or React.createRef() object. Instead received: %s.','an object with keys {'+Object.keys(refObject).join(', ')+'}');}}var _inst2=create();refObject.current=_inst2;return function(){refObject.current=null;};}}function mountImperativeHandle(ref,create,deps){{if(typeof create!=='function'){error('Expected useImperativeHandle() second argument to be a function '+'that creates a handle. Instead received: %s.',create!==null?typeof create:'null');}}// TODO: If deps are provided, should we skip comparing the ref itself?
		var effectDeps=deps!==null&&deps!==undefined?deps.concat([ref]):null;var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}return mountEffectImpl(fiberFlags,Layout,imperativeHandleEffect.bind(null,create,ref),effectDeps);}function updateImperativeHandle(ref,create,deps){{if(typeof create!=='function'){error('Expected useImperativeHandle() second argument to be a function '+'that creates a handle. Instead received: %s.',create!==null?typeof create:'null');}}// TODO: If deps are provided, should we skip comparing the ref itself?
		var effectDeps=deps!==null&&deps!==undefined?deps.concat([ref]):null;return updateEffectImpl(Update,Layout,imperativeHandleEffect.bind(null,create,ref),effectDeps);}function mountDebugValue(value,formatterFn){// This hook is normally a no-op.
		// The react-debug-hooks package injects its own implementation
		// so that e.g. DevTools can display custom hook values.
		}var updateDebugValue=mountDebugValue;function mountCallback(callback,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;hook.memoizedState=[callback,nextDeps];return callback;}function updateCallback(callback,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var prevState=hook.memoizedState;if(prevState!==null){if(nextDeps!==null){var prevDeps=prevState[1];if(areHookInputsEqual(nextDeps,prevDeps)){return prevState[0];}}}hook.memoizedState=[callback,nextDeps];return callback;}function mountMemo(nextCreate,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var nextValue=nextCreate();hook.memoizedState=[nextValue,nextDeps];return nextValue;}function updateMemo(nextCreate,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var prevState=hook.memoizedState;if(prevState!==null){// Assume these are defined. If they're not, areHookInputsEqual will warn.
		if(nextDeps!==null){var prevDeps=prevState[1];if(areHookInputsEqual(nextDeps,prevDeps)){return prevState[0];}}}var nextValue=nextCreate();hook.memoizedState=[nextValue,nextDeps];return nextValue;}function mountDeferredValue(value){var hook=mountWorkInProgressHook();hook.memoizedState=value;return value;}function updateDeferredValue(value){var hook=updateWorkInProgressHook();var resolvedCurrentHook=currentHook;var prevValue=resolvedCurrentHook.memoizedState;return updateDeferredValueImpl(hook,prevValue,value);}function rerenderDeferredValue(value){var hook=updateWorkInProgressHook();if(currentHook===null){// This is a rerender during a mount.
		hook.memoizedState=value;return value;}else {// This is a rerender during an update.
		var prevValue=currentHook.memoizedState;return updateDeferredValueImpl(hook,prevValue,value);}}function updateDeferredValueImpl(hook,prevValue,value){var shouldDeferValue=!includesOnlyNonUrgentLanes(renderLanes);if(shouldDeferValue){// This is an urgent update. If the value has changed, keep using the
		// previous value and spawn a deferred render to update it later.
		if(!objectIs(value,prevValue)){// Schedule a deferred render
		var deferredLane=claimNextTransitionLane();currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,deferredLane);markSkippedUpdateLanes(deferredLane);// Set this to true to indicate that the rendered value is inconsistent
		// from the latest value. The name "baseState" doesn't really match how we
		// use it because we're reusing a state hook field instead of creating a
		// new one.
		hook.baseState=true;}// Reuse the previous value
		return prevValue;}else {// This is not an urgent update, so we can use the latest value regardless
		// of what it is. No need to defer it.
		// However, if we're currently inside a spawned render, then we need to mark
		// this as an update to prevent the fiber from bailing out.
		//
		// `baseState` is true when the current value is different from the rendered
		// value. The name doesn't really match how we use it because we're reusing
		// a state hook field instead of creating a new one.
		if(hook.baseState){// Flip this back to false.
		hook.baseState=false;markWorkInProgressReceivedUpdate();}hook.memoizedState=value;return value;}}function startTransition(setPending,callback,options){var previousPriority=getCurrentUpdatePriority();setCurrentUpdatePriority(higherEventPriority(previousPriority,ContinuousEventPriority));setPending(true);var prevTransition=ReactCurrentBatchConfig$2.transition;ReactCurrentBatchConfig$2.transition={};var currentTransition=ReactCurrentBatchConfig$2.transition;{ReactCurrentBatchConfig$2.transition._updatedFibers=new Set();}try{setPending(false);callback();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;{if(prevTransition===null&&currentTransition._updatedFibers){var updatedFibersCount=currentTransition._updatedFibers.size;if(updatedFibersCount>10){warn('Detected a large number of updates inside startTransition. '+'If this is due to a subscription please re-write it to use React provided hooks. '+'Otherwise concurrent mode guarantees are off the table.');}currentTransition._updatedFibers.clear();}}}}function mountTransition(){var _mountState=mountState(false),isPending=_mountState[0],setPending=_mountState[1];// The `start` method never changes.
		var start=startTransition.bind(null,setPending);var hook=mountWorkInProgressHook();hook.memoizedState=start;return [isPending,start];}function updateTransition(){var _updateState=updateState(),isPending=_updateState[0];var hook=updateWorkInProgressHook();var start=hook.memoizedState;return [isPending,start];}function rerenderTransition(){var _rerenderState=rerenderState(),isPending=_rerenderState[0];var hook=updateWorkInProgressHook();var start=hook.memoizedState;return [isPending,start];}var isUpdatingOpaqueValueInRenderPhase=false;function getIsUpdatingOpaqueValueInRenderPhaseInDEV(){{return isUpdatingOpaqueValueInRenderPhase;}}function mountId(){var hook=mountWorkInProgressHook();var root=getWorkInProgressRoot();// TODO: In Fizz, id generation is specific to each server config. Maybe we
		// should do this in Fiber, too? Deferring this decision for now because
		// there's no other place to store the prefix except for an internal field on
		// the public createRoot object, which the fiber tree does not currently have
		// a reference to.
		var identifierPrefix=root.identifierPrefix;var id;if(getIsHydrating()){var treeId=getTreeId();// Use a captial R prefix for server-generated ids.
		id=':'+identifierPrefix+'R'+treeId;// Unless this is the first id at this level, append a number at the end
		// that represents the position of this useId hook among all the useId
		// hooks for this fiber.
		var localId=localIdCounter++;if(localId>0){id+='H'+localId.toString(32);}id+=':';}else {// Use a lowercase r prefix for client-generated ids.
		var globalClientId=globalClientIdCounter++;id=':'+identifierPrefix+'r'+globalClientId.toString(32)+':';}hook.memoizedState=id;return id;}function updateId(){var hook=updateWorkInProgressHook();var id=hook.memoizedState;return id;}function dispatchReducerAction(fiber,queue,action){{if(typeof arguments[3]==='function'){error("State updates from the useState() and useReducer() Hooks don't support the "+'second callback argument. To execute a side effect after '+'rendering, declare it in the component body with useEffect().');}}var lane=requestUpdateLane(fiber);var update={lane:lane,action:action,hasEagerState:false,eagerState:null,next:null};if(isRenderPhaseUpdate(fiber)){enqueueRenderPhaseUpdate(queue,update);}else {var root=enqueueConcurrentHookUpdate(fiber,queue,update,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitionUpdate(root,queue,lane);}}markUpdateInDevTools(fiber,lane);}function dispatchSetState(fiber,queue,action){{if(typeof arguments[3]==='function'){error("State updates from the useState() and useReducer() Hooks don't support the "+'second callback argument. To execute a side effect after '+'rendering, declare it in the component body with useEffect().');}}var lane=requestUpdateLane(fiber);var update={lane:lane,action:action,hasEagerState:false,eagerState:null,next:null};if(isRenderPhaseUpdate(fiber)){enqueueRenderPhaseUpdate(queue,update);}else {var alternate=fiber.alternate;if(fiber.lanes===NoLanes&&(alternate===null||alternate.lanes===NoLanes)){// The queue is currently empty, which means we can eagerly compute the
		// next state before entering the render phase. If the new state is the
		// same as the current state, we may be able to bail out entirely.
		var lastRenderedReducer=queue.lastRenderedReducer;if(lastRenderedReducer!==null){var prevDispatcher;{prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;}try{var currentState=queue.lastRenderedState;var eagerState=lastRenderedReducer(currentState,action);// Stash the eagerly computed state, and the reducer used to compute
		// it, on the update object. If the reducer hasn't changed by the
		// time we enter the render phase, then the eager state can be used
		// without calling the reducer again.
		update.hasEagerState=true;update.eagerState=eagerState;if(objectIs(eagerState,currentState)){// Fast path. We can bail out without scheduling React to re-render.
		// It's still possible that we'll need to rebase this update later,
		// if the component re-renders for a different reason and by that
		// time the reducer has changed.
		// TODO: Do we still need to entangle transitions in this case?
		enqueueConcurrentHookUpdateAndEagerlyBailout(fiber,queue,update,lane);return;}}catch(error){// Suppress the error. It will throw again in the render phase.
		}finally{{ReactCurrentDispatcher$1.current=prevDispatcher;}}}}var root=enqueueConcurrentHookUpdate(fiber,queue,update,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);entangleTransitionUpdate(root,queue,lane);}}markUpdateInDevTools(fiber,lane);}function isRenderPhaseUpdate(fiber){var alternate=fiber.alternate;return fiber===currentlyRenderingFiber$1||alternate!==null&&alternate===currentlyRenderingFiber$1;}function enqueueRenderPhaseUpdate(queue,update){// This is a render phase update. Stash it in a lazily-created map of
		// queue -> linked list of updates. After this render pass, we'll restart
		// and apply the stashed updates on top of the work-in-progress hook.
		didScheduleRenderPhaseUpdateDuringThisPass=didScheduleRenderPhaseUpdate=true;var pending=queue.pending;if(pending===null){// This is the first update. Create a circular list.
		update.next=update;}else {update.next=pending.next;pending.next=update;}queue.pending=update;}// TODO: Move to ReactFiberConcurrentUpdates?
		function entangleTransitionUpdate(root,queue,lane){if(isTransitionLane(lane)){var queueLanes=queue.lanes;// If any entangled lanes are no longer pending on the root, then they
		// must have finished. We can remove them from the shared queue, which
		// represents a superset of the actually pending lanes. In some cases we
		// may entangle more than we need to, but that's OK. In fact it's worse if
		// we *don't* entangle when we should.
		queueLanes=intersectLanes(queueLanes,root.pendingLanes);// Entangle the new transition lane with the other transition lanes.
		var newQueueLanes=mergeLanes(queueLanes,lane);queue.lanes=newQueueLanes;// Even if queue.lanes already include lane, we don't know for certain if
		// the lane finished since the last time we entangled it. So we need to
		// entangle it again, just to be sure.
		markRootEntangled(root,newQueueLanes);}}function markUpdateInDevTools(fiber,lane,action){{markStateUpdateScheduled(fiber,lane);}}var ContextOnlyDispatcher={readContext:readContext,useCallback:throwInvalidHookError,useContext:throwInvalidHookError,useEffect:throwInvalidHookError,useImperativeHandle:throwInvalidHookError,useInsertionEffect:throwInvalidHookError,useLayoutEffect:throwInvalidHookError,useMemo:throwInvalidHookError,useReducer:throwInvalidHookError,useRef:throwInvalidHookError,useState:throwInvalidHookError,useDebugValue:throwInvalidHookError,useDeferredValue:throwInvalidHookError,useTransition:throwInvalidHookError,useMutableSource:throwInvalidHookError,useSyncExternalStore:throwInvalidHookError,useId:throwInvalidHookError,unstable_isNewReconciler:enableNewReconciler};var HooksDispatcherOnMountInDEV=null;var HooksDispatcherOnMountWithHookTypesInDEV=null;var HooksDispatcherOnUpdateInDEV=null;var HooksDispatcherOnRerenderInDEV=null;var InvalidNestedHooksDispatcherOnMountInDEV=null;var InvalidNestedHooksDispatcherOnUpdateInDEV=null;var InvalidNestedHooksDispatcherOnRerenderInDEV=null;{var warnInvalidContextAccess=function(){error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');};var warnInvalidHookAccess=function(){error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. '+'You can only call Hooks at the top level of your React function. '+'For more information, see '+'https://reactjs.org/link/rules-of-hooks');};HooksDispatcherOnMountInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';mountHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';mountHookTypesDev();checkDepsAreArrayDev(deps);var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';mountHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';mountHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';mountHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';mountHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';mountHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';mountHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';mountHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnMountWithHookTypesInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnUpdateInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return updateDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return updateTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnRerenderInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return rerenderReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return rerenderState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return rerenderDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return rerenderTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnMountInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();mountHookTypesDev();return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();mountHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();mountHookTypesDev();return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();mountHookTypesDev();return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();mountHookTypesDev();return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();mountHookTypesDev();return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();mountHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();mountHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();mountHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();mountHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();mountHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();mountHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();mountHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnUpdateInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();updateHookTypesDev();return updateDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();updateHookTypesDev();return updateTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnRerenderInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return rerenderReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return rerenderState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();updateHookTypesDev();return rerenderDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();updateHookTypesDev();return rerenderTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};}var now$1=Scheduler.unstable_now;var commitTime=0;var layoutEffectStartTime=-1;var profilerStartTime=-1;var passiveEffectStartTime=-1;/**
		 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
		 *
		 * The overall sequence is:
		 *   1. render
		 *   2. commit (and call `onRender`, `onCommit`)
		 *   3. check for nested updates
		 *   4. flush passive effects (and call `onPostCommit`)
		 *
		 * Nested updates are identified in step 3 above,
		 * but step 4 still applies to the work that was just committed.
		 * We use two flags to track nested updates then:
		 * one tracks whether the upcoming update is a nested update,
		 * and the other tracks whether the current update was a nested update.
		 * The first value gets synced to the second at the start of the render phase.
		 */var currentUpdateIsNested=false;var nestedUpdateScheduled=false;function isCurrentUpdateNested(){return currentUpdateIsNested;}function markNestedUpdateScheduled(){{nestedUpdateScheduled=true;}}function resetNestedUpdateFlag(){{currentUpdateIsNested=false;nestedUpdateScheduled=false;}}function syncNestedUpdateFlag(){{currentUpdateIsNested=nestedUpdateScheduled;nestedUpdateScheduled=false;}}function getCommitTime(){return commitTime;}function recordCommitTime(){commitTime=now$1();}function startProfilerTimer(fiber){profilerStartTime=now$1();if(fiber.actualStartTime<0){fiber.actualStartTime=now$1();}}function stopProfilerTimerIfRunning(fiber){profilerStartTime=-1;}function stopProfilerTimerIfRunningAndRecordDelta(fiber,overrideBaseTime){if(profilerStartTime>=0){var elapsedTime=now$1()-profilerStartTime;fiber.actualDuration+=elapsedTime;if(overrideBaseTime){fiber.selfBaseDuration=elapsedTime;}profilerStartTime=-1;}}function recordLayoutEffectDuration(fiber){if(layoutEffectStartTime>=0){var elapsedTime=now$1()-layoutEffectStartTime;layoutEffectStartTime=-1;// Store duration on the next nearest Profiler ancestor
		// Or the root (for the DevTools Profiler to read)
		var parentFiber=fiber.return;while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.effectDuration+=elapsedTime;return;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.effectDuration+=elapsedTime;return;}parentFiber=parentFiber.return;}}}function recordPassiveEffectDuration(fiber){if(passiveEffectStartTime>=0){var elapsedTime=now$1()-passiveEffectStartTime;passiveEffectStartTime=-1;// Store duration on the next nearest Profiler ancestor
		// Or the root (for the DevTools Profiler to read)
		var parentFiber=fiber.return;while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;if(root!==null){root.passiveEffectDuration+=elapsedTime;}return;case Profiler:var parentStateNode=parentFiber.stateNode;if(parentStateNode!==null){// Detached fibers have their state node cleared out.
		// In this case, the return pointer is also cleared out,
		// so we won't be able to report the time spent in this Profiler's subtree.
		parentStateNode.passiveEffectDuration+=elapsedTime;}return;}parentFiber=parentFiber.return;}}}function startLayoutEffectTimer(){layoutEffectStartTime=now$1();}function startPassiveEffectTimer(){passiveEffectStartTime=now$1();}function transferActualDuration(fiber){// Transfer time spent rendering these children so we don't lose it
		// after we rerender. This is used as a helper in special cases
		// where we should count the work of multiple passes.
		var child=fiber.child;while(child){fiber.actualDuration+=child.actualDuration;child=child.sibling;}}function createCapturedValueAtFiber(value,source){// If the value is an error, call this function immediately after it is thrown
		// so the stack is accurate.
		return {value:value,source:source,stack:getStackByFiberInDevAndProd(source),digest:null};}function createCapturedValue(value,digest,stack){return {value:value,source:null,stack:stack!=null?stack:null,digest:digest!=null?digest:null};}// This module is forked in different environments.
		// By default, return `true` to log errors to the console.
		// Forks can return `false` if this isn't desirable.
		function showErrorDialog(boundary,errorInfo){return true;}function logCapturedError(boundary,errorInfo){try{var logError=showErrorDialog(boundary,errorInfo);// Allow injected showErrorDialog() to prevent default console.error logging.
		// This enables renderers like ReactNative to better manage redbox behavior.
		if(logError===false){return;}var error=errorInfo.value;if(true){var source=errorInfo.source;var stack=errorInfo.stack;var componentStack=stack!==null?stack:'';// Browsers support silencing uncaught errors by calling
		// `preventDefault()` in window `error` handler.
		// We record this information as an expando on the error.
		if(error!=null&&error._suppressLogging){if(boundary.tag===ClassComponent){// The error is recoverable and was silenced.
		// Ignore it and don't print the stack addendum.
		// This is handy for testing error boundaries without noise.
		return;}// The error is fatal. Since the silencing might have
		// been accidental, we'll surface it anyway.
		// However, the browser would have silenced the original error
		// so we'll print it first, and then print the stack addendum.
		console['error'](error);// Don't transform to our wrapper
		// For a more detailed description of this block, see:
		// https://github.com/facebook/react/pull/13384
		}var componentName=source?getComponentNameFromFiber(source):null;var componentNameMessage=componentName?"The above error occurred in the <"+componentName+"> component:":'The above error occurred in one of your React components:';var errorBoundaryMessage;if(boundary.tag===HostRoot){errorBoundaryMessage='Consider adding an error boundary to your tree to customize error handling behavior.\n'+'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';}else {var errorBoundaryName=getComponentNameFromFiber(boundary)||'Anonymous';errorBoundaryMessage="React will try to recreate this component tree from scratch "+("using the error boundary you provided, "+errorBoundaryName+".");}var combinedMessage=componentNameMessage+"\n"+componentStack+"\n\n"+(""+errorBoundaryMessage);// In development, we provide our own message with just the component stack.
		// We don't include the original error message and JS stack because the browser
		// has already printed it. Even if the application swallows the error, it is still
		// displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
		console['error'](combinedMessage);// Don't transform to our wrapper
		}}catch(e){// This method must not throw, or React internal state will get messed up.
		// If console.error is overridden, or logCapturedError() shows a dialog that throws,
		// we want to report this error outside of the normal stack as a last resort.
		// https://github.com/facebook/react/issues/13188
		setTimeout(function(){throw e;});}}var PossiblyWeakMap$1=typeof WeakMap==='function'?WeakMap:Map;function createRootErrorUpdate(fiber,errorInfo,lane){var update=createUpdate(NoTimestamp,lane);// Unmount the root by rendering null.
		update.tag=CaptureUpdate;// Caution: React DevTools currently depends on this property
		// being called "element".
		update.payload={element:null};var error=errorInfo.value;update.callback=function(){onUncaughtError(error);logCapturedError(fiber,errorInfo);};return update;}function createClassErrorUpdate(fiber,errorInfo,lane){var update=createUpdate(NoTimestamp,lane);update.tag=CaptureUpdate;var getDerivedStateFromError=fiber.type.getDerivedStateFromError;if(typeof getDerivedStateFromError==='function'){var error$1=errorInfo.value;update.payload=function(){return getDerivedStateFromError(error$1);};update.callback=function(){{markFailedErrorBoundaryForHotReloading(fiber);}logCapturedError(fiber,errorInfo);};}var inst=fiber.stateNode;if(inst!==null&&typeof inst.componentDidCatch==='function'){update.callback=function callback(){{markFailedErrorBoundaryForHotReloading(fiber);}logCapturedError(fiber,errorInfo);if(typeof getDerivedStateFromError!=='function'){// To preserve the preexisting retry behavior of error boundaries,
		// we keep track of which ones already failed during this batch.
		// This gets reset before we yield back to the browser.
		// TODO: Warn in strict mode if getDerivedStateFromError is
		// not defined.
		markLegacyErrorBoundaryAsFailed(this);}var error$1=errorInfo.value;var stack=errorInfo.stack;this.componentDidCatch(error$1,{componentStack:stack!==null?stack:''});{if(typeof getDerivedStateFromError!=='function'){// If componentDidCatch is the only error boundary method defined,
		// then it needs to call setState to recover from errors.
		// If no state update is scheduled then the boundary will swallow the error.
		if(!includesSomeLane(fiber.lanes,SyncLane)){error('%s: Error boundaries should implement getDerivedStateFromError(). '+'In that method, return a state update to display an error message or fallback UI.',getComponentNameFromFiber(fiber)||'Unknown');}}}};}return update;}function attachPingListener(root,wakeable,lanes){// Attach a ping listener
		//
		// The data might resolve before we have a chance to commit the fallback. Or,
		// in the case of a refresh, we'll never commit a fallback. So we need to
		// attach a listener now. When it resolves ("pings"), we can decide whether to
		// try rendering the tree again.
		//
		// Only attach a listener if one does not already exist for the lanes
		// we're currently rendering (which acts like a "thread ID" here).
		//
		// We only need to do this in concurrent mode. Legacy Suspense always
		// commits fallbacks synchronously, so there are no pings.
		var pingCache=root.pingCache;var threadIDs;if(pingCache===null){pingCache=root.pingCache=new PossiblyWeakMap$1();threadIDs=new Set();pingCache.set(wakeable,threadIDs);}else {threadIDs=pingCache.get(wakeable);if(threadIDs===undefined){threadIDs=new Set();pingCache.set(wakeable,threadIDs);}}if(!threadIDs.has(lanes)){// Memoize using the thread ID to prevent redundant listeners.
		threadIDs.add(lanes);var ping=pingSuspendedRoot.bind(null,root,wakeable,lanes);{if(isDevToolsPresent){// If we have pending work still, restore the original updaters
		restorePendingUpdaters(root,lanes);}}wakeable.then(ping,ping);}}function attachRetryListener(suspenseBoundary,root,wakeable,lanes){// Retry listener
		//
		// If the fallback does commit, we need to attach a different type of
		// listener. This one schedules an update on the Suspense boundary to turn
		// the fallback state off.
		//
		// Stash the wakeable on the boundary fiber so we can access it in the
		// commit phase.
		//
		// When the wakeable resolves, we'll attempt to render the boundary
		// again ("retry").
		var wakeables=suspenseBoundary.updateQueue;if(wakeables===null){var updateQueue=new Set();updateQueue.add(wakeable);suspenseBoundary.updateQueue=updateQueue;}else {wakeables.add(wakeable);}}function resetSuspendedComponent(sourceFiber,rootRenderLanes){// A legacy mode Suspense quirk, only relevant to hook components.
		var tag=sourceFiber.tag;if((sourceFiber.mode&ConcurrentMode)===NoMode&&(tag===FunctionComponent||tag===ForwardRef||tag===SimpleMemoComponent)){var currentSource=sourceFiber.alternate;if(currentSource){sourceFiber.updateQueue=currentSource.updateQueue;sourceFiber.memoizedState=currentSource.memoizedState;sourceFiber.lanes=currentSource.lanes;}else {sourceFiber.updateQueue=null;sourceFiber.memoizedState=null;}}}function getNearestSuspenseBoundaryToCapture(returnFiber){var node=returnFiber;do{if(node.tag===SuspenseComponent&&shouldCaptureSuspense(node)){return node;}// This boundary already captured during this render. Continue to the next
		// boundary.
		node=node.return;}while(node!==null);return null;}function markSuspenseBoundaryShouldCapture(suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes){// This marks a Suspense boundary so that when we're unwinding the stack,
		// it captures the suspended "exception" and does a second (fallback) pass.
		if((suspenseBoundary.mode&ConcurrentMode)===NoMode){// Legacy Mode Suspense
		//
		// If the boundary is in legacy mode, we should *not*
		// suspend the commit. Pretend as if the suspended component rendered
		// null and keep rendering. When the Suspense boundary completes,
		// we'll do a second pass to render the fallback.
		if(suspenseBoundary===returnFiber){// Special case where we suspended while reconciling the children of
		// a Suspense boundary's inner Offscreen wrapper fiber. This happens
		// when a React.lazy component is a direct child of a
		// Suspense boundary.
		//
		// Suspense boundaries are implemented as multiple fibers, but they
		// are a single conceptual unit. The legacy mode behavior where we
		// pretend the suspended fiber committed as `null` won't work,
		// because in this case the "suspended" fiber is the inner
		// Offscreen wrapper.
		//
		// Because the contents of the boundary haven't started rendering
		// yet (i.e. nothing in the tree has partially rendered) we can
		// switch to the regular, concurrent mode behavior: mark the
		// boundary with ShouldCapture and enter the unwind phase.
		suspenseBoundary.flags|=ShouldCapture;}else {suspenseBoundary.flags|=DidCapture;sourceFiber.flags|=ForceUpdateForLegacySuspense;// We're going to commit this fiber even though it didn't complete.
		// But we shouldn't call any lifecycle methods or callbacks. Remove
		// all lifecycle effect tags.
		sourceFiber.flags&=~(LifecycleEffectMask|Incomplete);if(sourceFiber.tag===ClassComponent){var currentSourceFiber=sourceFiber.alternate;if(currentSourceFiber===null){// This is a new mount. Change the tag so it's not mistaken for a
		// completed class component. For example, we should not call
		// componentWillUnmount if it is deleted.
		sourceFiber.tag=IncompleteClassComponent;}else {// When we try rendering again, we should not reuse the current fiber,
		// since it's known to be in an inconsistent state. Use a force update to
		// prevent a bail out.
		var update=createUpdate(NoTimestamp,SyncLane);update.tag=ForceUpdate;enqueueUpdate(sourceFiber,update,SyncLane);}}// The source fiber did not complete. Mark it with Sync priority to
		// indicate that it still has pending work.
		sourceFiber.lanes=mergeLanes(sourceFiber.lanes,SyncLane);}return suspenseBoundary;}// Confirmed that the boundary is in a concurrent mode tree. Continue
		// with the normal suspend path.
		//
		// After this we'll use a set of heuristics to determine whether this
		// render pass will run to completion or restart or "suspend" the commit.
		// The actual logic for this is spread out in different places.
		//
		// This first principle is that if we're going to suspend when we complete
		// a root, then we should also restart if we get an update or ping that
		// might unsuspend it, and vice versa. The only reason to suspend is
		// because you think you might want to restart before committing. However,
		// it doesn't make sense to restart only while in the period we're suspended.
		//
		// Restarting too aggressively is also not good because it starves out any
		// intermediate loading state. So we use heuristics to determine when.
		// Suspense Heuristics
		//
		// If nothing threw a Promise or all the same fallbacks are already showing,
		// then don't suspend/restart.
		//
		// If this is an initial render of a new tree of Suspense boundaries and
		// those trigger a fallback, then don't suspend/restart. We want to ensure
		// that we can show the initial loading state as quickly as possible.
		//
		// If we hit a "Delayed" case, such as when we'd switch from content back into
		// a fallback, then we should always suspend/restart. Transitions apply
		// to this case. If none is defined, JND is used instead.
		//
		// If we're already showing a fallback and it gets "retried", allowing us to show
		// another level, but there's still an inner boundary that would show a fallback,
		// then we suspend/restart for 500ms since the last time we showed a fallback
		// anywhere in the tree. This effectively throttles progressive loading into a
		// consistent train of commits. This also gives us an opportunity to restart to
		// get to the completed state slightly earlier.
		//
		// If there's ambiguity due to batching it's resolved in preference of:
		// 1) "delayed", 2) "initial render", 3) "retry".
		//
		// We want to ensure that a "busy" state doesn't get force committed. We want to
		// ensure that new initial loading states can commit as soon as possible.
		suspenseBoundary.flags|=ShouldCapture;// TODO: I think we can remove this, since we now use `DidCapture` in
		// the begin phase to prevent an early bailout.
		suspenseBoundary.lanes=rootRenderLanes;return suspenseBoundary;}function throwException(root,returnFiber,sourceFiber,value,rootRenderLanes){// The source fiber did not complete.
		sourceFiber.flags|=Incomplete;{if(isDevToolsPresent){// If we have pending work still, restore the original updaters
		restorePendingUpdaters(root,rootRenderLanes);}}if(value!==null&&typeof value==='object'&&typeof value.then==='function'){// This is a wakeable. The component suspended.
		var wakeable=value;resetSuspendedComponent(sourceFiber);{if(getIsHydrating()&&sourceFiber.mode&ConcurrentMode){markDidThrowWhileHydratingDEV();}}var suspenseBoundary=getNearestSuspenseBoundaryToCapture(returnFiber);if(suspenseBoundary!==null){suspenseBoundary.flags&=~ForceClientRender;markSuspenseBoundaryShouldCapture(suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes);// We only attach ping listeners in concurrent mode. Legacy Suspense always
		// commits fallbacks synchronously, so there are no pings.
		if(suspenseBoundary.mode&ConcurrentMode){attachPingListener(root,wakeable,rootRenderLanes);}attachRetryListener(suspenseBoundary,root,wakeable);return;}else {// No boundary was found. Unless this is a sync update, this is OK.
		// We can suspend and wait for more data to arrive.
		if(!includesSyncLane(rootRenderLanes)){// This is not a sync update. Suspend. Since we're not activating a
		// Suspense boundary, this will unwind all the way to the root without
		// performing a second pass to render a fallback. (This is arguably how
		// refresh transitions should work, too, since we're not going to commit
		// the fallbacks anyway.)
		//
		// This case also applies to initial hydration.
		attachPingListener(root,wakeable,rootRenderLanes);renderDidSuspendDelayIfPossible();return;}// This is a sync/discrete update. We treat this case like an error
		// because discrete renders are expected to produce a complete tree
		// synchronously to maintain consistency with external state.
		var uncaughtSuspenseError=new Error('A component suspended while responding to synchronous input. This '+'will cause the UI to be replaced with a loading indicator. To '+'fix, updates that suspend should be wrapped '+'with startTransition.');// If we're outside a transition, fall through to the regular error path.
		// The error will be caught by the nearest suspense boundary.
		value=uncaughtSuspenseError;}}else {// This is a regular error, not a Suspense wakeable.
		if(getIsHydrating()&&sourceFiber.mode&ConcurrentMode){markDidThrowWhileHydratingDEV();var _suspenseBoundary=getNearestSuspenseBoundaryToCapture(returnFiber);// If the error was thrown during hydration, we may be able to recover by
		// discarding the dehydrated content and switching to a client render.
		// Instead of surfacing the error, find the nearest Suspense boundary
		// and render it again without hydration.
		if(_suspenseBoundary!==null){if((_suspenseBoundary.flags&ShouldCapture)===NoFlags){// Set a flag to indicate that we should try rendering the normal
		// children again, not the fallback.
		_suspenseBoundary.flags|=ForceClientRender;}markSuspenseBoundaryShouldCapture(_suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes);// Even though the user may not be affected by this error, we should
		// still log it so it can be fixed.
		queueHydrationError(createCapturedValueAtFiber(value,sourceFiber));return;}}}value=createCapturedValueAtFiber(value,sourceFiber);renderDidError(value);// We didn't find a boundary that could handle this type of exception. Start
		// over and traverse parent path again, this time treating the exception
		// as an error.
		var workInProgress=returnFiber;do{switch(workInProgress.tag){case HostRoot:{var _errorInfo=value;workInProgress.flags|=ShouldCapture;var lane=pickArbitraryLane(rootRenderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,lane);var update=createRootErrorUpdate(workInProgress,_errorInfo,lane);enqueueCapturedUpdate(workInProgress,update);return;}case ClassComponent:// Capture and retry
		var errorInfo=value;var ctor=workInProgress.type;var instance=workInProgress.stateNode;if((workInProgress.flags&DidCapture)===NoFlags&&(typeof ctor.getDerivedStateFromError==='function'||instance!==null&&typeof instance.componentDidCatch==='function'&&!isAlreadyFailedLegacyErrorBoundary(instance))){workInProgress.flags|=ShouldCapture;var _lane=pickArbitraryLane(rootRenderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,_lane);// Schedule the error boundary to re-render using updated state
		var _update=createClassErrorUpdate(workInProgress,errorInfo,_lane);enqueueCapturedUpdate(workInProgress,_update);return;}break;}workInProgress=workInProgress.return;}while(workInProgress!==null);}function getSuspendedCache(){{return null;}// This function is called when a Suspense boundary suspends. It returns the
		}var ReactCurrentOwner$1=ReactSharedInternals.ReactCurrentOwner;var didReceiveUpdate=false;var didWarnAboutBadClass;var didWarnAboutModulePatternComponent;var didWarnAboutContextTypeOnFunctionComponent;var didWarnAboutGetDerivedStateOnFunctionComponent;var didWarnAboutFunctionRefs;var didWarnAboutReassigningProps;var didWarnAboutRevealOrder;var didWarnAboutTailOptions;{didWarnAboutBadClass={};didWarnAboutModulePatternComponent={};didWarnAboutContextTypeOnFunctionComponent={};didWarnAboutGetDerivedStateOnFunctionComponent={};didWarnAboutFunctionRefs={};didWarnAboutReassigningProps=false;didWarnAboutRevealOrder={};didWarnAboutTailOptions={};}function reconcileChildren(current,workInProgress,nextChildren,renderLanes){if(current===null){// If this is a fresh new component that hasn't been rendered yet, we
		// won't update its child set by applying minimal side-effects. Instead,
		// we will add them all to the child before it gets rendered. That means
		// we can optimize this reconciliation pass by not tracking side-effects.
		workInProgress.child=mountChildFibers(workInProgress,null,nextChildren,renderLanes);}else {// If the current child is the same as the work in progress, it means that
		// we haven't yet started any work on these children. Therefore, we use
		// the clone algorithm to create a copy of all the current children.
		// If we had any progressed work already, that is invalid at this point so
		// let's throw it out.
		workInProgress.child=reconcileChildFibers(workInProgress,current.child,nextChildren,renderLanes);}}function forceUnmountCurrentAndReconcile(current,workInProgress,nextChildren,renderLanes){// This function is fork of reconcileChildren. It's used in cases where we
		// want to reconcile without matching against the existing set. This has the
		// effect of all current children being unmounted; even if the type and key
		// are the same, the old child is unmounted and a new child is created.
		//
		// To do this, we're going to go through the reconcile algorithm twice. In
		// the first pass, we schedule a deletion for all the current children by
		// passing null.
		workInProgress.child=reconcileChildFibers(workInProgress,current.child,null,renderLanes);// In the second pass, we mount the new children. The trick here is that we
		// pass null in place of where we usually pass the current child set. This has
		// the effect of remounting all children regardless of whether their
		// identities match.
		workInProgress.child=reconcileChildFibers(workInProgress,null,nextChildren,renderLanes);}function updateForwardRef(current,workInProgress,Component,nextProps,renderLanes){// TODO: current can be non-null here even if the component
		// hasn't yet mounted. This happens after the first render suspends.
		// We'll need to figure out if this is fine or can cause issues.
		{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(Component));}}}var render=Component.render;var ref=workInProgress.ref;// The rest is a fork of updateFunctionComponent
		var nextChildren;var hasId;prepareToReadContext(workInProgress,renderLanes);{markComponentRenderStarted(workInProgress);}{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);nextChildren=renderWithHooks(current,workInProgress,render,nextProps,ref,renderLanes);hasId=checkDidRenderIdHook();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{nextChildren=renderWithHooks(current,workInProgress,render,nextProps,ref,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}if(current!==null&&!didReceiveUpdate){bailoutHooks(current,workInProgress,renderLanes);return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateMemoComponent(current,workInProgress,Component,nextProps,renderLanes){if(current===null){var type=Component.type;if(isSimpleFunctionComponent(type)&&Component.compare===null&&// SimpleMemoComponent codepath doesn't resolve outer props either.
		Component.defaultProps===undefined){var resolvedType=type;{resolvedType=resolveFunctionForHotReloading(type);}// If this is a plain function component without default props,
		// and with only the default shallow comparison, we upgrade it
		// to a SimpleMemoComponent to allow fast path updates.
		workInProgress.tag=SimpleMemoComponent;workInProgress.type=resolvedType;{validateFunctionComponentInDev(workInProgress,type);}return updateSimpleMemoComponent(current,workInProgress,resolvedType,nextProps,renderLanes);}{var innerPropTypes=type.propTypes;if(innerPropTypes){// Inner memo component props aren't currently validated in createElement.
		// We could move it there, but we'd still need this for lazy code path.
		checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(type));}}var child=createFiberFromTypeAndProps(Component.type,null,nextProps,workInProgress,workInProgress.mode,renderLanes);child.ref=workInProgress.ref;child.return=workInProgress;workInProgress.child=child;return child;}{var _type=Component.type;var _innerPropTypes=_type.propTypes;if(_innerPropTypes){// Inner memo component props aren't currently validated in createElement.
		// We could move it there, but we'd still need this for lazy code path.
		checkPropTypes(_innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(_type));}}var currentChild=current.child;// This is always exactly one child
		var hasScheduledUpdateOrContext=checkScheduledUpdateOrContext(current,renderLanes);if(!hasScheduledUpdateOrContext){// This will be the props with resolved defaultProps,
		// unlike current.memoizedProps which will be the unresolved ones.
		var prevProps=currentChild.memoizedProps;// Default to shallow comparison
		var compare=Component.compare;compare=compare!==null?compare:shallowEqual;if(compare(prevProps,nextProps)&&current.ref===workInProgress.ref){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;var newChild=createWorkInProgress(currentChild,nextProps);newChild.ref=workInProgress.ref;newChild.return=workInProgress;workInProgress.child=newChild;return newChild;}function updateSimpleMemoComponent(current,workInProgress,Component,nextProps,renderLanes){// TODO: current can be non-null here even if the component
		// hasn't yet mounted. This happens when the inner render suspends.
		// We'll need to figure out if this is fine or can cause issues.
		{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var outerMemoType=workInProgress.elementType;if(outerMemoType.$$typeof===REACT_LAZY_TYPE){// We warn when you define propTypes on lazy()
		// so let's just skip over it to find memo() outer wrapper.
		// Inner props for memo are validated later.
		var lazyComponent=outerMemoType;var payload=lazyComponent._payload;var init=lazyComponent._init;try{outerMemoType=init(payload);}catch(x){outerMemoType=null;}// Inner propTypes will be validated in the function component path.
		var outerPropTypes=outerMemoType&&outerMemoType.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,nextProps,// Resolved (SimpleMemoComponent has no defaultProps)
		'prop',getComponentNameFromType(outerMemoType));}}}}if(current!==null){var prevProps=current.memoizedProps;if(shallowEqual(prevProps,nextProps)&&current.ref===workInProgress.ref&&// Prevent bailout if the implementation changed due to hot reload.
		workInProgress.type===current.type){didReceiveUpdate=false;// The props are shallowly equal. Reuse the previous props object, like we
		// would during a normal fiber bailout.
		//
		// We don't have strong guarantees that the props object is referentially
		// equal during updates where we can't bail out anyway — like if the props
		// are shallowly equal, but there's a local state or context update in the
		// same batch.
		//
		// However, as a principle, we should aim to make the behavior consistent
		// across different ways of memoizing a component. For example, React.memo
		// has a different internal Fiber layout if you pass a normal function
		// component (SimpleMemoComponent) versus if you pass a different type
		// like forwardRef (MemoComponent). But this is an implementation detail.
		// Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
		// affect whether the props object is reused during a bailout.
		workInProgress.pendingProps=nextProps=prevProps;if(!checkScheduledUpdateOrContext(current,renderLanes)){// The pending lanes were cleared at the beginning of beginWork. We're
		// about to bail out, but there might be other lanes that weren't
		// included in the current render. Usually, the priority level of the
		// remaining updates is accumulated during the evaluation of the
		// component (i.e. when processing the update queue). But since since
		// we're bailing out early *without* evaluating the component, we need
		// to account for it here, too. Reset to the value of the current fiber.
		// NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
		// because a MemoComponent fiber does not have hooks or an update queue;
		// rather, it wraps around an inner component, which may or may not
		// contains hooks.
		// TODO: Move the reset at in beginWork out of the common path so that
		// this is no longer necessary.
		workInProgress.lanes=current.lanes;return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}else if((current.flags&ForceUpdateForLegacySuspense)!==NoFlags){// This is a special case that only exists for legacy mode.
		// See https://github.com/facebook/react/pull/19216.
		didReceiveUpdate=true;}}}return updateFunctionComponent(current,workInProgress,Component,nextProps,renderLanes);}function updateOffscreenComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;var nextChildren=nextProps.children;var prevState=current!==null?current.memoizedState:null;if(nextProps.mode==='hidden'||enableLegacyHidden){// Rendering a hidden tree.
		if((workInProgress.mode&ConcurrentMode)===NoMode){// In legacy sync mode, don't defer the subtree. Render it now.
		// TODO: Consider how Offscreen should work with transitions in the future
		var nextState={baseLanes:NoLanes,cachePool:null,transitions:null};workInProgress.memoizedState=nextState;pushRenderLanes(workInProgress,renderLanes);}else if(!includesSomeLane(renderLanes,OffscreenLane)){var spawnedCachePool=null;// We're hidden, and we're not rendering at Offscreen. We will bail out
		// and resume this tree later.
		var nextBaseLanes;if(prevState!==null){var prevBaseLanes=prevState.baseLanes;nextBaseLanes=mergeLanes(prevBaseLanes,renderLanes);}else {nextBaseLanes=renderLanes;}// Schedule this fiber to re-render at offscreen priority. Then bailout.
		workInProgress.lanes=workInProgress.childLanes=laneToLanes(OffscreenLane);var _nextState={baseLanes:nextBaseLanes,cachePool:spawnedCachePool,transitions:null};workInProgress.memoizedState=_nextState;workInProgress.updateQueue=null;// to avoid a push/pop misalignment.
		pushRenderLanes(workInProgress,nextBaseLanes);return null;}else {// This is the second render. The surrounding visible content has already
		// committed. Now we resume rendering the hidden tree.
		// Rendering at offscreen, so we can clear the base lanes.
		var _nextState2={baseLanes:NoLanes,cachePool:null,transitions:null};workInProgress.memoizedState=_nextState2;// Push the lanes that were skipped when we bailed out.
		var subtreeRenderLanes=prevState!==null?prevState.baseLanes:renderLanes;pushRenderLanes(workInProgress,subtreeRenderLanes);}}else {// Rendering a visible tree.
		var _subtreeRenderLanes;if(prevState!==null){// We're going from hidden -> visible.
		_subtreeRenderLanes=mergeLanes(prevState.baseLanes,renderLanes);workInProgress.memoizedState=null;}else {// We weren't previously hidden, and we still aren't, so there's nothing
		// special to do. Need to push to the stack regardless, though, to avoid
		// a push/pop misalignment.
		_subtreeRenderLanes=renderLanes;}pushRenderLanes(workInProgress,_subtreeRenderLanes);}reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}// Note: These happen to have identical begin phases, for now. We shouldn't hold
		function updateFragment(current,workInProgress,renderLanes){var nextChildren=workInProgress.pendingProps;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateMode(current,workInProgress,renderLanes){var nextChildren=workInProgress.pendingProps.children;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateProfiler(current,workInProgress,renderLanes){{workInProgress.flags|=Update;{// Reset effect durations for the next eventual effect phase.
		// These are reset during render to allow the DevTools commit hook a chance to read them,
		var stateNode=workInProgress.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}}var nextProps=workInProgress.pendingProps;var nextChildren=nextProps.children;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function markRef(current,workInProgress){var ref=workInProgress.ref;if(current===null&&ref!==null||current!==null&&current.ref!==ref){// Schedule a Ref effect
		workInProgress.flags|=Ref;{workInProgress.flags|=RefStatic;}}}function updateFunctionComponent(current,workInProgress,Component,nextProps,renderLanes){{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(Component));}}}var context;{var unmaskedContext=getUnmaskedContext(workInProgress,Component,true);context=getMaskedContext(workInProgress,unmaskedContext);}var nextChildren;var hasId;prepareToReadContext(workInProgress,renderLanes);{markComponentRenderStarted(workInProgress);}{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);nextChildren=renderWithHooks(current,workInProgress,Component,nextProps,context,renderLanes);hasId=checkDidRenderIdHook();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{nextChildren=renderWithHooks(current,workInProgress,Component,nextProps,context,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}if(current!==null&&!didReceiveUpdate){bailoutHooks(current,workInProgress,renderLanes);return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateClassComponent(current,workInProgress,Component,nextProps,renderLanes){{// This is used by DevTools to force a boundary to error.
		switch(shouldError(workInProgress)){case false:{var _instance=workInProgress.stateNode;var ctor=workInProgress.type;// TODO This way of resetting the error boundary state is a hack.
		// Is there a better way to do this?
		var tempInstance=new ctor(workInProgress.memoizedProps,_instance.context);var state=tempInstance.state;_instance.updater.enqueueSetState(_instance,state,null);break;}case true:{workInProgress.flags|=DidCapture;workInProgress.flags|=ShouldCapture;// eslint-disable-next-line react-internal/prod-error-codes
		var error$1=new Error('Simulated error coming from DevTools');var lane=pickArbitraryLane(renderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,lane);// Schedule the error boundary to re-render using updated state
		var update=createClassErrorUpdate(workInProgress,createCapturedValueAtFiber(error$1,workInProgress),lane);enqueueCapturedUpdate(workInProgress,update);break;}}if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement
		// because they're only guaranteed to be resolved here.
		var innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props
		'prop',getComponentNameFromType(Component));}}}// Push context providers early to prevent context stack mismatches.
		// During mounting we don't know the child context yet as the instance doesn't exist.
		// We will invalidate the child context in finishClassComponent() right after rendering.
		var hasContext;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else {hasContext=false;}prepareToReadContext(workInProgress,renderLanes);var instance=workInProgress.stateNode;var shouldUpdate;if(instance===null){resetSuspendedCurrentOnMountInLegacyMode(current,workInProgress);// In the initial pass we might need to construct the instance.
		constructClassInstance(workInProgress,Component,nextProps);mountClassInstance(workInProgress,Component,nextProps,renderLanes);shouldUpdate=true;}else if(current===null){// In a resume, we'll already have an instance we can reuse.
		shouldUpdate=resumeMountClassInstance(workInProgress,Component,nextProps,renderLanes);}else {shouldUpdate=updateClassInstance(current,workInProgress,Component,nextProps,renderLanes);}var nextUnitOfWork=finishClassComponent(current,workInProgress,Component,shouldUpdate,hasContext,renderLanes);{var inst=workInProgress.stateNode;if(shouldUpdate&&inst.props!==nextProps){if(!didWarnAboutReassigningProps){error('It looks like %s is reassigning its own `this.props` while rendering. '+'This is not supported and can lead to confusing bugs.',getComponentNameFromFiber(workInProgress)||'a component');}didWarnAboutReassigningProps=true;}}return nextUnitOfWork;}function finishClassComponent(current,workInProgress,Component,shouldUpdate,hasContext,renderLanes){// Refs should update even if shouldComponentUpdate returns false
		markRef(current,workInProgress);var didCaptureError=(workInProgress.flags&DidCapture)!==NoFlags;if(!shouldUpdate&&!didCaptureError){// Context providers should defer to sCU for rendering
		if(hasContext){invalidateContextProvider(workInProgress,Component,false);}return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}var instance=workInProgress.stateNode;// Rerender
		ReactCurrentOwner$1.current=workInProgress;var nextChildren;if(didCaptureError&&typeof Component.getDerivedStateFromError!=='function'){// If we captured an error, but getDerivedStateFromError is not defined,
		// unmount all the children. componentDidCatch will schedule an update to
		// re-render a fallback. This is temporary until we migrate everyone to
		// the new API.
		// TODO: Warn in a future release.
		nextChildren=null;{stopProfilerTimerIfRunning();}}else {{markComponentRenderStarted(workInProgress);}{setIsRendering(true);nextChildren=instance.render();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{instance.render();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;if(current!==null&&didCaptureError){// If we're recovering from an error, reconcile without reusing any of
		// the existing children. Conceptually, the normal children and the children
		// that are shown on error are two different sets, so we shouldn't reuse
		// normal children even if their identities match.
		forceUnmountCurrentAndReconcile(current,workInProgress,nextChildren,renderLanes);}else {reconcileChildren(current,workInProgress,nextChildren,renderLanes);}// Memoize state using the values we just used to render.
		// TODO: Restructure so we never read values from the instance.
		workInProgress.memoizedState=instance.state;// The context might have changed so we need to recalculate it.
		if(hasContext){invalidateContextProvider(workInProgress,Component,true);}return workInProgress.child;}function pushHostRootContext(workInProgress){var root=workInProgress.stateNode;if(root.pendingContext){pushTopLevelContextObject(workInProgress,root.pendingContext,root.pendingContext!==root.context);}else if(root.context){// Should always be set
		pushTopLevelContextObject(workInProgress,root.context,false);}pushHostContainer(workInProgress,root.containerInfo);}function updateHostRoot(current,workInProgress,renderLanes){pushHostRootContext(workInProgress);if(current===null){throw new Error('Should have a current fiber. This is a bug in React.');}var nextProps=workInProgress.pendingProps;var prevState=workInProgress.memoizedState;var prevChildren=prevState.element;cloneUpdateQueue(current,workInProgress);processUpdateQueue(workInProgress,nextProps,null,renderLanes);var nextState=workInProgress.memoizedState;workInProgress.stateNode;// being called "element".
		var nextChildren=nextState.element;if(prevState.isDehydrated){// This is a hydration root whose shell has not yet hydrated. We should
		// attempt to hydrate.
		// Flip isDehydrated to false to indicate that when this render
		// finishes, the root will no longer be dehydrated.
		var overrideState={element:nextChildren,isDehydrated:false,cache:nextState.cache,pendingSuspenseBoundaries:nextState.pendingSuspenseBoundaries,transitions:nextState.transitions};var updateQueue=workInProgress.updateQueue;// `baseState` can always be the last state because the root doesn't
		// have reducer functions so it doesn't need rebasing.
		updateQueue.baseState=overrideState;workInProgress.memoizedState=overrideState;if(workInProgress.flags&ForceClientRender){// Something errored during a previous attempt to hydrate the shell, so we
		// forced a client render.
		var recoverableError=createCapturedValueAtFiber(new Error('There was an error while hydrating. Because the error happened outside '+'of a Suspense boundary, the entire root will switch to '+'client rendering.'),workInProgress);return mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,recoverableError);}else if(nextChildren!==prevChildren){var _recoverableError=createCapturedValueAtFiber(new Error('This root received an early update, before anything was able '+'hydrate. Switched the entire root to client rendering.'),workInProgress);return mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,_recoverableError);}else {// The outermost shell has not hydrated yet. Start hydrating.
		enterHydrationState(workInProgress);var child=mountChildFibers(workInProgress,null,nextChildren,renderLanes);workInProgress.child=child;var node=child;while(node){// Mark each child as hydrating. This is a fast path to know whether this
		// tree is part of a hydrating tree. This is used to determine if a child
		// node has fully mounted yet, and for scheduling event replaying.
		// Conceptually this is similar to Placement in that a new subtree is
		// inserted into the React tree here. It just happens to not need DOM
		// mutations because it already exists.
		node.flags=node.flags&~Placement|Hydrating;node=node.sibling;}}}else {// Root is not dehydrated. Either this is a client-only root, or it
		// already hydrated.
		resetHydrationState();if(nextChildren===prevChildren){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}reconcileChildren(current,workInProgress,nextChildren,renderLanes);}return workInProgress.child;}function mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,recoverableError){// Revert to client rendering.
		resetHydrationState();queueHydrationError(recoverableError);workInProgress.flags|=ForceClientRender;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateHostComponent(current,workInProgress,renderLanes){pushHostContext(workInProgress);if(current===null){tryToClaimNextHydratableInstance(workInProgress);}var type=workInProgress.type;var nextProps=workInProgress.pendingProps;var prevProps=current!==null?current.memoizedProps:null;var nextChildren=nextProps.children;var isDirectTextChild=shouldSetTextContent(type,nextProps);if(isDirectTextChild){// We special case a direct text child of a host node. This is a common
		// case. We won't handle it as a reified child. We will instead handle
		// this in the host environment that also has access to this prop. That
		// avoids allocating another HostText fiber and traversing it.
		nextChildren=null;}else if(prevProps!==null&&shouldSetTextContent(type,prevProps)){// If we're switching from a direct text child to a normal child, or to
		// empty, we need to schedule the text content to be reset.
		workInProgress.flags|=ContentReset;}markRef(current,workInProgress);reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateHostText(current,workInProgress){if(current===null){tryToClaimNextHydratableInstance(workInProgress);}// Nothing to do here. This is terminal. We'll do the completion step
		// immediately after.
		return null;}function mountLazyComponent(_current,workInProgress,elementType,renderLanes){resetSuspendedCurrentOnMountInLegacyMode(_current,workInProgress);var props=workInProgress.pendingProps;var lazyComponent=elementType;var payload=lazyComponent._payload;var init=lazyComponent._init;var Component=init(payload);// Store the unwrapped component in the type.
		workInProgress.type=Component;var resolvedTag=workInProgress.tag=resolveLazyComponentTag(Component);var resolvedProps=resolveDefaultProps(Component,props);var child;switch(resolvedTag){case FunctionComponent:{{validateFunctionComponentInDev(workInProgress,Component);workInProgress.type=Component=resolveFunctionForHotReloading(Component);}child=updateFunctionComponent(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case ClassComponent:{{workInProgress.type=Component=resolveClassForHotReloading(Component);}child=updateClassComponent(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case ForwardRef:{{workInProgress.type=Component=resolveForwardRefForHotReloading(Component);}child=updateForwardRef(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case MemoComponent:{{if(workInProgress.type!==workInProgress.elementType){var outerPropTypes=Component.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,resolvedProps,// Resolved for outer only
		'prop',getComponentNameFromType(Component));}}}child=updateMemoComponent(null,workInProgress,Component,resolveDefaultProps(Component.type,resolvedProps),// The inner type can have defaults too
		renderLanes);return child;}}var hint='';{if(Component!==null&&typeof Component==='object'&&Component.$$typeof===REACT_LAZY_TYPE){hint=' Did you wrap a component in React.lazy() more than once?';}}// This message intentionally doesn't mention ForwardRef or MemoComponent
		// because the fact that it's a separate type of work is an
		// implementation detail.
		throw new Error("Element type is invalid. Received a promise that resolves to: "+Component+". "+("Lazy element type must resolve to a class or function."+hint));}function mountIncompleteClassComponent(_current,workInProgress,Component,nextProps,renderLanes){resetSuspendedCurrentOnMountInLegacyMode(_current,workInProgress);// Promote the fiber to a class and try rendering again.
		workInProgress.tag=ClassComponent;// The rest of this function is a fork of `updateClassComponent`
		// Push context providers early to prevent context stack mismatches.
		// During mounting we don't know the child context yet as the instance doesn't exist.
		// We will invalidate the child context in finishClassComponent() right after rendering.
		var hasContext;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else {hasContext=false;}prepareToReadContext(workInProgress,renderLanes);constructClassInstance(workInProgress,Component,nextProps);mountClassInstance(workInProgress,Component,nextProps,renderLanes);return finishClassComponent(null,workInProgress,Component,true,hasContext,renderLanes);}function mountIndeterminateComponent(_current,workInProgress,Component,renderLanes){resetSuspendedCurrentOnMountInLegacyMode(_current,workInProgress);var props=workInProgress.pendingProps;var context;{var unmaskedContext=getUnmaskedContext(workInProgress,Component,false);context=getMaskedContext(workInProgress,unmaskedContext);}prepareToReadContext(workInProgress,renderLanes);var value;var hasId;{markComponentRenderStarted(workInProgress);}{if(Component.prototype&&typeof Component.prototype.render==='function'){var componentName=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutBadClass[componentName]){error("The <%s /> component appears to have a render method, but doesn't extend React.Component. "+'This is likely to cause errors. Change %s to extend React.Component instead.',componentName,componentName);didWarnAboutBadClass[componentName]=true;}}if(workInProgress.mode&StrictLegacyMode){ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress,null);}setIsRendering(true);ReactCurrentOwner$1.current=workInProgress;value=renderWithHooks(null,workInProgress,Component,props,context,renderLanes);hasId=checkDidRenderIdHook();setIsRendering(false);}{markComponentRenderStopped();}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;{// Support for module components is deprecated and is removed behind a flag.
		// Whether or not it would crash later, we want to show a good message in DEV first.
		if(typeof value==='object'&&value!==null&&typeof value.render==='function'&&value.$$typeof===undefined){var _componentName=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutModulePatternComponent[_componentName]){error('The <%s /> component appears to be a function component that returns a class instance. '+'Change %s to a class that extends React.Component instead. '+"If you can't use a class try assigning the prototype on the function as a workaround. "+"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it "+'cannot be called with `new` by React.',_componentName,_componentName,_componentName);didWarnAboutModulePatternComponent[_componentName]=true;}}}if(// Run these checks in production only if the flag is off.
		// Eventually we'll delete this branch altogether.
		typeof value==='object'&&value!==null&&typeof value.render==='function'&&value.$$typeof===undefined){{var _componentName2=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutModulePatternComponent[_componentName2]){error('The <%s /> component appears to be a function component that returns a class instance. '+'Change %s to a class that extends React.Component instead. '+"If you can't use a class try assigning the prototype on the function as a workaround. "+"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it "+'cannot be called with `new` by React.',_componentName2,_componentName2,_componentName2);didWarnAboutModulePatternComponent[_componentName2]=true;}}// Proceed under the assumption that this is a class instance
		workInProgress.tag=ClassComponent;// Throw out any hooks that were used.
		workInProgress.memoizedState=null;workInProgress.updateQueue=null;// Push context providers early to prevent context stack mismatches.
		// During mounting we don't know the child context yet as the instance doesn't exist.
		// We will invalidate the child context in finishClassComponent() right after rendering.
		var hasContext=false;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else {hasContext=false;}workInProgress.memoizedState=value.state!==null&&value.state!==undefined?value.state:null;initializeUpdateQueue(workInProgress);adoptClassInstance(workInProgress,value);mountClassInstance(workInProgress,Component,props,renderLanes);return finishClassComponent(null,workInProgress,Component,true,hasContext,renderLanes);}else {// Proceed under the assumption that this is a function component
		workInProgress.tag=FunctionComponent;{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{value=renderWithHooks(null,workInProgress,Component,props,context,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}reconcileChildren(null,workInProgress,value,renderLanes);{validateFunctionComponentInDev(workInProgress,Component);}return workInProgress.child;}}function validateFunctionComponentInDev(workInProgress,Component){{if(Component){if(Component.childContextTypes){error('%s(...): childContextTypes cannot be defined on a function component.',Component.displayName||Component.name||'Component');}}if(workInProgress.ref!==null){var info='';var ownerName=getCurrentFiberOwnerNameInDevOrNull();if(ownerName){info+='\n\nCheck the render method of `'+ownerName+'`.';}var warningKey=ownerName||'';var debugSource=workInProgress._debugSource;if(debugSource){warningKey=debugSource.fileName+':'+debugSource.lineNumber;}if(!didWarnAboutFunctionRefs[warningKey]){didWarnAboutFunctionRefs[warningKey]=true;error('Function components cannot be given refs. '+'Attempts to access this ref will fail. '+'Did you mean to use React.forwardRef()?%s',info);}}if(typeof Component.getDerivedStateFromProps==='function'){var _componentName3=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]){error('%s: Function components do not support getDerivedStateFromProps.',_componentName3);didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]=true;}}if(typeof Component.contextType==='object'&&Component.contextType!==null){var _componentName4=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutContextTypeOnFunctionComponent[_componentName4]){error('%s: Function components do not support contextType.',_componentName4);didWarnAboutContextTypeOnFunctionComponent[_componentName4]=true;}}}}var SUSPENDED_MARKER={dehydrated:null,treeContext:null,retryLane:NoLane};function mountSuspenseOffscreenState(renderLanes){return {baseLanes:renderLanes,cachePool:getSuspendedCache(),transitions:null};}function updateSuspenseOffscreenState(prevOffscreenState,renderLanes){var cachePool=null;return {baseLanes:mergeLanes(prevOffscreenState.baseLanes,renderLanes),cachePool:cachePool,transitions:prevOffscreenState.transitions};}// TODO: Probably should inline this back
		function shouldRemainOnFallback(suspenseContext,current,workInProgress,renderLanes){// If we're already showing a fallback, there are cases where we need to
		// remain on that fallback regardless of whether the content has resolved.
		// For example, SuspenseList coordinates when nested content appears.
		if(current!==null){var suspenseState=current.memoizedState;if(suspenseState===null){// Currently showing content. Don't hide it, even if ForceSuspenseFallback
		// is true. More precise name might be "ForceRemainSuspenseFallback".
		// Note: This is a factoring smell. Can't remain on a fallback if there's
		// no fallback to remain on.
		return false;}}// Not currently showing content. Consult the Suspense context.
		return hasSuspenseContext(suspenseContext,ForceSuspenseFallback);}function getRemainingWorkInPrimaryTree(current,renderLanes){// TODO: Should not remove render lanes that were pinged during this render
		return removeLanes(current.childLanes,renderLanes);}function updateSuspenseComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;// This is used by DevTools to force a boundary to suspend.
		{if(shouldSuspend(workInProgress)){workInProgress.flags|=DidCapture;}}var suspenseContext=suspenseStackCursor.current;var showFallback=false;var didSuspend=(workInProgress.flags&DidCapture)!==NoFlags;if(didSuspend||shouldRemainOnFallback(suspenseContext,current)){// Something in this boundary's subtree already suspended. Switch to
		// rendering the fallback children.
		showFallback=true;workInProgress.flags&=~DidCapture;}else {// Attempting the main content
		if(current===null||current.memoizedState!==null){// This is a new mount or this boundary is already showing a fallback state.
		// Mark this subtree context as having at least one invisible parent that could
		// handle the fallback state.
		// Avoided boundaries are not considered since they cannot handle preferred fallback states.
		{suspenseContext=addSubtreeSuspenseContext(suspenseContext,InvisibleParentSuspenseContext);}}}suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);pushSuspenseContext(workInProgress,suspenseContext);// OK, the next part is confusing. We're about to reconcile the Suspense
		// boundary's children. This involves some custom reconciliation logic. Two
		// main reasons this is so complicated.
		//
		// First, Legacy Mode has different semantics for backwards compatibility. The
		// primary tree will commit in an inconsistent state, so when we do the
		// second pass to render the fallback, we do some exceedingly, uh, clever
		// hacks to make that not totally break. Like transferring effects and
		// deletions from hidden tree. In Concurrent Mode, it's much simpler,
		// because we bailout on the primary tree completely and leave it in its old
		// state, no effects. Same as what we do for Offscreen (except that
		// Offscreen doesn't have the first render pass).
		//
		// Second is hydration. During hydration, the Suspense fiber has a slightly
		// different layout, where the child points to a dehydrated fragment, which
		// contains the DOM rendered by the server.
		//
		// Third, even if you set all that aside, Suspense is like error boundaries in
		// that we first we try to render one tree, and if that fails, we render again
		// and switch to a different tree. Like a try/catch block. So we have to track
		// which branch we're currently rendering. Ideally we would model this using
		// a stack.
		if(current===null){// Initial mount
		// Special path for hydration
		// If we're currently hydrating, try to hydrate this boundary.
		tryToClaimNextHydratableInstance(workInProgress);// This could've been a dehydrated suspense component.
		var suspenseState=workInProgress.memoizedState;if(suspenseState!==null){var dehydrated=suspenseState.dehydrated;if(dehydrated!==null){return mountDehydratedSuspenseComponent(workInProgress,dehydrated);}}var nextPrimaryChildren=nextProps.children;var nextFallbackChildren=nextProps.fallback;if(showFallback){var fallbackFragment=mountSuspenseFallbackChildren(workInProgress,nextPrimaryChildren,nextFallbackChildren,renderLanes);var primaryChildFragment=workInProgress.child;primaryChildFragment.memoizedState=mountSuspenseOffscreenState(renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackFragment;}else {return mountSuspensePrimaryChildren(workInProgress,nextPrimaryChildren);}}else {// This is an update.
		// Special path for hydration
		var prevState=current.memoizedState;if(prevState!==null){var _dehydrated=prevState.dehydrated;if(_dehydrated!==null){return updateDehydratedSuspenseComponent(current,workInProgress,didSuspend,nextProps,_dehydrated,prevState,renderLanes);}}if(showFallback){var _nextFallbackChildren=nextProps.fallback;var _nextPrimaryChildren=nextProps.children;var fallbackChildFragment=updateSuspenseFallbackChildren(current,workInProgress,_nextPrimaryChildren,_nextFallbackChildren,renderLanes);var _primaryChildFragment2=workInProgress.child;var prevOffscreenState=current.child.memoizedState;_primaryChildFragment2.memoizedState=prevOffscreenState===null?mountSuspenseOffscreenState(renderLanes):updateSuspenseOffscreenState(prevOffscreenState,renderLanes);_primaryChildFragment2.childLanes=getRemainingWorkInPrimaryTree(current,renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackChildFragment;}else {var _nextPrimaryChildren2=nextProps.children;var _primaryChildFragment3=updateSuspensePrimaryChildren(current,workInProgress,_nextPrimaryChildren2,renderLanes);workInProgress.memoizedState=null;return _primaryChildFragment3;}}}function mountSuspensePrimaryChildren(workInProgress,primaryChildren,renderLanes){var mode=workInProgress.mode;var primaryChildProps={mode:'visible',children:primaryChildren};var primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,mode);primaryChildFragment.return=workInProgress;workInProgress.child=primaryChildFragment;return primaryChildFragment;}function mountSuspenseFallbackChildren(workInProgress,primaryChildren,fallbackChildren,renderLanes){var mode=workInProgress.mode;var progressedPrimaryFragment=workInProgress.child;var primaryChildProps={mode:'hidden',children:primaryChildren};var primaryChildFragment;var fallbackChildFragment;if((mode&ConcurrentMode)===NoMode&&progressedPrimaryFragment!==null){// In legacy mode, we commit the primary tree as if it successfully
		// completed, even though it's in an inconsistent state.
		primaryChildFragment=progressedPrimaryFragment;primaryChildFragment.childLanes=NoLanes;primaryChildFragment.pendingProps=primaryChildProps;if(workInProgress.mode&ProfileMode){// Reset the durations from the first pass so they aren't included in the
		// final amounts. This seems counterintuitive, since we're intentionally
		// not measuring part of the render phase, but this makes it match what we
		// do in Concurrent Mode.
		primaryChildFragment.actualDuration=0;primaryChildFragment.actualStartTime=-1;primaryChildFragment.selfBaseDuration=0;primaryChildFragment.treeBaseDuration=0;}fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);}else {primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,mode);fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);}primaryChildFragment.return=workInProgress;fallbackChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;return fallbackChildFragment;}function mountWorkInProgressOffscreenFiber(offscreenProps,mode,renderLanes){// The props argument to `createFiberFromOffscreen` is `any` typed, so we use
		// this wrapper function to constrain it.
		return createFiberFromOffscreen(offscreenProps,mode,NoLanes,null);}function updateWorkInProgressOffscreenFiber(current,offscreenProps){// The props argument to `createWorkInProgress` is `any` typed, so we use this
		// wrapper function to constrain it.
		return createWorkInProgress(current,offscreenProps);}function updateSuspensePrimaryChildren(current,workInProgress,primaryChildren,renderLanes){var currentPrimaryChildFragment=current.child;var currentFallbackChildFragment=currentPrimaryChildFragment.sibling;var primaryChildFragment=updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment,{mode:'visible',children:primaryChildren});if((workInProgress.mode&ConcurrentMode)===NoMode){primaryChildFragment.lanes=renderLanes;}primaryChildFragment.return=workInProgress;primaryChildFragment.sibling=null;if(currentFallbackChildFragment!==null){// Delete the fallback child fragment
		var deletions=workInProgress.deletions;if(deletions===null){workInProgress.deletions=[currentFallbackChildFragment];workInProgress.flags|=ChildDeletion;}else {deletions.push(currentFallbackChildFragment);}}workInProgress.child=primaryChildFragment;return primaryChildFragment;}function updateSuspenseFallbackChildren(current,workInProgress,primaryChildren,fallbackChildren,renderLanes){var mode=workInProgress.mode;var currentPrimaryChildFragment=current.child;var currentFallbackChildFragment=currentPrimaryChildFragment.sibling;var primaryChildProps={mode:'hidden',children:primaryChildren};var primaryChildFragment;if(// In legacy mode, we commit the primary tree as if it successfully
		// completed, even though it's in an inconsistent state.
		(mode&ConcurrentMode)===NoMode&&// Make sure we're on the second pass, i.e. the primary child fragment was
		// already cloned. In legacy mode, the only case where this isn't true is
		// when DevTools forces us to display a fallback; we skip the first render
		// pass entirely and go straight to rendering the fallback. (In Concurrent
		// Mode, SuspenseList can also trigger this scenario, but this is a legacy-
		// only codepath.)
		workInProgress.child!==currentPrimaryChildFragment){var progressedPrimaryFragment=workInProgress.child;primaryChildFragment=progressedPrimaryFragment;primaryChildFragment.childLanes=NoLanes;primaryChildFragment.pendingProps=primaryChildProps;if(workInProgress.mode&ProfileMode){// Reset the durations from the first pass so they aren't included in the
		// final amounts. This seems counterintuitive, since we're intentionally
		// not measuring part of the render phase, but this makes it match what we
		// do in Concurrent Mode.
		primaryChildFragment.actualDuration=0;primaryChildFragment.actualStartTime=-1;primaryChildFragment.selfBaseDuration=currentPrimaryChildFragment.selfBaseDuration;primaryChildFragment.treeBaseDuration=currentPrimaryChildFragment.treeBaseDuration;}// The fallback fiber was added as a deletion during the first pass.
		// However, since we're going to remain on the fallback, we no longer want
		// to delete it.
		workInProgress.deletions=null;}else {primaryChildFragment=updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment,primaryChildProps);// Since we're reusing a current tree, we need to reuse the flags, too.
		// (We don't do this in legacy mode, because in legacy mode we don't re-use
		// the current tree; see previous branch.)
		primaryChildFragment.subtreeFlags=currentPrimaryChildFragment.subtreeFlags&StaticMask;}var fallbackChildFragment;if(currentFallbackChildFragment!==null){fallbackChildFragment=createWorkInProgress(currentFallbackChildFragment,fallbackChildren);}else {fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);// Needs a placement effect because the parent (the Suspense boundary) already
		// mounted but this is a new fiber.
		fallbackChildFragment.flags|=Placement;}fallbackChildFragment.return=workInProgress;primaryChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;return fallbackChildFragment;}function retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,recoverableError){// Falling back to client rendering. Because this has performance
		// implications, it's considered a recoverable error, even though the user
		// likely won't observe anything wrong with the UI.
		//
		// The error is passed in as an argument to enforce that every caller provide
		// a custom message, or explicitly opt out (currently the only path that opts
		// out is legacy mode; every concurrent path provides an error).
		if(recoverableError!==null){queueHydrationError(recoverableError);}// This will add the old fiber to the deletion list
		reconcileChildFibers(workInProgress,current.child,null,renderLanes);// We're now not suspended nor dehydrated.
		var nextProps=workInProgress.pendingProps;var primaryChildren=nextProps.children;var primaryChildFragment=mountSuspensePrimaryChildren(workInProgress,primaryChildren);// Needs a placement effect because the parent (the Suspense boundary) already
		// mounted but this is a new fiber.
		primaryChildFragment.flags|=Placement;workInProgress.memoizedState=null;return primaryChildFragment;}function mountSuspenseFallbackAfterRetryWithoutHydrating(current,workInProgress,primaryChildren,fallbackChildren,renderLanes){var fiberMode=workInProgress.mode;var primaryChildProps={mode:'visible',children:primaryChildren};var primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,fiberMode);var fallbackChildFragment=createFiberFromFragment(fallbackChildren,fiberMode,renderLanes,null);// Needs a placement effect because the parent (the Suspense
		// boundary) already mounted but this is a new fiber.
		fallbackChildFragment.flags|=Placement;primaryChildFragment.return=workInProgress;fallbackChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;if((workInProgress.mode&ConcurrentMode)!==NoMode){// We will have dropped the effect list which contains the
		// deletion. We need to reconcile to delete the current child.
		reconcileChildFibers(workInProgress,current.child,null,renderLanes);}return fallbackChildFragment;}function mountDehydratedSuspenseComponent(workInProgress,suspenseInstance,renderLanes){// During the first pass, we'll bail out and not drill into the children.
		// Instead, we'll leave the content in place and try to hydrate it later.
		if((workInProgress.mode&ConcurrentMode)===NoMode){{error('Cannot hydrate Suspense in legacy mode. Switch from '+'ReactDOM.hydrate(element, container) to '+'ReactDOMClient.hydrateRoot(container, <App />)'+'.render(element) or remove the Suspense components from '+'the server rendered components.');}workInProgress.lanes=laneToLanes(SyncLane);}else if(isSuspenseInstanceFallback(suspenseInstance)){// This is a client-only boundary. Since we won't get any content from the server
		// for this, we need to schedule that at a higher priority based on when it would
		// have timed out. In theory we could render it in this pass but it would have the
		// wrong priority associated with it and will prevent hydration of parent path.
		// Instead, we'll leave work left on it to render it in a separate commit.
		// TODO This time should be the time at which the server rendered response that is
		// a parent to this boundary was displayed. However, since we currently don't have
		// a protocol to transfer that time, we'll just estimate it by using the current
		// time. This will mean that Suspense timeouts are slightly shifted to later than
		// they should be.
		// Schedule a normal pri update to render this content.
		workInProgress.lanes=laneToLanes(DefaultHydrationLane);}else {// We'll continue hydrating the rest at offscreen priority since we'll already
		// be showing the right content coming from the server, it is no rush.
		workInProgress.lanes=laneToLanes(OffscreenLane);}return null;}function updateDehydratedSuspenseComponent(current,workInProgress,didSuspend,nextProps,suspenseInstance,suspenseState,renderLanes){if(!didSuspend){// This is the first render pass. Attempt to hydrate.
		// We should never be hydrating at this point because it is the first pass,
		// but after we've already committed once.
		warnIfHydrating();if((workInProgress.mode&ConcurrentMode)===NoMode){return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,// TODO: When we delete legacy mode, we should make this error argument
		// required — every concurrent mode path that causes hydration to
		// de-opt to client rendering should have an error message.
		null);}if(isSuspenseInstanceFallback(suspenseInstance)){// This boundary is in a permanent fallback state. In this case, we'll never
		// get an update and we'll never be able to hydrate the final content. Let's just try the
		// client side render instead.
		var digest,message,stack;{var _getSuspenseInstanceF=getSuspenseInstanceFallbackErrorDetails(suspenseInstance);digest=_getSuspenseInstanceF.digest;message=_getSuspenseInstanceF.message;stack=_getSuspenseInstanceF.stack;}var error;if(message){// eslint-disable-next-line react-internal/prod-error-codes
		error=new Error(message);}else {error=new Error('The server could not finish this Suspense boundary, likely '+'due to an error during server rendering. Switched to '+'client rendering.');}var capturedValue=createCapturedValue(error,digest,stack);return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,capturedValue);}// any context has changed, we need to treat is as if the input might have changed.
		var hasContextChanged=includesSomeLane(renderLanes,current.childLanes);if(didReceiveUpdate||hasContextChanged){// This boundary has changed since the first render. This means that we are now unable to
		// hydrate it. We might still be able to hydrate it using a higher priority lane.
		var root=getWorkInProgressRoot();if(root!==null){var attemptHydrationAtLane=getBumpedLaneForHydration(root,renderLanes);if(attemptHydrationAtLane!==NoLane&&attemptHydrationAtLane!==suspenseState.retryLane){// Intentionally mutating since this render will get interrupted. This
		// is one of the very rare times where we mutate the current tree
		// during the render phase.
		suspenseState.retryLane=attemptHydrationAtLane;// TODO: Ideally this would inherit the event time of the current render
		var eventTime=NoTimestamp;enqueueConcurrentRenderForLane(current,attemptHydrationAtLane);scheduleUpdateOnFiber(root,current,attemptHydrationAtLane,eventTime);}}// If we have scheduled higher pri work above, this will probably just abort the render
		// since we now have higher priority work, but in case it doesn't, we need to prepare to
		// render something, if we time out. Even if that requires us to delete everything and
		// skip hydration.
		// Delay having to do this as long as the suspense timeout allows us.
		renderDidSuspendDelayIfPossible();var _capturedValue=createCapturedValue(new Error('This Suspense boundary received an update before it finished '+'hydrating. This caused the boundary to switch to client rendering. '+'The usual way to fix this is to wrap the original update '+'in startTransition.'));return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,_capturedValue);}else if(isSuspenseInstancePending(suspenseInstance)){// This component is still pending more data from the server, so we can't hydrate its
		// content. We treat it as if this component suspended itself. It might seem as if
		// we could just try to render it client-side instead. However, this will perform a
		// lot of unnecessary work and is unlikely to complete since it often will suspend
		// on missing data anyway. Additionally, the server might be able to render more
		// than we can on the client yet. In that case we'd end up with more fallback states
		// on the client than if we just leave it alone. If the server times out or errors
		// these should update this boundary to the permanent Fallback state instead.
		// Mark it as having captured (i.e. suspended).
		workInProgress.flags|=DidCapture;// Leave the child in place. I.e. the dehydrated fragment.
		workInProgress.child=current.child;// Register a callback to retry this boundary once the server has sent the result.
		var retry=retryDehydratedSuspenseBoundary.bind(null,current);registerSuspenseInstanceRetry(suspenseInstance,retry);return null;}else {// This is the first attempt.
		reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress,suspenseInstance,suspenseState.treeContext);var primaryChildren=nextProps.children;var primaryChildFragment=mountSuspensePrimaryChildren(workInProgress,primaryChildren);// Mark the children as hydrating. This is a fast path to know whether this
		// tree is part of a hydrating tree. This is used to determine if a child
		// node has fully mounted yet, and for scheduling event replaying.
		// Conceptually this is similar to Placement in that a new subtree is
		// inserted into the React tree here. It just happens to not need DOM
		// mutations because it already exists.
		primaryChildFragment.flags|=Hydrating;return primaryChildFragment;}}else {// This is the second render pass. We already attempted to hydrated, but
		// something either suspended or errored.
		if(workInProgress.flags&ForceClientRender){// Something errored during hydration. Try again without hydrating.
		workInProgress.flags&=~ForceClientRender;var _capturedValue2=createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. '+'Switched to client rendering.'));return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,_capturedValue2);}else if(workInProgress.memoizedState!==null){// Something suspended and we should still be in dehydrated mode.
		// Leave the existing child in place.
		workInProgress.child=current.child;// The dehydrated completion pass expects this flag to be there
		// but the normal suspense pass doesn't.
		workInProgress.flags|=DidCapture;return null;}else {// Suspended but we should no longer be in dehydrated mode.
		// Therefore we now have to render the fallback.
		var nextPrimaryChildren=nextProps.children;var nextFallbackChildren=nextProps.fallback;var fallbackChildFragment=mountSuspenseFallbackAfterRetryWithoutHydrating(current,workInProgress,nextPrimaryChildren,nextFallbackChildren,renderLanes);var _primaryChildFragment4=workInProgress.child;_primaryChildFragment4.memoizedState=mountSuspenseOffscreenState(renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackChildFragment;}}}function scheduleSuspenseWorkOnFiber(fiber,renderLanes,propagationRoot){fiber.lanes=mergeLanes(fiber.lanes,renderLanes);var alternate=fiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,renderLanes);}scheduleContextWorkOnParentPath(fiber.return,renderLanes,propagationRoot);}function propagateSuspenseContextChange(workInProgress,firstChild,renderLanes){// Mark any Suspense boundaries with fallbacks as having work to do.
		// If they were previously forced into fallbacks, they may now be able
		// to unblock.
		var node=firstChild;while(node!==null){if(node.tag===SuspenseComponent){var state=node.memoizedState;if(state!==null){scheduleSuspenseWorkOnFiber(node,renderLanes,workInProgress);}}else if(node.tag===SuspenseListComponent){// If the tail is hidden there might not be an Suspense boundaries
		// to schedule work on. In this case we have to schedule it on the
		// list itself.
		// We don't have to traverse to the children of the list since
		// the list will propagate the change when it rerenders.
		scheduleSuspenseWorkOnFiber(node,renderLanes,workInProgress);}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}function findLastContentRow(firstChild){// This is going to find the last row among these children that is already
		// showing content on the screen, as opposed to being in fallback state or
		// new. If a row has multiple Suspense boundaries, any of them being in the
		// fallback state, counts as the whole row being in a fallback state.
		// Note that the "rows" will be workInProgress, but any nested children
		// will still be current since we haven't rendered them yet. The mounted
		// order may not be the same as the new order. We use the new order.
		var row=firstChild;var lastContentRow=null;while(row!==null){var currentRow=row.alternate;// New rows can't be content rows.
		if(currentRow!==null&&findFirstSuspended(currentRow)===null){lastContentRow=row;}row=row.sibling;}return lastContentRow;}function validateRevealOrder(revealOrder){{if(revealOrder!==undefined&&revealOrder!=='forwards'&&revealOrder!=='backwards'&&revealOrder!=='together'&&!didWarnAboutRevealOrder[revealOrder]){didWarnAboutRevealOrder[revealOrder]=true;if(typeof revealOrder==='string'){switch(revealOrder.toLowerCase()){case'together':case'forwards':case'backwards':{error('"%s" is not a valid value for revealOrder on <SuspenseList />. '+'Use lowercase "%s" instead.',revealOrder,revealOrder.toLowerCase());break;}case'forward':case'backward':{error('"%s" is not a valid value for revealOrder on <SuspenseList />. '+'React uses the -s suffix in the spelling. Use "%ss" instead.',revealOrder,revealOrder.toLowerCase());break;}default:error('"%s" is not a supported revealOrder on <SuspenseList />. '+'Did you mean "together", "forwards" or "backwards"?',revealOrder);break;}}else {error('%s is not a supported value for revealOrder on <SuspenseList />. '+'Did you mean "together", "forwards" or "backwards"?',revealOrder);}}}}function validateTailOptions(tailMode,revealOrder){{if(tailMode!==undefined&&!didWarnAboutTailOptions[tailMode]){if(tailMode!=='collapsed'&&tailMode!=='hidden'){didWarnAboutTailOptions[tailMode]=true;error('"%s" is not a supported value for tail on <SuspenseList />. '+'Did you mean "collapsed" or "hidden"?',tailMode);}else if(revealOrder!=='forwards'&&revealOrder!=='backwards'){didWarnAboutTailOptions[tailMode]=true;error('<SuspenseList tail="%s" /> is only valid if revealOrder is '+'"forwards" or "backwards". '+'Did you mean to specify revealOrder="forwards"?',tailMode);}}}}function validateSuspenseListNestedChild(childSlot,index){{var isAnArray=isArray(childSlot);var isIterable=!isAnArray&&typeof getIteratorFn(childSlot)==='function';if(isAnArray||isIterable){var type=isAnArray?'array':'iterable';error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in '+'an additional SuspenseList to configure its revealOrder: '+'<SuspenseList revealOrder=...> ... '+'<SuspenseList revealOrder=...>{%s}</SuspenseList> ... '+'</SuspenseList>',type,index,type);return false;}}return true;}function validateSuspenseListChildren(children,revealOrder){{if((revealOrder==='forwards'||revealOrder==='backwards')&&children!==undefined&&children!==null&&children!==false){if(isArray(children)){for(var i=0;i<children.length;i++){if(!validateSuspenseListNestedChild(children[i],i)){return;}}}else {var iteratorFn=getIteratorFn(children);if(typeof iteratorFn==='function'){var childrenIterator=iteratorFn.call(children);if(childrenIterator){var step=childrenIterator.next();var _i=0;for(;!step.done;step=childrenIterator.next()){if(!validateSuspenseListNestedChild(step.value,_i)){return;}_i++;}}}else {error('A single row was passed to a <SuspenseList revealOrder="%s" />. '+'This is not useful since it needs multiple rows. '+'Did you mean to pass multiple children or an array?',revealOrder);}}}}}function initSuspenseListRenderState(workInProgress,isBackwards,tail,lastContentRow,tailMode){var renderState=workInProgress.memoizedState;if(renderState===null){workInProgress.memoizedState={isBackwards:isBackwards,rendering:null,renderingStartTime:0,last:lastContentRow,tail:tail,tailMode:tailMode};}else {// We can reuse the existing object from previous renders.
		renderState.isBackwards=isBackwards;renderState.rendering=null;renderState.renderingStartTime=0;renderState.last=lastContentRow;renderState.tail=tail;renderState.tailMode=tailMode;}}// This can end up rendering this component multiple passes.
		// The first pass splits the children fibers into two sets. A head and tail.
		// We first render the head. If anything is in fallback state, we do another
		// pass through beginWork to rerender all children (including the tail) with
		// the force suspend context. If the first render didn't have anything in
		// in fallback state. Then we render each row in the tail one-by-one.
		// That happens in the completeWork phase without going back to beginWork.
		function updateSuspenseListComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;var revealOrder=nextProps.revealOrder;var tailMode=nextProps.tail;var newChildren=nextProps.children;validateRevealOrder(revealOrder);validateTailOptions(tailMode,revealOrder);validateSuspenseListChildren(newChildren,revealOrder);reconcileChildren(current,workInProgress,newChildren,renderLanes);var suspenseContext=suspenseStackCursor.current;var shouldForceFallback=hasSuspenseContext(suspenseContext,ForceSuspenseFallback);if(shouldForceFallback){suspenseContext=setShallowSuspenseContext(suspenseContext,ForceSuspenseFallback);workInProgress.flags|=DidCapture;}else {var didSuspendBefore=current!==null&&(current.flags&DidCapture)!==NoFlags;if(didSuspendBefore){// If we previously forced a fallback, we need to schedule work
		// on any nested boundaries to let them know to try to render
		// again. This is the same as context updating.
		propagateSuspenseContextChange(workInProgress,workInProgress.child,renderLanes);}suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);}pushSuspenseContext(workInProgress,suspenseContext);if((workInProgress.mode&ConcurrentMode)===NoMode){// In legacy mode, SuspenseList doesn't work so we just
		// use make it a noop by treating it as the default revealOrder.
		workInProgress.memoizedState=null;}else {switch(revealOrder){case'forwards':{var lastContentRow=findLastContentRow(workInProgress.child);var tail;if(lastContentRow===null){// The whole list is part of the tail.
		// TODO: We could fast path by just rendering the tail now.
		tail=workInProgress.child;workInProgress.child=null;}else {// Disconnect the tail rows after the content row.
		// We're going to render them separately later.
		tail=lastContentRow.sibling;lastContentRow.sibling=null;}initSuspenseListRenderState(workInProgress,false,// isBackwards
		tail,lastContentRow,tailMode);break;}case'backwards':{// We're going to find the first row that has existing content.
		// At the same time we're going to reverse the list of everything
		// we pass in the meantime. That's going to be our tail in reverse
		// order.
		var _tail=null;var row=workInProgress.child;workInProgress.child=null;while(row!==null){var currentRow=row.alternate;// New rows can't be content rows.
		if(currentRow!==null&&findFirstSuspended(currentRow)===null){// This is the beginning of the main content.
		workInProgress.child=row;break;}var nextRow=row.sibling;row.sibling=_tail;_tail=row;row=nextRow;}// TODO: If workInProgress.child is null, we can continue on the tail immediately.
		initSuspenseListRenderState(workInProgress,true,// isBackwards
		_tail,null,// last
		tailMode);break;}case'together':{initSuspenseListRenderState(workInProgress,false,// isBackwards
		null,// tail
		null,// last
		undefined);break;}default:{// The default reveal order is the same as not having
		// a boundary.
		workInProgress.memoizedState=null;}}}return workInProgress.child;}function updatePortalComponent(current,workInProgress,renderLanes){pushHostContainer(workInProgress,workInProgress.stateNode.containerInfo);var nextChildren=workInProgress.pendingProps;if(current===null){// Portals are special because we don't append the children during mount
		// but at commit. Therefore we need to track insertions which the normal
		// flow doesn't do during mount. This doesn't happen at the root because
		// the root always starts with a "current" with a null child.
		// TODO: Consider unifying this with how the root works.
		workInProgress.child=reconcileChildFibers(workInProgress,null,nextChildren,renderLanes);}else {reconcileChildren(current,workInProgress,nextChildren,renderLanes);}return workInProgress.child;}var hasWarnedAboutUsingNoValuePropOnContextProvider=false;function updateContextProvider(current,workInProgress,renderLanes){var providerType=workInProgress.type;var context=providerType._context;var newProps=workInProgress.pendingProps;var oldProps=workInProgress.memoizedProps;var newValue=newProps.value;{if(!('value'in newProps)){if(!hasWarnedAboutUsingNoValuePropOnContextProvider){hasWarnedAboutUsingNoValuePropOnContextProvider=true;error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');}}var providerPropTypes=workInProgress.type.propTypes;if(providerPropTypes){checkPropTypes(providerPropTypes,newProps,'prop','Context.Provider');}}pushProvider(workInProgress,context,newValue);{if(oldProps!==null){var oldValue=oldProps.value;if(objectIs(oldValue,newValue)){// No change. Bailout early if children are the same.
		if(oldProps.children===newProps.children&&!hasContextChanged()){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}}else {// The context value changed. Search for matching consumers and schedule
		// them to update.
		propagateContextChange(workInProgress,context,renderLanes);}}}var newChildren=newProps.children;reconcileChildren(current,workInProgress,newChildren,renderLanes);return workInProgress.child;}var hasWarnedAboutUsingContextAsConsumer=false;function updateContextConsumer(current,workInProgress,renderLanes){var context=workInProgress.type;// The logic below for Context differs depending on PROD or DEV mode. In
		// DEV mode, we create a separate object for Context.Consumer that acts
		// like a proxy to Context. This proxy object adds unnecessary code in PROD
		// so we use the old behaviour (Context.Consumer references Context) to
		// reduce size and overhead. The separate object references context via
		// a property called "_context", which also gives us the ability to check
		// in DEV mode if this property exists or not and warn if it does not.
		{if(context._context===undefined){// This may be because it's a Context (rather than a Consumer).
		// Or it may be because it's older React where they're the same thing.
		// We only want to warn if we're sure it's a new React.
		if(context!==context.Consumer){if(!hasWarnedAboutUsingContextAsConsumer){hasWarnedAboutUsingContextAsConsumer=true;error('Rendering <Context> directly is not supported and will be removed in '+'a future major release. Did you mean to render <Context.Consumer> instead?');}}}else {context=context._context;}}var newProps=workInProgress.pendingProps;var render=newProps.children;{if(typeof render!=='function'){error('A context consumer was rendered with multiple children, or a child '+"that isn't a function. A context consumer expects a single child "+'that is a function. If you did pass a function, make sure there '+'is no trailing or leading whitespace around it.');}}prepareToReadContext(workInProgress,renderLanes);var newValue=readContext(context);{markComponentRenderStarted(workInProgress);}var newChildren;{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);newChildren=render(newValue);setIsRendering(false);}{markComponentRenderStopped();}// React DevTools reads this flag.
		workInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,newChildren,renderLanes);return workInProgress.child;}function markWorkInProgressReceivedUpdate(){didReceiveUpdate=true;}function resetSuspendedCurrentOnMountInLegacyMode(current,workInProgress){if((workInProgress.mode&ConcurrentMode)===NoMode){if(current!==null){// A lazy component only mounts if it suspended inside a non-
		// concurrent tree, in an inconsistent state. We want to treat it like
		// a new mount, even though an empty version of it already committed.
		// Disconnect the alternate pointers.
		current.alternate=null;workInProgress.alternate=null;// Since this is conceptually a new fiber, schedule a Placement effect
		workInProgress.flags|=Placement;}}}function bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes){if(current!==null){// Reuse previous dependencies
		workInProgress.dependencies=current.dependencies;}{// Don't update "base" render times for bailouts.
		stopProfilerTimerIfRunning();}markSkippedUpdateLanes(workInProgress.lanes);// Check if the children have any pending work.
		if(!includesSomeLane(renderLanes,workInProgress.childLanes)){// The children don't have any work either. We can skip them.
		// TODO: Once we add back resuming, we should check if the children are
		// a work-in-progress set. If so, we need to transfer their effects.
		{return null;}}// This fiber doesn't have work, but its subtree does. Clone the child
		// fibers and continue.
		cloneChildFibers(current,workInProgress);return workInProgress.child;}function remountFiber(current,oldWorkInProgress,newWorkInProgress){{var returnFiber=oldWorkInProgress.return;if(returnFiber===null){// eslint-disable-next-line react-internal/prod-error-codes
		throw new Error('Cannot swap the root fiber.');}// Disconnect from the old current.
		// It will get deleted.
		current.alternate=null;oldWorkInProgress.alternate=null;// Connect to the new tree.
		newWorkInProgress.index=oldWorkInProgress.index;newWorkInProgress.sibling=oldWorkInProgress.sibling;newWorkInProgress.return=oldWorkInProgress.return;newWorkInProgress.ref=oldWorkInProgress.ref;// Replace the child/sibling pointers above it.
		if(oldWorkInProgress===returnFiber.child){returnFiber.child=newWorkInProgress;}else {var prevSibling=returnFiber.child;if(prevSibling===null){// eslint-disable-next-line react-internal/prod-error-codes
		throw new Error('Expected parent to have a child.');}while(prevSibling.sibling!==oldWorkInProgress){prevSibling=prevSibling.sibling;if(prevSibling===null){// eslint-disable-next-line react-internal/prod-error-codes
		throw new Error('Expected to find the previous sibling.');}}prevSibling.sibling=newWorkInProgress;}// Delete the old fiber and place the new one.
		// Since the old fiber is disconnected, we have to schedule it manually.
		var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[current];returnFiber.flags|=ChildDeletion;}else {deletions.push(current);}newWorkInProgress.flags|=Placement;// Restart work from the new fiber.
		return newWorkInProgress;}}function checkScheduledUpdateOrContext(current,renderLanes){// Before performing an early bailout, we must check if there are pending
		// updates or context.
		var updateLanes=current.lanes;if(includesSomeLane(updateLanes,renderLanes)){return true;}// No pending update, but because context is propagated lazily, we need
		return false;}function attemptEarlyBailoutIfNoScheduledUpdate(current,workInProgress,renderLanes){// This fiber does not have any pending work. Bailout without entering
		// the begin phase. There's still some bookkeeping we that needs to be done
		// in this optimized path, mostly pushing stuff onto the stack.
		switch(workInProgress.tag){case HostRoot:pushHostRootContext(workInProgress);workInProgress.stateNode;resetHydrationState();break;case HostComponent:pushHostContext(workInProgress);break;case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){pushContextProvider(workInProgress);}break;}case HostPortal:pushHostContainer(workInProgress,workInProgress.stateNode.containerInfo);break;case ContextProvider:{var newValue=workInProgress.memoizedProps.value;var context=workInProgress.type._context;pushProvider(workInProgress,context,newValue);break;}case Profiler:{// Profiler should only call onRender when one of its descendants actually rendered.
		var hasChildWork=includesSomeLane(renderLanes,workInProgress.childLanes);if(hasChildWork){workInProgress.flags|=Update;}{// Reset effect durations for the next eventual effect phase.
		// These are reset during render to allow the DevTools commit hook a chance to read them,
		var stateNode=workInProgress.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}}break;case SuspenseComponent:{var state=workInProgress.memoizedState;if(state!==null){if(state.dehydrated!==null){pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));// We know that this component will suspend again because if it has
		// been unsuspended it has committed as a resolved Suspense component.
		// If it needs to be retried, it should have work scheduled on it.
		workInProgress.flags|=DidCapture;// We should never render the children of a dehydrated boundary until we
		// upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
		return null;}// If this boundary is currently timed out, we need to decide
		// whether to retry the primary children, or to skip over it and
		// go straight to the fallback. Check the priority of the primary
		// child fragment.
		var primaryChildFragment=workInProgress.child;var primaryChildLanes=primaryChildFragment.childLanes;if(includesSomeLane(renderLanes,primaryChildLanes)){// The primary children have pending work. Use the normal path
		// to attempt to render the primary children again.
		return updateSuspenseComponent(current,workInProgress,renderLanes);}else {// The primary child fragment does not have pending work marked
		// on it
		pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));// The primary children do not have pending work with sufficient
		// priority. Bailout.
		var child=bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);if(child!==null){// The fallback children have pending work. Skip over the
		// primary children and work on the fallback.
		return child.sibling;}else {// Note: We can return `null` here because we already checked
		// whether there were nested context consumers, via the call to
		// `bailoutOnAlreadyFinishedWork` above.
		return null;}}}else {pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));}break;}case SuspenseListComponent:{var didSuspendBefore=(current.flags&DidCapture)!==NoFlags;var _hasChildWork=includesSomeLane(renderLanes,workInProgress.childLanes);if(didSuspendBefore){if(_hasChildWork){// If something was in fallback state last time, and we have all the
		// same children then we're still in progressive loading state.
		// Something might get unblocked by state updates or retries in the
		// tree which will affect the tail. So we need to use the normal
		// path to compute the correct tail.
		return updateSuspenseListComponent(current,workInProgress,renderLanes);}// If none of the children had any work, that means that none of
		// them got retried so they'll still be blocked in the same way
		// as before. We can fast bail out.
		workInProgress.flags|=DidCapture;}// If nothing suspended before and we're rendering the same children,
		// then the tail doesn't matter. Anything new that suspends will work
		// in the "together" mode, so we can continue from the state we had.
		var renderState=workInProgress.memoizedState;if(renderState!==null){// Reset to the "together" mode in case we've started a different
		// update in the past but didn't complete it.
		renderState.rendering=null;renderState.tail=null;renderState.lastEffect=null;}pushSuspenseContext(workInProgress,suspenseStackCursor.current);if(_hasChildWork){break;}else {// If none of the children had any work, that means that none of
		// them got retried so they'll still be blocked in the same way
		// as before. We can fast bail out.
		return null;}}case OffscreenComponent:case LegacyHiddenComponent:{// Need to check if the tree still needs to be deferred. This is
		// almost identical to the logic used in the normal update path,
		// so we'll just enter that. The only difference is we'll bail out
		// at the next level instead of this one, because the child props
		// have not changed. Which is fine.
		// TODO: Probably should refactor `beginWork` to split the bailout
		// path from the normal path. I'm tempted to do a labeled break here
		// but I won't :)
		workInProgress.lanes=NoLanes;return updateOffscreenComponent(current,workInProgress,renderLanes);}}return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}function beginWork(current,workInProgress,renderLanes){{if(workInProgress._debugNeedsRemount&&current!==null){// This will restart the begin phase with a new fiber.
		return remountFiber(current,workInProgress,createFiberFromTypeAndProps(workInProgress.type,workInProgress.key,workInProgress.pendingProps,workInProgress._debugOwner||null,workInProgress.mode,workInProgress.lanes));}}if(current!==null){var oldProps=current.memoizedProps;var newProps=workInProgress.pendingProps;if(oldProps!==newProps||hasContextChanged()||// Force a re-render if the implementation changed due to hot reload:
		workInProgress.type!==current.type){// If props or context changed, mark the fiber as having performed work.
		// This may be unset if the props are determined to be equal later (memo).
		didReceiveUpdate=true;}else {// Neither props nor legacy context changes. Check if there's a pending
		// update or context change.
		var hasScheduledUpdateOrContext=checkScheduledUpdateOrContext(current,renderLanes);if(!hasScheduledUpdateOrContext&&// If this is the second pass of an error or suspense boundary, there
		// may not be work scheduled on `current`, so we check for this flag.
		(workInProgress.flags&DidCapture)===NoFlags){// No pending updates or context. Bail out now.
		didReceiveUpdate=false;return attemptEarlyBailoutIfNoScheduledUpdate(current,workInProgress,renderLanes);}if((current.flags&ForceUpdateForLegacySuspense)!==NoFlags){// This is a special case that only exists for legacy mode.
		// See https://github.com/facebook/react/pull/19216.
		didReceiveUpdate=true;}else {// An update was scheduled on this fiber, but there are no new props
		// nor legacy context. Set this to false. If an update queue or context
		// consumer produces a changed value, it will set this to true. Otherwise,
		// the component will assume the children have not changed and bail out.
		didReceiveUpdate=false;}}}else {didReceiveUpdate=false;if(getIsHydrating()&&isForkedChild(workInProgress)){// Check if this child belongs to a list of muliple children in
		// its parent.
		//
		// In a true multi-threaded implementation, we would render children on
		// parallel threads. This would represent the beginning of a new render
		// thread for this subtree.
		//
		// We only use this for id generation during hydration, which is why the
		// logic is located in this special branch.
		var slotIndex=workInProgress.index;var numberOfForks=getForksAtLevel();pushTreeId(workInProgress,numberOfForks,slotIndex);}}// Before entering the begin phase, clear pending update priority.
		// TODO: This assumes that we're about to evaluate the component and process
		// the update queue. However, there's an exception: SimpleMemoComponent
		// sometimes bails out later in the begin phase. This indicates that we should
		// move this assignment out of the common path and into each branch.
		workInProgress.lanes=NoLanes;switch(workInProgress.tag){case IndeterminateComponent:{return mountIndeterminateComponent(current,workInProgress,workInProgress.type,renderLanes);}case LazyComponent:{var elementType=workInProgress.elementType;return mountLazyComponent(current,workInProgress,elementType,renderLanes);}case FunctionComponent:{var Component=workInProgress.type;var unresolvedProps=workInProgress.pendingProps;var resolvedProps=workInProgress.elementType===Component?unresolvedProps:resolveDefaultProps(Component,unresolvedProps);return updateFunctionComponent(current,workInProgress,Component,resolvedProps,renderLanes);}case ClassComponent:{var _Component=workInProgress.type;var _unresolvedProps=workInProgress.pendingProps;var _resolvedProps=workInProgress.elementType===_Component?_unresolvedProps:resolveDefaultProps(_Component,_unresolvedProps);return updateClassComponent(current,workInProgress,_Component,_resolvedProps,renderLanes);}case HostRoot:return updateHostRoot(current,workInProgress,renderLanes);case HostComponent:return updateHostComponent(current,workInProgress,renderLanes);case HostText:return updateHostText(current,workInProgress);case SuspenseComponent:return updateSuspenseComponent(current,workInProgress,renderLanes);case HostPortal:return updatePortalComponent(current,workInProgress,renderLanes);case ForwardRef:{var type=workInProgress.type;var _unresolvedProps2=workInProgress.pendingProps;var _resolvedProps2=workInProgress.elementType===type?_unresolvedProps2:resolveDefaultProps(type,_unresolvedProps2);return updateForwardRef(current,workInProgress,type,_resolvedProps2,renderLanes);}case Fragment:return updateFragment(current,workInProgress,renderLanes);case Mode:return updateMode(current,workInProgress,renderLanes);case Profiler:return updateProfiler(current,workInProgress,renderLanes);case ContextProvider:return updateContextProvider(current,workInProgress,renderLanes);case ContextConsumer:return updateContextConsumer(current,workInProgress,renderLanes);case MemoComponent:{var _type2=workInProgress.type;var _unresolvedProps3=workInProgress.pendingProps;// Resolve outer props first, then resolve inner props.
		var _resolvedProps3=resolveDefaultProps(_type2,_unresolvedProps3);{if(workInProgress.type!==workInProgress.elementType){var outerPropTypes=_type2.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,_resolvedProps3,// Resolved for outer only
		'prop',getComponentNameFromType(_type2));}}}_resolvedProps3=resolveDefaultProps(_type2.type,_resolvedProps3);return updateMemoComponent(current,workInProgress,_type2,_resolvedProps3,renderLanes);}case SimpleMemoComponent:{return updateSimpleMemoComponent(current,workInProgress,workInProgress.type,workInProgress.pendingProps,renderLanes);}case IncompleteClassComponent:{var _Component2=workInProgress.type;var _unresolvedProps4=workInProgress.pendingProps;var _resolvedProps4=workInProgress.elementType===_Component2?_unresolvedProps4:resolveDefaultProps(_Component2,_unresolvedProps4);return mountIncompleteClassComponent(current,workInProgress,_Component2,_resolvedProps4,renderLanes);}case SuspenseListComponent:{return updateSuspenseListComponent(current,workInProgress,renderLanes);}case ScopeComponent:{break;}case OffscreenComponent:{return updateOffscreenComponent(current,workInProgress,renderLanes);}}throw new Error("Unknown unit of work tag ("+workInProgress.tag+"). This error is likely caused by a bug in "+'React. Please file an issue.');}function markUpdate(workInProgress){// Tag the fiber with an update effect. This turns a Placement into
		// a PlacementAndUpdate.
		workInProgress.flags|=Update;}function markRef$1(workInProgress){workInProgress.flags|=Ref;{workInProgress.flags|=RefStatic;}}var appendAllChildren;var updateHostContainer;var updateHostComponent$1;var updateHostText$1;{// Mutation mode
		appendAllChildren=function(parent,workInProgress,needsVisibilityToggle,isHidden){// We only have the top Fiber that was created but we need recurse down its
		// children to find all the terminal nodes.
		var node=workInProgress.child;while(node!==null){if(node.tag===HostComponent||node.tag===HostText){appendInitialChild(parent,node.stateNode);}else if(node.tag===HostPortal);else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}};updateHostContainer=function(current,workInProgress){// Noop
		};updateHostComponent$1=function(current,workInProgress,type,newProps,rootContainerInstance){// If we have an alternate, that means this is an update and we need to
		// schedule a side-effect to do the updates.
		var oldProps=current.memoizedProps;if(oldProps===newProps){// In mutation mode, this is sufficient for a bailout because
		// we won't touch this node even if children changed.
		return;}// If we get updated because one of our children updated, we don't
		// have newProps so we'll have to reuse them.
		// TODO: Split the update API as separate for the props vs. children.
		// Even better would be if children weren't special cased at all tho.
		var instance=workInProgress.stateNode;var currentHostContext=getHostContext();// TODO: Experiencing an error where oldProps is null. Suggests a host
		// component is hitting the resume path. Figure out why. Possibly
		// related to `hidden`.
		var updatePayload=prepareUpdate(instance,type,oldProps,newProps,rootContainerInstance,currentHostContext);// TODO: Type this specific to this type of component.
		workInProgress.updateQueue=updatePayload;// If the update payload indicates that there is a change or if there
		// is a new ref we mark this as an update. All the work is done in commitWork.
		if(updatePayload){markUpdate(workInProgress);}};updateHostText$1=function(current,workInProgress,oldText,newText){// If the text differs, mark it as an update. All the work in done in commitWork.
		if(oldText!==newText){markUpdate(workInProgress);}};}function cutOffTailIfNeeded(renderState,hasRenderedATailFallback){if(getIsHydrating()){// If we're hydrating, we should consume as many items as we can
		// so we don't leave any behind.
		return;}switch(renderState.tailMode){case'hidden':{// Any insertions at the end of the tail list after this point
		// should be invisible. If there are already mounted boundaries
		// anything before them are not considered for collapsing.
		// Therefore we need to go through the whole tail to find if
		// there are any.
		var tailNode=renderState.tail;var lastTailNode=null;while(tailNode!==null){if(tailNode.alternate!==null){lastTailNode=tailNode;}tailNode=tailNode.sibling;}// Next we're simply going to delete all insertions after the
		// last rendered item.
		if(lastTailNode===null){// All remaining items in the tail are insertions.
		renderState.tail=null;}else {// Detach the insertion after the last node that was already
		// inserted.
		lastTailNode.sibling=null;}break;}case'collapsed':{// Any insertions at the end of the tail list after this point
		// should be invisible. If there are already mounted boundaries
		// anything before them are not considered for collapsing.
		// Therefore we need to go through the whole tail to find if
		// there are any.
		var _tailNode=renderState.tail;var _lastTailNode=null;while(_tailNode!==null){if(_tailNode.alternate!==null){_lastTailNode=_tailNode;}_tailNode=_tailNode.sibling;}// Next we're simply going to delete all insertions after the
		// last rendered item.
		if(_lastTailNode===null){// All remaining items in the tail are insertions.
		if(!hasRenderedATailFallback&&renderState.tail!==null){// We suspended during the head. We want to show at least one
		// row at the tail. So we'll keep on and cut off the rest.
		renderState.tail.sibling=null;}else {renderState.tail=null;}}else {// Detach the insertion after the last node that was already
		// inserted.
		_lastTailNode.sibling=null;}break;}}}function bubbleProperties(completedWork){var didBailout=completedWork.alternate!==null&&completedWork.alternate.child===completedWork.child;var newChildLanes=NoLanes;var subtreeFlags=NoFlags;if(!didBailout){// Bubble up the earliest expiration time.
		if((completedWork.mode&ProfileMode)!==NoMode){// In profiling mode, resetChildExpirationTime is also used to reset
		// profiler durations.
		var actualDuration=completedWork.actualDuration;var treeBaseDuration=completedWork.selfBaseDuration;var child=completedWork.child;while(child!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(child.lanes,child.childLanes));subtreeFlags|=child.subtreeFlags;subtreeFlags|=child.flags;// When a fiber is cloned, its actualDuration is reset to 0. This value will
		// only be updated if work is done on the fiber (i.e. it doesn't bailout).
		// When work is done, it should bubble to the parent's actualDuration. If
		// the fiber has not been cloned though, (meaning no work was done), then
		// this value will reflect the amount of time spent working on a previous
		// render. In that case it should not bubble. We determine whether it was
		// cloned by comparing the child pointer.
		actualDuration+=child.actualDuration;treeBaseDuration+=child.treeBaseDuration;child=child.sibling;}completedWork.actualDuration=actualDuration;completedWork.treeBaseDuration=treeBaseDuration;}else {var _child=completedWork.child;while(_child!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child.lanes,_child.childLanes));subtreeFlags|=_child.subtreeFlags;subtreeFlags|=_child.flags;// Update the return pointer so the tree is consistent. This is a code
		// smell because it assumes the commit phase is never concurrent with
		// the render phase. Will address during refactor to alternate model.
		_child.return=completedWork;_child=_child.sibling;}}completedWork.subtreeFlags|=subtreeFlags;}else {// Bubble up the earliest expiration time.
		if((completedWork.mode&ProfileMode)!==NoMode){// In profiling mode, resetChildExpirationTime is also used to reset
		// profiler durations.
		var _treeBaseDuration=completedWork.selfBaseDuration;var _child2=completedWork.child;while(_child2!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child2.lanes,_child2.childLanes));// "Static" flags share the lifetime of the fiber/hook they belong to,
		// so we should bubble those up even during a bailout. All the other
		// flags have a lifetime only of a single render + commit, so we should
		// ignore them.
		subtreeFlags|=_child2.subtreeFlags&StaticMask;subtreeFlags|=_child2.flags&StaticMask;_treeBaseDuration+=_child2.treeBaseDuration;_child2=_child2.sibling;}completedWork.treeBaseDuration=_treeBaseDuration;}else {var _child3=completedWork.child;while(_child3!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child3.lanes,_child3.childLanes));// "Static" flags share the lifetime of the fiber/hook they belong to,
		// so we should bubble those up even during a bailout. All the other
		// flags have a lifetime only of a single render + commit, so we should
		// ignore them.
		subtreeFlags|=_child3.subtreeFlags&StaticMask;subtreeFlags|=_child3.flags&StaticMask;// Update the return pointer so the tree is consistent. This is a code
		// smell because it assumes the commit phase is never concurrent with
		// the render phase. Will address during refactor to alternate model.
		_child3.return=completedWork;_child3=_child3.sibling;}}completedWork.subtreeFlags|=subtreeFlags;}completedWork.childLanes=newChildLanes;return didBailout;}function completeDehydratedSuspenseBoundary(current,workInProgress,nextState){if(hasUnhydratedTailNodes()&&(workInProgress.mode&ConcurrentMode)!==NoMode&&(workInProgress.flags&DidCapture)===NoFlags){warnIfUnhydratedTailNodes(workInProgress);resetHydrationState();workInProgress.flags|=ForceClientRender|Incomplete|ShouldCapture;return false;}var wasHydrated=popHydrationState(workInProgress);if(nextState!==null&&nextState.dehydrated!==null){// We might be inside a hydration state the first time we're picking up this
		// Suspense boundary, and also after we've reentered it for further hydration.
		if(current===null){if(!wasHydrated){throw new Error('A dehydrated suspense component was completed without a hydrated node. '+'This is probably a bug in React.');}prepareToHydrateHostSuspenseInstance(workInProgress);bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){var isTimedOutSuspense=nextState!==null;if(isTimedOutSuspense){// Don't count time spent in a timed out Suspense subtree as part of the base duration.
		var primaryChildFragment=workInProgress.child;if(primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator
		workInProgress.treeBaseDuration-=primaryChildFragment.treeBaseDuration;}}}}return false;}else {// We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
		// state since we're now exiting out of it. popHydrationState doesn't do that for us.
		resetHydrationState();if((workInProgress.flags&DidCapture)===NoFlags){// This boundary did not suspend so it's now hydrated and unsuspended.
		workInProgress.memoizedState=null;}// If nothing suspended, we need to schedule an effect to mark this boundary
		// as having hydrated so events know that they're free to be invoked.
		// It's also a signal to replay events and the suspense callback.
		// If something suspended, schedule an effect to attach retry listeners.
		// So we might as well always mark this.
		workInProgress.flags|=Update;bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){var _isTimedOutSuspense=nextState!==null;if(_isTimedOutSuspense){// Don't count time spent in a timed out Suspense subtree as part of the base duration.
		var _primaryChildFragment=workInProgress.child;if(_primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator
		workInProgress.treeBaseDuration-=_primaryChildFragment.treeBaseDuration;}}}}return false;}}else {// Successfully completed this tree. If this was a forced client render,
		// there may have been recoverable errors during first hydration
		// attempt. If so, add them to a queue so we can log them in the
		// commit phase.
		upgradeHydrationErrorsToRecoverable();// Fall through to normal Suspense path
		return true;}}function completeWork(current,workInProgress,renderLanes){var newProps=workInProgress.pendingProps;// Note: This intentionally doesn't check if we're hydrating because comparing
		// to the current tree provider fiber is just as fast and less error-prone.
		// Ideally we would have a special version of the work loop only
		// for hydration.
		popTreeContext(workInProgress);switch(workInProgress.tag){case IndeterminateComponent:case LazyComponent:case SimpleMemoComponent:case FunctionComponent:case ForwardRef:case Fragment:case Mode:case Profiler:case ContextConsumer:case MemoComponent:bubbleProperties(workInProgress);return null;case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){popContext(workInProgress);}bubbleProperties(workInProgress);return null;}case HostRoot:{var fiberRoot=workInProgress.stateNode;popHostContainer(workInProgress);popTopLevelContextObject(workInProgress);resetWorkInProgressVersions();if(fiberRoot.pendingContext){fiberRoot.context=fiberRoot.pendingContext;fiberRoot.pendingContext=null;}if(current===null||current.child===null){// If we hydrated, pop so that we can delete any remaining children
		// that weren't hydrated.
		var wasHydrated=popHydrationState(workInProgress);if(wasHydrated){// If we hydrated, then we'll need to schedule an update for
		// the commit side-effects on the root.
		markUpdate(workInProgress);}else {if(current!==null){var prevState=current.memoizedState;if(// Check if this is a client root
		!prevState.isDehydrated||// Check if we reverted to client rendering (e.g. due to an error)
		(workInProgress.flags&ForceClientRender)!==NoFlags){// Schedule an effect to clear this container at the start of the
		// next commit. This handles the case of React rendering into a
		// container with previous children. It's also safe to do for
		// updates too, because current.child would only be null if the
		// previous render was null (so the container would already
		// be empty).
		workInProgress.flags|=Snapshot;// If this was a forced client render, there may have been
		// recoverable errors during first hydration attempt. If so, add
		// them to a queue so we can log them in the commit phase.
		upgradeHydrationErrorsToRecoverable();}}}}updateHostContainer(current,workInProgress);bubbleProperties(workInProgress);return null;}case HostComponent:{popHostContext(workInProgress);var rootContainerInstance=getRootHostContainer();var type=workInProgress.type;if(current!==null&&workInProgress.stateNode!=null){updateHostComponent$1(current,workInProgress,type,newProps,rootContainerInstance);if(current.ref!==workInProgress.ref){markRef$1(workInProgress);}}else {if(!newProps){if(workInProgress.stateNode===null){throw new Error('We must have new props for new mounts. This error is likely '+'caused by a bug in React. Please file an issue.');}// This can happen when we abort work.
		bubbleProperties(workInProgress);return null;}var currentHostContext=getHostContext();// TODO: Move createInstance to beginWork and keep it on a context
		// "stack" as the parent. Then append children as we go in beginWork
		// or completeWork depending on whether we want to add them top->down or
		// bottom->up. Top->down is faster in IE11.
		var _wasHydrated=popHydrationState(workInProgress);if(_wasHydrated){// TODO: Move this and createInstance step into the beginPhase
		// to consolidate.
		if(prepareToHydrateHostInstance(workInProgress,rootContainerInstance,currentHostContext)){// If changes to the hydrated node need to be applied at the
		// commit-phase we mark this as such.
		markUpdate(workInProgress);}}else {var instance=createInstance(type,newProps,rootContainerInstance,currentHostContext,workInProgress);appendAllChildren(instance,workInProgress,false,false);workInProgress.stateNode=instance;// Certain renderers require commit-time effects for initial mount.
		// (eg DOM renderer supports auto-focus for certain elements).
		// Make sure such renderers get scheduled for later work.
		if(finalizeInitialChildren(instance,type,newProps,rootContainerInstance)){markUpdate(workInProgress);}}if(workInProgress.ref!==null){// If there is a ref on a host node we need to schedule a callback
		markRef$1(workInProgress);}}bubbleProperties(workInProgress);return null;}case HostText:{var newText=newProps;if(current&&workInProgress.stateNode!=null){var oldText=current.memoizedProps;// If we have an alternate, that means this is an update and we need
		// to schedule a side-effect to do the updates.
		updateHostText$1(current,workInProgress,oldText,newText);}else {if(typeof newText!=='string'){if(workInProgress.stateNode===null){throw new Error('We must have new props for new mounts. This error is likely '+'caused by a bug in React. Please file an issue.');}// This can happen when we abort work.
		}var _rootContainerInstance=getRootHostContainer();var _currentHostContext=getHostContext();var _wasHydrated2=popHydrationState(workInProgress);if(_wasHydrated2){if(prepareToHydrateHostTextInstance(workInProgress)){markUpdate(workInProgress);}}else {workInProgress.stateNode=createTextInstance(newText,_rootContainerInstance,_currentHostContext,workInProgress);}}bubbleProperties(workInProgress);return null;}case SuspenseComponent:{popSuspenseContext(workInProgress);var nextState=workInProgress.memoizedState;// Special path for dehydrated boundaries. We may eventually move this
		// to its own fiber type so that we can add other kinds of hydration
		// boundaries that aren't associated with a Suspense tree. In anticipation
		// of such a refactor, all the hydration logic is contained in
		// this branch.
		if(current===null||current.memoizedState!==null&&current.memoizedState.dehydrated!==null){var fallthroughToNormalSuspensePath=completeDehydratedSuspenseBoundary(current,workInProgress,nextState);if(!fallthroughToNormalSuspensePath){if(workInProgress.flags&ShouldCapture){// Special case. There were remaining unhydrated nodes. We treat
		// this as a mismatch. Revert to client rendering.
		return workInProgress;}else {// Did not finish hydrating, either because this is the initial
		// render or because something suspended.
		return null;}}// Continue with the normal Suspense path.
		}if((workInProgress.flags&DidCapture)!==NoFlags){// Something suspended. Re-render with the fallback children.
		workInProgress.lanes=renderLanes;// Do not reset the effect list.
		if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}// Don't bubble properties in this case.
		return workInProgress;}var nextDidTimeout=nextState!==null;var prevDidTimeout=current!==null&&current.memoizedState!==null;// a passive effect, which is when we process the transitions
		if(nextDidTimeout!==prevDidTimeout){// an effect to toggle the subtree's visibility. When we switch from
		// fallback -> primary, the inner Offscreen fiber schedules this effect
		// as part of its normal complete phase. But when we switch from
		// primary -> fallback, the inner Offscreen fiber does not have a complete
		// phase. So we need to schedule its effect here.
		//
		// We also use this flag to connect/disconnect the effects, but the same
		// logic applies: when re-connecting, the Offscreen fiber's complete
		// phase will handle scheduling the effect. It's only when the fallback
		// is active that we have to do anything special.
		if(nextDidTimeout){var _offscreenFiber2=workInProgress.child;_offscreenFiber2.flags|=Visibility;// TODO: This will still suspend a synchronous tree if anything
		// in the concurrent tree already suspended during this render.
		// This is a known bug.
		if((workInProgress.mode&ConcurrentMode)!==NoMode){// TODO: Move this back to throwException because this is too late
		// if this is a large tree which is common for initial loads. We
		// don't know if we should restart a render or not until we get
		// this marker, and this is too late.
		// If this render already had a ping or lower pri updates,
		// and this is the first time we know we're going to suspend we
		// should be able to immediately restart from within throwException.
		var hasInvisibleChildContext=current===null&&(workInProgress.memoizedProps.unstable_avoidThisFallback!==true||!enableSuspenseAvoidThisFallback);if(hasInvisibleChildContext||hasSuspenseContext(suspenseStackCursor.current,InvisibleParentSuspenseContext)){// If this was in an invisible tree or a new render, then showing
		// this boundary is ok.
		renderDidSuspend();}else {// Otherwise, we're going to have to hide content so we should
		// suspend for longer if possible.
		renderDidSuspendDelayIfPossible();}}}}var wakeables=workInProgress.updateQueue;if(wakeables!==null){// Schedule an effect to attach a retry listener to the promise.
		// TODO: Move to passive phase
		workInProgress.flags|=Update;}bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){if(nextDidTimeout){// Don't count time spent in a timed out Suspense subtree as part of the base duration.
		var primaryChildFragment=workInProgress.child;if(primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator
		workInProgress.treeBaseDuration-=primaryChildFragment.treeBaseDuration;}}}}return null;}case HostPortal:popHostContainer(workInProgress);updateHostContainer(current,workInProgress);if(current===null){preparePortalMount(workInProgress.stateNode.containerInfo);}bubbleProperties(workInProgress);return null;case ContextProvider:// Pop provider fiber
		var context=workInProgress.type._context;popProvider(context,workInProgress);bubbleProperties(workInProgress);return null;case IncompleteClassComponent:{// Same as class component case. I put it down here so that the tags are
		// sequential to ensure this switch is compiled to a jump table.
		var _Component=workInProgress.type;if(isContextProvider(_Component)){popContext(workInProgress);}bubbleProperties(workInProgress);return null;}case SuspenseListComponent:{popSuspenseContext(workInProgress);var renderState=workInProgress.memoizedState;if(renderState===null){// We're running in the default, "independent" mode.
		// We don't do anything in this mode.
		bubbleProperties(workInProgress);return null;}var didSuspendAlready=(workInProgress.flags&DidCapture)!==NoFlags;var renderedTail=renderState.rendering;if(renderedTail===null){// We just rendered the head.
		if(!didSuspendAlready){// This is the first pass. We need to figure out if anything is still
		// suspended in the rendered set.
		// If new content unsuspended, but there's still some content that
		// didn't. Then we need to do a second pass that forces everything
		// to keep showing their fallbacks.
		// We might be suspended if something in this render pass suspended, or
		// something in the previous committed pass suspended. Otherwise,
		// there's no chance so we can skip the expensive call to
		// findFirstSuspended.
		var cannotBeSuspended=renderHasNotSuspendedYet()&&(current===null||(current.flags&DidCapture)===NoFlags);if(!cannotBeSuspended){var row=workInProgress.child;while(row!==null){var suspended=findFirstSuspended(row);if(suspended!==null){didSuspendAlready=true;workInProgress.flags|=DidCapture;cutOffTailIfNeeded(renderState,false);// If this is a newly suspended tree, it might not get committed as
		// part of the second pass. In that case nothing will subscribe to
		// its thenables. Instead, we'll transfer its thenables to the
		// SuspenseList so that it can retry if they resolve.
		// There might be multiple of these in the list but since we're
		// going to wait for all of them anyway, it doesn't really matter
		// which ones gets to ping. In theory we could get clever and keep
		// track of how many dependencies remain but it gets tricky because
		// in the meantime, we can add/remove/change items and dependencies.
		// We might bail out of the loop before finding any but that
		// doesn't matter since that means that the other boundaries that
		// we did find already has their listeners attached.
		var newThenables=suspended.updateQueue;if(newThenables!==null){workInProgress.updateQueue=newThenables;workInProgress.flags|=Update;}// Rerender the whole list, but this time, we'll force fallbacks
		// to stay in place.
		// Reset the effect flags before doing the second pass since that's now invalid.
		// Reset the child fibers to their original state.
		workInProgress.subtreeFlags=NoFlags;resetChildFibers(workInProgress,renderLanes);// Set up the Suspense Context to force suspense and immediately
		// rerender the children.
		pushSuspenseContext(workInProgress,setShallowSuspenseContext(suspenseStackCursor.current,ForceSuspenseFallback));// Don't bubble properties in this case.
		return workInProgress.child;}row=row.sibling;}}if(renderState.tail!==null&&now()>getRenderTargetTime()){// We have already passed our CPU deadline but we still have rows
		// left in the tail. We'll just give up further attempts to render
		// the main content and only render fallbacks.
		workInProgress.flags|=DidCapture;didSuspendAlready=true;cutOffTailIfNeeded(renderState,false);// Since nothing actually suspended, there will nothing to ping this
		// to get it started back up to attempt the next item. While in terms
		// of priority this work has the same priority as this current render,
		// it's not part of the same transition once the transition has
		// committed. If it's sync, we still want to yield so that it can be
		// painted. Conceptually, this is really the same as pinging.
		// We can use any RetryLane even if it's the one currently rendering
		// since we're leaving it behind on this node.
		workInProgress.lanes=SomeRetryLane;}}else {cutOffTailIfNeeded(renderState,false);}// Next we're going to render the tail.
		}else {// Append the rendered row to the child list.
		if(!didSuspendAlready){var _suspended=findFirstSuspended(renderedTail);if(_suspended!==null){workInProgress.flags|=DidCapture;didSuspendAlready=true;// Ensure we transfer the update queue to the parent so that it doesn't
		// get lost if this row ends up dropped during a second pass.
		var _newThenables=_suspended.updateQueue;if(_newThenables!==null){workInProgress.updateQueue=_newThenables;workInProgress.flags|=Update;}cutOffTailIfNeeded(renderState,true);// This might have been modified.
		if(renderState.tail===null&&renderState.tailMode==='hidden'&&!renderedTail.alternate&&!getIsHydrating()// We don't cut it if we're hydrating.
		){// We're done.
		bubbleProperties(workInProgress);return null;}}else if(// The time it took to render last row is greater than the remaining
		// time we have to render. So rendering one more row would likely
		// exceed it.
		now()*2-renderState.renderingStartTime>getRenderTargetTime()&&renderLanes!==OffscreenLane){// We have now passed our CPU deadline and we'll just give up further
		// attempts to render the main content and only render fallbacks.
		// The assumption is that this is usually faster.
		workInProgress.flags|=DidCapture;didSuspendAlready=true;cutOffTailIfNeeded(renderState,false);// Since nothing actually suspended, there will nothing to ping this
		// to get it started back up to attempt the next item. While in terms
		// of priority this work has the same priority as this current render,
		// it's not part of the same transition once the transition has
		// committed. If it's sync, we still want to yield so that it can be
		// painted. Conceptually, this is really the same as pinging.
		// We can use any RetryLane even if it's the one currently rendering
		// since we're leaving it behind on this node.
		workInProgress.lanes=SomeRetryLane;}}if(renderState.isBackwards){// The effect list of the backwards tail will have been added
		// to the end. This breaks the guarantee that life-cycles fire in
		// sibling order but that isn't a strong guarantee promised by React.
		// Especially since these might also just pop in during future commits.
		// Append to the beginning of the list.
		renderedTail.sibling=workInProgress.child;workInProgress.child=renderedTail;}else {var previousSibling=renderState.last;if(previousSibling!==null){previousSibling.sibling=renderedTail;}else {workInProgress.child=renderedTail;}renderState.last=renderedTail;}}if(renderState.tail!==null){// We still have tail rows to render.
		// Pop a row.
		var next=renderState.tail;renderState.rendering=next;renderState.tail=next.sibling;renderState.renderingStartTime=now();next.sibling=null;// Restore the context.
		// TODO: We can probably just avoid popping it instead and only
		// setting it the first time we go from not suspended to suspended.
		var suspenseContext=suspenseStackCursor.current;if(didSuspendAlready){suspenseContext=setShallowSuspenseContext(suspenseContext,ForceSuspenseFallback);}else {suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);}pushSuspenseContext(workInProgress,suspenseContext);// Do a pass over the next row.
		// Don't bubble properties in this case.
		return next;}bubbleProperties(workInProgress);return null;}case ScopeComponent:{break;}case OffscreenComponent:case LegacyHiddenComponent:{popRenderLanes(workInProgress);var _nextState=workInProgress.memoizedState;var nextIsHidden=_nextState!==null;if(current!==null){var _prevState=current.memoizedState;var prevIsHidden=_prevState!==null;if(prevIsHidden!==nextIsHidden&&// LegacyHidden doesn't do any hiding — it only pre-renders.
		!enableLegacyHidden){workInProgress.flags|=Visibility;}}if(!nextIsHidden||(workInProgress.mode&ConcurrentMode)===NoMode){bubbleProperties(workInProgress);}else {// Don't bubble properties for hidden children unless we're rendering
		// at offscreen priority.
		if(includesSomeLane(subtreeRenderLanes,OffscreenLane)){bubbleProperties(workInProgress);{// Check if there was an insertion or update in the hidden subtree.
		// If so, we need to hide those nodes in the commit phase, so
		// schedule a visibility effect.
		if(workInProgress.subtreeFlags&(Placement|Update)){workInProgress.flags|=Visibility;}}}}return null;}case CacheComponent:{return null;}case TracingMarkerComponent:{return null;}}throw new Error("Unknown unit of work tag ("+workInProgress.tag+"). This error is likely caused by a bug in "+'React. Please file an issue.');}function unwindWork(current,workInProgress,renderLanes){// Note: This intentionally doesn't check if we're hydrating because comparing
		// to the current tree provider fiber is just as fast and less error-prone.
		// Ideally we would have a special version of the work loop only
		// for hydration.
		popTreeContext(workInProgress);switch(workInProgress.tag){case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){popContext(workInProgress);}var flags=workInProgress.flags;if(flags&ShouldCapture){workInProgress.flags=flags&~ShouldCapture|DidCapture;if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}return workInProgress;}return null;}case HostRoot:{workInProgress.stateNode;popHostContainer(workInProgress);popTopLevelContextObject(workInProgress);resetWorkInProgressVersions();var _flags=workInProgress.flags;if((_flags&ShouldCapture)!==NoFlags&&(_flags&DidCapture)===NoFlags){// There was an error during render that wasn't captured by a suspense
		// boundary. Do a second pass on the root to unmount the children.
		workInProgress.flags=_flags&~ShouldCapture|DidCapture;return workInProgress;}// We unwound to the root without completing it. Exit.
		return null;}case HostComponent:{// TODO: popHydrationState
		popHostContext(workInProgress);return null;}case SuspenseComponent:{popSuspenseContext(workInProgress);var suspenseState=workInProgress.memoizedState;if(suspenseState!==null&&suspenseState.dehydrated!==null){if(workInProgress.alternate===null){throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in '+'React. Please file an issue.');}resetHydrationState();}var _flags2=workInProgress.flags;if(_flags2&ShouldCapture){workInProgress.flags=_flags2&~ShouldCapture|DidCapture;// Captured a suspense effect. Re-render the boundary.
		if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}return workInProgress;}return null;}case SuspenseListComponent:{popSuspenseContext(workInProgress);// SuspenseList doesn't actually catch anything. It should've been
		// caught by a nested boundary. If not, it should bubble through.
		return null;}case HostPortal:popHostContainer(workInProgress);return null;case ContextProvider:var context=workInProgress.type._context;popProvider(context,workInProgress);return null;case OffscreenComponent:case LegacyHiddenComponent:popRenderLanes(workInProgress);return null;case CacheComponent:return null;default:return null;}}function unwindInterruptedWork(current,interruptedWork,renderLanes){// Note: This intentionally doesn't check if we're hydrating because comparing
		// to the current tree provider fiber is just as fast and less error-prone.
		// Ideally we would have a special version of the work loop only
		// for hydration.
		popTreeContext(interruptedWork);switch(interruptedWork.tag){case ClassComponent:{var childContextTypes=interruptedWork.type.childContextTypes;if(childContextTypes!==null&&childContextTypes!==undefined){popContext(interruptedWork);}break;}case HostRoot:{interruptedWork.stateNode;popHostContainer(interruptedWork);popTopLevelContextObject(interruptedWork);resetWorkInProgressVersions();break;}case HostComponent:{popHostContext(interruptedWork);break;}case HostPortal:popHostContainer(interruptedWork);break;case SuspenseComponent:popSuspenseContext(interruptedWork);break;case SuspenseListComponent:popSuspenseContext(interruptedWork);break;case ContextProvider:var context=interruptedWork.type._context;popProvider(context,interruptedWork);break;case OffscreenComponent:case LegacyHiddenComponent:popRenderLanes(interruptedWork);break;}}var didWarnAboutUndefinedSnapshotBeforeUpdate=null;{didWarnAboutUndefinedSnapshotBeforeUpdate=new Set();}// Used during the commit phase to track the state of the Offscreen component stack.
		// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
		// Only used when enableSuspenseLayoutEffectSemantics is enabled.
		var offscreenSubtreeIsHidden=false;var offscreenSubtreeWasHidden=false;var PossiblyWeakSet=typeof WeakSet==='function'?WeakSet:Set;var nextEffect=null;// Used for Profiling builds to track updaters.
		var inProgressLanes=null;var inProgressRoot=null;function reportUncaughtErrorInDEV(error){// Wrapping each small part of the commit phase into a guarded
		// callback is a bit too slow (https://github.com/facebook/react/pull/21666).
		// But we rely on it to surface errors to DEV tools like overlays
		// (https://github.com/facebook/react/issues/21712).
		// As a compromise, rethrow only caught errors in a guard.
		{invokeGuardedCallback(null,function(){throw error;});clearCaughtError();}}var callComponentWillUnmountWithTimer=function(current,instance){instance.props=current.memoizedProps;instance.state=current.memoizedState;if(current.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentWillUnmount();}finally{recordLayoutEffectDuration(current);}}else {instance.componentWillUnmount();}};// Capture errors so they don't interrupt mounting.
		function safelyCallCommitHookLayoutEffectListMount(current,nearestMountedAncestor){try{commitHookEffectListMount(Layout,current);}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt unmounting.
		function safelyCallComponentWillUnmount(current,nearestMountedAncestor,instance){try{callComponentWillUnmountWithTimer(current,instance);}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt mounting.
		function safelyCallComponentDidMount(current,nearestMountedAncestor,instance){try{instance.componentDidMount();}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt mounting.
		function safelyAttachRef(current,nearestMountedAncestor){try{commitAttachRef(current);}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}function safelyDetachRef(current,nearestMountedAncestor){var ref=current.ref;if(ref!==null){if(typeof ref==='function'){var retVal;try{if(enableProfilerTimer&&enableProfilerCommitHooks&&current.mode&ProfileMode){try{startLayoutEffectTimer();retVal=ref(null);}finally{recordLayoutEffectDuration(current);}}else {retVal=ref(null);}}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}{if(typeof retVal==='function'){error('Unexpected return value from a callback ref in %s. '+'A callback ref should not return a function.',getComponentNameFromFiber(current));}}}else {ref.current=null;}}}function safelyCallDestroy(current,nearestMountedAncestor,destroy){try{destroy();}catch(error){captureCommitPhaseError(current,nearestMountedAncestor,error);}}var shouldFireAfterActiveInstanceBlur=false;function commitBeforeMutationEffects(root,firstChild){prepareForCommit(root.containerInfo);nextEffect=firstChild;commitBeforeMutationEffects_begin();// We no longer need to track the active instance fiber
		var shouldFire=shouldFireAfterActiveInstanceBlur;shouldFireAfterActiveInstanceBlur=false;return shouldFire;}function commitBeforeMutationEffects_begin(){while(nextEffect!==null){var fiber=nextEffect;// This phase is only used for beforeActiveInstanceBlur.
		var child=fiber.child;if((fiber.subtreeFlags&BeforeMutationMask)!==NoFlags&&child!==null){child.return=fiber;nextEffect=child;}else {commitBeforeMutationEffects_complete();}}}function commitBeforeMutationEffects_complete(){while(nextEffect!==null){var fiber=nextEffect;setCurrentFiber(fiber);try{commitBeforeMutationEffectsOnFiber(fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitBeforeMutationEffectsOnFiber(finishedWork){var current=finishedWork.alternate;var flags=finishedWork.flags;if((flags&Snapshot)!==NoFlags){setCurrentFiber(finishedWork);switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{break;}case ClassComponent:{if(current!==null){var prevProps=current.memoizedProps;var prevState=current.memoizedState;var instance=finishedWork.stateNode;// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'getSnapshotBeforeUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'getSnapshotBeforeUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}var snapshot=instance.getSnapshotBeforeUpdate(finishedWork.elementType===finishedWork.type?prevProps:resolveDefaultProps(finishedWork.type,prevProps),prevState);{var didWarnSet=didWarnAboutUndefinedSnapshotBeforeUpdate;if(snapshot===undefined&&!didWarnSet.has(finishedWork.type)){didWarnSet.add(finishedWork.type);error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) '+'must be returned. You have returned undefined.',getComponentNameFromFiber(finishedWork));}}instance.__reactInternalSnapshotBeforeUpdate=snapshot;}break;}case HostRoot:{{var root=finishedWork.stateNode;clearContainer(root.containerInfo);}break;}case HostComponent:case HostText:case HostPortal:case IncompleteClassComponent:// Nothing to do for these component types
		break;default:{throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}}resetCurrentFiber();}}function commitHookEffectListUnmount(flags,finishedWork,nearestMountedAncestor){var updateQueue=finishedWork.updateQueue;var lastEffect=updateQueue!==null?updateQueue.lastEffect:null;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{if((effect.tag&flags)===flags){// Unmount
		var destroy=effect.destroy;effect.destroy=undefined;if(destroy!==undefined){{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectUnmountStarted(finishedWork);}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectUnmountStarted(finishedWork);}}{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(true);}}safelyCallDestroy(finishedWork,nearestMountedAncestor,destroy);{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(false);}}{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectUnmountStopped();}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectUnmountStopped();}}}}effect=effect.next;}while(effect!==firstEffect);}}function commitHookEffectListMount(flags,finishedWork){var updateQueue=finishedWork.updateQueue;var lastEffect=updateQueue!==null?updateQueue.lastEffect:null;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{if((effect.tag&flags)===flags){{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectMountStarted(finishedWork);}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectMountStarted(finishedWork);}}// Mount
		var create=effect.create;{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(true);}}effect.destroy=create();{if((flags&Insertion)!==NoFlags$1){setIsRunningInsertionEffect(false);}}{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectMountStopped();}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectMountStopped();}}{var destroy=effect.destroy;if(destroy!==undefined&&typeof destroy!=='function'){var hookName=void 0;if((effect.tag&Layout)!==NoFlags){hookName='useLayoutEffect';}else if((effect.tag&Insertion)!==NoFlags){hookName='useInsertionEffect';}else {hookName='useEffect';}var addendum=void 0;if(destroy===null){addendum=' You returned null. If your effect does not require clean '+'up, return undefined (or nothing).';}else if(typeof destroy.then==='function'){addendum='\n\nIt looks like you wrote '+hookName+'(async () => ...) or returned a Promise. '+'Instead, write the async function inside your effect '+'and call it immediately:\n\n'+hookName+'(() => {\n'+'  async function fetchData() {\n'+'    // You can await here\n'+'    const response = await MyAPI.getData(someId);\n'+'    // ...\n'+'  }\n'+'  fetchData();\n'+"}, [someId]); // Or [] if effect doesn't need props or state\n\n"+'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';}else {addendum=' You returned: '+destroy;}error('%s must not return anything besides a function, '+'which is used for clean-up.%s',hookName,addendum);}}}effect=effect.next;}while(effect!==firstEffect);}}function commitPassiveEffectDurations(finishedRoot,finishedWork){{// Only Profilers with work in their subtree will have an Update effect scheduled.
		if((finishedWork.flags&Update)!==NoFlags){switch(finishedWork.tag){case Profiler:{var passiveEffectDuration=finishedWork.stateNode.passiveEffectDuration;var _finishedWork$memoize=finishedWork.memoizedProps,id=_finishedWork$memoize.id,onPostCommit=_finishedWork$memoize.onPostCommit;// This value will still reflect the previous commit phase.
		// It does not get reset until the start of the next commit phase.
		var commitTime=getCommitTime();var phase=finishedWork.alternate===null?'mount':'update';{if(isCurrentUpdateNested()){phase='nested-update';}}if(typeof onPostCommit==='function'){onPostCommit(id,phase,passiveEffectDuration,commitTime);}// Bubble times to the next nearest ancestor Profiler.
		// After we process that Profiler, we'll bubble further up.
		var parentFiber=finishedWork.return;outer:while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.passiveEffectDuration+=passiveEffectDuration;break outer;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.passiveEffectDuration+=passiveEffectDuration;break outer;}parentFiber=parentFiber.return;}break;}}}}}function commitLayoutEffectOnFiber(finishedRoot,current,finishedWork,committedLanes){if((finishedWork.flags&LayoutMask)!==NoFlags){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(!offscreenSubtreeWasHidden){// At this point layout effects have already been destroyed (during mutation phase).
		// This is done to prevent sibling component effects from interfering with each other,
		// e.g. a destroy function in one component should never override a ref set
		// by a create function in another component during the same commit.
		if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListMount(Layout|HasEffect,finishedWork);}finally{recordLayoutEffectDuration(finishedWork);}}else {commitHookEffectListMount(Layout|HasEffect,finishedWork);}}break;}case ClassComponent:{var instance=finishedWork.stateNode;if(finishedWork.flags&Update){if(!offscreenSubtreeWasHidden){if(current===null){// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'componentDidMount. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'componentDidMount. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentDidMount();}finally{recordLayoutEffectDuration(finishedWork);}}else {instance.componentDidMount();}}else {var prevProps=finishedWork.elementType===finishedWork.type?current.memoizedProps:resolveDefaultProps(finishedWork.type,current.memoizedProps);var prevState=current.memoizedState;// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'componentDidUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'componentDidUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentDidUpdate(prevProps,prevState,instance.__reactInternalSnapshotBeforeUpdate);}finally{recordLayoutEffectDuration(finishedWork);}}else {instance.componentDidUpdate(prevProps,prevState,instance.__reactInternalSnapshotBeforeUpdate);}}}}// TODO: I think this is now always non-null by the time it reaches the
		// commit phase. Consider removing the type check.
		var updateQueue=finishedWork.updateQueue;if(updateQueue!==null){{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'processing the update queue. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'processing the update queue. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}// We could update instance props and state here,
		// but instead we rely on them being set during last render.
		// TODO: revisit this when we implement resuming.
		commitUpdateQueue(finishedWork,updateQueue,instance);}break;}case HostRoot:{// TODO: I think this is now always non-null by the time it reaches the
		// commit phase. Consider removing the type check.
		var _updateQueue=finishedWork.updateQueue;if(_updateQueue!==null){var _instance=null;if(finishedWork.child!==null){switch(finishedWork.child.tag){case HostComponent:_instance=getPublicInstance(finishedWork.child.stateNode);break;case ClassComponent:_instance=finishedWork.child.stateNode;break;}}commitUpdateQueue(finishedWork,_updateQueue,_instance);}break;}case HostComponent:{var _instance2=finishedWork.stateNode;// Renderers may schedule work to be done after host components are mounted
		// (eg DOM renderer may schedule auto-focus for inputs and form controls).
		// These effects should only be committed when components are first mounted,
		// aka when there is no current/alternate.
		if(current===null&&finishedWork.flags&Update){var type=finishedWork.type;var props=finishedWork.memoizedProps;commitMount(_instance2,type,props);}break;}case HostText:{// We have no life-cycles associated with text.
		break;}case HostPortal:{// We have no life-cycles associated with portals.
		break;}case Profiler:{{var _finishedWork$memoize2=finishedWork.memoizedProps,onCommit=_finishedWork$memoize2.onCommit,onRender=_finishedWork$memoize2.onRender;var effectDuration=finishedWork.stateNode.effectDuration;var commitTime=getCommitTime();var phase=current===null?'mount':'update';{if(isCurrentUpdateNested()){phase='nested-update';}}if(typeof onRender==='function'){onRender(finishedWork.memoizedProps.id,phase,finishedWork.actualDuration,finishedWork.treeBaseDuration,finishedWork.actualStartTime,commitTime);}{if(typeof onCommit==='function'){onCommit(finishedWork.memoizedProps.id,phase,effectDuration,commitTime);}// Schedule a passive effect for this Profiler to call onPostCommit hooks.
		// This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
		// because the effect is also where times bubble to parent Profilers.
		enqueuePendingPassiveProfilerEffect(finishedWork);// Propagate layout effect durations to the next nearest Profiler ancestor.
		// Do not reset these values until the next render so DevTools has a chance to read them first.
		var parentFiber=finishedWork.return;outer:while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.effectDuration+=effectDuration;break outer;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.effectDuration+=effectDuration;break outer;}parentFiber=parentFiber.return;}}}break;}case SuspenseComponent:{commitSuspenseHydrationCallbacks(finishedRoot,finishedWork);break;}case SuspenseListComponent:case IncompleteClassComponent:case ScopeComponent:case OffscreenComponent:case LegacyHiddenComponent:case TracingMarkerComponent:{break;}default:throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}}if(!offscreenSubtreeWasHidden){{if(finishedWork.flags&Ref){commitAttachRef(finishedWork);}}}}function reappearLayoutEffectsOnFiber(node){// Turn on layout effects in a tree that previously disappeared.
		// TODO (Offscreen) Check: flags & LayoutStatic
		switch(node.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(node.mode&ProfileMode){try{startLayoutEffectTimer();safelyCallCommitHookLayoutEffectListMount(node,node.return);}finally{recordLayoutEffectDuration(node);}}else {safelyCallCommitHookLayoutEffectListMount(node,node.return);}break;}case ClassComponent:{var instance=node.stateNode;if(typeof instance.componentDidMount==='function'){safelyCallComponentDidMount(node,node.return,instance);}safelyAttachRef(node,node.return);break;}case HostComponent:{safelyAttachRef(node,node.return);break;}}}function hideOrUnhideAllChildren(finishedWork,isHidden){// Only hide or unhide the top-most host nodes.
		var hostSubtreeRoot=null;{// We only have the top Fiber that was inserted but we need to recurse down its
		// children to find all the terminal nodes.
		var node=finishedWork;while(true){if(node.tag===HostComponent){if(hostSubtreeRoot===null){hostSubtreeRoot=node;try{var instance=node.stateNode;if(isHidden){hideInstance(instance);}else {unhideInstance(node.stateNode,node.memoizedProps);}}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}else if(node.tag===HostText){if(hostSubtreeRoot===null){try{var _instance3=node.stateNode;if(isHidden){hideTextInstance(_instance3);}else {unhideTextInstance(_instance3,node.memoizedProps);}}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}else if((node.tag===OffscreenComponent||node.tag===LegacyHiddenComponent)&&node.memoizedState!==null&&node!==finishedWork);else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===finishedWork){return;}while(node.sibling===null){if(node.return===null||node.return===finishedWork){return;}if(hostSubtreeRoot===node){hostSubtreeRoot=null;}node=node.return;}if(hostSubtreeRoot===node){hostSubtreeRoot=null;}node.sibling.return=node.return;node=node.sibling;}}}function commitAttachRef(finishedWork){var ref=finishedWork.ref;if(ref!==null){var instance=finishedWork.stateNode;var instanceToUse;switch(finishedWork.tag){case HostComponent:instanceToUse=getPublicInstance(instance);break;default:instanceToUse=instance;}// Moved outside to ensure DCE works with this flag
		if(typeof ref==='function'){var retVal;if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();retVal=ref(instanceToUse);}finally{recordLayoutEffectDuration(finishedWork);}}else {retVal=ref(instanceToUse);}{if(typeof retVal==='function'){error('Unexpected return value from a callback ref in %s. '+'A callback ref should not return a function.',getComponentNameFromFiber(finishedWork));}}}else {{if(!ref.hasOwnProperty('current')){error('Unexpected ref object provided for %s. '+'Use either a ref-setter function or React.createRef().',getComponentNameFromFiber(finishedWork));}}ref.current=instanceToUse;}}}function detachFiberMutation(fiber){// Cut off the return pointer to disconnect it from the tree.
		// This enables us to detect and warn against state updates on an unmounted component.
		// It also prevents events from bubbling from within disconnected components.
		//
		// Ideally, we should also clear the child pointer of the parent alternate to let this
		// get GC:ed but we don't know which for sure which parent is the current
		// one so we'll settle for GC:ing the subtree of this child.
		// This child itself will be GC:ed when the parent updates the next time.
		//
		// Note that we can't clear child or sibling pointers yet.
		// They're needed for passive effects and for findDOMNode.
		// We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
		//
		// Don't reset the alternate yet, either. We need that so we can detach the
		// alternate's fields in the passive phase. Clearing the return pointer is
		// sufficient for findDOMNode semantics.
		var alternate=fiber.alternate;if(alternate!==null){alternate.return=null;}fiber.return=null;}function detachFiberAfterEffects(fiber){var alternate=fiber.alternate;if(alternate!==null){fiber.alternate=null;detachFiberAfterEffects(alternate);}// Note: Defensively using negation instead of < in case
		// `deletedTreeCleanUpLevel` is undefined.
		{// Clear cyclical Fiber fields. This level alone is designed to roughly
		// approximate the planned Fiber refactor. In that world, `setState` will be
		// bound to a special "instance" object instead of a Fiber. The Instance
		// object will not have any of these fields. It will only be connected to
		// the fiber tree via a single link at the root. So if this level alone is
		// sufficient to fix memory issues, that bodes well for our plans.
		fiber.child=null;fiber.deletions=null;fiber.sibling=null;// The `stateNode` is cyclical because on host nodes it points to the host
		// tree, which has its own pointers to children, parents, and siblings.
		// The other host nodes also point back to fibers, so we should detach that
		// one, too.
		if(fiber.tag===HostComponent){var hostInstance=fiber.stateNode;if(hostInstance!==null){detachDeletedInstance(hostInstance);}}fiber.stateNode=null;// I'm intentionally not clearing the `return` field in this level. We
		// already disconnect the `return` pointer at the root of the deleted
		// subtree (in `detachFiberMutation`). Besides, `return` by itself is not
		// cyclical — it's only cyclical when combined with `child`, `sibling`, and
		// `alternate`. But we'll clear it in the next level anyway, just in case.
		{fiber._debugOwner=null;}{// Theoretically, nothing in here should be necessary, because we already
		// disconnected the fiber from the tree. So even if something leaks this
		// particular fiber, it won't leak anything else
		//
		// The purpose of this branch is to be super aggressive so we can measure
		// if there's any difference in memory impact. If there is, that could
		// indicate a React leak we don't know about.
		fiber.return=null;fiber.dependencies=null;fiber.memoizedProps=null;fiber.memoizedState=null;fiber.pendingProps=null;fiber.stateNode=null;// TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
		fiber.updateQueue=null;}}}function getHostParentFiber(fiber){var parent=fiber.return;while(parent!==null){if(isHostParent(parent)){return parent;}parent=parent.return;}throw new Error('Expected to find a host parent. This error is likely caused by a bug '+'in React. Please file an issue.');}function isHostParent(fiber){return fiber.tag===HostComponent||fiber.tag===HostRoot||fiber.tag===HostPortal;}function getHostSibling(fiber){// We're going to search forward into the tree until we find a sibling host
		// node. Unfortunately, if multiple insertions are done in a row we have to
		// search past them. This leads to exponential search for the next sibling.
		// TODO: Find a more efficient way to do this.
		var node=fiber;siblings:while(true){// If we didn't find anything, let's try the next sibling.
		while(node.sibling===null){if(node.return===null||isHostParent(node.return)){// If we pop out of the root or hit the parent the fiber we are the
		// last sibling.
		return null;}node=node.return;}node.sibling.return=node.return;node=node.sibling;while(node.tag!==HostComponent&&node.tag!==HostText&&node.tag!==DehydratedFragment){// If it is not host node and, we might have a host node inside it.
		// Try to search down until we find one.
		if(node.flags&Placement){// If we don't have a child, try the siblings instead.
		continue siblings;}// If we don't have a child, try the siblings instead.
		// We also skip portals because they are not part of this host tree.
		if(node.child===null||node.tag===HostPortal){continue siblings;}else {node.child.return=node;node=node.child;}}// Check if this host node is stable or about to be placed.
		if(!(node.flags&Placement)){// Found it!
		return node.stateNode;}}}function commitPlacement(finishedWork){var parentFiber=getHostParentFiber(finishedWork);// Note: these two variables *must* always be updated together.
		switch(parentFiber.tag){case HostComponent:{var parent=parentFiber.stateNode;if(parentFiber.flags&ContentReset){// Reset the text content of the parent before doing any insertions
		resetTextContent(parent);// Clear ContentReset from the effect tag
		parentFiber.flags&=~ContentReset;}var before=getHostSibling(finishedWork);// We only have the top Fiber that was inserted but we need to recurse down its
		// children to find all the terminal nodes.
		insertOrAppendPlacementNode(finishedWork,before,parent);break;}case HostRoot:case HostPortal:{var _parent=parentFiber.stateNode.containerInfo;var _before=getHostSibling(finishedWork);insertOrAppendPlacementNodeIntoContainer(finishedWork,_before,_parent);break;}// eslint-disable-next-line-no-fallthrough
		default:throw new Error('Invalid host parent fiber. This error is likely caused by a bug '+'in React. Please file an issue.');}}function insertOrAppendPlacementNodeIntoContainer(node,before,parent){var tag=node.tag;var isHost=tag===HostComponent||tag===HostText;if(isHost){var stateNode=node.stateNode;if(before){insertInContainerBefore(parent,stateNode,before);}else {appendChildToContainer(parent,stateNode);}}else if(tag===HostPortal);else {var child=node.child;if(child!==null){insertOrAppendPlacementNodeIntoContainer(child,before,parent);var sibling=child.sibling;while(sibling!==null){insertOrAppendPlacementNodeIntoContainer(sibling,before,parent);sibling=sibling.sibling;}}}}function insertOrAppendPlacementNode(node,before,parent){var tag=node.tag;var isHost=tag===HostComponent||tag===HostText;if(isHost){var stateNode=node.stateNode;if(before){insertBefore(parent,stateNode,before);}else {appendChild(parent,stateNode);}}else if(tag===HostPortal);else {var child=node.child;if(child!==null){insertOrAppendPlacementNode(child,before,parent);var sibling=child.sibling;while(sibling!==null){insertOrAppendPlacementNode(sibling,before,parent);sibling=sibling.sibling;}}}}// These are tracked on the stack as we recursively traverse a
		// deleted subtree.
		// TODO: Update these during the whole mutation phase, not just during
		// a deletion.
		var hostParent=null;var hostParentIsContainer=false;function commitDeletionEffects(root,returnFiber,deletedFiber){{// We only have the top Fiber that was deleted but we need to recurse down its
		// children to find all the terminal nodes.
		// Recursively delete all host nodes from the parent, detach refs, clean
		// up mounted layout effects, and call componentWillUnmount.
		// We only need to remove the topmost host child in each branch. But then we
		// still need to keep traversing to unmount effects, refs, and cWU. TODO: We
		// could split this into two separate traversals functions, where the second
		// one doesn't include any removeChild logic. This is maybe the same
		// function as "disappearLayoutEffects" (or whatever that turns into after
		// the layout phase is refactored to use recursion).
		// Before starting, find the nearest host parent on the stack so we know
		// which instance/container to remove the children from.
		// TODO: Instead of searching up the fiber return path on every deletion, we
		// can track the nearest host component on the JS stack as we traverse the
		// tree during the commit phase. This would make insertions faster, too.
		var parent=returnFiber;findParent:while(parent!==null){switch(parent.tag){case HostComponent:{hostParent=parent.stateNode;hostParentIsContainer=false;break findParent;}case HostRoot:{hostParent=parent.stateNode.containerInfo;hostParentIsContainer=true;break findParent;}case HostPortal:{hostParent=parent.stateNode.containerInfo;hostParentIsContainer=true;break findParent;}}parent=parent.return;}if(hostParent===null){throw new Error('Expected to find a host parent. This error is likely caused by '+'a bug in React. Please file an issue.');}commitDeletionEffectsOnFiber(root,returnFiber,deletedFiber);hostParent=null;hostParentIsContainer=false;}detachFiberMutation(deletedFiber);}function recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,parent){// TODO: Use a static flag to skip trees that don't have unmount effects
		var child=parent.child;while(child!==null){commitDeletionEffectsOnFiber(finishedRoot,nearestMountedAncestor,child);child=child.sibling;}}function commitDeletionEffectsOnFiber(finishedRoot,nearestMountedAncestor,deletedFiber){onCommitUnmount(deletedFiber);// The cases in this outer switch modify the stack before they traverse
		// into their subtree. There are simpler cases in the inner switch
		// that don't modify the stack.
		switch(deletedFiber.tag){case HostComponent:{if(!offscreenSubtreeWasHidden){safelyDetachRef(deletedFiber,nearestMountedAncestor);}// Intentional fallthrough to next branch
		}// eslint-disable-next-line-no-fallthrough
		case HostText:{// We only need to remove the nearest host child. Set the host parent
		// to `null` on the stack to indicate that nested children don't
		// need to be removed.
		{var prevHostParent=hostParent;var prevHostParentIsContainer=hostParentIsContainer;hostParent=null;recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);hostParent=prevHostParent;hostParentIsContainer=prevHostParentIsContainer;if(hostParent!==null){// Now that all the child effects have unmounted, we can remove the
		// node from the tree.
		if(hostParentIsContainer){removeChildFromContainer(hostParent,deletedFiber.stateNode);}else {removeChild(hostParent,deletedFiber.stateNode);}}}return;}case DehydratedFragment:{// Delete the dehydrated suspense boundary and all of its content.
		{if(hostParent!==null){if(hostParentIsContainer){clearSuspenseBoundaryFromContainer(hostParent,deletedFiber.stateNode);}else {clearSuspenseBoundary(hostParent,deletedFiber.stateNode);}}}return;}case HostPortal:{{// When we go into a portal, it becomes the parent to remove from.
		var _prevHostParent=hostParent;var _prevHostParentIsContainer=hostParentIsContainer;hostParent=deletedFiber.stateNode.containerInfo;hostParentIsContainer=true;recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);hostParent=_prevHostParent;hostParentIsContainer=_prevHostParentIsContainer;}return;}case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{if(!offscreenSubtreeWasHidden){var updateQueue=deletedFiber.updateQueue;if(updateQueue!==null){var lastEffect=updateQueue.lastEffect;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{var _effect=effect,destroy=_effect.destroy,tag=_effect.tag;if(destroy!==undefined){if((tag&Insertion)!==NoFlags$1){safelyCallDestroy(deletedFiber,nearestMountedAncestor,destroy);}else if((tag&Layout)!==NoFlags$1){{markComponentLayoutEffectUnmountStarted(deletedFiber);}if(deletedFiber.mode&ProfileMode){startLayoutEffectTimer();safelyCallDestroy(deletedFiber,nearestMountedAncestor,destroy);recordLayoutEffectDuration(deletedFiber);}else {safelyCallDestroy(deletedFiber,nearestMountedAncestor,destroy);}{markComponentLayoutEffectUnmountStopped();}}}effect=effect.next;}while(effect!==firstEffect);}}}recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}case ClassComponent:{if(!offscreenSubtreeWasHidden){safelyDetachRef(deletedFiber,nearestMountedAncestor);var instance=deletedFiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(deletedFiber,nearestMountedAncestor,instance);}}recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}case ScopeComponent:{recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}case OffscreenComponent:{if(// TODO: Remove this dead flag
		deletedFiber.mode&ConcurrentMode){// If this offscreen component is hidden, we already unmounted it. Before
		// deleting the children, track that it's already unmounted so that we
		// don't attempt to unmount the effects again.
		// TODO: If the tree is hidden, in most cases we should be able to skip
		// over the nested children entirely. An exception is we haven't yet found
		// the topmost host node to delete, which we already track on the stack.
		// But the other case is portals, which need to be detached no matter how
		// deeply they are nested. We should use a subtree flag to track whether a
		// subtree includes a nested portal.
		var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden||deletedFiber.memoizedState!==null;recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;}else {recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);}break;}default:{recursivelyTraverseDeletionEffects(finishedRoot,nearestMountedAncestor,deletedFiber);return;}}}function commitSuspenseCallback(finishedWork){// TODO: Move this to passive phase
		finishedWork.memoizedState;}function commitSuspenseHydrationCallbacks(finishedRoot,finishedWork){var newState=finishedWork.memoizedState;if(newState===null){var current=finishedWork.alternate;if(current!==null){var prevState=current.memoizedState;if(prevState!==null){var suspenseInstance=prevState.dehydrated;if(suspenseInstance!==null){commitHydratedSuspenseInstance(suspenseInstance);}}}}}function attachSuspenseRetryListeners(finishedWork){// If this boundary just timed out, then it will have a set of wakeables.
		// For each wakeable, attach a listener so that when it resolves, React
		// attempts to re-render the boundary in the primary (pre-timeout) state.
		var wakeables=finishedWork.updateQueue;if(wakeables!==null){finishedWork.updateQueue=null;var retryCache=finishedWork.stateNode;if(retryCache===null){retryCache=finishedWork.stateNode=new PossiblyWeakSet();}wakeables.forEach(function(wakeable){// Memoize using the boundary fiber to prevent redundant listeners.
		var retry=resolveRetryWakeable.bind(null,finishedWork,wakeable);if(!retryCache.has(wakeable)){retryCache.add(wakeable);{if(isDevToolsPresent){if(inProgressLanes!==null&&inProgressRoot!==null){// If we have pending work still, associate the original updaters with it.
		restorePendingUpdaters(inProgressRoot,inProgressLanes);}else {throw Error('Expected finished root and lanes to be set. This is a bug in React.');}}}wakeable.then(retry,retry);}});}}// This function detects when a Suspense boundary goes from visible to hidden.
		function commitMutationEffects(root,finishedWork,committedLanes){inProgressLanes=committedLanes;inProgressRoot=root;setCurrentFiber(finishedWork);commitMutationEffectsOnFiber(finishedWork,root);setCurrentFiber(finishedWork);inProgressLanes=null;inProgressRoot=null;}function recursivelyTraverseMutationEffects(root,parentFiber,lanes){// Deletions effects can be scheduled on any fiber type. They need to happen
		// before the children effects hae fired.
		var deletions=parentFiber.deletions;if(deletions!==null){for(var i=0;i<deletions.length;i++){var childToDelete=deletions[i];try{commitDeletionEffects(root,parentFiber,childToDelete);}catch(error){captureCommitPhaseError(childToDelete,parentFiber,error);}}}var prevDebugFiber=getCurrentFiber();if(parentFiber.subtreeFlags&MutationMask){var child=parentFiber.child;while(child!==null){setCurrentFiber(child);commitMutationEffectsOnFiber(child,root);child=child.sibling;}}setCurrentFiber(prevDebugFiber);}function commitMutationEffectsOnFiber(finishedWork,root,lanes){var current=finishedWork.alternate;var flags=finishedWork.flags;// The effect flag should be checked *after* we refine the type of fiber,
		// because the fiber tag is more specific. An exception is any flag related
		// to reconcilation, because those can be set on all fiber types.
		switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){try{commitHookEffectListUnmount(Insertion|HasEffect,finishedWork,finishedWork.return);commitHookEffectListMount(Insertion|HasEffect,finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}// Layout effects are destroyed during the mutation phase so that all
		// destroy functions for all fibers are called before any create functions.
		// This prevents sibling component effects from interfering with each other,
		// e.g. a destroy function in one component should never override a ref set
		// by a create function in another component during the same commit.
		if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}recordLayoutEffectDuration(finishedWork);}else {try{commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}return;}case ClassComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Ref){if(current!==null){safelyDetachRef(current,current.return);}}return;}case HostComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Ref){if(current!==null){safelyDetachRef(current,current.return);}}{// TODO: ContentReset gets cleared by the children during the commit
		// phase. This is a refactor hazard because it means we must read
		// flags the flags after `commitReconciliationEffects` has already run;
		// the order matters. We should refactor so that ContentReset does not
		// rely on mutating the flag during commit. Like by setting a flag
		// during the render phase instead.
		if(finishedWork.flags&ContentReset){var instance=finishedWork.stateNode;try{resetTextContent(instance);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}if(flags&Update){var _instance4=finishedWork.stateNode;if(_instance4!=null){// Commit the work prepared earlier.
		var newProps=finishedWork.memoizedProps;// For hydration we reuse the update path but we treat the oldProps
		// as the newProps. The updatePayload will contain the real change in
		// this case.
		var oldProps=current!==null?current.memoizedProps:newProps;var type=finishedWork.type;// TODO: Type the updateQueue to be specific to host components.
		var updatePayload=finishedWork.updateQueue;finishedWork.updateQueue=null;if(updatePayload!==null){try{commitUpdate(_instance4,updatePayload,type,oldProps,newProps,finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}}}return;}case HostText:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){{if(finishedWork.stateNode===null){throw new Error('This should have a text node initialized. This error is likely '+'caused by a bug in React. Please file an issue.');}var textInstance=finishedWork.stateNode;var newText=finishedWork.memoizedProps;// For hydration we reuse the update path but we treat the oldProps
		// as the newProps. The updatePayload will contain the real change in
		// this case.
		var oldText=current!==null?current.memoizedProps:newText;try{commitTextUpdate(textInstance,oldText,newText);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}return;}case HostRoot:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){{if(current!==null){var prevRootState=current.memoizedState;if(prevRootState.isDehydrated){try{commitHydratedContainer(root.containerInfo);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}}}}}return;}case HostPortal:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);return;}case SuspenseComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);var offscreenFiber=finishedWork.child;if(offscreenFiber.flags&Visibility){var offscreenInstance=offscreenFiber.stateNode;var newState=offscreenFiber.memoizedState;var isHidden=newState!==null;// Track the current state on the Offscreen instance so we can
		// read it during an event
		offscreenInstance.isHidden=isHidden;if(isHidden){var wasHidden=offscreenFiber.alternate!==null&&offscreenFiber.alternate.memoizedState!==null;if(!wasHidden){// TODO: Move to passive phase
		markCommitTimeOfFallback();}}}if(flags&Update){try{commitSuspenseCallback(finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}attachSuspenseRetryListeners(finishedWork);}return;}case OffscreenComponent:{var _wasHidden=current!==null&&current.memoizedState!==null;if(// TODO: Remove this dead flag
		finishedWork.mode&ConcurrentMode){// Before committing the children, track on the stack whether this
		// offscreen subtree was already hidden, so that we don't unmount the
		// effects again.
		var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden||_wasHidden;recursivelyTraverseMutationEffects(root,finishedWork);offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;}else {recursivelyTraverseMutationEffects(root,finishedWork);}commitReconciliationEffects(finishedWork);if(flags&Visibility){var _offscreenInstance=finishedWork.stateNode;var _newState=finishedWork.memoizedState;var _isHidden=_newState!==null;var offscreenBoundary=finishedWork;// Track the current state on the Offscreen instance so we can
		// read it during an event
		_offscreenInstance.isHidden=_isHidden;{if(_isHidden){if(!_wasHidden){if((offscreenBoundary.mode&ConcurrentMode)!==NoMode){nextEffect=offscreenBoundary;var offscreenChild=offscreenBoundary.child;while(offscreenChild!==null){nextEffect=offscreenChild;disappearLayoutEffects_begin(offscreenChild);offscreenChild=offscreenChild.sibling;}}}}}{// TODO: This needs to run whenever there's an insertion or update
		// inside a hidden Offscreen tree.
		hideOrUnhideAllChildren(offscreenBoundary,_isHidden);}}return;}case SuspenseListComponent:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);if(flags&Update){attachSuspenseRetryListeners(finishedWork);}return;}case ScopeComponent:{return;}default:{recursivelyTraverseMutationEffects(root,finishedWork);commitReconciliationEffects(finishedWork);return;}}}function commitReconciliationEffects(finishedWork){// Placement effects (insertions, reorders) can be scheduled on any fiber
		// type. They needs to happen after the children effects have fired, but
		// before the effects on this fiber have fired.
		var flags=finishedWork.flags;if(flags&Placement){try{commitPlacement(finishedWork);}catch(error){captureCommitPhaseError(finishedWork,finishedWork.return,error);}// Clear the "placement" from effect tag so that we know that this is
		// inserted, before any life-cycles like componentDidMount gets called.
		// TODO: findDOMNode doesn't rely on this any more but isMounted does
		// and isMounted is deprecated anyway so we should be able to kill this.
		finishedWork.flags&=~Placement;}if(flags&Hydrating){finishedWork.flags&=~Hydrating;}}function commitLayoutEffects(finishedWork,root,committedLanes){inProgressLanes=committedLanes;inProgressRoot=root;nextEffect=finishedWork;commitLayoutEffects_begin(finishedWork,root,committedLanes);inProgressLanes=null;inProgressRoot=null;}function commitLayoutEffects_begin(subtreeRoot,root,committedLanes){// Suspense layout effects semantics don't change for legacy roots.
		var isModernRoot=(subtreeRoot.mode&ConcurrentMode)!==NoMode;while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if(fiber.tag===OffscreenComponent&&isModernRoot){// Keep track of the current Offscreen stack's state.
		var isHidden=fiber.memoizedState!==null;var newOffscreenSubtreeIsHidden=isHidden||offscreenSubtreeIsHidden;if(newOffscreenSubtreeIsHidden){// The Offscreen tree is hidden. Skip over its layout effects.
		commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);continue;}else {// TODO (Offscreen) Also check: subtreeFlags & LayoutMask
		var current=fiber.alternate;var wasHidden=current!==null&&current.memoizedState!==null;var newOffscreenSubtreeWasHidden=wasHidden||offscreenSubtreeWasHidden;var prevOffscreenSubtreeIsHidden=offscreenSubtreeIsHidden;var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;// Traverse the Offscreen subtree with the current Offscreen as the root.
		offscreenSubtreeIsHidden=newOffscreenSubtreeIsHidden;offscreenSubtreeWasHidden=newOffscreenSubtreeWasHidden;if(offscreenSubtreeWasHidden&&!prevOffscreenSubtreeWasHidden){// This is the root of a reappearing boundary. Turn its layout effects
		// back on.
		nextEffect=fiber;reappearLayoutEffects_begin(fiber);}var child=firstChild;while(child!==null){nextEffect=child;commitLayoutEffects_begin(child,// New root; bubble back up to here and stop.
		root,committedLanes);child=child.sibling;}// Restore Offscreen state and resume in our-progress traversal.
		nextEffect=fiber;offscreenSubtreeIsHidden=prevOffscreenSubtreeIsHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);continue;}}if((fiber.subtreeFlags&LayoutMask)!==NoFlags&&firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else {commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);}}}function commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&LayoutMask)!==NoFlags){var current=fiber.alternate;setCurrentFiber(fiber);try{commitLayoutEffectOnFiber(root,current,fiber,committedLanes);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();}if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function disappearLayoutEffects_begin(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;// TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{if(fiber.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout,fiber,fiber.return);}finally{recordLayoutEffectDuration(fiber);}}else {commitHookEffectListUnmount(Layout,fiber,fiber.return);}break;}case ClassComponent:{// TODO (Offscreen) Check: flags & RefStatic
		safelyDetachRef(fiber,fiber.return);var instance=fiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(fiber,fiber.return,instance);}break;}case HostComponent:{safelyDetachRef(fiber,fiber.return);break;}case OffscreenComponent:{// Check if this is a
		var isHidden=fiber.memoizedState!==null;if(isHidden){// Nested Offscreen tree is already hidden. Don't disappear
		// its effects.
		disappearLayoutEffects_complete(subtreeRoot);continue;}break;}}// TODO (Offscreen) Check: subtreeFlags & LayoutStatic
		if(firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else {disappearLayoutEffects_complete(subtreeRoot);}}}function disappearLayoutEffects_complete(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function reappearLayoutEffects_begin(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if(fiber.tag===OffscreenComponent){var isHidden=fiber.memoizedState!==null;if(isHidden){// Nested Offscreen tree is still hidden. Don't re-appear its effects.
		reappearLayoutEffects_complete(subtreeRoot);continue;}}// TODO (Offscreen) Check: subtreeFlags & LayoutStatic
		if(firstChild!==null){// This node may have been reused from a previous render, so we can't
		// assume its return pointer is correct.
		firstChild.return=fiber;nextEffect=firstChild;}else {reappearLayoutEffects_complete(subtreeRoot);}}}function reappearLayoutEffects_complete(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;// TODO (Offscreen) Check: flags & LayoutStatic
		setCurrentFiber(fiber);try{reappearLayoutEffectsOnFiber(fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){// This node may have been reused from a previous render, so we can't
		// assume its return pointer is correct.
		sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveMountEffects(root,finishedWork,committedLanes,committedTransitions){nextEffect=finishedWork;commitPassiveMountEffects_begin(finishedWork,root,committedLanes,committedTransitions);}function commitPassiveMountEffects_begin(subtreeRoot,root,committedLanes,committedTransitions){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if((fiber.subtreeFlags&PassiveMask)!==NoFlags&&firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else {commitPassiveMountEffects_complete(subtreeRoot,root,committedLanes,committedTransitions);}}}function commitPassiveMountEffects_complete(subtreeRoot,root,committedLanes,committedTransitions){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&Passive)!==NoFlags){setCurrentFiber(fiber);try{commitPassiveMountOnFiber(root,fiber,committedLanes,committedTransitions);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();}if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveMountOnFiber(finishedRoot,finishedWork,committedLanes,committedTransitions){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(finishedWork.mode&ProfileMode){startPassiveEffectTimer();try{commitHookEffectListMount(Passive$1|HasEffect,finishedWork);}finally{recordPassiveEffectDuration(finishedWork);}}else {commitHookEffectListMount(Passive$1|HasEffect,finishedWork);}break;}}}function commitPassiveUnmountEffects(firstChild){nextEffect=firstChild;commitPassiveUnmountEffects_begin();}function commitPassiveUnmountEffects_begin(){while(nextEffect!==null){var fiber=nextEffect;var child=fiber.child;if((nextEffect.flags&ChildDeletion)!==NoFlags){var deletions=fiber.deletions;if(deletions!==null){for(var i=0;i<deletions.length;i++){var fiberToDelete=deletions[i];nextEffect=fiberToDelete;commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete,fiber);}{// A fiber was deleted from this parent fiber, but it's still part of
		// the previous (alternate) parent fiber's list of children. Because
		// children are a linked list, an earlier sibling that's still alive
		// will be connected to the deleted fiber via its `alternate`:
		//
		//   live fiber
		//   --alternate--> previous live fiber
		//   --sibling--> deleted fiber
		//
		// We can't disconnect `alternate` on nodes that haven't been deleted
		// yet, but we can disconnect the `sibling` and `child` pointers.
		var previousFiber=fiber.alternate;if(previousFiber!==null){var detachedChild=previousFiber.child;if(detachedChild!==null){previousFiber.child=null;do{var detachedSibling=detachedChild.sibling;detachedChild.sibling=null;detachedChild=detachedSibling;}while(detachedChild!==null);}}}nextEffect=fiber;}}if((fiber.subtreeFlags&PassiveMask)!==NoFlags&&child!==null){child.return=fiber;nextEffect=child;}else {commitPassiveUnmountEffects_complete();}}}function commitPassiveUnmountEffects_complete(){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&Passive)!==NoFlags){setCurrentFiber(fiber);commitPassiveUnmountOnFiber(fiber);resetCurrentFiber();}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveUnmountOnFiber(finishedWork){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(finishedWork.mode&ProfileMode){startPassiveEffectTimer();commitHookEffectListUnmount(Passive$1|HasEffect,finishedWork,finishedWork.return);recordPassiveEffectDuration(finishedWork);}else {commitHookEffectListUnmount(Passive$1|HasEffect,finishedWork,finishedWork.return);}break;}}}function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot,nearestMountedAncestor){while(nextEffect!==null){var fiber=nextEffect;// Deletion effects fire in parent -> child order
		// TODO: Check if fiber has a PassiveStatic flag
		setCurrentFiber(fiber);commitPassiveUnmountInsideDeletedTreeOnFiber(fiber,nearestMountedAncestor);resetCurrentFiber();var child=fiber.child;// TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
		// do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
		if(child!==null){child.return=fiber;nextEffect=child;}else {commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);}}}function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var sibling=fiber.sibling;var returnFiber=fiber.return;{// Recursively traverse the entire deleted tree and clean up fiber fields.
		// This is more aggressive than ideal, and the long term goal is to only
		// have to detach the deleted tree at the root.
		detachFiberAfterEffects(fiber);if(fiber===deletedSubtreeRoot){nextEffect=null;return;}}if(sibling!==null){sibling.return=returnFiber;nextEffect=sibling;return;}nextEffect=returnFiber;}}function commitPassiveUnmountInsideDeletedTreeOnFiber(current,nearestMountedAncestor){switch(current.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(current.mode&ProfileMode){startPassiveEffectTimer();commitHookEffectListUnmount(Passive$1,current,nearestMountedAncestor);recordPassiveEffectDuration(current);}else {commitHookEffectListUnmount(Passive$1,current,nearestMountedAncestor);}break;}}}// TODO: Reuse reappearLayoutEffects traversal here?
		function invokeLayoutEffectMountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListMount(Layout|HasEffect,fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}case ClassComponent:{var instance=fiber.stateNode;try{instance.componentDidMount();}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}}}}function invokePassiveEffectMountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListMount(Passive$1|HasEffect,fiber);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}}}}function invokeLayoutEffectUnmountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListUnmount(Layout|HasEffect,fiber,fiber.return);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}break;}case ClassComponent:{var instance=fiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(fiber,fiber.return,instance);}break;}}}}function invokePassiveEffectUnmountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListUnmount(Passive$1|HasEffect,fiber,fiber.return);}catch(error){captureCommitPhaseError(fiber,fiber.return,error);}}}}}if(typeof Symbol==='function'&&Symbol.for){var symbolFor=Symbol.for;symbolFor('selector.component');symbolFor('selector.has_pseudo_class');symbolFor('selector.role');symbolFor('selector.test_id');symbolFor('selector.text');}var commitHooks=[];function onCommitRoot$1(){{commitHooks.forEach(function(commitHook){return commitHook();});}}var ReactCurrentActQueue=ReactSharedInternals.ReactCurrentActQueue;function isLegacyActEnvironment(fiber){{// Legacy mode. We preserve the behavior of React 17's act. It assumes an
		// act environment whenever `jest` is defined, but you can still turn off
		// spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
		// to false.
		var isReactActEnvironmentGlobal=// $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
		typeof IS_REACT_ACT_ENVIRONMENT!=='undefined'?IS_REACT_ACT_ENVIRONMENT:undefined;// $FlowExpectedError - Flow doesn't know about jest
		var jestIsDefined=typeof jest!=='undefined';return jestIsDefined&&isReactActEnvironmentGlobal!==false;}}function isConcurrentActEnvironment(){{var isReactActEnvironmentGlobal=// $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
		typeof IS_REACT_ACT_ENVIRONMENT!=='undefined'?IS_REACT_ACT_ENVIRONMENT:undefined;if(!isReactActEnvironmentGlobal&&ReactCurrentActQueue.current!==null){// TODO: Include link to relevant documentation page.
		error('The current testing environment is not configured to support '+'act(...)');}return isReactActEnvironmentGlobal;}}var ceil=Math.ceil;var ReactCurrentDispatcher$2=ReactSharedInternals.ReactCurrentDispatcher,ReactCurrentOwner$2=ReactSharedInternals.ReactCurrentOwner,ReactCurrentBatchConfig$3=ReactSharedInternals.ReactCurrentBatchConfig,ReactCurrentActQueue$1=ReactSharedInternals.ReactCurrentActQueue;var NoContext=/*             */0;var BatchedContext=/*               */1;var RenderContext=/*                */2;var CommitContext=/*                */4;var RootInProgress=0;var RootFatalErrored=1;var RootErrored=2;var RootSuspended=3;var RootSuspendedWithDelay=4;var RootCompleted=5;var RootDidNotComplete=6;// Describes where we are in the React execution stack
		var executionContext=NoContext;// The root we're working on
		var workInProgressRoot=null;// The fiber we're working on
		var workInProgress=null;// The lanes we're rendering
		var workInProgressRootRenderLanes=NoLanes;// Stack that allows components to change the render lanes for its subtree
		// This is a superset of the lanes we started working on at the root. The only
		// case where it's different from `workInProgressRootRenderLanes` is when we
		// enter a subtree that is hidden and needs to be unhidden: Suspense and
		// Offscreen component.
		//
		// Most things in the work loop should deal with workInProgressRootRenderLanes.
		// Most things in begin/complete phases should deal with subtreeRenderLanes.
		var subtreeRenderLanes=NoLanes;var subtreeRenderLanesCursor=createCursor(NoLanes);// Whether to root completed, errored, suspended, etc.
		var workInProgressRootExitStatus=RootInProgress;// A fatal error, if one is thrown
		var workInProgressRootFatalError=null;// "Included" lanes refer to lanes that were worked on during this render. It's
		// includes unprocessed updates, not work in bailed out children.
		var workInProgressRootSkippedLanes=NoLanes;// Lanes that were updated (in an interleaved event) during this render.
		var workInProgressRootInterleavedUpdatedLanes=NoLanes;// Lanes that were updated during the render phase (*not* an interleaved event).
		var workInProgressRootPingedLanes=NoLanes;// Errors that are thrown during the render phase.
		var workInProgressRootConcurrentErrors=null;// These are errors that we recovered from without surfacing them to the UI.
		// We will log them once the tree commits.
		var workInProgressRootRecoverableErrors=null;// The most recent time we committed a fallback. This lets us ensure a train
		// model where we don't commit new loading states in too quick succession.
		var globalMostRecentFallbackTime=0;var FALLBACK_THROTTLE_MS=500;// The absolute time for when we should start giving up on rendering
		// more and prefer CPU suspense heuristics instead.
		var workInProgressRootRenderTargetTime=Infinity;// How long a render is supposed to take before we start following CPU
		// suspense heuristics and opt out of rendering more content.
		var RENDER_TIMEOUT_MS=500;var workInProgressTransitions=null;function resetRenderTimer(){workInProgressRootRenderTargetTime=now()+RENDER_TIMEOUT_MS;}function getRenderTargetTime(){return workInProgressRootRenderTargetTime;}var hasUncaughtError=false;var firstUncaughtError=null;var legacyErrorBoundariesThatAlreadyFailed=null;// Only used when enableProfilerNestedUpdateScheduledHook is true;
		var rootDoesHavePassiveEffects=false;var rootWithPendingPassiveEffects=null;var pendingPassiveEffectsLanes=NoLanes;var pendingPassiveProfilerEffects=[];var pendingPassiveTransitions=null;// Use these to prevent an infinite loop of nested updates
		var NESTED_UPDATE_LIMIT=50;var nestedUpdateCount=0;var rootWithNestedUpdates=null;var isFlushingPassiveEffects=false;var didScheduleUpdateDuringPassiveEffects=false;var NESTED_PASSIVE_UPDATE_LIMIT=50;var nestedPassiveUpdateCount=0;var rootWithPassiveNestedUpdates=null;// If two updates are scheduled within the same event, we should treat their
		// event times as simultaneous, even if the actual clock time has advanced
		// between the first and second call.
		var currentEventTime=NoTimestamp;var currentEventTransitionLane=NoLanes;var isRunningInsertionEffect=false;function getWorkInProgressRoot(){return workInProgressRoot;}function requestEventTime(){if((executionContext&(RenderContext|CommitContext))!==NoContext){// We're inside React, so it's fine to read the actual time.
		return now();}// We're not inside React, so we may be in the middle of a browser event.
		if(currentEventTime!==NoTimestamp){// Use the same start time for all updates until we enter React again.
		return currentEventTime;}// This is the first update since React yielded. Compute a new start time.
		currentEventTime=now();return currentEventTime;}function requestUpdateLane(fiber){// Special cases
		var mode=fiber.mode;if((mode&ConcurrentMode)===NoMode){return SyncLane;}else if((executionContext&RenderContext)!==NoContext&&workInProgressRootRenderLanes!==NoLanes){// This is a render phase update. These are not officially supported. The
		// old behavior is to give this the same "thread" (lanes) as
		// whatever is currently rendering. So if you call `setState` on a component
		// that happens later in the same render, it will flush. Ideally, we want to
		// remove the special case and treat them as if they came from an
		// interleaved event. Regardless, this pattern is not officially supported.
		// This behavior is only a fallback. The flag only exists until we can roll
		// out the setState warning, since existing code might accidentally rely on
		// the current behavior.
		return pickArbitraryLane(workInProgressRootRenderLanes);}var isTransition=requestCurrentTransition()!==NoTransition;if(isTransition){if(ReactCurrentBatchConfig$3.transition!==null){var transition=ReactCurrentBatchConfig$3.transition;if(!transition._updatedFibers){transition._updatedFibers=new Set();}transition._updatedFibers.add(fiber);}// The algorithm for assigning an update to a lane should be stable for all
		// updates at the same priority within the same event. To do this, the
		// inputs to the algorithm must be the same.
		//
		// The trick we use is to cache the first of each of these inputs within an
		// event. Then reset the cached values once we can be sure the event is
		// over. Our heuristic for that is whenever we enter a concurrent work loop.
		if(currentEventTransitionLane===NoLane){// All transitions within the same event are assigned the same lane.
		currentEventTransitionLane=claimNextTransitionLane();}return currentEventTransitionLane;}// Updates originating inside certain React methods, like flushSync, have
		// their priority set by tracking it with a context variable.
		//
		// The opaque type returned by the host config is internally a lane, so we can
		// use that directly.
		// TODO: Move this type conversion to the event priority module.
		var updateLane=getCurrentUpdatePriority();if(updateLane!==NoLane){return updateLane;}// This update originated outside React. Ask the host environment for an
		// appropriate priority, based on the type of event.
		//
		// The opaque type returned by the host config is internally a lane, so we can
		// use that directly.
		// TODO: Move this type conversion to the event priority module.
		var eventLane=getCurrentEventPriority();return eventLane;}function requestRetryLane(fiber){// This is a fork of `requestUpdateLane` designed specifically for Suspense
		// "retries" — a special update that attempts to flip a Suspense boundary
		// from its placeholder state to its primary/resolved state.
		// Special cases
		var mode=fiber.mode;if((mode&ConcurrentMode)===NoMode){return SyncLane;}return claimNextRetryLane();}function scheduleUpdateOnFiber(root,fiber,lane,eventTime){checkForNestedUpdates();{if(isRunningInsertionEffect){error('useInsertionEffect must not schedule updates.');}}{if(isFlushingPassiveEffects){didScheduleUpdateDuringPassiveEffects=true;}}// Mark that the root has a pending update.
		markRootUpdated(root,lane,eventTime);if((executionContext&RenderContext)!==NoLanes&&root===workInProgressRoot){// This update was dispatched during the render phase. This is a mistake
		// if the update originates from user space (with the exception of local
		// hook updates, which are handled differently and don't reach this
		// function), but there are some internal React features that use this as
		// an implementation detail, like selective hydration.
		warnAboutRenderPhaseUpdatesInDEV(fiber);// Track lanes that were updated during the render phase
		}else {// This is a normal update, scheduled from outside the render phase. For
		// example, during an input event.
		{if(isDevToolsPresent){addFiberToLanesMap(root,fiber,lane);}}warnIfUpdatesNotWrappedWithActDEV(fiber);if(root===workInProgressRoot){// Received an update to a tree that's in the middle of rendering. Mark
		// that there was an interleaved update work on this root. Unless the
		// `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
		// phase update. In that case, we don't treat render phase updates as if
		// they were interleaved, for backwards compat reasons.
		if((executionContext&RenderContext)===NoContext){workInProgressRootInterleavedUpdatedLanes=mergeLanes(workInProgressRootInterleavedUpdatedLanes,lane);}if(workInProgressRootExitStatus===RootSuspendedWithDelay){// The root already suspended with a delay, which means this render
		// definitely won't finish. Since we have a new update, let's mark it as
		// suspended now, right before marking the incoming update. This has the
		// effect of interrupting the current render and switching to the update.
		// TODO: Make sure this doesn't override pings that happen while we've
		// already started rendering.
		markRootSuspended$1(root,workInProgressRootRenderLanes);}}ensureRootIsScheduled(root,eventTime);if(lane===SyncLane&&executionContext===NoContext&&(fiber.mode&ConcurrentMode)===NoMode&&// Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
		!ReactCurrentActQueue$1.isBatchingLegacy){// Flush the synchronous work now, unless we're already working or inside
		// a batch. This is intentionally inside scheduleUpdateOnFiber instead of
		// scheduleCallbackForFiber to preserve the ability to schedule a callback
		// without immediately flushing it. We only do this for user-initiated
		// updates, to preserve historical behavior of legacy mode.
		resetRenderTimer();flushSyncCallbacksOnlyInLegacyMode();}}}function scheduleInitialHydrationOnRoot(root,lane,eventTime){// This is a special fork of scheduleUpdateOnFiber that is only used to
		// schedule the initial hydration of a root that has just been created. Most
		// of the stuff in scheduleUpdateOnFiber can be skipped.
		//
		// The main reason for this separate path, though, is to distinguish the
		// initial children from subsequent updates. In fully client-rendered roots
		// (createRoot instead of hydrateRoot), all top-level renders are modeled as
		// updates, but hydration roots are special because the initial render must
		// match what was rendered on the server.
		var current=root.current;current.lanes=lane;markRootUpdated(root,lane,eventTime);ensureRootIsScheduled(root,eventTime);}function isUnsafeClassRenderPhaseUpdate(fiber){// Check if this is a render phase update. Only called by class components,
		// which special (deprecated) behavior for UNSAFE_componentWillReceive props.
		return(// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
		// decided not to enable it.
		(executionContext&RenderContext)!==NoContext);}// Use this function to schedule a task for a root. There's only one task per
		// root; if a task was already scheduled, we'll check to make sure the priority
		// of the existing task is the same as the priority of the next level that the
		// root has work on. This function is called on every update, and right before
		// exiting a task.
		function ensureRootIsScheduled(root,currentTime){var existingCallbackNode=root.callbackNode;// Check if any lanes are being starved by other work. If so, mark them as
		// expired so we know to work on those next.
		markStarvedLanesAsExpired(root,currentTime);// Determine the next lanes to work on, and their priority.
		var nextLanes=getNextLanes(root,root===workInProgressRoot?workInProgressRootRenderLanes:NoLanes);if(nextLanes===NoLanes){// Special case: There's nothing to work on.
		if(existingCallbackNode!==null){cancelCallback$1(existingCallbackNode);}root.callbackNode=null;root.callbackPriority=NoLane;return;}// We use the highest priority lane to represent the priority of the callback.
		var newCallbackPriority=getHighestPriorityLane(nextLanes);// Check if there's an existing task. We may be able to reuse it.
		var existingCallbackPriority=root.callbackPriority;if(existingCallbackPriority===newCallbackPriority&&// Special case related to `act`. If the currently scheduled task is a
		// Scheduler task, rather than an `act` task, cancel it and re-scheduled
		// on the `act` queue.
		!(ReactCurrentActQueue$1.current!==null&&existingCallbackNode!==fakeActCallbackNode)){{// If we're going to re-use an existing task, it needs to exist.
		// Assume that discrete update microtasks are non-cancellable and null.
		// TODO: Temporary until we confirm this warning is not fired.
		if(existingCallbackNode==null&&existingCallbackPriority!==SyncLane){error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');}}// The priority hasn't changed. We can reuse the existing task. Exit.
		return;}if(existingCallbackNode!=null){// Cancel the existing callback. We'll schedule a new one below.
		cancelCallback$1(existingCallbackNode);}// Schedule a new callback.
		var newCallbackNode;if(newCallbackPriority===SyncLane){// Special case: Sync React callbacks are scheduled on a special
		// internal queue
		if(root.tag===LegacyRoot){if(ReactCurrentActQueue$1.isBatchingLegacy!==null){ReactCurrentActQueue$1.didScheduleLegacyUpdate=true;}scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null,root));}else {scheduleSyncCallback(performSyncWorkOnRoot.bind(null,root));}{// Flush the queue in a microtask.
		if(ReactCurrentActQueue$1.current!==null){// Inside `act`, use our internal `act` queue so that these get flushed
		// at the end of the current scope even when using the sync version
		// of `act`.
		ReactCurrentActQueue$1.current.push(flushSyncCallbacks);}else {scheduleMicrotask(function(){// In Safari, appending an iframe forces microtasks to run.
		// https://github.com/facebook/react/issues/22459
		// We don't support running callbacks in the middle of render
		// or commit so we need to check against that.
		if((executionContext&(RenderContext|CommitContext))===NoContext){// Note that this would still prematurely flush the callbacks
		// if this happens outside render or commit phase (e.g. in an event).
		flushSyncCallbacks();}});}}newCallbackNode=null;}else {var schedulerPriorityLevel;switch(lanesToEventPriority(nextLanes)){case DiscreteEventPriority:schedulerPriorityLevel=ImmediatePriority;break;case ContinuousEventPriority:schedulerPriorityLevel=UserBlockingPriority;break;case DefaultEventPriority:schedulerPriorityLevel=NormalPriority;break;case IdleEventPriority:schedulerPriorityLevel=IdlePriority;break;default:schedulerPriorityLevel=NormalPriority;break;}newCallbackNode=scheduleCallback$1(schedulerPriorityLevel,performConcurrentWorkOnRoot.bind(null,root));}root.callbackPriority=newCallbackPriority;root.callbackNode=newCallbackNode;}// This is the entry point for every concurrent task, i.e. anything that
		// goes through Scheduler.
		function performConcurrentWorkOnRoot(root,didTimeout){{resetNestedUpdateFlag();}// Since we know we're in a React event, we can clear the current
		// event time. The next update will compute a new event time.
		currentEventTime=NoTimestamp;currentEventTransitionLane=NoLanes;if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}// Flush any pending passive effects before deciding which lanes to work on,
		// in case they schedule additional work.
		var originalCallbackNode=root.callbackNode;var didFlushPassiveEffects=flushPassiveEffects();if(didFlushPassiveEffects){// Something in the passive effect phase may have canceled the current task.
		// Check if the task node for this root was changed.
		if(root.callbackNode!==originalCallbackNode){// The current task was canceled. Exit. We don't need to call
		// `ensureRootIsScheduled` because the check above implies either that
		// there's a new task, or that there's no remaining work on this root.
		return null;}}// Determine the next lanes to work on, using the fields stored
		// on the root.
		var lanes=getNextLanes(root,root===workInProgressRoot?workInProgressRootRenderLanes:NoLanes);if(lanes===NoLanes){// Defensive coding. This is never expected to happen.
		return null;}// We disable time-slicing in some cases: if the work has been CPU-bound
		// for too long ("expired" work, to prevent starvation), or we're in
		// sync-updates-by-default mode.
		// TODO: We only check `didTimeout` defensively, to account for a Scheduler
		// bug we're still investigating. Once the bug in Scheduler is fixed,
		// we can remove this, since we track expiration ourselves.
		var shouldTimeSlice=!includesBlockingLane(root,lanes)&&!includesExpiredLane(root,lanes)&&!didTimeout;var exitStatus=shouldTimeSlice?renderRootConcurrent(root,lanes):renderRootSync(root,lanes);if(exitStatus!==RootInProgress){if(exitStatus===RootErrored){// If something threw an error, try rendering one more time. We'll
		// render synchronously to block concurrent data mutations, and we'll
		// includes all pending updates are included. If it still fails after
		// the second attempt, we'll give up and commit the resulting tree.
		var errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(errorRetryLanes!==NoLanes){lanes=errorRetryLanes;exitStatus=recoverFromConcurrentError(root,errorRetryLanes);}}if(exitStatus===RootFatalErrored){var fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now());throw fatalError;}if(exitStatus===RootDidNotComplete){// The render unwound without completing the tree. This happens in special
		// cases where need to exit the current render without producing a
		// consistent tree or committing.
		//
		// This should only happen during a concurrent render, not a discrete or
		// synchronous update. We should have already checked for this when we
		// unwound the stack.
		markRootSuspended$1(root,lanes);}else {// The render completed.
		// Check if this render may have yielded to a concurrent event, and if so,
		// confirm that any newly rendered stores are consistent.
		// TODO: It's possible that even a concurrent render may never have yielded
		// to the main thread, if it was fast enough, or if it expired. We could
		// skip the consistency check in that case, too.
		var renderWasConcurrent=!includesBlockingLane(root,lanes);var finishedWork=root.current.alternate;if(renderWasConcurrent&&!isRenderConsistentWithExternalStores(finishedWork)){// A store was mutated in an interleaved event. Render again,
		// synchronously, to block further mutations.
		exitStatus=renderRootSync(root,lanes);// We need to check again if something threw
		if(exitStatus===RootErrored){var _errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(_errorRetryLanes!==NoLanes){lanes=_errorRetryLanes;exitStatus=recoverFromConcurrentError(root,_errorRetryLanes);// We assume the tree is now consistent because we didn't yield to any
		// concurrent events.
		}}if(exitStatus===RootFatalErrored){var _fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now());throw _fatalError;}}// We now have a consistent tree. The next step is either to commit it,
		// or, if something suspended, wait to commit it after a timeout.
		root.finishedWork=finishedWork;root.finishedLanes=lanes;finishConcurrentRender(root,exitStatus,lanes);}}ensureRootIsScheduled(root,now());if(root.callbackNode===originalCallbackNode){// The task node scheduled for this root is the same one that's
		// currently executed. Need to return a continuation.
		return performConcurrentWorkOnRoot.bind(null,root);}return null;}function recoverFromConcurrentError(root,errorRetryLanes){// If an error occurred during hydration, discard server response and fall
		// back to client side render.
		// Before rendering again, save the errors from the previous attempt.
		var errorsFromFirstAttempt=workInProgressRootConcurrentErrors;if(isRootDehydrated(root)){// The shell failed to hydrate. Set a flag to force a client rendering
		// during the next attempt. To do this, we call prepareFreshStack now
		// to create the root work-in-progress fiber. This is a bit weird in terms
		// of factoring, because it relies on renderRootSync not calling
		// prepareFreshStack again in the call below, which happens because the
		// root and lanes haven't changed.
		//
		// TODO: I think what we should do is set ForceClientRender inside
		// throwException, like we do for nested Suspense boundaries. The reason
		// it's here instead is so we can switch to the synchronous work loop, too.
		// Something to consider for a future refactor.
		var rootWorkInProgress=prepareFreshStack(root,errorRetryLanes);rootWorkInProgress.flags|=ForceClientRender;{errorHydratingContainer(root.containerInfo);}}var exitStatus=renderRootSync(root,errorRetryLanes);if(exitStatus!==RootErrored){// Successfully finished rendering on retry
		// The errors from the failed first attempt have been recovered. Add
		// them to the collection of recoverable errors. We'll log them in the
		// commit phase.
		var errorsFromSecondAttempt=workInProgressRootRecoverableErrors;workInProgressRootRecoverableErrors=errorsFromFirstAttempt;// The errors from the second attempt should be queued after the errors
		// from the first attempt, to preserve the causal sequence.
		if(errorsFromSecondAttempt!==null){queueRecoverableErrors(errorsFromSecondAttempt);}}return exitStatus;}function queueRecoverableErrors(errors){if(workInProgressRootRecoverableErrors===null){workInProgressRootRecoverableErrors=errors;}else {workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors,errors);}}function finishConcurrentRender(root,exitStatus,lanes){switch(exitStatus){case RootInProgress:case RootFatalErrored:{throw new Error('Root did not complete. This is a bug in React.');}// Flow knows about invariant, so it complains if I add a break
		// statement, but eslint doesn't know about invariant, so it complains
		// if I do. eslint-disable-next-line no-fallthrough
		case RootErrored:{// We should have already attempted to retry this tree. If we reached
		// this point, it errored again. Commit it.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}case RootSuspended:{markRootSuspended$1(root,lanes);// We have an acceptable loading state. We need to figure out if we
		// should immediately commit it or wait a bit.
		if(includesOnlyRetries(lanes)&&// do not delay if we're inside an act() scope
		!shouldForceFlushFallbacksInDEV()){// This render only included retries, no updates. Throttle committing
		// retries so that we don't show too many loading states too quickly.
		var msUntilTimeout=globalMostRecentFallbackTime+FALLBACK_THROTTLE_MS-now();// Don't bother with a very short suspense time.
		if(msUntilTimeout>10){var nextLanes=getNextLanes(root,NoLanes);if(nextLanes!==NoLanes){// There's additional work on this root.
		break;}var suspendedLanes=root.suspendedLanes;if(!isSubsetOfLanes(suspendedLanes,lanes)){// We should prefer to render the fallback of at the last
		// suspended level. Ping the last suspended level to try
		// rendering it again.
		// FIXME: What if the suspended lanes are Idle? Should not restart.
		requestEventTime();markRootPinged(root,suspendedLanes);break;}// The render is suspended, it hasn't timed out, and there's no
		// lower priority work to do. Instead of committing the fallback
		// immediately, wait for more data to arrive.
		root.timeoutHandle=scheduleTimeout(commitRoot.bind(null,root,workInProgressRootRecoverableErrors,workInProgressTransitions),msUntilTimeout);break;}}// The work expired. Commit immediately.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}case RootSuspendedWithDelay:{markRootSuspended$1(root,lanes);if(includesOnlyTransitions(lanes)){// This is a transition, so we should exit without committing a
		// placeholder and without scheduling a timeout. Delay indefinitely
		// until we receive more data.
		break;}if(!shouldForceFlushFallbacksInDEV()){// This is not a transition, but we did trigger an avoided state.
		// Schedule a placeholder to display after a short delay, using the Just
		// Noticeable Difference.
		// TODO: Is the JND optimization worth the added complexity? If this is
		// the only reason we track the event time, then probably not.
		// Consider removing.
		var mostRecentEventTime=getMostRecentEventTime(root,lanes);var eventTimeMs=mostRecentEventTime;var timeElapsedMs=now()-eventTimeMs;var _msUntilTimeout=jnd(timeElapsedMs)-timeElapsedMs;// Don't bother with a very short suspense time.
		if(_msUntilTimeout>10){// Instead of committing the fallback immediately, wait for more data
		// to arrive.
		root.timeoutHandle=scheduleTimeout(commitRoot.bind(null,root,workInProgressRootRecoverableErrors,workInProgressTransitions),_msUntilTimeout);break;}}// Commit the placeholder.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}case RootCompleted:{// The work completed. Ready to commit.
		commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);break;}default:{throw new Error('Unknown root exit status.');}}}function isRenderConsistentWithExternalStores(finishedWork){// Search the rendered tree for external store reads, and check whether the
		// stores were mutated in a concurrent event. Intentionally using an iterative
		// loop instead of recursion so we can exit early.
		var node=finishedWork;while(true){if(node.flags&StoreConsistency){var updateQueue=node.updateQueue;if(updateQueue!==null){var checks=updateQueue.stores;if(checks!==null){for(var i=0;i<checks.length;i++){var check=checks[i];var getSnapshot=check.getSnapshot;var renderedValue=check.value;try{if(!objectIs(getSnapshot(),renderedValue)){// Found an inconsistent store.
		return false;}}catch(error){// If `getSnapshot` throws, return `false`. This will schedule
		// a re-render, and the error will be rethrown during render.
		return false;}}}}}var child=node.child;if(node.subtreeFlags&StoreConsistency&&child!==null){child.return=node;node=child;continue;}if(node===finishedWork){return true;}while(node.sibling===null){if(node.return===null||node.return===finishedWork){return true;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}// Flow doesn't know this is unreachable, but eslint does
		// eslint-disable-next-line no-unreachable
		return true;}function markRootSuspended$1(root,suspendedLanes){// When suspending, we should always exclude lanes that were pinged or (more
		// rarely, since we try to avoid it) updated during the render phase.
		// TODO: Lol maybe there's a better way to factor this besides this
		// obnoxiously named function :)
		suspendedLanes=removeLanes(suspendedLanes,workInProgressRootPingedLanes);suspendedLanes=removeLanes(suspendedLanes,workInProgressRootInterleavedUpdatedLanes);markRootSuspended(root,suspendedLanes);}// This is the entry point for synchronous tasks that don't go
		// through Scheduler
		function performSyncWorkOnRoot(root){{syncNestedUpdateFlag();}if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}flushPassiveEffects();var lanes=getNextLanes(root,NoLanes);if(!includesSomeLane(lanes,SyncLane)){// There's no remaining sync work left.
		ensureRootIsScheduled(root,now());return null;}var exitStatus=renderRootSync(root,lanes);if(root.tag!==LegacyRoot&&exitStatus===RootErrored){// If something threw an error, try rendering one more time. We'll render
		// synchronously to block concurrent data mutations, and we'll includes
		// all pending updates are included. If it still fails after the second
		// attempt, we'll give up and commit the resulting tree.
		var errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(errorRetryLanes!==NoLanes){lanes=errorRetryLanes;exitStatus=recoverFromConcurrentError(root,errorRetryLanes);}}if(exitStatus===RootFatalErrored){var fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now());throw fatalError;}if(exitStatus===RootDidNotComplete){throw new Error('Root did not complete. This is a bug in React.');}// We now have a consistent tree. Because this is a sync render, we
		// will commit it even if something suspended.
		var finishedWork=root.current.alternate;root.finishedWork=finishedWork;root.finishedLanes=lanes;commitRoot(root,workInProgressRootRecoverableErrors,workInProgressTransitions);// Before exiting, make sure there's a callback scheduled for the next
		// pending level.
		ensureRootIsScheduled(root,now());return null;}function flushRoot(root,lanes){if(lanes!==NoLanes){markRootEntangled(root,mergeLanes(lanes,SyncLane));ensureRootIsScheduled(root,now());if((executionContext&(RenderContext|CommitContext))===NoContext){resetRenderTimer();flushSyncCallbacks();}}}function batchedUpdates$1(fn,a){var prevExecutionContext=executionContext;executionContext|=BatchedContext;try{return fn(a);}finally{executionContext=prevExecutionContext;// If there were legacy sync updates, flush them at the end of the outer
		// most batchedUpdates-like method.
		if(executionContext===NoContext&&// Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
		!ReactCurrentActQueue$1.isBatchingLegacy){resetRenderTimer();flushSyncCallbacksOnlyInLegacyMode();}}}function discreteUpdates(fn,a,b,c,d){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$3.transition;try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);return fn(a,b,c,d);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;if(executionContext===NoContext){resetRenderTimer();}}}// Overload the definition to the two valid signatures.
		// Warning, this opts-out of checking the function body.
		// eslint-disable-next-line no-redeclare
		function flushSync(fn){// In legacy mode, we flush pending passive effects at the beginning of the
		// next event, not at the end of the previous one.
		if(rootWithPendingPassiveEffects!==null&&rootWithPendingPassiveEffects.tag===LegacyRoot&&(executionContext&(RenderContext|CommitContext))===NoContext){flushPassiveEffects();}var prevExecutionContext=executionContext;executionContext|=BatchedContext;var prevTransition=ReactCurrentBatchConfig$3.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);if(fn){return fn();}else {return undefined;}}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;executionContext=prevExecutionContext;// Flush the immediate callbacks that were scheduled during this batch.
		// Note that this will happen even if batchedUpdates is higher up
		// the stack.
		if((executionContext&(RenderContext|CommitContext))===NoContext){flushSyncCallbacks();}}}function isAlreadyRendering(){// Used by the renderer to print a warning if certain APIs are called from
		// the wrong context.
		return (executionContext&(RenderContext|CommitContext))!==NoContext;}function pushRenderLanes(fiber,lanes){push(subtreeRenderLanesCursor,subtreeRenderLanes,fiber);subtreeRenderLanes=mergeLanes(subtreeRenderLanes,lanes);}function popRenderLanes(fiber){subtreeRenderLanes=subtreeRenderLanesCursor.current;pop(subtreeRenderLanesCursor,fiber);}function prepareFreshStack(root,lanes){root.finishedWork=null;root.finishedLanes=NoLanes;var timeoutHandle=root.timeoutHandle;if(timeoutHandle!==noTimeout){// The root previous suspended and scheduled a timeout to commit a fallback
		// state. Now that we have additional work, cancel the timeout.
		root.timeoutHandle=noTimeout;// $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
		cancelTimeout(timeoutHandle);}if(workInProgress!==null){var interruptedWork=workInProgress.return;while(interruptedWork!==null){var current=interruptedWork.alternate;unwindInterruptedWork(current,interruptedWork);interruptedWork=interruptedWork.return;}}workInProgressRoot=root;var rootWorkInProgress=createWorkInProgress(root.current,null);workInProgress=rootWorkInProgress;workInProgressRootRenderLanes=subtreeRenderLanes=lanes;workInProgressRootExitStatus=RootInProgress;workInProgressRootFatalError=null;workInProgressRootSkippedLanes=NoLanes;workInProgressRootInterleavedUpdatedLanes=NoLanes;workInProgressRootPingedLanes=NoLanes;workInProgressRootConcurrentErrors=null;workInProgressRootRecoverableErrors=null;finishQueueingConcurrentUpdates();{ReactStrictModeWarnings.discardPendingWarnings();}return rootWorkInProgress;}function handleError(root,thrownValue){do{var erroredWork=workInProgress;try{// Reset module-level state that was set during the render phase.
		resetContextDependencies();resetHooksAfterThrow();resetCurrentFiber();// TODO: I found and added this missing line while investigating a
		// separate issue. Write a regression test using string refs.
		ReactCurrentOwner$2.current=null;if(erroredWork===null||erroredWork.return===null){// Expected to be working on a non-root fiber. This is a fatal error
		// because there's no ancestor that can handle it; the root is
		// supposed to capture all errors that weren't caught by an error
		// boundary.
		workInProgressRootExitStatus=RootFatalErrored;workInProgressRootFatalError=thrownValue;// Set `workInProgress` to null. This represents advancing to the next
		// sibling, or the parent if there are no siblings. But since the root
		// has no siblings nor a parent, we set it to null. Usually this is
		// handled by `completeUnitOfWork` or `unwindWork`, but since we're
		// intentionally not calling those, we need set it here.
		// TODO: Consider calling `unwindWork` to pop the contexts.
		workInProgress=null;return;}if(enableProfilerTimer&&erroredWork.mode&ProfileMode){// Record the time spent rendering before an error was thrown. This
		// avoids inaccurate Profiler durations in the case of a
		// suspended render.
		stopProfilerTimerIfRunningAndRecordDelta(erroredWork,true);}if(enableSchedulingProfiler){markComponentRenderStopped();if(thrownValue!==null&&typeof thrownValue==='object'&&typeof thrownValue.then==='function'){var wakeable=thrownValue;markComponentSuspended(erroredWork,wakeable,workInProgressRootRenderLanes);}else {markComponentErrored(erroredWork,thrownValue,workInProgressRootRenderLanes);}}throwException(root,erroredWork.return,erroredWork,thrownValue,workInProgressRootRenderLanes);completeUnitOfWork(erroredWork);}catch(yetAnotherThrownValue){// Something in the return path also threw.
		thrownValue=yetAnotherThrownValue;if(workInProgress===erroredWork&&erroredWork!==null){// If this boundary has already errored, then we had trouble processing
		// the error. Bubble it to the next boundary.
		erroredWork=erroredWork.return;workInProgress=erroredWork;}else {erroredWork=workInProgress;}continue;}// Return to the normal work loop.
		return;}while(true);}function pushDispatcher(){var prevDispatcher=ReactCurrentDispatcher$2.current;ReactCurrentDispatcher$2.current=ContextOnlyDispatcher;if(prevDispatcher===null){// The React isomorphic package does not include a default dispatcher.
		// Instead the first renderer will lazily attach one, in order to give
		// nicer error messages.
		return ContextOnlyDispatcher;}else {return prevDispatcher;}}function popDispatcher(prevDispatcher){ReactCurrentDispatcher$2.current=prevDispatcher;}function markCommitTimeOfFallback(){globalMostRecentFallbackTime=now();}function markSkippedUpdateLanes(lane){workInProgressRootSkippedLanes=mergeLanes(lane,workInProgressRootSkippedLanes);}function renderDidSuspend(){if(workInProgressRootExitStatus===RootInProgress){workInProgressRootExitStatus=RootSuspended;}}function renderDidSuspendDelayIfPossible(){if(workInProgressRootExitStatus===RootInProgress||workInProgressRootExitStatus===RootSuspended||workInProgressRootExitStatus===RootErrored){workInProgressRootExitStatus=RootSuspendedWithDelay;}// Check if there are updates that we skipped tree that might have unblocked
		// this render.
		if(workInProgressRoot!==null&&(includesNonIdleWork(workInProgressRootSkippedLanes)||includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))){// Mark the current render as suspended so that we switch to working on
		// the updates that were skipped. Usually we only suspend at the end of
		// the render phase.
		// TODO: We should probably always mark the root as suspended immediately
		// (inside this function), since by suspending at the end of the render
		// phase introduces a potential mistake where we suspend lanes that were
		// pinged or updated while we were rendering.
		markRootSuspended$1(workInProgressRoot,workInProgressRootRenderLanes);}}function renderDidError(error){if(workInProgressRootExitStatus!==RootSuspendedWithDelay){workInProgressRootExitStatus=RootErrored;}if(workInProgressRootConcurrentErrors===null){workInProgressRootConcurrentErrors=[error];}else {workInProgressRootConcurrentErrors.push(error);}}// Called during render to determine if anything has suspended.
		// Returns false if we're not sure.
		function renderHasNotSuspendedYet(){// If something errored or completed, we can't really be sure,
		// so those are false.
		return workInProgressRootExitStatus===RootInProgress;}function renderRootSync(root,lanes){var prevExecutionContext=executionContext;executionContext|=RenderContext;var prevDispatcher=pushDispatcher();// If the root or lanes have changed, throw out the existing stack
		// and prepare a fresh one. Otherwise we'll continue where we left off.
		if(workInProgressRoot!==root||workInProgressRootRenderLanes!==lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;if(memoizedUpdaters.size>0){restorePendingUpdaters(root,workInProgressRootRenderLanes);memoizedUpdaters.clear();}// At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
		// If we bailout on this work, we'll move them back (like above).
		// It's important to move them now in case the work spawns more work at the same priority with different updaters.
		// That way we can keep the current update and future updates separate.
		movePendingFibersToMemoized(root,lanes);}}workInProgressTransitions=getTransitionsForLanes();prepareFreshStack(root,lanes);}{markRenderStarted(lanes);}do{try{workLoopSync();break;}catch(thrownValue){handleError(root,thrownValue);}}while(true);resetContextDependencies();executionContext=prevExecutionContext;popDispatcher(prevDispatcher);if(workInProgress!==null){// This is a sync render, so we should have finished the whole tree.
		throw new Error('Cannot commit an incomplete root. This error is likely caused by a '+'bug in React. Please file an issue.');}{markRenderStopped();}// Set this to null to indicate there's no in-progress render.
		workInProgressRoot=null;workInProgressRootRenderLanes=NoLanes;return workInProgressRootExitStatus;}// The work loop is an extremely hot path. Tell Closure not to inline it.
		/** @noinline */function workLoopSync(){// Already timed out, so perform work without checking if we need to yield.
		while(workInProgress!==null){performUnitOfWork(workInProgress);}}function renderRootConcurrent(root,lanes){var prevExecutionContext=executionContext;executionContext|=RenderContext;var prevDispatcher=pushDispatcher();// If the root or lanes have changed, throw out the existing stack
		// and prepare a fresh one. Otherwise we'll continue where we left off.
		if(workInProgressRoot!==root||workInProgressRootRenderLanes!==lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;if(memoizedUpdaters.size>0){restorePendingUpdaters(root,workInProgressRootRenderLanes);memoizedUpdaters.clear();}// At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
		// If we bailout on this work, we'll move them back (like above).
		// It's important to move them now in case the work spawns more work at the same priority with different updaters.
		// That way we can keep the current update and future updates separate.
		movePendingFibersToMemoized(root,lanes);}}workInProgressTransitions=getTransitionsForLanes();resetRenderTimer();prepareFreshStack(root,lanes);}{markRenderStarted(lanes);}do{try{workLoopConcurrent();break;}catch(thrownValue){handleError(root,thrownValue);}}while(true);resetContextDependencies();popDispatcher(prevDispatcher);executionContext=prevExecutionContext;if(workInProgress!==null){// Still work remaining.
		{markRenderYielded();}return RootInProgress;}else {// Completed the tree.
		{markRenderStopped();}// Set this to null to indicate there's no in-progress render.
		workInProgressRoot=null;workInProgressRootRenderLanes=NoLanes;// Return the final exit status.
		return workInProgressRootExitStatus;}}/** @noinline */function workLoopConcurrent(){// Perform work until Scheduler asks us to yield
		while(workInProgress!==null&&!shouldYield()){performUnitOfWork(workInProgress);}}function performUnitOfWork(unitOfWork){// The current, flushed, state of this fiber is the alternate. Ideally
		// nothing should rely on this, but relying on it here means that we don't
		// need an additional field on the work in progress.
		var current=unitOfWork.alternate;setCurrentFiber(unitOfWork);var next;if((unitOfWork.mode&ProfileMode)!==NoMode){startProfilerTimer(unitOfWork);next=beginWork$1(current,unitOfWork,subtreeRenderLanes);stopProfilerTimerIfRunningAndRecordDelta(unitOfWork,true);}else {next=beginWork$1(current,unitOfWork,subtreeRenderLanes);}resetCurrentFiber();unitOfWork.memoizedProps=unitOfWork.pendingProps;if(next===null){// If this doesn't spawn new work, complete the current work.
		completeUnitOfWork(unitOfWork);}else {workInProgress=next;}ReactCurrentOwner$2.current=null;}function completeUnitOfWork(unitOfWork){// Attempt to complete the current unit of work, then move to the next
		// sibling. If there are no more siblings, return to the parent fiber.
		var completedWork=unitOfWork;do{// The current, flushed, state of this fiber is the alternate. Ideally
		// nothing should rely on this, but relying on it here means that we don't
		// need an additional field on the work in progress.
		var current=completedWork.alternate;var returnFiber=completedWork.return;// Check if the work completed or if something threw.
		if((completedWork.flags&Incomplete)===NoFlags){setCurrentFiber(completedWork);var next=void 0;if((completedWork.mode&ProfileMode)===NoMode){next=completeWork(current,completedWork,subtreeRenderLanes);}else {startProfilerTimer(completedWork);next=completeWork(current,completedWork,subtreeRenderLanes);// Update render duration assuming we didn't error.
		stopProfilerTimerIfRunningAndRecordDelta(completedWork,false);}resetCurrentFiber();if(next!==null){// Completing this fiber spawned new work. Work on that next.
		workInProgress=next;return;}}else {// This fiber did not complete because something threw. Pop values off
		// the stack without entering the complete phase. If this is a boundary,
		// capture values if possible.
		var _next=unwindWork(current,completedWork);// Because this fiber did not complete, don't reset its lanes.
		if(_next!==null){// If completing this work spawned new work, do that next. We'll come
		// back here again.
		// Since we're restarting, remove anything that is not a host effect
		// from the effect tag.
		_next.flags&=HostEffectMask;workInProgress=_next;return;}if((completedWork.mode&ProfileMode)!==NoMode){// Record the render duration for the fiber that errored.
		stopProfilerTimerIfRunningAndRecordDelta(completedWork,false);// Include the time spent working on failed children before continuing.
		var actualDuration=completedWork.actualDuration;var child=completedWork.child;while(child!==null){actualDuration+=child.actualDuration;child=child.sibling;}completedWork.actualDuration=actualDuration;}if(returnFiber!==null){// Mark the parent fiber as incomplete and clear its subtree flags.
		returnFiber.flags|=Incomplete;returnFiber.subtreeFlags=NoFlags;returnFiber.deletions=null;}else {// We've unwound all the way to the root.
		workInProgressRootExitStatus=RootDidNotComplete;workInProgress=null;return;}}var siblingFiber=completedWork.sibling;if(siblingFiber!==null){// If there is more work to do in this returnFiber, do that next.
		workInProgress=siblingFiber;return;}// Otherwise, return to the parent
		completedWork=returnFiber;// Update the next thing we're working on in case something throws.
		workInProgress=completedWork;}while(completedWork!==null);// We've reached the root.
		if(workInProgressRootExitStatus===RootInProgress){workInProgressRootExitStatus=RootCompleted;}}function commitRoot(root,recoverableErrors,transitions){// TODO: This no longer makes any sense. We already wrap the mutation and
		// layout phases. Should be able to remove.
		var previousUpdateLanePriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$3.transition;try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);commitRootImpl(root,recoverableErrors,transitions,previousUpdateLanePriority);}finally{ReactCurrentBatchConfig$3.transition=prevTransition;setCurrentUpdatePriority(previousUpdateLanePriority);}return null;}function commitRootImpl(root,recoverableErrors,transitions,renderPriorityLevel){do{// `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
		// means `flushPassiveEffects` will sometimes result in additional
		// passive effects. So we need to keep flushing in a loop until there are
		// no more pending effects.
		// TODO: Might be better if `flushPassiveEffects` did not automatically
		// flush synchronous work at the end, to avoid factoring hazards like this.
		flushPassiveEffects();}while(rootWithPendingPassiveEffects!==null);flushRenderPhaseStrictModeWarningsInDEV();if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}var finishedWork=root.finishedWork;var lanes=root.finishedLanes;{markCommitStarted(lanes);}if(finishedWork===null){{markCommitStopped();}return null;}else {{if(lanes===NoLanes){error('root.finishedLanes should not be empty during a commit. This is a '+'bug in React.');}}}root.finishedWork=null;root.finishedLanes=NoLanes;if(finishedWork===root.current){throw new Error('Cannot commit the same tree as before. This error is likely caused by '+'a bug in React. Please file an issue.');}// commitRoot never returns a continuation; it always finishes synchronously.
		// So we can clear these now to allow a new callback to be scheduled.
		root.callbackNode=null;root.callbackPriority=NoLane;// Update the first and last pending times on this root. The new first
		// pending time is whatever is left on the root fiber.
		var remainingLanes=mergeLanes(finishedWork.lanes,finishedWork.childLanes);markRootFinished(root,remainingLanes);if(root===workInProgressRoot){// We can reset these now that they are finished.
		workInProgressRoot=null;workInProgress=null;workInProgressRootRenderLanes=NoLanes;}// If there are pending passive effects, schedule a callback to process them.
		// Do this as early as possible, so it is queued before anything else that
		// might get scheduled in the commit phase. (See #16714.)
		// TODO: Delete all other places that schedule the passive effect callback
		// They're redundant.
		if((finishedWork.subtreeFlags&PassiveMask)!==NoFlags||(finishedWork.flags&PassiveMask)!==NoFlags){if(!rootDoesHavePassiveEffects){rootDoesHavePassiveEffects=true;// to store it in pendingPassiveTransitions until they get processed
		// We need to pass this through as an argument to commitRoot
		// because workInProgressTransitions might have changed between
		// the previous render and commit if we throttle the commit
		// with setTimeout
		pendingPassiveTransitions=transitions;scheduleCallback$1(NormalPriority,function(){flushPassiveEffects();// This render triggered passive effects: release the root cache pool
		// *after* passive effects fire to avoid freeing a cache pool that may
		// be referenced by a node in the tree (HostRoot, Cache boundary etc)
		return null;});}}// Check if there are any effects in the whole tree.
		// TODO: This is left over from the effect list implementation, where we had
		// to check for the existence of `firstEffect` to satisfy Flow. I think the
		// only other reason this optimization exists is because it affects profiling.
		// Reconsider whether this is necessary.
		var subtreeHasEffects=(finishedWork.subtreeFlags&(BeforeMutationMask|MutationMask|LayoutMask|PassiveMask))!==NoFlags;var rootHasEffect=(finishedWork.flags&(BeforeMutationMask|MutationMask|LayoutMask|PassiveMask))!==NoFlags;if(subtreeHasEffects||rootHasEffect){var prevTransition=ReactCurrentBatchConfig$3.transition;ReactCurrentBatchConfig$3.transition=null;var previousPriority=getCurrentUpdatePriority();setCurrentUpdatePriority(DiscreteEventPriority);var prevExecutionContext=executionContext;executionContext|=CommitContext;// Reset this to null before calling lifecycles
		ReactCurrentOwner$2.current=null;// The commit phase is broken into several sub-phases. We do a separate pass
		// of the effect list for each phase: all mutation effects come before all
		// layout effects, and so on.
		// The first phase a "before mutation" phase. We use this phase to read the
		// state of the host tree right before we mutate it. This is where
		// getSnapshotBeforeUpdate is called.
		commitBeforeMutationEffects(root,finishedWork);{// Mark the current commit time to be shared by all Profilers in this
		// batch. This enables them to be grouped later.
		recordCommitTime();}commitMutationEffects(root,finishedWork,lanes);resetAfterCommit(root.containerInfo);// The work-in-progress tree is now the current tree. This must come after
		// the mutation phase, so that the previous tree is still current during
		// componentWillUnmount, but before the layout phase, so that the finished
		// work is current during componentDidMount/Update.
		root.current=finishedWork;// The next phase is the layout phase, where we call effects that read
		{markLayoutEffectsStarted(lanes);}commitLayoutEffects(finishedWork,root,lanes);{markLayoutEffectsStopped();}// opportunity to paint.
		requestPaint();executionContext=prevExecutionContext;// Reset the priority to the previous non-sync value.
		setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;}else {// No effects.
		root.current=finishedWork;// Measure these anyway so the flamegraph explicitly shows that there were
		// no effects.
		// TODO: Maybe there's a better way to report this.
		{recordCommitTime();}}var rootDidHavePassiveEffects=rootDoesHavePassiveEffects;if(rootDoesHavePassiveEffects){// This commit has passive effects. Stash a reference to them. But don't
		// schedule a callback until after flushing layout work.
		rootDoesHavePassiveEffects=false;rootWithPendingPassiveEffects=root;pendingPassiveEffectsLanes=lanes;}else {{nestedPassiveUpdateCount=0;rootWithPassiveNestedUpdates=null;}}// Read this again, since an effect might have updated it
		remainingLanes=root.pendingLanes;// Check if there's remaining work on this root
		// TODO: This is part of the `componentDidCatch` implementation. Its purpose
		// is to detect whether something might have called setState inside
		// `componentDidCatch`. The mechanism is known to be flawed because `setState`
		// inside `componentDidCatch` is itself flawed — that's why we recommend
		// `getDerivedStateFromError` instead. However, it could be improved by
		// checking if remainingLanes includes Sync work, instead of whether there's
		// any work remaining at all (which would also include stuff like Suspense
		// retries or transitions). It's been like this for a while, though, so fixing
		// it probably isn't that urgent.
		if(remainingLanes===NoLanes){// If there's no remaining work, we can clear the set of already failed
		// error boundaries.
		legacyErrorBoundariesThatAlreadyFailed=null;}{if(!rootDidHavePassiveEffects){commitDoubleInvokeEffectsInDEV(root.current,false);}}onCommitRoot(finishedWork.stateNode,renderPriorityLevel);{if(isDevToolsPresent){root.memoizedUpdaters.clear();}}{onCommitRoot$1();}// Always call this before exiting `commitRoot`, to ensure that any
		// additional work on this root is scheduled.
		ensureRootIsScheduled(root,now());if(recoverableErrors!==null){// There were errors during this render, but recovered from them without
		// needing to surface it to the UI. We log them here.
		var onRecoverableError=root.onRecoverableError;for(var i=0;i<recoverableErrors.length;i++){var recoverableError=recoverableErrors[i];var componentStack=recoverableError.stack;var digest=recoverableError.digest;onRecoverableError(recoverableError.value,{componentStack:componentStack,digest:digest});}}if(hasUncaughtError){hasUncaughtError=false;var error$1=firstUncaughtError;firstUncaughtError=null;throw error$1;}// If the passive effects are the result of a discrete render, flush them
		// synchronously at the end of the current task so that the result is
		// immediately observable. Otherwise, we assume that they are not
		// order-dependent and do not need to be observed by external systems, so we
		// can wait until after paint.
		// TODO: We can optimize this by not scheduling the callback earlier. Since we
		// currently schedule the callback in multiple places, will wait until those
		// are consolidated.
		if(includesSomeLane(pendingPassiveEffectsLanes,SyncLane)&&root.tag!==LegacyRoot){flushPassiveEffects();}// Read this again, since a passive effect might have updated it
		remainingLanes=root.pendingLanes;if(includesSomeLane(remainingLanes,SyncLane)){{markNestedUpdateScheduled();}// Count the number of times the root synchronously re-renders without
		// finishing. If there are too many, it indicates an infinite update loop.
		if(root===rootWithNestedUpdates){nestedUpdateCount++;}else {nestedUpdateCount=0;rootWithNestedUpdates=root;}}else {nestedUpdateCount=0;}// If layout work was scheduled, flush it now.
		flushSyncCallbacks();{markCommitStopped();}return null;}function flushPassiveEffects(){// Returns whether passive effects were flushed.
		// TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
		// probably just combine the two functions. I believe they were only separate
		// in the first place because we used to wrap it with
		// `Scheduler.runWithPriority`, which accepts a function. But now we track the
		// priority within React itself, so we can mutate the variable directly.
		if(rootWithPendingPassiveEffects!==null){var renderPriority=lanesToEventPriority(pendingPassiveEffectsLanes);var priority=lowerEventPriority(DefaultEventPriority,renderPriority);var prevTransition=ReactCurrentBatchConfig$3.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$3.transition=null;setCurrentUpdatePriority(priority);return flushPassiveEffectsImpl();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$3.transition=prevTransition;// Once passive effects have run for the tree - giving components a
		}}return false;}function enqueuePendingPassiveProfilerEffect(fiber){{pendingPassiveProfilerEffects.push(fiber);if(!rootDoesHavePassiveEffects){rootDoesHavePassiveEffects=true;scheduleCallback$1(NormalPriority,function(){flushPassiveEffects();return null;});}}}function flushPassiveEffectsImpl(){if(rootWithPendingPassiveEffects===null){return false;}// Cache and clear the transitions flag
		var transitions=pendingPassiveTransitions;pendingPassiveTransitions=null;var root=rootWithPendingPassiveEffects;var lanes=pendingPassiveEffectsLanes;rootWithPendingPassiveEffects=null;// TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
		// Figure out why and fix it. It's not causing any known issues (probably
		// because it's only used for profiling), but it's a refactor hazard.
		pendingPassiveEffectsLanes=NoLanes;if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Cannot flush passive effects while already rendering.');}{isFlushingPassiveEffects=true;didScheduleUpdateDuringPassiveEffects=false;}{markPassiveEffectsStarted(lanes);}var prevExecutionContext=executionContext;executionContext|=CommitContext;commitPassiveUnmountEffects(root.current);commitPassiveMountEffects(root,root.current,lanes,transitions);// TODO: Move to commitPassiveMountEffects
		{var profilerEffects=pendingPassiveProfilerEffects;pendingPassiveProfilerEffects=[];for(var i=0;i<profilerEffects.length;i++){var _fiber=profilerEffects[i];commitPassiveEffectDurations(root,_fiber);}}{markPassiveEffectsStopped();}{commitDoubleInvokeEffectsInDEV(root.current,true);}executionContext=prevExecutionContext;flushSyncCallbacks();{// If additional passive effects were scheduled, increment a counter. If this
		// exceeds the limit, we'll fire a warning.
		if(didScheduleUpdateDuringPassiveEffects){if(root===rootWithPassiveNestedUpdates){nestedPassiveUpdateCount++;}else {nestedPassiveUpdateCount=0;rootWithPassiveNestedUpdates=root;}}else {nestedPassiveUpdateCount=0;}isFlushingPassiveEffects=false;didScheduleUpdateDuringPassiveEffects=false;}// TODO: Move to commitPassiveMountEffects
		onPostCommitRoot(root);{var stateNode=root.current.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}return true;}function isAlreadyFailedLegacyErrorBoundary(instance){return legacyErrorBoundariesThatAlreadyFailed!==null&&legacyErrorBoundariesThatAlreadyFailed.has(instance);}function markLegacyErrorBoundaryAsFailed(instance){if(legacyErrorBoundariesThatAlreadyFailed===null){legacyErrorBoundariesThatAlreadyFailed=new Set([instance]);}else {legacyErrorBoundariesThatAlreadyFailed.add(instance);}}function prepareToThrowUncaughtError(error){if(!hasUncaughtError){hasUncaughtError=true;firstUncaughtError=error;}}var onUncaughtError=prepareToThrowUncaughtError;function captureCommitPhaseErrorOnRoot(rootFiber,sourceFiber,error){var errorInfo=createCapturedValueAtFiber(error,sourceFiber);var update=createRootErrorUpdate(rootFiber,errorInfo,SyncLane);var root=enqueueUpdate(rootFiber,update,SyncLane);var eventTime=requestEventTime();if(root!==null){markRootUpdated(root,SyncLane,eventTime);ensureRootIsScheduled(root,eventTime);}}function captureCommitPhaseError(sourceFiber,nearestMountedAncestor,error$1){{reportUncaughtErrorInDEV(error$1);setIsRunningInsertionEffect(false);}if(sourceFiber.tag===HostRoot){// Error was thrown at the root. There is no parent, so the root
		// itself should capture it.
		captureCommitPhaseErrorOnRoot(sourceFiber,sourceFiber,error$1);return;}var fiber=null;{fiber=nearestMountedAncestor;}while(fiber!==null){if(fiber.tag===HostRoot){captureCommitPhaseErrorOnRoot(fiber,sourceFiber,error$1);return;}else if(fiber.tag===ClassComponent){var ctor=fiber.type;var instance=fiber.stateNode;if(typeof ctor.getDerivedStateFromError==='function'||typeof instance.componentDidCatch==='function'&&!isAlreadyFailedLegacyErrorBoundary(instance)){var errorInfo=createCapturedValueAtFiber(error$1,sourceFiber);var update=createClassErrorUpdate(fiber,errorInfo,SyncLane);var root=enqueueUpdate(fiber,update,SyncLane);var eventTime=requestEventTime();if(root!==null){markRootUpdated(root,SyncLane,eventTime);ensureRootIsScheduled(root,eventTime);}return;}}fiber=fiber.return;}{// TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
		// will fire for errors that are thrown by destroy functions inside deleted
		// trees. What it should instead do is propagate the error to the parent of
		// the deleted tree. In the meantime, do not add this warning to the
		// allowlist; this is only for our internal use.
		error('Internal React error: Attempted to capture a commit phase error '+'inside a detached tree. This indicates a bug in React. Likely '+'causes include deleting the same fiber more than once, committing an '+'already-finished tree, or an inconsistent return pointer.\n\n'+'Error message:\n\n%s',error$1);}}function pingSuspendedRoot(root,wakeable,pingedLanes){var pingCache=root.pingCache;if(pingCache!==null){// The wakeable resolved, so we no longer need to memoize, because it will
		// never be thrown again.
		pingCache.delete(wakeable);}var eventTime=requestEventTime();markRootPinged(root,pingedLanes);warnIfSuspenseResolutionNotWrappedWithActDEV(root);if(workInProgressRoot===root&&isSubsetOfLanes(workInProgressRootRenderLanes,pingedLanes)){// Received a ping at the same priority level at which we're currently
		// rendering. We might want to restart this render. This should mirror
		// the logic of whether or not a root suspends once it completes.
		// TODO: If we're rendering sync either due to Sync, Batched or expired,
		// we should probably never restart.
		// If we're suspended with delay, or if it's a retry, we'll always suspend
		// so we can always restart.
		if(workInProgressRootExitStatus===RootSuspendedWithDelay||workInProgressRootExitStatus===RootSuspended&&includesOnlyRetries(workInProgressRootRenderLanes)&&now()-globalMostRecentFallbackTime<FALLBACK_THROTTLE_MS){// Restart from the root.
		prepareFreshStack(root,NoLanes);}else {// Even though we can't restart right now, we might get an
		// opportunity later. So we mark this render as having a ping.
		workInProgressRootPingedLanes=mergeLanes(workInProgressRootPingedLanes,pingedLanes);}}ensureRootIsScheduled(root,eventTime);}function retryTimedOutBoundary(boundaryFiber,retryLane){// The boundary fiber (a Suspense component or SuspenseList component)
		// previously was rendered in its fallback state. One of the promises that
		// suspended it has resolved, which means at least part of the tree was
		// likely unblocked. Try rendering again, at a new lanes.
		if(retryLane===NoLane){// TODO: Assign this to `suspenseState.retryLane`? to avoid
		// unnecessary entanglement?
		retryLane=requestRetryLane(boundaryFiber);}// TODO: Special case idle priority?
		var eventTime=requestEventTime();var root=enqueueConcurrentRenderForLane(boundaryFiber,retryLane);if(root!==null){markRootUpdated(root,retryLane,eventTime);ensureRootIsScheduled(root,eventTime);}}function retryDehydratedSuspenseBoundary(boundaryFiber){var suspenseState=boundaryFiber.memoizedState;var retryLane=NoLane;if(suspenseState!==null){retryLane=suspenseState.retryLane;}retryTimedOutBoundary(boundaryFiber,retryLane);}function resolveRetryWakeable(boundaryFiber,wakeable){var retryLane=NoLane;// Default
		var retryCache;switch(boundaryFiber.tag){case SuspenseComponent:retryCache=boundaryFiber.stateNode;var suspenseState=boundaryFiber.memoizedState;if(suspenseState!==null){retryLane=suspenseState.retryLane;}break;case SuspenseListComponent:retryCache=boundaryFiber.stateNode;break;default:throw new Error('Pinged unknown suspense boundary type. '+'This is probably a bug in React.');}if(retryCache!==null){// The wakeable resolved, so we no longer need to memoize, because it will
		// never be thrown again.
		retryCache.delete(wakeable);}retryTimedOutBoundary(boundaryFiber,retryLane);}// Computes the next Just Noticeable Difference (JND) boundary.
		// The theory is that a person can't tell the difference between small differences in time.
		// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
		// difference in the experience. However, waiting for longer might mean that we can avoid
		// showing an intermediate loading state. The longer we have already waited, the harder it
		// is to tell small differences in time. Therefore, the longer we've already waited,
		// the longer we can wait additionally. At some point we have to give up though.
		// We pick a train model where the next boundary commits at a consistent schedule.
		// These particular numbers are vague estimates. We expect to adjust them based on research.
		function jnd(timeElapsed){return timeElapsed<120?120:timeElapsed<480?480:timeElapsed<1080?1080:timeElapsed<1920?1920:timeElapsed<3000?3000:timeElapsed<4320?4320:ceil(timeElapsed/1960)*1960;}function checkForNestedUpdates(){if(nestedUpdateCount>NESTED_UPDATE_LIMIT){nestedUpdateCount=0;rootWithNestedUpdates=null;throw new Error('Maximum update depth exceeded. This can happen when a component '+'repeatedly calls setState inside componentWillUpdate or '+'componentDidUpdate. React limits the number of nested updates to '+'prevent infinite loops.');}{if(nestedPassiveUpdateCount>NESTED_PASSIVE_UPDATE_LIMIT){nestedPassiveUpdateCount=0;rootWithPassiveNestedUpdates=null;error('Maximum update depth exceeded. This can happen when a component '+"calls setState inside useEffect, but useEffect either doesn't "+'have a dependency array, or one of the dependencies changes on '+'every render.');}}}function flushRenderPhaseStrictModeWarningsInDEV(){{ReactStrictModeWarnings.flushLegacyContextWarning();{ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();}}}function commitDoubleInvokeEffectsInDEV(fiber,hasPassiveEffects){{// TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
		// so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
		// Maybe not a big deal since this is DEV only behavior.
		setCurrentFiber(fiber);invokeEffectsInDev(fiber,MountLayoutDev,invokeLayoutEffectUnmountInDEV);if(hasPassiveEffects){invokeEffectsInDev(fiber,MountPassiveDev,invokePassiveEffectUnmountInDEV);}invokeEffectsInDev(fiber,MountLayoutDev,invokeLayoutEffectMountInDEV);if(hasPassiveEffects){invokeEffectsInDev(fiber,MountPassiveDev,invokePassiveEffectMountInDEV);}resetCurrentFiber();}}function invokeEffectsInDev(firstChild,fiberFlags,invokeEffectFn){{// We don't need to re-check StrictEffectsMode here.
		// This function is only called if that check has already passed.
		var current=firstChild;var subtreeRoot=null;while(current!==null){var primarySubtreeFlag=current.subtreeFlags&fiberFlags;if(current!==subtreeRoot&&current.child!==null&&primarySubtreeFlag!==NoFlags){current=current.child;}else {if((current.flags&fiberFlags)!==NoFlags){invokeEffectFn(current);}if(current.sibling!==null){current=current.sibling;}else {current=subtreeRoot=current.return;}}}}}var didWarnStateUpdateForNotYetMountedComponent=null;function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber){{if((executionContext&RenderContext)!==NoContext){// We let the other warning about render phase updates deal with this one.
		return;}if(!(fiber.mode&ConcurrentMode)){return;}var tag=fiber.tag;if(tag!==IndeterminateComponent&&tag!==HostRoot&&tag!==ClassComponent&&tag!==FunctionComponent&&tag!==ForwardRef&&tag!==MemoComponent&&tag!==SimpleMemoComponent){// Only warn for user-defined components, not internal ones like Suspense.
		return;}// We show the whole stack but dedupe on the top component's name because
		// the problematic code almost always lies inside that component.
		var componentName=getComponentNameFromFiber(fiber)||'ReactComponent';if(didWarnStateUpdateForNotYetMountedComponent!==null){if(didWarnStateUpdateForNotYetMountedComponent.has(componentName)){return;}didWarnStateUpdateForNotYetMountedComponent.add(componentName);}else {didWarnStateUpdateForNotYetMountedComponent=new Set([componentName]);}var previousFiber=current;try{setCurrentFiber(fiber);error("Can't perform a React state update on a component that hasn't mounted yet. "+'This indicates that you have a side-effect in your render function that '+'asynchronously later calls tries to update the component. Move this work to '+'useEffect instead.');}finally{if(previousFiber){setCurrentFiber(fiber);}else {resetCurrentFiber();}}}}var beginWork$1;{var dummyFiber=null;beginWork$1=function(current,unitOfWork,lanes){// If a component throws an error, we replay it again in a synchronously
		// dispatched event, so that the debugger will treat it as an uncaught
		// error See ReactErrorUtils for more information.
		// Before entering the begin phase, copy the work-in-progress onto a dummy
		// fiber. If beginWork throws, we'll use this to reset the state.
		var originalWorkInProgressCopy=assignFiberPropertiesInDEV(dummyFiber,unitOfWork);try{return beginWork(current,unitOfWork,lanes);}catch(originalError){if(didSuspendOrErrorWhileHydratingDEV()||originalError!==null&&typeof originalError==='object'&&typeof originalError.then==='function'){// Don't replay promises.
		// Don't replay errors if we are hydrating and have already suspended or handled an error
		throw originalError;}// Keep this code in sync with handleError; any changes here must have
		// corresponding changes there.
		resetContextDependencies();resetHooksAfterThrow();// Don't reset current debug fiber, since we're about to work on the
		// same fiber again.
		// Unwind the failed stack frame
		unwindInterruptedWork(current,unitOfWork);// Restore the original properties of the fiber.
		assignFiberPropertiesInDEV(unitOfWork,originalWorkInProgressCopy);if(unitOfWork.mode&ProfileMode){// Reset the profiler timer.
		startProfilerTimer(unitOfWork);}// Run beginWork again.
		invokeGuardedCallback(null,beginWork,null,current,unitOfWork,lanes);if(hasCaughtError()){var replayError=clearCaughtError();if(typeof replayError==='object'&&replayError!==null&&replayError._suppressLogging&&typeof originalError==='object'&&originalError!==null&&!originalError._suppressLogging){// If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
		originalError._suppressLogging=true;}}// We always throw the original error in case the second render pass is not idempotent.
		// This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
		throw originalError;}};}var didWarnAboutUpdateInRender=false;var didWarnAboutUpdateInRenderForAnotherComponent;{didWarnAboutUpdateInRenderForAnotherComponent=new Set();}function warnAboutRenderPhaseUpdatesInDEV(fiber){{if(isRendering&&!getIsUpdatingOpaqueValueInRenderPhaseInDEV()){switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{var renderingComponentName=workInProgress&&getComponentNameFromFiber(workInProgress)||'Unknown';// Dedupe by the rendering component because it's the one that needs to be fixed.
		var dedupeKey=renderingComponentName;if(!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)){didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);var setStateComponentName=getComponentNameFromFiber(fiber)||'Unknown';error('Cannot update a component (`%s`) while rendering a '+'different component (`%s`). To locate the bad setState() call inside `%s`, '+'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',setStateComponentName,renderingComponentName,renderingComponentName);}break;}case ClassComponent:{if(!didWarnAboutUpdateInRender){error('Cannot update during an existing state transition (such as '+'within `render`). Render methods should be a pure '+'function of props and state.');didWarnAboutUpdateInRender=true;}break;}}}}}function restorePendingUpdaters(root,lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;memoizedUpdaters.forEach(function(schedulingFiber){addFiberToLanesMap(root,schedulingFiber,lanes);});// This function intentionally does not clear memoized updaters.
		// Those may still be relevant to the current commit
		// and a future one (e.g. Suspense).
		}}}var fakeActCallbackNode={};function scheduleCallback$1(priorityLevel,callback){{// If we're currently inside an `act` scope, bypass Scheduler and push to
		// the `act` queue instead.
		var actQueue=ReactCurrentActQueue$1.current;if(actQueue!==null){actQueue.push(callback);return fakeActCallbackNode;}else {return scheduleCallback(priorityLevel,callback);}}}function cancelCallback$1(callbackNode){if(callbackNode===fakeActCallbackNode){return;}// In production, always call Scheduler. This function will be stripped out.
		return cancelCallback(callbackNode);}function shouldForceFlushFallbacksInDEV(){// Never force flush in production. This function should get stripped out.
		return ReactCurrentActQueue$1.current!==null;}function warnIfUpdatesNotWrappedWithActDEV(fiber){{if(fiber.mode&ConcurrentMode){if(!isConcurrentActEnvironment()){// Not in an act environment. No need to warn.
		return;}}else {// Legacy mode has additional cases where we suppress a warning.
		if(!isLegacyActEnvironment()){// Not in an act environment. No need to warn.
		return;}if(executionContext!==NoContext){// Legacy mode doesn't warn if the update is batched, i.e.
		// batchedUpdates or flushSync.
		return;}if(fiber.tag!==FunctionComponent&&fiber.tag!==ForwardRef&&fiber.tag!==SimpleMemoComponent){// For backwards compatibility with pre-hooks code, legacy mode only
		// warns for updates that originate from a hook.
		return;}}if(ReactCurrentActQueue$1.current===null){var previousFiber=current;try{setCurrentFiber(fiber);error('An update to %s inside a test was not wrapped in act(...).\n\n'+'When testing, code that causes React state updates should be '+'wrapped into act(...):\n\n'+'act(() => {\n'+'  /* fire events that update state */\n'+'});\n'+'/* assert on the output */\n\n'+"This ensures that you're testing the behavior the user would see "+'in the browser.'+' Learn more at https://reactjs.org/link/wrap-tests-with-act',getComponentNameFromFiber(fiber));}finally{if(previousFiber){setCurrentFiber(fiber);}else {resetCurrentFiber();}}}}}function warnIfSuspenseResolutionNotWrappedWithActDEV(root){{if(root.tag!==LegacyRoot&&isConcurrentActEnvironment()&&ReactCurrentActQueue$1.current===null){error('A suspended resource finished loading inside a test, but the event '+'was not wrapped in act(...).\n\n'+'When testing, code that resolves suspended data should be wrapped '+'into act(...):\n\n'+'act(() => {\n'+'  /* finish loading suspended data */\n'+'});\n'+'/* assert on the output */\n\n'+"This ensures that you're testing the behavior the user would see "+'in the browser.'+' Learn more at https://reactjs.org/link/wrap-tests-with-act');}}}function setIsRunningInsertionEffect(isRunning){{isRunningInsertionEffect=isRunning;}}/* eslint-disable react-internal/prod-error-codes */var resolveFamily=null;// $FlowFixMe Flow gets confused by a WeakSet feature check below.
		var failedBoundaries=null;var setRefreshHandler=function(handler){{resolveFamily=handler;}};function resolveFunctionForHotReloading(type){{if(resolveFamily===null){// Hot reloading is disabled.
		return type;}var family=resolveFamily(type);if(family===undefined){return type;}// Use the latest known implementation.
		return family.current;}}function resolveClassForHotReloading(type){// No implementation differences.
		return resolveFunctionForHotReloading(type);}function resolveForwardRefForHotReloading(type){{if(resolveFamily===null){// Hot reloading is disabled.
		return type;}var family=resolveFamily(type);if(family===undefined){// Check if we're dealing with a real forwardRef. Don't want to crash early.
		if(type!==null&&type!==undefined&&typeof type.render==='function'){// ForwardRef is special because its resolved .type is an object,
		// but it's possible that we only have its inner render function in the map.
		// If that inner render function is different, we'll build a new forwardRef type.
		var currentRender=resolveFunctionForHotReloading(type.render);if(type.render!==currentRender){var syntheticType={$$typeof:REACT_FORWARD_REF_TYPE,render:currentRender};if(type.displayName!==undefined){syntheticType.displayName=type.displayName;}return syntheticType;}}return type;}// Use the latest known implementation.
		return family.current;}}function isCompatibleFamilyForHotReloading(fiber,element){{if(resolveFamily===null){// Hot reloading is disabled.
		return false;}var prevType=fiber.elementType;var nextType=element.type;// If we got here, we know types aren't === equal.
		var needsCompareFamilies=false;var $$typeofNextType=typeof nextType==='object'&&nextType!==null?nextType.$$typeof:null;switch(fiber.tag){case ClassComponent:{if(typeof nextType==='function'){needsCompareFamilies=true;}break;}case FunctionComponent:{if(typeof nextType==='function'){needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){// We don't know the inner type yet.
		// We're going to assume that the lazy inner type is stable,
		// and so it is sufficient to avoid reconciling it away.
		// We're not going to unwrap or actually use the new lazy type.
		needsCompareFamilies=true;}break;}case ForwardRef:{if($$typeofNextType===REACT_FORWARD_REF_TYPE){needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){needsCompareFamilies=true;}break;}case MemoComponent:case SimpleMemoComponent:{if($$typeofNextType===REACT_MEMO_TYPE){// TODO: if it was but can no longer be simple,
		// we shouldn't set this.
		needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){needsCompareFamilies=true;}break;}default:return false;}// Check if both types have a family and it's the same one.
		if(needsCompareFamilies){// Note: memo() and forwardRef() we'll compare outer rather than inner type.
		// This means both of them need to be registered to preserve state.
		// If we unwrapped and compared the inner types for wrappers instead,
		// then we would risk falsely saying two separate memo(Foo)
		// calls are equivalent because they wrap the same Foo function.
		var prevFamily=resolveFamily(prevType);if(prevFamily!==undefined&&prevFamily===resolveFamily(nextType)){return true;}}return false;}}function markFailedErrorBoundaryForHotReloading(fiber){{if(resolveFamily===null){// Hot reloading is disabled.
		return;}if(typeof WeakSet!=='function'){return;}if(failedBoundaries===null){failedBoundaries=new WeakSet();}failedBoundaries.add(fiber);}}var scheduleRefresh=function(root,update){{if(resolveFamily===null){// Hot reloading is disabled.
		return;}var staleFamilies=update.staleFamilies,updatedFamilies=update.updatedFamilies;flushPassiveEffects();flushSync(function(){scheduleFibersWithFamiliesRecursively(root.current,updatedFamilies,staleFamilies);});}};var scheduleRoot=function(root,element){{if(root.context!==emptyContextObject){// Super edge case: root has a legacy _renderSubtree context
		// but we don't know the parentComponent so we can't pass it.
		// Just ignore. We'll delete this with _renderSubtree code path later.
		return;}flushPassiveEffects();flushSync(function(){updateContainer(element,root,null,null);});}};function scheduleFibersWithFamiliesRecursively(fiber,updatedFamilies,staleFamilies){{var alternate=fiber.alternate,child=fiber.child,sibling=fiber.sibling,tag=fiber.tag,type=fiber.type;var candidateType=null;switch(tag){case FunctionComponent:case SimpleMemoComponent:case ClassComponent:candidateType=type;break;case ForwardRef:candidateType=type.render;break;}if(resolveFamily===null){throw new Error('Expected resolveFamily to be set during hot reload.');}var needsRender=false;var needsRemount=false;if(candidateType!==null){var family=resolveFamily(candidateType);if(family!==undefined){if(staleFamilies.has(family)){needsRemount=true;}else if(updatedFamilies.has(family)){if(tag===ClassComponent){needsRemount=true;}else {needsRender=true;}}}}if(failedBoundaries!==null){if(failedBoundaries.has(fiber)||alternate!==null&&failedBoundaries.has(alternate)){needsRemount=true;}}if(needsRemount){fiber._debugNeedsRemount=true;}if(needsRemount||needsRender){var _root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(_root!==null){scheduleUpdateOnFiber(_root,fiber,SyncLane,NoTimestamp);}}if(child!==null&&!needsRemount){scheduleFibersWithFamiliesRecursively(child,updatedFamilies,staleFamilies);}if(sibling!==null){scheduleFibersWithFamiliesRecursively(sibling,updatedFamilies,staleFamilies);}}}var findHostInstancesForRefresh=function(root,families){{var hostInstances=new Set();var types=new Set(families.map(function(family){return family.current;}));findHostInstancesForMatchingFibersRecursively(root.current,types,hostInstances);return hostInstances;}};function findHostInstancesForMatchingFibersRecursively(fiber,types,hostInstances){{var child=fiber.child,sibling=fiber.sibling,tag=fiber.tag,type=fiber.type;var candidateType=null;switch(tag){case FunctionComponent:case SimpleMemoComponent:case ClassComponent:candidateType=type;break;case ForwardRef:candidateType=type.render;break;}var didMatch=false;if(candidateType!==null){if(types.has(candidateType)){didMatch=true;}}if(didMatch){// We have a match. This only drills down to the closest host components.
		// There's no need to search deeper because for the purpose of giving
		// visual feedback, "flashing" outermost parent rectangles is sufficient.
		findHostInstancesForFiberShallowly(fiber,hostInstances);}else {// If there's no match, maybe there will be one further down in the child tree.
		if(child!==null){findHostInstancesForMatchingFibersRecursively(child,types,hostInstances);}}if(sibling!==null){findHostInstancesForMatchingFibersRecursively(sibling,types,hostInstances);}}}function findHostInstancesForFiberShallowly(fiber,hostInstances){{var foundHostInstances=findChildHostInstancesForFiberShallowly(fiber,hostInstances);if(foundHostInstances){return;}// If we didn't find any host children, fallback to closest host parent.
		var node=fiber;while(true){switch(node.tag){case HostComponent:hostInstances.add(node.stateNode);return;case HostPortal:hostInstances.add(node.stateNode.containerInfo);return;case HostRoot:hostInstances.add(node.stateNode.containerInfo);return;}if(node.return===null){throw new Error('Expected to reach root first.');}node=node.return;}}}function findChildHostInstancesForFiberShallowly(fiber,hostInstances){{var node=fiber;var foundHostInstances=false;while(true){if(node.tag===HostComponent){// We got a match.
		foundHostInstances=true;hostInstances.add(node.stateNode);// There may still be more, so keep searching.
		}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===fiber){return foundHostInstances;}while(node.sibling===null){if(node.return===null||node.return===fiber){return foundHostInstances;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}return false;}var hasBadMapPolyfill;{hasBadMapPolyfill=false;try{var nonExtensibleObject=Object.preventExtensions({});/* eslint-disable no-new */new Map([[nonExtensibleObject,null]]);new Set([nonExtensibleObject]);/* eslint-enable no-new */}catch(e){// TODO: Consider warning about bad polyfills
		hasBadMapPolyfill=true;}}function FiberNode(tag,pendingProps,key,mode){// Instance
		this.tag=tag;this.key=key;this.elementType=null;this.type=null;this.stateNode=null;// Fiber
		this.return=null;this.child=null;this.sibling=null;this.index=0;this.ref=null;this.pendingProps=pendingProps;this.memoizedProps=null;this.updateQueue=null;this.memoizedState=null;this.dependencies=null;this.mode=mode;// Effects
		this.flags=NoFlags;this.subtreeFlags=NoFlags;this.deletions=null;this.lanes=NoLanes;this.childLanes=NoLanes;this.alternate=null;{// Note: The following is done to avoid a v8 performance cliff.
		//
		// Initializing the fields below to smis and later updating them with
		// double values will cause Fibers to end up having separate shapes.
		// This behavior/bug has something to do with Object.preventExtension().
		// Fortunately this only impacts DEV builds.
		// Unfortunately it makes React unusably slow for some applications.
		// To work around this, initialize the fields below with doubles.
		//
		// Learn more about this here:
		// https://github.com/facebook/react/issues/14365
		// https://bugs.chromium.org/p/v8/issues/detail?id=8538
		this.actualDuration=Number.NaN;this.actualStartTime=Number.NaN;this.selfBaseDuration=Number.NaN;this.treeBaseDuration=Number.NaN;// It's okay to replace the initial doubles with smis after initialization.
		// This won't trigger the performance cliff mentioned above,
		// and it simplifies other profiler code (including DevTools).
		this.actualDuration=0;this.actualStartTime=-1;this.selfBaseDuration=0;this.treeBaseDuration=0;}{// This isn't directly used but is handy for debugging internals:
		this._debugSource=null;this._debugOwner=null;this._debugNeedsRemount=false;this._debugHookTypes=null;if(!hasBadMapPolyfill&&typeof Object.preventExtensions==='function'){Object.preventExtensions(this);}}}// This is a constructor function, rather than a POJO constructor, still
		// please ensure we do the following:
		// 1) Nobody should add any instance methods on this. Instance methods can be
		//    more difficult to predict when they get optimized and they are almost
		//    never inlined properly in static compilers.
		// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
		//    always know when it is a fiber.
		// 3) We might want to experiment with using numeric keys since they are easier
		//    to optimize in a non-JIT environment.
		// 4) We can easily go from a constructor to a createFiber object literal if that
		//    is faster.
		// 5) It should be easy to port this to a C struct and keep a C implementation
		//    compatible.
		var createFiber=function(tag,pendingProps,key,mode){// $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
		return new FiberNode(tag,pendingProps,key,mode);};function shouldConstruct$1(Component){var prototype=Component.prototype;return !!(prototype&&prototype.isReactComponent);}function isSimpleFunctionComponent(type){return typeof type==='function'&&!shouldConstruct$1(type)&&type.defaultProps===undefined;}function resolveLazyComponentTag(Component){if(typeof Component==='function'){return shouldConstruct$1(Component)?ClassComponent:FunctionComponent;}else if(Component!==undefined&&Component!==null){var $$typeof=Component.$$typeof;if($$typeof===REACT_FORWARD_REF_TYPE){return ForwardRef;}if($$typeof===REACT_MEMO_TYPE){return MemoComponent;}}return IndeterminateComponent;}// This is used to create an alternate fiber to do work on.
		function createWorkInProgress(current,pendingProps){var workInProgress=current.alternate;if(workInProgress===null){// We use a double buffering pooling technique because we know that we'll
		// only ever need at most two versions of a tree. We pool the "other" unused
		// node that we're free to reuse. This is lazily created to avoid allocating
		// extra objects for things that are never updated. It also allow us to
		// reclaim the extra memory if needed.
		workInProgress=createFiber(current.tag,pendingProps,current.key,current.mode);workInProgress.elementType=current.elementType;workInProgress.type=current.type;workInProgress.stateNode=current.stateNode;{// DEV-only fields
		workInProgress._debugSource=current._debugSource;workInProgress._debugOwner=current._debugOwner;workInProgress._debugHookTypes=current._debugHookTypes;}workInProgress.alternate=current;current.alternate=workInProgress;}else {workInProgress.pendingProps=pendingProps;// Needed because Blocks store data on type.
		workInProgress.type=current.type;// We already have an alternate.
		// Reset the effect tag.
		workInProgress.flags=NoFlags;// The effects are no longer valid.
		workInProgress.subtreeFlags=NoFlags;workInProgress.deletions=null;{// We intentionally reset, rather than copy, actualDuration & actualStartTime.
		// This prevents time from endlessly accumulating in new commits.
		// This has the downside of resetting values for different priority renders,
		// But works for yielding (the common case) and should support resuming.
		workInProgress.actualDuration=0;workInProgress.actualStartTime=-1;}}// Reset all effects except static ones.
		// Static effects are not specific to a render.
		workInProgress.flags=current.flags&StaticMask;workInProgress.childLanes=current.childLanes;workInProgress.lanes=current.lanes;workInProgress.child=current.child;workInProgress.memoizedProps=current.memoizedProps;workInProgress.memoizedState=current.memoizedState;workInProgress.updateQueue=current.updateQueue;// Clone the dependencies object. This is mutated during the render phase, so
		// it cannot be shared with the current fiber.
		var currentDependencies=current.dependencies;workInProgress.dependencies=currentDependencies===null?null:{lanes:currentDependencies.lanes,firstContext:currentDependencies.firstContext};// These will be overridden during the parent's reconciliation
		workInProgress.sibling=current.sibling;workInProgress.index=current.index;workInProgress.ref=current.ref;{workInProgress.selfBaseDuration=current.selfBaseDuration;workInProgress.treeBaseDuration=current.treeBaseDuration;}{workInProgress._debugNeedsRemount=current._debugNeedsRemount;switch(workInProgress.tag){case IndeterminateComponent:case FunctionComponent:case SimpleMemoComponent:workInProgress.type=resolveFunctionForHotReloading(current.type);break;case ClassComponent:workInProgress.type=resolveClassForHotReloading(current.type);break;case ForwardRef:workInProgress.type=resolveForwardRefForHotReloading(current.type);break;}}return workInProgress;}// Used to reuse a Fiber for a second pass.
		function resetWorkInProgress(workInProgress,renderLanes){// This resets the Fiber to what createFiber or createWorkInProgress would
		// have set the values to before during the first pass. Ideally this wouldn't
		// be necessary but unfortunately many code paths reads from the workInProgress
		// when they should be reading from current and writing to workInProgress.
		// We assume pendingProps, index, key, ref, return are still untouched to
		// avoid doing another reconciliation.
		// Reset the effect flags but keep any Placement tags, since that's something
		// that child fiber is setting, not the reconciliation.
		workInProgress.flags&=StaticMask|Placement;// The effects are no longer valid.
		var current=workInProgress.alternate;if(current===null){// Reset to createFiber's initial values.
		workInProgress.childLanes=NoLanes;workInProgress.lanes=renderLanes;workInProgress.child=null;workInProgress.subtreeFlags=NoFlags;workInProgress.memoizedProps=null;workInProgress.memoizedState=null;workInProgress.updateQueue=null;workInProgress.dependencies=null;workInProgress.stateNode=null;{// Note: We don't reset the actualTime counts. It's useful to accumulate
		// actual time across multiple render passes.
		workInProgress.selfBaseDuration=0;workInProgress.treeBaseDuration=0;}}else {// Reset to the cloned values that createWorkInProgress would've.
		workInProgress.childLanes=current.childLanes;workInProgress.lanes=current.lanes;workInProgress.child=current.child;workInProgress.subtreeFlags=NoFlags;workInProgress.deletions=null;workInProgress.memoizedProps=current.memoizedProps;workInProgress.memoizedState=current.memoizedState;workInProgress.updateQueue=current.updateQueue;// Needed because Blocks store data on type.
		workInProgress.type=current.type;// Clone the dependencies object. This is mutated during the render phase, so
		// it cannot be shared with the current fiber.
		var currentDependencies=current.dependencies;workInProgress.dependencies=currentDependencies===null?null:{lanes:currentDependencies.lanes,firstContext:currentDependencies.firstContext};{// Note: We don't reset the actualTime counts. It's useful to accumulate
		// actual time across multiple render passes.
		workInProgress.selfBaseDuration=current.selfBaseDuration;workInProgress.treeBaseDuration=current.treeBaseDuration;}}return workInProgress;}function createHostRootFiber(tag,isStrictMode,concurrentUpdatesByDefaultOverride){var mode;if(tag===ConcurrentRoot){mode=ConcurrentMode;if(isStrictMode===true){mode|=StrictLegacyMode;{mode|=StrictEffectsMode;}}}else {mode=NoMode;}if(isDevToolsPresent){// Always collect profile timings when DevTools are present.
		// This enables DevTools to start capturing timing at any point–
		// Without some nodes in the tree having empty base times.
		mode|=ProfileMode;}return createFiber(HostRoot,null,null,mode);}function createFiberFromTypeAndProps(type,// React$ElementType
		key,pendingProps,owner,mode,lanes){var fiberTag=IndeterminateComponent;// The resolved type is set if we know what the final type will be. I.e. it's not lazy.
		var resolvedType=type;if(typeof type==='function'){if(shouldConstruct$1(type)){fiberTag=ClassComponent;{resolvedType=resolveClassForHotReloading(resolvedType);}}else {{resolvedType=resolveFunctionForHotReloading(resolvedType);}}}else if(typeof type==='string'){fiberTag=HostComponent;}else {getTag:switch(type){case REACT_FRAGMENT_TYPE:return createFiberFromFragment(pendingProps.children,mode,lanes,key);case REACT_STRICT_MODE_TYPE:fiberTag=Mode;mode|=StrictLegacyMode;if((mode&ConcurrentMode)!==NoMode){// Strict effects should never run on legacy roots
		mode|=StrictEffectsMode;}break;case REACT_PROFILER_TYPE:return createFiberFromProfiler(pendingProps,mode,lanes,key);case REACT_SUSPENSE_TYPE:return createFiberFromSuspense(pendingProps,mode,lanes,key);case REACT_SUSPENSE_LIST_TYPE:return createFiberFromSuspenseList(pendingProps,mode,lanes,key);case REACT_OFFSCREEN_TYPE:return createFiberFromOffscreen(pendingProps,mode,lanes,key);case REACT_LEGACY_HIDDEN_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_SCOPE_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_CACHE_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_TRACING_MARKER_TYPE:// eslint-disable-next-line no-fallthrough
		case REACT_DEBUG_TRACING_MODE_TYPE:// eslint-disable-next-line no-fallthrough
		default:{if(typeof type==='object'&&type!==null){switch(type.$$typeof){case REACT_PROVIDER_TYPE:fiberTag=ContextProvider;break getTag;case REACT_CONTEXT_TYPE:// This is a consumer
		fiberTag=ContextConsumer;break getTag;case REACT_FORWARD_REF_TYPE:fiberTag=ForwardRef;{resolvedType=resolveForwardRefForHotReloading(resolvedType);}break getTag;case REACT_MEMO_TYPE:fiberTag=MemoComponent;break getTag;case REACT_LAZY_TYPE:fiberTag=LazyComponent;resolvedType=null;break getTag;}}var info='';{if(type===undefined||typeof type==='object'&&type!==null&&Object.keys(type).length===0){info+=' You likely forgot to export your component from the file '+"it's defined in, or you might have mixed up default and "+'named imports.';}var ownerName=owner?getComponentNameFromFiber(owner):null;if(ownerName){info+='\n\nCheck the render method of `'+ownerName+'`.';}}throw new Error('Element type is invalid: expected a string (for built-in '+'components) or a class/function (for composite components) '+("but got: "+(type==null?type:typeof type)+"."+info));}}}var fiber=createFiber(fiberTag,pendingProps,key,mode);fiber.elementType=type;fiber.type=resolvedType;fiber.lanes=lanes;{fiber._debugOwner=owner;}return fiber;}function createFiberFromElement(element,mode,lanes){var owner=null;{owner=element._owner;}var type=element.type;var key=element.key;var pendingProps=element.props;var fiber=createFiberFromTypeAndProps(type,key,pendingProps,owner,mode,lanes);{fiber._debugSource=element._source;fiber._debugOwner=element._owner;}return fiber;}function createFiberFromFragment(elements,mode,lanes,key){var fiber=createFiber(Fragment,elements,key,mode);fiber.lanes=lanes;return fiber;}function createFiberFromProfiler(pendingProps,mode,lanes,key){{if(typeof pendingProps.id!=='string'){error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.',typeof pendingProps.id);}}var fiber=createFiber(Profiler,pendingProps,key,mode|ProfileMode);fiber.elementType=REACT_PROFILER_TYPE;fiber.lanes=lanes;{fiber.stateNode={effectDuration:0,passiveEffectDuration:0};}return fiber;}function createFiberFromSuspense(pendingProps,mode,lanes,key){var fiber=createFiber(SuspenseComponent,pendingProps,key,mode);fiber.elementType=REACT_SUSPENSE_TYPE;fiber.lanes=lanes;return fiber;}function createFiberFromSuspenseList(pendingProps,mode,lanes,key){var fiber=createFiber(SuspenseListComponent,pendingProps,key,mode);fiber.elementType=REACT_SUSPENSE_LIST_TYPE;fiber.lanes=lanes;return fiber;}function createFiberFromOffscreen(pendingProps,mode,lanes,key){var fiber=createFiber(OffscreenComponent,pendingProps,key,mode);fiber.elementType=REACT_OFFSCREEN_TYPE;fiber.lanes=lanes;var primaryChildInstance={isHidden:false};fiber.stateNode=primaryChildInstance;return fiber;}function createFiberFromText(content,mode,lanes){var fiber=createFiber(HostText,content,null,mode);fiber.lanes=lanes;return fiber;}function createFiberFromHostInstanceForDeletion(){var fiber=createFiber(HostComponent,null,null,NoMode);fiber.elementType='DELETED';return fiber;}function createFiberFromDehydratedFragment(dehydratedNode){var fiber=createFiber(DehydratedFragment,null,null,NoMode);fiber.stateNode=dehydratedNode;return fiber;}function createFiberFromPortal(portal,mode,lanes){var pendingProps=portal.children!==null?portal.children:[];var fiber=createFiber(HostPortal,pendingProps,portal.key,mode);fiber.lanes=lanes;fiber.stateNode={containerInfo:portal.containerInfo,pendingChildren:null,// Used by persistent updates
		implementation:portal.implementation};return fiber;}// Used for stashing WIP properties to replay failed work in DEV.
		function assignFiberPropertiesInDEV(target,source){if(target===null){// This Fiber's initial properties will always be overwritten.
		// We only use a Fiber to ensure the same hidden class so DEV isn't slow.
		target=createFiber(IndeterminateComponent,null,null,NoMode);}// This is intentionally written as a list of all properties.
		// We tried to use Object.assign() instead but this is called in
		// the hottest path, and Object.assign() was too slow:
		// https://github.com/facebook/react/issues/12502
		// This code is DEV-only so size is not a concern.
		target.tag=source.tag;target.key=source.key;target.elementType=source.elementType;target.type=source.type;target.stateNode=source.stateNode;target.return=source.return;target.child=source.child;target.sibling=source.sibling;target.index=source.index;target.ref=source.ref;target.pendingProps=source.pendingProps;target.memoizedProps=source.memoizedProps;target.updateQueue=source.updateQueue;target.memoizedState=source.memoizedState;target.dependencies=source.dependencies;target.mode=source.mode;target.flags=source.flags;target.subtreeFlags=source.subtreeFlags;target.deletions=source.deletions;target.lanes=source.lanes;target.childLanes=source.childLanes;target.alternate=source.alternate;{target.actualDuration=source.actualDuration;target.actualStartTime=source.actualStartTime;target.selfBaseDuration=source.selfBaseDuration;target.treeBaseDuration=source.treeBaseDuration;}target._debugSource=source._debugSource;target._debugOwner=source._debugOwner;target._debugNeedsRemount=source._debugNeedsRemount;target._debugHookTypes=source._debugHookTypes;return target;}function FiberRootNode(containerInfo,tag,hydrate,identifierPrefix,onRecoverableError){this.tag=tag;this.containerInfo=containerInfo;this.pendingChildren=null;this.current=null;this.pingCache=null;this.finishedWork=null;this.timeoutHandle=noTimeout;this.context=null;this.pendingContext=null;this.callbackNode=null;this.callbackPriority=NoLane;this.eventTimes=createLaneMap(NoLanes);this.expirationTimes=createLaneMap(NoTimestamp);this.pendingLanes=NoLanes;this.suspendedLanes=NoLanes;this.pingedLanes=NoLanes;this.expiredLanes=NoLanes;this.mutableReadLanes=NoLanes;this.finishedLanes=NoLanes;this.entangledLanes=NoLanes;this.entanglements=createLaneMap(NoLanes);this.identifierPrefix=identifierPrefix;this.onRecoverableError=onRecoverableError;{this.mutableSourceEagerHydrationData=null;}{this.effectDuration=0;this.passiveEffectDuration=0;}{this.memoizedUpdaters=new Set();var pendingUpdatersLaneMap=this.pendingUpdatersLaneMap=[];for(var _i=0;_i<TotalLanes;_i++){pendingUpdatersLaneMap.push(new Set());}}{switch(tag){case ConcurrentRoot:this._debugRootType=hydrate?'hydrateRoot()':'createRoot()';break;case LegacyRoot:this._debugRootType=hydrate?'hydrate()':'render()';break;}}}function createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,// TODO: We have several of these arguments that are conceptually part of the
		// host config, but because they are passed in at runtime, we have to thread
		// them through the root constructor. Perhaps we should put them all into a
		// single type, like a DynamicHostConfig that is defined by the renderer.
		identifierPrefix,onRecoverableError,transitionCallbacks){var root=new FiberRootNode(containerInfo,tag,hydrate,identifierPrefix,onRecoverableError);// stateNode is any.
		var uninitializedFiber=createHostRootFiber(tag,isStrictMode);root.current=uninitializedFiber;uninitializedFiber.stateNode=root;{var _initialState={element:initialChildren,isDehydrated:hydrate,cache:null,// not enabled yet
		transitions:null,pendingSuspenseBoundaries:null};uninitializedFiber.memoizedState=_initialState;}initializeUpdateQueue(uninitializedFiber);return root;}var ReactVersion='18.2.0';function createPortal(children,containerInfo,// TODO: figure out the API for cross-renderer implementation.
		implementation){var key=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;{checkKeyStringCoercion(key);}return {// This tag allow us to uniquely identify this as a React Portal
		$$typeof:REACT_PORTAL_TYPE,key:key==null?null:''+key,children:children,containerInfo:containerInfo,implementation:implementation};}var didWarnAboutNestedUpdates;var didWarnAboutFindNodeInStrictMode;{didWarnAboutNestedUpdates=false;didWarnAboutFindNodeInStrictMode={};}function getContextForSubtree(parentComponent){if(!parentComponent){return emptyContextObject;}var fiber=get(parentComponent);var parentContext=findCurrentUnmaskedContext(fiber);if(fiber.tag===ClassComponent){var Component=fiber.type;if(isContextProvider(Component)){return processChildContext(fiber,Component,parentContext);}}return parentContext;}function findHostInstanceWithWarning(component,methodName){{var fiber=get(component);if(fiber===undefined){if(typeof component.render==='function'){throw new Error('Unable to find node on an unmounted component.');}else {var keys=Object.keys(component).join(',');throw new Error("Argument appears to not be a ReactComponent. Keys: "+keys);}}var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}if(hostFiber.mode&StrictLegacyMode){var componentName=getComponentNameFromFiber(fiber)||'Component';if(!didWarnAboutFindNodeInStrictMode[componentName]){didWarnAboutFindNodeInStrictMode[componentName]=true;var previousFiber=current;try{setCurrentFiber(hostFiber);if(fiber.mode&StrictLegacyMode){error('%s is deprecated in StrictMode. '+'%s was passed an instance of %s which is inside StrictMode. '+'Instead, add a ref directly to the element you want to reference. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-find-node',methodName,methodName,componentName);}else {error('%s is deprecated in StrictMode. '+'%s was passed an instance of %s which renders StrictMode children. '+'Instead, add a ref directly to the element you want to reference. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-find-node',methodName,methodName,componentName);}}finally{// Ideally this should reset to previous but this shouldn't be called in
		// render and there's another warning for that anyway.
		if(previousFiber){setCurrentFiber(previousFiber);}else {resetCurrentFiber();}}}}return hostFiber.stateNode;}}function createContainer(containerInfo,tag,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError,transitionCallbacks){var hydrate=false;var initialChildren=null;return createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);}function createHydrationContainer(initialChildren,// TODO: Remove `callback` when we delete legacy mode.
		callback,containerInfo,tag,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError,transitionCallbacks){var hydrate=true;var root=createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);// TODO: Move this to FiberRoot constructor
		root.context=getContextForSubtree(null);// Schedule the initial render. In a hydration root, this is different from
		// a regular update because the initial render must match was was rendered
		// on the server.
		// NOTE: This update intentionally doesn't have a payload. We're only using
		// the update to schedule work on the root fiber (and, for legacy roots, to
		// enqueue the callback if one is provided).
		var current=root.current;var eventTime=requestEventTime();var lane=requestUpdateLane(current);var update=createUpdate(eventTime,lane);update.callback=callback!==undefined&&callback!==null?callback:null;enqueueUpdate(current,update,lane);scheduleInitialHydrationOnRoot(root,lane,eventTime);return root;}function updateContainer(element,container,parentComponent,callback){{onScheduleRoot(container,element);}var current$1=container.current;var eventTime=requestEventTime();var lane=requestUpdateLane(current$1);{markRenderScheduled(lane);}var context=getContextForSubtree(parentComponent);if(container.context===null){container.context=context;}else {container.pendingContext=context;}{if(isRendering&&current!==null&&!didWarnAboutNestedUpdates){didWarnAboutNestedUpdates=true;error('Render methods should be a pure function of props and state; '+'triggering nested component updates from render is not allowed. '+'If necessary, trigger nested updates in componentDidUpdate.\n\n'+'Check the render method of %s.',getComponentNameFromFiber(current)||'Unknown');}}var update=createUpdate(eventTime,lane);// Caution: React DevTools currently depends on this property
		// being called "element".
		update.payload={element:element};callback=callback===undefined?null:callback;if(callback!==null){{if(typeof callback!=='function'){error('render(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callback);}}update.callback=callback;}var root=enqueueUpdate(current$1,update,lane);if(root!==null){scheduleUpdateOnFiber(root,current$1,lane,eventTime);entangleTransitions(root,current$1,lane);}return lane;}function getPublicRootInstance(container){var containerFiber=container.current;if(!containerFiber.child){return null;}switch(containerFiber.child.tag){case HostComponent:return getPublicInstance(containerFiber.child.stateNode);default:return containerFiber.child.stateNode;}}function attemptSynchronousHydration$1(fiber){switch(fiber.tag){case HostRoot:{var root=fiber.stateNode;if(isRootDehydrated(root)){// Flush the first scheduled "update".
		var lanes=getHighestPriorityPendingLanes(root);flushRoot(root,lanes);}break;}case SuspenseComponent:{flushSync(function(){var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,SyncLane,eventTime);}});// If we're still blocked after this, we need to increase
		// the priority of any promises resolving within this
		// boundary so that they next attempt also has higher pri.
		var retryLane=SyncLane;markRetryLaneIfNotHydrated(fiber,retryLane);break;}}}function markRetryLaneImpl(fiber,retryLane){var suspenseState=fiber.memoizedState;if(suspenseState!==null&&suspenseState.dehydrated!==null){suspenseState.retryLane=higherPriorityLane(suspenseState.retryLane,retryLane);}}// Increases the priority of thenables when they resolve within this boundary.
		function markRetryLaneIfNotHydrated(fiber,retryLane){markRetryLaneImpl(fiber,retryLane);var alternate=fiber.alternate;if(alternate){markRetryLaneImpl(alternate,retryLane);}}function attemptContinuousHydration$1(fiber){if(fiber.tag!==SuspenseComponent){// We ignore HostRoots here because we can't increase
		// their priority and they should not suspend on I/O,
		// since you have to wrap anything that might suspend in
		// Suspense.
		return;}var lane=SelectiveHydrationLane;var root=enqueueConcurrentRenderForLane(fiber,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);}markRetryLaneIfNotHydrated(fiber,lane);}function attemptHydrationAtCurrentPriority$1(fiber){if(fiber.tag!==SuspenseComponent){// We ignore HostRoots here because we can't increase
		// their priority other than synchronously flush it.
		return;}var lane=requestUpdateLane(fiber);var root=enqueueConcurrentRenderForLane(fiber,lane);if(root!==null){var eventTime=requestEventTime();scheduleUpdateOnFiber(root,fiber,lane,eventTime);}markRetryLaneIfNotHydrated(fiber,lane);}function findHostInstanceWithNoPortals(fiber){var hostFiber=findCurrentHostFiberWithNoPortals(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}var shouldErrorImpl=function(fiber){return null;};function shouldError(fiber){return shouldErrorImpl(fiber);}var shouldSuspendImpl=function(fiber){return false;};function shouldSuspend(fiber){return shouldSuspendImpl(fiber);}var overrideHookState=null;var overrideHookStateDeletePath=null;var overrideHookStateRenamePath=null;var overrideProps=null;var overridePropsDeletePath=null;var overridePropsRenamePath=null;var scheduleUpdate=null;var setErrorHandler=null;var setSuspenseHandler=null;{var copyWithDeleteImpl=function(obj,path,index){var key=path[index];var updated=isArray(obj)?obj.slice():assign({},obj);if(index+1===path.length){if(isArray(updated)){updated.splice(key,1);}else {delete updated[key];}return updated;}// $FlowFixMe number or string is fine here
		updated[key]=copyWithDeleteImpl(obj[key],path,index+1);return updated;};var copyWithDelete=function(obj,path){return copyWithDeleteImpl(obj,path,0);};var copyWithRenameImpl=function(obj,oldPath,newPath,index){var oldKey=oldPath[index];var updated=isArray(obj)?obj.slice():assign({},obj);if(index+1===oldPath.length){var newKey=newPath[index];// $FlowFixMe number or string is fine here
		updated[newKey]=updated[oldKey];if(isArray(updated)){updated.splice(oldKey,1);}else {delete updated[oldKey];}}else {// $FlowFixMe number or string is fine here
		updated[oldKey]=copyWithRenameImpl(// $FlowFixMe number or string is fine here
		obj[oldKey],oldPath,newPath,index+1);}return updated;};var copyWithRename=function(obj,oldPath,newPath){if(oldPath.length!==newPath.length){warn('copyWithRename() expects paths of the same length');return;}else {for(var i=0;i<newPath.length-1;i++){if(oldPath[i]!==newPath[i]){warn('copyWithRename() expects paths to be the same except for the deepest key');return;}}}return copyWithRenameImpl(obj,oldPath,newPath,0);};var copyWithSetImpl=function(obj,path,index,value){if(index>=path.length){return value;}var key=path[index];var updated=isArray(obj)?obj.slice():assign({},obj);// $FlowFixMe number or string is fine here
		updated[key]=copyWithSetImpl(obj[key],path,index+1,value);return updated;};var copyWithSet=function(obj,path,value){return copyWithSetImpl(obj,path,0,value);};var findHook=function(fiber,id){// For now, the "id" of stateful hooks is just the stateful hook index.
		// This may change in the future with e.g. nested hooks.
		var currentHook=fiber.memoizedState;while(currentHook!==null&&id>0){currentHook=currentHook.next;id--;}return currentHook;};// Support DevTools editable values for useState and useReducer.
		overrideHookState=function(fiber,id,path,value){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithSet(hook.memoizedState,path,value);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,
		// because there is no update we can add for useReducer hooks that won't trigger an error.
		// (There's no appropriate action type for DevTools overrides.)
		// As a result though, React will see the scheduled update as a noop and bailout.
		// Shallow cloning props works as a workaround for now to bypass the bailout check.
		fiber.memoizedProps=assign({},fiber.memoizedProps);var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}};overrideHookStateDeletePath=function(fiber,id,path){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithDelete(hook.memoizedState,path);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,
		// because there is no update we can add for useReducer hooks that won't trigger an error.
		// (There's no appropriate action type for DevTools overrides.)
		// As a result though, React will see the scheduled update as a noop and bailout.
		// Shallow cloning props works as a workaround for now to bypass the bailout check.
		fiber.memoizedProps=assign({},fiber.memoizedProps);var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}};overrideHookStateRenamePath=function(fiber,id,oldPath,newPath){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithRename(hook.memoizedState,oldPath,newPath);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,
		// because there is no update we can add for useReducer hooks that won't trigger an error.
		// (There's no appropriate action type for DevTools overrides.)
		// As a result though, React will see the scheduled update as a noop and bailout.
		// Shallow cloning props works as a workaround for now to bypass the bailout check.
		fiber.memoizedProps=assign({},fiber.memoizedProps);var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}}};// Support DevTools props for function components, forwardRef, memo, host components, etc.
		overrideProps=function(fiber,path,value){fiber.pendingProps=copyWithSet(fiber.memoizedProps,path,value);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};overridePropsDeletePath=function(fiber,path){fiber.pendingProps=copyWithDelete(fiber.memoizedProps,path);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};overridePropsRenamePath=function(fiber,oldPath,newPath){fiber.pendingProps=copyWithRename(fiber.memoizedProps,oldPath,newPath);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};scheduleUpdate=function(fiber){var root=enqueueConcurrentRenderForLane(fiber,SyncLane);if(root!==null){scheduleUpdateOnFiber(root,fiber,SyncLane,NoTimestamp);}};setErrorHandler=function(newShouldErrorImpl){shouldErrorImpl=newShouldErrorImpl;};setSuspenseHandler=function(newShouldSuspendImpl){shouldSuspendImpl=newShouldSuspendImpl;};}function findHostInstanceByFiber(fiber){var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}function emptyFindFiberByHostInstance(instance){return null;}function getCurrentFiberForDevTools(){return current;}function injectIntoDevTools(devToolsConfig){var findFiberByHostInstance=devToolsConfig.findFiberByHostInstance;var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;return injectInternals({bundleType:devToolsConfig.bundleType,version:devToolsConfig.version,rendererPackageName:devToolsConfig.rendererPackageName,rendererConfig:devToolsConfig.rendererConfig,overrideHookState:overrideHookState,overrideHookStateDeletePath:overrideHookStateDeletePath,overrideHookStateRenamePath:overrideHookStateRenamePath,overrideProps:overrideProps,overridePropsDeletePath:overridePropsDeletePath,overridePropsRenamePath:overridePropsRenamePath,setErrorHandler:setErrorHandler,setSuspenseHandler:setSuspenseHandler,scheduleUpdate:scheduleUpdate,currentDispatcherRef:ReactCurrentDispatcher,findHostInstanceByFiber:findHostInstanceByFiber,findFiberByHostInstance:findFiberByHostInstance||emptyFindFiberByHostInstance,// React Refresh
		findHostInstancesForRefresh:findHostInstancesForRefresh,scheduleRefresh:scheduleRefresh,scheduleRoot:scheduleRoot,setRefreshHandler:setRefreshHandler,// Enables DevTools to append owner stacks to error messages in DEV mode.
		getCurrentFiber:getCurrentFiberForDevTools,// Enables DevTools to detect reconciler version rather than renderer version
		// which may not match for third party renderers.
		reconcilerVersion:ReactVersion});}/* global reportError */var defaultOnRecoverableError=typeof reportError==='function'?// In modern browsers, reportError will dispatch an error event,
		// emulating an uncaught JavaScript error.
		reportError:function(error){// In older browsers and test environments, fallback to console.error.
		// eslint-disable-next-line react-internal/no-production-logging
		console['error'](error);};function ReactDOMRoot(internalRoot){this._internalRoot=internalRoot;}ReactDOMHydrationRoot.prototype.render=ReactDOMRoot.prototype.render=function(children){var root=this._internalRoot;if(root===null){throw new Error('Cannot update an unmounted root.');}{if(typeof arguments[1]==='function'){error('render(...): does not support the second callback argument. '+'To execute a side effect after rendering, declare it in a component body with useEffect().');}else if(isValidContainer(arguments[1])){error('You passed a container to the second argument of root.render(...). '+"You don't need to pass it again since you already passed it to create the root.");}else if(typeof arguments[1]!=='undefined'){error('You passed a second argument to root.render(...) but it only accepts '+'one argument.');}var container=root.containerInfo;if(container.nodeType!==COMMENT_NODE){var hostInstance=findHostInstanceWithNoPortals(root.current);if(hostInstance){if(hostInstance.parentNode!==container){error('render(...): It looks like the React-rendered content of the '+'root container was removed without using React. This is not '+'supported and will cause errors. Instead, call '+"root.unmount() to empty a root's container.");}}}}updateContainer(children,root,null,null);};ReactDOMHydrationRoot.prototype.unmount=ReactDOMRoot.prototype.unmount=function(){{if(typeof arguments[0]==='function'){error('unmount(...): does not support a callback argument. '+'To execute a side effect after rendering, declare it in a component body with useEffect().');}}var root=this._internalRoot;if(root!==null){this._internalRoot=null;var container=root.containerInfo;{if(isAlreadyRendering()){error('Attempted to synchronously unmount a root while React was already '+'rendering. React cannot finish unmounting the root until the '+'current render has completed, which may lead to a race condition.');}}flushSync(function(){updateContainer(null,root,null,null);});unmarkContainerAsRoot(container);}};function createRoot(container,options){if(!isValidContainer(container)){throw new Error('createRoot(...): Target container is not a DOM element.');}warnIfReactDOMContainerInDEV(container);var isStrictMode=false;var concurrentUpdatesByDefaultOverride=false;var identifierPrefix='';var onRecoverableError=defaultOnRecoverableError;if(options!==null&&options!==undefined){{if(options.hydrate){warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');}else {if(typeof options==='object'&&options!==null&&options.$$typeof===REACT_ELEMENT_TYPE){error('You passed a JSX element to createRoot. You probably meant to '+'call root.render instead. '+'Example usage:\n\n'+'  let root = createRoot(domContainer);\n'+'  root.render(<App />);');}}}if(options.unstable_strictMode===true){isStrictMode=true;}if(options.identifierPrefix!==undefined){identifierPrefix=options.identifierPrefix;}if(options.onRecoverableError!==undefined){onRecoverableError=options.onRecoverableError;}if(options.transitionCallbacks!==undefined){options.transitionCallbacks;}}var root=createContainer(container,ConcurrentRoot,null,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);markContainerAsRoot(root.current,container);var rootContainerElement=container.nodeType===COMMENT_NODE?container.parentNode:container;listenToAllSupportedEvents(rootContainerElement);return new ReactDOMRoot(root);}function ReactDOMHydrationRoot(internalRoot){this._internalRoot=internalRoot;}function scheduleHydration(target){if(target){queueExplicitHydrationTarget(target);}}ReactDOMHydrationRoot.prototype.unstable_scheduleHydration=scheduleHydration;function hydrateRoot(container,initialChildren,options){if(!isValidContainer(container)){throw new Error('hydrateRoot(...): Target container is not a DOM element.');}warnIfReactDOMContainerInDEV(container);{if(initialChildren===undefined){error('Must provide initial children as second argument to hydrateRoot. '+'Example usage: hydrateRoot(domContainer, <App />)');}}// For now we reuse the whole bag of options since they contain
		// the hydration callbacks.
		var hydrationCallbacks=options!=null?options:null;// TODO: Delete this option
		var mutableSources=options!=null&&options.hydratedSources||null;var isStrictMode=false;var concurrentUpdatesByDefaultOverride=false;var identifierPrefix='';var onRecoverableError=defaultOnRecoverableError;if(options!==null&&options!==undefined){if(options.unstable_strictMode===true){isStrictMode=true;}if(options.identifierPrefix!==undefined){identifierPrefix=options.identifierPrefix;}if(options.onRecoverableError!==undefined){onRecoverableError=options.onRecoverableError;}}var root=createHydrationContainer(initialChildren,null,container,ConcurrentRoot,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);markContainerAsRoot(root.current,container);// This can't be a comment node since hydration doesn't work on comment nodes anyway.
		listenToAllSupportedEvents(container);if(mutableSources){for(var i=0;i<mutableSources.length;i++){var mutableSource=mutableSources[i];registerMutableSourceForHydration(root,mutableSource);}}return new ReactDOMHydrationRoot(root);}function isValidContainer(node){return !!(node&&(node.nodeType===ELEMENT_NODE||node.nodeType===DOCUMENT_NODE||node.nodeType===DOCUMENT_FRAGMENT_NODE||!disableCommentsAsDOMContainers));}// TODO: Remove this function which also includes comment nodes.
		// We only use it in places that are currently more relaxed.
		function isValidContainerLegacy(node){return !!(node&&(node.nodeType===ELEMENT_NODE||node.nodeType===DOCUMENT_NODE||node.nodeType===DOCUMENT_FRAGMENT_NODE||node.nodeType===COMMENT_NODE&&node.nodeValue===' react-mount-point-unstable '));}function warnIfReactDOMContainerInDEV(container){{if(container.nodeType===ELEMENT_NODE&&container.tagName&&container.tagName.toUpperCase()==='BODY'){error('createRoot(): Creating roots directly with document.body is '+'discouraged, since its children are often manipulated by third-party '+'scripts and browser extensions. This may lead to subtle '+'reconciliation issues. Try using a container element created '+'for your app.');}if(isContainerMarkedAsRoot(container)){if(container._reactRootContainer){error('You are calling ReactDOMClient.createRoot() on a container that was previously '+'passed to ReactDOM.render(). This is not supported.');}else {error('You are calling ReactDOMClient.createRoot() on a container that '+'has already been passed to createRoot() before. Instead, call '+'root.render() on the existing root instead if you want to update it.');}}}}var ReactCurrentOwner$3=ReactSharedInternals.ReactCurrentOwner;var topLevelUpdateWarnings;{topLevelUpdateWarnings=function(container){if(container._reactRootContainer&&container.nodeType!==COMMENT_NODE){var hostInstance=findHostInstanceWithNoPortals(container._reactRootContainer.current);if(hostInstance){if(hostInstance.parentNode!==container){error('render(...): It looks like the React-rendered content of this '+'container was removed without using React. This is not '+'supported and will cause errors. Instead, call '+'ReactDOM.unmountComponentAtNode to empty a container.');}}}var isRootRenderedBySomeReact=!!container._reactRootContainer;var rootEl=getReactRootElementInContainer(container);var hasNonRootReactChild=!!(rootEl&&getInstanceFromNode(rootEl));if(hasNonRootReactChild&&!isRootRenderedBySomeReact){error('render(...): Replacing React-rendered children with a new root '+'component. If you intended to update the children of this node, '+'you should instead have the existing children update their state '+'and render the new components instead of calling ReactDOM.render.');}if(container.nodeType===ELEMENT_NODE&&container.tagName&&container.tagName.toUpperCase()==='BODY'){error('render(): Rendering components directly into document.body is '+'discouraged, since its children are often manipulated by third-party '+'scripts and browser extensions. This may lead to subtle '+'reconciliation issues. Try rendering into a container element created '+'for your app.');}};}function getReactRootElementInContainer(container){if(!container){return null;}if(container.nodeType===DOCUMENT_NODE){return container.documentElement;}else {return container.firstChild;}}function noopOnRecoverableError(){// This isn't reachable because onRecoverableError isn't called in the
		// legacy API.
		}function legacyCreateRootFromDOMContainer(container,initialChildren,parentComponent,callback,isHydrationContainer){if(isHydrationContainer){if(typeof callback==='function'){var originalCallback=callback;callback=function(){var instance=getPublicRootInstance(root);originalCallback.call(instance);};}var root=createHydrationContainer(initialChildren,callback,container,LegacyRoot,null,// hydrationCallbacks
		false,// isStrictMode
		false,// concurrentUpdatesByDefaultOverride,
		'',// identifierPrefix
		noopOnRecoverableError);container._reactRootContainer=root;markContainerAsRoot(root.current,container);var rootContainerElement=container.nodeType===COMMENT_NODE?container.parentNode:container;listenToAllSupportedEvents(rootContainerElement);flushSync();return root;}else {// First clear any existing content.
		var rootSibling;while(rootSibling=container.lastChild){container.removeChild(rootSibling);}if(typeof callback==='function'){var _originalCallback=callback;callback=function(){var instance=getPublicRootInstance(_root);_originalCallback.call(instance);};}var _root=createContainer(container,LegacyRoot,null,// hydrationCallbacks
		false,// isStrictMode
		false,// concurrentUpdatesByDefaultOverride,
		'',// identifierPrefix
		noopOnRecoverableError);container._reactRootContainer=_root;markContainerAsRoot(_root.current,container);var _rootContainerElement=container.nodeType===COMMENT_NODE?container.parentNode:container;listenToAllSupportedEvents(_rootContainerElement);// Initial mount should not be batched.
		flushSync(function(){updateContainer(initialChildren,_root,parentComponent,callback);});return _root;}}function warnOnInvalidCallback$1(callback,callerName){{if(callback!==null&&typeof callback!=='function'){error('%s(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callerName,callback);}}}function legacyRenderSubtreeIntoContainer(parentComponent,children,container,forceHydrate,callback){{topLevelUpdateWarnings(container);warnOnInvalidCallback$1(callback===undefined?null:callback,'render');}var maybeRoot=container._reactRootContainer;var root;if(!maybeRoot){// Initial mount
		root=legacyCreateRootFromDOMContainer(container,children,parentComponent,callback,forceHydrate);}else {root=maybeRoot;if(typeof callback==='function'){var originalCallback=callback;callback=function(){var instance=getPublicRootInstance(root);originalCallback.call(instance);};}// Update
		updateContainer(children,root,parentComponent,callback);}return getPublicRootInstance(root);}function findDOMNode(componentOrElement){{var owner=ReactCurrentOwner$3.current;if(owner!==null&&owner.stateNode!==null){var warnedAboutRefsInRender=owner.stateNode._warnedAboutRefsInRender;if(!warnedAboutRefsInRender){error('%s is accessing findDOMNode inside its render(). '+'render() should be a pure function of props and state. It should '+'never access something that requires stale data from the previous '+'render, such as refs. Move this logic to componentDidMount and '+'componentDidUpdate instead.',getComponentNameFromType(owner.type)||'A component');}owner.stateNode._warnedAboutRefsInRender=true;}}if(componentOrElement==null){return null;}if(componentOrElement.nodeType===ELEMENT_NODE){return componentOrElement;}{return findHostInstanceWithWarning(componentOrElement,'findDOMNode');}}function hydrate(element,container,callback){{error('ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot '+'instead. Until you switch to the new API, your app will behave as '+"if it's running React 17. Learn "+'more: https://reactjs.org/link/switch-to-createroot');}if(!isValidContainerLegacy(container)){throw new Error('Target container is not a DOM element.');}{var isModernRoot=isContainerMarkedAsRoot(container)&&container._reactRootContainer===undefined;if(isModernRoot){error('You are calling ReactDOM.hydrate() on a container that was previously '+'passed to ReactDOMClient.createRoot(). This is not supported. '+'Did you mean to call hydrateRoot(container, element)?');}}// TODO: throw or warn if we couldn't hydrate?
		return legacyRenderSubtreeIntoContainer(null,element,container,true,callback);}function render(element,container,callback){{error('ReactDOM.render is no longer supported in React 18. Use createRoot '+'instead. Until you switch to the new API, your app will behave as '+"if it's running React 17. Learn "+'more: https://reactjs.org/link/switch-to-createroot');}if(!isValidContainerLegacy(container)){throw new Error('Target container is not a DOM element.');}{var isModernRoot=isContainerMarkedAsRoot(container)&&container._reactRootContainer===undefined;if(isModernRoot){error('You are calling ReactDOM.render() on a container that was previously '+'passed to ReactDOMClient.createRoot(). This is not supported. '+'Did you mean to call root.render(element)?');}}return legacyRenderSubtreeIntoContainer(null,element,container,false,callback);}function unstable_renderSubtreeIntoContainer(parentComponent,element,containerNode,callback){{error('ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported '+'in React 18. Consider using a portal instead. Until you switch to '+"the createRoot API, your app will behave as if it's running React "+'17. Learn more: https://reactjs.org/link/switch-to-createroot');}if(!isValidContainerLegacy(containerNode)){throw new Error('Target container is not a DOM element.');}if(parentComponent==null||!has(parentComponent)){throw new Error('parentComponent must be a valid React Component');}return legacyRenderSubtreeIntoContainer(parentComponent,element,containerNode,false,callback);}function unmountComponentAtNode(container){if(!isValidContainerLegacy(container)){throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');}{var isModernRoot=isContainerMarkedAsRoot(container)&&container._reactRootContainer===undefined;if(isModernRoot){error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously '+'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?');}}if(container._reactRootContainer){{var rootEl=getReactRootElementInContainer(container);var renderedByDifferentReact=rootEl&&!getInstanceFromNode(rootEl);if(renderedByDifferentReact){error("unmountComponentAtNode(): The node you're attempting to unmount "+'was rendered by another copy of React.');}}// Unmount should not be batched.
		flushSync(function(){legacyRenderSubtreeIntoContainer(null,null,container,false,function(){// $FlowFixMe This should probably use `delete container._reactRootContainer`
		container._reactRootContainer=null;unmarkContainerAsRoot(container);});});// If you call unmountComponentAtNode twice in quick succession, you'll
		// get `true` twice. That's probably fine?
		return true;}else {{var _rootEl=getReactRootElementInContainer(container);var hasNonRootReactChild=!!(_rootEl&&getInstanceFromNode(_rootEl));// Check if the container itself is a React root node.
		var isContainerReactRoot=container.nodeType===ELEMENT_NODE&&isValidContainerLegacy(container.parentNode)&&!!container.parentNode._reactRootContainer;if(hasNonRootReactChild){error("unmountComponentAtNode(): The node you're attempting to unmount "+'was rendered by React and is not a top-level container. %s',isContainerReactRoot?'You may have accidentally passed in a React root node instead '+'of its container.':'Instead, have the parent component update its state and '+'rerender in order to remove this component.');}}return false;}}setAttemptSynchronousHydration(attemptSynchronousHydration$1);setAttemptContinuousHydration(attemptContinuousHydration$1);setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);setGetCurrentUpdatePriority(getCurrentUpdatePriority);setAttemptHydrationAtPriority(runWithPriority);{if(typeof Map!=='function'||// $FlowIssue Flow incorrectly thinks Map has no prototype
		Map.prototype==null||typeof Map.prototype.forEach!=='function'||typeof Set!=='function'||// $FlowIssue Flow incorrectly thinks Set has no prototype
		Set.prototype==null||typeof Set.prototype.clear!=='function'||typeof Set.prototype.forEach!=='function'){error('React depends on Map and Set built-in types. Make sure that you load a '+'polyfill in older browsers. https://reactjs.org/link/react-polyfills');}}setRestoreImplementation(restoreControlledState$3);setBatchingImplementation(batchedUpdates$1,discreteUpdates,flushSync);function createPortal$1(children,container){var key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!isValidContainer(container)){throw new Error('Target container is not a DOM element.');}// TODO: pass ReactDOM portal implementation as third argument
		// $FlowFixMe The Flow type is opaque but there's no way to actually create it.
		return createPortal(children,container,null,key);}function renderSubtreeIntoContainer(parentComponent,element,containerNode,callback){return unstable_renderSubtreeIntoContainer(parentComponent,element,containerNode,callback);}var Internals={usingClientEntryPoint:false,// Keep in sync with ReactTestUtils.js.
		// This is an array for better minification.
		Events:[getInstanceFromNode,getNodeFromInstance,getFiberCurrentPropsFromNode,enqueueStateRestore,restoreStateIfNeeded,batchedUpdates$1]};function createRoot$1(container,options){{if(!Internals.usingClientEntryPoint&&!false){error('You are importing createRoot from "react-dom" which is not supported. '+'You should instead import it from "react-dom/client".');}}return createRoot(container,options);}function hydrateRoot$1(container,initialChildren,options){{if(!Internals.usingClientEntryPoint&&!false){error('You are importing hydrateRoot from "react-dom" which is not supported. '+'You should instead import it from "react-dom/client".');}}return hydrateRoot(container,initialChildren,options);}// Overload the definition to the two valid signatures.
		// Warning, this opts-out of checking the function body.
		// eslint-disable-next-line no-redeclare
		function flushSync$1(fn){{if(isAlreadyRendering()){error('flushSync was called from inside a lifecycle method. React cannot '+'flush when React is already rendering. Consider moving this call to '+'a scheduler task or micro task.');}}return flushSync(fn);}var foundDevTools=injectIntoDevTools({findFiberByHostInstance:getClosestInstanceFromNode,bundleType:1,version:ReactVersion,rendererPackageName:'react-dom'});{if(!foundDevTools&&canUseDOM&&window.top===window.self){// If we're in Chrome or Firefox, provide a download link if not installed.
		if(navigator.userAgent.indexOf('Chrome')>-1&&navigator.userAgent.indexOf('Edge')===-1||navigator.userAgent.indexOf('Firefox')>-1){var protocol=window.location.protocol;// Don't warn in exotic cases like chrome-extension://.
		if(/^(https?|file):$/.test(protocol)){// eslint-disable-next-line react-internal/no-production-logging
		console.info('%cDownload the React DevTools '+'for a better development experience: '+'https://reactjs.org/link/react-devtools'+(protocol==='file:'?'\nYou might need to use a local HTTP server (instead of file://): '+'https://reactjs.org/link/react-devtools-faq':''),'font-weight:bold');}}}}reactDom_development.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Internals;reactDom_development.createPortal=createPortal$1;reactDom_development.createRoot=createRoot$1;reactDom_development.findDOMNode=findDOMNode;reactDom_development.flushSync=flushSync$1;reactDom_development.hydrate=hydrate;reactDom_development.hydrateRoot=hydrateRoot$1;reactDom_development.render=render;reactDom_development.unmountComponentAtNode=unmountComponentAtNode;reactDom_development.unstable_batchedUpdates=batchedUpdates$1;reactDom_development.unstable_renderSubtreeIntoContainer=renderSubtreeIntoContainer;reactDom_development.version=ReactVersion;/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined'&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop==='function'){__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());}})();}
		return reactDom_development;
	}

	{
	  reactDom.exports = requireReactDom_development();
	}

	var reactDomExports = reactDom.exports;

	var createRoot;

	var m = reactDomExports;
	{
	  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
	  createRoot = function (c, o) {
	    i.usingClientEntryPoint = true;
	    try {
	      return m.createRoot(c, o);
	    } finally {
	      i.usingClientEntryPoint = false;
	    }
	  };
	}

	const common = {
	  black: '#000',
	  white: '#fff'
	};
	var common$1 = common;

	const red = {
	  50: '#ffebee',
	  100: '#ffcdd2',
	  200: '#ef9a9a',
	  300: '#e57373',
	  400: '#ef5350',
	  500: '#f44336',
	  600: '#e53935',
	  700: '#d32f2f',
	  800: '#c62828',
	  900: '#b71c1c',
	  A100: '#ff8a80',
	  A200: '#ff5252',
	  A400: '#ff1744',
	  A700: '#d50000'
	};
	var red$1 = red;

	const purple = {
	  50: '#f3e5f5',
	  100: '#e1bee7',
	  200: '#ce93d8',
	  300: '#ba68c8',
	  400: '#ab47bc',
	  500: '#9c27b0',
	  600: '#8e24aa',
	  700: '#7b1fa2',
	  800: '#6a1b9a',
	  900: '#4a148c',
	  A100: '#ea80fc',
	  A200: '#e040fb',
	  A400: '#d500f9',
	  A700: '#aa00ff'
	};
	var purple$1 = purple;

	const blue = {
	  50: '#e3f2fd',
	  100: '#bbdefb',
	  200: '#90caf9',
	  300: '#64b5f6',
	  400: '#42a5f5',
	  500: '#2196f3',
	  600: '#1e88e5',
	  700: '#1976d2',
	  800: '#1565c0',
	  900: '#0d47a1',
	  A100: '#82b1ff',
	  A200: '#448aff',
	  A400: '#2979ff',
	  A700: '#2962ff'
	};
	var blue$1 = blue;

	const lightBlue = {
	  50: '#e1f5fe',
	  100: '#b3e5fc',
	  200: '#81d4fa',
	  300: '#4fc3f7',
	  400: '#29b6f6',
	  500: '#03a9f4',
	  600: '#039be5',
	  700: '#0288d1',
	  800: '#0277bd',
	  900: '#01579b',
	  A100: '#80d8ff',
	  A200: '#40c4ff',
	  A400: '#00b0ff',
	  A700: '#0091ea'
	};
	var lightBlue$1 = lightBlue;

	const green = {
	  50: '#e8f5e9',
	  100: '#c8e6c9',
	  200: '#a5d6a7',
	  300: '#81c784',
	  400: '#66bb6a',
	  500: '#4caf50',
	  600: '#43a047',
	  700: '#388e3c',
	  800: '#2e7d32',
	  900: '#1b5e20',
	  A100: '#b9f6ca',
	  A200: '#69f0ae',
	  A400: '#00e676',
	  A700: '#00c853'
	};
	var green$1 = green;

	const orange = {
	  50: '#fff3e0',
	  100: '#ffe0b2',
	  200: '#ffcc80',
	  300: '#ffb74d',
	  400: '#ffa726',
	  500: '#ff9800',
	  600: '#fb8c00',
	  700: '#f57c00',
	  800: '#ef6c00',
	  900: '#e65100',
	  A100: '#ffd180',
	  A200: '#ffab40',
	  A400: '#ff9100',
	  A700: '#ff6d00'
	};
	var orange$1 = orange;

	const grey = {
	  50: '#fafafa',
	  100: '#f5f5f5',
	  200: '#eeeeee',
	  300: '#e0e0e0',
	  400: '#bdbdbd',
	  500: '#9e9e9e',
	  600: '#757575',
	  700: '#616161',
	  800: '#424242',
	  900: '#212121',
	  A100: '#f5f5f5',
	  A200: '#eeeeee',
	  A400: '#bdbdbd',
	  A700: '#616161'
	};
	var grey$1 = grey;

	/**
	 * WARNING: Don't import this directly.
	 * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.
	 * @param {number} code
	 */
	function formatMuiErrorMessage$1(code) {
	  // Apply babel-plugin-transform-template-literals in loose mode
	  // loose mode is safe if we're concatenating primitives
	  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose
	  /* eslint-disable prefer-template */
	  let url = 'https://mui.com/production-error/?code=' + code;
	  for (let i = 1; i < arguments.length; i += 1) {
	    // rest params over-transpile for this case
	    // eslint-disable-next-line prefer-rest-params
	    url += '&args[]=' + encodeURIComponent(arguments[i]);
	  }
	  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';
	  /* eslint-enable prefer-template */
	}

	var formatMuiErrorMessage = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': formatMuiErrorMessage$1
	});

	var THEME_ID = '$$material';

	function _extends$2() {
	  _extends$2 = Object.assign ? Object.assign.bind() : function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	    return target;
	  };
	  return _extends$2.apply(this, arguments);
	}

	function _objectWithoutPropertiesLoose$1(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	  return target;
	}

	function memoize$1(fn) {
	  var cache = Object.create(null);
	  return function (arg) {
	    if (cache[arg] === undefined) cache[arg] = fn(arg);
	    return cache[arg];
	  };
	}

	var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

	var isPropValid = /* #__PURE__ */memoize$1(function (prop) {
	  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
	  /* o */ && prop.charCodeAt(1) === 110
	  /* n */ && prop.charCodeAt(2) < 91;
	}
	/* Z+1 */);

	/*

	Based off glamor's StyleSheet, thanks Sunil ❤️

	high performance StyleSheet for css-in-js systems

	- uses multiple style tags behind the scenes for millions of rules
	- uses `insertRule` for appending in production for *much* faster performance

	// usage

	import { StyleSheet } from '@emotion/sheet'

	let styleSheet = new StyleSheet({ key: '', container: document.head })

	styleSheet.insert('#box { border: 1px solid red; }')
	- appends a css rule into the stylesheet

	styleSheet.flush()
	- empties the stylesheet of all its contents

	*/
	// $FlowFixMe
	function sheetForTag(tag) {
	  if (tag.sheet) {
	    // $FlowFixMe
	    return tag.sheet;
	  } // this weirdness brought to you by firefox

	  /* istanbul ignore next */

	  for (var i = 0; i < document.styleSheets.length; i++) {
	    if (document.styleSheets[i].ownerNode === tag) {
	      // $FlowFixMe
	      return document.styleSheets[i];
	    }
	  }
	}
	function createStyleElement(options) {
	  var tag = document.createElement('style');
	  tag.setAttribute('data-emotion', options.key);
	  if (options.nonce !== undefined) {
	    tag.setAttribute('nonce', options.nonce);
	  }
	  tag.appendChild(document.createTextNode(''));
	  tag.setAttribute('data-s', '');
	  return tag;
	}
	var StyleSheet = /*#__PURE__*/function () {
	  // Using Node instead of HTMLElement since container may be a ShadowRoot
	  function StyleSheet(options) {
	    var _this = this;
	    this._insertTag = function (tag) {
	      var before;
	      if (_this.tags.length === 0) {
	        if (_this.insertionPoint) {
	          before = _this.insertionPoint.nextSibling;
	        } else if (_this.prepend) {
	          before = _this.container.firstChild;
	        } else {
	          before = _this.before;
	        }
	      } else {
	        before = _this.tags[_this.tags.length - 1].nextSibling;
	      }
	      _this.container.insertBefore(tag, before);
	      _this.tags.push(tag);
	    };
	    this.isSpeedy = options.speedy === undefined ? "development" === 'production' : options.speedy;
	    this.tags = [];
	    this.ctr = 0;
	    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

	    this.key = options.key;
	    this.container = options.container;
	    this.prepend = options.prepend;
	    this.insertionPoint = options.insertionPoint;
	    this.before = null;
	  }
	  var _proto = StyleSheet.prototype;
	  _proto.hydrate = function hydrate(nodes) {
	    nodes.forEach(this._insertTag);
	  };
	  _proto.insert = function insert(rule) {
	    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
	    // it's 1 in dev because we insert source maps that map a single rule to a location
	    // and you can only have one source map per style tag
	    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
	      this._insertTag(createStyleElement(this));
	    }
	    var tag = this.tags[this.tags.length - 1];
	    {
	      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;
	      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {
	        // this would only cause problem in speedy mode
	        // but we don't want enabling speedy to affect the observable behavior
	        // so we report this error at all times
	        console.error("You're attempting to insert the following rule:\n" + rule + '\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');
	      }
	      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;
	    }
	    if (this.isSpeedy) {
	      var sheet = sheetForTag(tag);
	      try {
	        // this is the ultrafast version, works across browsers
	        // the big drawback is that the css won't be editable in devtools
	        sheet.insertRule(rule, sheet.cssRules.length);
	      } catch (e) {
	        if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {
	          console.error("There was a problem inserting the following rule: \"" + rule + "\"", e);
	        }
	      }
	    } else {
	      tag.appendChild(document.createTextNode(rule));
	    }
	    this.ctr++;
	  };
	  _proto.flush = function flush() {
	    // $FlowFixMe
	    this.tags.forEach(function (tag) {
	      return tag.parentNode && tag.parentNode.removeChild(tag);
	    });
	    this.tags = [];
	    this.ctr = 0;
	    {
	      this._alreadyInsertedOrderInsensitiveRule = false;
	    }
	  };
	  return StyleSheet;
	}();

	var MS = '-ms-';
	var MOZ = '-moz-';
	var WEBKIT = '-webkit-';
	var COMMENT = 'comm';
	var RULESET = 'rule';
	var DECLARATION = 'decl';
	var IMPORT = '@import';
	var KEYFRAMES = '@keyframes';
	var LAYER = '@layer';

	/**
	 * @param {number}
	 * @return {number}
	 */
	var abs = Math.abs;

	/**
	 * @param {number}
	 * @return {string}
	 */
	var from = String.fromCharCode;

	/**
	 * @param {object}
	 * @return {object}
	 */
	var assign = Object.assign;

	/**
	 * @param {string} value
	 * @param {number} length
	 * @return {number}
	 */
	function hash(value, length) {
	  return charat(value, 0) ^ 45 ? (((length << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
	}

	/**
	 * @param {string} value
	 * @return {string}
	 */
	function trim(value) {
	  return value.trim();
	}

	/**
	 * @param {string} value
	 * @param {RegExp} pattern
	 * @return {string?}
	 */
	function match(value, pattern) {
	  return (value = pattern.exec(value)) ? value[0] : value;
	}

	/**
	 * @param {string} value
	 * @param {(string|RegExp)} pattern
	 * @param {string} replacement
	 * @return {string}
	 */
	function replace(value, pattern, replacement) {
	  return value.replace(pattern, replacement);
	}

	/**
	 * @param {string} value
	 * @param {string} search
	 * @return {number}
	 */
	function indexof(value, search) {
	  return value.indexOf(search);
	}

	/**
	 * @param {string} value
	 * @param {number} index
	 * @return {number}
	 */
	function charat(value, index) {
	  return value.charCodeAt(index) | 0;
	}

	/**
	 * @param {string} value
	 * @param {number} begin
	 * @param {number} end
	 * @return {string}
	 */
	function substr(value, begin, end) {
	  return value.slice(begin, end);
	}

	/**
	 * @param {string} value
	 * @return {number}
	 */
	function strlen(value) {
	  return value.length;
	}

	/**
	 * @param {any[]} value
	 * @return {number}
	 */
	function sizeof(value) {
	  return value.length;
	}

	/**
	 * @param {any} value
	 * @param {any[]} array
	 * @return {any}
	 */
	function append(value, array) {
	  return array.push(value), value;
	}

	/**
	 * @param {string[]} array
	 * @param {function} callback
	 * @return {string}
	 */
	function combine(array, callback) {
	  return array.map(callback).join('');
	}

	var line = 1;
	var column = 1;
	var length = 0;
	var position = 0;
	var character = 0;
	var characters = '';

	/**
	 * @param {string} value
	 * @param {object | null} root
	 * @param {object | null} parent
	 * @param {string} type
	 * @param {string[] | string} props
	 * @param {object[] | string} children
	 * @param {number} length
	 */
	function node(value, root, parent, type, props, children, length) {
	  return {
	    value: value,
	    root: root,
	    parent: parent,
	    type: type,
	    props: props,
	    children: children,
	    line: line,
	    column: column,
	    length: length,
	    return: ''
	  };
	}

	/**
	 * @param {object} root
	 * @param {object} props
	 * @return {object}
	 */
	function copy(root, props) {
	  return assign(node('', null, null, '', null, null, 0), root, {
	    length: -root.length
	  }, props);
	}

	/**
	 * @return {number}
	 */
	function char() {
	  return character;
	}

	/**
	 * @return {number}
	 */
	function prev() {
	  character = position > 0 ? charat(characters, --position) : 0;
	  if (column--, character === 10) column = 1, line--;
	  return character;
	}

	/**
	 * @return {number}
	 */
	function next() {
	  character = position < length ? charat(characters, position++) : 0;
	  if (column++, character === 10) column = 1, line++;
	  return character;
	}

	/**
	 * @return {number}
	 */
	function peek() {
	  return charat(characters, position);
	}

	/**
	 * @return {number}
	 */
	function caret() {
	  return position;
	}

	/**
	 * @param {number} begin
	 * @param {number} end
	 * @return {string}
	 */
	function slice(begin, end) {
	  return substr(characters, begin, end);
	}

	/**
	 * @param {number} type
	 * @return {number}
	 */
	function token(type) {
	  switch (type) {
	    // \0 \t \n \r \s whitespace token
	    case 0:
	    case 9:
	    case 10:
	    case 13:
	    case 32:
	      return 5;
	    // ! + , / > @ ~ isolate token
	    case 33:
	    case 43:
	    case 44:
	    case 47:
	    case 62:
	    case 64:
	    case 126:
	    // ; { } breakpoint token
	    case 59:
	    case 123:
	    case 125:
	      return 4;
	    // : accompanied token
	    case 58:
	      return 3;
	    // " ' ( [ opening delimit token
	    case 34:
	    case 39:
	    case 40:
	    case 91:
	      return 2;
	    // ) ] closing delimit token
	    case 41:
	    case 93:
	      return 1;
	  }
	  return 0;
	}

	/**
	 * @param {string} value
	 * @return {any[]}
	 */
	function alloc(value) {
	  return line = column = 1, length = strlen(characters = value), position = 0, [];
	}

	/**
	 * @param {any} value
	 * @return {any}
	 */
	function dealloc(value) {
	  return characters = '', value;
	}

	/**
	 * @param {number} type
	 * @return {string}
	 */
	function delimit(type) {
	  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
	}

	/**
	 * @param {number} type
	 * @return {string}
	 */
	function whitespace(type) {
	  while (character = peek()) if (character < 33) next();else break;
	  return token(type) > 2 || token(character) > 3 ? '' : ' ';
	}

	/**
	 * @param {number} index
	 * @param {number} count
	 * @return {string}
	 */
	function escaping(index, count) {
	  while (--count && next())
	  // not 0-9 A-F a-f
	  if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97) break;
	  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
	}

	/**
	 * @param {number} type
	 * @return {number}
	 */
	function delimiter(type) {
	  while (next()) switch (character) {
	    // ] ) " '
	    case type:
	      return position;
	    // " '
	    case 34:
	    case 39:
	      if (type !== 34 && type !== 39) delimiter(character);
	      break;
	    // (
	    case 40:
	      if (type === 41) delimiter(type);
	      break;
	    // \
	    case 92:
	      next();
	      break;
	  }
	  return position;
	}

	/**
	 * @param {number} type
	 * @param {number} index
	 * @return {number}
	 */
	function commenter(type, index) {
	  while (next())
	  // //
	  if (type + character === 47 + 10) break;
	  // /*
	  else if (type + character === 42 + 42 && peek() === 47) break;
	  return '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next());
	}

	/**
	 * @param {number} index
	 * @return {string}
	 */
	function identifier(index) {
	  while (!token(peek())) next();
	  return slice(index, position);
	}

	/**
	 * @param {string} value
	 * @return {object[]}
	 */
	function compile(value) {
	  return dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value));
	}

	/**
	 * @param {string} value
	 * @param {object} root
	 * @param {object?} parent
	 * @param {string[]} rule
	 * @param {string[]} rules
	 * @param {string[]} rulesets
	 * @param {number[]} pseudo
	 * @param {number[]} points
	 * @param {string[]} declarations
	 * @return {object}
	 */
	function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
	  var index = 0;
	  var offset = 0;
	  var length = pseudo;
	  var atrule = 0;
	  var property = 0;
	  var previous = 0;
	  var variable = 1;
	  var scanning = 1;
	  var ampersand = 1;
	  var character = 0;
	  var type = '';
	  var props = rules;
	  var children = rulesets;
	  var reference = rule;
	  var characters = type;
	  while (scanning) switch (previous = character, character = next()) {
	    // (
	    case 40:
	      if (previous != 108 && charat(characters, length - 1) == 58) {
	        if (indexof(characters += replace(delimit(character), '&', '&\f'), '&\f') != -1) ampersand = -1;
	        break;
	      }
	    // " ' [
	    case 34:
	    case 39:
	    case 91:
	      characters += delimit(character);
	      break;
	    // \t \n \r \s
	    case 9:
	    case 10:
	    case 13:
	    case 32:
	      characters += whitespace(previous);
	      break;
	    // \
	    case 92:
	      characters += escaping(caret() - 1, 7);
	      continue;
	    // /
	    case 47:
	      switch (peek()) {
	        case 42:
	        case 47:
	          append(comment(commenter(next(), caret()), root, parent), declarations);
	          break;
	        default:
	          characters += '/';
	      }
	      break;
	    // {
	    case 123 * variable:
	      points[index++] = strlen(characters) * ampersand;
	    // } ; \0
	    case 125 * variable:
	    case 59:
	    case 0:
	      switch (character) {
	        // \0 }
	        case 0:
	        case 125:
	          scanning = 0;
	        // ;
	        case 59 + offset:
	          if (ampersand == -1) characters = replace(characters, /\f/g, '');
	          if (property > 0 && strlen(characters) - length) append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations);
	          break;
	        // @ ;
	        case 59:
	          characters += ';';
	        // { rule/at-rule
	        default:
	          append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets);
	          if (character === 123) if (offset === 0) parse(characters, root, reference, reference, props, rulesets, length, points, children);else switch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {
	            // d l m s
	            case 100:
	            case 108:
	            case 109:
	            case 115:
	              parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children);
	              break;
	            default:
	              parse(characters, reference, reference, reference, [''], children, 0, points, children);
	          }
	      }
	      index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo;
	      break;
	    // :
	    case 58:
	      length = 1 + strlen(characters), property = previous;
	    default:
	      if (variable < 1) if (character == 123) --variable;else if (character == 125 && variable++ == 0 && prev() == 125) continue;
	      switch (characters += from(character), character * variable) {
	        // &
	        case 38:
	          ampersand = offset > 0 ? 1 : (characters += '\f', -1);
	          break;
	        // ,
	        case 44:
	          points[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1;
	          break;
	        // @
	        case 64:
	          // -
	          if (peek() === 45) characters += delimit(next());
	          atrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++;
	          break;
	        // -
	        case 45:
	          if (previous === 45 && strlen(characters) == 2) variable = 0;
	      }
	  }
	  return rulesets;
	}

	/**
	 * @param {string} value
	 * @param {object} root
	 * @param {object?} parent
	 * @param {number} index
	 * @param {number} offset
	 * @param {string[]} rules
	 * @param {number[]} points
	 * @param {string} type
	 * @param {string[]} props
	 * @param {string[]} children
	 * @param {number} length
	 * @return {object}
	 */
	function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length) {
	  var post = offset - 1;
	  var rule = offset === 0 ? rules : [''];
	  var size = sizeof(rule);
	  for (var i = 0, j = 0, k = 0; i < index; ++i) for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x) if (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\f/g, rule[x]))) props[k++] = z;
	  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length);
	}

	/**
	 * @param {number} value
	 * @param {object} root
	 * @param {object?} parent
	 * @return {object}
	 */
	function comment(value, root, parent) {
	  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
	}

	/**
	 * @param {string} value
	 * @param {object} root
	 * @param {object?} parent
	 * @param {number} length
	 * @return {object}
	 */
	function declaration(value, root, parent, length) {
	  return node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length);
	}

	/**
	 * @param {object[]} children
	 * @param {function} callback
	 * @return {string}
	 */
	function serialize(children, callback) {
	  var output = '';
	  var length = sizeof(children);
	  for (var i = 0; i < length; i++) output += callback(children[i], i, children, callback) || '';
	  return output;
	}

	/**
	 * @param {object} element
	 * @param {number} index
	 * @param {object[]} children
	 * @param {function} callback
	 * @return {string}
	 */
	function stringify(element, index, children, callback) {
	  switch (element.type) {
	    case LAYER:
	      if (element.children.length) break;
	    case IMPORT:
	    case DECLARATION:
	      return element.return = element.return || element.value;
	    case COMMENT:
	      return '';
	    case KEYFRAMES:
	      return element.return = element.value + '{' + serialize(element.children, callback) + '}';
	    case RULESET:
	      element.value = element.props.join(',');
	  }
	  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : '';
	}

	/**
	 * @param {function[]} collection
	 * @return {function}
	 */
	function middleware(collection) {
	  var length = sizeof(collection);
	  return function (element, index, children, callback) {
	    var output = '';
	    for (var i = 0; i < length; i++) output += collection[i](element, index, children, callback) || '';
	    return output;
	  };
	}

	var weakMemoize = function weakMemoize(func) {
	  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps
	  var cache = new WeakMap();
	  return function (arg) {
	    if (cache.has(arg)) {
	      // $FlowFixMe
	      return cache.get(arg);
	    }
	    var ret = func(arg);
	    cache.set(arg, ret);
	    return ret;
	  };
	};

	var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
	  var previous = 0;
	  var character = 0;
	  while (true) {
	    previous = character;
	    character = peek(); // &\f

	    if (previous === 38 && character === 12) {
	      points[index] = 1;
	    }
	    if (token(character)) {
	      break;
	    }
	    next();
	  }
	  return slice(begin, position);
	};
	var toRules = function toRules(parsed, points) {
	  // pretend we've started with a comma
	  var index = -1;
	  var character = 44;
	  do {
	    switch (token(character)) {
	      case 0:
	        // &\f
	        if (character === 38 && peek() === 12) {
	          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
	          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
	          // and when it should just concatenate the outer and inner selectors
	          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
	          points[index] = 1;
	        }
	        parsed[index] += identifierWithPointTracking(position - 1, points, index);
	        break;
	      case 2:
	        parsed[index] += delimit(character);
	        break;
	      case 4:
	        // comma
	        if (character === 44) {
	          // colon
	          parsed[++index] = peek() === 58 ? '&\f' : '';
	          points[index] = parsed[index].length;
	          break;
	        }

	      // fallthrough

	      default:
	        parsed[index] += from(character);
	    }
	  } while (character = next());
	  return parsed;
	};
	var getRules = function getRules(value, points) {
	  return dealloc(toRules(alloc(value), points));
	}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11

	var fixedElements = /* #__PURE__ */new WeakMap();
	var compat = function compat(element) {
	  if (element.type !== 'rule' || !element.parent ||
	  // positive .length indicates that this rule contains pseudo
	  // negative .length indicates that this rule has been already prefixed
	  element.length < 1) {
	    return;
	  }
	  var value = element.value,
	    parent = element.parent;
	  var isImplicitRule = element.column === parent.column && element.line === parent.line;
	  while (parent.type !== 'rule') {
	    parent = parent.parent;
	    if (!parent) return;
	  } // short-circuit for the simplest case

	  if (element.props.length === 1 && value.charCodeAt(0) !== 58
	  /* colon */ && !fixedElements.get(parent)) {
	    return;
	  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
	  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"

	  if (isImplicitRule) {
	    return;
	  }
	  fixedElements.set(element, true);
	  var points = [];
	  var rules = getRules(value, points);
	  var parentRules = parent.props;
	  for (var i = 0, k = 0; i < rules.length; i++) {
	    for (var j = 0; j < parentRules.length; j++, k++) {
	      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
	    }
	  }
	};
	var removeLabel = function removeLabel(element) {
	  if (element.type === 'decl') {
	    var value = element.value;
	    if (
	    // charcode for l
	    value.charCodeAt(0) === 108 &&
	    // charcode for b
	    value.charCodeAt(2) === 98) {
	      // this ignores label
	      element["return"] = '';
	      element.value = '';
	    }
	  }
	};
	var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';
	var isIgnoringComment = function isIgnoringComment(element) {
	  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
	};
	var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
	  return function (element, index, children) {
	    if (element.type !== 'rule' || cache.compat) return;
	    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
	    if (unsafePseudoClasses) {
	      var isNested = !!element.parent; // in nested rules comments become children of the "auto-inserted" rule and that's always the `element.parent`
	      //
	      // considering this input:
	      // .a {
	      //   .b /* comm */ {}
	      //   color: hotpink;
	      // }
	      // we get output corresponding to this:
	      // .a {
	      //   & {
	      //     /* comm */
	      //     color: hotpink;
	      //   }
	      //   .b {}
	      // }

	      var commentContainer = isNested ? element.parent.children :
	      // global rule at the root level
	      children;
	      for (var i = commentContainer.length - 1; i >= 0; i--) {
	        var node = commentContainer[i];
	        if (node.line < element.line) {
	          break;
	        } // it is quite weird but comments are *usually* put at `column: element.column - 1`
	        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that
	        // this will also match inputs like this:
	        // .a {
	        //   /* comm */
	        //   .b {}
	        // }
	        //
	        // but that is fine
	        //
	        // it would be the easiest to change the placement of the comment to be the first child of the rule:
	        // .a {
	        //   .b { /* comm */ }
	        // }
	        // with such inputs we wouldn't have to search for the comment at all
	        // TODO: consider changing this comment placement in the next major version

	        if (node.column < element.column) {
	          if (isIgnoringComment(node)) {
	            return;
	          }
	          break;
	        }
	      }
	      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
	        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
	      });
	    }
	  };
	};
	var isImportRule = function isImportRule(element) {
	  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
	};
	var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
	  for (var i = index - 1; i >= 0; i--) {
	    if (!isImportRule(children[i])) {
	      return true;
	    }
	  }
	  return false;
	}; // use this to remove incorrect elements from further processing
	// so they don't get handed to the `sheet` (or anything else)
	// as that could potentially lead to additional logs which in turn could be overhelming to the user

	var nullifyElement = function nullifyElement(element) {
	  element.type = '';
	  element.value = '';
	  element["return"] = '';
	  element.children = '';
	  element.props = '';
	};
	var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
	  if (!isImportRule(element)) {
	    return;
	  }
	  if (element.parent) {
	    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
	    nullifyElement(element);
	  } else if (isPrependedWithRegularRules(index, children)) {
	    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
	    nullifyElement(element);
	  }
	};

	/* eslint-disable no-fallthrough */

	function prefix(value, length) {
	  switch (hash(value, length)) {
	    // color-adjust
	    case 5103:
	      return WEBKIT + 'print-' + value + value;
	    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)

	    case 5737:
	    case 4201:
	    case 3177:
	    case 3433:
	    case 1641:
	    case 4457:
	    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break

	    case 5572:
	    case 6356:
	    case 5844:
	    case 3191:
	    case 6645:
	    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,

	    case 6391:
	    case 5879:
	    case 5623:
	    case 6135:
	    case 4599:
	    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)

	    case 4215:
	    case 6389:
	    case 5109:
	    case 5365:
	    case 5621:
	    case 3829:
	      return WEBKIT + value + value;
	    // appearance, user-select, transform, hyphens, text-size-adjust

	    case 5349:
	    case 4246:
	    case 4810:
	    case 6968:
	    case 2756:
	      return WEBKIT + value + MOZ + value + MS + value + value;
	    // flex, flex-direction

	    case 6828:
	    case 4268:
	      return WEBKIT + value + MS + value + value;
	    // order

	    case 6165:
	      return WEBKIT + value + MS + 'flex-' + value + value;
	    // align-items

	    case 5187:
	      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;
	    // align-self

	    case 5443:
	      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;
	    // align-content

	    case 4675:
	      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;
	    // flex-shrink

	    case 5548:
	      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;
	    // flex-basis

	    case 5292:
	      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;
	    // flex-grow

	    case 6060:
	      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;
	    // transition

	    case 4554:
	      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;
	    // cursor

	    case 6187:
	      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;
	    // background, background-image

	    case 5495:
	    case 3959:
	      return replace(value, /(image-set\([^]*)/, WEBKIT + '$1' + '$`$1');
	    // justify-content

	    case 4968:
	      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;
	    // (margin|padding)-inline-(start|end)

	    case 4095:
	    case 3583:
	    case 4068:
	    case 2532:
	      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;
	    // (min|max)?(width|height|inline-size|block-size)

	    case 8116:
	    case 7059:
	    case 5753:
	    case 5535:
	    case 5445:
	    case 5701:
	    case 4933:
	    case 4677:
	    case 5533:
	    case 5789:
	    case 5021:
	    case 4765:
	      // stretch, max-content, min-content, fill-available
	      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {
	        // (m)ax-content, (m)in-content
	        case 109:
	          // -
	          if (charat(value, length + 4) !== 45) break;
	        // (f)ill-available, (f)it-content

	        case 102:
	          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
	        // (s)tretch

	        case 115:
	          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;
	      }
	      break;
	    // position: sticky

	    case 4949:
	      // (s)ticky?
	      if (charat(value, length + 1) !== 115) break;
	    // display: (flex|inline-flex)

	    case 6444:
	      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
	        // stic(k)y
	        case 107:
	          return replace(value, ':', ':' + WEBKIT) + value;
	        // (inline-)?fl(e)x

	        case 101:
	          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;
	      }
	      break;
	    // writing-mode

	    case 5936:
	      switch (charat(value, length + 11)) {
	        // vertical-l(r)
	        case 114:
	          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
	        // vertical-r(l)

	        case 108:
	          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
	        // horizontal(-)tb

	        case 45:
	          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
	      }
	      return WEBKIT + value + MS + value + value;
	  }
	  return value;
	}
	var prefixer = function prefixer(element, index, children, callback) {
	  if (element.length > -1) if (!element["return"]) switch (element.type) {
	    case DECLARATION:
	      element["return"] = prefix(element.value, element.length);
	      break;
	    case KEYFRAMES:
	      return serialize([copy(element, {
	        value: replace(element.value, '@', '@' + WEBKIT)
	      })], callback);
	    case RULESET:
	      if (element.length) return combine(element.props, function (value) {
	        switch (match(value, /(::plac\w+|:read-\w+)/)) {
	          // :read-(only|write)
	          case ':read-only':
	          case ':read-write':
	            return serialize([copy(element, {
	              props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')]
	            })], callback);
	          // :placeholder

	          case '::placeholder':
	            return serialize([copy(element, {
	              props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')]
	            }), copy(element, {
	              props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')]
	            }), copy(element, {
	              props: [replace(value, /:(plac\w+)/, MS + 'input-$1')]
	            })], callback);
	        }
	        return '';
	      });
	  }
	};
	var isBrowser$5 = typeof document !== 'undefined';
	var getServerStylisCache = isBrowser$5 ? undefined : weakMemoize(function () {
	  return memoize$1(function () {
	    var cache = {};
	    return function (name) {
	      return cache[name];
	    };
	  });
	});
	var defaultStylisPlugins = [prefixer];
	var createCache = function createCache(options) {
	  var key = options.key;
	  if (!key) {
	    throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\n" + "If multiple caches share the same key they might \"fight\" for each other's style elements.");
	  }
	  if (isBrowser$5 && key === 'css') {
	    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
	    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
	    // note this very very intentionally targets all style elements regardless of the key to ensure
	    // that creating a cache works inside of render of a React component

	    Array.prototype.forEach.call(ssrStyles, function (node) {
	      // we want to only move elements which have a space in the data-emotion attribute value
	      // because that indicates that it is an Emotion 11 server-side rendered style elements
	      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
	      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
	      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
	      // will not result in the Emotion 10 styles being destroyed
	      var dataEmotionAttribute = node.getAttribute('data-emotion');
	      if (dataEmotionAttribute.indexOf(' ') === -1) {
	        return;
	      }
	      document.head.appendChild(node);
	      node.setAttribute('data-s', '');
	    });
	  }
	  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
	  {
	    // $FlowFixMe
	    if (/[^a-z-]/.test(key)) {
	      throw new Error("Emotion key must only contain lower case alphabetical characters and - but \"" + key + "\" was passed");
	    }
	  }
	  var inserted = {};
	  var container;
	  var nodesToHydrate = [];
	  if (isBrowser$5) {
	    container = options.container || document.head;
	    Array.prototype.forEach.call(
	    // this means we will ignore elements which don't have a space in them which
	    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
	    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
	      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

	      for (var i = 1; i < attrib.length; i++) {
	        inserted[attrib[i]] = true;
	      }
	      nodesToHydrate.push(node);
	    });
	  }
	  var _insert;
	  var omnipresentPlugins = [compat, removeLabel];
	  {
	    omnipresentPlugins.push(createUnsafeSelectorsAlarm({
	      get compat() {
	        return cache.compat;
	      }
	    }), incorrectImportAlarm);
	  }
	  if (isBrowser$5) {
	    var currentSheet;
	    var finalizingPlugins = [stringify, function (element) {
	      if (!element.root) {
	        if (element["return"]) {
	          currentSheet.insert(element["return"]);
	        } else if (element.value && element.type !== COMMENT) {
	          // insert empty rule in non-production environments
	          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet
	          currentSheet.insert(element.value + "{}");
	        }
	      }
	    } ];
	    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
	    var stylis = function stylis(styles) {
	      return serialize(compile(styles), serializer);
	    };
	    _insert = function insert(selector, serialized, sheet, shouldCache) {
	      currentSheet = sheet;
	      if (serialized.map !== undefined) {
	        currentSheet = {
	          insert: function insert(rule) {
	            sheet.insert(rule + serialized.map);
	          }
	        };
	      }
	      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
	      if (shouldCache) {
	        cache.inserted[serialized.name] = true;
	      }
	    };
	  } else {
	    var _finalizingPlugins = [stringify];
	    var _serializer = middleware(omnipresentPlugins.concat(stylisPlugins, _finalizingPlugins));
	    var _stylis = function _stylis(styles) {
	      return serialize(compile(styles), _serializer);
	    }; // $FlowFixMe

	    var serverStylisCache = getServerStylisCache(stylisPlugins)(key);
	    var getRules = function getRules(selector, serialized) {
	      var name = serialized.name;
	      if (serverStylisCache[name] === undefined) {
	        serverStylisCache[name] = _stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
	      }
	      return serverStylisCache[name];
	    };
	    _insert = function _insert(selector, serialized, sheet, shouldCache) {
	      var name = serialized.name;
	      var rules = getRules(selector, serialized);
	      if (cache.compat === undefined) {
	        // in regular mode, we don't set the styles on the inserted cache
	        // since we don't need to and that would be wasting memory
	        // we return them so that they are rendered in a style tag
	        if (shouldCache) {
	          cache.inserted[name] = true;
	        }
	        if (
	        // using === development instead of !== production
	        // because if people do ssr in tests, the source maps showing up would be annoying
	        serialized.map !== undefined) {
	          return rules + serialized.map;
	        }
	        return rules;
	      } else {
	        // in compat mode, we put the styles on the inserted cache so
	        // that emotion-server can pull out the styles
	        // except when we don't want to cache it which was in Global but now
	        // is nowhere but we don't want to do a major right now
	        // and just in case we're going to leave the case here
	        // it's also not affecting client side bundle size
	        // so it's really not a big deal
	        if (shouldCache) {
	          cache.inserted[name] = rules;
	        } else {
	          return rules;
	        }
	      }
	    };
	  }
	  var cache = {
	    key: key,
	    sheet: new StyleSheet({
	      key: key,
	      container: container,
	      nonce: options.nonce,
	      speedy: options.speedy,
	      prepend: options.prepend,
	      insertionPoint: options.insertionPoint
	    }),
	    nonce: options.nonce,
	    inserted: inserted,
	    registered: {},
	    insert: _insert
	  };
	  cache.sheet.hydrate(nodesToHydrate);
	  return cache;
	};

	var reactIs$4 = {exports: {}};

	var reactIs_development$3 = {};

	/** @license React v16.13.1
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactIs_development$2;

	function requireReactIs_development$2 () {
		if (hasRequiredReactIs_development$2) return reactIs_development$3;
		hasRequiredReactIs_development$2 = 1;

		{
		  (function () {

		    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		    // nor polyfill, then a plain number is used for performance.
		    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
		    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
		    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
		    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
		    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
		    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
		    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
		    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
		    // (unstable) APIs that have been removed. Can we remove the symbols?

		    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
		    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
		    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
		    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
		    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
		    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
		    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
		    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
		    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
		    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
		    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
		    function isValidElementType(type) {
		      return typeof type === 'string' || typeof type === 'function' ||
		      // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
		      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
		    }
		    function typeOf(object) {
		      if (typeof object === 'object' && object !== null) {
		        var $$typeof = object.$$typeof;
		        switch ($$typeof) {
		          case REACT_ELEMENT_TYPE:
		            var type = object.type;
		            switch (type) {
		              case REACT_ASYNC_MODE_TYPE:
		              case REACT_CONCURRENT_MODE_TYPE:
		              case REACT_FRAGMENT_TYPE:
		              case REACT_PROFILER_TYPE:
		              case REACT_STRICT_MODE_TYPE:
		              case REACT_SUSPENSE_TYPE:
		                return type;
		              default:
		                var $$typeofType = type && type.$$typeof;
		                switch ($$typeofType) {
		                  case REACT_CONTEXT_TYPE:
		                  case REACT_FORWARD_REF_TYPE:
		                  case REACT_LAZY_TYPE:
		                  case REACT_MEMO_TYPE:
		                  case REACT_PROVIDER_TYPE:
		                    return $$typeofType;
		                  default:
		                    return $$typeof;
		                }
		            }
		          case REACT_PORTAL_TYPE:
		            return $$typeof;
		        }
		      }
		      return undefined;
		    } // AsyncMode is deprecated along with isAsyncMode

		    var AsyncMode = REACT_ASYNC_MODE_TYPE;
		    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		    var ContextConsumer = REACT_CONTEXT_TYPE;
		    var ContextProvider = REACT_PROVIDER_TYPE;
		    var Element = REACT_ELEMENT_TYPE;
		    var ForwardRef = REACT_FORWARD_REF_TYPE;
		    var Fragment = REACT_FRAGMENT_TYPE;
		    var Lazy = REACT_LAZY_TYPE;
		    var Memo = REACT_MEMO_TYPE;
		    var Portal = REACT_PORTAL_TYPE;
		    var Profiler = REACT_PROFILER_TYPE;
		    var StrictMode = REACT_STRICT_MODE_TYPE;
		    var Suspense = REACT_SUSPENSE_TYPE;
		    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

		    function isAsyncMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
		          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
		        }
		      }
		      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
		    }
		    function isConcurrentMode(object) {
		      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		    }
		    function isContextConsumer(object) {
		      return typeOf(object) === REACT_CONTEXT_TYPE;
		    }
		    function isContextProvider(object) {
		      return typeOf(object) === REACT_PROVIDER_TYPE;
		    }
		    function isElement(object) {
		      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		    }
		    function isForwardRef(object) {
		      return typeOf(object) === REACT_FORWARD_REF_TYPE;
		    }
		    function isFragment(object) {
		      return typeOf(object) === REACT_FRAGMENT_TYPE;
		    }
		    function isLazy(object) {
		      return typeOf(object) === REACT_LAZY_TYPE;
		    }
		    function isMemo(object) {
		      return typeOf(object) === REACT_MEMO_TYPE;
		    }
		    function isPortal(object) {
		      return typeOf(object) === REACT_PORTAL_TYPE;
		    }
		    function isProfiler(object) {
		      return typeOf(object) === REACT_PROFILER_TYPE;
		    }
		    function isStrictMode(object) {
		      return typeOf(object) === REACT_STRICT_MODE_TYPE;
		    }
		    function isSuspense(object) {
		      return typeOf(object) === REACT_SUSPENSE_TYPE;
		    }
		    reactIs_development$3.AsyncMode = AsyncMode;
		    reactIs_development$3.ConcurrentMode = ConcurrentMode;
		    reactIs_development$3.ContextConsumer = ContextConsumer;
		    reactIs_development$3.ContextProvider = ContextProvider;
		    reactIs_development$3.Element = Element;
		    reactIs_development$3.ForwardRef = ForwardRef;
		    reactIs_development$3.Fragment = Fragment;
		    reactIs_development$3.Lazy = Lazy;
		    reactIs_development$3.Memo = Memo;
		    reactIs_development$3.Portal = Portal;
		    reactIs_development$3.Profiler = Profiler;
		    reactIs_development$3.StrictMode = StrictMode;
		    reactIs_development$3.Suspense = Suspense;
		    reactIs_development$3.isAsyncMode = isAsyncMode;
		    reactIs_development$3.isConcurrentMode = isConcurrentMode;
		    reactIs_development$3.isContextConsumer = isContextConsumer;
		    reactIs_development$3.isContextProvider = isContextProvider;
		    reactIs_development$3.isElement = isElement;
		    reactIs_development$3.isForwardRef = isForwardRef;
		    reactIs_development$3.isFragment = isFragment;
		    reactIs_development$3.isLazy = isLazy;
		    reactIs_development$3.isMemo = isMemo;
		    reactIs_development$3.isPortal = isPortal;
		    reactIs_development$3.isProfiler = isProfiler;
		    reactIs_development$3.isStrictMode = isStrictMode;
		    reactIs_development$3.isSuspense = isSuspense;
		    reactIs_development$3.isValidElementType = isValidElementType;
		    reactIs_development$3.typeOf = typeOf;
		  })();
		}
		return reactIs_development$3;
	}

	{
	  reactIs$4.exports = requireReactIs_development$2();
	}

	var reactIsExports$1 = reactIs$4.exports;

	var reactIs$3 = reactIsExports$1;
	var FORWARD_REF_STATICS = {
	  '$$typeof': true,
	  render: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true
	};
	var MEMO_STATICS = {
	  '$$typeof': true,
	  compare: true,
	  defaultProps: true,
	  displayName: true,
	  propTypes: true,
	  type: true
	};
	var TYPE_STATICS = {};
	TYPE_STATICS[reactIs$3.ForwardRef] = FORWARD_REF_STATICS;
	TYPE_STATICS[reactIs$3.Memo] = MEMO_STATICS;

	var isBrowser$4 = typeof document !== 'undefined';
	function getRegisteredStyles(registered, registeredStyles, classNames) {
	  var rawClassName = '';
	  classNames.split(' ').forEach(function (className) {
	    if (registered[className] !== undefined) {
	      registeredStyles.push(registered[className] + ";");
	    } else {
	      rawClassName += className + " ";
	    }
	  });
	  return rawClassName;
	}
	var registerStyles = function registerStyles(cache, serialized, isStringTag) {
	  var className = cache.key + "-" + serialized.name;
	  if (
	  // we only need to add the styles to the registered cache if the
	  // class name could be used further down
	  // the tree but if it's a string tag, we know it won't
	  // so we don't have to add it to registered cache.
	  // this improves memory usage since we can avoid storing the whole style string
	  (isStringTag === false ||
	  // we need to always store it if we're in compat mode and
	  // in node since emotion-server relies on whether a style is in
	  // the registered cache to know whether a style is global or not
	  // also, note that this check will be dead code eliminated in the browser
	  isBrowser$4 === false && cache.compat !== undefined) && cache.registered[className] === undefined) {
	    cache.registered[className] = serialized.styles;
	  }
	};
	var insertStyles = function insertStyles(cache, serialized, isStringTag) {
	  registerStyles(cache, serialized, isStringTag);
	  var className = cache.key + "-" + serialized.name;
	  if (cache.inserted[serialized.name] === undefined) {
	    var stylesForSSR = '';
	    var current = serialized;
	    do {
	      var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
	      if (!isBrowser$4 && maybeStyles !== undefined) {
	        stylesForSSR += maybeStyles;
	      }
	      current = current.next;
	    } while (current !== undefined);
	    if (!isBrowser$4 && stylesForSSR.length !== 0) {
	      return stylesForSSR;
	    }
	  }
	};

	/* eslint-disable */
	// Inspired by https://github.com/garycourt/murmurhash-js
	// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
	function murmur2(str) {
	  // 'm' and 'r' are mixing constants generated offline.
	  // They're not really 'magic', they just happen to work well.
	  // const m = 0x5bd1e995;
	  // const r = 24;
	  // Initialize the hash
	  var h = 0; // Mix 4 bytes at a time into the hash

	  var k,
	    i = 0,
	    len = str.length;
	  for (; len >= 4; ++i, len -= 4) {
	    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
	    k = /* Math.imul(k, m): */
	    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
	    k ^= /* k >>> r: */
	    k >>> 24;
	    h = /* Math.imul(k, m): */
	    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^ /* Math.imul(h, m): */
	    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
	  } // Handle the last few bytes of the input array

	  switch (len) {
	    case 3:
	      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
	    case 2:
	      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
	    case 1:
	      h ^= str.charCodeAt(i) & 0xff;
	      h = /* Math.imul(h, m): */
	      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
	  } // Do a few final mixes of the hash to ensure the last few
	  // bytes are well-incorporated.

	  h ^= h >>> 13;
	  h = /* Math.imul(h, m): */
	  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
	  return ((h ^ h >>> 15) >>> 0).toString(36);
	}

	var unitlessKeys = {
	  animationIterationCount: 1,
	  aspectRatio: 1,
	  borderImageOutset: 1,
	  borderImageSlice: 1,
	  borderImageWidth: 1,
	  boxFlex: 1,
	  boxFlexGroup: 1,
	  boxOrdinalGroup: 1,
	  columnCount: 1,
	  columns: 1,
	  flex: 1,
	  flexGrow: 1,
	  flexPositive: 1,
	  flexShrink: 1,
	  flexNegative: 1,
	  flexOrder: 1,
	  gridRow: 1,
	  gridRowEnd: 1,
	  gridRowSpan: 1,
	  gridRowStart: 1,
	  gridColumn: 1,
	  gridColumnEnd: 1,
	  gridColumnSpan: 1,
	  gridColumnStart: 1,
	  msGridRow: 1,
	  msGridRowSpan: 1,
	  msGridColumn: 1,
	  msGridColumnSpan: 1,
	  fontWeight: 1,
	  lineHeight: 1,
	  opacity: 1,
	  order: 1,
	  orphans: 1,
	  tabSize: 1,
	  widows: 1,
	  zIndex: 1,
	  zoom: 1,
	  WebkitLineClamp: 1,
	  // SVG-related properties
	  fillOpacity: 1,
	  floodOpacity: 1,
	  stopOpacity: 1,
	  strokeDasharray: 1,
	  strokeDashoffset: 1,
	  strokeMiterlimit: 1,
	  strokeOpacity: 1,
	  strokeWidth: 1
	};

	var ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
	var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
	var hyphenateRegex = /[A-Z]|^ms/g;
	var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
	var isCustomProperty = function isCustomProperty(property) {
	  return property.charCodeAt(1) === 45;
	};
	var isProcessableValue = function isProcessableValue(value) {
	  return value != null && typeof value !== 'boolean';
	};
	var processStyleName = /* #__PURE__ */memoize$1(function (styleName) {
	  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
	});
	var processStyleValue = function processStyleValue(key, value) {
	  switch (key) {
	    case 'animation':
	    case 'animationName':
	      {
	        if (typeof value === 'string') {
	          return value.replace(animationRegex, function (match, p1, p2) {
	            cursor = {
	              name: p1,
	              styles: p2,
	              next: cursor
	            };
	            return p1;
	          });
	        }
	      }
	  }
	  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
	    return value + 'px';
	  }
	  return value;
	};
	{
	  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
	  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];
	  var oldProcessStyleValue = processStyleValue;
	  var msPattern = /^-ms-/;
	  var hyphenPattern = /-(.)/g;
	  var hyphenatedCache = {};
	  processStyleValue = function processStyleValue(key, value) {
	    if (key === 'content') {
	      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
	        throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
	      }
	    }
	    var processed = oldProcessStyleValue(key, value);
	    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {
	      hyphenatedCache[key] = true;
	      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {
	        return _char.toUpperCase();
	      }) + "?");
	    }
	    return processed;
	  };
	}
	var noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';
	function handleInterpolation(mergedProps, registered, interpolation) {
	  if (interpolation == null) {
	    return '';
	  }
	  if (interpolation.__emotion_styles !== undefined) {
	    if (interpolation.toString() === 'NO_COMPONENT_SELECTOR') {
	      throw new Error(noComponentSelectorMessage);
	    }
	    return interpolation;
	  }
	  switch (typeof interpolation) {
	    case 'boolean':
	      {
	        return '';
	      }
	    case 'object':
	      {
	        if (interpolation.anim === 1) {
	          cursor = {
	            name: interpolation.name,
	            styles: interpolation.styles,
	            next: cursor
	          };
	          return interpolation.name;
	        }
	        if (interpolation.styles !== undefined) {
	          var next = interpolation.next;
	          if (next !== undefined) {
	            // not the most efficient thing ever but this is a pretty rare case
	            // and there will be very few iterations of this generally
	            while (next !== undefined) {
	              cursor = {
	                name: next.name,
	                styles: next.styles,
	                next: cursor
	              };
	              next = next.next;
	            }
	          }
	          var styles = interpolation.styles + ";";
	          if (interpolation.map !== undefined) {
	            styles += interpolation.map;
	          }
	          return styles;
	        }
	        return createStringFromObject(mergedProps, registered, interpolation);
	      }
	    case 'function':
	      {
	        if (mergedProps !== undefined) {
	          var previousCursor = cursor;
	          var result = interpolation(mergedProps);
	          cursor = previousCursor;
	          return handleInterpolation(mergedProps, registered, result);
	        } else {
	          console.error('Functions that are interpolated in css calls will be stringified.\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\n' + 'It can be called directly with props or interpolated in a styled call like this\n' + "let SomeComponent = styled('div')`${dynamicStyle}`");
	        }
	        break;
	      }
	    case 'string':
	      {
	        var matched = [];
	        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {
	          var fakeVarName = "animation" + matched.length;
	          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, '') + "`");
	          return "${" + fakeVarName + "}";
	        });
	        if (matched.length) {
	          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\n' + 'Instead of doing this:\n\n' + [].concat(matched, ["`" + replaced + "`"]).join('\n') + '\n\nYou should wrap it with `css` like this:\n\n' + ("css`" + replaced + "`"));
	        }
	      }
	      break;
	  } // finalize string values (regular strings and functions interpolated into css calls)

	  if (registered == null) {
	    return interpolation;
	  }
	  var cached = registered[interpolation];
	  return cached !== undefined ? cached : interpolation;
	}
	function createStringFromObject(mergedProps, registered, obj) {
	  var string = '';
	  if (Array.isArray(obj)) {
	    for (var i = 0; i < obj.length; i++) {
	      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
	    }
	  } else {
	    for (var _key in obj) {
	      var value = obj[_key];
	      if (typeof value !== 'object') {
	        if (registered != null && registered[value] !== undefined) {
	          string += _key + "{" + registered[value] + "}";
	        } else if (isProcessableValue(value)) {
	          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
	        }
	      } else {
	        if (_key === 'NO_COMPONENT_SELECTOR' && "development" !== 'production') {
	          throw new Error(noComponentSelectorMessage);
	        }
	        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
	          for (var _i = 0; _i < value.length; _i++) {
	            if (isProcessableValue(value[_i])) {
	              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
	            }
	          }
	        } else {
	          var interpolated = handleInterpolation(mergedProps, registered, value);
	          switch (_key) {
	            case 'animation':
	            case 'animationName':
	              {
	                string += processStyleName(_key) + ":" + interpolated + ";";
	                break;
	              }
	            default:
	              {
	                if (_key === 'undefined') {
	                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
	                }
	                string += _key + "{" + interpolated + "}";
	              }
	          }
	        }
	      }
	    }
	  }
	  return string;
	}
	var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
	var sourceMapPattern;
	{
	  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
	} // this is the cursor for keyframes
	// keyframes are stored on the SerializedStyles object as a linked list

	var cursor;
	var serializeStyles = function serializeStyles(args, registered, mergedProps) {
	  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
	    return args[0];
	  }
	  var stringMode = true;
	  var styles = '';
	  cursor = undefined;
	  var strings = args[0];
	  if (strings == null || strings.raw === undefined) {
	    stringMode = false;
	    styles += handleInterpolation(mergedProps, registered, strings);
	  } else {
	    if (strings[0] === undefined) {
	      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1);
	    }
	    styles += strings[0];
	  } // we start at 1 since we've already handled the first arg

	  for (var i = 1; i < args.length; i++) {
	    styles += handleInterpolation(mergedProps, registered, args[i]);
	    if (stringMode) {
	      if (strings[i] === undefined) {
	        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1);
	      }
	      styles += strings[i];
	    }
	  }
	  var sourceMap;
	  {
	    styles = styles.replace(sourceMapPattern, function (match) {
	      sourceMap = match;
	      return '';
	    });
	  } // using a global regex with .exec is stateful so lastIndex has to be reset each time

	  labelPattern.lastIndex = 0;
	  var identifierName = '';
	  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

	  while ((match = labelPattern.exec(styles)) !== null) {
	    identifierName += '-' +
	    // $FlowFixMe we know it's not null
	    match[1];
	  }
	  var name = murmur2(styles) + identifierName;
	  {
	    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)
	    return {
	      name: name,
	      styles: styles,
	      map: sourceMap,
	      next: cursor,
	      toString: function toString() {
	        return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
	      }
	    };
	  }
	};

	var isBrowser$3 = typeof document !== 'undefined';
	var syncFallback = function syncFallback(create) {
	  return create();
	};
	var useInsertionEffect = React$1['useInsertion' + 'Effect'] ? React$1['useInsertion' + 'Effect'] : false;
	var useInsertionEffectAlwaysWithSyncFallback = !isBrowser$3 ? syncFallback : useInsertionEffect || syncFallback;
	var useInsertionEffectWithLayoutFallback = useInsertionEffect || reactExports.useLayoutEffect;

	var isBrowser$2 = typeof document !== 'undefined';
	var hasOwn = {}.hasOwnProperty;
	var EmotionCacheContext = /* #__PURE__ */reactExports.createContext(
	// we're doing this to avoid preconstruct's dead code elimination in this one case
	// because this module is primarily intended for the browser and node
	// but it's also required in react native and similar environments sometimes
	// and we could have a special build just for that
	// but this is much easier and the native packages
	// might use a different theme context in the future anyway
	typeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({
	  key: 'css'
	}) : null);
	{
	  EmotionCacheContext.displayName = 'EmotionCacheContext';
	}
	var CacheProvider = EmotionCacheContext.Provider;
	var withEmotionCache = function withEmotionCache(func) {
	  // $FlowFixMe
	  return /*#__PURE__*/reactExports.forwardRef(function (props, ref) {
	    // the cache will never be null in the browser
	    var cache = reactExports.useContext(EmotionCacheContext);
	    return func(props, cache, ref);
	  });
	};
	if (!isBrowser$2) {
	  withEmotionCache = function withEmotionCache(func) {
	    return function (props) {
	      var cache = reactExports.useContext(EmotionCacheContext);
	      if (cache === null) {
	        // yes, we're potentially creating this on every render
	        // it doesn't actually matter though since it's only on the server
	        // so there will only every be a single render
	        // that could change in the future because of suspense and etc. but for now,
	        // this works and i don't want to optimise for a future thing that we aren't sure about
	        cache = createCache({
	          key: 'css'
	        });
	        return /*#__PURE__*/reactExports.createElement(EmotionCacheContext.Provider, {
	          value: cache
	        }, func(props, cache));
	      } else {
	        return func(props, cache);
	      }
	    };
	  };
	}
	var ThemeContext = /* #__PURE__ */reactExports.createContext({});
	{
	  ThemeContext.displayName = 'EmotionThemeContext';
	}
	var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
	var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';
	var Insertion$2 = function Insertion(_ref) {
	  var cache = _ref.cache,
	    serialized = _ref.serialized,
	    isStringTag = _ref.isStringTag;
	  registerStyles(cache, serialized, isStringTag);
	  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
	    return insertStyles(cache, serialized, isStringTag);
	  });
	  if (!isBrowser$2 && rules !== undefined) {
	    var _ref2;
	    var serializedNames = serialized.name;
	    var next = serialized.next;
	    while (next !== undefined) {
	      serializedNames += ' ' + next.name;
	      next = next.next;
	    }
	    return /*#__PURE__*/reactExports.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref2.nonce = cache.sheet.nonce, _ref2));
	  }
	  return null;
	};
	var Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {
	  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
	  // not passing the registered cache to serializeStyles because it would
	  // make certain babel optimisations not possible

	  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
	    cssProp = cache.registered[cssProp];
	  }
	  var WrappedComponent = props[typePropName];
	  var registeredStyles = [cssProp];
	  var className = '';
	  if (typeof props.className === 'string') {
	    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
	  } else if (props.className != null) {
	    className = props.className + " ";
	  }
	  var serialized = serializeStyles(registeredStyles, undefined, reactExports.useContext(ThemeContext));
	  if (serialized.name.indexOf('-') === -1) {
	    var labelFromStack = props[labelPropName];
	    if (labelFromStack) {
	      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);
	    }
	  }
	  className += cache.key + "-" + serialized.name;
	  var newProps = {};
	  for (var key in props) {
	    if (hasOwn.call(props, key) && key !== 'css' && key !== typePropName && (key !== labelPropName)) {
	      newProps[key] = props[key];
	    }
	  }
	  newProps.ref = ref;
	  newProps.className = className;
	  return /*#__PURE__*/reactExports.createElement(reactExports.Fragment, null, /*#__PURE__*/reactExports.createElement(Insertion$2, {
	    cache: cache,
	    serialized: serialized,
	    isStringTag: typeof WrappedComponent === 'string'
	  }), /*#__PURE__*/reactExports.createElement(WrappedComponent, newProps));
	});
	{
	  Emotion.displayName = 'EmotionCssPropInternal';
	}

	var pkg = {
	  name: "@emotion/react",
	  version: "11.11.4",
	  main: "dist/emotion-react.cjs.js",
	  module: "dist/emotion-react.esm.js",
	  browser: {
	    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
	  },
	  exports: {
	    ".": {
	      module: {
	        worker: "./dist/emotion-react.worker.esm.js",
	        browser: "./dist/emotion-react.browser.esm.js",
	        "default": "./dist/emotion-react.esm.js"
	      },
	      "import": "./dist/emotion-react.cjs.mjs",
	      "default": "./dist/emotion-react.cjs.js"
	    },
	    "./jsx-runtime": {
	      module: {
	        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
	        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
	        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
	      },
	      "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs",
	      "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
	    },
	    "./_isolated-hnrs": {
	      module: {
	        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
	        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
	        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
	      },
	      "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs",
	      "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
	    },
	    "./jsx-dev-runtime": {
	      module: {
	        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
	        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
	        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
	      },
	      "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs",
	      "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
	    },
	    "./package.json": "./package.json",
	    "./types/css-prop": "./types/css-prop.d.ts",
	    "./macro": {
	      types: {
	        "import": "./macro.d.mts",
	        "default": "./macro.d.ts"
	      },
	      "default": "./macro.js"
	    }
	  },
	  types: "types/index.d.ts",
	  files: ["src", "dist", "jsx-runtime", "jsx-dev-runtime", "_isolated-hnrs", "types/*.d.ts", "macro.*"],
	  sideEffects: false,
	  author: "Emotion Contributors",
	  license: "MIT",
	  scripts: {
	    "test:typescript": "dtslint types"
	  },
	  dependencies: {
	    "@babel/runtime": "^7.18.3",
	    "@emotion/babel-plugin": "^11.11.0",
	    "@emotion/cache": "^11.11.0",
	    "@emotion/serialize": "^1.1.3",
	    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.1",
	    "@emotion/utils": "^1.2.1",
	    "@emotion/weak-memoize": "^0.3.1",
	    "hoist-non-react-statics": "^3.3.1"
	  },
	  peerDependencies: {
	    react: ">=16.8.0"
	  },
	  peerDependenciesMeta: {
	    "@types/react": {
	      optional: true
	    }
	  },
	  devDependencies: {
	    "@definitelytyped/dtslint": "0.0.112",
	    "@emotion/css": "11.11.2",
	    "@emotion/css-prettifier": "1.1.3",
	    "@emotion/server": "11.11.0",
	    "@emotion/styled": "11.11.0",
	    "html-tag-names": "^1.1.2",
	    react: "16.14.0",
	    "svg-tag-names": "^1.1.1",
	    typescript: "^4.5.5"
	  },
	  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
	  publishConfig: {
	    access: "public"
	  },
	  "umd:main": "dist/emotion-react.umd.min.js",
	  preconstruct: {
	    entrypoints: ["./index.js", "./jsx-runtime.js", "./jsx-dev-runtime.js", "./_isolated-hnrs.js"],
	    umdName: "emotionReact",
	    exports: {
	      envConditions: ["browser", "worker"],
	      extra: {
	        "./types/css-prop": "./types/css-prop.d.ts",
	        "./macro": {
	          types: {
	            "import": "./macro.d.mts",
	            "default": "./macro.d.ts"
	          },
	          "default": "./macro.js"
	        }
	      }
	    }
	  }
	};
	var warnedAboutCssPropForGlobal = false; // maintain place over rerenders.
	// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
	// initial client-side render from SSR, use place of hydrating tag

	var Global = /* #__PURE__ */withEmotionCache(function (props, cache) {
	  if (!warnedAboutCssPropForGlobal && (
	  // check for className as well since the user is
	  // probably using the custom createElement which
	  // means it will be turned into a className prop
	  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used
	  props.className || props.css)) {
	    console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
	    warnedAboutCssPropForGlobal = true;
	  }
	  var styles = props.styles;
	  var serialized = serializeStyles([styles], undefined, reactExports.useContext(ThemeContext));
	  if (!isBrowser$2) {
	    var _ref;
	    var serializedNames = serialized.name;
	    var serializedStyles = serialized.styles;
	    var next = serialized.next;
	    while (next !== undefined) {
	      serializedNames += ' ' + next.name;
	      serializedStyles += next.styles;
	      next = next.next;
	    }
	    var shouldCache = cache.compat === true;
	    var rules = cache.insert("", {
	      name: serializedNames,
	      styles: serializedStyles
	    }, cache.sheet, shouldCache);
	    if (shouldCache) {
	      return null;
	    }
	    return /*#__PURE__*/reactExports.createElement("style", (_ref = {}, _ref["data-emotion"] = cache.key + "-global " + serializedNames, _ref.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref.nonce = cache.sheet.nonce, _ref));
	  } // yes, i know these hooks are used conditionally
	  // but it is based on a constant that will never change at runtime
	  // it's effectively like having two implementations and switching them out
	  // so it's not actually breaking anything

	  var sheetRef = reactExports.useRef();
	  useInsertionEffectWithLayoutFallback(function () {
	    var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675

	    var sheet = new cache.sheet.constructor({
	      key: key,
	      nonce: cache.sheet.nonce,
	      container: cache.sheet.container,
	      speedy: cache.sheet.isSpeedy
	    });
	    var rehydrating = false; // $FlowFixMe

	    var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");
	    if (cache.sheet.tags.length) {
	      sheet.before = cache.sheet.tags[0];
	    }
	    if (node !== null) {
	      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

	      node.setAttribute('data-emotion', key);
	      sheet.hydrate([node]);
	    }
	    sheetRef.current = [sheet, rehydrating];
	    return function () {
	      sheet.flush();
	    };
	  }, [cache]);
	  useInsertionEffectWithLayoutFallback(function () {
	    var sheetRefCurrent = sheetRef.current;
	    var sheet = sheetRefCurrent[0],
	      rehydrating = sheetRefCurrent[1];
	    if (rehydrating) {
	      sheetRefCurrent[1] = false;
	      return;
	    }
	    if (serialized.next !== undefined) {
	      // insert keyframes
	      insertStyles(cache, serialized.next, true);
	    }
	    if (sheet.tags.length) {
	      // if this doesn't exist then it will be null so the style element will be appended
	      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
	      sheet.before = element;
	      sheet.flush();
	    }
	    cache.insert("", serialized, sheet, false);
	  }, [cache, serialized.name]);
	  return null;
	});
	{
	  Global.displayName = 'EmotionGlobal';
	}
	function css() {
	  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	  return serializeStyles(args);
	}
	var keyframes = function keyframes() {
	  var insertable = css.apply(void 0, arguments);
	  var name = "animation-" + insertable.name; // $FlowFixMe

	  return {
	    name: name,
	    styles: "@keyframes " + name + "{" + insertable.styles + "}",
	    anim: 1,
	    toString: function toString() {
	      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
	    }
	  };
	};
	var classnames = function classnames(args) {
	  var len = args.length;
	  var i = 0;
	  var cls = '';
	  for (; i < len; i++) {
	    var arg = args[i];
	    if (arg == null) continue;
	    var toAdd = void 0;
	    switch (typeof arg) {
	      case 'boolean':
	        break;
	      case 'object':
	        {
	          if (Array.isArray(arg)) {
	            toAdd = classnames(arg);
	          } else {
	            if (arg.styles !== undefined && arg.name !== undefined) {
	              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');
	            }
	            toAdd = '';
	            for (var k in arg) {
	              if (arg[k] && k) {
	                toAdd && (toAdd += ' ');
	                toAdd += k;
	              }
	            }
	          }
	          break;
	        }
	      default:
	        {
	          toAdd = arg;
	        }
	    }
	    if (toAdd) {
	      cls && (cls += ' ');
	      cls += toAdd;
	    }
	  }
	  return cls;
	};
	function merge$1(registered, css, className) {
	  var registeredStyles = [];
	  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
	  if (registeredStyles.length < 2) {
	    return className;
	  }
	  return rawClassName + css(registeredStyles);
	}
	var Insertion$1 = function Insertion(_ref) {
	  var cache = _ref.cache,
	    serializedArr = _ref.serializedArr;
	  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
	    var rules = '';
	    for (var i = 0; i < serializedArr.length; i++) {
	      var res = insertStyles(cache, serializedArr[i], false);
	      if (!isBrowser$2 && res !== undefined) {
	        rules += res;
	      }
	    }
	    if (!isBrowser$2) {
	      return rules;
	    }
	  });
	  if (!isBrowser$2 && rules.length !== 0) {
	    var _ref2;
	    return /*#__PURE__*/reactExports.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedArr.map(function (serialized) {
	      return serialized.name;
	    }).join(' '), _ref2.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref2.nonce = cache.sheet.nonce, _ref2));
	  }
	  return null;
	};
	var ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {
	  var hasRendered = false;
	  var serializedArr = [];
	  var css = function css() {
	    if (hasRendered && "development" !== 'production') {
	      throw new Error('css can only be used during render');
	    }
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	    var serialized = serializeStyles(args, cache.registered);
	    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`

	    registerStyles(cache, serialized, false);
	    return cache.key + "-" + serialized.name;
	  };
	  var cx = function cx() {
	    if (hasRendered && "development" !== 'production') {
	      throw new Error('cx can only be used during render');
	    }
	    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }
	    return merge$1(cache.registered, css, classnames(args));
	  };
	  var content = {
	    css: css,
	    cx: cx,
	    theme: reactExports.useContext(ThemeContext)
	  };
	  var ele = props.children(content);
	  hasRendered = true;
	  return /*#__PURE__*/reactExports.createElement(reactExports.Fragment, null, /*#__PURE__*/reactExports.createElement(Insertion$1, {
	    cache: cache,
	    serializedArr: serializedArr
	  }), ele);
	});
	{
	  ClassNames.displayName = 'EmotionClassNames';
	}
	{
	  var isBrowser$1 = typeof document !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked

	  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';
	  if (isBrowser$1 && !isTestEnv) {
	    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later
	    var globalContext =
	    // $FlowIgnore
	    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef
	    : isBrowser$1 ? window : global;
	    var globalKey = "__EMOTION_REACT_" + pkg.version.split('.')[0] + "__";
	    if (globalContext[globalKey]) {
	      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');
	    }
	    globalContext[globalKey] = true;
	  }
	}

	var testOmitPropsOnStringTag = isPropValid;
	var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
	  return key !== 'theme';
	};
	var getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {
	  return typeof tag === 'string' &&
	  // 96 is one less than the char code
	  // for "a" so this is checking that
	  // it's a lowercase character
	  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
	};
	var composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {
	  var shouldForwardProp;
	  if (options) {
	    var optionsShouldForwardProp = options.shouldForwardProp;
	    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {
	      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
	    } : optionsShouldForwardProp;
	  }
	  if (typeof shouldForwardProp !== 'function' && isReal) {
	    shouldForwardProp = tag.__emotion_forwardProp;
	  }
	  return shouldForwardProp;
	};
	var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
	var isBrowser = typeof document !== 'undefined';
	var Insertion = function Insertion(_ref) {
	  var cache = _ref.cache,
	    serialized = _ref.serialized,
	    isStringTag = _ref.isStringTag;
	  registerStyles(cache, serialized, isStringTag);
	  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
	    return insertStyles(cache, serialized, isStringTag);
	  });
	  if (!isBrowser && rules !== undefined) {
	    var _ref2;
	    var serializedNames = serialized.name;
	    var next = serialized.next;
	    while (next !== undefined) {
	      serializedNames += ' ' + next.name;
	      next = next.next;
	    }
	    return /*#__PURE__*/reactExports.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
	      __html: rules
	    }, _ref2.nonce = cache.sheet.nonce, _ref2));
	  }
	  return null;
	};
	var createStyled$2 = function createStyled(tag, options) {
	  {
	    if (tag === undefined) {
	      throw new Error('You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.');
	    }
	  }
	  var isReal = tag.__emotion_real === tag;
	  var baseTag = isReal && tag.__emotion_base || tag;
	  var identifierName;
	  var targetClassName;
	  if (options !== undefined) {
	    identifierName = options.label;
	    targetClassName = options.target;
	  }
	  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);
	  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);
	  var shouldUseAs = !defaultShouldForwardProp('as');
	  return function () {
	    var args = arguments;
	    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];
	    if (identifierName !== undefined) {
	      styles.push("label:" + identifierName + ";");
	    }
	    if (args[0] == null || args[0].raw === undefined) {
	      styles.push.apply(styles, args);
	    } else {
	      if (args[0][0] === undefined) {
	        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
	      }
	      styles.push(args[0][0]);
	      var len = args.length;
	      var i = 1;
	      for (; i < len; i++) {
	        if (args[0][i] === undefined) {
	          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
	        }
	        styles.push(args[i], args[0][i]);
	      }
	    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class

	    var Styled = withEmotionCache(function (props, cache, ref) {
	      var FinalTag = shouldUseAs && props.as || baseTag;
	      var className = '';
	      var classInterpolations = [];
	      var mergedProps = props;
	      if (props.theme == null) {
	        mergedProps = {};
	        for (var key in props) {
	          mergedProps[key] = props[key];
	        }
	        mergedProps.theme = reactExports.useContext(ThemeContext);
	      }
	      if (typeof props.className === 'string') {
	        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);
	      } else if (props.className != null) {
	        className = props.className + " ";
	      }
	      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);
	      className += cache.key + "-" + serialized.name;
	      if (targetClassName !== undefined) {
	        className += " " + targetClassName;
	      }
	      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
	      var newProps = {};
	      for (var _key in props) {
	        if (shouldUseAs && _key === 'as') continue;
	        if (
	        // $FlowFixMe
	        finalShouldForwardProp(_key)) {
	          newProps[_key] = props[_key];
	        }
	      }
	      newProps.className = className;
	      newProps.ref = ref;
	      return /*#__PURE__*/reactExports.createElement(reactExports.Fragment, null, /*#__PURE__*/reactExports.createElement(Insertion, {
	        cache: cache,
	        serialized: serialized,
	        isStringTag: typeof FinalTag === 'string'
	      }), /*#__PURE__*/reactExports.createElement(FinalTag, newProps));
	    });
	    Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
	    Styled.defaultProps = tag.defaultProps;
	    Styled.__emotion_real = Styled;
	    Styled.__emotion_base = baseTag;
	    Styled.__emotion_styles = styles;
	    Styled.__emotion_forwardProp = shouldForwardProp;
	    Object.defineProperty(Styled, 'toString', {
	      value: function value() {
	        if (targetClassName === undefined && "development" !== 'production') {
	          return 'NO_COMPONENT_SELECTOR';
	        } // $FlowFixMe: coerce undefined to string

	        return "." + targetClassName;
	      }
	    });
	    Styled.withComponent = function (nextTag, nextOptions) {
	      return createStyled(nextTag, _extends$2({}, options, nextOptions, {
	        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
	      })).apply(void 0, styles);
	    };
	    return Styled;
	  };
	};

	var tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',
	// SVG
	'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
	var newStyled = createStyled$2.bind();
	tags.forEach(function (tagName) {
	  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type
	  newStyled[tagName] = newStyled(tagName);
	});

	var propTypes$2 = {exports: {}};

	var reactIs$2 = {exports: {}};

	var reactIs_development$2 = {};

	/** @license React v16.13.1
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactIs_development$1;

	function requireReactIs_development$1 () {
		if (hasRequiredReactIs_development$1) return reactIs_development$2;
		hasRequiredReactIs_development$1 = 1;

		{
		  (function () {

		    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		    // nor polyfill, then a plain number is used for performance.
		    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
		    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
		    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
		    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
		    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
		    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
		    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
		    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
		    // (unstable) APIs that have been removed. Can we remove the symbols?

		    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
		    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
		    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
		    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
		    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
		    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
		    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
		    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
		    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
		    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
		    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
		    function isValidElementType(type) {
		      return typeof type === 'string' || typeof type === 'function' ||
		      // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
		      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
		    }
		    function typeOf(object) {
		      if (typeof object === 'object' && object !== null) {
		        var $$typeof = object.$$typeof;
		        switch ($$typeof) {
		          case REACT_ELEMENT_TYPE:
		            var type = object.type;
		            switch (type) {
		              case REACT_ASYNC_MODE_TYPE:
		              case REACT_CONCURRENT_MODE_TYPE:
		              case REACT_FRAGMENT_TYPE:
		              case REACT_PROFILER_TYPE:
		              case REACT_STRICT_MODE_TYPE:
		              case REACT_SUSPENSE_TYPE:
		                return type;
		              default:
		                var $$typeofType = type && type.$$typeof;
		                switch ($$typeofType) {
		                  case REACT_CONTEXT_TYPE:
		                  case REACT_FORWARD_REF_TYPE:
		                  case REACT_LAZY_TYPE:
		                  case REACT_MEMO_TYPE:
		                  case REACT_PROVIDER_TYPE:
		                    return $$typeofType;
		                  default:
		                    return $$typeof;
		                }
		            }
		          case REACT_PORTAL_TYPE:
		            return $$typeof;
		        }
		      }
		      return undefined;
		    } // AsyncMode is deprecated along with isAsyncMode

		    var AsyncMode = REACT_ASYNC_MODE_TYPE;
		    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		    var ContextConsumer = REACT_CONTEXT_TYPE;
		    var ContextProvider = REACT_PROVIDER_TYPE;
		    var Element = REACT_ELEMENT_TYPE;
		    var ForwardRef = REACT_FORWARD_REF_TYPE;
		    var Fragment = REACT_FRAGMENT_TYPE;
		    var Lazy = REACT_LAZY_TYPE;
		    var Memo = REACT_MEMO_TYPE;
		    var Portal = REACT_PORTAL_TYPE;
		    var Profiler = REACT_PROFILER_TYPE;
		    var StrictMode = REACT_STRICT_MODE_TYPE;
		    var Suspense = REACT_SUSPENSE_TYPE;
		    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

		    function isAsyncMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
		          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
		        }
		      }
		      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
		    }
		    function isConcurrentMode(object) {
		      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		    }
		    function isContextConsumer(object) {
		      return typeOf(object) === REACT_CONTEXT_TYPE;
		    }
		    function isContextProvider(object) {
		      return typeOf(object) === REACT_PROVIDER_TYPE;
		    }
		    function isElement(object) {
		      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		    }
		    function isForwardRef(object) {
		      return typeOf(object) === REACT_FORWARD_REF_TYPE;
		    }
		    function isFragment(object) {
		      return typeOf(object) === REACT_FRAGMENT_TYPE;
		    }
		    function isLazy(object) {
		      return typeOf(object) === REACT_LAZY_TYPE;
		    }
		    function isMemo(object) {
		      return typeOf(object) === REACT_MEMO_TYPE;
		    }
		    function isPortal(object) {
		      return typeOf(object) === REACT_PORTAL_TYPE;
		    }
		    function isProfiler(object) {
		      return typeOf(object) === REACT_PROFILER_TYPE;
		    }
		    function isStrictMode(object) {
		      return typeOf(object) === REACT_STRICT_MODE_TYPE;
		    }
		    function isSuspense(object) {
		      return typeOf(object) === REACT_SUSPENSE_TYPE;
		    }
		    reactIs_development$2.AsyncMode = AsyncMode;
		    reactIs_development$2.ConcurrentMode = ConcurrentMode;
		    reactIs_development$2.ContextConsumer = ContextConsumer;
		    reactIs_development$2.ContextProvider = ContextProvider;
		    reactIs_development$2.Element = Element;
		    reactIs_development$2.ForwardRef = ForwardRef;
		    reactIs_development$2.Fragment = Fragment;
		    reactIs_development$2.Lazy = Lazy;
		    reactIs_development$2.Memo = Memo;
		    reactIs_development$2.Portal = Portal;
		    reactIs_development$2.Profiler = Profiler;
		    reactIs_development$2.StrictMode = StrictMode;
		    reactIs_development$2.Suspense = Suspense;
		    reactIs_development$2.isAsyncMode = isAsyncMode;
		    reactIs_development$2.isConcurrentMode = isConcurrentMode;
		    reactIs_development$2.isContextConsumer = isContextConsumer;
		    reactIs_development$2.isContextProvider = isContextProvider;
		    reactIs_development$2.isElement = isElement;
		    reactIs_development$2.isForwardRef = isForwardRef;
		    reactIs_development$2.isFragment = isFragment;
		    reactIs_development$2.isLazy = isLazy;
		    reactIs_development$2.isMemo = isMemo;
		    reactIs_development$2.isPortal = isPortal;
		    reactIs_development$2.isProfiler = isProfiler;
		    reactIs_development$2.isStrictMode = isStrictMode;
		    reactIs_development$2.isSuspense = isSuspense;
		    reactIs_development$2.isValidElementType = isValidElementType;
		    reactIs_development$2.typeOf = typeOf;
		  })();
		}
		return reactIs_development$2;
	}

	var hasRequiredReactIs;

	function requireReactIs () {
		if (hasRequiredReactIs) return reactIs$2.exports;
		hasRequiredReactIs = 1;

		{
		  reactIs$2.exports = requireReactIs_development$1();
		}
		return reactIs$2.exports;
	}

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	var objectAssign$1;
	var hasRequiredObjectAssign;

	function requireObjectAssign () {
		if (hasRequiredObjectAssign) return objectAssign$1;
		hasRequiredObjectAssign = 1;

		/* eslint-disable no-unused-vars */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;
		function toObject(val) {
		  if (val === null || val === undefined) {
		    throw new TypeError('Object.assign cannot be called with null or undefined');
		  }
		  return Object(val);
		}
		function shouldUseNative() {
		  try {
		    if (!Object.assign) {
		      return false;
		    }

		    // Detect buggy property enumeration order in older V8 versions.

		    // https://bugs.chromium.org/p/v8/issues/detail?id=4118
		    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
		    test1[5] = 'de';
		    if (Object.getOwnPropertyNames(test1)[0] === '5') {
		      return false;
		    }

		    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
		    var test2 = {};
		    for (var i = 0; i < 10; i++) {
		      test2['_' + String.fromCharCode(i)] = i;
		    }
		    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
		      return test2[n];
		    });
		    if (order2.join('') !== '0123456789') {
		      return false;
		    }

		    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
		    var test3 = {};
		    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
		      test3[letter] = letter;
		    });
		    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
		      return false;
		    }
		    return true;
		  } catch (err) {
		    // We don't expect any of the above to throw, but better to be safe.
		    return false;
		  }
		}
		objectAssign$1 = shouldUseNative() ? Object.assign : function (target, source) {
		  var from;
		  var to = toObject(target);
		  var symbols;
		  for (var s = 1; s < arguments.length; s++) {
		    from = Object(arguments[s]);
		    for (var key in from) {
		      if (hasOwnProperty.call(from, key)) {
		        to[key] = from[key];
		      }
		    }
		    if (getOwnPropertySymbols) {
		      symbols = getOwnPropertySymbols(from);
		      for (var i = 0; i < symbols.length; i++) {
		        if (propIsEnumerable.call(from, symbols[i])) {
		          to[symbols[i]] = from[symbols[i]];
		        }
		      }
		    }
		  }
		  return to;
		};
		return objectAssign$1;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var ReactPropTypesSecret_1$1;
	var hasRequiredReactPropTypesSecret;

	function requireReactPropTypesSecret () {
		if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1$1;
		hasRequiredReactPropTypesSecret = 1;

		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
		ReactPropTypesSecret_1$1 = ReactPropTypesSecret;
		return ReactPropTypesSecret_1$1;
	}

	var has$2;
	var hasRequiredHas;

	function requireHas () {
		if (hasRequiredHas) return has$2;
		hasRequiredHas = 1;
		has$2 = Function.call.bind(Object.prototype.hasOwnProperty);
		return has$2;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var checkPropTypes_1$1;
	var hasRequiredCheckPropTypes;

	function requireCheckPropTypes () {
		if (hasRequiredCheckPropTypes) return checkPropTypes_1$1;
		hasRequiredCheckPropTypes = 1;

		var printWarning = function () {};
		{
		  var ReactPropTypesSecret = requireReactPropTypesSecret();
		  var loggedTypeFailures = {};
		  var has = requireHas();
		  printWarning = function (text) {
		    var message = 'Warning: ' + text;
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {/**/}
		  };
		}

		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?Function} getStack Returns the component stack.
		 * @private
		 */
		function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
		  {
		    for (var typeSpecName in typeSpecs) {
		      if (has(typeSpecs, typeSpecName)) {
		        var error;
		        // Prop type validation may throw. In case they do, we don't want to
		        // fail the render phase where it didn't fail before. So we log it.
		        // After these have been cleaned up, we'll let them throw.
		        try {
		          // This is intentionally an invariant that gets caught. It's the same
		          // behavior as without this statement except with a better message.
		          if (typeof typeSpecs[typeSpecName] !== 'function') {
		            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
		            err.name = 'Invariant Violation';
		            throw err;
		          }
		          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		        } catch (ex) {
		          error = ex;
		        }
		        if (error && !(error instanceof Error)) {
		          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
		        }
		        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		          // Only monitor this failure once because there tends to be a lot of the
		          // same error.
		          loggedTypeFailures[error.message] = true;
		          var stack = getStack ? getStack() : '';
		          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
		        }
		      }
		    }
		  }
		}

		/**
		 * Resets warning cache when testing.
		 *
		 * @private
		 */
		checkPropTypes.resetWarningCache = function () {
		  {
		    loggedTypeFailures = {};
		  }
		};
		checkPropTypes_1$1 = checkPropTypes;
		return checkPropTypes_1$1;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var factoryWithTypeCheckers$1;
	var hasRequiredFactoryWithTypeCheckers;

	function requireFactoryWithTypeCheckers () {
		if (hasRequiredFactoryWithTypeCheckers) return factoryWithTypeCheckers$1;
		hasRequiredFactoryWithTypeCheckers = 1;

		var ReactIs = requireReactIs();
		var assign = requireObjectAssign();
		var ReactPropTypesSecret = requireReactPropTypesSecret();
		var has = requireHas();
		var checkPropTypes = requireCheckPropTypes();
		var printWarning = function () {};
		{
		  printWarning = function (text) {
		    var message = 'Warning: ' + text;
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };
		}
		function emptyFunctionThatReturnsNull() {
		  return null;
		}
		factoryWithTypeCheckers$1 = function (isValidElement, throwOnDirectAccess) {
		  /* global Symbol */
		  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

		  /**
		   * Returns the iterator method function contained on the iterable object.
		   *
		   * Be sure to invoke the function with the iterable as context:
		   *
		   *     var iteratorFn = getIteratorFn(myIterable);
		   *     if (iteratorFn) {
		   *       var iterator = iteratorFn.call(myIterable);
		   *       ...
		   *     }
		   *
		   * @param {?object} maybeIterable
		   * @return {?function}
		   */
		  function getIteratorFn(maybeIterable) {
		    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		    if (typeof iteratorFn === 'function') {
		      return iteratorFn;
		    }
		  }

		  /**
		   * Collection of methods that allow declaration and validation of props that are
		   * supplied to React components. Example usage:
		   *
		   *   var Props = require('ReactPropTypes');
		   *   var MyArticle = React.createClass({
		   *     propTypes: {
		   *       // An optional string prop named "description".
		   *       description: Props.string,
		   *
		   *       // A required enum prop named "category".
		   *       category: Props.oneOf(['News','Photos']).isRequired,
		   *
		   *       // A prop named "dialog" that requires an instance of Dialog.
		   *       dialog: Props.instanceOf(Dialog).isRequired
		   *     },
		   *     render: function() { ... }
		   *   });
		   *
		   * A more formal specification of how these methods are used:
		   *
		   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		   *   decl := ReactPropTypes.{type}(.isRequired)?
		   *
		   * Each and every declaration produces a function with the same signature. This
		   * allows the creation of custom validation functions. For example:
		   *
		   *  var MyLink = React.createClass({
		   *    propTypes: {
		   *      // An optional string or URI prop named "href".
		   *      href: function(props, propName, componentName) {
		   *        var propValue = props[propName];
		   *        if (propValue != null && typeof propValue !== 'string' &&
		   *            !(propValue instanceof URI)) {
		   *          return new Error(
		   *            'Expected a string or an URI for ' + propName + ' in ' +
		   *            componentName
		   *          );
		   *        }
		   *      }
		   *    },
		   *    render: function() {...}
		   *  });
		   *
		   * @internal
		   */

		  var ANONYMOUS = '<<anonymous>>';

		  // Important!
		  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
		  var ReactPropTypes = {
		    array: createPrimitiveTypeChecker('array'),
		    bigint: createPrimitiveTypeChecker('bigint'),
		    bool: createPrimitiveTypeChecker('boolean'),
		    func: createPrimitiveTypeChecker('function'),
		    number: createPrimitiveTypeChecker('number'),
		    object: createPrimitiveTypeChecker('object'),
		    string: createPrimitiveTypeChecker('string'),
		    symbol: createPrimitiveTypeChecker('symbol'),
		    any: createAnyTypeChecker(),
		    arrayOf: createArrayOfTypeChecker,
		    element: createElementTypeChecker(),
		    elementType: createElementTypeTypeChecker(),
		    instanceOf: createInstanceTypeChecker,
		    node: createNodeChecker(),
		    objectOf: createObjectOfTypeChecker,
		    oneOf: createEnumTypeChecker,
		    oneOfType: createUnionTypeChecker,
		    shape: createShapeTypeChecker,
		    exact: createStrictShapeTypeChecker
		  };

		  /**
		   * inlined Object.is polyfill to avoid requiring consumers ship their own
		   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		   */
		  /*eslint-disable no-self-compare*/
		  function is(x, y) {
		    // SameValue algorithm
		    if (x === y) {
		      // Steps 1-5, 7-10
		      // Steps 6.b-6.e: +0 != -0
		      return x !== 0 || 1 / x === 1 / y;
		    } else {
		      // Step 6.a: NaN == NaN
		      return x !== x && y !== y;
		    }
		  }
		  /*eslint-enable no-self-compare*/

		  /**
		   * We use an Error-like object for backward compatibility as people may call
		   * PropTypes directly and inspect their output. However, we don't use real
		   * Errors anymore. We don't inspect their stack anyway, and creating them
		   * is prohibitively expensive if they are created too often, such as what
		   * happens in oneOfType() for any type before the one that matched.
		   */
		  function PropTypeError(message, data) {
		    this.message = message;
		    this.data = data && typeof data === 'object' ? data : {};
		    this.stack = '';
		  }
		  // Make `instanceof Error` still work for returned errors.
		  PropTypeError.prototype = Error.prototype;
		  function createChainableTypeChecker(validate) {
		    {
		      var manualPropTypeCallCache = {};
		      var manualPropTypeWarningCount = 0;
		    }
		    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
		      componentName = componentName || ANONYMOUS;
		      propFullName = propFullName || propName;
		      if (secret !== ReactPropTypesSecret) {
		        if (throwOnDirectAccess) {
		          // New behavior only for users of `prop-types` package
		          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
		          err.name = 'Invariant Violation';
		          throw err;
		        } else if (typeof console !== 'undefined') {
		          // Old behavior for people using React.PropTypes
		          var cacheKey = componentName + ':' + propName;
		          if (!manualPropTypeCallCache[cacheKey] &&
		          // Avoid spamming the console because they are often not actionable except for lib authors
		          manualPropTypeWarningCount < 3) {
		            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
		            manualPropTypeCallCache[cacheKey] = true;
		            manualPropTypeWarningCount++;
		          }
		        }
		      }
		      if (props[propName] == null) {
		        if (isRequired) {
		          if (props[propName] === null) {
		            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
		          }
		          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
		        }
		        return null;
		      } else {
		        return validate(props, propName, componentName, location, propFullName);
		      }
		    }
		    var chainedCheckType = checkType.bind(null, false);
		    chainedCheckType.isRequired = checkType.bind(null, true);
		    return chainedCheckType;
		  }
		  function createPrimitiveTypeChecker(expectedType) {
		    function validate(props, propName, componentName, location, propFullName, secret) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== expectedType) {
		        // `propValue` being instance of, say, date/regexp, pass the 'object'
		        // check, but we can offer a more precise error message here rather than
		        // 'of type `object`'.
		        var preciseType = getPreciseType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
		          expectedType: expectedType
		        });
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createAnyTypeChecker() {
		    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
		  }
		  function createArrayOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
		      }
		      var propValue = props[propName];
		      if (!Array.isArray(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
		      }
		      for (var i = 0; i < propValue.length; i++) {
		        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
		        if (error instanceof Error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createElementTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!isValidElement(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createElementTypeTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!ReactIs.isValidElementType(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createInstanceTypeChecker(expectedClass) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!(props[propName] instanceof expectedClass)) {
		        var expectedClassName = expectedClass.name || ANONYMOUS;
		        var actualClassName = getClassName(props[propName]);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createEnumTypeChecker(expectedValues) {
		    if (!Array.isArray(expectedValues)) {
		      {
		        if (arguments.length > 1) {
		          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
		        } else {
		          printWarning('Invalid argument supplied to oneOf, expected an array.');
		        }
		      }
		      return emptyFunctionThatReturnsNull;
		    }
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      for (var i = 0; i < expectedValues.length; i++) {
		        if (is(propValue, expectedValues[i])) {
		          return null;
		        }
		      }
		      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
		        var type = getPreciseType(value);
		        if (type === 'symbol') {
		          return String(value);
		        }
		        return value;
		      });
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createObjectOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
		      }
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
		      }
		      for (var key in propValue) {
		        if (has(propValue, key)) {
		          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		          if (error instanceof Error) {
		            return error;
		          }
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createUnionTypeChecker(arrayOfTypeCheckers) {
		    if (!Array.isArray(arrayOfTypeCheckers)) {
		      printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') ;
		      return emptyFunctionThatReturnsNull;
		    }
		    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		      var checker = arrayOfTypeCheckers[i];
		      if (typeof checker !== 'function') {
		        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
		        return emptyFunctionThatReturnsNull;
		      }
		    }
		    function validate(props, propName, componentName, location, propFullName) {
		      var expectedTypes = [];
		      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		        var checker = arrayOfTypeCheckers[i];
		        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
		        if (checkerResult == null) {
		          return null;
		        }
		        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
		          expectedTypes.push(checkerResult.data.expectedType);
		        }
		      }
		      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createNodeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!isNode(props[propName])) {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function invalidValidatorError(componentName, location, propFullName, key, type) {
		    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
		  }
		  function createShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      for (var key in shapeTypes) {
		        var checker = shapeTypes[key];
		        if (typeof checker !== 'function') {
		          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function createStrictShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      // We need to check all keys in case some are required but missing from props.
		      var allKeys = assign({}, props[propName], shapeTypes);
		      for (var key in allKeys) {
		        var checker = shapeTypes[key];
		        if (has(shapeTypes, key) && typeof checker !== 'function') {
		          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
		        }
		        if (!checker) {
		          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
		  function isNode(propValue) {
		    switch (typeof propValue) {
		      case 'number':
		      case 'string':
		      case 'undefined':
		        return true;
		      case 'boolean':
		        return !propValue;
		      case 'object':
		        if (Array.isArray(propValue)) {
		          return propValue.every(isNode);
		        }
		        if (propValue === null || isValidElement(propValue)) {
		          return true;
		        }
		        var iteratorFn = getIteratorFn(propValue);
		        if (iteratorFn) {
		          var iterator = iteratorFn.call(propValue);
		          var step;
		          if (iteratorFn !== propValue.entries) {
		            while (!(step = iterator.next()).done) {
		              if (!isNode(step.value)) {
		                return false;
		              }
		            }
		          } else {
		            // Iterator will provide entry [k,v] tuples rather than values.
		            while (!(step = iterator.next()).done) {
		              var entry = step.value;
		              if (entry) {
		                if (!isNode(entry[1])) {
		                  return false;
		                }
		              }
		            }
		          }
		        } else {
		          return false;
		        }
		        return true;
		      default:
		        return false;
		    }
		  }
		  function isSymbol(propType, propValue) {
		    // Native Symbol.
		    if (propType === 'symbol') {
		      return true;
		    }

		    // falsy value can't be a Symbol
		    if (!propValue) {
		      return false;
		    }

		    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		    if (propValue['@@toStringTag'] === 'Symbol') {
		      return true;
		    }

		    // Fallback for non-spec compliant Symbols which are polyfilled.
		    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
		      return true;
		    }
		    return false;
		  }

		  // Equivalent of `typeof` but with special handling for array and regexp.
		  function getPropType(propValue) {
		    var propType = typeof propValue;
		    if (Array.isArray(propValue)) {
		      return 'array';
		    }
		    if (propValue instanceof RegExp) {
		      // Old webkits (at least until Android 4.0) return 'function' rather than
		      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
		      // passes PropTypes.object.
		      return 'object';
		    }
		    if (isSymbol(propType, propValue)) {
		      return 'symbol';
		    }
		    return propType;
		  }

		  // This handles more types than `getPropType`. Only used for error messages.
		  // See `createPrimitiveTypeChecker`.
		  function getPreciseType(propValue) {
		    if (typeof propValue === 'undefined' || propValue === null) {
		      return '' + propValue;
		    }
		    var propType = getPropType(propValue);
		    if (propType === 'object') {
		      if (propValue instanceof Date) {
		        return 'date';
		      } else if (propValue instanceof RegExp) {
		        return 'regexp';
		      }
		    }
		    return propType;
		  }

		  // Returns a string that is postfixed to a warning about an invalid type.
		  // For example, "undefined" or "of type array"
		  function getPostfixForTypeWarning(value) {
		    var type = getPreciseType(value);
		    switch (type) {
		      case 'array':
		      case 'object':
		        return 'an ' + type;
		      case 'boolean':
		      case 'date':
		      case 'regexp':
		        return 'a ' + type;
		      default:
		        return type;
		    }
		  }

		  // Returns class name of the object, if any.
		  function getClassName(propValue) {
		    if (!propValue.constructor || !propValue.constructor.name) {
		      return ANONYMOUS;
		    }
		    return propValue.constructor.name;
		  }
		  ReactPropTypes.checkPropTypes = checkPropTypes;
		  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
		  ReactPropTypes.PropTypes = ReactPropTypes;
		  return ReactPropTypes;
		};
		return factoryWithTypeCheckers$1;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	{
	  var ReactIs = requireReactIs();

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  propTypes$2.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
	}

	var propTypesExports = propTypes$2.exports;
	var PropTypes = /*@__PURE__*/getDefaultExportFromCjs(propTypesExports);

	var jsxRuntime = {exports: {}};

	var reactJsxRuntime_development = {};

	/**
	 * @license React
	 * react-jsx-runtime.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactJsxRuntime_development;

	function requireReactJsxRuntime_development () {
		if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;
		hasRequiredReactJsxRuntime_development = 1;

		{
		  (function () {

		    var React = reactExports;

		    // ATTENTION
		    // When adding new symbols to this file,
		    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
		    // The Symbol used to tag the ReactElement-like types.
		    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
		    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
		    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
		    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
		    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
		    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
		    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
		    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
		    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
		    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
		    var REACT_MEMO_TYPE = Symbol.for('react.memo');
		    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
		    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
		    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
		    var FAUX_ITERATOR_SYMBOL = '@@iterator';
		    function getIteratorFn(maybeIterable) {
		      if (maybeIterable === null || typeof maybeIterable !== 'object') {
		        return null;
		      }
		      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
		      if (typeof maybeIterator === 'function') {
		        return maybeIterator;
		      }
		      return null;
		    }
		    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
		    function error(format) {
		      {
		        {
		          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
		            args[_key2 - 1] = arguments[_key2];
		          }
		          printWarning('error', format, args);
		        }
		      }
		    }
		    function printWarning(level, format, args) {
		      // When changing this logic, you might want to also
		      // update consoleWithStackDev.www.js as well.
		      {
		        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
		        var stack = ReactDebugCurrentFrame.getStackAddendum();
		        if (stack !== '') {
		          format += '%s';
		          args = args.concat([stack]);
		        } // eslint-disable-next-line react-internal/safe-string-coercion

		        var argsWithFormat = args.map(function (item) {
		          return String(item);
		        }); // Careful: RN currently depends on this prefix

		        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
		        // breaks IE9: https://github.com/facebook/react/issues/13610
		        // eslint-disable-next-line react-internal/no-production-logging

		        Function.prototype.apply.call(console[level], console, argsWithFormat);
		      }
		    }

		    // -----------------------------------------------------------------------------

		    var enableScopeAPI = false; // Experimental Create Event Handle API.
		    var enableCacheElement = false;
		    var enableTransitionTracing = false; // No known bugs, but needs performance testing

		    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
		    // stuff. Intended to enable React core members to more easily debug scheduling
		    // issues in DEV builds.

		    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

		    var REACT_MODULE_REFERENCE;
		    {
		      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
		    }
		    function isValidElementType(type) {
		      if (typeof type === 'string' || typeof type === 'function') {
		        return true;
		      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).

		      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
		        return true;
		      }
		      if (typeof type === 'object' && type !== null) {
		        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||
		        // This needs to include all possible module reference object
		        // types supported by any Flight configuration anywhere since
		        // we don't know which Flight build this will end up being used
		        // with.
		        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
		          return true;
		        }
		      }
		      return false;
		    }
		    function getWrappedName(outerType, innerType, wrapperName) {
		      var displayName = outerType.displayName;
		      if (displayName) {
		        return displayName;
		      }
		      var functionName = innerType.displayName || innerType.name || '';
		      return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
		    } // Keep in sync with react-reconciler/getComponentNameFromFiber

		    function getContextName(type) {
		      return type.displayName || 'Context';
		    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.

		    function getComponentNameFromType(type) {
		      if (type == null) {
		        // Host root, text node or just invalid type.
		        return null;
		      }
		      {
		        if (typeof type.tag === 'number') {
		          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
		        }
		      }
		      if (typeof type === 'function') {
		        return type.displayName || type.name || null;
		      }
		      if (typeof type === 'string') {
		        return type;
		      }
		      switch (type) {
		        case REACT_FRAGMENT_TYPE:
		          return 'Fragment';
		        case REACT_PORTAL_TYPE:
		          return 'Portal';
		        case REACT_PROFILER_TYPE:
		          return 'Profiler';
		        case REACT_STRICT_MODE_TYPE:
		          return 'StrictMode';
		        case REACT_SUSPENSE_TYPE:
		          return 'Suspense';
		        case REACT_SUSPENSE_LIST_TYPE:
		          return 'SuspenseList';
		      }
		      if (typeof type === 'object') {
		        switch (type.$$typeof) {
		          case REACT_CONTEXT_TYPE:
		            var context = type;
		            return getContextName(context) + '.Consumer';
		          case REACT_PROVIDER_TYPE:
		            var provider = type;
		            return getContextName(provider._context) + '.Provider';
		          case REACT_FORWARD_REF_TYPE:
		            return getWrappedName(type, type.render, 'ForwardRef');
		          case REACT_MEMO_TYPE:
		            var outerName = type.displayName || null;
		            if (outerName !== null) {
		              return outerName;
		            }
		            return getComponentNameFromType(type.type) || 'Memo';
		          case REACT_LAZY_TYPE:
		            {
		              var lazyComponent = type;
		              var payload = lazyComponent._payload;
		              var init = lazyComponent._init;
		              try {
		                return getComponentNameFromType(init(payload));
		              } catch (x) {
		                return null;
		              }
		            }

		          // eslint-disable-next-line no-fallthrough
		        }
		      }
		      return null;
		    }
		    var assign = Object.assign;

		    // Helpers to patch console.logs to avoid logging during side-effect free
		    // replaying on render function. This currently only patches the object
		    // lazily which won't cover if the log function was extracted eagerly.
		    // We could also eagerly patch the method.
		    var disabledDepth = 0;
		    var prevLog;
		    var prevInfo;
		    var prevWarn;
		    var prevError;
		    var prevGroup;
		    var prevGroupCollapsed;
		    var prevGroupEnd;
		    function disabledLog() {}
		    disabledLog.__reactDisabledLog = true;
		    function disableLogs() {
		      {
		        if (disabledDepth === 0) {
		          /* eslint-disable react-internal/no-production-logging */
		          prevLog = console.log;
		          prevInfo = console.info;
		          prevWarn = console.warn;
		          prevError = console.error;
		          prevGroup = console.group;
		          prevGroupCollapsed = console.groupCollapsed;
		          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

		          var props = {
		            configurable: true,
		            enumerable: true,
		            value: disabledLog,
		            writable: true
		          }; // $FlowFixMe Flow thinks console is immutable.

		          Object.defineProperties(console, {
		            info: props,
		            log: props,
		            warn: props,
		            error: props,
		            group: props,
		            groupCollapsed: props,
		            groupEnd: props
		          });
		          /* eslint-enable react-internal/no-production-logging */
		        }
		        disabledDepth++;
		      }
		    }
		    function reenableLogs() {
		      {
		        disabledDepth--;
		        if (disabledDepth === 0) {
		          /* eslint-disable react-internal/no-production-logging */
		          var props = {
		            configurable: true,
		            enumerable: true,
		            writable: true
		          }; // $FlowFixMe Flow thinks console is immutable.

		          Object.defineProperties(console, {
		            log: assign({}, props, {
		              value: prevLog
		            }),
		            info: assign({}, props, {
		              value: prevInfo
		            }),
		            warn: assign({}, props, {
		              value: prevWarn
		            }),
		            error: assign({}, props, {
		              value: prevError
		            }),
		            group: assign({}, props, {
		              value: prevGroup
		            }),
		            groupCollapsed: assign({}, props, {
		              value: prevGroupCollapsed
		            }),
		            groupEnd: assign({}, props, {
		              value: prevGroupEnd
		            })
		          });
		          /* eslint-enable react-internal/no-production-logging */
		        }
		        if (disabledDepth < 0) {
		          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
		        }
		      }
		    }
		    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
		    var prefix;
		    function describeBuiltInComponentFrame(name, source, ownerFn) {
		      {
		        if (prefix === undefined) {
		          // Extract the VM specific prefix used by each line.
		          try {
		            throw Error();
		          } catch (x) {
		            var match = x.stack.trim().match(/\n( *(at )?)/);
		            prefix = match && match[1] || '';
		          }
		        } // We use the prefix to ensure our stacks line up with native stack frames.

		        return '\n' + prefix + name;
		      }
		    }
		    var reentry = false;
		    var componentFrameCache;
		    {
		      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
		      componentFrameCache = new PossiblyWeakMap();
		    }
		    function describeNativeComponentFrame(fn, construct) {
		      // If something asked for a stack inside a fake render, it should get ignored.
		      if (!fn || reentry) {
		        return '';
		      }
		      {
		        var frame = componentFrameCache.get(fn);
		        if (frame !== undefined) {
		          return frame;
		        }
		      }
		      var control;
		      reentry = true;
		      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

		      Error.prepareStackTrace = undefined;
		      var previousDispatcher;
		      {
		        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
		        // for warnings.

		        ReactCurrentDispatcher.current = null;
		        disableLogs();
		      }
		      try {
		        // This should throw.
		        if (construct) {
		          // Something should be setting the props in the constructor.
		          var Fake = function () {
		            throw Error();
		          }; // $FlowFixMe

		          Object.defineProperty(Fake.prototype, 'props', {
		            set: function () {
		              // We use a throwing setter instead of frozen or non-writable props
		              // because that won't throw in a non-strict mode function.
		              throw Error();
		            }
		          });
		          if (typeof Reflect === 'object' && Reflect.construct) {
		            // We construct a different control for this case to include any extra
		            // frames added by the construct call.
		            try {
		              Reflect.construct(Fake, []);
		            } catch (x) {
		              control = x;
		            }
		            Reflect.construct(fn, [], Fake);
		          } else {
		            try {
		              Fake.call();
		            } catch (x) {
		              control = x;
		            }
		            fn.call(Fake.prototype);
		          }
		        } else {
		          try {
		            throw Error();
		          } catch (x) {
		            control = x;
		          }
		          fn();
		        }
		      } catch (sample) {
		        // This is inlined manually because closure doesn't do it for us.
		        if (sample && control && typeof sample.stack === 'string') {
		          // This extracts the first frame from the sample that isn't also in the control.
		          // Skipping one frame that we assume is the frame that calls the two.
		          var sampleLines = sample.stack.split('\n');
		          var controlLines = control.stack.split('\n');
		          var s = sampleLines.length - 1;
		          var c = controlLines.length - 1;
		          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
		            // We expect at least one stack frame to be shared.
		            // Typically this will be the root most one. However, stack frames may be
		            // cut off due to maximum stack limits. In this case, one maybe cut off
		            // earlier than the other. We assume that the sample is longer or the same
		            // and there for cut off earlier. So we should find the root most frame in
		            // the sample somewhere in the control.
		            c--;
		          }
		          for (; s >= 1 && c >= 0; s--, c--) {
		            // Next we find the first one that isn't the same which should be the
		            // frame that called our sample function and the control.
		            if (sampleLines[s] !== controlLines[c]) {
		              // In V8, the first line is describing the message but other VMs don't.
		              // If we're about to return the first line, and the control is also on the same
		              // line, that's a pretty good indicator that our sample threw at same line as
		              // the control. I.e. before we entered the sample frame. So we ignore this result.
		              // This can happen if you passed a class to function component, or non-function.
		              if (s !== 1 || c !== 1) {
		                do {
		                  s--;
		                  c--; // We may still have similar intermediate frames from the construct call.
		                  // The next one that isn't the same should be our match though.

		                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
		                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
		                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
		                    // but we have a user-provided "displayName"
		                    // splice it in to make the stack more readable.

		                    if (fn.displayName && _frame.includes('<anonymous>')) {
		                      _frame = _frame.replace('<anonymous>', fn.displayName);
		                    }
		                    {
		                      if (typeof fn === 'function') {
		                        componentFrameCache.set(fn, _frame);
		                      }
		                    } // Return the line we found.

		                    return _frame;
		                  }
		                } while (s >= 1 && c >= 0);
		              }
		              break;
		            }
		          }
		        }
		      } finally {
		        reentry = false;
		        {
		          ReactCurrentDispatcher.current = previousDispatcher;
		          reenableLogs();
		        }
		        Error.prepareStackTrace = previousPrepareStackTrace;
		      } // Fallback to just using the name if we couldn't make it throw.

		      var name = fn ? fn.displayName || fn.name : '';
		      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
		      {
		        if (typeof fn === 'function') {
		          componentFrameCache.set(fn, syntheticFrame);
		        }
		      }
		      return syntheticFrame;
		    }
		    function describeFunctionComponentFrame(fn, source, ownerFn) {
		      {
		        return describeNativeComponentFrame(fn, false);
		      }
		    }
		    function shouldConstruct(Component) {
		      var prototype = Component.prototype;
		      return !!(prototype && prototype.isReactComponent);
		    }
		    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
		      if (type == null) {
		        return '';
		      }
		      if (typeof type === 'function') {
		        {
		          return describeNativeComponentFrame(type, shouldConstruct(type));
		        }
		      }
		      if (typeof type === 'string') {
		        return describeBuiltInComponentFrame(type);
		      }
		      switch (type) {
		        case REACT_SUSPENSE_TYPE:
		          return describeBuiltInComponentFrame('Suspense');
		        case REACT_SUSPENSE_LIST_TYPE:
		          return describeBuiltInComponentFrame('SuspenseList');
		      }
		      if (typeof type === 'object') {
		        switch (type.$$typeof) {
		          case REACT_FORWARD_REF_TYPE:
		            return describeFunctionComponentFrame(type.render);
		          case REACT_MEMO_TYPE:
		            // Memo may contain any component type so we recursively resolve it.
		            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
		          case REACT_LAZY_TYPE:
		            {
		              var lazyComponent = type;
		              var payload = lazyComponent._payload;
		              var init = lazyComponent._init;
		              try {
		                // Lazy may contain any component type so we recursively resolve it.
		                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
		              } catch (x) {}
		            }
		        }
		      }
		      return '';
		    }
		    var hasOwnProperty = Object.prototype.hasOwnProperty;
		    var loggedTypeFailures = {};
		    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
		    function setCurrentlyValidatingElement(element) {
		      {
		        if (element) {
		          var owner = element._owner;
		          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
		          ReactDebugCurrentFrame.setExtraStackFrame(stack);
		        } else {
		          ReactDebugCurrentFrame.setExtraStackFrame(null);
		        }
		      }
		    }
		    function checkPropTypes(typeSpecs, values, location, componentName, element) {
		      {
		        // $FlowFixMe This is okay but Flow doesn't know it.
		        var has = Function.call.bind(hasOwnProperty);
		        for (var typeSpecName in typeSpecs) {
		          if (has(typeSpecs, typeSpecName)) {
		            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
		            // fail the render phase where it didn't fail before. So we log it.
		            // After these have been cleaned up, we'll let them throw.

		            try {
		              // This is intentionally an invariant that gets caught. It's the same
		              // behavior as without this statement except with a better message.
		              if (typeof typeSpecs[typeSpecName] !== 'function') {
		                // eslint-disable-next-line react-internal/prod-error-codes
		                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
		                err.name = 'Invariant Violation';
		                throw err;
		              }
		              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
		            } catch (ex) {
		              error$1 = ex;
		            }
		            if (error$1 && !(error$1 instanceof Error)) {
		              setCurrentlyValidatingElement(element);
		              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
		              setCurrentlyValidatingElement(null);
		            }
		            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
		              // Only monitor this failure once because there tends to be a lot of the
		              // same error.
		              loggedTypeFailures[error$1.message] = true;
		              setCurrentlyValidatingElement(element);
		              error('Failed %s type: %s', location, error$1.message);
		              setCurrentlyValidatingElement(null);
		            }
		          }
		        }
		      }
		    }
		    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

		    function isArray(a) {
		      return isArrayImpl(a);
		    }

		    /*
		     * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
		     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
		     *
		     * The functions in this module will throw an easier-to-understand,
		     * easier-to-debug exception with a clear errors message message explaining the
		     * problem. (Instead of a confusing exception thrown inside the implementation
		     * of the `value` object).
		     */
		    // $FlowFixMe only called in DEV, so void return is not possible.
		    function typeName(value) {
		      {
		        // toStringTag is needed for namespaced types like Temporal.Instant
		        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
		        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
		        return type;
		      }
		    } // $FlowFixMe only called in DEV, so void return is not possible.

		    function willCoercionThrow(value) {
		      {
		        try {
		          testStringCoercion(value);
		          return false;
		        } catch (e) {
		          return true;
		        }
		      }
		    }
		    function testStringCoercion(value) {
		      // If you ended up here by following an exception call stack, here's what's
		      // happened: you supplied an object or symbol value to React (as a prop, key,
		      // DOM attribute, CSS property, string ref, etc.) and when React tried to
		      // coerce it to a string using `'' + value`, an exception was thrown.
		      //
		      // The most common types that will cause this exception are `Symbol` instances
		      // and Temporal objects like `Temporal.Instant`. But any object that has a
		      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
		      // exception. (Library authors do this to prevent users from using built-in
		      // numeric operators like `+` or comparison operators like `>=` because custom
		      // methods are needed to perform accurate arithmetic or comparison.)
		      //
		      // To fix the problem, coerce this object or symbol value to a string before
		      // passing it to React. The most reliable way is usually `String(value)`.
		      //
		      // To find which value is throwing, check the browser or debugger console.
		      // Before this exception was thrown, there should be `console.error` output
		      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
		      // problem and how that type was used: key, atrribute, input value prop, etc.
		      // In most cases, this console output also shows the component and its
		      // ancestor components where the exception happened.
		      //
		      // eslint-disable-next-line react-internal/safe-string-coercion
		      return '' + value;
		    }
		    function checkKeyStringCoercion(value) {
		      {
		        if (willCoercionThrow(value)) {
		          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));
		          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
		        }
		      }
		    }
		    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
		    var RESERVED_PROPS = {
		      key: true,
		      ref: true,
		      __self: true,
		      __source: true
		    };
		    var specialPropKeyWarningShown;
		    var specialPropRefWarningShown;
		    var didWarnAboutStringRefs;
		    {
		      didWarnAboutStringRefs = {};
		    }
		    function hasValidRef(config) {
		      {
		        if (hasOwnProperty.call(config, 'ref')) {
		          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
		          if (getter && getter.isReactWarning) {
		            return false;
		          }
		        }
		      }
		      return config.ref !== undefined;
		    }
		    function hasValidKey(config) {
		      {
		        if (hasOwnProperty.call(config, 'key')) {
		          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
		          if (getter && getter.isReactWarning) {
		            return false;
		          }
		        }
		      }
		      return config.key !== undefined;
		    }
		    function warnIfStringRefCannotBeAutoConverted(config, self) {
		      {
		        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
		          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
		          if (!didWarnAboutStringRefs[componentName]) {
		            error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
		            didWarnAboutStringRefs[componentName] = true;
		          }
		        }
		      }
		    }
		    function defineKeyPropWarningGetter(props, displayName) {
		      {
		        var warnAboutAccessingKey = function () {
		          if (!specialPropKeyWarningShown) {
		            specialPropKeyWarningShown = true;
		            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
		          }
		        };
		        warnAboutAccessingKey.isReactWarning = true;
		        Object.defineProperty(props, 'key', {
		          get: warnAboutAccessingKey,
		          configurable: true
		        });
		      }
		    }
		    function defineRefPropWarningGetter(props, displayName) {
		      {
		        var warnAboutAccessingRef = function () {
		          if (!specialPropRefWarningShown) {
		            specialPropRefWarningShown = true;
		            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
		          }
		        };
		        warnAboutAccessingRef.isReactWarning = true;
		        Object.defineProperty(props, 'ref', {
		          get: warnAboutAccessingRef,
		          configurable: true
		        });
		      }
		    }
		    /**
		     * Factory method to create a new React element. This no longer adheres to
		     * the class pattern, so do not use new to call it. Also, instanceof check
		     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
		     * if something is a React Element.
		     *
		     * @param {*} type
		     * @param {*} props
		     * @param {*} key
		     * @param {string|object} ref
		     * @param {*} owner
		     * @param {*} self A *temporary* helper to detect places where `this` is
		     * different from the `owner` when React.createElement is called, so that we
		     * can warn. We want to get rid of owner and replace string `ref`s with arrow
		     * functions, and as long as `this` and owner are the same, there will be no
		     * change in behavior.
		     * @param {*} source An annotation object (added by a transpiler or otherwise)
		     * indicating filename, line number, and/or other information.
		     * @internal
		     */

		    var ReactElement = function (type, key, ref, self, source, owner, props) {
		      var element = {
		        // This tag allows us to uniquely identify this as a React Element
		        $$typeof: REACT_ELEMENT_TYPE,
		        // Built-in properties that belong on the element
		        type: type,
		        key: key,
		        ref: ref,
		        props: props,
		        // Record the component responsible for creating this element.
		        _owner: owner
		      };
		      {
		        // The validation flag is currently mutative. We put it on
		        // an external backing store so that we can freeze the whole object.
		        // This can be replaced with a WeakMap once they are implemented in
		        // commonly used development environments.
		        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
		        // the validation flag non-enumerable (where possible, which should
		        // include every environment we run tests in), so the test framework
		        // ignores it.

		        Object.defineProperty(element._store, 'validated', {
		          configurable: false,
		          enumerable: false,
		          writable: true,
		          value: false
		        }); // self and source are DEV only properties.

		        Object.defineProperty(element, '_self', {
		          configurable: false,
		          enumerable: false,
		          writable: false,
		          value: self
		        }); // Two elements created in two different places should be considered
		        // equal for testing purposes and therefore we hide it from enumeration.

		        Object.defineProperty(element, '_source', {
		          configurable: false,
		          enumerable: false,
		          writable: false,
		          value: source
		        });
		        if (Object.freeze) {
		          Object.freeze(element.props);
		          Object.freeze(element);
		        }
		      }
		      return element;
		    };
		    /**
		     * https://github.com/reactjs/rfcs/pull/107
		     * @param {*} type
		     * @param {object} props
		     * @param {string} key
		     */

		    function jsxDEV(type, config, maybeKey, source, self) {
		      {
		        var propName; // Reserved names are extracted

		        var props = {};
		        var key = null;
		        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
		        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
		        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
		        // but as an intermediary step, we will use jsxDEV for everything except
		        // <div {...props} key="Hi" />, because we aren't currently able to tell if
		        // key is explicitly declared to be undefined or not.

		        if (maybeKey !== undefined) {
		          {
		            checkKeyStringCoercion(maybeKey);
		          }
		          key = '' + maybeKey;
		        }
		        if (hasValidKey(config)) {
		          {
		            checkKeyStringCoercion(config.key);
		          }
		          key = '' + config.key;
		        }
		        if (hasValidRef(config)) {
		          ref = config.ref;
		          warnIfStringRefCannotBeAutoConverted(config, self);
		        } // Remaining properties are added to a new props object

		        for (propName in config) {
		          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
		            props[propName] = config[propName];
		          }
		        } // Resolve default props

		        if (type && type.defaultProps) {
		          var defaultProps = type.defaultProps;
		          for (propName in defaultProps) {
		            if (props[propName] === undefined) {
		              props[propName] = defaultProps[propName];
		            }
		          }
		        }
		        if (key || ref) {
		          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
		          if (key) {
		            defineKeyPropWarningGetter(props, displayName);
		          }
		          if (ref) {
		            defineRefPropWarningGetter(props, displayName);
		          }
		        }
		        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
		      }
		    }
		    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
		    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
		    function setCurrentlyValidatingElement$1(element) {
		      {
		        if (element) {
		          var owner = element._owner;
		          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
		          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
		        } else {
		          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
		        }
		      }
		    }
		    var propTypesMisspellWarningShown;
		    {
		      propTypesMisspellWarningShown = false;
		    }
		    /**
		     * Verifies the object is a ReactElement.
		     * See https://reactjs.org/docs/react-api.html#isvalidelement
		     * @param {?object} object
		     * @return {boolean} True if `object` is a ReactElement.
		     * @final
		     */

		    function isValidElement(object) {
		      {
		        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		      }
		    }
		    function getDeclarationErrorAddendum() {
		      {
		        if (ReactCurrentOwner$1.current) {
		          var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
		          if (name) {
		            return '\n\nCheck the render method of `' + name + '`.';
		          }
		        }
		        return '';
		      }
		    }
		    function getSourceInfoErrorAddendum(source) {
		      {
		        if (source !== undefined) {
		          var fileName = source.fileName.replace(/^.*[\\\/]/, '');
		          var lineNumber = source.lineNumber;
		          return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
		        }
		        return '';
		      }
		    }
		    /**
		     * Warn if there's no key explicitly set on dynamic arrays of children or
		     * object keys are not valid. This allows us to keep track of children between
		     * updates.
		     */

		    var ownerHasKeyUseWarning = {};
		    function getCurrentComponentErrorInfo(parentType) {
		      {
		        var info = getDeclarationErrorAddendum();
		        if (!info) {
		          var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
		          if (parentName) {
		            info = "\n\nCheck the top-level render call using <" + parentName + ">.";
		          }
		        }
		        return info;
		      }
		    }
		    /**
		     * Warn if the element doesn't have an explicit key assigned to it.
		     * This element is in an array. The array could grow and shrink or be
		     * reordered. All children that haven't already been validated are required to
		     * have a "key" property assigned to it. Error statuses are cached so a warning
		     * will only be shown once.
		     *
		     * @internal
		     * @param {ReactElement} element Element that requires a key.
		     * @param {*} parentType element's parent's type.
		     */

		    function validateExplicitKey(element, parentType) {
		      {
		        if (!element._store || element._store.validated || element.key != null) {
		          return;
		        }
		        element._store.validated = true;
		        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
		        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
		          return;
		        }
		        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
		        // property, it may be the creator of the child that's responsible for
		        // assigning it a key.

		        var childOwner = '';
		        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
		          // Give the component that originally created this child.
		          childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
		        }
		        setCurrentlyValidatingElement$1(element);
		        error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
		        setCurrentlyValidatingElement$1(null);
		      }
		    }
		    /**
		     * Ensure that every element either is passed in a static location, in an
		     * array with an explicit keys property defined, or in an object literal
		     * with valid key property.
		     *
		     * @internal
		     * @param {ReactNode} node Statically passed child of any type.
		     * @param {*} parentType node's parent's type.
		     */

		    function validateChildKeys(node, parentType) {
		      {
		        if (typeof node !== 'object') {
		          return;
		        }
		        if (isArray(node)) {
		          for (var i = 0; i < node.length; i++) {
		            var child = node[i];
		            if (isValidElement(child)) {
		              validateExplicitKey(child, parentType);
		            }
		          }
		        } else if (isValidElement(node)) {
		          // This element was passed in a valid location.
		          if (node._store) {
		            node._store.validated = true;
		          }
		        } else if (node) {
		          var iteratorFn = getIteratorFn(node);
		          if (typeof iteratorFn === 'function') {
		            // Entry iterators used to provide implicit keys,
		            // but now we print a separate warning for them later.
		            if (iteratorFn !== node.entries) {
		              var iterator = iteratorFn.call(node);
		              var step;
		              while (!(step = iterator.next()).done) {
		                if (isValidElement(step.value)) {
		                  validateExplicitKey(step.value, parentType);
		                }
		              }
		            }
		          }
		        }
		      }
		    }
		    /**
		     * Given an element, validate that its props follow the propTypes definition,
		     * provided by the type.
		     *
		     * @param {ReactElement} element
		     */

		    function validatePropTypes(element) {
		      {
		        var type = element.type;
		        if (type === null || type === undefined || typeof type === 'string') {
		          return;
		        }
		        var propTypes;
		        if (typeof type === 'function') {
		          propTypes = type.propTypes;
		        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
		        // Note: Memo only checks outer props here.
		        // Inner props are checked in the reconciler.
		        type.$$typeof === REACT_MEMO_TYPE)) {
		          propTypes = type.propTypes;
		        } else {
		          return;
		        }
		        if (propTypes) {
		          // Intentionally inside to avoid triggering lazy initializers:
		          var name = getComponentNameFromType(type);
		          checkPropTypes(propTypes, element.props, 'prop', name, element);
		        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
		          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

		          var _name = getComponentNameFromType(type);
		          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
		        }
		        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
		          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
		        }
		      }
		    }
		    /**
		     * Given a fragment, validate that it can only be provided with fragment props
		     * @param {ReactElement} fragment
		     */

		    function validateFragmentProps(fragment) {
		      {
		        var keys = Object.keys(fragment.props);
		        for (var i = 0; i < keys.length; i++) {
		          var key = keys[i];
		          if (key !== 'children' && key !== 'key') {
		            setCurrentlyValidatingElement$1(fragment);
		            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
		            setCurrentlyValidatingElement$1(null);
		            break;
		          }
		        }
		        if (fragment.ref !== null) {
		          setCurrentlyValidatingElement$1(fragment);
		          error('Invalid attribute `ref` supplied to `React.Fragment`.');
		          setCurrentlyValidatingElement$1(null);
		        }
		      }
		    }
		    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
		      {
		        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
		        // succeed and there will likely be errors in render.

		        if (!validType) {
		          var info = '';
		          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
		            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
		          }
		          var sourceInfo = getSourceInfoErrorAddendum(source);
		          if (sourceInfo) {
		            info += sourceInfo;
		          } else {
		            info += getDeclarationErrorAddendum();
		          }
		          var typeString;
		          if (type === null) {
		            typeString = 'null';
		          } else if (isArray(type)) {
		            typeString = 'array';
		          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
		            typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
		            info = ' Did you accidentally export a JSX literal instead of a component?';
		          } else {
		            typeString = typeof type;
		          }
		          error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
		        }
		        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
		        // TODO: Drop this when these are no longer allowed as the type argument.

		        if (element == null) {
		          return element;
		        } // Skip key warning if the type isn't valid since our key validation logic
		        // doesn't expect a non-string/function type and can throw confusing errors.
		        // We don't want exception behavior to differ between dev and prod.
		        // (Rendering will throw with a helpful message and as soon as the type is
		        // fixed, the key warnings will appear.)

		        if (validType) {
		          var children = props.children;
		          if (children !== undefined) {
		            if (isStaticChildren) {
		              if (isArray(children)) {
		                for (var i = 0; i < children.length; i++) {
		                  validateChildKeys(children[i], type);
		                }
		                if (Object.freeze) {
		                  Object.freeze(children);
		                }
		              } else {
		                error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
		              }
		            } else {
		              validateChildKeys(children, type);
		            }
		          }
		        }
		        if (type === REACT_FRAGMENT_TYPE) {
		          validateFragmentProps(element);
		        } else {
		          validatePropTypes(element);
		        }
		        return element;
		      }
		    } // These two functions exist to still get child warnings in dev
		    // even with the prod transform. This means that jsxDEV is purely
		    // opt-in behavior for better messages but that we won't stop
		    // giving you warnings if you use production apis.

		    function jsxWithValidationStatic(type, props, key) {
		      {
		        return jsxWithValidation(type, props, key, true);
		      }
		    }
		    function jsxWithValidationDynamic(type, props, key) {
		      {
		        return jsxWithValidation(type, props, key, false);
		      }
		    }
		    var jsx = jsxWithValidationDynamic; // we may want to special case jsxs internally to take advantage of static children.
		    // for now we can ship identical prod functions

		    var jsxs = jsxWithValidationStatic;
		    reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;
		    reactJsxRuntime_development.jsx = jsx;
		    reactJsxRuntime_development.jsxs = jsxs;
		  })();
		}
		return reactJsxRuntime_development;
	}

	{
	  jsxRuntime.exports = requireReactJsxRuntime_development();
	}

	var jsxRuntimeExports = jsxRuntime.exports;

	let cache;
	if (typeof document === 'object') {
	  cache = createCache({
	    key: 'css',
	    prepend: true
	  });
	}
	function StyledEngineProvider(props) {
	  const {
	    injectFirst,
	    children
	  } = props;
	  return injectFirst && cache ? /*#__PURE__*/jsxRuntimeExports.jsx(CacheProvider, {
	    value: cache,
	    children: children
	  }) : children;
	}
	StyledEngineProvider.propTypes = {
	  /**
	   * Your component tree.
	   */
	  children: PropTypes.node,
	  /**
	   * By default, the styles are injected last in the <head> element of the page.
	   * As a result, they gain more specificity than any other style sheet.
	   * If you want to override MUI's styles, set this prop.
	   */
	  injectFirst: PropTypes.bool
	} ;

	function isEmpty$1(obj) {
	  return obj === undefined || obj === null || Object.keys(obj).length === 0;
	}
	function GlobalStyles(props) {
	  const {
	    styles,
	    defaultTheme = {}
	  } = props;
	  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty$1(themeInput) ? defaultTheme : themeInput) : styles;
	  return /*#__PURE__*/jsxRuntimeExports.jsx(Global, {
	    styles: globalStyles
	  });
	}
	GlobalStyles.propTypes = {
	  defaultTheme: PropTypes.object,
	  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])
	} ;

	/**
	 * @mui/styled-engine v5.15.11
	 *
	 * @license MIT
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	function styled$2(tag, options) {
	  const stylesFactory = newStyled(tag, options);
	  {
	    return (...styles) => {
	      const component = typeof tag === 'string' ? `"${tag}"` : 'component';
	      if (styles.length === 0) {
	        console.error([`MUI: Seems like you called \`styled(${component})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join('\n'));
	      } else if (styles.some(style => style === undefined)) {
	        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);
	      }
	      return stylesFactory(...styles);
	    };
	  }
	}

	// eslint-disable-next-line @typescript-eslint/naming-convention
	const internal_processStyles = (tag, processor) => {
	  // Emotion attaches all the styles as `__emotion_styles`.
	  // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186
	  if (Array.isArray(tag.__emotion_styles)) {
	    tag.__emotion_styles = processor(tag.__emotion_styles);
	  }
	};

	var styledEngine = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': styled$2,
		internal_processStyles: internal_processStyles,
		ThemeContext: ThemeContext,
		keyframes: keyframes,
		css: css,
		StyledEngineProvider: StyledEngineProvider,
		GlobalStyles: GlobalStyles
	});

	// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js
	function isPlainObject(item) {
	  if (typeof item !== 'object' || item === null) {
	    return false;
	  }
	  const prototype = Object.getPrototypeOf(item);
	  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);
	}
	function deepClone(source) {
	  if (!isPlainObject(source)) {
	    return source;
	  }
	  const output = {};
	  Object.keys(source).forEach(key => {
	    output[key] = deepClone(source[key]);
	  });
	  return output;
	}
	function deepmerge$1(target, source, options = {
	  clone: true
	}) {
	  const output = options.clone ? _extends$2({}, target) : target;
	  if (isPlainObject(target) && isPlainObject(source)) {
	    Object.keys(source).forEach(key => {
	      // Avoid prototype pollution
	      if (key === '__proto__') {
	        return;
	      }
	      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
	        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
	        output[key] = deepmerge$1(target[key], source[key], options);
	      } else if (options.clone) {
	        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
	      } else {
	        output[key] = source[key];
	      }
	    });
	  }
	  return output;
	}

	var deepmerge = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': deepmerge$1,
		isPlainObject: isPlainObject
	});

	const _excluded$9 = ["values", "unit", "step"];
	const sortBreakpointsValues = values => {
	  const breakpointsAsArray = Object.keys(values).map(key => ({
	    key,
	    val: values[key]
	  })) || [];
	  // Sort in ascending order
	  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);
	  return breakpointsAsArray.reduce((acc, obj) => {
	    return _extends$2({}, acc, {
	      [obj.key]: obj.val
	    });
	  }, {});
	};

	// Keep in mind that @media is inclusive by the CSS specification.
	function createBreakpoints(breakpoints) {
	  const {
	      // The breakpoint **start** at this value.
	      // For instance with the first breakpoint xs: [xs, sm).
	      values = {
	        xs: 0,
	        // phone
	        sm: 600,
	        // tablet
	        md: 900,
	        // small laptop
	        lg: 1200,
	        // desktop
	        xl: 1536 // large screen
	      },
	      unit = 'px',
	      step = 5
	    } = breakpoints,
	    other = _objectWithoutPropertiesLoose$1(breakpoints, _excluded$9);
	  const sortedValues = sortBreakpointsValues(values);
	  const keys = Object.keys(sortedValues);
	  function up(key) {
	    const value = typeof values[key] === 'number' ? values[key] : key;
	    return `@media (min-width:${value}${unit})`;
	  }
	  function down(key) {
	    const value = typeof values[key] === 'number' ? values[key] : key;
	    return `@media (max-width:${value - step / 100}${unit})`;
	  }
	  function between(start, end) {
	    const endIndex = keys.indexOf(end);
	    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;
	  }
	  function only(key) {
	    if (keys.indexOf(key) + 1 < keys.length) {
	      return between(key, keys[keys.indexOf(key) + 1]);
	    }
	    return up(key);
	  }
	  function not(key) {
	    // handle first and last key separately, for better readability
	    const keyIndex = keys.indexOf(key);
	    if (keyIndex === 0) {
	      return up(keys[1]);
	    }
	    if (keyIndex === keys.length - 1) {
	      return down(keys[keyIndex]);
	    }
	    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');
	  }
	  return _extends$2({
	    keys,
	    values: sortedValues,
	    up,
	    down,
	    between,
	    only,
	    not,
	    unit
	  }, other);
	}

	const shape = {
	  borderRadius: 4
	};
	var shape$1 = shape;

	const responsivePropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.object, PropTypes.array]) ;
	var responsivePropType$1 = responsivePropType;

	function merge(acc, item) {
	  if (!item) {
	    return acc;
	  }
	  return deepmerge$1(acc, item, {
	    clone: false // No need to clone deep, it's way faster.
	  });
	}

	// The breakpoint **start** at this value.
	// For instance with the first breakpoint xs: [xs, sm[.
	const values = {
	  xs: 0,
	  // phone
	  sm: 600,
	  // tablet
	  md: 900,
	  // small laptop
	  lg: 1200,
	  // desktop
	  xl: 1536 // large screen
	};
	const defaultBreakpoints = {
	  // Sorted ASC by size. That's important.
	  // It can't be configured as it's used statically for propTypes.
	  keys: ['xs', 'sm', 'md', 'lg', 'xl'],
	  up: key => `@media (min-width:${values[key]}px)`
	};
	function handleBreakpoints(props, propValue, styleFromPropValue) {
	  const theme = props.theme || {};
	  if (Array.isArray(propValue)) {
	    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
	    return propValue.reduce((acc, item, index) => {
	      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
	      return acc;
	    }, {});
	  }
	  if (typeof propValue === 'object') {
	    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
	    return Object.keys(propValue).reduce((acc, breakpoint) => {
	      // key is breakpoint
	      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {
	        const mediaKey = themeBreakpoints.up(breakpoint);
	        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
	      } else {
	        const cssKey = breakpoint;
	        acc[cssKey] = propValue[cssKey];
	      }
	      return acc;
	    }, {});
	  }
	  const output = styleFromPropValue(propValue);
	  return output;
	}
	function createEmptyBreakpointObject(breakpointsInput = {}) {
	  var _breakpointsInput$key;
	  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
	    const breakpointStyleKey = breakpointsInput.up(key);
	    acc[breakpointStyleKey] = {};
	    return acc;
	  }, {});
	  return breakpointsInOrder || {};
	}
	function removeUnusedBreakpoints(breakpointKeys, style) {
	  return breakpointKeys.reduce((acc, key) => {
	    const breakpointOutput = acc[key];
	    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
	    if (isBreakpointUnused) {
	      delete acc[key];
	    }
	    return acc;
	  }, style);
	}

	// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
	//
	// A strict capitalization should uppercase the first letter of each word in the sentence.
	// We only handle the first word.
	function capitalize$1(string) {
	  if (typeof string !== 'string') {
	    throw new Error(`MUI: \`capitalize(string)\` expects a string argument.` );
	  }
	  return string.charAt(0).toUpperCase() + string.slice(1);
	}

	var capitalize = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': capitalize$1
	});

	function getPath(obj, path, checkVars = true) {
	  if (!path || typeof path !== 'string') {
	    return null;
	  }

	  // Check if CSS variables are used
	  if (obj && obj.vars && checkVars) {
	    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
	    if (val != null) {
	      return val;
	    }
	  }
	  return path.split('.').reduce((acc, item) => {
	    if (acc && acc[item] != null) {
	      return acc[item];
	    }
	    return null;
	  }, obj);
	}
	function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
	  let value;
	  if (typeof themeMapping === 'function') {
	    value = themeMapping(propValueFinal);
	  } else if (Array.isArray(themeMapping)) {
	    value = themeMapping[propValueFinal] || userValue;
	  } else {
	    value = getPath(themeMapping, propValueFinal) || userValue;
	  }
	  if (transform) {
	    value = transform(value, userValue, themeMapping);
	  }
	  return value;
	}
	function style$1(options) {
	  const {
	    prop,
	    cssProperty = options.prop,
	    themeKey,
	    transform
	  } = options;

	  // false positive
	  // eslint-disable-next-line react/function-component-definition
	  const fn = props => {
	    if (props[prop] == null) {
	      return null;
	    }
	    const propValue = props[prop];
	    const theme = props.theme;
	    const themeMapping = getPath(theme, themeKey) || {};
	    const styleFromPropValue = propValueFinal => {
	      let value = getStyleValue(themeMapping, transform, propValueFinal);
	      if (propValueFinal === value && typeof propValueFinal === 'string') {
	        // Haven't found value
	        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize$1(propValueFinal)}`, propValueFinal);
	      }
	      if (cssProperty === false) {
	        return value;
	      }
	      return {
	        [cssProperty]: value
	      };
	    };
	    return handleBreakpoints(props, propValue, styleFromPropValue);
	  };
	  fn.propTypes = {
	    [prop]: responsivePropType$1
	  } ;
	  fn.filterProps = [prop];
	  return fn;
	}

	function memoize(fn) {
	  const cache = {};
	  return arg => {
	    if (cache[arg] === undefined) {
	      cache[arg] = fn(arg);
	    }
	    return cache[arg];
	  };
	}

	const properties = {
	  m: 'margin',
	  p: 'padding'
	};
	const directions = {
	  t: 'Top',
	  r: 'Right',
	  b: 'Bottom',
	  l: 'Left',
	  x: ['Left', 'Right'],
	  y: ['Top', 'Bottom']
	};
	const aliases = {
	  marginX: 'mx',
	  marginY: 'my',
	  paddingX: 'px',
	  paddingY: 'py'
	};

	// memoize() impact:
	// From 300,000 ops/sec
	// To 350,000 ops/sec
	const getCssProperties = memoize(prop => {
	  // It's not a shorthand notation.
	  if (prop.length > 2) {
	    if (aliases[prop]) {
	      prop = aliases[prop];
	    } else {
	      return [prop];
	    }
	  }
	  const [a, b] = prop.split('');
	  const property = properties[a];
	  const direction = directions[b] || '';
	  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];
	});
	const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];
	const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];
	const spacingKeys = [...marginKeys, ...paddingKeys];
	function createUnaryUnit(theme, themeKey, defaultValue, propName) {
	  var _getPath;
	  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;
	  if (typeof themeSpacing === 'number') {
	    return abs => {
	      if (typeof abs === 'string') {
	        return abs;
	      }
	      {
	        if (typeof abs !== 'number') {
	          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);
	        }
	      }
	      return themeSpacing * abs;
	    };
	  }
	  if (Array.isArray(themeSpacing)) {
	    return abs => {
	      if (typeof abs === 'string') {
	        return abs;
	      }
	      {
	        if (!Number.isInteger(abs)) {
	          console.error([`MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`].join('\n'));
	        } else if (abs > themeSpacing.length - 1) {
	          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\n'));
	        }
	      }
	      return themeSpacing[abs];
	    };
	  }
	  if (typeof themeSpacing === 'function') {
	    return themeSpacing;
	  }
	  {
	    console.error([`MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\n'));
	  }
	  return () => undefined;
	}
	function createUnarySpacing(theme) {
	  return createUnaryUnit(theme, 'spacing', 8, 'spacing');
	}
	function getValue(transformer, propValue) {
	  if (typeof propValue === 'string' || propValue == null) {
	    return propValue;
	  }
	  const abs = Math.abs(propValue);
	  const transformed = transformer(abs);
	  if (propValue >= 0) {
	    return transformed;
	  }
	  if (typeof transformed === 'number') {
	    return -transformed;
	  }
	  return `-${transformed}`;
	}
	function getStyleFromPropValue(cssProperties, transformer) {
	  return propValue => cssProperties.reduce((acc, cssProperty) => {
	    acc[cssProperty] = getValue(transformer, propValue);
	    return acc;
	  }, {});
	}
	function resolveCssProperty(props, keys, prop, transformer) {
	  // Using a hash computation over an array iteration could be faster, but with only 28 items,
	  // it's doesn't worth the bundle size.
	  if (keys.indexOf(prop) === -1) {
	    return null;
	  }
	  const cssProperties = getCssProperties(prop);
	  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
	  const propValue = props[prop];
	  return handleBreakpoints(props, propValue, styleFromPropValue);
	}
	function style(props, keys) {
	  const transformer = createUnarySpacing(props.theme);
	  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});
	}
	function margin(props) {
	  return style(props, marginKeys);
	}
	margin.propTypes = marginKeys.reduce((obj, key) => {
	  obj[key] = responsivePropType$1;
	  return obj;
	}, {}) ;
	margin.filterProps = marginKeys;
	function padding(props) {
	  return style(props, paddingKeys);
	}
	padding.propTypes = paddingKeys.reduce((obj, key) => {
	  obj[key] = responsivePropType$1;
	  return obj;
	}, {}) ;
	padding.filterProps = paddingKeys;
	spacingKeys.reduce((obj, key) => {
	  obj[key] = responsivePropType$1;
	  return obj;
	}, {}) ;

	// The different signatures imply different meaning for their arguments that can't be expressed structurally.
	// We express the difference with variable names.

	function createSpacing(spacingInput = 8) {
	  // Already transformed.
	  if (spacingInput.mui) {
	    return spacingInput;
	  }

	  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
	  // Smaller components, such as icons, can align to a 4dp grid.
	  // https://m2.material.io/design/layout/understanding-layout.html
	  const transform = createUnarySpacing({
	    spacing: spacingInput
	  });
	  const spacing = (...argsInput) => {
	    {
	      if (!(argsInput.length <= 4)) {
	        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
	      }
	    }
	    const args = argsInput.length === 0 ? [1] : argsInput;
	    return args.map(argument => {
	      const output = transform(argument);
	      return typeof output === 'number' ? `${output}px` : output;
	    }).join(' ');
	  };
	  spacing.mui = true;
	  return spacing;
	}

	function compose(...styles) {
	  const handlers = styles.reduce((acc, style) => {
	    style.filterProps.forEach(prop => {
	      acc[prop] = style;
	    });
	    return acc;
	  }, {});

	  // false positive
	  // eslint-disable-next-line react/function-component-definition
	  const fn = props => {
	    return Object.keys(props).reduce((acc, prop) => {
	      if (handlers[prop]) {
	        return merge(acc, handlers[prop](props));
	      }
	      return acc;
	    }, {});
	  };
	  fn.propTypes = styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) ;
	  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);
	  return fn;
	}

	function borderTransform(value) {
	  if (typeof value !== 'number') {
	    return value;
	  }
	  return `${value}px solid`;
	}
	function createBorderStyle(prop, transform) {
	  return style$1({
	    prop,
	    themeKey: 'borders',
	    transform
	  });
	}
	const border = createBorderStyle('border', borderTransform);
	const borderTop = createBorderStyle('borderTop', borderTransform);
	const borderRight = createBorderStyle('borderRight', borderTransform);
	const borderBottom = createBorderStyle('borderBottom', borderTransform);
	const borderLeft = createBorderStyle('borderLeft', borderTransform);
	const borderColor = createBorderStyle('borderColor');
	const borderTopColor = createBorderStyle('borderTopColor');
	const borderRightColor = createBorderStyle('borderRightColor');
	const borderBottomColor = createBorderStyle('borderBottomColor');
	const borderLeftColor = createBorderStyle('borderLeftColor');
	const outline = createBorderStyle('outline', borderTransform);
	const outlineColor = createBorderStyle('outlineColor');

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const borderRadius = props => {
	  if (props.borderRadius !== undefined && props.borderRadius !== null) {
	    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');
	    const styleFromPropValue = propValue => ({
	      borderRadius: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);
	  }
	  return null;
	};
	borderRadius.propTypes = {
	  borderRadius: responsivePropType$1
	} ;
	borderRadius.filterProps = ['borderRadius'];
	compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, outline, outlineColor);

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const gap = props => {
	  if (props.gap !== undefined && props.gap !== null) {
	    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');
	    const styleFromPropValue = propValue => ({
	      gap: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.gap, styleFromPropValue);
	  }
	  return null;
	};
	gap.propTypes = {
	  gap: responsivePropType$1
	} ;
	gap.filterProps = ['gap'];

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const columnGap = props => {
	  if (props.columnGap !== undefined && props.columnGap !== null) {
	    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');
	    const styleFromPropValue = propValue => ({
	      columnGap: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.columnGap, styleFromPropValue);
	  }
	  return null;
	};
	columnGap.propTypes = {
	  columnGap: responsivePropType$1
	} ;
	columnGap.filterProps = ['columnGap'];

	// false positive
	// eslint-disable-next-line react/function-component-definition
	const rowGap = props => {
	  if (props.rowGap !== undefined && props.rowGap !== null) {
	    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');
	    const styleFromPropValue = propValue => ({
	      rowGap: getValue(transformer, propValue)
	    });
	    return handleBreakpoints(props, props.rowGap, styleFromPropValue);
	  }
	  return null;
	};
	rowGap.propTypes = {
	  rowGap: responsivePropType$1
	} ;
	rowGap.filterProps = ['rowGap'];
	const gridColumn = style$1({
	  prop: 'gridColumn'
	});
	const gridRow = style$1({
	  prop: 'gridRow'
	});
	const gridAutoFlow = style$1({
	  prop: 'gridAutoFlow'
	});
	const gridAutoColumns = style$1({
	  prop: 'gridAutoColumns'
	});
	const gridAutoRows = style$1({
	  prop: 'gridAutoRows'
	});
	const gridTemplateColumns = style$1({
	  prop: 'gridTemplateColumns'
	});
	const gridTemplateRows = style$1({
	  prop: 'gridTemplateRows'
	});
	const gridTemplateAreas = style$1({
	  prop: 'gridTemplateAreas'
	});
	const gridArea = style$1({
	  prop: 'gridArea'
	});
	compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);

	function paletteTransform(value, userValue) {
	  if (userValue === 'grey') {
	    return userValue;
	  }
	  return value;
	}
	const color = style$1({
	  prop: 'color',
	  themeKey: 'palette',
	  transform: paletteTransform
	});
	const bgcolor = style$1({
	  prop: 'bgcolor',
	  cssProperty: 'backgroundColor',
	  themeKey: 'palette',
	  transform: paletteTransform
	});
	const backgroundColor = style$1({
	  prop: 'backgroundColor',
	  themeKey: 'palette',
	  transform: paletteTransform
	});
	compose(color, bgcolor, backgroundColor);

	function sizingTransform(value) {
	  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
	}
	const width = style$1({
	  prop: 'width',
	  transform: sizingTransform
	});
	const maxWidth = props => {
	  if (props.maxWidth !== undefined && props.maxWidth !== null) {
	    const styleFromPropValue = propValue => {
	      var _props$theme, _props$theme2;
	      const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || values[propValue];
	      if (!breakpoint) {
	        return {
	          maxWidth: sizingTransform(propValue)
	        };
	      }
	      if (((_props$theme2 = props.theme) == null || (_props$theme2 = _props$theme2.breakpoints) == null ? void 0 : _props$theme2.unit) !== 'px') {
	        return {
	          maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`
	        };
	      }
	      return {
	        maxWidth: breakpoint
	      };
	    };
	    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);
	  }
	  return null;
	};
	maxWidth.filterProps = ['maxWidth'];
	const minWidth = style$1({
	  prop: 'minWidth',
	  transform: sizingTransform
	});
	const height = style$1({
	  prop: 'height',
	  transform: sizingTransform
	});
	const maxHeight = style$1({
	  prop: 'maxHeight',
	  transform: sizingTransform
	});
	const minHeight = style$1({
	  prop: 'minHeight',
	  transform: sizingTransform
	});
	style$1({
	  prop: 'size',
	  cssProperty: 'width',
	  transform: sizingTransform
	});
	style$1({
	  prop: 'size',
	  cssProperty: 'height',
	  transform: sizingTransform
	});
	const boxSizing = style$1({
	  prop: 'boxSizing'
	});
	compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);

	const defaultSxConfig = {
	  // borders
	  border: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderTop: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderRight: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderBottom: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderLeft: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  borderColor: {
	    themeKey: 'palette'
	  },
	  borderTopColor: {
	    themeKey: 'palette'
	  },
	  borderRightColor: {
	    themeKey: 'palette'
	  },
	  borderBottomColor: {
	    themeKey: 'palette'
	  },
	  borderLeftColor: {
	    themeKey: 'palette'
	  },
	  outline: {
	    themeKey: 'borders',
	    transform: borderTransform
	  },
	  outlineColor: {
	    themeKey: 'palette'
	  },
	  borderRadius: {
	    themeKey: 'shape.borderRadius',
	    style: borderRadius
	  },
	  // palette
	  color: {
	    themeKey: 'palette',
	    transform: paletteTransform
	  },
	  bgcolor: {
	    themeKey: 'palette',
	    cssProperty: 'backgroundColor',
	    transform: paletteTransform
	  },
	  backgroundColor: {
	    themeKey: 'palette',
	    transform: paletteTransform
	  },
	  // spacing
	  p: {
	    style: padding
	  },
	  pt: {
	    style: padding
	  },
	  pr: {
	    style: padding
	  },
	  pb: {
	    style: padding
	  },
	  pl: {
	    style: padding
	  },
	  px: {
	    style: padding
	  },
	  py: {
	    style: padding
	  },
	  padding: {
	    style: padding
	  },
	  paddingTop: {
	    style: padding
	  },
	  paddingRight: {
	    style: padding
	  },
	  paddingBottom: {
	    style: padding
	  },
	  paddingLeft: {
	    style: padding
	  },
	  paddingX: {
	    style: padding
	  },
	  paddingY: {
	    style: padding
	  },
	  paddingInline: {
	    style: padding
	  },
	  paddingInlineStart: {
	    style: padding
	  },
	  paddingInlineEnd: {
	    style: padding
	  },
	  paddingBlock: {
	    style: padding
	  },
	  paddingBlockStart: {
	    style: padding
	  },
	  paddingBlockEnd: {
	    style: padding
	  },
	  m: {
	    style: margin
	  },
	  mt: {
	    style: margin
	  },
	  mr: {
	    style: margin
	  },
	  mb: {
	    style: margin
	  },
	  ml: {
	    style: margin
	  },
	  mx: {
	    style: margin
	  },
	  my: {
	    style: margin
	  },
	  margin: {
	    style: margin
	  },
	  marginTop: {
	    style: margin
	  },
	  marginRight: {
	    style: margin
	  },
	  marginBottom: {
	    style: margin
	  },
	  marginLeft: {
	    style: margin
	  },
	  marginX: {
	    style: margin
	  },
	  marginY: {
	    style: margin
	  },
	  marginInline: {
	    style: margin
	  },
	  marginInlineStart: {
	    style: margin
	  },
	  marginInlineEnd: {
	    style: margin
	  },
	  marginBlock: {
	    style: margin
	  },
	  marginBlockStart: {
	    style: margin
	  },
	  marginBlockEnd: {
	    style: margin
	  },
	  // display
	  displayPrint: {
	    cssProperty: false,
	    transform: value => ({
	      '@media print': {
	        display: value
	      }
	    })
	  },
	  display: {},
	  overflow: {},
	  textOverflow: {},
	  visibility: {},
	  whiteSpace: {},
	  // flexbox
	  flexBasis: {},
	  flexDirection: {},
	  flexWrap: {},
	  justifyContent: {},
	  alignItems: {},
	  alignContent: {},
	  order: {},
	  flex: {},
	  flexGrow: {},
	  flexShrink: {},
	  alignSelf: {},
	  justifyItems: {},
	  justifySelf: {},
	  // grid
	  gap: {
	    style: gap
	  },
	  rowGap: {
	    style: rowGap
	  },
	  columnGap: {
	    style: columnGap
	  },
	  gridColumn: {},
	  gridRow: {},
	  gridAutoFlow: {},
	  gridAutoColumns: {},
	  gridAutoRows: {},
	  gridTemplateColumns: {},
	  gridTemplateRows: {},
	  gridTemplateAreas: {},
	  gridArea: {},
	  // positions
	  position: {},
	  zIndex: {
	    themeKey: 'zIndex'
	  },
	  top: {},
	  right: {},
	  bottom: {},
	  left: {},
	  // shadows
	  boxShadow: {
	    themeKey: 'shadows'
	  },
	  // sizing
	  width: {
	    transform: sizingTransform
	  },
	  maxWidth: {
	    style: maxWidth
	  },
	  minWidth: {
	    transform: sizingTransform
	  },
	  height: {
	    transform: sizingTransform
	  },
	  maxHeight: {
	    transform: sizingTransform
	  },
	  minHeight: {
	    transform: sizingTransform
	  },
	  boxSizing: {},
	  // typography
	  fontFamily: {
	    themeKey: 'typography'
	  },
	  fontSize: {
	    themeKey: 'typography'
	  },
	  fontStyle: {
	    themeKey: 'typography'
	  },
	  fontWeight: {
	    themeKey: 'typography'
	  },
	  letterSpacing: {},
	  textTransform: {},
	  lineHeight: {},
	  textAlign: {},
	  typography: {
	    cssProperty: false,
	    themeKey: 'typography'
	  }
	};
	var defaultSxConfig$1 = defaultSxConfig;

	function objectsHaveSameKeys(...objects) {
	  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
	  const union = new Set(allKeys);
	  return objects.every(object => union.size === Object.keys(object).length);
	}
	function callIfFn(maybeFn, arg) {
	  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;
	}

	// eslint-disable-next-line @typescript-eslint/naming-convention
	function unstable_createStyleFunctionSx() {
	  function getThemeValue(prop, val, theme, config) {
	    const props = {
	      [prop]: val,
	      theme
	    };
	    const options = config[prop];
	    if (!options) {
	      return {
	        [prop]: val
	      };
	    }
	    const {
	      cssProperty = prop,
	      themeKey,
	      transform,
	      style
	    } = options;
	    if (val == null) {
	      return null;
	    }

	    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123
	    if (themeKey === 'typography' && val === 'inherit') {
	      return {
	        [prop]: val
	      };
	    }
	    const themeMapping = getPath(theme, themeKey) || {};
	    if (style) {
	      return style(props);
	    }
	    const styleFromPropValue = propValueFinal => {
	      let value = getStyleValue(themeMapping, transform, propValueFinal);
	      if (propValueFinal === value && typeof propValueFinal === 'string') {
	        // Haven't found value
	        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize$1(propValueFinal)}`, propValueFinal);
	      }
	      if (cssProperty === false) {
	        return value;
	      }
	      return {
	        [cssProperty]: value
	      };
	    };
	    return handleBreakpoints(props, val, styleFromPropValue);
	  }
	  function styleFunctionSx(props) {
	    var _theme$unstable_sxCon;
	    const {
	      sx,
	      theme = {}
	    } = props || {};
	    if (!sx) {
	      return null; // Emotion & styled-components will neglect null
	    }
	    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig$1;

	    /*
	     * Receive `sxInput` as object or callback
	     * and then recursively check keys & values to create media query object styles.
	     * (the result will be used in `styled`)
	     */
	    function traverse(sxInput) {
	      let sxObject = sxInput;
	      if (typeof sxInput === 'function') {
	        sxObject = sxInput(theme);
	      } else if (typeof sxInput !== 'object') {
	        // value
	        return sxInput;
	      }
	      if (!sxObject) {
	        return null;
	      }
	      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);
	      const breakpointsKeys = Object.keys(emptyBreakpoints);
	      let css = emptyBreakpoints;
	      Object.keys(sxObject).forEach(styleKey => {
	        const value = callIfFn(sxObject[styleKey], theme);
	        if (value !== null && value !== undefined) {
	          if (typeof value === 'object') {
	            if (config[styleKey]) {
	              css = merge(css, getThemeValue(styleKey, value, theme, config));
	            } else {
	              const breakpointsValues = handleBreakpoints({
	                theme
	              }, value, x => ({
	                [styleKey]: x
	              }));
	              if (objectsHaveSameKeys(breakpointsValues, value)) {
	                css[styleKey] = styleFunctionSx({
	                  sx: value,
	                  theme
	                });
	              } else {
	                css = merge(css, breakpointsValues);
	              }
	            }
	          } else {
	            css = merge(css, getThemeValue(styleKey, value, theme, config));
	          }
	        }
	      });
	      return removeUnusedBreakpoints(breakpointsKeys, css);
	    }
	    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
	  }
	  return styleFunctionSx;
	}
	const styleFunctionSx$1 = unstable_createStyleFunctionSx();
	styleFunctionSx$1.filterProps = ['sx'];
	var styleFunctionSx$2 = styleFunctionSx$1;

	/**
	 * A universal utility to style components with multiple color modes. Always use it from the theme object.
	 * It works with:
	 *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)
	 *  - [CSS theme variables](https://mui.com/material-ui/experimental-api/css-theme-variables/overview/)
	 *  - Zero-runtime engine
	 *
	 * Tips: Use an array over object spread and place `theme.applyStyles()` last.
	 *
	 * ✅ [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]
	 *
	 * 🚫 { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}
	 *
	 * @example
	 * 1. using with `styled`:
	 * ```jsx
	 *   const Component = styled('div')(({ theme }) => [
	 *     { background: '#e5e5e5' },
	 *     theme.applyStyles('dark', {
	 *       background: '#1c1c1c',
	 *       color: '#fff',
	 *     }),
	 *   ]);
	 * ```
	 *
	 * @example
	 * 2. using with `sx` prop:
	 * ```jsx
	 *   <Box sx={theme => [
	 *     { background: '#e5e5e5' },
	 *     theme.applyStyles('dark', {
	 *        background: '#1c1c1c',
	 *        color: '#fff',
	 *      }),
	 *     ]}
	 *   />
	 * ```
	 *
	 * @example
	 * 3. theming a component:
	 * ```jsx
	 *   extendTheme({
	 *     components: {
	 *       MuiButton: {
	 *         styleOverrides: {
	 *           root: ({ theme }) => [
	 *             { background: '#e5e5e5' },
	 *             theme.applyStyles('dark', {
	 *               background: '#1c1c1c',
	 *               color: '#fff',
	 *             }),
	 *           ],
	 *         },
	 *       }
	 *     }
	 *   })
	 *```
	 */
	function applyStyles(key, styles) {
	  // @ts-expect-error this is 'any' type
	  const theme = this;
	  if (theme.vars && typeof theme.getColorSchemeSelector === 'function') {
	    // If CssVarsProvider is used as a provider,
	    // returns '* :where([data-mui-color-scheme="light|dark"]) &'
	    const selector = theme.getColorSchemeSelector(key).replace(/(\[[^\]]+\])/, '*:where($1)');
	    return {
	      [selector]: styles
	    };
	  }
	  if (theme.palette.mode === key) {
	    return styles;
	  }
	  return {};
	}

	const _excluded$8 = ["breakpoints", "palette", "spacing", "shape"];
	function createTheme$2(options = {}, ...args) {
	  const {
	      breakpoints: breakpointsInput = {},
	      palette: paletteInput = {},
	      spacing: spacingInput,
	      shape: shapeInput = {}
	    } = options,
	    other = _objectWithoutPropertiesLoose$1(options, _excluded$8);
	  const breakpoints = createBreakpoints(breakpointsInput);
	  const spacing = createSpacing(spacingInput);
	  let muiTheme = deepmerge$1({
	    breakpoints,
	    direction: 'ltr',
	    components: {},
	    // Inject component definitions.
	    palette: _extends$2({
	      mode: 'light'
	    }, paletteInput),
	    spacing,
	    shape: _extends$2({}, shape$1, shapeInput)
	  }, other);
	  muiTheme.applyStyles = applyStyles;
	  muiTheme = args.reduce((acc, argument) => deepmerge$1(acc, argument), muiTheme);
	  muiTheme.unstable_sxConfig = _extends$2({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
	  muiTheme.unstable_sx = function sx(props) {
	    return styleFunctionSx$2({
	      sx: props,
	      theme: this
	    });
	  };
	  return muiTheme;
	}

	var createTheme$1 = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': createTheme$2,
		private_createBreakpoints: createBreakpoints,
		unstable_applyStyles: applyStyles
	});

	function isObjectEmpty(obj) {
	  return Object.keys(obj).length === 0;
	}
	function useTheme$1(defaultTheme = null) {
	  const contextTheme = reactExports.useContext(ThemeContext);
	  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;
	}

	const systemDefaultTheme$1 = createTheme$2();
	function useTheme(defaultTheme = systemDefaultTheme$1) {
	  return useTheme$1(defaultTheme);
	}

	const _excluded$7 = ["sx"];
	const splitProps = props => {
	  var _props$theme$unstable, _props$theme;
	  const result = {
	    systemProps: {},
	    otherProps: {}
	  };
	  const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig$1;
	  Object.keys(props).forEach(prop => {
	    if (config[prop]) {
	      result.systemProps[prop] = props[prop];
	    } else {
	      result.otherProps[prop] = props[prop];
	    }
	  });
	  return result;
	};
	function extendSxProp(props) {
	  const {
	      sx: inSx
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded$7);
	  const {
	    systemProps,
	    otherProps
	  } = splitProps(other);
	  let finalSx;
	  if (Array.isArray(inSx)) {
	    finalSx = [systemProps, ...inSx];
	  } else if (typeof inSx === 'function') {
	    finalSx = (...args) => {
	      const result = inSx(...args);
	      if (!isPlainObject(result)) {
	        return systemProps;
	      }
	      return _extends$2({}, systemProps, result);
	    };
	  } else {
	    finalSx = _extends$2({}, systemProps, inSx);
	  }
	  return _extends$2({}, otherProps, {
	    sx: finalSx
	  });
	}

	var styleFunctionSx = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': styleFunctionSx$2,
		unstable_createStyleFunctionSx: unstable_createStyleFunctionSx,
		extendSxProp: extendSxProp,
		unstable_defaultSxConfig: defaultSxConfig$1
	});

	const defaultGenerator = componentName => componentName;
	const createClassNameGenerator = () => {
	  let generate = defaultGenerator;
	  return {
	    configure(generator) {
	      generate = generator;
	    },
	    generate(componentName) {
	      return generate(componentName);
	    },
	    reset() {
	      generate = defaultGenerator;
	    }
	  };
	};
	const ClassNameGenerator = createClassNameGenerator();
	var ClassNameGenerator$1 = ClassNameGenerator;

	function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}

	const _excluded$6 = ["className", "component"];
	function createBox(options = {}) {
	  const {
	    themeId,
	    defaultTheme,
	    defaultClassName = 'MuiBox-root',
	    generateClassName
	  } = options;
	  const BoxRoot = styled$2('div', {
	    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'
	  })(styleFunctionSx$2);
	  const Box = /*#__PURE__*/reactExports.forwardRef(function Box(inProps, ref) {
	    const theme = useTheme(defaultTheme);
	    const _extendSxProp = extendSxProp(inProps),
	      {
	        className,
	        component = 'div'
	      } = _extendSxProp,
	      other = _objectWithoutPropertiesLoose$1(_extendSxProp, _excluded$6);
	    return /*#__PURE__*/jsxRuntimeExports.jsx(BoxRoot, _extends$2({
	      as: component,
	      ref: ref,
	      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
	      theme: themeId ? theme[themeId] || theme : theme
	    }, other));
	  });
	  return Box;
	}

	const globalStateClasses = {
	  active: 'active',
	  checked: 'checked',
	  completed: 'completed',
	  disabled: 'disabled',
	  error: 'error',
	  expanded: 'expanded',
	  focused: 'focused',
	  focusVisible: 'focusVisible',
	  open: 'open',
	  readOnly: 'readOnly',
	  required: 'required',
	  selected: 'selected'
	};
	function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {
	  const globalStateClass = globalStateClasses[slot];
	  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator$1.generate(componentName)}-${slot}`;
	}

	function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {
	  const result = {};
	  slots.forEach(slot => {
	    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);
	  });
	  return result;
	}

	var reactIs$1 = {exports: {}};

	var reactIs_development$1 = {};

	/**
	 * @license React
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var hasRequiredReactIs_development;

	function requireReactIs_development () {
		if (hasRequiredReactIs_development) return reactIs_development$1;
		hasRequiredReactIs_development = 1;

		{
		  (function () {

		    // ATTENTION
		    // When adding new symbols to this file,
		    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
		    // The Symbol used to tag the ReactElement-like types.
		    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
		    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
		    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
		    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
		    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
		    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
		    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
		    var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
		    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
		    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
		    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
		    var REACT_MEMO_TYPE = Symbol.for('react.memo');
		    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
		    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');

		    // -----------------------------------------------------------------------------

		    var enableScopeAPI = false; // Experimental Create Event Handle API.
		    var enableCacheElement = false;
		    var enableTransitionTracing = false; // No known bugs, but needs performance testing

		    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
		    // stuff. Intended to enable React core members to more easily debug scheduling
		    // issues in DEV builds.

		    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

		    var REACT_MODULE_REFERENCE;
		    {
		      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
		    }
		    function isValidElementType(type) {
		      if (typeof type === 'string' || typeof type === 'function') {
		        return true;
		      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).

		      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
		        return true;
		      }
		      if (typeof type === 'object' && type !== null) {
		        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||
		        // This needs to include all possible module reference object
		        // types supported by any Flight configuration anywhere since
		        // we don't know which Flight build this will end up being used
		        // with.
		        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
		          return true;
		        }
		      }
		      return false;
		    }
		    function typeOf(object) {
		      if (typeof object === 'object' && object !== null) {
		        var $$typeof = object.$$typeof;
		        switch ($$typeof) {
		          case REACT_ELEMENT_TYPE:
		            var type = object.type;
		            switch (type) {
		              case REACT_FRAGMENT_TYPE:
		              case REACT_PROFILER_TYPE:
		              case REACT_STRICT_MODE_TYPE:
		              case REACT_SUSPENSE_TYPE:
		              case REACT_SUSPENSE_LIST_TYPE:
		                return type;
		              default:
		                var $$typeofType = type && type.$$typeof;
		                switch ($$typeofType) {
		                  case REACT_SERVER_CONTEXT_TYPE:
		                  case REACT_CONTEXT_TYPE:
		                  case REACT_FORWARD_REF_TYPE:
		                  case REACT_LAZY_TYPE:
		                  case REACT_MEMO_TYPE:
		                  case REACT_PROVIDER_TYPE:
		                    return $$typeofType;
		                  default:
		                    return $$typeof;
		                }
		            }
		          case REACT_PORTAL_TYPE:
		            return $$typeof;
		        }
		      }
		      return undefined;
		    }
		    var ContextConsumer = REACT_CONTEXT_TYPE;
		    var ContextProvider = REACT_PROVIDER_TYPE;
		    var Element = REACT_ELEMENT_TYPE;
		    var ForwardRef = REACT_FORWARD_REF_TYPE;
		    var Fragment = REACT_FRAGMENT_TYPE;
		    var Lazy = REACT_LAZY_TYPE;
		    var Memo = REACT_MEMO_TYPE;
		    var Portal = REACT_PORTAL_TYPE;
		    var Profiler = REACT_PROFILER_TYPE;
		    var StrictMode = REACT_STRICT_MODE_TYPE;
		    var Suspense = REACT_SUSPENSE_TYPE;
		    var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
		    var hasWarnedAboutDeprecatedIsAsyncMode = false;
		    var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated

		    function isAsyncMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
		          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
		        }
		      }
		      return false;
		    }
		    function isConcurrentMode(object) {
		      {
		        if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
		          hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint

		          console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');
		        }
		      }
		      return false;
		    }
		    function isContextConsumer(object) {
		      return typeOf(object) === REACT_CONTEXT_TYPE;
		    }
		    function isContextProvider(object) {
		      return typeOf(object) === REACT_PROVIDER_TYPE;
		    }
		    function isElement(object) {
		      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		    }
		    function isForwardRef(object) {
		      return typeOf(object) === REACT_FORWARD_REF_TYPE;
		    }
		    function isFragment(object) {
		      return typeOf(object) === REACT_FRAGMENT_TYPE;
		    }
		    function isLazy(object) {
		      return typeOf(object) === REACT_LAZY_TYPE;
		    }
		    function isMemo(object) {
		      return typeOf(object) === REACT_MEMO_TYPE;
		    }
		    function isPortal(object) {
		      return typeOf(object) === REACT_PORTAL_TYPE;
		    }
		    function isProfiler(object) {
		      return typeOf(object) === REACT_PROFILER_TYPE;
		    }
		    function isStrictMode(object) {
		      return typeOf(object) === REACT_STRICT_MODE_TYPE;
		    }
		    function isSuspense(object) {
		      return typeOf(object) === REACT_SUSPENSE_TYPE;
		    }
		    function isSuspenseList(object) {
		      return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
		    }
		    reactIs_development$1.ContextConsumer = ContextConsumer;
		    reactIs_development$1.ContextProvider = ContextProvider;
		    reactIs_development$1.Element = Element;
		    reactIs_development$1.ForwardRef = ForwardRef;
		    reactIs_development$1.Fragment = Fragment;
		    reactIs_development$1.Lazy = Lazy;
		    reactIs_development$1.Memo = Memo;
		    reactIs_development$1.Portal = Portal;
		    reactIs_development$1.Profiler = Profiler;
		    reactIs_development$1.StrictMode = StrictMode;
		    reactIs_development$1.Suspense = Suspense;
		    reactIs_development$1.SuspenseList = SuspenseList;
		    reactIs_development$1.isAsyncMode = isAsyncMode;
		    reactIs_development$1.isConcurrentMode = isConcurrentMode;
		    reactIs_development$1.isContextConsumer = isContextConsumer;
		    reactIs_development$1.isContextProvider = isContextProvider;
		    reactIs_development$1.isElement = isElement;
		    reactIs_development$1.isForwardRef = isForwardRef;
		    reactIs_development$1.isFragment = isFragment;
		    reactIs_development$1.isLazy = isLazy;
		    reactIs_development$1.isMemo = isMemo;
		    reactIs_development$1.isPortal = isPortal;
		    reactIs_development$1.isProfiler = isProfiler;
		    reactIs_development$1.isStrictMode = isStrictMode;
		    reactIs_development$1.isSuspense = isSuspense;
		    reactIs_development$1.isSuspenseList = isSuspenseList;
		    reactIs_development$1.isValidElementType = isValidElementType;
		    reactIs_development$1.typeOf = typeOf;
		  })();
		}
		return reactIs_development$1;
	}

	{
	  reactIs$1.exports = requireReactIs_development();
	}

	var reactIsExports = reactIs$1.exports;

	// Simplified polyfill for IE11 support
	// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3
	const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
	function getFunctionName(fn) {
	  const match = `${fn}`.match(fnNameMatchRegex);
	  const name = match && match[1];
	  return name || '';
	}
	function getFunctionComponentName(Component, fallback = '') {
	  return Component.displayName || Component.name || getFunctionName(Component) || fallback;
	}
	function getWrappedName(outerType, innerType, wrapperName) {
	  const functionName = getFunctionComponentName(innerType);
	  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);
	}

	/**
	 * cherry-pick from
	 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
	 * originally forked from recompose/getDisplayName with added IE11 support
	 */
	function getDisplayName$1(Component) {
	  if (Component == null) {
	    return undefined;
	  }
	  if (typeof Component === 'string') {
	    return Component;
	  }
	  if (typeof Component === 'function') {
	    return getFunctionComponentName(Component, 'Component');
	  }

	  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`
	  if (typeof Component === 'object') {
	    switch (Component.$$typeof) {
	      case reactIsExports.ForwardRef:
	        return getWrappedName(Component, Component.render, 'ForwardRef');
	      case reactIsExports.Memo:
	        return getWrappedName(Component, Component.type, 'memo');
	      default:
	        return undefined;
	    }
	  }
	  return undefined;
	}

	var getDisplayName = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': getDisplayName$1,
		getFunctionName: getFunctionName
	});

	/**
	 * Add keys, values of `defaultProps` that does not exist in `props`
	 * @param {object} defaultProps
	 * @param {object} props
	 * @returns {object} resolved props
	 */
	function resolveProps(defaultProps, props) {
	  const output = _extends$2({}, props);
	  Object.keys(defaultProps).forEach(propName => {
	    if (propName.toString().match(/^(components|slots)$/)) {
	      output[propName] = _extends$2({}, defaultProps[propName], output[propName]);
	    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {
	      const defaultSlotProps = defaultProps[propName] || {};
	      const slotProps = props[propName];
	      output[propName] = {};
	      if (!slotProps || !Object.keys(slotProps)) {
	        // Reduce the iteration if the slot props is empty
	        output[propName] = defaultSlotProps;
	      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {
	        // Reduce the iteration if the default slot props is empty
	        output[propName] = slotProps;
	      } else {
	        output[propName] = _extends$2({}, slotProps);
	        Object.keys(defaultSlotProps).forEach(slotPropName => {
	          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
	        });
	      }
	    } else if (output[propName] === undefined) {
	      output[propName] = defaultProps[propName];
	    }
	  });
	  return output;
	}

	function getThemeProps(params) {
	  const {
	    theme,
	    name,
	    props
	  } = params;
	  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
	    return props;
	  }
	  return resolveProps(theme.components[name].defaultProps, props);
	}

	function useThemeProps$1({
	  props,
	  name,
	  defaultTheme,
	  themeId
	}) {
	  let theme = useTheme(defaultTheme);
	  if (themeId) {
	    theme = theme[themeId] || theme;
	  }
	  const mergedProps = getThemeProps({
	    theme,
	    name,
	    props
	  });
	  return mergedProps;
	}

	function clamp$1(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {
	  return Math.max(min, Math.min(val, max));
	}

	var clamp = /*#__PURE__*/Object.freeze({
		__proto__: null,
		'default': clamp$1
	});

	function composeClasses(slots, getUtilityClass, classes = undefined) {
	  const output = {};
	  Object.keys(slots).forEach(
	  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
	  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
	  slot => {
	    output[slot] = slots[slot].reduce((acc, key) => {
	      if (key) {
	        const utilityClass = getUtilityClass(key);
	        if (utilityClass !== '') {
	          acc.push(utilityClass);
	        }
	        if (classes && classes[key]) {
	          acc.push(classes[key]);
	        }
	      }
	      return acc;
	    }, []).join(' ');
	  });
	  return output;
	}

	function createMixins(breakpoints, mixins) {
	  return _extends$2({
	    toolbar: {
	      minHeight: 56,
	      [breakpoints.up('xs')]: {
	        '@media (orientation: landscape)': {
	          minHeight: 48
	        }
	      },
	      [breakpoints.up('sm')]: {
	        minHeight: 64
	      }
	    }
	  }, mixins);
	}

	var colorManipulator = {};

	var interopRequireDefault = {exports: {}};

	interopRequireDefault.exports;

	(function (module) {
		function _interopRequireDefault(obj) {
		  return obj && obj.__esModule ? obj : {
		    "default": obj
		  };
		}
		module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports; 
	} (interopRequireDefault));

	var interopRequireDefaultExports = interopRequireDefault.exports;

	var require$$1$1 = /*@__PURE__*/getAugmentedNamespace(formatMuiErrorMessage);

	var require$$2 = /*@__PURE__*/getAugmentedNamespace(clamp);

	var _interopRequireDefault$1 = interopRequireDefaultExports;
	Object.defineProperty(colorManipulator, "__esModule", {
	  value: true
	});
	colorManipulator.alpha = alpha;
	colorManipulator.blend = blend;
	colorManipulator.colorChannel = void 0;
	var darken_1 = colorManipulator.darken = darken;
	colorManipulator.decomposeColor = decomposeColor;
	colorManipulator.emphasize = emphasize;
	var getContrastRatio_1 = colorManipulator.getContrastRatio = getContrastRatio;
	colorManipulator.getLuminance = getLuminance;
	colorManipulator.hexToRgb = hexToRgb;
	colorManipulator.hslToRgb = hslToRgb;
	var lighten_1 = colorManipulator.lighten = lighten;
	colorManipulator.private_safeAlpha = private_safeAlpha;
	colorManipulator.private_safeColorChannel = void 0;
	colorManipulator.private_safeDarken = private_safeDarken;
	colorManipulator.private_safeEmphasize = private_safeEmphasize;
	colorManipulator.private_safeLighten = private_safeLighten;
	colorManipulator.recomposeColor = recomposeColor;
	colorManipulator.rgbToHex = rgbToHex;
	_interopRequireDefault$1(require$$1$1);
	var _clamp = _interopRequireDefault$1(require$$2);
	/* eslint-disable @typescript-eslint/naming-convention */

	/**
	 * Returns a number whose value is limited to the given range.
	 * @param {number} value The value to be clamped
	 * @param {number} min The lower boundary of the output range
	 * @param {number} max The upper boundary of the output range
	 * @returns {number} A number in the range [min, max]
	 */
	function clampWrapper(value, min = 0, max = 1) {
	  {
	    if (value < min || value > max) {
	      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);
	    }
	  }
	  return (0, _clamp.default)(value, min, max);
	}

	/**
	 * Converts a color from CSS hex format to CSS rgb format.
	 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
	 * @returns {string} A CSS rgb color string
	 */
	function hexToRgb(color) {
	  color = color.slice(1);
	  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');
	  let colors = color.match(re);
	  if (colors && colors[0].length === 1) {
	    colors = colors.map(n => n + n);
	  }
	  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {
    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;
  }).join(', ')})` : '';
	}
	function intToHex(int) {
	  const hex = int.toString(16);
	  return hex.length === 1 ? `0${hex}` : hex;
	}

	/**
	 * Returns an object with the type and values of a color.
	 *
	 * Note: Does not support rgb % values.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @returns {object} - A MUI color object: {type: string, values: number[]}
	 */
	function decomposeColor(color) {
	  // Idempotent
	  if (color.type) {
	    return color;
	  }
	  if (color.charAt(0) === '#') {
	    return decomposeColor(hexToRgb(color));
	  }
	  const marker = color.indexOf('(');
	  const type = color.substring(0, marker);
	  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {
	    throw new Error(`MUI: Unsupported \`${color}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` );
	  }
	  let values = color.substring(marker + 1, color.length - 1);
	  let colorSpace;
	  if (type === 'color') {
	    values = values.split(' ');
	    colorSpace = values.shift();
	    if (values.length === 4 && values[3].charAt(0) === '/') {
	      values[3] = values[3].slice(1);
	    }
	    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {
	      throw new Error(`MUI: unsupported \`${colorSpace}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` );
	    }
	  } else {
	    values = values.split(',');
	  }
	  values = values.map(value => parseFloat(value));
	  return {
	    type,
	    values,
	    colorSpace
	  };
	}

	/**
	 * Returns a channel created from the input color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @returns {string} - The channel for the color, that can be used in rgba or hsla colors
	 */
	const colorChannel = color => {
	  const decomposedColor = decomposeColor(color);
	  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');
	};
	colorManipulator.colorChannel = colorChannel;
	const private_safeColorChannel = (color, warning) => {
	  try {
	    return colorChannel(color);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	};

	/**
	 * Converts a color object with type and values to a string.
	 * @param {object} color - Decomposed color
	 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'
	 * @param {array} color.values - [n,n,n] or [n,n,n,n]
	 * @returns {string} A CSS color string
	 */
	colorManipulator.private_safeColorChannel = private_safeColorChannel;
	function recomposeColor(color) {
	  const {
	    type,
	    colorSpace
	  } = color;
	  let {
	    values
	  } = color;
	  if (type.indexOf('rgb') !== -1) {
	    // Only convert the first 3 values to int (i.e. not alpha)
	    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);
	  } else if (type.indexOf('hsl') !== -1) {
	    values[1] = `${values[1]}%`;
	    values[2] = `${values[2]}%`;
	  }
	  if (type.indexOf('color') !== -1) {
	    values = `${colorSpace} ${values.join(' ')}`;
	  } else {
	    values = `${values.join(', ')}`;
	  }
	  return `${type}(${values})`;
	}

	/**
	 * Converts a color from CSS rgb format to CSS hex format.
	 * @param {string} color - RGB color, i.e. rgb(n, n, n)
	 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
	 */
	function rgbToHex(color) {
	  // Idempotent
	  if (color.indexOf('#') === 0) {
	    return color;
	  }
	  const {
	    values
	  } = decomposeColor(color);
	  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;
	}

	/**
	 * Converts a color from hsl format to rgb format.
	 * @param {string} color - HSL color values
	 * @returns {string} rgb color values
	 */
	function hslToRgb(color) {
	  color = decomposeColor(color);
	  const {
	    values
	  } = color;
	  const h = values[0];
	  const s = values[1] / 100;
	  const l = values[2] / 100;
	  const a = s * Math.min(l, 1 - l);
	  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
	  let type = 'rgb';
	  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];
	  if (color.type === 'hsla') {
	    type += 'a';
	    rgb.push(values[3]);
	  }
	  return recomposeColor({
	    type,
	    values: rgb
	  });
	}
	/**
	 * The relative brightness of any point in a color space,
	 * normalized to 0 for darkest black and 1 for lightest white.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @returns {number} The relative brightness of the color in the range 0 - 1
	 */
	function getLuminance(color) {
	  color = decomposeColor(color);
	  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;
	  rgb = rgb.map(val => {
	    if (color.type !== 'color') {
	      val /= 255; // normalized
	    }
	    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
	  });

	  // Truncate at 3 digits
	  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
	}

	/**
	 * Calculates the contrast ratio between two colors.
	 *
	 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
	 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} A contrast ratio value in the range 0 - 21.
	 */
	function getContrastRatio(foreground, background) {
	  const lumA = getLuminance(foreground);
	  const lumB = getLuminance(background);
	  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
	}

	/**
	 * Sets the absolute transparency of a color.
	 * Any existing alpha values are overwritten.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} value - value to set the alpha channel to in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function alpha(color, value) {
	  color = decomposeColor(color);
	  value = clampWrapper(value);
	  if (color.type === 'rgb' || color.type === 'hsl') {
	    color.type += 'a';
	  }
	  if (color.type === 'color') {
	    color.values[3] = `/${value}`;
	  } else {
	    color.values[3] = value;
	  }
	  return recomposeColor(color);
	}
	function private_safeAlpha(color, value, warning) {
	  try {
	    return alpha(color, value);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Darkens a color.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function darken(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clampWrapper(coefficient);
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] *= 1 - coefficient;
	  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {
	    for (let i = 0; i < 3; i += 1) {
	      color.values[i] *= 1 - coefficient;
	    }
	  }
	  return recomposeColor(color);
	}
	function private_safeDarken(color, coefficient, warning) {
	  try {
	    return darken(color, coefficient);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Lightens a color.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function lighten(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clampWrapper(coefficient);
	  if (color.type.indexOf('hsl') !== -1) {
	    color.values[2] += (100 - color.values[2]) * coefficient;
	  } else if (color.type.indexOf('rgb') !== -1) {
	    for (let i = 0; i < 3; i += 1) {
	      color.values[i] += (255 - color.values[i]) * coefficient;
	    }
	  } else if (color.type.indexOf('color') !== -1) {
	    for (let i = 0; i < 3; i += 1) {
	      color.values[i] += (1 - color.values[i]) * coefficient;
	    }
	  }
	  return recomposeColor(color);
	}
	function private_safeLighten(color, coefficient, warning) {
	  try {
	    return lighten(color, coefficient);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Darken or lighten a color, depending on its luminance.
	 * Light colors are darkened, dark colors are lightened.
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()
	 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function emphasize(color, coefficient = 0.15) {
	  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
	}
	function private_safeEmphasize(color, coefficient, warning) {
	  try {
	    return private_safeEmphasize(color, coefficient);
	  } catch (error) {
	    if (warning && "development" !== 'production') {
	      console.warn(warning);
	    }
	    return color;
	  }
	}

	/**
	 * Blend a transparent overlay color with a background color, resulting in a single
	 * RGB color.
	 * @param {string} background - CSS color
	 * @param {string} overlay - CSS color
	 * @param {number} opacity - Opacity multiplier in the range 0 - 1
	 * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.
	 */
	function blend(background, overlay, opacity, gamma = 1.0) {
	  const blendChannel = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);
	  const backgroundColor = decomposeColor(background);
	  const overlayColor = decomposeColor(overlay);
	  const rgb = [blendChannel(backgroundColor.values[0], overlayColor.values[0]), blendChannel(backgroundColor.values[1], overlayColor.values[1]), blendChannel(backgroundColor.values[2], overlayColor.values[2])];
	  return recomposeColor({
	    type: 'rgb',
	    values: rgb
	  });
	}

	const _excluded$5 = ["mode", "contrastThreshold", "tonalOffset"];
	const light = {
	  // The colors used to style the text.
	  text: {
	    // The most important text.
	    primary: 'rgba(0, 0, 0, 0.87)',
	    // Secondary text.
	    secondary: 'rgba(0, 0, 0, 0.6)',
	    // Disabled text have even lower visual prominence.
	    disabled: 'rgba(0, 0, 0, 0.38)'
	  },
	  // The color used to divide different elements.
	  divider: 'rgba(0, 0, 0, 0.12)',
	  // The background colors used to style the surfaces.
	  // Consistency between these values is important.
	  background: {
	    paper: common$1.white,
	    default: common$1.white
	  },
	  // The colors used to style the action elements.
	  action: {
	    // The color of an active action like an icon button.
	    active: 'rgba(0, 0, 0, 0.54)',
	    // The color of an hovered action.
	    hover: 'rgba(0, 0, 0, 0.04)',
	    hoverOpacity: 0.04,
	    // The color of a selected action.
	    selected: 'rgba(0, 0, 0, 0.08)',
	    selectedOpacity: 0.08,
	    // The color of a disabled action.
	    disabled: 'rgba(0, 0, 0, 0.26)',
	    // The background color of a disabled action.
	    disabledBackground: 'rgba(0, 0, 0, 0.12)',
	    disabledOpacity: 0.38,
	    focus: 'rgba(0, 0, 0, 0.12)',
	    focusOpacity: 0.12,
	    activatedOpacity: 0.12
	  }
	};
	const dark = {
	  text: {
	    primary: common$1.white,
	    secondary: 'rgba(255, 255, 255, 0.7)',
	    disabled: 'rgba(255, 255, 255, 0.5)',
	    icon: 'rgba(255, 255, 255, 0.5)'
	  },
	  divider: 'rgba(255, 255, 255, 0.12)',
	  background: {
	    paper: '#121212',
	    default: '#121212'
	  },
	  action: {
	    active: common$1.white,
	    hover: 'rgba(255, 255, 255, 0.08)',
	    hoverOpacity: 0.08,
	    selected: 'rgba(255, 255, 255, 0.16)',
	    selectedOpacity: 0.16,
	    disabled: 'rgba(255, 255, 255, 0.3)',
	    disabledBackground: 'rgba(255, 255, 255, 0.12)',
	    disabledOpacity: 0.38,
	    focus: 'rgba(255, 255, 255, 0.12)',
	    focusOpacity: 0.12,
	    activatedOpacity: 0.24
	  }
	};
	function addLightOrDark(intent, direction, shade, tonalOffset) {
	  const tonalOffsetLight = tonalOffset.light || tonalOffset;
	  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
	  if (!intent[direction]) {
	    if (intent.hasOwnProperty(shade)) {
	      intent[direction] = intent[shade];
	    } else if (direction === 'light') {
	      intent.light = lighten_1(intent.main, tonalOffsetLight);
	    } else if (direction === 'dark') {
	      intent.dark = darken_1(intent.main, tonalOffsetDark);
	    }
	  }
	}
	function getDefaultPrimary(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: blue$1[200],
	      light: blue$1[50],
	      dark: blue$1[400]
	    };
	  }
	  return {
	    main: blue$1[700],
	    light: blue$1[400],
	    dark: blue$1[800]
	  };
	}
	function getDefaultSecondary(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: purple$1[200],
	      light: purple$1[50],
	      dark: purple$1[400]
	    };
	  }
	  return {
	    main: purple$1[500],
	    light: purple$1[300],
	    dark: purple$1[700]
	  };
	}
	function getDefaultError(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: red$1[500],
	      light: red$1[300],
	      dark: red$1[700]
	    };
	  }
	  return {
	    main: red$1[700],
	    light: red$1[400],
	    dark: red$1[800]
	  };
	}
	function getDefaultInfo(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: lightBlue$1[400],
	      light: lightBlue$1[300],
	      dark: lightBlue$1[700]
	    };
	  }
	  return {
	    main: lightBlue$1[700],
	    light: lightBlue$1[500],
	    dark: lightBlue$1[900]
	  };
	}
	function getDefaultSuccess(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: green$1[400],
	      light: green$1[300],
	      dark: green$1[700]
	    };
	  }
	  return {
	    main: green$1[800],
	    light: green$1[500],
	    dark: green$1[900]
	  };
	}
	function getDefaultWarning(mode = 'light') {
	  if (mode === 'dark') {
	    return {
	      main: orange$1[400],
	      light: orange$1[300],
	      dark: orange$1[700]
	    };
	  }
	  return {
	    main: '#ed6c02',
	    // closest to orange[800] that pass 3:1.
	    light: orange$1[500],
	    dark: orange$1[900]
	  };
	}
	function createPalette(palette) {
	  const {
	      mode = 'light',
	      contrastThreshold = 3,
	      tonalOffset = 0.2
	    } = palette,
	    other = _objectWithoutPropertiesLoose$1(palette, _excluded$5);
	  const primary = palette.primary || getDefaultPrimary(mode);
	  const secondary = palette.secondary || getDefaultSecondary(mode);
	  const error = palette.error || getDefaultError(mode);
	  const info = palette.info || getDefaultInfo(mode);
	  const success = palette.success || getDefaultSuccess(mode);
	  const warning = palette.warning || getDefaultWarning(mode);

	  // Use the same logic as
	  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
	  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
	  function getContrastText(background) {
	    const contrastText = getContrastRatio_1(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
	    {
	      const contrast = getContrastRatio_1(background, contrastText);
	      if (contrast < 3) {
	        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\n'));
	      }
	    }
	    return contrastText;
	  }
	  const augmentColor = ({
	    color,
	    name,
	    mainShade = 500,
	    lightShade = 300,
	    darkShade = 700
	  }) => {
	    color = _extends$2({}, color);
	    if (!color.main && color[mainShade]) {
	      color.main = color[mainShade];
	    }
	    if (!color.hasOwnProperty('main')) {
	      throw new Error(`MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` );
	    }
	    if (typeof color.main !== 'string') {
	      throw new Error(`MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` );
	    }
	    addLightOrDark(color, 'light', lightShade, tonalOffset);
	    addLightOrDark(color, 'dark', darkShade, tonalOffset);
	    if (!color.contrastText) {
	      color.contrastText = getContrastText(color.main);
	    }
	    return color;
	  };
	  const modes = {
	    dark,
	    light
	  };
	  {
	    if (!modes[mode]) {
	      console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
	    }
	  }
	  const paletteOutput = deepmerge$1(_extends$2({
	    // A collection of common colors.
	    common: _extends$2({}, common$1),
	    // prevent mutable object.
	    // The palette mode, can be light or dark.
	    mode,
	    // The colors used to represent primary interface elements for a user.
	    primary: augmentColor({
	      color: primary,
	      name: 'primary'
	    }),
	    // The colors used to represent secondary interface elements for a user.
	    secondary: augmentColor({
	      color: secondary,
	      name: 'secondary',
	      mainShade: 'A400',
	      lightShade: 'A200',
	      darkShade: 'A700'
	    }),
	    // The colors used to represent interface elements that the user should be made aware of.
	    error: augmentColor({
	      color: error,
	      name: 'error'
	    }),
	    // The colors used to represent potentially dangerous actions or important messages.
	    warning: augmentColor({
	      color: warning,
	      name: 'warning'
	    }),
	    // The colors used to present information to the user that is neutral and not necessarily important.
	    info: augmentColor({
	      color: info,
	      name: 'info'
	    }),
	    // The colors used to indicate the successful completion of an action that user triggered.
	    success: augmentColor({
	      color: success,
	      name: 'success'
	    }),
	    // The grey colors.
	    grey: grey$1,
	    // Used by `getContrastText()` to maximize the contrast between
	    // the background and the text.
	    contrastThreshold,
	    // Takes a background color and returns the text color that maximizes the contrast.
	    getContrastText,
	    // Generate a rich color object.
	    augmentColor,
	    // Used by the functions below to shift a color's luminance by approximately
	    // two indexes within its tonal palette.
	    // E.g., shift from Red 500 to Red 300 or Red 700.
	    tonalOffset
	  }, modes[mode]), other);
	  return paletteOutput;
	}

	const _excluded$4 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
	function round(value) {
	  return Math.round(value * 1e5) / 1e5;
	}
	const caseAllCaps = {
	  textTransform: 'uppercase'
	};
	const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';

	/**
	 * @see @link{https://m2.material.io/design/typography/the-type-system.html}
	 * @see @link{https://m2.material.io/design/typography/understanding-typography.html}
	 */
	function createTypography(palette, typography) {
	  const _ref = typeof typography === 'function' ? typography(palette) : typography,
	    {
	      fontFamily = defaultFontFamily,
	      // The default font size of the Material Specification.
	      fontSize = 14,
	      // px
	      fontWeightLight = 300,
	      fontWeightRegular = 400,
	      fontWeightMedium = 500,
	      fontWeightBold = 700,
	      // Tell MUI what's the font-size on the html element.
	      // 16px is the default font-size used by browsers.
	      htmlFontSize = 16,
	      // Apply the CSS properties to all the variants.
	      allVariants,
	      pxToRem: pxToRem2
	    } = _ref,
	    other = _objectWithoutPropertiesLoose$1(_ref, _excluded$4);
	  {
	    if (typeof fontSize !== 'number') {
	      console.error('MUI: `fontSize` is required to be a number.');
	    }
	    if (typeof htmlFontSize !== 'number') {
	      console.error('MUI: `htmlFontSize` is required to be a number.');
	    }
	  }
	  const coef = fontSize / 14;
	  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);
	  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends$2({
	    fontFamily,
	    fontWeight,
	    fontSize: pxToRem(size),
	    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
	    lineHeight
	  }, fontFamily === defaultFontFamily ? {
	    letterSpacing: `${round(letterSpacing / size)}em`
	  } : {}, casing, allVariants);
	  const variants = {
	    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
	    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
	    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
	    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
	    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
	    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
	    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
	    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
	    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
	    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
	    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
	    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
	    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
	    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
	    inherit: {
	      fontFamily: 'inherit',
	      fontWeight: 'inherit',
	      fontSize: 'inherit',
	      lineHeight: 'inherit',
	      letterSpacing: 'inherit'
	    }
	  };
	  return deepmerge$1(_extends$2({
	    htmlFontSize,
	    pxToRem,
	    fontFamily,
	    fontSize,
	    fontWeightLight,
	    fontWeightRegular,
	    fontWeightMedium,
	    fontWeightBold
	  }, variants), other, {
	    clone: false // No need to clone deep
	  });
	}

	const shadowKeyUmbraOpacity = 0.2;
	const shadowKeyPenumbraOpacity = 0.14;
	const shadowAmbientShadowOpacity = 0.12;
	function createShadow(...px) {
	  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');
	}

	// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
	const shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
	var shadows$1 = shadows;

	const _excluded$3 = ["duration", "easing", "delay"];
	// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
	// to learn the context in which each easing should be used.
	const easing = {
	  // This is the most common easing curve.
	  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
	  // Objects enter the screen at full velocity from off-screen and
	  // slowly decelerate to a resting point.
	  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
	  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
	  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
	  // The sharp curve is used by objects that may return to the screen at any time.
	  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
	};

	// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
	// to learn when use what timing
	const duration = {
	  shortest: 150,
	  shorter: 200,
	  short: 250,
	  // most basic recommended timing
	  standard: 300,
	  // this is to be used in complex animations
	  complex: 375,
	  // recommended when something is entering screen
	  enteringScreen: 225,
	  // recommended when something is leaving screen
	  leavingScreen: 195
	};
	function formatMs(milliseconds) {
	  return `${Math.round(milliseconds)}ms`;
	}
	function getAutoHeightDuration(height) {
	  if (!height) {
	    return 0;
	  }
	  const constant = height / 36;

	  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
	  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
	}
	function createTransitions(inputTransitions) {
	  const mergedEasing = _extends$2({}, easing, inputTransitions.easing);
	  const mergedDuration = _extends$2({}, duration, inputTransitions.duration);
	  const create = (props = ['all'], options = {}) => {
	    const {
	        duration: durationOption = mergedDuration.standard,
	        easing: easingOption = mergedEasing.easeInOut,
	        delay = 0
	      } = options,
	      other = _objectWithoutPropertiesLoose$1(options, _excluded$3);
	    {
	      const isString = value => typeof value === 'string';
	      // IE11 support, replace with Number.isNaN
	      // eslint-disable-next-line no-restricted-globals
	      const isNumber = value => !isNaN(parseFloat(value));
	      if (!isString(props) && !Array.isArray(props)) {
	        console.error('MUI: Argument "props" must be a string or Array.');
	      }
	      if (!isNumber(durationOption) && !isString(durationOption)) {
	        console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
	      }
	      if (!isString(easingOption)) {
	        console.error('MUI: Argument "easing" must be a string.');
	      }
	      if (!isNumber(delay) && !isString(delay)) {
	        console.error('MUI: Argument "delay" must be a number or a string.');
	      }
	      if (typeof options !== 'object') {
	        console.error(['MUI: Secong argument of transition.create must be an object.', "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join('\n'));
	      }
	      if (Object.keys(other).length !== 0) {
	        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);
	      }
	    }
	    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');
	  };
	  return _extends$2({
	    getAutoHeightDuration,
	    create
	  }, inputTransitions, {
	    easing: mergedEasing,
	    duration: mergedDuration
	  });
	}

	// We need to centralize the zIndex definitions as they work
	// like global values in the browser.
	const zIndex = {
	  mobileStepper: 1000,
	  fab: 1050,
	  speedDial: 1050,
	  appBar: 1100,
	  drawer: 1200,
	  modal: 1300,
	  snackbar: 1400,
	  tooltip: 1500
	};
	var zIndex$1 = zIndex;

	const _excluded$2 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
	function createTheme(options = {}, ...args) {
	  const {
	      mixins: mixinsInput = {},
	      palette: paletteInput = {},
	      transitions: transitionsInput = {},
	      typography: typographyInput = {}
	    } = options,
	    other = _objectWithoutPropertiesLoose$1(options, _excluded$2);
	  if (options.vars) {
	    throw new Error(`MUI: \`vars\` is a private field used for CSS variables support.
Please use another name.` );
	  }
	  const palette = createPalette(paletteInput);
	  const systemTheme = createTheme$2(options);
	  let muiTheme = deepmerge$1(systemTheme, {
	    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
	    palette,
	    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
	    shadows: shadows$1.slice(),
	    typography: createTypography(palette, typographyInput),
	    transitions: createTransitions(transitionsInput),
	    zIndex: _extends$2({}, zIndex$1)
	  });
	  muiTheme = deepmerge$1(muiTheme, other);
	  muiTheme = args.reduce((acc, argument) => deepmerge$1(acc, argument), muiTheme);
	  {
	    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.
	    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];
	    const traverse = (node, component) => {
	      let key;

	      // eslint-disable-next-line guard-for-in, no-restricted-syntax
	      for (key in node) {
	        const child = node[key];
	        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
	          {
	            const stateClass = generateUtilityClass('', key);
	            console.error([`MUI: The \`${component}\` component increases ` + `the CSS specificity of the \`${key}\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({
	              root: {
	                [`&.${stateClass}`]: child
	              }
	            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\n'));
	          }
	          // Remove the style to prevent global conflicts.
	          node[key] = {};
	        }
	      }
	    };
	    Object.keys(muiTheme.components).forEach(component => {
	      const styleOverrides = muiTheme.components[component].styleOverrides;
	      if (styleOverrides && component.indexOf('Mui') === 0) {
	        traverse(styleOverrides, component);
	      }
	    });
	  }
	  muiTheme.unstable_sxConfig = _extends$2({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
	  muiTheme.unstable_sx = function sx(props) {
	    return styleFunctionSx$2({
	      sx: props,
	      theme: this
	    });
	  };
	  return muiTheme;
	}

	const defaultTheme$1 = createTheme();
	var defaultTheme$2 = defaultTheme$1;

	function useThemeProps({
	  props,
	  name
	}) {
	  return useThemeProps$1({
	    props,
	    name,
	    defaultTheme: defaultTheme$2,
	    themeId: THEME_ID
	  });
	}

	var createStyled$1 = {};

	var _extends$1 = {exports: {}};

	_extends$1.exports;

	var hasRequired_extends;

	function require_extends () {
		if (hasRequired_extends) return _extends$1.exports;
		hasRequired_extends = 1;
		(function (module) {
			function _extends() {
			  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
			    for (var i = 1; i < arguments.length; i++) {
			      var source = arguments[i];
			      for (var key in source) {
			        if (Object.prototype.hasOwnProperty.call(source, key)) {
			          target[key] = source[key];
			        }
			      }
			    }
			    return target;
			  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
			  return _extends.apply(this, arguments);
			}
			module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports; 
		} (_extends$1));
		return _extends$1.exports;
	}

	var objectWithoutPropertiesLoose = {exports: {}};

	objectWithoutPropertiesLoose.exports;

	var hasRequiredObjectWithoutPropertiesLoose;

	function requireObjectWithoutPropertiesLoose () {
		if (hasRequiredObjectWithoutPropertiesLoose) return objectWithoutPropertiesLoose.exports;
		hasRequiredObjectWithoutPropertiesLoose = 1;
		(function (module) {
			function _objectWithoutPropertiesLoose(source, excluded) {
			  if (source == null) return {};
			  var target = {};
			  var sourceKeys = Object.keys(source);
			  var key, i;
			  for (i = 0; i < sourceKeys.length; i++) {
			    key = sourceKeys[i];
			    if (excluded.indexOf(key) >= 0) continue;
			    target[key] = source[key];
			  }
			  return target;
			}
			module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports; 
		} (objectWithoutPropertiesLoose));
		return objectWithoutPropertiesLoose.exports;
	}

	var require$$1 = /*@__PURE__*/getAugmentedNamespace(styledEngine);

	var require$$4 = /*@__PURE__*/getAugmentedNamespace(deepmerge);

	var require$$5 = /*@__PURE__*/getAugmentedNamespace(capitalize);

	var require$$6 = /*@__PURE__*/getAugmentedNamespace(getDisplayName);

	var require$$7 = /*@__PURE__*/getAugmentedNamespace(createTheme$1);

	var require$$8 = /*@__PURE__*/getAugmentedNamespace(styleFunctionSx);

	var _interopRequireDefault = interopRequireDefaultExports;
	Object.defineProperty(createStyled$1, "__esModule", {
	  value: true
	});
	var _default$1 = createStyled$1.default = createStyled;
	var shouldForwardProp_1 = createStyled$1.shouldForwardProp = shouldForwardProp;
	createStyled$1.systemDefaultTheme = void 0;
	var _extends2 = _interopRequireDefault(require_extends());
	var _objectWithoutPropertiesLoose2 = _interopRequireDefault(requireObjectWithoutPropertiesLoose());
	var _styledEngine = _interopRequireWildcard(require$$1);
	var _deepmerge = require$$4;
	var _capitalize = _interopRequireDefault(require$$5);
	var _getDisplayName = _interopRequireDefault(require$$6);
	var _createTheme = _interopRequireDefault(require$$7);
	var _styleFunctionSx = _interopRequireDefault(require$$8);
	const _excluded$1 = ["ownerState"],
	  _excluded2 = ["variants"],
	  _excluded3 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
	/* eslint-disable no-underscore-dangle */
	function _getRequireWildcardCache(e) {
	  if ("function" != typeof WeakMap) return null;
	  var r = new WeakMap(),
	    t = new WeakMap();
	  return (_getRequireWildcardCache = function (e) {
	    return e ? t : r;
	  })(e);
	}
	function _interopRequireWildcard(e, r) {
	  if (!r && e && e.__esModule) return e;
	  if (null === e || "object" != typeof e && "function" != typeof e) return {
	    default: e
	  };
	  var t = _getRequireWildcardCache(r);
	  if (t && t.has(e)) return t.get(e);
	  var n = {
	      __proto__: null
	    },
	    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
	  for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
	    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
	    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
	  }
	  return n.default = e, t && t.set(e, n), n;
	}
	function isEmpty(obj) {
	  return Object.keys(obj).length === 0;
	}

	// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40
	function isStringTag(tag) {
	  return typeof tag === 'string' &&
	  // 96 is one less than the char code
	  // for "a" so this is checking that
	  // it's a lowercase character
	  tag.charCodeAt(0) > 96;
	}

	// Update /system/styled/#api in case if this changes
	function shouldForwardProp(prop) {
	  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';
	}
	const systemDefaultTheme = createStyled$1.systemDefaultTheme = (0, _createTheme.default)();
	const lowercaseFirstLetter = string => {
	  if (!string) {
	    return string;
	  }
	  return string.charAt(0).toLowerCase() + string.slice(1);
	};
	function resolveTheme({
	  defaultTheme,
	  theme,
	  themeId
	}) {
	  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;
	}
	function defaultOverridesResolver(slot) {
	  if (!slot) {
	    return null;
	  }
	  return (props, styles) => styles[slot];
	}
	function processStyleArg(callableStyle, _ref) {
	  let {
	      ownerState
	    } = _ref,
	    props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded$1);
	  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle((0, _extends2.default)({
	    ownerState
	  }, props)) : callableStyle;
	  if (Array.isArray(resolvedStylesArg)) {
	    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, (0, _extends2.default)({
	      ownerState
	    }, props)));
	  }
	  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {
	    const {
	        variants = []
	      } = resolvedStylesArg,
	      otherStyles = (0, _objectWithoutPropertiesLoose2.default)(resolvedStylesArg, _excluded2);
	    let result = otherStyles;
	    variants.forEach(variant => {
	      let isMatch = true;
	      if (typeof variant.props === 'function') {
	        isMatch = variant.props((0, _extends2.default)({
	          ownerState
	        }, props, ownerState));
	      } else {
	        Object.keys(variant.props).forEach(key => {
	          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {
	            isMatch = false;
	          }
	        });
	      }
	      if (isMatch) {
	        if (!Array.isArray(result)) {
	          result = [result];
	        }
	        result.push(typeof variant.style === 'function' ? variant.style((0, _extends2.default)({
	          ownerState
	        }, props, ownerState)) : variant.style);
	      }
	    });
	    return result;
	  }
	  return resolvedStylesArg;
	}
	function createStyled(input = {}) {
	  const {
	    themeId,
	    defaultTheme = systemDefaultTheme,
	    rootShouldForwardProp = shouldForwardProp,
	    slotShouldForwardProp = shouldForwardProp
	  } = input;
	  const systemSx = props => {
	    return (0, _styleFunctionSx.default)((0, _extends2.default)({}, props, {
	      theme: resolveTheme((0, _extends2.default)({}, props, {
	        defaultTheme,
	        themeId
	      }))
	    }));
	  };
	  systemSx.__mui_systemSx = true;
	  return (tag, inputOptions = {}) => {
	    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.
	    (0, _styledEngine.internal_processStyles)(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));
	    const {
	        name: componentName,
	        slot: componentSlot,
	        skipVariantsResolver: inputSkipVariantsResolver,
	        skipSx: inputSkipSx,
	        // TODO v6: remove `lowercaseFirstLetter()` in the next major release
	        // For more details: https://github.com/mui/material-ui/pull/37908
	        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))
	      } = inputOptions,
	      options = (0, _objectWithoutPropertiesLoose2.default)(inputOptions, _excluded3);

	    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.
	    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :
	    // TODO v6: remove `Root` in the next major release
	    // For more details: https://github.com/mui/material-ui/pull/37908
	    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;
	    const skipSx = inputSkipSx || false;
	    let label;
	    {
	      if (componentName) {
	        // TODO v6: remove `lowercaseFirstLetter()` in the next major release
	        // For more details: https://github.com/mui/material-ui/pull/37908
	        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;
	      }
	    }
	    let shouldForwardPropOption = shouldForwardProp;

	    // TODO v6: remove `Root` in the next major release
	    // For more details: https://github.com/mui/material-ui/pull/37908
	    if (componentSlot === 'Root' || componentSlot === 'root') {
	      shouldForwardPropOption = rootShouldForwardProp;
	    } else if (componentSlot) {
	      // any other slot specified
	      shouldForwardPropOption = slotShouldForwardProp;
	    } else if (isStringTag(tag)) {
	      // for string (html) tag, preserve the behavior in emotion & styled-components.
	      shouldForwardPropOption = undefined;
	    }
	    const defaultStyledResolver = (0, _styledEngine.default)(tag, (0, _extends2.default)({
	      shouldForwardProp: shouldForwardPropOption,
	      label
	    }, options));
	    const transformStyleArg = stylesArg => {
	      // On the server Emotion doesn't use React.forwardRef for creating components, so the created
	      // component stays as a function. This condition makes sure that we do not interpolate functions
	      // which are basically components used as a selectors.
	      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || (0, _deepmerge.isPlainObject)(stylesArg)) {
	        return props => processStyleArg(stylesArg, (0, _extends2.default)({}, props, {
	          theme: resolveTheme({
	            theme: props.theme,
	            defaultTheme,
	            themeId
	          })
	        }));
	      }
	      return stylesArg;
	    };
	    const muiStyledResolver = (styleArg, ...expressions) => {
	      let transformedStyleArg = transformStyleArg(styleArg);
	      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];
	      if (componentName && overridesResolver) {
	        expressionsWithDefaultTheme.push(props => {
	          const theme = resolveTheme((0, _extends2.default)({}, props, {
	            defaultTheme,
	            themeId
	          }));
	          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {
	            return null;
	          }
	          const styleOverrides = theme.components[componentName].styleOverrides;
	          const resolvedStyleOverrides = {};
	          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly
	          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {
	            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, (0, _extends2.default)({}, props, {
	              theme
	            }));
	          });
	          return overridesResolver(props, resolvedStyleOverrides);
	        });
	      }
	      if (componentName && !skipVariantsResolver) {
	        expressionsWithDefaultTheme.push(props => {
	          var _theme$components;
	          const theme = resolveTheme((0, _extends2.default)({}, props, {
	            defaultTheme,
	            themeId
	          }));
	          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;
	          return processStyleArg({
	            variants: themeVariants
	          }, (0, _extends2.default)({}, props, {
	            theme
	          }));
	        });
	      }
	      if (!skipSx) {
	        expressionsWithDefaultTheme.push(systemSx);
	      }
	      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
	      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
	        const placeholders = new Array(numOfCustomFnsApplied).fill('');
	        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.
	        transformedStyleArg = [...styleArg, ...placeholders];
	        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
	      }
	      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
	      {
	        let displayName;
	        if (componentName) {
	          displayName = `${componentName}${(0, _capitalize.default)(componentSlot || '')}`;
	        }
	        if (displayName === undefined) {
	          displayName = `Styled(${(0, _getDisplayName.default)(tag)})`;
	        }
	        Component.displayName = displayName;
	      }
	      if (tag.muiName) {
	        Component.muiName = tag.muiName;
	      }
	      return Component;
	    };
	    if (defaultStyledResolver.withConfig) {
	      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
	    }
	    return muiStyledResolver;
	  };
	}

	const rootShouldForwardProp = prop => shouldForwardProp_1(prop) && prop !== 'classes';
	const styled = _default$1({
	  themeId: THEME_ID,
	  defaultTheme: defaultTheme$2,
	  rootShouldForwardProp
	});
	var styled$1 = styled;

	function getTypographyUtilityClass(slot) {
	  return generateUtilityClass('MuiTypography', slot);
	}
	generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);

	const _excluded = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];
	const useUtilityClasses = ownerState => {
	  const {
	    align,
	    gutterBottom,
	    noWrap,
	    paragraph,
	    variant,
	    classes
	  } = ownerState;
	  const slots = {
	    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize$1(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']
	  };
	  return composeClasses(slots, getTypographyUtilityClass, classes);
	};
	const TypographyRoot = styled$1('span', {
	  name: 'MuiTypography',
	  slot: 'Root',
	  overridesResolver: (props, styles) => {
	    const {
	      ownerState
	    } = props;
	    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize$1(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];
	  }
	})(({
	  theme,
	  ownerState
	}) => _extends$2({
	  margin: 0
	}, ownerState.variant === 'inherit' && {
	  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
	  font: 'inherit'
	}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {
	  textAlign: ownerState.align
	}, ownerState.noWrap && {
	  overflow: 'hidden',
	  textOverflow: 'ellipsis',
	  whiteSpace: 'nowrap'
	}, ownerState.gutterBottom && {
	  marginBottom: '0.35em'
	}, ownerState.paragraph && {
	  marginBottom: 16
	}));
	const defaultVariantMapping = {
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  subtitle1: 'h6',
	  subtitle2: 'h6',
	  body1: 'p',
	  body2: 'p',
	  inherit: 'p'
	};

	// TODO v6: deprecate these color values in v5.x and remove the transformation in v6
	const colorTransformations = {
	  primary: 'primary.main',
	  textPrimary: 'text.primary',
	  secondary: 'secondary.main',
	  textSecondary: 'text.secondary',
	  error: 'error.main'
	};
	const transformDeprecatedColors = color => {
	  return colorTransformations[color] || color;
	};
	const Typography = /*#__PURE__*/reactExports.forwardRef(function Typography(inProps, ref) {
	  const themeProps = useThemeProps({
	    props: inProps,
	    name: 'MuiTypography'
	  });
	  const color = transformDeprecatedColors(themeProps.color);
	  const props = extendSxProp(_extends$2({}, themeProps, {
	    color
	  }));
	  const {
	      align = 'inherit',
	      className,
	      component,
	      gutterBottom = false,
	      noWrap = false,
	      paragraph = false,
	      variant = 'body1',
	      variantMapping = defaultVariantMapping
	    } = props,
	    other = _objectWithoutPropertiesLoose$1(props, _excluded);
	  const ownerState = _extends$2({}, props, {
	    align,
	    color,
	    className,
	    component,
	    gutterBottom,
	    noWrap,
	    paragraph,
	    variant,
	    variantMapping
	  });
	  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
	  const classes = useUtilityClasses(ownerState);
	  return /*#__PURE__*/jsxRuntimeExports.jsx(TypographyRoot, _extends$2({
	    as: Component,
	    ref: ref,
	    ownerState: ownerState,
	    className: clsx(classes.root, className)
	  }, other));
	});
	Typography.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * Set the text-align on the component.
	   * @default 'inherit'
	   */
	  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),
	  /**
	   * The content of the component.
	   */
	  children: PropTypes.node,
	  /**
	   * Override or extend the styles applied to the component.
	   */
	  classes: PropTypes.object,
	  /**
	   * @ignore
	   */
	  className: PropTypes.string,
	  /**
	   * The component used for the root node.
	   * Either a string to use a HTML element or a component.
	   */
	  component: PropTypes.elementType,
	  /**
	   * If `true`, the text will have a bottom margin.
	   * @default false
	   */
	  gutterBottom: PropTypes.bool,
	  /**
	   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
	   *
	   * Note that text overflow can only happen with block or inline-block level elements
	   * (the element needs to have a width in order to overflow).
	   * @default false
	   */
	  noWrap: PropTypes.bool,
	  /**
	   * If `true`, the element will be a paragraph element.
	   * @default false
	   */
	  paragraph: PropTypes.bool,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),
	  /**
	   * Applies the theme typography styles.
	   * @default 'body1'
	   */
	  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),
	  /**
	   * The component maps the variant prop to a range of different HTML element types.
	   * For instance, subtitle1 to `<h6>`.
	   * If you wish to change that mapping, you can provide your own.
	   * Alternatively, you can use the `component` prop.
	   * @default {
	   *   h1: 'h1',
	   *   h2: 'h2',
	   *   h3: 'h3',
	   *   h4: 'h4',
	   *   h5: 'h5',
	   *   h6: 'h6',
	   *   subtitle1: 'h6',
	   *   subtitle2: 'h6',
	   *   body1: 'p',
	   *   body2: 'p',
	   *   inherit: 'p',
	   * }
	   */
	  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object
	} ;
	var Typography$1 = Typography;

	const boxClasses = generateUtilityClasses('MuiBox', ['root']);
	var boxClasses$1 = boxClasses;

	const defaultTheme = createTheme();
	const Box = createBox({
	  themeId: THEME_ID,
	  defaultTheme,
	  defaultClassName: boxClasses$1.root,
	  generateClassName: ClassNameGenerator$1.generate
	});
	Box.propTypes /* remove-proptypes */ = {
	  // ┌────────────────────────────── Warning ──────────────────────────────┐
	  // │ These PropTypes are generated from the TypeScript type definitions. │
	  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
	  // └─────────────────────────────────────────────────────────────────────┘
	  /**
	   * @ignore
	   */
	  children: PropTypes.node,
	  /**
	   * The component used for the root node.
	   * Either a string to use a HTML element or a component.
	   */
	  component: PropTypes.elementType,
	  /**
	   * The system prop that allows defining system overrides as well as additional CSS styles.
	   */
	  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])
	} ;
	var Box$1 = Box;

	styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "center",
	  justifyContent: "space-between",
	  width: "100%"
	});
	const StandardPageBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "flex-start",
	  justifyContent: "flex-start",
	  width: "100vw",
	  height: "100vh",
	  padding: "56px 72px",
	  position: "relative",
	  gap: 32
	});
	styled$1(StandardPageBox)({
	  paddingLeft: 24,
	  paddingRight: 24,
	  height: "fit-content",
	  opacity: 0.75
	});
	styled$1(Box$1)(({
	  width = "100%",
	  height = "100%"
	}) => ({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "center",
	  maxWidth: width,
	  maxHeight: height
	}));
	styled$1(Box$1)(({
	  color = "var(--Main-White)"
	}) => ({
	  width: "100%",
	  height: 0.5,
	  backgroundColor: color
	}));
	styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "flex-start",
	  width: "100%",
	  overflowY: "scroll",
	  gap: 18
	});
	const CoinColumnBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "space-between",
	  width: "100%",
	  gap: 24
	});
	const CoinRowBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "center",
	  justifyContent: "space-between",
	  width: "100%",
	  gap: 10
	});
	const InnerPageBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "center",
	  gap: 18,
	  width: "100%",
	  height: "100%"
	});
	const VotesContainer = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "flex-start",
	  justifyContent: "center",
	  width: "100%",
	  gap: 30
	});
	const VotesBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "center",
	  justifyContent: "center",
	  gap: 15
	});
	const VoteListRowBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "row",
	  alignItems: "flex-start",
	  justifyContent: "flex-start",
	  width: "100%",
	  gap: 15
	});
	const VoteListColumnBox = styled$1(Box$1)({
	  display: "flex",
	  flexDirection: "column",
	  alignItems: "flex-start",
	  justifyContent: "flex-start",
	  gap: 10
	});
	const VerticalLine = styled$1(Box$1)({
	  width: 0.5,
	  height: "100%",
	  backgroundColor: "var(--Main-White)",
	  opacity: 0.75
	});

	const Text = styled$1(Typography$1)(({
	  color = "var(--Main-White)",
	  size = 24,
	  opacity = 1,
	  weight = 400
	}) => ({
	  color,
	  fontSize: size,
	  opacity,
	  fontWeight: weight,
	  fontFamily: "American Typewriter",
	  lineHeight: "1",
	  textAlign: "center"
	}));

	function Coin({
	  name,
	  isHost
	}) {
	  if (name === null || name === undefined) {
	    return /*#__PURE__*/React.createElement("svg", {
	      xmlns: "http://www.w3.org/2000/svg",
	      width: "163",
	      height: "163",
	      viewBox: "0 0 163 163",
	      fill: "none"
	    }, /*#__PURE__*/React.createElement("circle", {
	      cx: "81.5",
	      cy: "81.5",
	      r: "79",
	      stroke: "#545454",
	      strokeWidth: "5",
	      strokeDasharray: "5 5"
	    }));
	  }
	  return /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      display: "flex",
	      flexDirection: "column",
	      alignItems: "center",
	      justifyContent: "center",
	      width: 163,
	      height: 163,
	      borderRadius: 163,
	      backgroundColor: "var(--Main-Red)",
	      boxShadow: "2px 1px 0px 0px rgba(255, 255, 255, 0.50) inset, -2px -1px 0px 0px #792D2D inset"
	    }
	  }, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      display: "flex",
	      flexDirection: "column",
	      alignItems: "center",
	      justifyContent: "center",
	      width: 130,
	      height: 130,
	      borderRadius: 130,
	      backgroundColor: "var(--Main-Red)",
	      boxShadow: "-2px -1px 0px 0px rgba(255, 255, 255, 0.50) inset, 2px 1px 0px 0px #792D2D inset",
	      position: "relative"
	    }
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: name.length < 9 ? 24 : name.length < 12 ? 18 : 12
	  }, name), isHost ? /*#__PURE__*/React.createElement(Text, {
	    size: 18,
	    style: {
	      position: "absolute",
	      bottom: 30
	    }
	  }, "(host)") : null));
	}

	const BannerIcon = () => {
	  return /*#__PURE__*/React.createElement("svg", {
	    width: "111",
	    height: "172",
	    viewBox: "0 0 111 172",
	    fill: "none",
	    xmlns: "http://www.w3.org/2000/svg"
	  }, /*#__PURE__*/React.createElement("path", {
	    d: "M0 0H110.735L110.736 139.335L55.3678 171.688L7.92041e-05 139.335L0 0Z",
	    fill: "#BB3737"
	  }), /*#__PURE__*/React.createElement("path", {
	    fillRule: "evenodd",
	    clipRule: "evenodd",
	    d: "M53.5422 63.9678C53.5553 63.9076 53.5633 63.7812 53.5663 63.5885L53.5713 63.5916L53.6115 61.0902C53.6145 60.8976 53.6105 60.7742 53.5994 60.72C53.5723 60.5625 53.4981 60.4832 53.3777 60.4812C53.3295 60.4802 53.2583 60.4902 53.165 60.5093C53.0717 60.5293 52.9974 60.5374 52.9432 60.5374C52.8048 60.5344 52.6894 60.4762 52.5981 60.3598C52.5058 60.2444 52.4616 60.1019 52.4646 59.9334C52.4727 59.4939 52.6984 59.2782 53.1439 59.2852C53.2824 59.2872 53.5041 59.3033 53.8111 59.3324C54.2737 59.3755 54.6529 59.3996 54.9479 59.4046C55.1526 59.4076 55.3814 59.4086 55.6342 59.4066C55.8028 59.4026 56.1399 59.4026 56.6456 59.4046C56.8503 59.4076 57.1001 59.4056 57.3951 59.3986L57.9379 59.3625C58.0101 59.3574 58.0402 59.3544 58.0282 59.3544C58.3282 59.3594 58.4767 59.4939 58.4727 59.7588C58.4706 59.8671 58.4566 59.9865 58.4305 60.119C58.3914 60.3166 58.3703 60.4792 58.3683 60.6056C58.3673 60.7019 58.3814 60.8444 58.4115 61.031C58.4416 61.2186 58.4556 61.3601 58.4546 61.4564C58.4516 61.6671 58.3854 61.8377 58.2569 61.9681C58.1285 62.0986 57.962 62.1618 57.7573 62.1588C57.5526 62.1548 57.3931 62.0865 57.2777 61.9521C57.1623 61.8176 57.1061 61.639 57.1101 61.4163C57.1111 61.3501 57.1252 61.2367 57.1523 61.0742C57.1723 60.9538 57.1834 60.8604 57.1844 60.7942C57.1874 60.5895 57.0389 60.4852 56.7379 60.4802L55.7536 60.4641C55.5188 60.4601 55.3693 60.4862 55.3051 60.5424C55.2409 60.5986 55.2068 60.7531 55.2028 61.0059L55.1957 61.4303C55.1927 61.617 55.272 61.7113 55.4345 61.7143C55.6874 61.7183 55.8148 61.633 55.8178 61.4584C55.8188 61.4408 55.813 61.3855 55.8034 61.2928L55.8034 61.2927L55.8028 61.2869C55.8038 61.2688 55.8038 61.2447 55.8038 61.2146C55.7977 61.1845 55.7957 61.1635 55.7957 61.1514C55.7997 60.9166 55.9432 60.8013 56.2262 60.8063C56.5563 60.8113 56.7198 60.9708 56.7148 61.2839C56.7138 61.3441 56.7058 61.4404 56.6917 61.5728C56.6777 61.7053 56.6686 61.8768 56.6656 62.0875C56.6636 62.2079 56.6727 62.3905 56.6927 62.6344C56.7128 62.8782 56.7218 63.0608 56.7198 63.1812C56.7138 63.5484 56.5543 63.729 56.2412 63.724C55.9222 63.718 55.7656 63.5474 55.7707 63.2103C55.7707 63.1982 55.7747 63.1802 55.7807 63.1561V63.111L55.7827 63.0116C55.7857 62.8611 55.6723 62.7839 55.4436 62.7798C55.3292 62.7778 55.2549 62.7919 55.2218 62.821C55.1877 62.8501 55.1707 62.9163 55.1686 63.0186L55.1606 63.5424L55.1646 63.8494C55.1626 63.9457 55.1707 64.021 55.1877 64.0752C55.2158 64.1785 55.2961 64.2307 55.4285 64.2327C55.4937 64.2337 55.5911 64.2247 55.7175 64.2056C55.8439 64.1865 55.9402 64.1775 56.0064 64.1785C56.3616 64.1845 56.5362 64.3922 56.5292 64.8016C56.5262 64.9942 56.462 65.1477 56.3365 65.2631C56.2111 65.3785 56.0466 65.4347 55.8419 65.4317C55.6854 65.4297 55.4516 65.4106 55.1426 65.3755C54.8325 65.3404 54.5997 65.3223 54.4432 65.3193C54.1362 65.3143 53.8924 65.3193 53.7118 65.3344C53.2954 65.3695 53.0636 65.3865 53.0155 65.3865C52.8218 65.3825 52.6683 65.3203 52.5529 65.1979C52.4375 65.0755 52.3814 64.915 52.3844 64.7163C52.3864 64.5417 52.4355 64.4002 52.5309 64.2899C52.6262 64.1795 52.7456 64.1263 52.8901 64.1283C52.9382 64.1293 53.0094 64.1404 53.1058 64.1635C53.2011 64.1865 53.2703 64.1986 53.3125 64.1986C53.4329 64.2006 53.5091 64.1243 53.5422 63.9678ZM43.8379 66.9085C43.9773 66.9948 44.1379 67.0169 44.3205 66.9757C44.3787 66.9627 44.5593 66.9005 44.8613 66.7891C44.9927 66.7409 45.1783 66.6898 45.4191 66.6356C45.6419 66.5854 45.8175 66.5553 45.9449 66.5453C46.2359 66.5232 46.4225 66.5021 46.5048 66.4841C46.6693 66.447 46.7877 66.3587 46.8619 66.2192C46.9352 66.0797 46.9512 65.9152 46.9091 65.7276C46.8308 65.3814 46.6833 65.2319 46.4666 65.2811C46.4375 65.2881 46.3944 65.3021 46.3372 65.3242C46.28 65.3463 46.2369 65.3603 46.2078 65.3674C46.1074 65.3894 46.0472 65.3543 46.0262 65.26C45.9359 64.8607 46.0593 64.6229 46.3934 64.5476L47.5653 64.2837C47.6646 64.2617 47.7589 64.2958 47.8472 64.3871C47.9355 64.4784 47.9977 64.6028 48.0328 64.7613C48.0609 64.8848 48.0188 64.959 47.9074 64.9841C47.8783 64.9911 47.8332 64.9961 47.772 65.0001C47.7108 65.0041 47.6666 65.0102 47.6365 65.0162C47.4138 65.0664 47.3405 65.265 47.4188 65.6112C47.4599 65.7928 47.5452 65.9332 47.6747 66.0306C47.8041 66.1279 47.9486 66.159 48.1071 66.1229C48.1833 66.1058 48.366 66.0396 48.6549 65.9252C48.7282 65.8961 48.8767 65.857 49.1004 65.8068C49.3061 65.7607 49.4747 65.7286 49.6061 65.7115C49.6593 65.6995 49.7706 65.6894 49.9422 65.6824C50.0807 65.6694 50.192 65.6543 50.2743 65.6353C50.4619 65.5931 50.6014 65.4998 50.6927 65.3563C50.784 65.2128 50.8071 65.0433 50.764 64.8496C50.6767 64.4623 50.469 64.3048 50.1399 64.3791L50.0425 64.4011C49.9583 64.4383 49.8991 64.4613 49.8629 64.4694C49.7456 64.4955 49.6091 64.369 49.4536 64.0891L47.482 60.5894C47.3365 60.3266 47.192 60.1781 47.0486 60.145C46.9051 60.1128 46.587 60.152 46.0934 60.2623C45.6529 60.3617 45.375 60.458 45.2606 60.5513C45.1071 60.6908 45.0038 60.9737 44.9516 61.3981L44.5141 65.1336C44.49 65.3302 44.474 65.4476 44.464 65.4868C44.4208 65.6262 44.3436 65.7085 44.2322 65.7336C44.1971 65.7416 44.1399 65.7496 44.0616 65.7577C43.9834 65.7657 43.9262 65.7737 43.891 65.7817C43.58 65.852 43.4706 66.0928 43.563 66.5031C43.6041 66.6847 43.6944 66.8192 43.8339 66.9055L43.8379 66.9085ZM46.3011 61.2547L47.1298 62.9654C47.1599 63.0446 47.175 63.0817 47.173 63.0757C47.191 63.158 47.1238 63.2162 46.9713 63.2503L46.4255 63.3727C46.279 63.4058 46.1977 63.3868 46.1817 63.3165C46.1767 63.2934 46.1747 63.2714 46.1767 63.2533L46.3011 61.2536V61.2547ZM32.1991 67.4273C32.0777 67.4925 31.9483 67.4965 31.8118 67.4403L31.8128 67.4363C31.6763 67.3801 31.569 67.2778 31.4887 67.1293C31.28 66.742 31.3723 66.443 31.7646 66.2323C31.8911 66.1641 32.1108 66.0638 32.4218 65.9303C32.7329 65.7979 32.9626 65.6915 33.1111 65.6112C33.3489 65.4828 33.5897 65.3333 33.8325 65.1617C33.9961 65.0474 34.1285 64.9621 34.2289 64.9079C34.3613 64.8367 34.4717 64.8186 34.559 64.8537C34.6462 64.8888 34.7677 64.9942 34.9242 65.1698L37.1456 67.7173L36.3409 64.5617C36.2737 64.2969 36.2526 64.1022 36.2767 63.9758C36.3018 63.8494 36.38 63.751 36.5125 63.6798C36.6289 63.6166 36.8135 63.5353 37.0663 63.433C37.3192 63.3316 37.5058 63.2474 37.6282 63.1822C37.7556 63.1139 38.0596 62.9223 38.5402 62.6092C38.6777 62.522 38.78 62.4597 38.8493 62.4226C39.0238 62.3293 39.1924 62.3052 39.3539 62.3514C39.5155 62.3975 39.6449 62.5109 39.7422 62.6915C39.8225 62.84 39.8486 62.9875 39.8205 63.132C39.7924 63.2775 39.7171 63.3828 39.5957 63.448C39.5486 63.4741 39.4763 63.5002 39.382 63.5273C39.2877 63.5544 39.2215 63.5775 39.1844 63.5975C39.0419 63.6748 39.066 63.8905 39.2566 64.2457L40.4416 66.449C40.6352 66.8092 40.8008 66.9527 40.9392 66.8785C40.9814 66.8554 41.0396 66.8122 41.1148 66.748C41.1891 66.6838 41.2482 66.6407 41.2904 66.6176C41.4118 66.5514 41.5432 66.5464 41.6817 66.6015C41.8202 66.6567 41.9295 66.7581 42.0098 66.9066C42.1071 67.0862 42.1302 67.2567 42.08 67.4173C42.0299 67.5768 41.9165 67.7042 41.7419 67.7985C41.6406 67.8527 41.463 67.928 41.2071 68.0243C41.0365 68.0885 40.872 68.1638 40.7125 68.249C40.6111 68.3032 40.4697 68.3965 40.288 68.528C40.1064 68.6594 39.965 68.7527 39.8646 68.8069C39.7051 68.8922 39.5486 68.9082 39.3931 68.8551C39.2375 68.8019 39.1131 68.6875 39.0188 68.5129C38.8422 68.1848 38.8623 67.9621 39.08 67.8447C39.1121 67.8276 39.1372 67.8176 39.1563 67.8146C39.1713 67.8056 39.1904 67.7955 39.2115 67.7845C39.2355 67.7785 39.2506 67.7745 39.2556 67.7714C39.3409 67.7263 39.36 67.641 39.3128 67.5156C39.2897 67.4594 39.2436 67.3681 39.1753 67.2407L37.563 64.2427L38.5623 68.7497C38.6496 69.141 38.5844 69.3939 38.3666 69.5112L37.858 69.7852C37.6452 69.8995 37.4185 69.8273 37.1767 69.5674L33.984 66.1681L35.5964 69.1661C35.7299 69.4159 35.8292 69.5434 35.8944 69.5494C35.9185 69.5564 35.9526 69.5494 35.9947 69.5263C36.0048 69.5213 36.0198 69.5102 36.0379 69.4932L36.0463 69.4885L36.062 69.4801C36.07 69.4759 36.078 69.4716 36.086 69.4671C36.0991 69.4541 36.1212 69.438 36.1533 69.4209C36.365 69.3066 36.5586 69.4119 36.7322 69.735C36.8295 69.9156 36.8586 70.0842 36.8205 70.2417C36.7824 70.3992 36.684 70.5206 36.5245 70.6059C36.4503 70.646 36.3509 70.6892 36.2255 70.7363L36.0327 70.8072L36.0322 70.8074L36.0315 70.8077C35.981 70.8262 35.9457 70.8391 35.9255 70.8467C35.8081 70.8959 35.6787 70.9591 35.5352 71.0363C35.3546 71.1337 35.2081 71.2229 35.0947 71.3042L34.6362 71.6333C34.4717 71.7216 34.3061 71.7387 34.1406 71.6845C33.975 71.6303 33.8466 71.5179 33.7553 71.3484C33.672 71.1939 33.6459 71.0464 33.675 70.9039C33.7041 70.7614 33.7824 70.6561 33.9098 70.5878C33.9519 70.5658 34.0192 70.5417 34.1115 70.5156C34.2038 70.4905 34.271 70.4664 34.3131 70.4433C34.4185 70.3862 34.4476 70.2818 34.4004 70.1293C34.3824 70.0711 34.3282 69.9567 34.2369 69.7872L33.0519 67.5838C32.9606 67.4143 32.8964 67.3089 32.8603 67.2668C32.76 67.1423 32.6566 67.1092 32.5503 67.1664C32.5081 67.1895 32.4509 67.2326 32.3787 67.2949C32.3064 67.3571 32.2473 67.4012 32.1991 67.4273ZM77.8542 73.0981C77.7057 72.9586 77.5743 72.8473 77.4609 72.766H77.4599L77.0023 72.4359C76.8669 72.3085 76.7977 72.157 76.7967 71.9824C76.7947 71.8078 76.8609 71.6503 76.9923 71.5098C77.1117 71.3824 77.2431 71.3101 77.3876 71.2931C77.5321 71.276 77.6565 71.3161 77.7619 71.4155C77.797 71.4486 77.8411 71.5048 77.8953 71.584C77.9495 71.6633 77.9937 71.7195 78.0288 71.7526C78.1161 71.8349 78.2244 71.8289 78.3539 71.7355C78.404 71.7004 78.4943 71.6121 78.6268 71.4717L80.3385 69.6486C80.4699 69.5081 80.5502 69.4148 80.5783 69.3667C80.6636 69.2312 80.6625 69.1228 80.5742 69.0406C80.5391 69.0075 80.4799 68.9663 80.3977 68.9182C80.3154 68.87 80.2542 68.8269 80.215 68.7897C80.1137 68.6944 80.0686 68.574 80.0786 68.4265C80.0886 68.279 80.1518 68.1446 80.2672 68.0212C80.5682 67.7011 80.8803 67.6931 81.2054 67.9981C81.3107 68.0974 81.4753 68.273 81.701 68.5258C81.9258 68.7787 82.0993 68.9623 82.2227 69.0777C82.4204 69.2633 82.6391 69.4439 82.8789 69.6195C83.0405 69.7379 83.1629 69.8362 83.2462 69.9145C83.3565 70.0168 83.4087 70.1151 83.4027 70.2095C83.3977 70.3028 83.3365 70.4523 83.2191 70.6559L81.5094 73.5717L84.2455 71.8058C84.4743 71.6583 84.6528 71.576 84.7803 71.559C84.9077 71.5419 85.0261 71.585 85.1355 71.6884C85.2318 71.7797 85.3692 71.9282 85.5458 72.1359C85.7224 72.3436 85.8609 72.4951 85.9622 72.5894C86.0676 72.6887 86.3445 72.9165 86.795 73.2727C86.9214 73.375 87.0137 73.4533 87.0709 73.5064C87.2164 73.6419 87.2916 73.7944 87.2997 73.962C87.3077 74.1295 87.2415 74.2881 87.101 74.4376C86.9856 74.561 86.8552 74.6322 86.7087 74.6513C86.5622 74.6713 86.4388 74.6332 86.3375 74.5389C86.2983 74.5018 86.2502 74.4426 86.195 74.3613C86.1398 74.28 86.0967 74.2248 86.0656 74.1957C85.9472 74.0844 85.7495 74.1757 85.4736 74.4697L83.7619 76.2927C83.4819 76.5907 83.3987 76.7934 83.513 76.9008C83.5482 76.9339 83.6084 76.976 83.6926 77.0262C83.7769 77.0763 83.8371 77.1185 83.8722 77.1516C83.9736 77.2459 84.0197 77.3683 84.0117 77.5178C84.0027 77.6673 83.9415 77.8038 83.8261 77.9262C83.6856 78.0757 83.5321 78.1519 83.3635 78.1549C83.195 78.1579 83.0385 78.0907 82.894 77.9553C82.8107 77.877 82.6823 77.7315 82.5097 77.5198C82.3943 77.3784 82.2709 77.2459 82.1395 77.1225C82.0562 77.0442 81.9227 76.9399 81.7401 76.8095C81.5575 76.679 81.4241 76.5747 81.3408 76.4964C81.2094 76.373 81.1441 76.2295 81.1451 76.065C81.1462 75.9004 81.2144 75.7459 81.3508 75.6014C81.6067 75.3295 81.8244 75.2784 82.004 75.4469C82.0301 75.472 82.0482 75.4921 82.0572 75.5091L82.065 75.5164L82.0725 75.5235L82.0727 75.5238L82.0736 75.5247C82.0826 75.5332 82.0924 75.5426 82.1033 75.5523C82.1174 75.5723 82.1264 75.5854 82.1304 75.5894C82.2007 75.6556 82.287 75.6466 82.3913 75.5623C82.4365 75.5222 82.5087 75.4499 82.608 75.3446L84.9388 72.8623L80.9826 75.2422C80.6405 75.4489 80.3786 75.467 80.199 75.2984L79.7776 74.9031C79.602 74.7386 79.599 74.4998 79.7676 74.1877L81.9759 70.081L79.6451 72.5633C79.4515 72.769 79.3622 72.9044 79.3773 72.9677C79.3783 72.9927 79.3963 73.0218 79.4314 73.0549C79.4405 73.063 79.4555 73.073 79.4776 73.085C79.4906 73.0971 79.5037 73.1101 79.5167 73.1222C79.5338 73.1302 79.5559 73.1462 79.5819 73.1713C79.7575 73.3369 79.7194 73.5526 79.4686 73.8205C79.3281 73.969 79.1776 74.0503 79.0161 74.0643C78.8545 74.0784 78.708 74.0232 78.5766 73.8998C78.5144 73.8416 78.4421 73.7603 78.3579 73.6569L78.2644 73.5406C78.2112 73.4744 78.1756 73.4302 78.1582 73.4081C78.0739 73.3128 77.9726 73.2095 77.8542 73.0981ZM72.8686 100.815C72.7262 101.305 72.7011 101.83 72.8496 102.319L72.8506 102.32C72.9359 102.601 72.8917 103.065 72.4974 103.829C72.2298 104.347 71.8286 105.326 71.3737 106.436C70.4967 108.575 69.4201 111.202 68.7158 111.957C68.2803 112.423 68.0375 113.036 67.9904 113.672L67.5529 119.617C67.5238 120.007 67.4165 120.388 67.2349 120.735C66.1864 122.741 62.2773 129.492 57.6609 128.455C57.6609 128.455 55.6091 127.982 54.0028 128.403C53.5994 128.509 53.18 128.545 52.7686 128.477C50.9466 128.176 46.2399 126.832 43.1255 120.849C42.9248 120.464 42.8205 120.036 42.8105 119.602L42.683 113.842C42.665 113.041 42.2967 112.303 41.7128 111.754C41.5061 111.559 41.3054 111.235 41.16 110.699C40.972 110.011 40.2231 108.68 39.4342 107.278C38.2733 105.215 37.0257 102.999 37.3513 102.446C37.7044 101.848 37.8279 101.144 37.7004 100.461C37.4135 98.9302 36.9128 96.2302 36.8646 95.8018C34.4988 74.8801 54.1332 71.9664 63.984 76.344C73.8349 80.7225 73.7737 92.8831 73.7737 92.8831C73.7737 92.8831 73.571 98.3924 72.8686 100.815ZM41.8954 99.9105C41.8954 99.9105 42.9268 103.547 46.2911 102.407H46.2901C49.6543 101.267 52.3673 98.8259 52.0964 97.8486C52.0964 97.8486 52.6392 92.9102 49.5459 91.9339C46.4536 90.9567 42.6549 92.1506 41.5693 94.1041C40.4847 96.0577 41.8954 99.9105 41.8954 99.9105ZM55.0543 106.06C55.4937 108.725 57.2526 108.242 57.2526 108.242H57.2516C59.7625 106.303 57.3557 101.651 56.4004 99.8047L56.4003 99.8046C56.2204 99.4568 56.092 99.2086 56.0576 99.0968C55.8448 98.4042 55.7887 98.3917 55.1001 98.2376L55.0613 98.2289C54.3359 98.0664 54.3218 98.9342 54.3218 98.9342C54.3218 98.9342 49.872 106.748 52.8028 107.996C54.9108 108.894 55.1084 107.125 55.0543 106.06ZM61.9191 101.241C66.4231 104.199 68.3767 100.779 68.3767 100.779L68.3757 100.778C68.3757 100.778 69.6238 94.972 68.3757 93.6155C67.1275 92.259 63.6549 91.5536 61.7014 91.5858C59.7479 91.6179 58.0121 94.7011 58.1747 97.1072C58.3372 99.5132 61.9191 101.241 61.9191 101.241ZM85.9553 79.7975C85.8098 79.8015 85.7074 79.7544 85.6472 79.6571C85.6282 79.626 85.6021 79.5748 85.57 79.5035C85.5369 79.4323 85.5108 79.3811 85.4917 79.35C85.3252 79.0771 85.0623 79.051 84.7031 79.2708C84.5436 79.3681 84.4462 79.4965 84.4091 79.6561C84.373 79.8156 84.4031 79.9751 84.5004 80.1346C84.5315 80.1858 84.6489 80.3373 84.8506 80.5872C84.9379 80.6955 85.0462 80.8561 85.1747 81.0668C85.2941 81.2624 85.3783 81.4179 85.4285 81.5353C85.5429 81.8042 85.6222 81.9738 85.6663 82.046C85.7536 82.1895 85.876 82.2738 86.0325 82.2989C86.188 82.3239 86.3486 82.2858 86.5131 82.1855C86.8161 82.0009 86.9104 81.8132 86.7941 81.6226C86.778 81.5965 86.7509 81.5604 86.7118 81.5142C86.6727 81.4671 86.6456 81.431 86.6295 81.4059C86.5763 81.3186 86.5904 81.2494 86.6727 81.1992C87.0218 80.9865 87.2867 81.0256 87.4653 81.3186L88.0904 82.344C88.1436 82.4313 88.1415 82.5316 88.0834 82.645C88.0252 82.7574 87.9268 82.8567 87.7884 82.941C87.68 83.0072 87.5967 82.9912 87.5375 82.8928C87.5215 82.8668 87.5024 82.8266 87.4783 82.7704C87.4543 82.7142 87.4352 82.6731 87.4191 82.648C87.2997 82.4524 87.089 82.4474 86.786 82.632C86.6265 82.7293 86.5222 82.8547 86.471 83.0092C86.4208 83.1637 86.4379 83.3102 86.5222 83.4487C86.5633 83.5159 86.6837 83.6674 86.8844 83.9042C86.9355 83.9644 87.0208 84.0928 87.1392 84.2885C87.2486 84.4681 87.3329 84.6176 87.3921 84.737C87.4201 84.7831 87.4653 84.8865 87.5275 85.046C87.5837 85.1734 87.6349 85.2738 87.678 85.345C87.7783 85.5096 87.9108 85.6119 88.0763 85.652C88.2419 85.6922 88.4094 85.6601 88.579 85.5567C88.9181 85.35 89.0004 85.1022 88.8248 84.8142L88.7727 84.729C88.7104 84.6617 88.6693 84.6116 88.6512 84.5815C88.589 84.4781 88.6653 84.3086 88.88 84.0718L91.563 81.0828C91.7656 80.8601 91.8599 80.6765 91.8449 80.53C91.8298 80.3835 91.6904 80.0955 91.4275 79.6631C91.1927 79.2778 91.0121 79.045 90.8867 78.9668C90.7051 78.8654 90.4051 78.8584 89.9857 78.9457L86.3064 79.7293C86.1128 79.7694 85.9954 79.7915 85.9553 79.7955V79.7975ZM88.562 80.7256C88.582 80.7136 88.6021 80.7045 88.6201 80.7005L90.5536 80.1778L89.1991 81.5112C89.1329 81.5654 89.1028 81.5905 89.1078 81.5875C89.0355 81.6316 88.9593 81.5865 88.878 81.453L88.587 80.9755C88.5088 80.847 88.5007 80.7637 88.562 80.7266V80.7256ZM93.0268 87.0256C93.2104 86.9654 93.3258 86.9202 93.3729 86.8921V86.8881C93.5114 86.8108 93.5625 86.7145 93.5244 86.6001C93.5094 86.554 93.4773 86.4908 93.4281 86.4085C93.3789 86.3272 93.3458 86.26 93.3288 86.2088C93.2846 86.0774 93.3027 85.949 93.3819 85.8246C93.4612 85.7001 93.5816 85.6119 93.7411 85.5587C94.1585 85.4212 94.4365 85.5627 94.5769 85.9861C94.6201 86.1175 94.6793 86.3333 94.7525 86.6323C94.8639 87.0838 94.9662 87.45 95.0585 87.7299C95.1237 87.9246 95.198 88.1413 95.2833 88.3791C95.3425 88.5366 95.4538 88.8547 95.6184 89.3333C95.6826 89.5279 95.7669 89.7637 95.8712 90.0396L96.0839 90.5403C96.112 90.6075 96.1251 90.6346 96.1211 90.6236C96.2154 90.9095 96.1371 91.0941 95.8853 91.1774C95.7829 91.2115 95.6646 91.2376 95.5311 91.2567C95.3314 91.2848 95.1719 91.3179 95.0515 91.358C94.9602 91.3881 94.8308 91.4483 94.6642 91.5386C94.4977 91.6289 94.3682 91.6891 94.2769 91.7192C94.0773 91.7854 93.8946 91.7794 93.7291 91.7011C93.5645 91.6229 93.4492 91.4864 93.3849 91.2918C93.3207 91.0981 93.3328 90.9246 93.4221 90.771C93.5114 90.6185 93.6609 90.5072 93.8726 90.4369C93.9358 90.4169 94.0482 90.3918 94.2097 90.3637C94.3291 90.3426 94.4204 90.3226 94.4836 90.3015C94.6773 90.2373 94.7274 90.0627 94.6331 89.7767L94.3241 88.8426C94.2508 88.6199 94.1766 88.4874 94.1023 88.4453C94.0281 88.4032 93.8706 88.4222 93.6308 88.5015L93.2274 88.6349C93.0498 88.6931 92.9866 88.7995 93.0378 88.954C93.1181 89.1938 93.2405 89.2871 93.406 89.2319C93.4231 89.2259 93.4763 89.2028 93.5635 89.1607L93.5705 89.1582L93.5958 89.1494C93.6064 89.1457 93.6184 89.1418 93.6318 89.1376C93.6415 89.1322 93.65 89.1276 93.6575 89.1237L93.6689 89.118L93.6751 89.1151L93.6819 89.1122L93.689 89.1095C93.9117 89.0353 94.0672 89.1326 94.1565 89.4015C94.2599 89.7155 94.1636 89.9222 93.8666 90.0205C93.8094 90.0386 93.7161 90.0637 93.5866 90.0938C93.4562 90.1239 93.2916 90.1721 93.092 90.2383C92.9776 90.2764 92.808 90.3446 92.5843 90.444C92.3595 90.5433 92.191 90.6115 92.0766 90.6496C91.7284 90.765 91.5047 90.6737 91.4064 90.3767C91.306 90.0737 91.4164 89.87 91.7365 89.7637C91.7475 89.7607 91.7656 89.7577 91.7906 89.7557C91.8014 89.7519 91.8109 89.7489 91.8195 89.7462L91.8338 89.7416L91.9281 89.7105C92.0706 89.6634 92.1067 89.5309 92.0345 89.3142C91.9983 89.2058 91.9612 89.1406 91.9221 89.1185C91.8829 89.0965 91.8147 89.1015 91.7174 89.1336L91.2197 89.2981L90.9308 89.4035C90.8395 89.4336 90.7712 89.4657 90.7251 89.4998C90.6368 89.561 90.6137 89.6543 90.6559 89.7797C90.6759 89.843 90.7161 89.9312 90.7763 90.0446C90.8354 90.159 90.8756 90.2463 90.8967 90.3095C91.008 90.6466 90.8696 90.8794 90.4813 91.0078C90.2987 91.069 90.1321 91.059 89.9816 90.9787C89.8311 90.8975 89.7237 90.761 89.6595 90.5664C89.6104 90.4179 89.5522 90.1921 89.4829 89.8881C89.4147 89.5841 89.3555 89.3583 89.3064 89.2098C89.21 88.9179 89.1248 88.6891 89.0505 88.5236C88.8799 88.1423 88.7866 87.9296 88.7716 87.8834C88.7104 87.6998 88.7194 87.5343 88.7967 87.3848C88.8739 87.2353 89.0074 87.1289 89.196 87.0667C89.3625 87.0115 89.512 87.0115 89.6475 87.0647C89.7829 87.1179 89.8732 87.2132 89.9184 87.3506C89.9334 87.3968 89.9465 87.468 89.9565 87.5664C89.9666 87.6637 89.9786 87.7329 89.9916 87.7731C90.0298 87.8874 90.1271 87.9346 90.2856 87.9135C90.3468 87.9055 90.4692 87.8714 90.6518 87.8112L93.0268 87.0256ZM95.6505 94.64C95.6575 94.6942 95.6776 94.7655 95.7107 94.8548C95.7438 94.9441 95.7639 95.0133 95.7699 95.0614C95.786 95.1808 95.7177 95.2651 95.5662 95.3163C95.514 95.3354 95.3926 95.3574 95.202 95.3825L92.7217 95.7096C92.5311 95.7347 92.4047 95.7457 92.3435 95.7417C92.184 95.7327 92.0967 95.6675 92.0816 95.5491C92.0756 95.5009 92.0766 95.4297 92.0856 95.3344C92.0947 95.239 92.0957 95.1678 92.0896 95.1196C92.0706 94.9762 92.0003 94.8658 91.8769 94.7875C91.7545 94.7093 91.606 94.6822 91.4335 94.7053C91.2368 94.7313 91.0863 94.8116 90.9829 94.9471C90.8796 95.0825 90.8405 95.2451 90.8656 95.4367C90.8796 95.5441 90.9278 95.7718 91.01 96.119C91.0783 96.4069 91.1304 96.6859 91.1656 96.9548C91.1886 97.1273 91.2007 97.2869 91.2017 97.4324L91.2047 98.0063C91.2007 98.0253 91.2017 98.0524 91.2067 98.0875C91.2308 98.2661 91.312 98.4056 91.4535 98.5059C91.595 98.6063 91.7595 98.6434 91.9512 98.6183C92.1187 98.5962 92.2522 98.531 92.3535 98.4236C92.4549 98.3163 92.496 98.1939 92.4779 98.0564C92.4719 98.0083 92.4518 97.938 92.4187 97.8457C92.3856 97.7534 92.3656 97.6832 92.3595 97.635C92.3385 97.4735 92.5301 97.3661 92.9365 97.313L95.4167 96.9859C95.8161 96.9327 96.0268 96.9869 96.0488 97.1484C96.0549 97.1966 96.0538 97.2688 96.0458 97.3671C96.0378 97.4655 96.0368 97.5387 96.0428 97.5859C96.0609 97.7233 96.1331 97.8307 96.2585 97.9079C96.3839 97.9852 96.5304 98.0133 96.698 97.9912C97.1334 97.934 97.3231 97.6872 97.2649 97.2517C97.2518 97.1504 97.2097 96.9447 97.1385 96.6357C97.0672 96.3267 97.0211 96.0879 96.999 95.9213C96.9719 95.7126 96.9548 95.4959 96.9498 95.2722C96.9428 94.939 96.9328 94.7283 96.9207 94.638C96.8946 94.4414 96.8164 94.2919 96.6839 94.1915C96.5525 94.0902 96.3849 94.0531 96.1823 94.0802C96.0147 94.1022 95.8813 94.1665 95.7799 94.2748C95.6786 94.3822 95.6375 94.5046 95.6555 94.6421L95.6505 94.64ZM96.6398 103.02C97.0332 103.19 97.275 103.369 97.3653 103.556L97.3613 103.555C97.4184 103.691 97.4325 103.985 97.4034 104.436C97.3713 104.94 97.3181 105.256 97.2469 105.385C97.1756 105.512 96.993 105.609 96.6991 105.675L92.785 106.578C92.472 106.647 92.3124 106.742 92.3044 106.863C92.3024 106.899 92.3074 106.962 92.3195 107.053L92.3134 107.153C92.2914 107.489 92.0817 107.644 91.6853 107.618C91.4877 107.605 91.3322 107.534 91.2198 107.406C91.1074 107.278 91.0582 107.118 91.0703 106.926C91.0763 106.842 91.0924 106.73 91.1195 106.594C91.1606 106.428 91.1827 106.318 91.1867 106.264C91.2067 106.132 91.2238 105.962 91.2378 105.751C91.2529 105.523 91.2569 105.37 91.2499 105.29C91.2218 104.981 91.2108 104.788 91.2158 104.709C91.2258 104.547 91.296 104.417 91.4265 104.32C91.5569 104.223 91.7144 104.181 91.9011 104.193C92.2562 104.216 92.4258 104.341 92.4108 104.57C92.4088 104.6 92.4017 104.645 92.3887 104.704C92.3756 104.764 92.3686 104.809 92.3666 104.839C92.3586 104.953 92.4178 105.014 92.5442 105.023C92.7067 105.034 92.8442 105.009 92.9566 104.95C93.069 104.891 93.1281 104.811 93.1352 104.708L93.2134 103.51C93.2365 103.167 93.0429 102.984 92.6345 102.957C92.5382 102.95 92.487 102.998 92.48 103.1C92.478 103.13 92.48 103.176 92.485 103.237C92.49 103.298 92.492 103.343 92.49 103.373C92.475 103.596 92.2904 103.695 91.9362 103.672C91.7435 103.66 91.591 103.599 91.4776 103.488C91.3643 103.378 91.3131 103.24 91.3241 103.071C91.3292 102.987 91.3623 102.802 91.4235 102.516C91.4506 102.392 91.4706 102.214 91.4857 101.986C91.5017 101.74 91.5057 101.547 91.4967 101.407C91.4756 101.086 91.4666 100.896 91.4706 100.836C91.4827 100.65 91.5499 100.501 91.6713 100.392C91.7937 100.282 91.9472 100.234 92.1338 100.246C92.5542 100.273 92.7549 100.446 92.7338 100.764C92.7308 100.8 92.7228 100.858 92.7087 100.935C92.6947 101.012 92.6857 101.069 92.6837 101.105C92.6756 101.22 92.7328 101.317 92.8542 101.397C92.8894 101.417 92.9977 101.467 93.1793 101.545L96.6398 103.02ZM94.4054 104.674C94.3994 104.674 94.4385 104.67 94.5238 104.664H94.5228L96.398 104.352L94.5148 103.668C94.4977 103.661 94.4766 103.657 94.4526 103.655C94.3813 103.65 94.3402 103.722 94.3302 103.873L94.294 104.432C94.284 104.588 94.3211 104.669 94.4054 104.674ZM94.8157 115.049C94.6632 114.977 94.5157 114.959 94.3722 114.994C94.2287 115.029 94.1274 115.109 94.0682 115.235C94.0451 115.284 94.023 115.355 94.002 115.448C93.9809 115.542 93.9598 115.61 93.9398 115.654C93.8886 115.762 93.7853 115.797 93.6307 115.757C93.5766 115.745 93.4622 115.697 93.2886 115.615L91.0281 114.543C90.8535 114.461 90.7421 114.401 90.693 114.365C90.5645 114.27 90.5264 114.169 90.5776 114.06C90.5986 114.016 90.6378 113.956 90.697 113.881C90.7562 113.806 90.7963 113.747 90.8164 113.702C90.8786 113.572 90.8786 113.441 90.8184 113.308C90.7572 113.176 90.6488 113.072 90.4903 112.998C90.3157 112.916 90.1461 112.902 89.9806 112.956C89.815 113.01 89.6916 113.122 89.6124 113.291L89.4378 113.828C89.3946 113.96 89.3294 114.12 89.2421 114.304C89.1729 114.451 89.1047 114.579 89.0404 114.689C89.0261 114.71 88.998 114.753 88.9562 114.816L88.8639 114.955C88.7906 115.066 88.7364 115.16 88.7003 115.237C88.623 115.4 88.615 115.556 88.6782 115.705C88.7404 115.855 88.8639 115.973 89.0495 116.061C89.3816 116.219 89.5993 116.189 89.7016 115.971C89.7167 115.938 89.7257 115.913 89.7287 115.894L89.7518 115.845L89.7542 115.833C89.7584 115.815 89.7626 115.801 89.7669 115.791C89.7879 115.748 89.81 115.722 89.8341 115.713C89.8903 115.68 90.0458 115.723 90.3016 115.845L93.3779 117.303L88.7916 116.459C88.4425 116.393 88.2167 116.47 88.1133 116.686L87.8655 117.208C87.7602 117.431 87.8575 117.674 88.1595 117.938L91.6361 120.975L88.5598 119.516C88.4294 119.454 88.3381 119.407 88.2859 119.376C88.1736 119.303 88.1384 119.223 88.1796 119.137C88.1826 119.132 88.1916 119.118 88.2067 119.099C88.2167 119.077 88.2257 119.058 88.2338 119.042C88.2468 119.028 88.2608 119.005 88.2769 118.973C88.3822 118.75 88.2669 118.559 87.9297 118.398C87.7501 118.313 87.5826 118.295 87.4261 118.344C87.2695 118.393 87.1522 118.499 87.0749 118.662C87.0257 118.765 86.9675 118.924 86.8993 119.139C86.8311 119.352 86.7729 119.512 86.7237 119.615C86.6465 119.779 86.5582 119.936 86.4588 120.09C86.3103 120.319 86.211 120.485 86.1618 120.588C86.0766 120.768 86.0615 120.938 86.1157 121.096C86.1699 121.255 86.2903 121.378 86.4749 121.466C86.6274 121.539 86.7759 121.556 86.9204 121.517C87.0649 121.479 87.1672 121.398 87.2264 121.273C87.2475 121.23 87.2685 121.159 87.2906 121.063C87.3127 120.967 87.3348 120.897 87.3548 120.853C87.4221 120.712 87.6398 120.729 88.01 120.904L90.2705 121.976C90.6348 122.149 90.7822 122.308 90.713 122.456C90.695 122.494 90.6558 122.552 90.5956 122.63C90.5354 122.708 90.4933 122.772 90.4702 122.821C90.411 122.946 90.413 123.075 90.4762 123.208C90.5394 123.342 90.6478 123.444 90.7993 123.516C90.9839 123.603 91.1555 123.618 91.313 123.56C91.4705 123.502 91.5919 123.383 91.6772 123.203C91.7103 123.132 91.7565 123.021 91.8157 122.869C92.0174 122.331 92.1488 121.997 92.211 121.867C92.2702 121.741 92.3715 121.563 92.515 121.331C92.6585 121.099 92.7578 120.923 92.815 120.803C92.8792 120.667 92.8843 120.541 92.8291 120.425C92.7739 120.308 92.6414 120.164 92.4297 119.99L89.9103 117.927L93.2093 118.661C93.4391 118.71 93.5996 118.723 93.6909 118.699C93.7822 118.676 93.8595 118.596 93.9247 118.46C93.9739 118.357 94.0301 118.21 94.0933 118.021C94.1866 117.739 94.2919 117.475 94.4083 117.23C94.4806 117.078 94.602 116.856 94.7746 116.564C94.9461 116.272 95.0625 116.061 95.1247 115.931C95.3154 115.529 95.212 115.233 94.8157 115.045V115.049ZM85.3402 124.066C85.3552 124.103 85.4124 124.208 85.5097 124.38L85.5107 124.375L87.38 127.639C87.5907 128.012 87.6759 128.3 87.6348 128.504C87.5987 128.647 87.4321 128.89 87.1372 129.231C86.806 129.614 86.5733 129.834 86.4388 129.893C86.3044 129.953 86.1007 129.92 85.8268 129.794L82.1606 128.153C81.8696 128.02 81.685 127.999 81.6057 128.09C81.5826 128.119 81.5475 128.172 81.5024 128.252L81.4372 128.327C81.2164 128.582 80.9566 128.58 80.6555 128.32C80.505 128.191 80.4238 128.04 80.4117 127.871C80.3997 127.7 80.4569 127.543 80.5823 127.397C80.6375 127.334 80.7168 127.256 80.8211 127.162C80.9545 127.055 81.0388 126.981 81.0739 126.94C81.1693 126.847 81.2867 126.722 81.4241 126.562C81.5746 126.389 81.6699 126.269 81.7121 126.202C81.8766 125.938 81.984 125.777 82.0351 125.718C82.1405 125.595 82.2749 125.534 82.4375 125.535C82.6 125.536 82.7515 125.597 82.893 125.72C83.1619 125.951 83.2211 126.154 83.0716 126.328C83.0515 126.35 83.0184 126.381 82.9723 126.421C82.9261 126.46 82.893 126.491 82.8729 126.514C82.7977 126.601 82.8087 126.686 82.904 126.768C83.0265 126.874 83.1509 126.938 83.2763 126.959C83.4017 126.979 83.497 126.951 83.5642 126.873L84.3499 125.965C84.5746 125.707 84.5315 125.443 84.2224 125.175C84.1492 125.113 84.08 125.12 84.0127 125.197C83.9927 125.22 83.9666 125.257 83.9345 125.308C83.9024 125.359 83.8763 125.397 83.8562 125.42C83.7107 125.588 83.504 125.557 83.2351 125.324C83.0897 125.198 83.0044 125.057 82.9803 124.901C82.9562 124.744 82.9994 124.603 83.1097 124.475C83.1649 124.411 83.3034 124.284 83.5241 124.093C83.6204 124.009 83.7438 123.88 83.8933 123.708C84.0549 123.521 84.1733 123.37 84.2505 123.253C84.4271 122.984 84.5355 122.827 84.5746 122.782C84.697 122.64 84.8395 122.563 85.003 122.549C85.1666 122.535 85.3181 122.589 85.4596 122.712C85.7786 122.987 85.8338 123.245 85.6251 123.487C85.602 123.515 85.5609 123.555 85.5027 123.609C85.4445 123.663 85.4044 123.703 85.3803 123.73C85.305 123.816 85.292 123.929 85.3402 124.066ZM84.5987 127.615C84.5937 127.611 84.6278 127.632 84.699 127.678H84.7L86.3836 128.561L85.295 126.879C85.285 126.863 85.2709 126.847 85.2529 126.831C85.1977 126.784 85.1214 126.818 85.0231 126.932L84.6569 127.355C84.5545 127.473 84.5345 127.56 84.5987 127.615ZM81.8706 132.978C81.7282 132.941 81.6007 132.963 81.4884 133.045C81.4442 133.077 81.391 133.129 81.3288 133.202C81.2656 133.274 81.2155 133.324 81.1763 133.352C81.079 133.423 80.9726 133.404 80.8552 133.296C80.8131 133.259 80.7359 133.163 80.6215 133.008L79.1435 130.99C79.0302 130.835 78.9599 130.729 78.9338 130.673C78.8656 130.529 78.8797 130.421 78.977 130.35C79.0111 130.325 79.0733 130.293 79.1636 130.253C79.2539 130.213 79.3181 130.178 79.3573 130.15C79.4736 130.065 79.5369 129.95 79.5459 129.805C79.5549 129.66 79.5088 129.517 79.4054 129.377C79.288 129.216 79.1466 129.122 78.981 129.095C78.8155 129.067 78.6549 129.11 78.4994 129.224C78.4603 129.252 78.2857 129.407 77.9757 129.686C77.8402 129.807 77.6496 129.959 77.4017 130.14C77.2753 130.233 77.0787 130.358 76.8108 130.518C76.5429 130.676 76.3462 130.803 76.2198 130.895C76.0542 131.015 75.9569 131.16 75.9268 131.327C75.8967 131.495 75.9379 131.656 76.0522 131.812C76.294 132.142 76.5579 132.202 76.8449 131.992C76.8981 131.953 76.9703 131.888 77.0596 131.796C77.1489 131.705 77.2211 131.638 77.2743 131.599C77.3817 131.521 77.477 131.514 77.5613 131.579C77.6074 131.612 77.6596 131.667 77.7168 131.746L77.9054 131.988L78.2145 132.411C78.2747 132.493 78.3007 132.556 78.2917 132.601C78.2827 132.645 78.2325 132.7 78.1402 132.768C77.9556 132.904 77.8191 132.911 77.7298 132.789L77.6716 132.709C77.6646 132.699 77.6556 132.687 77.6445 132.673C77.6355 132.65 77.6265 132.634 77.6195 132.624C77.4198 132.352 77.192 132.31 76.9342 132.498C76.6813 132.683 76.6643 132.924 76.881 133.22C76.9522 133.317 77.0696 133.456 77.2332 133.639C77.3967 133.822 77.5141 133.961 77.5854 134.058C77.7098 134.228 77.8061 134.37 77.8753 134.485C77.9436 134.599 77.9957 134.68 78.0318 134.729C78.2165 134.981 78.4432 135.01 78.7101 134.814C78.9389 134.646 78.983 134.469 78.8446 134.279C78.8375 134.269 78.8225 134.254 78.8004 134.233C78.7823 134.209 78.7683 134.189 78.7573 134.175C78.691 134.105 78.6519 134.061 78.6409 134.047C78.5375 133.907 78.5877 133.761 78.7924 133.612C78.9238 133.516 79.0442 133.543 79.1546 133.693L79.4054 134.035C79.5549 134.239 79.6211 134.383 79.6041 134.467C79.587 134.55 79.4837 134.661 79.294 134.8L78.4994 135.382C78.2566 135.559 78.075 135.565 77.9536 135.401C77.9145 135.348 77.8663 135.266 77.8101 135.159C77.7338 135.014 77.6757 134.914 77.6365 134.861C77.5051 134.681 77.3526 134.573 77.18 134.535C77.0074 134.498 76.8379 134.539 76.6733 134.66C76.5078 134.781 76.4134 134.932 76.3904 135.114C76.3663 135.295 76.4165 135.471 76.5419 135.642C76.5991 135.719 76.6954 135.823 76.8328 135.955C76.9703 136.085 77.0666 136.19 77.1238 136.268C77.1991 136.37 77.2803 136.512 77.3686 136.693C77.4278 136.815 77.489 136.919 77.5532 137.006C77.7098 137.22 77.9094 137.238 78.1522 137.06C78.1422 137.067 78.1653 137.047 78.2195 137L78.6298 136.644C78.8606 136.46 79.0593 136.308 79.2238 136.186C79.6282 135.882 79.8971 135.679 80.0295 135.574C80.2302 135.42 80.4128 135.282 80.5773 135.162C80.8151 134.987 81.1322 134.778 81.5275 134.534C81.7894 134.371 81.976 134.25 82.0874 134.169C82.4466 133.906 82.4967 133.597 82.2369 133.242C82.1375 133.105 82.0161 133.019 81.8736 132.982L81.8706 132.978ZM74.189 137.846C74.3135 137.786 74.4429 137.788 74.5763 137.851H74.5753C74.7088 137.914 74.8121 138.022 74.8844 138.174C74.9727 138.359 74.9887 138.529 74.9335 138.686C74.8783 138.842 74.761 138.964 74.5814 139.049C74.5001 139.088 74.3014 139.162 73.9874 139.272C73.7767 139.346 73.576 139.428 73.3854 139.519C73.2329 139.591 73.0202 139.708 72.7482 139.872C72.4763 140.035 72.2937 140.139 72.2014 140.183C71.8041 140.371 71.5111 140.267 71.3225 139.871C71.2503 139.718 71.2312 139.571 71.2663 139.427C71.3014 139.284 71.3807 139.182 71.5061 139.123C71.5492 139.103 71.6185 139.081 71.7148 139.059C71.8111 139.037 71.8814 139.016 71.9245 138.995C72.071 138.925 72.0579 138.708 71.8844 138.344L70.8088 136.085C70.6322 135.716 70.4707 135.565 70.3242 135.636C70.281 135.656 70.2208 135.697 70.1426 135.757C70.0653 135.817 70.0041 135.857 69.961 135.878C69.8365 135.939 69.7071 135.937 69.5737 135.873C69.4402 135.81 69.3369 135.703 69.2646 135.55C69.1814 135.377 69.1653 135.207 69.2175 135.043C69.2697 134.878 69.377 134.757 69.5396 134.679C69.5727 134.663 69.5978 134.654 69.6168 134.652L70.1616 134.473C70.3001 134.427 70.4476 134.366 70.6051 134.291C70.8489 134.175 71.0988 134.039 71.3516 133.886C71.6566 133.7 71.8573 133.584 71.9556 133.538C72.1292 133.454 72.2967 133.441 72.4573 133.499C72.6178 133.555 72.7412 133.673 72.8265 133.853C72.9018 134.01 72.9208 134.16 72.8847 134.3C72.8486 134.441 72.7653 134.542 72.6349 134.604C72.5917 134.625 72.5235 134.646 72.4302 134.667C72.3379 134.688 72.2687 134.709 72.2255 134.73C72.1171 134.782 72.083 134.884 72.1232 135.039C72.1382 135.098 72.1864 135.215 72.2697 135.389L73.3452 137.647C73.4285 137.821 73.4867 137.929 73.5208 137.973C73.6151 138.102 73.7175 138.141 73.8258 138.089C73.869 138.069 73.9282 138.029 74.0034 137.969C74.0777 137.91 74.1399 137.869 74.189 137.846ZM67.4957 135.834C67.3543 135.752 67.1927 135.733 67.0121 135.778C66.9539 135.793 66.7753 135.859 66.4753 135.978C66.3459 136.029 66.1603 136.084 65.9215 136.144C65.6998 136.199 65.5252 136.234 65.3977 136.248C65.1068 136.277 64.9212 136.302 64.8389 136.322C64.6753 136.363 64.5589 136.453 64.4887 136.596C64.4185 136.737 64.4064 136.902 64.4536 137.088C64.5399 137.433 64.6904 137.578 64.9071 137.524C64.9362 137.517 64.9794 137.501 65.0355 137.478C65.0917 137.455 65.1349 137.439 65.164 137.432C65.2633 137.406 65.3245 137.441 65.3476 137.535C65.4469 137.932 65.3295 138.172 64.9974 138.255L63.8325 138.546C63.7332 138.571 63.6389 138.539 63.5476 138.45C63.4573 138.361 63.3921 138.237 63.3529 138.08C63.3218 137.957 63.363 137.882 63.4733 137.854C63.5024 137.847 63.5476 137.84 63.6078 137.834C63.668 137.828 63.7131 137.822 63.7422 137.814C63.964 137.759 64.0322 137.558 63.9459 137.214C63.9008 137.032 63.8125 136.895 63.68 136.8C63.5476 136.706 63.4031 136.679 63.2456 136.718C63.1693 136.737 62.9887 136.807 62.7028 136.928C62.6295 136.958 62.482 137.001 62.2603 137.057C62.0556 137.108 61.8881 137.144 61.7566 137.165C61.7044 137.178 61.5921 137.19 61.4215 137.202C61.283 137.218 61.1727 137.236 61.0904 137.256C60.9038 137.303 60.7663 137.398 60.679 137.545C60.5917 137.69 60.5717 137.86 60.6198 138.053C60.7161 138.438 60.9278 138.59 61.2549 138.508L61.3513 138.484C61.4345 138.445 61.4937 138.421 61.5289 138.412C61.6462 138.383 61.7847 138.506 61.9472 138.782L64.0011 142.234C64.1526 142.493 64.3011 142.638 64.4446 142.667C64.588 142.696 64.9051 142.65 65.3957 142.527C65.8342 142.417 66.1091 142.314 66.2215 142.217C66.372 142.074 66.4683 141.79 66.5105 141.364L66.8596 137.618C66.8787 137.42 66.8927 137.303 66.9018 137.263C66.9409 137.123 67.0161 137.039 67.1275 137.011C67.1626 137.002 67.2188 136.993 67.2971 136.983C67.3753 136.973 67.4315 136.963 67.4666 136.955C67.7767 136.878 67.88 136.635 67.7777 136.226C67.7325 136.044 67.6392 135.912 67.4977 135.83L67.4957 135.834ZM65.167 141.544L64.2981 139.854C64.266 139.774 64.2509 139.738 64.2519 139.744C64.2319 139.662 64.2971 139.603 64.4486 139.565L64.9914 139.429C65.1379 139.393 65.2192 139.409 65.2372 139.479C65.2432 139.502 65.2452 139.524 65.2442 139.543L65.167 141.544ZM54.0088 137.806H54.5736L54.5666 137.812C54.7522 137.836 54.8957 137.919 54.9991 138.06C55.1024 138.2 55.1415 138.367 55.1165 138.557C55.0944 138.731 55.0302 138.866 54.9228 138.965C54.8165 139.063 54.691 139.103 54.5476 139.084C54.4994 139.077 54.4312 139.058 54.3409 139.025C54.2506 138.992 54.1823 138.972 54.1342 138.966C54.0148 138.95 53.9305 139.018 53.8803 139.169C53.8603 139.228 53.8382 139.353 53.8131 139.544L53.49 142.024C53.4649 142.215 53.4549 142.338 53.4599 142.393C53.47 142.552 53.5342 142.64 53.6536 142.655C53.7017 142.661 53.773 142.66 53.8683 142.651C53.9636 142.642 54.0379 142.641 54.092 142.648C54.2285 142.666 54.3369 142.737 54.4141 142.863C54.4924 142.988 54.5205 143.134 54.4984 143.301C54.4422 143.738 54.1924 143.926 53.7509 143.869C53.6074 143.85 53.3706 143.804 53.0405 143.731C52.7104 143.657 52.4616 143.61 52.294 143.588C52.0252 143.553 51.7422 143.534 51.4452 143.532C51.2445 143.53 51.088 143.522 50.9747 143.507C50.8262 143.487 50.7258 143.438 50.6757 143.358C50.6245 143.279 50.5874 143.123 50.5633 142.889L50.2452 139.524L49.0583 142.557C48.9579 142.811 48.8616 142.981 48.7683 143.069C48.675 143.158 48.5536 143.192 48.4041 143.173C48.2726 143.156 48.075 143.116 47.8101 143.05C47.5452 142.985 47.3446 142.944 47.2071 142.926C47.0646 142.907 46.7064 142.885 46.1325 142.859C45.97 142.85 45.8496 142.84 45.7723 142.83C45.5757 142.803 45.4252 142.724 45.3208 142.593C45.2165 142.46 45.1783 142.293 45.2044 142.09C45.2265 141.924 45.2907 141.789 45.3981 141.688C45.5054 141.586 45.6278 141.544 45.7653 141.562C45.8195 141.569 45.8927 141.589 45.985 141.623C46.0773 141.656 46.1446 141.676 46.1867 141.681C46.3482 141.702 46.4546 141.512 46.5068 141.112L46.8298 138.632C46.883 138.225 46.8318 138.013 46.6763 137.992C46.6292 137.985 46.5559 137.986 46.4576 137.995C46.3593 138.004 46.287 138.005 46.2389 137.998C46.1014 137.98 45.993 137.908 45.9118 137.783C45.8315 137.657 45.8014 137.51 45.8235 137.343C45.8506 137.141 45.9308 136.989 46.0653 136.888C46.2007 136.787 46.3663 136.749 46.5629 136.775C46.6763 136.79 46.865 136.833 47.1288 136.904C47.3054 136.951 47.482 136.986 47.6616 137.009C47.776 137.023 47.9445 137.03 48.1693 137.029C48.394 137.028 48.5636 137.034 48.677 137.049C48.8566 137.072 48.993 137.152 49.0884 137.285C49.1837 137.419 49.2188 137.584 49.1927 137.781C49.1446 138.151 48.9981 138.321 48.7532 138.288C48.7171 138.284 48.691 138.277 48.674 138.269C48.6569 138.267 48.6359 138.264 48.6118 138.261C48.5897 138.252 48.5746 138.246 48.5686 138.246C48.4733 138.233 48.4081 138.291 48.373 138.421C48.3599 138.479 48.3439 138.58 48.3248 138.724L47.8854 142.1L49.7034 137.856C49.8609 137.488 50.0616 137.319 50.3064 137.351L50.8793 137.426C51.1181 137.457 51.2606 137.648 51.3058 138L51.9158 142.624L52.3552 139.248C52.3914 138.968 52.3853 138.806 52.3362 138.763C52.3201 138.742 52.289 138.729 52.2409 138.723C52.2288 138.721 52.2108 138.722 52.1857 138.725C52.1676 138.723 52.1496 138.72 52.1315 138.718C52.1134 138.721 52.0864 138.721 52.0502 138.716C51.8114 138.685 51.7161 138.487 51.7633 138.123C51.7894 137.92 51.8636 137.766 51.987 137.66C52.1104 137.555 52.2609 137.514 52.4405 137.537C52.5248 137.548 52.6312 137.571 52.7596 137.606C52.9241 137.651 53.0265 137.68 53.0676 137.691C53.191 137.721 53.3335 137.745 53.495 137.766C53.6977 137.792 53.8693 137.806 54.0088 137.806ZM43.9944 135.94C43.9392 135.916 43.7566 135.861 43.4465 135.775C43.3121 135.738 43.1315 135.671 42.9037 135.574C42.693 135.485 42.5335 135.407 42.4241 135.342C42.1743 135.19 42.0108 135.098 41.9335 135.065C41.778 134.998 41.6305 135.001 41.489 135.072C41.3476 135.143 41.2392 135.266 41.1639 135.444C41.0255 135.771 41.0586 135.978 41.2633 136.065C41.2914 136.077 41.3345 136.09 41.3937 136.105C41.4529 136.12 41.496 136.134 41.5231 136.145C41.6175 136.185 41.6455 136.25 41.6084 136.338C41.4489 136.715 41.2101 136.837 40.895 136.702L39.7894 136.233C39.695 136.192 39.6389 136.11 39.6198 135.984C39.6017 135.858 39.6238 135.721 39.687 135.571C39.7362 135.455 39.8134 135.419 39.9188 135.464C39.9469 135.476 39.986 135.497 40.0382 135.529C40.0904 135.561 40.1295 135.583 40.1576 135.594C40.3683 135.684 40.5429 135.565 40.6813 135.238C40.7546 135.067 40.7666 134.903 40.7175 134.749C40.6693 134.594 40.57 134.485 40.4205 134.421C40.3482 134.391 40.1616 134.338 39.8606 134.262C39.7843 134.243 39.6399 134.188 39.4302 134.098C39.2365 134.016 39.081 133.944 38.9636 133.881C38.9134 133.86 38.8171 133.802 38.6736 133.708C38.5532 133.637 38.4539 133.586 38.3766 133.553C38.1991 133.477 38.0315 133.471 37.874 133.536C37.7165 133.6 37.5981 133.722 37.5208 133.906C37.3653 134.272 37.4435 134.52 37.7536 134.652L37.8449 134.691C37.9352 134.71 37.9964 134.727 38.0295 134.741C38.1409 134.788 38.177 134.97 38.1409 135.288L37.7014 139.281C37.6663 139.58 37.6974 139.784 37.7937 139.894C37.891 140.004 38.172 140.158 38.6375 140.355C39.0529 140.532 39.3348 140.615 39.4823 140.606C39.689 140.582 39.9368 140.413 40.2278 140.098L42.7613 137.319C42.8947 137.174 42.977 137.087 43.0081 137.061C43.1245 136.973 43.2348 136.952 43.3402 136.996C43.3733 137.01 43.4245 137.037 43.4927 137.075C43.5609 137.114 43.6121 137.141 43.6452 137.155C43.9392 137.279 44.168 137.148 44.3325 136.759C44.4057 136.588 44.4098 136.426 44.3465 136.275C44.2833 136.123 44.1659 136.012 43.9934 135.939L43.9944 135.94ZM40.3492 137.826C40.3402 137.848 40.3292 137.866 40.3161 137.88L39.0489 139.431L39.373 137.558C39.395 137.476 39.4051 137.438 39.4021 137.443C39.4352 137.365 39.5235 137.357 39.668 137.417L40.1837 137.636C40.3221 137.695 40.3773 137.758 40.3492 137.824V137.826ZM35.4078 131.771C35.769 131.981 35.9686 132.101 36.0078 132.129H36.0037C36.1593 132.242 36.2496 132.382 36.2736 132.548C36.2977 132.715 36.2506 132.878 36.1342 133.039C36.0318 133.18 35.9104 133.269 35.769 133.304C35.6285 133.339 35.5001 133.315 35.3827 133.23C35.3435 133.201 35.2914 133.15 35.2262 133.077C35.1609 133.004 35.1108 132.955 35.0767 132.93C34.9793 132.859 34.872 132.877 34.7556 132.987C34.7104 133.028 34.6312 133.127 34.5178 133.283L33.0469 135.305C32.9345 135.461 32.8663 135.564 32.8442 135.615C32.776 135.76 32.791 135.867 32.8884 135.939C32.9275 135.967 32.9907 136 33.079 136.038C33.1673 136.075 33.2325 136.11 33.2767 136.142C33.389 136.224 33.4492 136.338 33.4573 136.485C33.4653 136.633 33.4201 136.774 33.3208 136.911C33.0629 137.266 32.7529 137.313 32.3927 137.051C32.2813 136.97 32.1078 136.829 31.874 136.629C31.5208 136.327 31.2248 136.089 30.986 135.915C30.8215 135.795 30.6339 135.663 30.4262 135.519C30.2867 135.425 30.0098 135.232 29.5974 134.939C29.4318 134.819 29.2262 134.676 28.9803 134.513L28.5158 134.231C28.4575 134.195 28.431 134.18 28.4361 134.184C28.1936 134.007 28.1509 133.811 28.3061 133.598C28.3703 133.51 28.4506 133.42 28.5479 133.327C28.6934 133.187 28.8038 133.067 28.878 132.965C28.9352 132.887 29.0044 132.763 29.0877 132.592C29.171 132.422 29.2412 132.298 29.2974 132.22C29.4218 132.05 29.5743 131.948 29.7539 131.915C29.9345 131.882 30.1071 131.926 30.2726 132.047C30.4382 132.167 30.5295 132.314 30.5466 132.491C30.5636 132.668 30.5074 132.845 30.376 133.026C30.3369 133.079 30.2606 133.164 30.1452 133.282C30.0599 133.369 29.9977 133.439 29.9586 133.492C29.8382 133.658 29.8994 133.83 30.1432 134.006L30.9389 134.585C31.1295 134.724 31.267 134.788 31.3512 134.779C31.4365 134.77 31.5529 134.663 31.7014 134.459L31.9512 134.115C32.0606 133.964 32.0496 133.841 31.9181 133.745C31.7135 133.597 31.5599 133.593 31.4576 133.734C31.4466 133.749 31.4185 133.798 31.3713 133.884C31.3613 133.898 31.3472 133.918 31.3292 133.942C31.3161 133.97 31.3061 133.988 31.2991 133.998C31.1606 134.188 30.977 134.2 30.7482 134.033C30.4803 133.839 30.4392 133.614 30.6228 133.361C30.6579 133.313 30.7201 133.239 30.8074 133.138C30.8947 133.039 31.0011 132.903 31.1245 132.733C31.1947 132.635 31.292 132.481 31.4165 132.269C31.5409 132.058 31.6372 131.903 31.7084 131.806C31.9242 131.509 32.1589 131.453 32.4118 131.636C32.6696 131.824 32.6997 132.054 32.5011 132.327C32.4941 132.336 32.481 132.349 32.4619 132.365L32.4489 132.383L32.4359 132.401L32.3777 132.481C32.2884 132.602 32.3375 132.731 32.5221 132.865C32.6145 132.933 32.6837 132.964 32.7278 132.959C32.772 132.954 32.8242 132.909 32.8844 132.827L33.1924 132.404L33.366 132.15C33.4221 132.072 33.4593 132.005 33.4763 131.951C33.5114 131.85 33.4763 131.762 33.369 131.683C33.3158 131.644 33.2315 131.596 33.1171 131.539C33.0027 131.482 32.9185 131.434 32.8653 131.394C32.5773 131.186 32.5543 130.916 32.7951 130.585C32.9084 130.429 33.0499 130.34 33.2185 130.318C33.387 130.296 33.5546 130.345 33.7201 130.465C33.8476 130.558 34.0272 130.707 34.2599 130.914C34.4937 131.121 34.6733 131.27 34.7997 131.362C35.0486 131.543 35.2512 131.679 35.4078 131.771ZM26.3065 130.517C26.2272 130.463 26.171 130.419 26.1379 130.384C26.0556 130.297 26.0606 130.188 26.1539 130.059C26.1851 130.013 26.2713 129.924 26.4108 129.792L28.2319 128.076C28.3723 127.944 28.4687 127.862 28.5198 127.83C28.6543 127.744 28.7626 127.745 28.8459 127.833C28.879 127.868 28.9202 127.926 28.9683 128.009C29.0175 128.091 29.0576 128.151 29.0907 128.186C29.1901 128.291 29.3125 128.339 29.457 128.331C29.6024 128.323 29.7379 128.259 29.8653 128.139C30.0098 128.002 30.085 127.85 30.0901 127.679C30.0951 127.509 30.0319 127.354 29.8994 127.214C29.8252 127.134 29.6526 126.979 29.3827 126.745C29.159 126.551 28.9533 126.356 28.7677 126.158C28.6483 126.031 28.5449 125.908 28.4596 125.791L28.1225 125.327C28.1145 125.31 28.0984 125.288 28.0733 125.262C27.9499 125.131 27.8014 125.065 27.6289 125.066C27.4563 125.067 27.2998 125.135 27.1593 125.266C27.0369 125.381 26.9657 125.513 26.9466 125.659C26.9275 125.806 26.9657 125.929 27.06 126.03C27.0931 126.065 27.1503 126.11 27.2315 126.166C27.3128 126.221 27.37 126.267 27.4031 126.302C27.5145 126.421 27.4212 126.621 27.1232 126.901L25.3021 128.617C25.0091 128.894 24.8065 128.973 24.6951 128.855C24.662 128.82 24.6198 128.76 24.5697 128.675C24.5195 128.591 24.4774 128.531 24.4443 128.496C24.3489 128.395 24.2285 128.35 24.081 128.36C23.9335 128.37 23.7991 128.434 23.6757 128.55C23.3556 128.851 23.3466 129.162 23.6476 129.482C23.7178 129.556 23.8723 129.699 24.1111 129.908C24.3499 130.117 24.5265 130.283 24.6429 130.405C24.7874 130.559 24.9269 130.724 25.0623 130.903C25.263 131.169 25.3944 131.334 25.4566 131.4C25.5931 131.545 25.7436 131.62 25.9101 131.625C26.0757 131.63 26.2332 131.562 26.3827 131.423C26.5051 131.307 26.5764 131.176 26.5954 131.029C26.6145 130.883 26.5774 130.759 26.482 130.659C26.4449 130.62 26.3867 130.573 26.3075 130.52L26.3065 130.517ZM25.1084 123.68C25.0482 123.582 24.9449 123.536 24.7994 123.542L24.8004 123.543C24.7603 123.546 24.6439 123.57 24.4502 123.612L20.78 124.434C20.3606 124.525 20.0606 124.521 19.878 124.422C19.7516 124.345 19.569 124.115 19.3302 123.732C19.0623 123.303 18.9208 123.015 18.9037 122.87C18.8867 122.723 18.979 122.539 19.1797 122.314L21.8315 119.297C22.0442 119.058 22.1195 118.888 22.0553 118.785C22.0362 118.754 21.9951 118.706 21.9318 118.639L21.8797 118.555C21.7011 118.269 21.7803 118.021 22.1175 117.81C22.286 117.705 22.4536 117.672 22.6191 117.71C22.7847 117.749 22.9181 117.849 23.0205 118.013C23.0646 118.085 23.1158 118.183 23.174 118.311C23.2372 118.469 23.2833 118.572 23.3124 118.618C23.3726 118.737 23.4579 118.886 23.5693 119.064C23.6897 119.259 23.777 119.385 23.8282 119.445C24.0318 119.68 24.1542 119.831 24.1954 119.897C24.2807 120.034 24.2997 120.181 24.2506 120.335C24.2014 120.49 24.0981 120.616 23.9395 120.716C23.6375 120.903 23.4268 120.901 23.3054 120.707C23.2894 120.681 23.2693 120.64 23.2452 120.584C23.2211 120.528 23.2011 120.488 23.185 120.462C23.1248 120.365 23.0405 120.35 22.9332 120.417C22.7957 120.502 22.6984 120.602 22.6412 120.716C22.584 120.83 22.583 120.929 22.6372 121.017L23.2733 122.035C23.4549 122.326 23.7198 122.363 24.067 122.146C24.1482 122.095 24.1623 122.027 24.1081 121.94C24.092 121.915 24.0639 121.879 24.0248 121.832C23.9857 121.786 23.9576 121.751 23.9415 121.725C23.8231 121.535 23.9155 121.347 24.2165 121.159C24.38 121.057 24.5395 121.018 24.6961 121.041C24.8526 121.064 24.975 121.147 25.0643 121.29C25.1094 121.362 25.1897 121.53 25.3071 121.798C25.3583 121.916 25.4445 122.071 25.566 122.265C25.6964 122.474 25.8068 122.632 25.895 122.74C26.0997 122.989 26.2181 123.139 26.2502 123.19C26.3496 123.349 26.3817 123.507 26.3466 123.668C26.3114 123.827 26.2151 123.957 26.0566 124.056C25.6994 124.279 25.4355 124.256 25.267 123.985C25.2479 123.955 25.2218 123.903 25.1877 123.832C25.1546 123.761 25.1275 123.711 25.1084 123.68ZM22.1245 122.668C22.1425 122.663 22.1626 122.655 22.1827 122.642V122.643C22.2439 122.605 22.2338 122.522 22.1546 122.394L21.8586 121.92C21.7753 121.787 21.6981 121.742 21.6268 121.787C21.6308 121.785 21.6131 121.8 21.574 121.833L21.5365 121.865L20.1961 123.212L22.1245 122.668ZM19.2609 111.927C19.27 111.974 19.272 112.046 19.268 112.141C19.264 112.237 19.266 112.309 19.275 112.356C19.3011 112.499 19.3773 112.605 19.5028 112.677C19.6292 112.749 19.7777 112.769 19.9502 112.738C20.1399 112.704 20.2864 112.616 20.3887 112.476C20.492 112.334 20.5262 112.173 20.4931 111.989L20.3215 111.451C20.2793 111.318 20.2392 111.151 20.2031 110.949C20.174 110.79 20.1539 110.646 20.1429 110.52C20.1419 110.478 20.1379 110.371 20.1308 110.201C20.1248 110.067 20.1148 109.959 20.0997 109.876C20.0676 109.698 19.9824 109.567 19.8449 109.482C19.7074 109.396 19.5379 109.372 19.3362 109.409C18.975 109.475 18.8155 109.626 18.8586 109.863C18.8646 109.898 18.8727 109.924 18.8817 109.941C18.8847 109.959 18.8877 109.976 18.8917 109.994C18.9017 110.017 18.9078 110.034 18.9108 110.046C18.9198 110.094 18.9168 110.128 18.9017 110.149C18.8757 110.209 18.7242 110.264 18.4452 110.314L15.0961 110.923L19.3141 108.936C19.6352 108.785 19.7747 108.592 19.7315 108.355L19.6282 107.786C19.584 107.543 19.3623 107.403 18.964 107.365L14.3686 106.926L17.7178 106.317C17.8603 106.291 17.9616 106.276 18.0218 106.271C18.1553 106.265 18.2305 106.309 18.2476 106.404C18.2482 106.408 18.248 106.415 18.2479 106.425C18.2477 106.432 18.2476 106.441 18.2476 106.45L18.2507 106.468L18.2539 106.486L18.2586 106.513C18.2556 106.532 18.2586 106.559 18.2646 106.594C18.3088 106.837 18.5145 106.925 18.8817 106.858C19.0773 106.823 19.2238 106.739 19.3222 106.608C19.4205 106.477 19.4536 106.322 19.4215 106.144C19.4014 106.032 19.3563 105.868 19.287 105.655C19.2178 105.441 19.1727 105.278 19.1526 105.165C19.1205 104.988 19.0994 104.808 19.0914 104.625C19.0783 104.352 19.0623 104.16 19.0412 104.047C19.0061 103.852 18.9198 103.705 18.7824 103.608C18.6449 103.511 18.4763 103.481 18.2747 103.517C18.1091 103.547 17.9787 103.62 17.8834 103.734C17.788 103.85 17.7529 103.975 17.778 104.112C17.787 104.159 17.8101 104.228 17.8482 104.319C17.8864 104.411 17.9094 104.48 17.9185 104.527C17.9466 104.682 17.7589 104.795 17.3566 104.868L14.8954 105.316C14.4991 105.388 14.2854 105.344 14.2563 105.184C14.2492 105.143 14.2472 105.073 14.2502 104.975C14.2543 104.876 14.2502 104.8 14.2412 104.747C14.2161 104.61 14.1399 104.507 14.0104 104.436C13.881 104.364 13.7335 104.343 13.568 104.374C13.3663 104.41 13.2188 104.498 13.1245 104.637C13.0302 104.777 13.0011 104.944 13.0372 105.14C13.0513 105.217 13.0783 105.335 13.1195 105.492C13.269 106.046 13.3573 106.394 13.3824 106.537C13.4074 106.673 13.4295 106.877 13.4476 107.149C13.4666 107.421 13.4877 107.622 13.5118 107.752C13.5389 107.9 13.6081 108.005 13.7205 108.067C13.8329 108.129 14.0255 108.169 14.2974 108.186L17.5472 108.394L14.4389 109.721C14.2232 109.816 14.0857 109.899 14.0255 109.971C13.9653 110.043 13.9482 110.154 13.9753 110.301C13.9954 110.414 14.0355 110.565 14.0947 110.757C14.183 111.041 14.2513 111.316 14.2994 111.583C14.3295 111.748 14.3596 112 14.3907 112.337C14.4218 112.674 14.4499 112.914 14.476 113.055C14.5553 113.494 14.8121 113.674 15.2446 113.595C15.4101 113.565 15.5416 113.494 15.6369 113.382C15.7332 113.269 15.7683 113.145 15.7432 113.009C15.7332 112.956 15.7101 112.886 15.672 112.798C15.6349 112.709 15.6118 112.642 15.6028 112.595C15.5817 112.477 15.6449 112.388 15.7934 112.331C15.8446 112.31 15.965 112.282 16.1546 112.247L18.6158 111.799C18.8054 111.765 18.9308 111.748 18.9921 111.749C19.1516 111.751 19.2419 111.81 19.264 111.929L19.2609 111.927ZM17.3566 100.589L13.9312 99.0347L13.9322 99.0367C13.5429 98.8571 13.3061 98.6725 13.2198 98.4839C13.1646 98.3464 13.1576 98.0525 13.1977 97.603C13.2419 97.0993 13.3021 96.7842 13.3763 96.6578C13.4506 96.5314 13.6362 96.4391 13.9312 96.3809L17.8653 95.5692C18.1793 95.507 18.3409 95.4157 18.3519 95.2953C18.3549 95.2591 18.3519 95.1949 18.3419 95.1036L18.3509 95.0043C18.38 94.6682 18.5937 94.5177 18.989 94.5528C19.1867 94.5698 19.3402 94.6441 19.4496 94.7745C19.5589 94.905 19.6051 95.0665 19.588 95.2581C19.581 95.3414 19.562 95.4518 19.5319 95.5882C19.4867 95.7538 19.4626 95.8632 19.4576 95.9173C19.4345 96.0478 19.4135 96.2183 19.3944 96.428C19.3733 96.6558 19.3663 96.8093 19.3713 96.8886C19.3924 97.1986 19.3994 97.3923 19.3924 97.4705C19.3783 97.6331 19.3051 97.7605 19.1727 97.8548C19.0402 97.9491 18.8807 97.9872 18.6951 97.9712C18.3409 97.9391 18.1743 97.8096 18.1944 97.5819C18.1964 97.5518 18.2054 97.5076 18.2195 97.4484C18.2335 97.3892 18.2416 97.3451 18.2446 97.315C18.2546 97.2016 18.1964 97.1384 18.071 97.1274C17.9094 97.1133 17.771 97.1344 17.6576 97.1906C17.5432 97.2478 17.482 97.326 17.473 97.4284L17.3666 98.6244C17.3355 98.9665 17.5252 99.1551 17.9325 99.1912C18.0288 99.1993 18.081 99.1531 18.09 99.0508C18.0931 99.0207 18.0931 98.9755 18.089 98.9143C18.085 98.8531 18.084 98.808 18.087 98.7779C18.1061 98.5561 18.2927 98.4608 18.6469 98.4919C18.8395 98.509 18.9911 98.5742 19.1014 98.6866C19.2128 98.7989 19.261 98.9394 19.2459 99.107C19.2379 99.1912 19.2008 99.3749 19.1335 99.6588C19.1044 99.7832 19.0793 99.9598 19.0593 100.188C19.0372 100.433 19.0292 100.626 19.0352 100.765C19.0482 101.087 19.0533 101.277 19.0482 101.337C19.0322 101.524 18.962 101.671 18.8375 101.777C18.7131 101.883 18.5576 101.928 18.372 101.912C17.9526 101.875 17.7569 101.698 17.785 101.38C17.789 101.343 17.7981 101.287 17.8141 101.21C17.8302 101.133 17.8402 101.077 17.8432 101.04C17.8533 100.926 17.7981 100.828 17.6787 100.744C17.6436 100.723 17.5362 100.671 17.3566 100.589ZM16.2038 97.4314C16.2098 97.4324 16.1707 97.4354 16.0854 97.4394H16.0864L14.2041 97.7073L16.0703 98.4347C16.0874 98.4428 16.1084 98.4478 16.1325 98.4498C16.2038 98.4558 16.2469 98.3836 16.2599 98.2341L16.3091 97.6762C16.3232 97.5207 16.288 97.4384 16.2038 97.4314ZM14.8352 91.4844C14.9957 91.5366 15.1442 91.5366 15.2817 91.4834C15.4191 91.4302 15.5094 91.3379 15.5526 91.2065C15.5696 91.1553 15.5827 91.0821 15.5917 90.9868C15.6007 90.8914 15.6128 90.8212 15.6278 90.7751C15.6649 90.6607 15.7633 90.6135 15.9208 90.6336C15.976 90.6386 16.0954 90.6717 16.278 90.7319L18.6559 91.5095C18.8395 91.5697 18.9569 91.6148 19.0111 91.6449C19.1506 91.7222 19.2017 91.8185 19.1636 91.9329C19.1506 91.973 19.1195 92.0353 19.0693 92.1205C19.0191 92.2058 18.987 92.271 18.972 92.3172C18.9268 92.4546 18.9429 92.5851 19.0201 92.7085C19.0974 92.8319 19.2188 92.9202 19.3843 92.9744C19.573 93.0366 19.7435 93.0296 19.894 92.9553C20.0455 92.8811 20.1499 92.7526 20.2101 92.569C20.2251 92.5229 20.2773 92.2961 20.3666 91.8888C20.4057 91.7112 20.473 91.4774 20.5683 91.1854C20.6164 91.0369 20.7037 90.8192 20.8292 90.5343C20.9536 90.2493 21.0409 90.0316 21.09 89.8831C21.1532 89.6884 21.1492 89.5149 21.076 89.3603C21.0027 89.2068 20.8743 89.0995 20.6917 89.0403C20.3024 88.9128 20.0526 89.0182 19.9422 89.3563C19.9211 89.4195 19.9021 89.5138 19.882 89.6403C19.8629 89.7667 19.8429 89.862 19.8218 89.9252C19.7807 90.0506 19.7064 90.1128 19.6001 90.1088C19.5429 90.1088 19.4686 90.0948 19.3773 90.0647L19.0823 89.9774L18.5847 89.8148C18.4873 89.7827 18.4302 89.7466 18.4111 89.7055C18.393 89.6643 18.4011 89.5901 18.4372 89.4807C18.5084 89.263 18.6158 89.1777 18.7582 89.2249L18.8526 89.256C18.8577 89.2579 18.8638 89.2597 18.8705 89.2618L18.8706 89.2619L18.8707 89.2619L18.8707 89.2619L18.8707 89.2619C18.8783 89.2643 18.8867 89.2669 18.8957 89.27C18.9168 89.2831 18.9328 89.2921 18.9449 89.2951C19.2659 89.3995 19.4746 89.3011 19.574 88.9971C19.6713 88.7001 19.5459 88.4934 19.1967 88.3801C19.0823 88.3429 18.9057 88.2978 18.6659 88.2446C18.4271 88.1914 18.2496 88.1463 18.1352 88.1092C17.9345 88.0439 17.774 87.9848 17.6516 87.9316C17.5292 87.8794 17.4399 87.8433 17.3827 87.8242C17.0857 87.7269 16.885 87.8353 16.7817 88.1503C16.6934 88.4192 16.7616 88.5898 16.9843 88.663C16.9964 88.667 17.0164 88.67 17.0475 88.674C17.0621 88.6786 17.0749 88.6828 17.0862 88.6866C17.0975 88.6904 17.1072 88.6936 17.1158 88.6961L17.1351 88.7C17.2187 88.7167 17.2685 88.7266 17.2843 88.7322C17.4509 88.7864 17.494 88.9339 17.4158 89.1737C17.3656 89.3282 17.2512 89.3764 17.0736 89.3182L16.6703 89.1868C16.4295 89.1085 16.292 89.0302 16.2579 88.952C16.2228 88.8737 16.2419 88.7232 16.3151 88.5005L16.6211 87.5654C16.7144 87.2794 16.8589 87.168 17.0536 87.2312C17.1168 87.2523 17.2021 87.2894 17.3114 87.3436C17.4589 87.4169 17.5633 87.464 17.6265 87.4851C17.8382 87.5543 18.0258 87.5533 18.1873 87.4831C18.3499 87.4128 18.4623 87.2804 18.5265 87.0858C18.5897 86.8911 18.5787 86.7135 18.4924 86.552C18.4061 86.3904 18.2626 86.2771 18.0619 86.2118C17.9706 86.1817 17.8312 86.1536 17.6435 86.1276C17.4559 86.1015 17.3164 86.0724 17.2251 86.0433C17.1047 86.0042 16.9562 85.9359 16.7787 85.8406C16.6603 85.7764 16.5499 85.7272 16.4465 85.6941C16.1947 85.6118 16.0221 85.7142 15.9288 86.0001C15.9321 85.9912 15.9281 86.0087 15.9178 86.0533L15.9098 86.0884L15.7843 86.6172C15.7041 86.9011 15.6318 87.1409 15.5686 87.3356C15.4171 87.8182 15.3178 88.1403 15.2716 88.3028C15.1984 88.5446 15.1302 88.7633 15.0669 88.958C14.9756 89.2379 14.8402 89.5931 14.6616 90.0225C14.5432 90.3065 14.4629 90.5152 14.4198 90.6466C14.2813 91.07 14.4208 91.35 14.8382 91.4864L14.8352 91.4844ZM18.372 83.265C18.2265 83.2921 18.08 83.264 17.9325 83.1827H17.9335C17.7539 83.0844 17.6415 82.955 17.5954 82.7954C17.5492 82.6359 17.5743 82.4693 17.6706 82.2958C17.7148 82.2175 17.8322 82.0409 18.0238 81.769C18.1533 81.5854 18.2676 81.4018 18.37 81.2172C18.4512 81.0697 18.5556 80.8499 18.682 80.559C18.8084 80.268 18.8967 80.0774 18.9459 79.9881C19.1586 79.6038 19.4576 79.5175 19.8419 79.7302C19.9894 79.8125 20.0907 79.9219 20.1459 80.0583C20.2011 80.1958 20.1951 80.3242 20.1278 80.4456C20.1048 80.4877 20.0606 80.5459 19.9954 80.6202C19.9302 80.6944 19.886 80.7526 19.8629 80.7948C19.7837 80.9372 19.9211 81.1058 20.2743 81.3004L22.4636 82.5095C22.8218 82.7071 23.0405 82.7352 23.1188 82.5928C23.1419 82.5506 23.168 82.4824 23.1961 82.3881C23.2242 82.2938 23.2502 82.2255 23.2733 82.1834C23.3405 82.062 23.4459 81.9877 23.5914 81.9616C23.7369 81.9346 23.8833 81.9627 24.0308 82.0439C24.1994 82.1372 24.3108 82.2657 24.365 82.4292C24.4191 82.5928 24.4021 82.7533 24.3148 82.9118C24.2977 82.9439 24.2817 82.966 24.2676 82.979L23.9295 83.4416C23.8442 83.559 23.7589 83.6944 23.6747 83.8469C23.5432 84.0837 23.4198 84.3386 23.3034 84.6115C23.1629 84.9406 23.0666 85.1513 23.0145 85.2466C22.9211 85.4162 22.7927 85.5235 22.6292 85.5707C22.4656 85.6178 22.2961 85.5938 22.1225 85.4974C21.969 85.4132 21.8666 85.3028 21.8145 85.1673C21.7623 85.0319 21.7703 84.9004 21.8405 84.774C21.8636 84.7319 21.9078 84.6747 21.971 84.6035C22.0342 84.5322 22.0783 84.475 22.1014 84.4329C22.1596 84.3275 22.1275 84.2242 22.0051 84.1218C21.9579 84.0817 21.8506 84.0155 21.682 83.9222L19.4927 82.7132C19.3242 82.6198 19.2128 82.5657 19.1596 82.5496C19.0071 82.5004 18.9027 82.5285 18.8446 82.6339C18.8205 82.676 18.7964 82.7423 18.7693 82.8346C18.7422 82.9259 18.7161 82.9961 18.69 83.0433C18.6228 83.1647 18.5175 83.2389 18.372 83.265ZM24.7793 78.9556C24.8786 79.1271 24.9368 79.2305 24.9529 79.2676C25.003 79.4041 24.991 79.5164 24.9167 79.6037C24.8937 79.6308 24.8525 79.672 24.7953 79.7261C24.7381 79.7803 24.698 79.8205 24.6739 79.8485C24.4672 80.0924 24.5254 80.3502 24.8475 80.6221C24.99 80.7425 25.1425 80.7957 25.306 80.7796C25.4696 80.7636 25.6111 80.6853 25.7315 80.5429C25.7706 80.4967 25.8769 80.3382 26.0505 80.0683C26.1258 79.9509 26.2442 79.7984 26.4037 79.6098C26.5512 79.4352 26.6736 79.3057 26.7689 79.2205C26.9876 79.0268 27.1241 78.8984 27.1793 78.8342C27.2876 78.7057 27.3298 78.5633 27.3037 78.4077C27.2776 78.2522 27.1913 78.1118 27.0448 77.9873C26.7739 77.7576 26.5662 77.7285 26.4228 77.898C26.4037 77.9211 26.3776 77.9582 26.3455 78.0104C26.3134 78.0626 26.2873 78.0997 26.2682 78.1228C26.202 78.2011 26.1328 78.2091 26.0585 78.1469C25.7465 77.882 25.7003 77.6191 25.9231 77.3572L26.6997 76.4412C26.7659 76.3629 26.8612 76.3338 26.9866 76.3529C27.1121 76.372 27.2365 76.4342 27.3609 76.5395C27.4572 76.6208 27.4682 76.7061 27.395 76.7934C27.3759 76.8164 27.3428 76.8475 27.2967 76.8877C27.2505 76.9278 27.2184 76.9589 27.1983 76.982C27.0509 77.1566 27.1121 77.3582 27.383 77.588C27.5254 77.7084 27.6779 77.7686 27.8405 77.7676C28.003 77.7676 28.1365 77.7044 28.2418 77.581C28.292 77.5218 28.3983 77.3582 28.5599 77.0934C28.601 77.0261 28.6953 76.9047 28.8438 76.7302C28.9803 76.5696 29.0957 76.4422 29.19 76.3489C29.2251 76.3077 29.3084 76.2325 29.4408 76.1231C29.5442 76.0288 29.6224 75.9496 29.6776 75.8853C29.802 75.7389 29.8572 75.5803 29.8432 75.4108C29.8291 75.2412 29.7458 75.0917 29.5943 74.9633C29.2913 74.7064 29.0304 74.7064 28.8127 74.9633L28.7485 75.0395C28.7044 75.1198 28.6702 75.174 28.6462 75.2021C28.5679 75.2944 28.3833 75.2753 28.0903 75.1459L24.408 73.5415C24.1331 73.4191 23.9284 73.388 23.795 73.4482C23.6616 73.5084 23.4308 73.7312 23.1037 74.1174C22.8117 74.4616 22.6482 74.7064 22.6131 74.8499C22.5749 75.0536 22.6622 75.3415 22.8769 75.7118L24.7793 78.9566V78.9556ZM25.5559 75.6496C25.6281 75.6947 25.6622 75.7158 25.6572 75.7118C25.7214 75.7659 25.7034 75.8532 25.602 75.9726L25.2398 76.4001C25.1425 76.5154 25.0662 76.5485 25.0111 76.5024C24.993 76.4873 24.9789 76.4713 24.9689 76.4542L23.8632 74.7837L25.5559 75.6496ZM60.8606 65.8308C60.9669 65.8519 61.1977 65.878 61.5539 65.9101C61.8489 65.9362 62.1298 65.9753 62.3957 66.0275C62.5673 66.0606 62.7218 66.0997 62.8602 66.1449L63.405 66.3235C63.4221 66.3325 63.4472 66.3405 63.4833 66.3475C63.6609 66.3817 63.8184 66.3475 63.9579 66.2462C64.0974 66.1439 64.1847 65.9994 64.2218 65.8097C64.2539 65.6442 64.2348 65.4967 64.1646 65.3663C64.0943 65.2358 63.992 65.1576 63.8556 65.1315C63.8084 65.1225 63.7351 65.1194 63.6368 65.1215C63.5385 65.1235 63.4652 65.1204 63.4181 65.1114C63.2586 65.0803 63.2174 64.8646 63.2957 64.4623L63.7713 62.0061C63.8475 61.6097 63.9659 61.4271 64.1255 61.4582C64.1726 61.4673 64.2418 61.4914 64.3321 61.5305C64.4224 61.5696 64.4917 61.5937 64.5388 61.6027C64.6743 61.6288 64.7997 61.5947 64.9131 61.5004C65.0265 61.4061 65.0987 61.2756 65.1308 61.1101C65.2141 60.6786 65.0405 60.4208 64.6091 60.3375C64.5087 60.3184 64.3 60.2934 63.984 60.2623C63.6679 60.2322 63.4271 60.2001 63.2616 60.1679C63.0549 60.1278 62.8442 60.0746 62.6305 60.0094C62.3124 59.9111 62.1087 59.8529 62.0204 59.8358C61.8258 59.7977 61.6592 59.8258 61.5218 59.9191C61.3843 60.0124 61.296 60.1589 61.2569 60.3596C61.2248 60.5251 61.2438 60.6726 61.3141 60.8031C61.3843 60.9335 61.4867 61.0108 61.6231 61.0378C61.6763 61.0479 61.7505 61.0519 61.8459 61.0489C61.9412 61.0459 62.0124 61.0489 62.0606 61.0579C62.179 61.081 62.2382 61.1723 62.2372 61.3318C62.2382 61.387 62.2211 61.5094 62.185 61.699L61.7094 64.1552C61.6733 64.3449 61.6432 64.4673 61.6201 64.5245C61.5609 64.673 61.4716 64.7352 61.3542 64.7121C61.3071 64.7031 61.2398 64.679 61.1515 64.6409C61.0632 64.6027 60.996 64.5786 60.9489 64.5696C60.8074 64.5425 60.68 64.5746 60.5666 64.6659C60.4542 64.7572 60.381 64.8887 60.3479 65.0602C60.3097 65.2549 60.3388 65.4235 60.4342 65.5649C60.5295 65.7064 60.6719 65.7947 60.8606 65.8318V65.8308ZM66.7201 67.1233C66.4091 67.04 66.2255 66.9878 66.1703 66.9648L66.1693 66.9678C65.9967 66.8965 65.8783 66.7862 65.8131 66.6357C65.7479 66.4852 65.7509 66.3236 65.8221 66.1511C65.9827 65.7608 66.2104 65.6273 66.5054 65.7487C66.5385 65.7628 66.5897 65.7888 66.6589 65.827C66.7282 65.8651 66.7793 65.8912 66.8124 65.9052C66.9178 65.9494 67.0282 65.9263 67.1435 65.837C67.1736 65.8099 67.2549 65.7236 67.3874 65.5761L69.8917 62.7698C70.1787 62.4517 70.4255 62.2802 70.6312 62.2541C70.7787 62.243 71.0616 62.3243 71.479 62.4959C71.9466 62.6885 72.2295 62.839 72.3278 62.9484C72.4271 63.0567 72.4593 63.2614 72.4271 63.5604L72.0298 67.5577C71.9957 67.8758 72.0348 68.0574 72.1462 68.1036C72.1793 68.1176 72.2415 68.1327 72.3318 68.1507L72.4241 68.1888C72.7362 68.3173 72.8164 68.5651 72.6649 68.9323C72.5897 69.1159 72.4733 69.2403 72.3158 69.3056C72.1593 69.3708 71.9917 69.3668 71.8131 69.2935C71.7348 69.2614 71.6355 69.2102 71.5141 69.141C71.3696 69.0487 71.2723 68.9925 71.2221 68.9715C71.1047 68.9102 70.9482 68.839 70.7536 68.7587C70.5419 68.6715 70.3984 68.6193 70.3211 68.6002C70.0191 68.528 69.8315 68.4768 69.7593 68.4467C69.6088 68.3845 69.5084 68.2771 69.4583 68.1226C69.4081 67.9681 69.4181 67.8046 69.4894 67.632C69.6248 67.3029 69.7984 67.1825 70.0101 67.2698C70.0382 67.2818 70.0783 67.3029 70.1305 67.334C70.1827 67.3651 70.2228 67.3872 70.2509 67.3982C70.3562 67.4414 70.4335 67.4052 70.4817 67.2878C70.5439 67.1373 70.5649 66.9999 70.5449 66.8745C70.5248 66.749 70.4676 66.6668 70.3733 66.6276L69.2626 66.1701C68.9445 66.0387 68.7078 66.1631 68.5522 66.5414C68.5161 66.6296 68.5452 66.6939 68.6395 66.733C68.6676 66.744 68.7108 66.7571 68.77 66.7721C68.8292 66.7872 68.8723 66.8002 68.9004 66.8113C69.1071 66.8965 69.1422 67.1032 69.0068 67.4313C68.9335 67.6089 68.8261 67.7343 68.6857 67.8066C68.5452 67.8788 68.3967 67.8828 68.2412 67.8186C68.1629 67.7865 67.9984 67.6962 67.7476 67.5467C67.6372 67.4825 67.4767 67.4062 67.2649 67.3189C67.0362 67.2246 66.8546 67.1594 66.7201 67.1233ZM69.8275 64.9852C69.8154 65.0002 69.8044 65.0183 69.7954 65.0403L69.7944 65.0383C69.7673 65.1056 69.8225 65.1678 69.9619 65.225L70.4797 65.4387C70.6241 65.4989 70.7124 65.4898 70.7445 65.4116C70.7425 65.4176 70.7516 65.3785 70.7726 65.2962L71.0777 63.4199L69.8275 64.9852ZM76.3211 117.388L76.2429 117.351C76.2288 117.344 74.8542 116.639 74.785 115.27C74.781 115.198 74.776 115.128 74.7639 115.058L74.7419 114.934L74.7188 115.063C74.7067 115.13 74.7017 115.197 74.6987 115.266C74.6325 116.638 73.2549 117.345 73.2409 117.352L73.1516 117.389L73.2409 117.426C73.2549 117.433 74.6295 118.137 74.6987 119.507C74.7027 119.578 74.7108 119.648 74.7288 119.716L74.7429 119.768L74.7569 119.716C74.775 119.648 74.784 119.577 74.787 119.507C74.8552 118.137 76.2308 117.433 76.2449 117.426L76.3231 117.389L76.3211 117.388ZM77.5853 112.803C77.5974 112.869 77.6024 112.934 77.6054 113V112.999C77.6688 114.257 78.9161 114.91 78.9589 114.933L78.9599 114.933L79.0331 114.968L78.9599 115.002L78.9589 115.002C78.9161 115.025 77.6688 115.678 77.6054 116.936C77.6024 117.001 77.5943 117.068 77.5773 117.131L77.5642 117.178L77.5512 117.131C77.5341 117.068 77.5261 117.002 77.5231 116.936C77.4597 115.678 76.2125 115.025 76.1696 115.002L76.1686 115.002L76.0863 114.968L76.1686 114.933L76.1696 114.933C76.2122 114.911 77.4626 114.255 77.5231 112.995C77.5261 112.933 77.5311 112.87 77.5422 112.807L77.5642 112.687L77.5853 112.803ZM75.3739 114.355C75.3769 114.41 75.383 114.464 75.397 114.517L75.407 114.556L75.4171 114.517C75.4311 114.464 75.4381 114.41 75.4402 114.355C75.4926 113.31 76.527 112.766 76.5668 112.745L76.5679 112.744L76.6281 112.716L76.5679 112.688L76.5668 112.687C76.527 112.666 75.4926 112.122 75.4402 111.078C75.4371 111.022 75.4331 110.968 75.4231 110.914L75.406 110.818L75.388 110.918C75.3789 110.97 75.3749 111.022 75.3719 111.075C75.3208 112.136 74.2552 112.683 74.2442 112.688L74.1759 112.716L74.2442 112.744L74.2453 112.745C74.2851 112.766 75.3195 113.31 75.3719 114.355H75.3739ZM35.0717 115.062C35.0837 115.129 35.0887 115.196 35.0917 115.265L35.0937 115.264C35.1589 116.636 36.5375 117.343 36.5516 117.35L36.6409 117.387L36.5516 117.424C36.5375 117.431 35.163 118.135 35.0937 119.505C35.0907 119.575 35.0817 119.646 35.0636 119.714L35.0496 119.766L35.0355 119.714C35.0175 119.646 35.0094 119.576 35.0054 119.505C34.9362 118.135 33.5616 117.431 33.5476 117.424L33.4693 117.387L33.5476 117.35C33.5616 117.343 34.9362 116.638 35.0054 115.269C35.0084 115.197 35.0145 115.127 35.0265 115.057L35.0486 114.933L35.0717 115.062ZM32.184 116.936C32.187 117.002 32.1951 117.068 32.2121 117.131L32.2252 117.178L32.2382 117.131C32.2553 117.068 32.2633 117.001 32.2663 116.936C32.3298 115.678 33.5769 115.025 33.6198 115.002L33.6208 115.002L33.7031 114.968L33.6208 114.933L33.6198 114.933C33.5766 114.91 32.3268 114.256 32.2663 112.995C32.2633 112.932 32.2583 112.87 32.2473 112.807L32.2252 112.687L32.2041 112.803C32.1921 112.869 32.187 112.934 32.184 113C32.1206 114.258 30.8734 114.911 30.8306 114.934L30.8295 114.934L30.7563 114.969L30.8295 115.003L30.8306 115.003C30.8736 115.026 32.1206 115.679 32.184 116.937V116.936ZM34.3994 110.917C34.4084 110.969 34.4134 111.022 34.4155 111.074H34.4134C34.4639 112.12 35.5003 112.666 35.5401 112.687L35.5412 112.687L35.6094 112.715L35.5412 112.743L35.5401 112.744C35.5003 112.765 34.4659 113.309 34.4134 114.354C34.4114 114.409 34.4044 114.463 34.3904 114.516L34.3803 114.555L34.3703 114.516C34.3563 114.463 34.3502 114.409 34.3472 114.354C34.2948 113.309 33.2604 112.765 33.2206 112.744L33.2195 112.743L33.1593 112.715L33.2195 112.687L33.2206 112.687C33.2604 112.666 34.2948 112.121 34.3472 111.077C34.3502 111.022 34.3543 110.967 34.3643 110.913L34.3813 110.817L34.3994 110.917Z",
	    fill: "#EBEBEB"
	  }));
	};

	const WAITING_PLAYERS$1 = 0;
	const WELCOME$1 = 1;
	const YOU_READY$1 = 2;
	const REVEAL_IDENTITY$1 = 3;
	const INSTRUCTIONS$1 = 4;
	const NIGHTTIME$1 = 5;
	const NIGHTTIME_TIMER$1 = 6;
	const NIGHT_OVER$1 = 7;
	const STORY$1 = 8;
	const POST_STORY_2$1 = 10;
	const ACCUSATIONS$1 = 11;
	const ACCUSED$1 = 12;
	const VOTING$1 = 13;
	const VOTING_TIMER$1 = 14;
	const VOTING_RESULTS$1 = 15;
	const GAME_OVER$1 = 16;

	const VariableContext = /*#__PURE__*/reactExports.createContext({
	  players: [],
	  setPlayers: () => {},
	  page: 0,
	  setPage: () => {},
	  nighttimeTimer: 0,
	  setNighttimeTimer: () => {},
	  accusationTimer: 0,
	  setAccusationTimer: () => {},
	  votingTimer: 0,
	  setVotingTimer: () => {},
	  mafia: [],
	  setMafia: () => {},
	  detective: null,
	  setDetective: () => {},
	  angel: null,
	  setAngel: () => {},
	  civilians: [],
	  setCivilians: () => {},
	  currentMafiaSelections: [],
	  setCurrentMafiaSelections: () => {},
	  currentMafiaVotes: [],
	  setCurrentMafiaVotes: () => {},
	  currentKill: null,
	  setCurrentKill: () => {},
	  detectiveIdentifications: [],
	  setDetectiveIdentifications: () => {},
	  currentDetectiveIdentification: null,
	  setCurrentDetectiveIdentification: () => {},
	  currentAngelProtection: null,
	  setCurrentAngelProtection: () => {},
	  currentCivilianTriviaFinishes: [],
	  setCurrentCivilianTriviaFinishes: () => {},
	  currentAccusations: [],
	  setCurrentAccusations: () => {},
	  recentlyAccused: null,
	  setRecentlyAccused: () => {},
	  currentLifeDeathSelections: [],
	  setCurrentLifeDeathSelections: () => {},
	  currentLifeDeathVotes: [],
	  setCurrentLifeDeathVotes: () => {},
	  playersRef: null,
	  pageRef: null,
	  mafiaRef: null,
	  detectiveRef: null,
	  angelRef: null,
	  civiliansRef: null,
	  currentMafiaSelectionsRef: null,
	  currentMafiaVotesRef: null,
	  currentKillRef: null,
	  detectiveIdentificationsRef: null,
	  currentDetectiveIdentificationRef: null,
	  currentAngelProtectionRef: null,
	  currentCivilianTriviaFinishesRef: null,
	  currentAccusationsRef: null,
	  recentlyAccusedRef: null,
	  currentLifeDeathSelectionsRef: null,
	  currentLifeDeathVotesRef: null
	});
	const VariableProvider = ({
	  children
	}) => {
	  const [players, setPlayers] = reactExports.useState([]);
	  const [page, setPage] = reactExports.useState(WAITING_PLAYERS$1);
	  const [nighttimeTimer, setNighttimeTimer] = reactExports.useState(120);
	  const [accusationTimer, setAccusationTimer] = reactExports.useState(300);
	  const [votingTimer, setVotingTimer] = reactExports.useState(300);
	  const [mafia, setMafia] = reactExports.useState([]);
	  const [detective, setDetective] = reactExports.useState(null);
	  const [angel, setAngel] = reactExports.useState(null);
	  const [civilians, setCivilians] = reactExports.useState([]);
	  const [currentMafiaSelections, setCurrentMafiaSelections] = reactExports.useState([]);
	  const [currentMafiaVotes, setCurrentMafiaVotes] = reactExports.useState([]);
	  const [currentKill, setCurrentKill] = reactExports.useState(null);
	  const [detectiveIdentifications, setDetectiveIdentifications] = reactExports.useState([]);
	  const [currentDetectiveIdentification, setCurrentDetectiveIdentification] = reactExports.useState(null);
	  const [currentAngelProtection, setCurrentAngelProtection] = reactExports.useState(null);
	  const [currentCivilianTriviaFinishes, setCurrentCivilianTriviaFinishes] = reactExports.useState([]);
	  const [currentAccusations, setCurrentAccusations] = reactExports.useState([]);
	  const [recentlyAccused, setRecentlyAccused] = reactExports.useState(null);
	  const [currentLifeDeathSelections, setCurrentLifeDeathSelections] = reactExports.useState([]);
	  const [currentLifeDeathVotes, setCurrentLifeDeathVotes] = reactExports.useState([]);
	  const playersRef = reactExports.useRef(players);
	  const pageRef = reactExports.useRef(page);
	  const mafiaRef = reactExports.useRef(mafia);
	  const detectiveRef = reactExports.useRef(detective);
	  const angelRef = reactExports.useRef(angel);
	  const civiliansRef = reactExports.useRef(civilians);
	  const currentMafiaSelectionsRef = reactExports.useRef(currentMafiaSelections);
	  const currentMafiaVotesRef = reactExports.useRef(currentMafiaVotes);
	  const currentKillRef = reactExports.useRef(currentKill);
	  const detectiveIdentificationsRef = reactExports.useRef(detectiveIdentifications);
	  const currentDetectiveIdentificationRef = reactExports.useRef(currentDetectiveIdentification);
	  const currentAngelProtectionRef = reactExports.useRef(currentAngelProtection);
	  const currentCivilianTriviaFinishesRef = reactExports.useRef(currentCivilianTriviaFinishes);
	  const currentAccusationsRef = reactExports.useRef(currentAccusations);
	  const recentlyAccusedRef = reactExports.useRef(recentlyAccused);
	  const currentLifeDeathSelectionsRef = reactExports.useRef(currentLifeDeathSelections);
	  const currentLifeDeathVotesRef = reactExports.useRef(currentLifeDeathVotes);
	  const variables = reactExports.useMemo(() => {
	    return {
	      players,
	      setPlayers,
	      page,
	      setPage,
	      nighttimeTimer,
	      setNighttimeTimer,
	      accusationTimer,
	      setAccusationTimer,
	      votingTimer,
	      setVotingTimer,
	      mafia,
	      setMafia,
	      detective,
	      setDetective,
	      angel,
	      setAngel,
	      civilians,
	      setCivilians,
	      currentMafiaSelections,
	      setCurrentMafiaSelections,
	      currentMafiaVotes,
	      setCurrentMafiaVotes,
	      currentKill,
	      setCurrentKill,
	      detectiveIdentifications,
	      setDetectiveIdentifications,
	      currentDetectiveIdentification,
	      setCurrentDetectiveIdentification,
	      currentAngelProtection,
	      setCurrentAngelProtection,
	      currentCivilianTriviaFinishes,
	      setCurrentCivilianTriviaFinishes,
	      currentAccusations,
	      setCurrentAccusations,
	      recentlyAccused,
	      setRecentlyAccused,
	      currentLifeDeathSelections,
	      setCurrentLifeDeathSelections,
	      currentLifeDeathVotes,
	      setCurrentLifeDeathVotes,
	      playersRef,
	      pageRef,
	      mafiaRef,
	      detectiveRef,
	      angelRef,
	      civiliansRef,
	      currentMafiaSelectionsRef,
	      currentMafiaVotesRef,
	      currentKillRef,
	      detectiveIdentificationsRef,
	      currentDetectiveIdentificationRef,
	      currentAngelProtectionRef,
	      currentCivilianTriviaFinishesRef,
	      currentAccusationsRef,
	      recentlyAccusedRef,
	      currentLifeDeathSelectionsRef,
	      currentLifeDeathVotesRef
	    };
	  }, [players, setPlayers, page, setPage, nighttimeTimer, setNighttimeTimer, accusationTimer, setAccusationTimer, votingTimer, setVotingTimer, mafia, setMafia, detective, setDetective, angel, setAngel, civilians, setCivilians, currentMafiaSelections, setCurrentMafiaSelections, currentMafiaVotes, setCurrentMafiaVotes, currentKill, setCurrentKill, detectiveIdentifications, setDetectiveIdentifications, currentDetectiveIdentification, setCurrentDetectiveIdentification, currentAngelProtection, setCurrentAngelProtection, currentCivilianTriviaFinishes, setCurrentCivilianTriviaFinishes, currentAccusations, setCurrentAccusations, recentlyAccused, setRecentlyAccused, currentLifeDeathSelections, setCurrentLifeDeathSelections, currentLifeDeathVotes, setCurrentLifeDeathVotes, playersRef, pageRef, mafiaRef, detectiveRef, angelRef, civiliansRef, currentMafiaSelectionsRef, currentMafiaVotesRef, currentKillRef, detectiveIdentificationsRef, currentDetectiveIdentificationRef, currentAngelProtectionRef, currentCivilianTriviaFinishesRef, currentAccusationsRef, recentlyAccusedRef, currentLifeDeathSelectionsRef, currentLifeDeathVotesRef]);
	  return /*#__PURE__*/React.createElement(VariableContext.Provider, {
	    value: variables
	  }, children);
	};

	function WaitingPlayers() {
	  const {
	    players
	  } = reactExports.useContext(VariableContext);
	  const waitingRoomAudio = new Audio("./assets/waiting-room.mp3");
	  waitingRoomAudio.volume = 0.75;
	  reactExports.useEffect(() => {
	    waitingRoomAudio.loop = true;
	    waitingRoomAudio.play();
	    return () => waitingRoomAudio.pause();
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      position: "absolute",
	      top: 0,
	      left: 95.26
	    }
	  }, /*#__PURE__*/React.createElement(BannerIcon, null)), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 25
	    }
	  }), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 25
	    }
	  }), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 25
	    }
	  }), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      display: "flex",
	      justifyContent: "center",
	      alignItems: "center",
	      width: "100%"
	    }
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "waiting for players to join")), /*#__PURE__*/React.createElement(CoinColumnBox, null, /*#__PURE__*/React.createElement(CoinRowBox, null, /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 0 ? players[0].realname : undefined,
	    isHost: true
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 1 ? players[1].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 2 ? players[2].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 3 ? players[3].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 4 ? players[4].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 5 ? players[5].realname : undefined
	  })), /*#__PURE__*/React.createElement(CoinRowBox, null, /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 6 ? players[6].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 7 ? players[7].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 8 ? players[8].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 9 ? players[9].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 10 ? players[10].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 11 ? players[11].realname : undefined
	  })), /*#__PURE__*/React.createElement(CoinRowBox, null, /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 12 ? players[12].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 13 ? players[13].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 14 ? players[14].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 15 ? players[15].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 16 ? players[16].realname : undefined
	  }), /*#__PURE__*/React.createElement(Coin, {
	    name: players.length > 17 ? players[17].realname : undefined
	  }))));
	}

	var v$1 = "5.9.0";
	var fr$1 = 30;
	var ip$1 = 0;
	var op$1 = 120;
	var w$1 = 394;
	var h$1 = 394;
	var nm$1 = "Mafia";
	var ddd$1 = 0;
	var assets$1 = [
	];
	var layers$1 = [
		{
			ddd: 0,
			ind: 1,
			ty: 4,
			nm: "Mafia",
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 0,
					k: 0,
					ix: 10
				},
				p: {
					a: 0,
					k: [
						197,
						197,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						322,
						322.5,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						61.5,
						61.5,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.388,
											8.09
										],
										[
											0.07,
											0.394
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.021,
											-0.418
										],
										[
											0.084,
											-0.043
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.405,
											-8.072
										],
										[
											-0.108,
											-0.403
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.021,
											0.417
										],
										[
											-0.084,
											0.042
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.019,
											-0.399
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.074,
											0.412
										],
										[
											-0.405,
											8.072
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.084,
											0.042
										],
										[
											0.021,
											0.417
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.108,
											-0.403
										],
										[
											0.405,
											-8.072
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.084,
											-0.043
										]
									],
									v: [
										[
											0.227,
											-12.286
										],
										[
											0.107,
											-13.478
										],
										[
											-0.03,
											-14.241
										],
										[
											-0.163,
											-13.507
										],
										[
											-0.289,
											-12.258
										],
										[
											-8.879,
											0.007
										],
										[
											-9.341,
											0.224
										],
										[
											-8.879,
											0.441
										],
										[
											-0.289,
											12.706
										],
										[
											-0.111,
											13.941
										],
										[
											-0.03,
											14.241
										],
										[
											0.049,
											13.941
										],
										[
											0.228,
											12.706
										],
										[
											8.819,
											0.441
										],
										[
											9.341,
											0.224
										],
										[
											8.819,
											0.007
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									162.895,
									406.774
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 17,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.006
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 30,
										s: [
											100
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 43,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 77,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.006
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 90,
										s: [
											100
										]
									},
									{
										t: 103,
										s: [
											0
										]
									}
								],
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 1",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.487,
											-9.697
										],
										[
											-0.13,
											-0.485
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.025,
											0.501
										],
										[
											-0.1,
											0.051
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.466,
											9.719
										],
										[
											0.085,
											0.473
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.025,
											-0.502
										],
										[
											0.1,
											-0.05
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.025,
											0.501
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.13,
											-0.485
										],
										[
											0.487,
											-9.697
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.1,
											-0.05
										],
										[
											-0.023,
											-0.48
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.089,
											0.495
										],
										[
											-0.487,
											9.697
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.1,
											0.051
										]
									],
									v: [
										[
											-0.347,
											15.264
										],
										[
											-0.133,
											16.749
										],
										[
											-0.037,
											17.108
										],
										[
											0.06,
											16.749
										],
										[
											0.274,
											15.264
										],
										[
											10.594,
											0.53
										],
										[
											11.222,
											0.269
										],
										[
											10.594,
											0.007
										],
										[
											0.272,
											-14.759
										],
										[
											0.128,
											-16.191
										],
										[
											-0.037,
											-17.108
										],
										[
											-0.195,
											-16.225
										],
										[
											-0.347,
											-14.726
										],
										[
											-10.667,
											0.007
										],
										[
											-11.222,
											0.269
										],
										[
											-10.667,
											0.53
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									146.471,
									423.882
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 37,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 50,
										s: [
											100
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 60,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 97,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 110,
										s: [
											100
										]
									},
									{
										t: 120,
										s: [
											0
										]
									}
								],
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 2",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 2,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.501,
											10.459
										],
										[
											0.091,
											0.509
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.027,
											-0.541
										],
										[
											0.109,
											-0.055
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.523,
											-10.435
										],
										[
											-0.14,
											-0.522
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.027,
											0.539
										],
										[
											-0.108,
											0.055
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.025,
											-0.517
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.095,
											0.533
										],
										[
											-0.523,
											10.435
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.109,
											0.055
										],
										[
											0.027,
											0.539
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.14,
											-0.522
										],
										[
											0.524,
											-10.435
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.108,
											-0.055
										]
									],
									v: [
										[
											0.293,
											-15.883
										],
										[
											0.138,
											-17.424
										],
										[
											-0.039,
											-18.411
										],
										[
											-0.21,
											-17.46
										],
										[
											-0.374,
											-15.847
										],
										[
											-11.48,
											0.009
										],
										[
											-12.077,
											0.29
										],
										[
											-11.48,
											0.57
										],
										[
											-0.374,
											16.426
										],
										[
											-0.143,
											18.024
										],
										[
											-0.039,
											18.411
										],
										[
											0.064,
											18.024
										],
										[
											0.295,
											16.426
										],
										[
											11.4,
											0.57
										],
										[
											12.077,
											0.29
										],
										[
											11.4,
											0.009
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									167.986,
									442.294
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.007
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 0,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 10,
										s: [
											100
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 20,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.007
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 60,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 70,
										s: [
											100
										]
									},
									{
										t: 80,
										s: [
											0
										]
									}
								],
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 3",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 3,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.405,
											-8.072
										],
										[
											-0.108,
											-0.404
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.021,
											0.417
										],
										[
											-0.084,
											0.042
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.405,
											8.072
										],
										[
											0.073,
											0.412
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.02,
											-0.399
										],
										[
											0.083,
											-0.042
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.021,
											0.417
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.108,
											-0.404
										],
										[
											0.405,
											-8.072
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.084,
											-0.042
										],
										[
											-0.021,
											-0.418
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.071,
											0.394
										],
										[
											-0.387,
											8.09
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.083,
											0.042
										]
									],
									v: [
										[
											-0.228,
											12.706
										],
										[
											-0.05,
											13.941
										],
										[
											0.031,
											14.242
										],
										[
											0.111,
											13.941
										],
										[
											0.289,
											12.706
										],
										[
											8.88,
											0.44
										],
										[
											9.342,
											0.224
										],
										[
											8.88,
											0.006
										],
										[
											0.289,
											-12.258
										],
										[
											0.163,
											-13.505
										],
										[
											0.031,
											-14.242
										],
										[
											-0.106,
											-13.479
										],
										[
											-0.227,
											-12.286
										],
										[
											-8.818,
											0.006
										],
										[
											-9.342,
											0.224
										],
										[
											-8.818,
											0.44
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									475.388,
									406.774
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 17,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.006
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 30,
										s: [
											100
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 43,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 77,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.006
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 90,
										s: [
											100
										]
									},
									{
										t: 103,
										s: [
											0
										]
									}
								],
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 4",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 4,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.487,
											9.697
										],
										[
											0.089,
											0.495
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.023,
											-0.48
										],
										[
											0.1,
											-0.051
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.487,
											-9.697
										],
										[
											-0.13,
											-0.485
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.025,
											0.501
										],
										[
											-0.101,
											0.05
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.025,
											-0.502
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.085,
											0.473
										],
										[
											-0.466,
											9.719
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.1,
											0.05
										],
										[
											0.025,
											0.501
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.13,
											-0.485
										],
										[
											0.487,
											-9.697
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.101,
											-0.051
										]
									],
									v: [
										[
											0.347,
											-14.726
										],
										[
											0.195,
											-16.225
										],
										[
											0.036,
											-17.109
										],
										[
											-0.128,
											-16.192
										],
										[
											-0.272,
											-14.76
										],
										[
											-10.594,
											0.008
										],
										[
											-11.222,
											0.269
										],
										[
											-10.594,
											0.53
										],
										[
											-0.274,
											15.264
										],
										[
											-0.06,
											16.749
										],
										[
											0.036,
											17.109
										],
										[
											0.133,
											16.749
										],
										[
											0.347,
											15.264
										],
										[
											10.667,
											0.53
										],
										[
											11.222,
											0.269
										],
										[
											10.667,
											0.008
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									491.813,
									423.882
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 37,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 50,
										s: [
											100
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 60,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.009
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 97,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 110,
										s: [
											100
										]
									},
									{
										t: 120,
										s: [
											0
										]
									}
								],
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 5",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 5,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.523,
											10.436
										],
										[
											0.096,
											0.532
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.025,
											-0.516
										],
										[
											0.108,
											-0.054
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.523,
											-10.435
										],
										[
											-0.14,
											-0.522
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.027,
											0.54
										],
										[
											-0.109,
											0.054
										]
									],
									o: [
										[
											0,
											0
										],
										[
											-0.109,
											-0.054
										],
										[
											-0.027,
											-0.54
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.092,
											0.509
										],
										[
											-0.501,
											10.46
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.108,
											0.054
										],
										[
											0.027,
											0.54
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.14,
											-0.522
										],
										[
											0.523,
											-10.435
										],
										[
											0,
											0
										]
									],
									v: [
										[
											12.077,
											0.289
										],
										[
											11.48,
											0.008
										],
										[
											0.374,
											-15.848
										],
										[
											0.21,
											-17.46
										],
										[
											0.04,
											-18.411
										],
										[
											-0.137,
											-17.424
										],
										[
											-0.293,
											-15.884
										],
										[
											-11.4,
											0.008
										],
										[
											-12.077,
											0.289
										],
										[
											-11.4,
											0.57
										],
										[
											-0.295,
											16.425
										],
										[
											-0.064,
											18.024
										],
										[
											0.04,
											18.411
										],
										[
											0.143,
											18.024
										],
										[
											0.374,
											16.425
										],
										[
											11.48,
											0.57
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									470.298,
									442.294
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.007
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 0,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 10,
										s: [
											100
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 20,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.007
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 60,
										s: [
											0
										]
									},
									{
										i: {
											x: [
												0.833
											],
											y: [
												1.005
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 70,
										s: [
											100
										]
									},
									{
										t: 80,
										s: [
											0
										]
									}
								],
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 6",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 6,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											34.313,
											22.536
										],
										[
											1.241,
											18.327
										],
										[
											-14.883,
											0.244
										],
										[
											-9.509,
											-10.335
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.24,
											-18.328
										],
										[
											14.882,
											-0.244
										],
										[
											9.508,
											10.335
										]
									],
									v: [
										[
											108.26,
											0.384
										],
										[
											59.064,
											3.902
										],
										[
											30.539,
											-27.59
										],
										[
											57.411,
											-69.652
										],
										[
											108.26,
											-54.186
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											22.738,
											-17.556
										],
										[
											3.347,
											20.298
										],
										[
											16.06,
											6.84
										],
										[
											0,
											0
										],
										[
											-5.526,
											-1.24
										],
										[
											-1.653,
											-5.375
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0.417,
											8.107
										],
										[
											-22.324,
											-9.509
										],
										[
											0,
											0
										],
										[
											5.526,
											1.24
										],
										[
											1.654,
											5.374
										]
									],
									v: [
										[
											23.511,
											57.241
										],
										[
											6.766,
											40.616
										],
										[
											-10.388,
											55.366
										],
										[
											1.187,
											-13.673
										],
										[
											6.823,
											-19.046
										],
										[
											14.416,
											-12.431
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 2,
							ty: "sh",
							ix: 3,
							ks: {
								a: 0,
								k: {
									i: [
										[
											25.631,
											-8.681
										],
										[
											0,
											0
										],
										[
											-8.268,
											14.882
										],
										[
											-23.565,
											-7.442
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-25.631,
											8.682
										],
										[
											0,
											0
										],
										[
											8.268,
											-14.883
										],
										[
											23.564,
											7.441
										],
										[
											2.067,
											7.442
										]
									],
									v: [
										[
											-59.997,
											12.785
										],
										[
											-93.483,
											-6.23
										],
										[
											-95.963,
											-50.465
										],
										[
											-35.192,
											-67.001
										],
										[
											-15.762,
											-21.941
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 3",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 3,
							ty: "sh",
							ix: 4,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.655,
											2.15
										],
										[
											-1.084,
											3.737
										],
										[
											0,
											0
										],
										[
											75.044,
											33.354
										],
										[
											-18.03,
											-159.39
										],
										[
											-2.181,
											-11.661
										],
										[
											2.686,
											-4.556
										],
										[
											-3.535,
											-12.97
										],
										[
											-1.573,
											-1.477
										],
										[
											-0.135,
											-6.103
										],
										[
											0,
											0
										],
										[
											-1.527,
											-2.934
										],
										[
											-13.88,
											-2.286
										],
										[
											-3.073,
											0.807
										],
										[
											0,
											0
										],
										[
											-7.988,
											15.279
										],
										[
											-0.219,
											2.976
										],
										[
											0,
											0
										],
										[
											-3.316,
											3.552
										],
										[
											-5.971,
											11.568
										]
									],
									o: [
										[
											-1.133,
											-3.722
										],
										[
											5.353,
											-18.449
										],
										[
											0,
											0
										],
										[
											-75.043,
											-33.352
										],
										[
											0.37,
											3.268
										],
										[
											0.973,
											5.198
										],
										[
											-4.169,
											7.073
										],
										[
											1.111,
											4.079
										],
										[
											4.45,
											4.178
										],
										[
											0,
											0
										],
										[
											0.073,
											3.306
										],
										[
											23.724,
											45.581
										],
										[
											3.134,
											0.516
										],
										[
											12.239,
											-3.213
										],
										[
											35.173,
											7.904
										],
										[
											1.383,
											-2.645
										],
										[
											0,
											0
										],
										[
											0.356,
											-4.847
										],
										[
											8.15,
											-8.729
										],
										[
											3.001,
											-5.814
										]
									],
									v: [
										[
											142.336,
											12.11
										],
										[
											142.478,
											0.65
										],
										[
											149.375,
											-59.771
										],
										[
											74.794,
											-185.771
										],
										[
											-131.808,
											-37.537
										],
										[
											-125.444,
											-2.04
										],
										[
											-128.102,
											13.08
										],
										[
											-99.089,
											75.956
										],
										[
											-94.876,
											83.986
										],
										[
											-87.487,
											99.897
										],
										[
											-86.519,
											143.783
										],
										[
											-84.117,
											153.283
										],
										[
											-10.651,
											211.387
										],
										[
											-1.25,
											210.827
										],
										[
											26.618,
											211.22
										],
										[
											99.557,
											152.408
										],
										[
											101.98,
											143.893
										],
										[
											105.31,
											98.608
										],
										[
											110.838,
											85.536
										],
										[
											139.647,
											23.611
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 4",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									313.589,
									315.672
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 7",
					np: 6,
					cix: 2,
					bm: 0,
					ix: 7,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.046,
													-0.003
												],
												[
													-0.087,
													1.189
												],
												[
													0,
													0
												],
												[
													-0.549,
													-0.039
												],
												[
													-0.134,
													-0.057
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.648,
													0.044
												],
												[
													-0.641,
													-0.046
												],
												[
													0,
													0
												],
												[
													0.082,
													-1.144
												],
												[
													0.183,
													0.013
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													2.144,
													5.655
												],
												[
													1.242,
													5.727
												],
												[
													0.411,
													3.874
												],
												[
													0.718,
													-0.38
												],
												[
													1.665,
													-2.036
												],
												[
													2.141,
													-1.932
												],
												[
													16.449,
													3.378
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.43,
													1.042
												],
												[
													2.985,
													1.319
												],
												[
													0,
													0
												],
												[
													0.265,
													0.157
												],
												[
													-0.063,
													0.868
												],
												[
													-0.112,
													0.589
												],
												[
													-0.02,
													0.275
												],
												[
													3.201,
													0.232
												],
												[
													0.933,
													-0.829
												],
												[
													0.103,
													-1.418
												],
												[
													-0.144,
													-2.448
												],
												[
													0.135,
													-1.876
												],
												[
													0.207,
													-0.95
												],
												[
													0.046,
													-0.641
												],
												[
													-0.859,
													-0.844
												],
												[
													-1.465,
													-0.106
												],
												[
													-0.122,
													1.692
												],
												[
													0.035,
													0.462
												],
												[
													-0.016,
													0.228
												],
												[
													-0.733,
													-0.052
												],
												[
													0.189,
													-2.607
												],
												[
													0,
													0
												],
												[
													0.859,
													-0.445
												],
												[
													1.235,
													0.09
												],
												[
													-0.062,
													0.869
												],
												[
													-0.102,
													0.452
												],
												[
													-0.017,
													0.228
												],
												[
													2.698,
													0.195
												],
												[
													0.995,
													-0.733
												],
												[
													0.09,
													-1.235
												],
												[
													-0.197,
													-2.359
												],
												[
													0.127,
													-1.739
												],
												[
													0.164,
													-1
												],
												[
													0.321,
													-1.265
												],
												[
													0.047,
													-0.641
												],
												[
													-0.849,
													-0.982
												],
												[
													-1.509,
													-0.109
												],
												[
													-0.186,
													2.561
												],
												[
													0,
													0
												],
												[
													-0.019,
													0.274
												],
												[
													-2.384,
													0.518
												],
												[
													0,
													0
												],
												[
													-0.553,
													0.971
												],
												[
													-0.279,
													3.843
												]
											],
											o: [
												[
													-0.68,
													-1.429
												],
												[
													0,
													0
												],
												[
													-1.382,
													-0.606
												],
												[
													-0.92,
													-0.618
												],
												[
													0.02,
													-0.275
												],
												[
													0.112,
													-0.591
												],
												[
													0.176,
													-2.425
												],
												[
													-1.419,
													-0.102
												],
												[
													-0.935,
													0.829
												],
												[
													-0.033,
													0.457
												],
												[
													0.061,
													1.062
												],
												[
													-0.126,
													1.738
												],
												[
													-0.478,
													2.173
												],
												[
													-0.092,
													1.28
												],
												[
													0.859,
													0.844
												],
												[
													2.699,
													0.195
												],
												[
													0.017,
													-0.23
												],
												[
													-0.035,
													-0.462
												],
												[
													0.057,
													-0.779
												],
												[
													3.109,
													0.225
												],
												[
													0,
													0
												],
												[
													-0.056,
													0.777
												],
												[
													-0.86,
													0.443
												],
												[
													-0.961,
													-0.069
												],
												[
													0.017,
													-0.229
												],
												[
													0.102,
													-0.452
												],
												[
													0.126,
													-1.739
												],
												[
													-1.419,
													-0.103
												],
												[
													-0.996,
													0.732
												],
												[
													-0.042,
													0.595
												],
												[
													0.047,
													0.6
												],
												[
													-0.115,
													1.601
												],
												[
													-0.03,
													0.412
												],
												[
													-0.212,
													1.042
												],
												[
													-0.106,
													1.463
												],
												[
													0.849,
													0.981
												],
												[
													3.019,
													0.219
												],
												[
													0,
													0
												],
												[
													-0.087,
													-0.696
												],
												[
													0.066,
													-0.916
												],
												[
													0,
													0
												],
												[
													2.243,
													-0.482
												],
												[
													0.552,
													-0.972
												],
												[
													0.247,
													-3.43
												]
											],
											v: [
												[
													23.85,
													-2.639
												],
												[
													18.354,
													-6.761
												],
												[
													-7.927,
													-18.18
												],
												[
													-10.397,
													-19.324
												],
												[
													-11.683,
													-21.555
												],
												[
													-11.486,
													-22.851
												],
												[
													-11.289,
													-24.148
												],
												[
													-15.829,
													-28.132
												],
												[
													-19.356,
													-27.042
												],
												[
													-20.911,
													-23.671
												],
												[
													-20.743,
													-19.314
												],
												[
													-20.855,
													-14.907
												],
												[
													-21.354,
													-10.874
												],
												[
													-22.142,
													-6.654
												],
												[
													-20.993,
													-3.468
												],
												[
													-17.509,
													-2.043
												],
												[
													-13.277,
													-4.289
												],
												[
													-13.306,
													-5.326
												],
												[
													-13.334,
													-6.362
												],
												[
													-12.151,
													-7.45
												],
												[
													-7.769,
													-3.201
												],
												[
													-8.429,
													5.925
												],
												[
													-9.802,
													7.757
												],
												[
													-12.945,
													8.288
												],
												[
													-14.292,
													6.88
												],
												[
													-14.114,
													5.858
												],
												[
													-13.937,
													4.837
												],
												[
													-17.796,
													1.937
												],
												[
													-21.417,
													2.882
												],
												[
													-23.045,
													5.833
												],
												[
													-22.813,
													10.265
												],
												[
													-22.93,
													13.774
												],
												[
													-23.349,
													17.675
												],
												[
													-23.876,
													20.189
												],
												[
													-24.265,
													22.713
												],
												[
													-23.151,
													26.38
												],
												[
													-19.614,
													28.015
												],
												[
													-14.807,
													24.501
												],
												[
													-14.753,
													23.746
												],
												[
													-14.854,
													22.29
												],
												[
													-11.18,
													20.141
												],
												[
													18.684,
													13.472
												],
												[
													22.877,
													11.292
												],
												[
													24.124,
													4.071
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											618.581,
											341.981
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 8",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 1,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.774,
													-0.816
												],
												[
													-0.133,
													-1.048
												],
												[
													-0.249,
													-0.686
												],
												[
													-0.047,
													-0.364
												],
												[
													1.153,
													-0.378
												],
												[
													1.456,
													-0.184
												],
												[
													0,
													0
												],
												[
													0.467,
													0.034
												],
												[
													0.115,
													0.909
												],
												[
													-0.07,
													0.725
												],
												[
													0.046,
													0.363
												],
												[
													0.93,
													0.598
												],
												[
													1.319,
													-0.167
												],
												[
													0.794,
													-1.026
												],
												[
													-0.184,
													-1.457
												],
												[
													-0.613,
													-2.651
												],
												[
													-0.259,
													-2.048
												],
												[
													-0.001,
													-1.109
												],
												[
													0,
													0
												],
												[
													-0.035,
													-0.273
												],
												[
													-1.068,
													-0.766
												],
												[
													-1.458,
													0.185
												],
												[
													-0.775,
													0.815
												],
												[
													0.134,
													1.047
												],
												[
													0.251,
													0.707
												],
												[
													0.047,
													0.364
												],
												[
													-3.095,
													0.391
												],
												[
													0,
													0
												],
												[
													-0.155,
													-1.229
												],
												[
													0.066,
													-0.749
												],
												[
													-0.046,
													-0.365
												],
												[
													-0.954,
													-0.596
												],
												[
													-1.275,
													0.162
												],
												[
													0.421,
													3.321
												],
												[
													0.53,
													2.36
												],
												[
													0.162,
													1.273
												],
												[
													0.031,
													1.706
												],
												[
													0.086,
													0.683
												],
												[
													1,
													0.775
												],
												[
													1.546,
													-0.196
												]
											],
											o: [
												[
													-0.776,
													0.814
												],
												[
													0.052,
													0.409
												],
												[
													0.248,
													0.684
												],
												[
													0.115,
													0.91
												],
												[
													-0.398,
													0.142
												],
												[
													0,
													0
												],
												[
													-1.457,
													0.184
												],
												[
													-1.211,
													-0.078
												],
												[
													-0.045,
													-0.365
												],
												[
													0.07,
													-0.726
												],
												[
													-0.138,
													-1.092
												],
												[
													-0.933,
													-0.6
												],
												[
													-1.502,
													0.19
												],
												[
													-0.796,
													1.025
												],
												[
													0.104,
													0.819
												],
												[
													0.509,
													2.2
												],
												[
													0.167,
													1.319
												],
												[
													0,
													0
												],
												[
													-0.029,
													0.143
												],
												[
													0.172,
													1.365
												],
												[
													1.067,
													0.767
												],
												[
													1.273,
													-0.161
												],
												[
													0.775,
													-0.815
												],
												[
													-0.046,
													-0.364
												],
												[
													-0.253,
													-0.708
												],
												[
													-0.155,
													-1.229
												],
												[
													0,
													0
												],
												[
													3.048,
													-0.387
												],
												[
													0.046,
													0.363
												],
												[
													-0.068,
													0.747
												],
												[
													0.133,
													1.046
												],
												[
													0.952,
													0.596
												],
												[
													3.32,
													-0.42
												],
												[
													-0.097,
													-0.774
												],
												[
													-0.53,
													-2.36
												],
												[
													-0.201,
													-1.593
												],
												[
													-0.043,
													-2.538
												],
												[
													-0.19,
													-1.501
												],
												[
													-1,
													-0.775
												],
												[
													-1.274,
													0.161
												]
											],
											v: [
												[
													13.012,
													-15.732
												],
												[
													12.047,
													-12.94
												],
												[
													12.498,
													-11.299
												],
												[
													12.94,
													-9.726
												],
												[
													11.381,
													-7.794
												],
												[
													8.6,
													-7.304
												],
												[
													-10.305,
													-4.911
												],
												[
													-13.19,
													-4.685
												],
												[
													-15.18,
													-6.166
												],
												[
													-15.144,
													-7.799
												],
												[
													-15.108,
													-9.433
												],
												[
													-16.711,
													-11.969
												],
												[
													-20.087,
													-12.617
												],
												[
													-23.532,
													-10.794
												],
												[
													-24.448,
													-7.073
												],
												[
													-23.373,
													-1.87
												],
												[
													-22.22,
													4.503
												],
												[
													-21.967,
													8.146
												],
												[
													-21.967,
													12.515
												],
												[
													-21.958,
													13.138
												],
												[
													-20.097,
													16.334
												],
												[
													-16.311,
													17.208
												],
												[
													-13.238,
													15.744
												],
												[
													-12.275,
													12.951
												],
												[
													-12.72,
													11.344
												],
												[
													-13.167,
													9.737
												],
												[
													-8.759,
													7.307
												],
												[
													10.146,
													4.914
												],
												[
													14.952,
													6.177
												],
												[
													14.921,
													7.846
												],
												[
													14.889,
													9.513
												],
												[
													16.519,
													11.977
												],
												[
													19.861,
													12.628
												],
												[
													24.211,
													7.016
												],
												[
													23.27,
													2.315
												],
												[
													22.233,
													-3.135
												],
												[
													21.884,
													-8.083
												],
												[
													21.689,
													-12.914
												],
												[
													19.905,
													-16.328
												],
												[
													16.085,
													-17.196
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											617.682,
											284.207
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 9",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 2,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.065,
													-0.585
												],
												[
													1.398,
													-0.451
												],
												[
													0,
													0
												],
												[
													0.464,
													-0.053
												],
												[
													0.281,
													0.873
												],
												[
													0.072,
													0.748
												],
												[
													0.113,
													0.349
												],
												[
													1.026,
													0.417
												],
												[
													1.266,
													-0.408
												],
												[
													0.598,
													-1.132
												],
												[
													-0.451,
													-1.398
												],
												[
													-1.276,
													-2.913
												],
												[
													-0.718,
													-2.226
												],
												[
													-0.507,
													-2.319
												],
												[
													-0.367,
													-1.136
												],
												[
													-1.14,
													-0.621
												],
												[
													-1.397,
													0.451
												],
												[
													0.831,
													2.575
												],
												[
													0.448,
													0.868
												],
												[
													0.154,
													0.48
												],
												[
													-0.672,
													0.458
												],
												[
													-0.699,
													0.225
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.297,
													-0.17
												],
												[
													-0.268,
													-0.829
												],
												[
													1.091,
													-0.352
												],
												[
													0,
													0
												],
												[
													0.132,
													-0.043
												],
												[
													0.087,
													-0.028
												],
												[
													-0.747,
													-2.314
												],
												[
													-2.663,
													0.859
												],
												[
													-1.712,
													0.744
												],
												[
													-0.874,
													0.281
												],
												[
													-0.989,
													0.222
												],
												[
													-0.437,
													0.141
												],
												[
													0.774,
													2.4
												],
												[
													1.702,
													-0.549
												],
												[
													0.204,
													-0.115
												],
												[
													0.13,
													-0.042
												],
												[
													0.131,
													-0.042
												],
												[
													0.592,
													1.833
												],
												[
													-1.352,
													0.436
												],
												[
													0,
													0
												],
												[
													-0.563,
													-0.325
												],
												[
													-0.549,
													-1.702
												],
												[
													0,
													0
												],
												[
													1.483,
													-0.478
												],
												[
													0.913,
													-0.15
												],
												[
													0.48,
													-0.155
												],
												[
													0.685,
													-1.16
												],
												[
													-0.479,
													-1.485
												],
												[
													-1.256,
													-0.606
												],
												[
													-1.527,
													0.492
												],
												[
													-1.276,
													0.676
												],
												[
													-0.698,
													0.225
												],
												[
													-1.525,
													0.203
												],
												[
													-0.784,
													0.253
												],
												[
													0.705,
													2.182
												],
												[
													0.212,
													0.51
												],
												[
													0,
													0
												],
												[
													0.478,
													1.484
												],
												[
													0.437,
													1.207
												],
												[
													0.478,
													1.483
												],
												[
													0.822,
													3.445
												],
												[
													0.324,
													1.003
												],
												[
													3.186,
													-1.027
												],
												[
													0.61,
													-0.944
												],
												[
													-0.323,
													-1.005
												],
												[
													-0.372,
													-0.628
												],
												[
													-0.113,
													-0.35
												]
											],
											o: [
												[
													-0.364,
													0.214
												],
												[
													0,
													0
												],
												[
													-1.398,
													0.451
												],
												[
													-1.206,
													0.147
												],
												[
													-0.099,
													-0.306
												],
												[
													-0.072,
													-0.748
												],
												[
													-0.337,
													-1.047
												],
												[
													-1.026,
													-0.416
												],
												[
													-1.44,
													0.464
												],
												[
													-0.599,
													1.133
												],
												[
													0.112,
													0.348
												],
												[
													0.554,
													1.268
												],
												[
													0.366,
													1.135
												],
												[
													0.507,
													2.318
												],
												[
													0.478,
													1.483
												],
												[
													1.139,
													0.619
												],
												[
													2.967,
													-0.957
												],
												[
													-0.155,
													-0.481
												],
												[
													-0.449,
													-0.867
												],
												[
													-0.309,
													-0.961
												],
												[
													0.351,
													-0.257
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.742,
													-0.239
												],
												[
													0.295,
													0.169
												],
												[
													0.535,
													1.658
												],
												[
													0,
													0
												],
												[
													-0.089,
													0.029
												],
												[
													-0.189,
													0.012
												],
												[
													-2.445,
													0.788
												],
												[
													0.731,
													2.27
												],
												[
													0.873,
													-0.281
												],
												[
													1.711,
													-0.745
												],
												[
													1.527,
													-0.493
												],
												[
													0.987,
													-0.222
												],
												[
													2.269,
													-0.731
												],
												[
													-0.662,
													-2.052
												],
												[
													-0.088,
													0.029
												],
												[
													-0.219,
													0.07
												],
												[
													-0.671,
													0.312
												],
												[
													-1.267,
													0.408
												],
												[
													-0.379,
													-1.178
												],
												[
													0,
													0
												],
												[
													1.834,
													-0.592
												],
												[
													0.562,
													0.324
												],
												[
													0,
													0
												],
												[
													0.703,
													2.182
												],
												[
													-0.481,
													0.155
												],
												[
													-1.236,
													0.205
												],
												[
													-1.615,
													0.521
												],
												[
													-0.686,
													1.161
												],
												[
													0.478,
													1.483
												],
												[
													1.256,
													0.607
												],
												[
													0.699,
													-0.225
												],
												[
													1.275,
													-0.677
												],
												[
													0.917,
													-0.296
												],
												[
													1.016,
													-0.135
												],
												[
													1.92,
													-0.619
												],
												[
													0.028,
													0.087
												],
												[
													0,
													0
												],
												[
													-0.777,
													-2.11
												],
												[
													-1.227,
													-3.652
												],
												[
													-0.634,
													-1.82
												],
												[
													-0.69,
													-2.14
												],
												[
													-0.544,
													-2.282
												],
												[
													-1.042,
													-3.231
												],
												[
													-1.222,
													0.394
												],
												[
													-0.611,
													0.944
												],
												[
													0.127,
													0.393
												],
												[
													0.37,
													0.627
												],
												[
													0.282,
													0.873
												]
											],
											v: [
												[
													7.065,
													-13.093
												],
												[
													4.422,
													-12.096
												],
												[
													-13.712,
													-6.249
												],
												[
													-16.505,
													-5.492
												],
												[
													-18.735,
													-6.58
												],
												[
													-18.992,
													-8.16
												],
												[
													-19.271,
													-9.805
												],
												[
													-21.315,
													-12.001
												],
												[
													-24.753,
													-12.012
												],
												[
													-27.81,
													-9.617
												],
												[
													-28.032,
													-5.822
												],
												[
													-25.948,
													-0.929
												],
												[
													-24.042,
													4.311
												],
												[
													-22.733,
													9.491
												],
												[
													-21.423,
													14.671
												],
												[
													-18.996,
													17.828
												],
												[
													-15.191,
													18.082
												],
												[
													-11.985,
													12.784
												],
												[
													-12.891,
													10.762
												],
												[
													-13.794,
													8.741
												],
												[
													-13.253,
													6.614
												],
												[
													-11.678,
													5.889
												],
												[
													-9.474,
													5.107
												],
												[
													-5.677,
													3.882
												],
												[
													-4.12,
													3.777
												],
												[
													-3.274,
													5.276
												],
												[
													-4.109,
													8.292
												],
												[
													-4.828,
													8.524
												],
												[
													-5.157,
													8.63
												],
												[
													-5.57,
													8.691
												],
												[
													-8.117,
													13.342
												],
												[
													-3.026,
													15.46
												],
												[
													0.851,
													13.921
												],
												[
													4.728,
													12.382
												],
												[
													8.502,
													11.309
												],
												[
													10.638,
													10.764
												],
												[
													12.883,
													6.065
												],
												[
													9.336,
													3.811
												],
												[
													8.9,
													4.025
												],
												[
													8.375,
													4.194
												],
												[
													7.174,
													4.725
												],
												[
													4.388,
													2.588
												],
												[
													5.846,
													0.165
												],
												[
													8.924,
													-0.826
												],
												[
													12.518,
													-1.226
												],
												[
													14.185,
													1.814
												],
												[
													16.487,
													8.951
												],
												[
													15.317,
													12.941
												],
												[
													13.224,
													13.4
												],
												[
													10.651,
													13.941
												],
												[
													7.2,
													16.463
												],
												[
													6.89,
													20.431
												],
												[
													9.491,
													23.566
												],
												[
													13.666,
													23.739
												],
												[
													16.628,
													22.386
												],
												[
													19.589,
													21.034
												],
												[
													23.25,
													20.286
												],
												[
													25.953,
													19.704
												],
												[
													27.779,
													15.501
												],
												[
													27.503,
													14.867
												],
												[
													25.909,
													11.044
												],
												[
													24.026,
													5.652
												],
												[
													21.53,
													-1.638
												],
												[
													19.859,
													-6.593
												],
												[
													17.591,
													-14.97
												],
												[
													16.291,
													-19.9
												],
												[
													9.948,
													-23.203
												],
												[
													7.198,
													-21.197
												],
												[
													6.768,
													-18.275
												],
												[
													7.515,
													-16.744
												],
												[
													8.24,
													-15.279
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											605.76,
											225.301
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 10",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 3,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.472,
													0.283
												],
												[
													-0.142,
													0.031
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.04,
													0.024
												],
												[
													0.614,
													1.023
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.157,
													-0.094
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.503,
													0.41
												],
												[
													-0.552,
													0.331
												],
												[
													0,
													0
												],
												[
													-0.59,
													-0.983
												]
											],
											v: [
												[
													3.372,
													-11.867
												],
												[
													3.82,
													-12.056
												],
												[
													18.578,
													-15.94
												],
												[
													8.186,
													-5.851
												],
												[
													7.491,
													-5.273
												],
												[
													5.744,
													-6.31
												],
												[
													3.549,
													-9.968
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.306,
													-0.024
												],
												[
													0.448,
													0.746
												],
												[
													0.248,
													0.546
												],
												[
													0.141,
													0.236
												],
												[
													2.752,
													-1.652
												],
												[
													0.286,
													-1.216
												],
												[
													-0.731,
													-1.219
												],
												[
													-1.525,
													-1.92
												],
												[
													-0.968,
													-1.613
												],
												[
													-0.378,
													-0.896
												],
												[
													-0.331,
													-0.551
												],
												[
													-1.188,
													-0.197
												],
												[
													-1.259,
													0.755
												],
												[
													0.873,
													1.454
												],
												[
													0.295,
													0.357
												],
												[
													0.118,
													0.196
												],
												[
													-0.629,
													0.377
												],
												[
													-1.344,
													-2.241
												],
												[
													0,
													0
												],
												[
													0.448,
													-0.858
												],
												[
													1.06,
													-0.637
												],
												[
													0.449,
													0.747
												],
												[
													0.177,
													0.428
												],
												[
													0.118,
													0.197
												],
												[
													2.32,
													-1.393
												],
												[
													0.393,
													-1.172
												],
												[
													-0.637,
													-1.062
												],
												[
													-1.52,
													-1.817
												],
												[
													-0.898,
													-1.495
												],
												[
													-0.44,
													-0.912
												],
												[
													-0.465,
													-1.22
												],
												[
													-0.33,
													-0.551
												],
												[
													-1.26,
													-0.314
												],
												[
													-1.298,
													0.779
												],
												[
													1.322,
													2.202
												],
												[
													0,
													0
												],
												[
													0.142,
													0.236
												],
												[
													-1.651,
													1.793
												],
												[
													0,
													0
												],
												[
													0.106,
													1.113
												],
												[
													1.982,
													3.303
												],
												[
													0.951,
													0.605
												],
												[
													3.201,
													-0.637
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-1.109,
													0.023
												],
												[
													-0.142,
													-0.236
												],
												[
													-0.247,
													-0.547
												],
												[
													-1.251,
													-2.085
												],
												[
													-1.219,
													0.732
												],
												[
													-0.288,
													1.215
												],
												[
													0.237,
													0.392
												],
												[
													0.661,
													0.833
												],
												[
													0.898,
													1.494
												],
												[
													0.859,
													2.053
												],
												[
													0.661,
													1.101
												],
												[
													1.187,
													0.196
												],
												[
													2.32,
													-1.393
												],
												[
													-0.117,
													-0.197
												],
												[
													-0.294,
													-0.359
												],
												[
													-0.402,
													-0.669
												],
												[
													2.674,
													-1.605
												],
												[
													0,
													0
												],
												[
													0.4,
													0.669
												],
												[
													-0.448,
													0.858
												],
												[
													-0.827,
													0.496
												],
												[
													-0.119,
													-0.197
												],
												[
													-0.177,
													-0.429
												],
												[
													-0.898,
													-1.495
												],
												[
													-1.22,
													0.731
												],
												[
													-0.393,
													1.172
												],
												[
													0.307,
													0.51
												],
												[
													0.383,
													0.463
												],
												[
													0.825,
													1.376
												],
												[
													0.213,
													0.354
												],
												[
													0.424,
													0.975
												],
												[
													0.755,
													1.258
												],
												[
													1.258,
													0.315
												],
												[
													2.596,
													-1.558
												],
												[
													0,
													0
												],
												[
													-0.472,
													-0.519
												],
												[
													-0.471,
													-0.787
												],
												[
													0,
													0
												],
												[
													1.556,
													-1.684
												],
												[
													-0.107,
													-1.113
												],
												[
													-1.771,
													-2.949
												],
												[
													-1.378,
													-0.778
												],
												[
													0,
													0
												],
												[
													-1.48,
													0.298
												]
											],
											v: [
												[
													-16.438,
													-19.073
												],
												[
													-18.774,
													-20.158
												],
												[
													-19.359,
													-21.332
												],
												[
													-19.943,
													-22.505
												],
												[
													-25.948,
													-23.154
												],
												[
													-28.207,
													-20.233
												],
												[
													-27.54,
													-16.582
												],
												[
													-24.897,
													-13.114
												],
												[
													-22.454,
													-9.445
												],
												[
													-20.542,
													-5.859
												],
												[
													-18.76,
													-1.953
												],
												[
													-15.987,
													-0.007
												],
												[
													-12.318,
													-0.845
												],
												[
													-10.148,
													-5.117
												],
												[
													-10.768,
													-5.948
												],
												[
													-11.387,
													-6.78
												],
												[
													-11.045,
													-8.349
												],
												[
													-5.016,
													-7.395
												],
												[
													-0.307,
													0.451
												],
												[
													-0.378,
													2.74
												],
												[
													-2.642,
													4.982
												],
												[
													-4.555,
													4.604
												],
												[
													-4.997,
													3.667
												],
												[
													-5.439,
													2.728
												],
												[
													-10.264,
													2.576
												],
												[
													-12.683,
													5.431
												],
												[
													-12.318,
													8.782
												],
												[
													-9.578,
													12.274
												],
												[
													-7.655,
													15.211
												],
												[
													-5.756,
													18.644
												],
												[
													-4.741,
													21.004
												],
												[
													-3.608,
													23.292
												],
												[
													-0.587,
													25.651
												],
												[
													3.247,
													24.956
												],
												[
													5.158,
													19.315
												],
												[
													4.768,
													18.667
												],
												[
													3.846,
													17.534
												],
												[
													5.617,
													13.664
												],
												[
													26.214,
													-8.968
												],
												[
													28.39,
													-13.163
												],
												[
													25.257,
													-19.786
												],
												[
													21.174,
													-25.119
												],
												[
													14.307,
													-25.33
												],
												[
													-13.76,
													-19.557
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											573.14,
											176.791
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 11",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 4,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-1.131,
													-1.074
												],
												[
													-0.636,
													-0.729
												],
												[
													-0.806,
													-1.017
												],
												[
													-0.466,
													-0.443
												],
												[
													-1.231,
													0.097
												],
												[
													-1.074,
													1.131
												],
												[
													1.33,
													1.262
												],
												[
													0.13,
													0.062
												],
												[
													0.099,
													0.095
												],
												[
													0.066,
													0.063
												],
												[
													0.005,
													0.195
												],
												[
													-1.484,
													1.564
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-1.331,
													-1.264
												],
												[
													0,
													0
												],
												[
													-2.62,
													1.561
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.349,
													-0.301
												],
												[
													0.531,
													0.505
												],
												[
													0.1,
													0.159
												],
												[
													0.1,
													0.095
												],
												[
													0.2,
													0.19
												],
												[
													1.957,
													-2.062
												],
												[
													0.016,
													-1.249
												],
												[
													-0.999,
													-0.947
												],
												[
													-1.387,
													-1.002
												],
												[
													-0.631,
													-0.6
												],
												[
													-0.872,
													-1.08
												],
												[
													-0.632,
													-0.601
												],
												[
													-1.281,
													0.017
												],
												[
													-1.073,
													1.131
												],
												[
													-0.068,
													1.137
												],
												[
													0.766,
													0.726
												],
												[
													0.642,
													0.389
												],
												[
													0.266,
													0.252
												],
												[
													-2.147,
													2.262
												],
												[
													0,
													0
												],
												[
													-0.897,
													-0.853
												],
												[
													-0.421,
													-0.622
												],
												[
													-0.3,
													-0.285
												],
												[
													-1.118,
													0.142
												],
												[
													-0.884,
													0.931
												],
												[
													0.05,
													1.28
												],
												[
													1.097,
													1.042
												],
												[
													0.961,
													0.786
												],
												[
													0.798,
													0.757
												],
												[
													1.338,
													1.588
												],
												[
													0.731,
													0.693
												],
												[
													0.971,
													-0.122
												],
												[
													1.754,
													-1.117
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.047,
													0.714
												],
												[
													0.831,
													0.79
												],
												[
													1.225,
													0.91
												],
												[
													1.497,
													1.421
												],
												[
													1.705,
													1.934
												],
												[
													0.799,
													0.758
												],
												[
													2.304,
													-2.428
												],
												[
													0.083,
													-1.122
												],
												[
													-0.766,
													-0.726
												],
												[
													-0.628,
													-0.373
												],
												[
													-0.266,
													-0.253
												],
												[
													0.653,
													-1.023
												],
												[
													1.01,
													-1.064
												],
												[
													0,
													0
												],
												[
													0.381,
													-0.27
												],
												[
													0.665,
													0.631
												],
												[
													0.405,
													0.606
												],
												[
													0.266,
													0.252
												],
												[
													1.099,
													-0.126
												],
												[
													0.915,
													-0.965
												],
												[
													-0.002,
													-1.331
												],
												[
													-1.031,
													-0.98
												]
											],
											o: [
												[
													0.858,
													0.626
												],
												[
													0.898,
													0.852
												],
												[
													0.201,
													0.254
												],
												[
													0.635,
													0.794
												],
												[
													0.999,
													0.947
												],
												[
													1.23,
													-0.097
												],
												[
													1.925,
													-2.029
												],
												[
													-0.2,
													-0.19
												],
												[
													-0.1,
													-0.095
												],
												[
													-0.165,
													-0.093
												],
												[
													-0.266,
													-0.253
												],
												[
													-0.11,
													-0.484
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-1.301,
													2.37
												],
												[
													0,
													0
												],
												[
													1.363,
													1.294
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.758,
													0.798
												],
												[
													-0.795,
													0.637
												],
												[
													-0.034,
													-0.031
												],
												[
													-0.133,
													-0.127
												],
												[
													-0.068,
													-0.127
												],
												[
													-1.365,
													-1.295
												],
												[
													-1.042,
													1.097
												],
												[
													-0.016,
													1.25
												],
												[
													0.631,
													0.6
												],
												[
													1.389,
													1.002
												],
												[
													0.998,
													0.947
												],
												[
													1.307,
													1.621
												],
												[
													1.098,
													1.042
												],
												[
													1.281,
													-0.017
												],
												[
													0.884,
													-0.931
												],
												[
													0.068,
													-1.137
												],
												[
													-0.266,
													-0.253
												],
												[
													-0.643,
													-0.389
												],
												[
													-0.866,
													-0.821
												],
												[
													0,
													0
												],
												[
													2.115,
													-2.228
												],
												[
													0.233,
													0.22
												],
												[
													0.421,
													0.621
												],
												[
													0.765,
													0.725
												],
												[
													1.113,
													-0.142
												],
												[
													1.074,
													-1.131
												],
												[
													-0.05,
													-1.28
												],
												[
													-0.434,
													-0.411
												],
												[
													-3.414,
													-2.733
												],
												[
													-0.766,
													-0.727
												],
												[
													-1.34,
													-1.586
												],
												[
													-0.831,
													-0.79
												],
												[
													-0.969,
													0.123
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.9,
													-1.548
												],
												[
													0.046,
													-0.715
												],
												[
													-0.633,
													-0.6
												],
												[
													-1.82,
													-1.348
												],
												[
													-0.931,
													-0.885
												],
												[
													-1.705,
													-1.935
												],
												[
													-2.461,
													-2.337
												],
												[
													-0.884,
													0.931
												],
												[
													-0.085,
													1.121
												],
												[
													0.299,
													0.284
												],
												[
													0.624,
													0.373
												],
												[
													0.665,
													0.632
												],
												[
													-0.218,
													0.362
												],
												[
													0,
													0
												],
												[
													-1.011,
													1.065
												],
												[
													-0.989,
													0.707
												],
												[
													-0.267,
													-0.253
												],
												[
													-0.406,
													-0.606
												],
												[
													-0.798,
													-0.758
												],
												[
													-1.102,
													0.126
												],
												[
													-1.011,
													1.065
												],
												[
													0.002,
													1.329
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-34.971,
													-1.399
												],
												[
													-31.985,
													1.151
												],
												[
													-29.685,
													3.524
												],
												[
													-28.175,
													5.431
												],
												[
													-26.523,
													7.286
												],
												[
													-23.18,
													8.562
												],
												[
													-19.724,
													6.72
												],
												[
													-18.831,
													1.782
												],
												[
													-19.328,
													1.405
												],
												[
													-19.627,
													1.121
												],
												[
													-19.974,
													0.887
												],
												[
													-20.38,
													0.216
												],
												[
													-18.32,
													-2.855
												],
												[
													-0.464,
													-21.665
												],
												[
													-17.461,
													9.532
												],
												[
													-17.417,
													14.981
												],
												[
													-14.222,
													18.012
												],
												[
													-8.248,
													17.613
												],
												[
													21.99,
													-0.352
												],
												[
													4.133,
													18.459
												],
												[
													2.474,
													20.108
												],
												[
													0.484,
													20.305
												],
												[
													0.281,
													20.019
												],
												[
													-0.068,
													19.687
												],
												[
													-0.469,
													19.211
												],
												[
													-5.451,
													20.363
												],
												[
													-7.039,
													23.883
												],
												[
													-5.565,
													27.178
												],
												[
													-2.536,
													29.581
												],
												[
													0.495,
													31.984
												],
												[
													3.299,
													35.025
												],
												[
													6.208,
													38.356
												],
												[
													9.776,
													39.893
												],
												[
													13.308,
													38.171
												],
												[
													14.735,
													35.068
												],
												[
													13.69,
													32.273
												],
												[
													12.326,
													31.311
												],
												[
													10.964,
													30.349
												],
												[
													12.886,
													25.725
												],
												[
													26.007,
													11.904
												],
												[
													30.526,
													9.84
												],
												[
													31.508,
													11.104
												],
												[
													32.591,
													12.463
												],
												[
													35.412,
													13.338
												],
												[
													38.411,
													11.727
												],
												[
													39.947,
													8.11
												],
												[
													38.227,
													4.627
												],
												[
													36.135,
													2.832
												],
												[
													29.818,
													-2.404
												],
												[
													26.664,
													-5.875
												],
												[
													23.557,
													-9.297
												],
												[
													20.854,
													-10.298
												],
												[
													16.766,
													-8.439
												],
												[
													-4.151,
													4.903
												],
												[
													8.995,
													-17.239
												],
												[
													10.416,
													-20.634
												],
												[
													9.237,
													-22.891
												],
												[
													6.453,
													-25.154
												],
												[
													1.479,
													-29.306
												],
												[
													-2.476,
													-33.534
												],
												[
													-6.23,
													-37.573
												],
												[
													-13.38,
													-37.435
												],
												[
													-14.831,
													-34.356
												],
												[
													-13.812,
													-31.585
												],
												[
													-12.422,
													-30.599
												],
												[
													-11.086,
													-29.661
												],
												[
													-11.068,
													-27.179
												],
												[
													-12.911,
													-25.039
												],
												[
													-26.031,
													-11.218
												],
												[
													-28.12,
													-9.217
												],
												[
													-30.597,
													-9.104
												],
												[
													-31.605,
													-10.392
												],
												[
													-32.612,
													-11.679
												],
												[
													-35.458,
													-12.627
												],
												[
													-38.482,
													-10.991
												],
												[
													-39.995,
													-7.399
												],
												[
													-38.445,
													-3.936
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											527.275,
											105.196
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 12",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 5,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.012,
													-0.045
												],
												[
													-1.157,
													0.285
												],
												[
													0,
													0
												],
												[
													-0.133,
													-0.534
												],
												[
													0.012,
													-0.145
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-0.243,
													-0.602
												],
												[
													-0.155,
													-0.624
												],
												[
													0,
													0
												],
												[
													1.114,
													-0.275
												],
												[
													0.044,
													0.178
												],
												[
													0,
													0
												]
											],
											v: [
												[
													7.087,
													17.722
												],
												[
													0.502,
													4.822
												],
												[
													0.155,
													3.986
												],
												[
													1.659,
													2.623
												],
												[
													5.801,
													1.601
												],
												[
													7.669,
													1.99
												],
												[
													7.717,
													2.475
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.077,
													0.632
												],
												[
													1.381,
													-0.342
												],
												[
													2.284,
													-0.894
												],
												[
													1.826,
													-0.451
												],
												[
													0.969,
													-0.097
												],
												[
													0.624,
													-0.154
												],
												[
													0.538,
													-1.078
												],
												[
													-0.352,
													-1.425
												],
												[
													-1.647,
													0.406
												],
												[
													-0.428,
													0.177
												],
												[
													-0.222,
													0.055
												],
												[
													-0.176,
													-0.713
												],
												[
													2.538,
													-0.626
												],
												[
													0,
													0
												],
												[
													0.689,
													0.682
												],
												[
													0.297,
													1.202
												],
												[
													-0.845,
													0.21
												],
												[
													-0.461,
													0.043
												],
												[
													-0.221,
													0.054
												],
												[
													0.648,
													2.627
												],
												[
													1.005,
													0.721
												],
												[
													1.203,
													-0.296
												],
												[
													2.184,
													-0.915
												],
												[
													1.692,
													-0.417
												],
												[
													1.002,
													-0.153
												],
												[
													1.302,
													-0.087
												],
												[
													0.624,
													-0.153
												],
												[
													0.672,
													-1.111
												],
												[
													-0.363,
													-1.47
												],
												[
													-2.493,
													0.615
												],
												[
													0,
													0
												],
												[
													-0.267,
													0.067
												],
												[
													-1.229,
													-2.106
												],
												[
													0,
													0
												],
												[
													-1.095,
													-0.226
												],
												[
													-3.741,
													0.923
												],
												[
													-0.857,
													0.73
												],
												[
													-0.333,
													3.247
												],
												[
													0,
													0
												],
												[
													-0.067,
													0.301
												],
												[
													-0.845,
													0.209
												],
												[
													-0.594,
													0.077
												],
												[
													-0.267,
													0.065
												],
												[
													0.769,
													3.117
												]
											],
											o: [
												[
													-1.077,
													-0.631
												],
												[
													-0.444,
													0.109
												],
												[
													-0.991,
													0.385
												],
												[
													-1.692,
													0.418
												],
												[
													-2.214,
													0.217
												],
												[
													-1.246,
													0.308
												],
												[
													-0.537,
													1.077
												],
												[
													0.648,
													2.627
												],
												[
													0.223,
													-0.056
												],
												[
													0.429,
													-0.176
												],
												[
													0.758,
													-0.187
												],
												[
													0.747,
													3.027
												],
												[
													0,
													0
												],
												[
													-0.757,
													0.188
												],
												[
													-0.687,
													-0.68
												],
												[
													-0.231,
													-0.935
												],
												[
													0.223,
													-0.054
												],
												[
													0.462,
													-0.043
												],
												[
													1.693,
													-0.418
												],
												[
													-0.341,
													-1.38
												],
												[
													-1.003,
													-0.72
												],
												[
													-0.578,
													0.144
												],
												[
													-0.555,
													0.232
												],
												[
													-1.559,
													0.385
												],
												[
													-0.401,
													0.099
												],
												[
													-1.057,
													0.118
												],
												[
													-1.425,
													0.352
												],
												[
													-0.67,
													1.111
												],
												[
													0.725,
													2.938
												],
												[
													0,
													0
												],
												[
													0.634,
													-0.298
												],
												[
													0.891,
													-0.219
												],
												[
													0,
													0
												],
												[
													1.152,
													1.985
												],
												[
													1.094,
													0.226
												],
												[
													3.339,
													-0.824
												],
												[
													1.148,
													-1.088
												],
												[
													0,
													0
												],
												[
													0.15,
													-1.501
												],
												[
													0.305,
													-1.067
												],
												[
													0.267,
													-0.066
												],
												[
													0.596,
													-0.076
												],
												[
													2.361,
													-0.583
												],
												[
													-0.341,
													-1.382
												]
											],
											v: [
												[
													24.954,
													-25.731
												],
												[
													21.268,
													-26.166
												],
												[
													17.176,
													-24.66
												],
												[
													12.951,
													-23.405
												],
												[
													8.96,
													-22.633
												],
												[
													4.704,
													-22.079
												],
												[
													2.028,
													-20.001
												],
												[
													1.75,
													-16.248
												],
												[
													5.194,
													-12.917
												],
												[
													6.171,
													-13.265
												],
												[
													7.148,
													-13.612
												],
												[
													8.547,
													-12.823
												],
												[
													5.861,
													-7.342
												],
												[
													-3.022,
													-5.15
												],
												[
													-5.189,
													-5.891
												],
												[
													-6.665,
													-8.714
												],
												[
													-5.742,
													-10.431
												],
												[
													-4.716,
													-10.578
												],
												[
													-3.69,
													-10.724
												],
												[
													-2.124,
													-15.292
												],
												[
													-4.142,
													-18.444
												],
												[
													-7.452,
													-19.079
												],
												[
													-11.595,
													-17.49
												],
												[
													-14.967,
													-16.515
												],
												[
													-18.808,
													-15.709
												],
												[
													-21.362,
													-15.432
												],
												[
													-23.882,
													-15.024
												],
												[
													-27.026,
													-12.831
												],
												[
													-27.487,
													-8.96
												],
												[
													-22.66,
													-5.476
												],
												[
													-21.924,
													-5.657
												],
												[
													-20.572,
													-6.204
												],
												[
													-17.393,
													-3.375
												],
												[
													-1.822,
													22.967
												],
												[
													1.548,
													26.282
												],
												[
													8.8,
													25.236
												],
												[
													15.097,
													22.903
												],
												[
													17.32,
													16.402
												],
												[
													20.058,
													-12.122
												],
												[
													20.382,
													-14.824
												],
												[
													22.107,
													-16.737
												],
												[
													23.401,
													-16.951
												],
												[
													24.695,
													-17.163
												],
												[
													27.081,
													-22.712
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											388.965,
											608.9
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 13",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 6,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.014,
													0.484
												],
												[
													0.956,
													-0.451
												],
												[
													0.575,
													-0.45
												],
												[
													0.332,
													-0.158
												],
												[
													0.717,
													0.981
												],
												[
													0.624,
													1.328
												],
												[
													0,
													0
												],
												[
													0.112,
													0.453
												],
												[
													-0.83,
													0.392
												],
												[
													-0.711,
													0.157
												],
												[
													-0.331,
													0.156
												],
												[
													-0.281,
													1.07
												],
												[
													0.567,
													1.203
												],
												[
													1.222,
													0.437
												],
												[
													1.329,
													-0.625
												],
												[
													2.332,
													-1.402
												],
												[
													1.867,
													-0.879
												],
												[
													1.054,
													-0.345
												],
												[
													0,
													0
												],
												[
													0.248,
													-0.117
												],
												[
													0.399,
													-1.252
												],
												[
													-0.626,
													-1.329
												],
												[
													-1.014,
													-0.486
												],
												[
													-0.954,
													0.449
												],
												[
													-0.595,
													0.457
												],
												[
													-0.331,
													0.156
												],
												[
													-1.328,
													-2.822
												],
												[
													0,
													0
												],
												[
													1.119,
													-0.527
												],
												[
													0.733,
													-0.168
												],
												[
													0.333,
													-0.156
												],
												[
													0.272,
													-1.091
												],
												[
													-0.547,
													-1.163
												],
												[
													-3.028,
													1.425
												],
												[
													-2.08,
													1.232
												],
												[
													-1.16,
													0.546
												],
												[
													-1.613,
													0.556
												],
												[
													-0.622,
													0.293
												],
												[
													-0.428,
													1.19
												],
												[
													0.664,
													1.411
												]
											],
											o: [
												[
													-1.014,
													-0.487
												],
												[
													-0.373,
													0.175
												],
												[
													-0.575,
													0.446
												],
												[
													-0.83,
													0.389
												],
												[
													-0.258,
													-0.335
												],
												[
													0,
													0
												],
												[
													-0.625,
													-1.329
												],
												[
													-0.3,
													-1.177
												],
												[
													0.333,
													-0.156
												],
												[
													0.713,
													-0.157
												],
												[
													0.997,
													-0.469
												],
												[
													0.281,
													-1.072
												],
												[
													-0.645,
													-1.369
												],
												[
													-1.221,
													-0.441
												],
												[
													-0.746,
													0.352
												],
												[
													-1.935,
													1.165
												],
												[
													-1.202,
													0.567
												],
												[
													0,
													0
												],
												[
													-0.145,
													0.018
												],
												[
													-1.245,
													0.585
												],
												[
													-0.399,
													1.252
												],
												[
													0.546,
													1.161
												],
												[
													1.014,
													0.484
												],
												[
													0.333,
													-0.157
												],
												[
													0.595,
													-0.459
												],
												[
													1.121,
													-0.528
												],
												[
													0,
													0
												],
												[
													1.309,
													2.78
												],
												[
													-0.332,
													0.156
												],
												[
													-0.732,
													0.166
												],
												[
													-0.954,
													0.449
												],
												[
													-0.273,
													1.09
												],
												[
													1.426,
													3.028
												],
												[
													0.706,
													-0.332
												],
												[
													2.081,
													-1.234
												],
												[
													1.454,
													-0.684
												],
												[
													2.4,
													-0.825
												],
												[
													1.37,
													-0.645
												],
												[
													0.428,
													-1.189
												],
												[
													-0.547,
													-1.161
												]
											],
											v: [
												[
													19.002,
													7.281
												],
												[
													16.048,
													7.227
												],
												[
													14.627,
													8.163
												],
												[
													13.267,
													9.07
												],
												[
													10.948,
													8.183
												],
												[
													9.623,
													5.69
												],
												[
													1.504,
													-11.55
												],
												[
													0.398,
													-14.223
												],
												[
													1.192,
													-16.575
												],
												[
													2.757,
													-17.045
												],
												[
													4.322,
													-17.516
												],
												[
													6.239,
													-19.825
												],
												[
													5.811,
													-23.235
												],
												[
													3.013,
													-25.947
												],
												[
													-0.81,
													-25.669
												],
												[
													-5.426,
													-23.039
												],
												[
													-11.13,
													-19.973
												],
												[
													-14.517,
													-18.606
												],
												[
													-18.671,
													-17.258
												],
												[
													-19.261,
													-17.056
												],
												[
													-21.727,
													-14.298
												],
												[
													-21.387,
													-10.428
												],
												[
													-19.045,
													-7.957
												],
												[
													-16.092,
													-7.903
												],
												[
													-14.701,
													-8.824
												],
												[
													-13.31,
													-9.745
												],
												[
													-9.637,
													-6.305
												],
												[
													-1.519,
													10.936
												],
												[
													-1.235,
													15.897
												],
												[
													-2.832,
													16.383
												],
												[
													-4.428,
													16.868
												],
												[
													-6.267,
													19.179
												],
												[
													-5.855,
													22.559
												],
												[
													0.828,
													24.963
												],
												[
													5.007,
													22.615
												],
												[
													9.87,
													19.944
												],
												[
													14.469,
													18.083
												],
												[
													19.002,
													16.405
												],
												[
													21.698,
													13.653
												],
												[
													21.344,
													9.751
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											448.832,
											591.46
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 14",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 7,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.087,
													0.288
												],
												[
													0.855,
													-0.618
												],
												[
													0.482,
													-0.548
												],
												[
													0.297,
													-0.215
												],
												[
													0.886,
													0.832
												],
												[
													0.859,
													1.19
												],
												[
													0,
													0
												],
												[
													0.194,
													0.424
												],
												[
													-0.743,
													0.538
												],
												[
													-0.689,
													0.299
												],
												[
													-0.297,
													0.214
												],
												[
													-0.079,
													1.104
												],
												[
													0.779,
													1.076
												],
												[
													1.261,
													0.219
												],
												[
													1.19,
													-0.861
												],
												[
													2.376,
													-2.113
												],
												[
													1.896,
													-1.371
												],
												[
													2.049,
													-1.199
												],
												[
													0.966,
													-0.699
												],
												[
													0.238,
													-1.276
												],
												[
													-0.86,
													-1.19
												],
												[
													-2.193,
													1.586
												],
												[
													-0.686,
													0.694
												],
												[
													-0.409,
													0.296
												],
												[
													-0.643,
													-0.497
												],
												[
													-0.431,
													-0.595
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.07,
													-0.334
												],
												[
													0.706,
													-0.512
												],
												[
													0.672,
													0.928
												],
												[
													0,
													0
												],
												[
													0.081,
													0.112
												],
												[
													0.055,
													0.074
												],
												[
													1.97,
													-1.425
												],
												[
													-1.64,
													-2.267
												],
												[
													-1.237,
													-1.396
												],
												[
													-0.538,
													-0.744
												],
												[
													-0.516,
													-0.872
												],
												[
													-0.27,
													-0.372
												],
												[
													-2.043,
													1.478
												],
												[
													1.048,
													1.45
												],
												[
													0.172,
													0.158
												],
												[
													0.08,
													0.112
												],
												[
													0.081,
													0.112
												],
												[
													-1.561,
													1.129
												],
												[
													-0.833,
													-1.152
												],
												[
													0,
													0
												],
												[
													0.134,
													-0.635
												],
												[
													1.45,
													-1.047
												],
												[
													0,
													0
												],
												[
													0.914,
													1.263
												],
												[
													0.425,
													0.821
												],
												[
													0.295,
													0.408
												],
												[
													1.316,
													0.292
												],
												[
													1.263,
													-0.913
												],
												[
													0.19,
													-1.383
												],
												[
													-0.94,
													-1.301
												],
												[
													-1.037,
													-1.004
												],
												[
													-0.431,
													-0.594
												],
												[
													-0.665,
													-1.388
												],
												[
													-0.484,
													-0.669
												],
												[
													-1.857,
													1.343
												],
												[
													-0.42,
													0.358
												],
												[
													0,
													0
												],
												[
													-1.263,
													0.913
												],
												[
													-1.013,
													0.788
												],
												[
													-1.263,
													0.914
												],
												[
													-3.022,
													1.846
												],
												[
													-0.855,
													0.618
												],
												[
													1.962,
													2.713
												]
											],
											o: [
												[
													-1.086,
													-0.29
												],
												[
													-0.334,
													0.242
												],
												[
													-0.482,
													0.545
												],
												[
													-0.744,
													0.537
												],
												[
													-0.315,
													-0.28
												],
												[
													0,
													0
												],
												[
													-0.86,
													-1.19
												],
												[
													-0.513,
													-1.102
												],
												[
													0.261,
													-0.188
												],
												[
													0.689,
													-0.3
												],
												[
													0.893,
													-0.645
												],
												[
													0.079,
													-1.105
												],
												[
													-0.888,
													-1.227
												],
												[
													-1.263,
													-0.22
												],
												[
													-0.297,
													0.216
												],
												[
													-1.034,
													0.919
												],
												[
													-0.966,
													0.698
												],
												[
													-2.047,
													1.199
												],
												[
													-1.263,
													0.914
												],
												[
													-0.238,
													1.275
												],
												[
													1.828,
													2.527
												],
												[
													0.409,
													-0.295
												],
												[
													0.686,
													-0.695
												],
												[
													0.818,
													-0.59
												],
												[
													0.354,
													0.255
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.457,
													0.631
												],
												[
													-0.069,
													0.333
												],
												[
													-1.411,
													1.021
												],
												[
													0,
													0
												],
												[
													-0.054,
													-0.074
												],
												[
													-0.07,
													-0.175
												],
												[
													-1.504,
													-2.082
												],
												[
													-1.932,
													1.397
												],
												[
													0.536,
													0.742
												],
												[
													1.237,
													1.398
												],
												[
													0.941,
													1.301
												],
												[
													0.517,
													0.87
												],
												[
													1.396,
													1.932
												],
												[
													1.748,
													-1.263
												],
												[
													-0.054,
													-0.075
												],
												[
													-0.134,
													-0.187
												],
												[
													-0.505,
													-0.541
												],
												[
													-0.779,
													-1.078
												],
												[
													1.003,
													-0.726
												],
												[
													0,
													0
												],
												[
													1.129,
													1.561
												],
												[
													-0.135,
													0.635
												],
												[
													0,
													0
												],
												[
													-1.859,
													1.344
												],
												[
													-0.296,
													-0.411
												],
												[
													-0.578,
													-1.113
												],
												[
													-0.995,
													-1.375
												],
												[
													-1.316,
													-0.294
												],
												[
													-1.263,
													0.914
												],
												[
													-0.19,
													1.381
												],
												[
													0.43,
													0.594
												],
												[
													1.037,
													1.004
												],
												[
													0.563,
													0.781
												],
												[
													0.442,
													0.924
												],
												[
													1.182,
													1.635
												],
												[
													-0.074,
													0.053
												],
												[
													0,
													0
												],
												[
													1.767,
													-1.393
												],
												[
													3.095,
													-2.295
												],
												[
													1.534,
													-1.166
												],
												[
													1.821,
													-1.317
												],
												[
													2.003,
													-1.223
												],
												[
													2.75,
													-1.988
												],
												[
													-0.753,
													-1.041
												]
											],
											v: [
												[
													20.362,
													-1.159
												],
												[
													17.451,
													-0.666
												],
												[
													16.227,
													0.517
												],
												[
													15.057,
													1.659
												],
												[
													12.615,
													1.217
												],
												[
													10.852,
													-0.987
												],
												[
													-0.317,
													-16.428
												],
												[
													-1.898,
													-18.85
												],
												[
													-1.552,
													-21.308
												],
												[
													-0.129,
													-22.04
												],
												[
													1.349,
													-22.812
												],
												[
													2.806,
													-25.436
												],
												[
													1.755,
													-28.708
												],
												[
													-1.468,
													-30.877
												],
												[
													-5.146,
													-29.916
												],
												[
													-9.156,
													-26.422
												],
												[
													-13.551,
													-22.988
												],
												[
													-18.073,
													-20.143
												],
												[
													-22.594,
													-17.298
												],
												[
													-24.846,
													-14.013
												],
												[
													-23.913,
													-10.316
												],
												[
													-17.882,
													-8.904
												],
												[
													-16.24,
													-10.389
												],
												[
													-14.596,
													-11.875
												],
												[
													-12.406,
													-12.016
												],
												[
													-11.231,
													-10.742
												],
												[
													-9.805,
													-8.888
												],
												[
													-7.466,
													-5.654
												],
												[
													-6.887,
													-4.206
												],
												[
													-8.051,
													-2.939
												],
												[
													-11.177,
													-2.801
												],
												[
													-11.62,
													-3.415
												],
												[
													-11.822,
													-3.694
												],
												[
													-12.008,
													-4.068
												],
												[
													-17.22,
													-5.053
												],
												[
													-17.659,
													0.444
												],
												[
													-14.997,
													3.654
												],
												[
													-12.336,
													6.866
												],
												[
													-10.15,
													10.124
												],
												[
													-8.97,
													11.989
												],
												[
													-3.809,
													12.67
												],
												[
													-2.76,
													8.601
												],
												[
													-3.099,
													8.252
												],
												[
													-3.421,
													7.805
												],
												[
													-4.299,
													6.827
												],
												[
													-3.125,
													3.518
												],
												[
													-0.372,
													4.157
												],
												[
													1.523,
													6.777
												],
												[
													3.014,
													10.071
												],
												[
													0.638,
													12.596
												],
												[
													-5.438,
													16.99
												],
												[
													-9.596,
													17.112
												],
												[
													-10.677,
													15.263
												],
												[
													-11.987,
													12.982
												],
												[
													-15.453,
													10.48
												],
												[
													-19.322,
													11.409
												],
												[
													-21.502,
													14.853
												],
												[
													-20.375,
													18.877
												],
												[
													-18.172,
													21.275
												],
												[
													-15.971,
													23.674
												],
												[
													-14.129,
													26.926
												],
												[
													-12.74,
													29.317
												],
												[
													-8.179,
													29.754
												],
												[
													-7.661,
													29.296
												],
												[
													-4.518,
													26.598
												],
												[
													0.027,
													23.14
												],
												[
													6.19,
													18.514
												],
												[
													10.388,
													15.394
												],
												[
													17.652,
													10.649
												],
												[
													21.94,
													7.888
												],
												[
													23.121,
													0.836
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											503.21,
											563.142
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 15",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 8,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.035,
													-0.031
												],
												[
													-0.782,
													0.899
												],
												[
													0,
													0
												],
												[
													-0.415,
													-0.362
												],
												[
													-0.073,
													-0.125
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.545,
													-0.353
												],
												[
													-0.485,
													-0.422
												],
												[
													0,
													0
												],
												[
													0.753,
													-0.865
												],
												[
													0.137,
													0.12
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													5.055,
													10.88
												],
												[
													4.29,
													10.398
												],
												[
													4.737,
													8.415
												],
												[
													7.537,
													5.198
												],
												[
													9.289,
													4.443
												],
												[
													9.607,
													4.81
												],
												[
													17.861,
													17.646
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.117,
													0.284
												],
												[
													-0.572,
													0.656
												],
												[
													-0.443,
													0.404
												],
												[
													-0.18,
													0.207
												],
												[
													2.421,
													2.108
												],
												[
													1.244,
													-0.103
												],
												[
													0.934,
													-1.073
												],
												[
													1.354,
													-2.045
												],
												[
													1.236,
													-1.42
												],
												[
													0.736,
													-0.636
												],
												[
													0.422,
													-0.485
												],
												[
													-0.181,
													-1.192
												],
												[
													-1.107,
													-0.964
												],
												[
													-1.113,
													1.28
												],
												[
													-0.249,
													0.39
												],
												[
													-0.15,
													0.172
												],
												[
													-0.553,
													-0.481
												],
												[
													1.715,
													-1.972
												],
												[
													0,
													0
												],
												[
													0.954,
													0.161
												],
												[
													0.933,
													0.813
												],
												[
													-0.572,
													0.658
												],
												[
													-0.353,
													0.301
												],
												[
													-0.15,
													0.172
												],
												[
													2.041,
													1.776
												],
												[
													1.236,
													0.011
												],
												[
													0.813,
													-0.934
												],
												[
													1.259,
													-2.005
												],
												[
													1.145,
													-1.316
												],
												[
													0.731,
													-0.701
												],
												[
													1.016,
													-0.818
												],
												[
													0.422,
													-0.485
												],
												[
													-0.091,
													-1.296
												],
												[
													-1.142,
													-0.992
												],
												[
													-1.686,
													1.936
												],
												[
													0,
													0
												],
												[
													-0.18,
													0.208
												],
												[
													-2.216,
													-1.016
												],
												[
													0,
													0
												],
												[
													-1.025,
													0.445
												],
												[
													-2.529,
													2.905
												],
												[
													-0.281,
													1.093
												],
												[
													1.595,
													2.847
												]
											],
											o: [
												[
													-0.741,
													-1.316
												],
												[
													-0.365,
													-1.048
												],
												[
													0.181,
													-0.209
												],
												[
													0.444,
													-0.404
												],
												[
													1.596,
													-1.835
												],
												[
													-1.073,
													-0.934
												],
												[
													-1.245,
													0.102
												],
												[
													-0.301,
													0.346
												],
												[
													-0.588,
													0.886
												],
												[
													-1.143,
													1.314
												],
												[
													-1.687,
													1.45
												],
												[
													-0.843,
													0.968
												],
												[
													0.18,
													1.19
												],
												[
													2.042,
													1.776
												],
												[
													0.152,
													-0.173
												],
												[
													0.249,
													-0.392
												],
												[
													0.512,
													-0.59
												],
												[
													2.353,
													2.047
												],
												[
													0,
													0
												],
												[
													-0.511,
													0.588
												],
												[
													-0.954,
													-0.162
												],
												[
													-0.727,
													-0.633
												],
												[
													0.151,
													-0.173
												],
												[
													0.353,
													-0.301
												],
												[
													1.145,
													-1.315
												],
												[
													-1.073,
													-0.935
												],
												[
													-1.236,
													-0.012
												],
												[
													-0.391,
													0.449
												],
												[
													-0.322,
													0.51
												],
												[
													-1.053,
													1.21
												],
												[
													-0.271,
													0.312
												],
												[
													-0.795,
													0.706
												],
												[
													-0.962,
													1.107
												],
												[
													0.089,
													1.293
												],
												[
													2.285,
													1.988
												],
												[
													0,
													0
												],
												[
													0.348,
													-0.609
												],
												[
													0.603,
													-0.692
												],
												[
													0,
													0
												],
												[
													2.083,
													0.959
												],
												[
													1.025,
													-0.444
												],
												[
													2.258,
													-2.596
												],
												[
													0.314,
													-1.549
												],
												[
													0,
													0
												]
											],
											v: [
												[
													11.309,
													-14.227
												],
												[
													10.021,
													-16.625
												],
												[
													10.331,
													-19.182
												],
												[
													11.267,
													-20.101
												],
												[
													12.202,
													-21.018
												],
												[
													10.963,
													-26.93
												],
												[
													7.488,
													-28.177
												],
												[
													4.221,
													-26.414
												],
												[
													1.739,
													-22.828
												],
												[
													-0.996,
													-19.37
												],
												[
													-3.815,
													-16.445
												],
												[
													-6.978,
													-13.542
												],
												[
													-7.972,
													-10.305
												],
												[
													-6.042,
													-7.073
												],
												[
													-1.309,
													-6.331
												],
												[
													-0.709,
													-7.176
												],
												[
													-0.11,
													-8.021
												],
												[
													1.488,
													-8.182
												],
												[
													2.444,
													-2.153
												],
												[
													-3.563,
													4.75
												],
												[
													-5.761,
													5.389
												],
												[
													-8.593,
													3.929
												],
												[
													-8.825,
													1.993
												],
												[
													-8.07,
													1.284
												],
												[
													-7.315,
													0.573
												],
												[
													-8.661,
													-4.064
												],
												[
													-12.124,
													-5.482
												],
												[
													-15.197,
													-4.098
												],
												[
													-17.672,
													-0.416
												],
												[
													-19.872,
													2.323
												],
												[
													-22.549,
													5.19
												],
												[
													-24.48,
													6.883
												],
												[
													-26.307,
													8.669
												],
												[
													-27.616,
													12.271
												],
												[
													-25.77,
													15.701
												],
												[
													-19.815,
													15.776
												],
												[
													-19.319,
													15.206
												],
												[
													-18.526,
													13.981
												],
												[
													-14.299,
													14.466
												],
												[
													13.59,
													27.062
												],
												[
													18.252,
													27.834
												],
												[
													23.584,
													22.81
												],
												[
													27.393,
													17.276
												],
												[
													25.472,
													10.681
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											540.284,
											510.769
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 16",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 9,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													3.02,
													1.441
												],
												[
													1.092,
													-0.267
												],
												[
													0.455,
													-0.953
												],
												[
													0.161,
													-0.712
												],
												[
													0.158,
													-0.332
												],
												[
													1.174,
													0.305
												],
												[
													1.324,
													0.63
												],
												[
													0,
													0
												],
												[
													0.373,
													0.28
												],
												[
													-0.395,
													0.827
												],
												[
													-0.452,
													0.572
												],
												[
													-0.157,
													0.332
												],
												[
													0.459,
													1.007
												],
												[
													1.2,
													0.573
												],
												[
													1.264,
													-0.415
												],
												[
													0.613,
													-1.283
												],
												[
													0,
													0
												],
												[
													0.672,
													-1.408
												],
												[
													0.497,
													-0.83
												],
												[
													0.718,
													-1.08
												],
												[
													0.276,
													-0.58
												],
												[
													-0.473,
													-1.14
												],
												[
													-1.408,
													-0.672
												],
												[
													-0.789,
													1.656
												],
												[
													-0.019,
													0.143
												],
												[
													-0.059,
													0.125
												],
												[
													-0.039,
													0.083
												],
												[
													-0.184,
													0.065
												],
												[
													-1.946,
													-0.928
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.79,
													-1.656
												],
												[
													0,
													0
												],
												[
													-2.294,
													-2.009
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.394,
													0.238
												],
												[
													-0.316,
													0.661
												],
												[
													-0.121,
													0.145
												],
												[
													-0.06,
													0.124
												],
												[
													-0.119,
													0.248
												],
												[
													2.566,
													1.224
												],
												[
													1.193,
													-0.372
												],
												[
													0.592,
													-1.242
												],
												[
													0.525,
													-1.631
												],
												[
													0.375,
													-0.787
												],
												[
													0.757,
													-1.164
												],
												[
													0.376,
													-0.787
												],
												[
													-0.412,
													-1.214
												],
												[
													-1.407,
													-0.671
												],
												[
													-1.102,
													0.286
												],
												[
													-0.454,
													0.952
												],
												[
													-0.171,
													0.731
												],
												[
													-0.158,
													0.331
												],
												[
													-2.815,
													-1.343
												],
												[
													0,
													0
												],
												[
													0.533,
													-1.117
												],
												[
													0.46,
													-0.594
												],
												[
													0.178,
													-0.373
												],
												[
													-0.481,
													-1.019
												],
												[
													-1.159,
													-0.554
												],
												[
													-1.202,
													0.444
												],
												[
													-0.652,
													1.365
												],
												[
													-0.451,
													1.156
												],
												[
													-0.473,
													0.993
												],
												[
													-1.096,
													1.763
												],
												[
													-0.435,
													0.909
												],
												[
													0.417,
													0.885
												],
												[
													1.604,
													1.323
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.694,
													0.176
												],
												[
													-0.494,
													1.033
												],
												[
													-0.487,
													1.444
												],
												[
													-0.889,
													1.863
												],
												[
													-1.313,
													2.22
												],
												[
													-0.473,
													0.993
												]
											],
											o: [
												[
													-1.159,
													-0.554
												],
												[
													-1.092,
													0.267
												],
												[
													-0.177,
													0.372
												],
												[
													-0.161,
													0.71
												],
												[
													-0.395,
													0.828
												],
												[
													-0.413,
													-0.095
												],
												[
													0,
													0
												],
												[
													-1.326,
													-0.632
												],
												[
													-0.978,
													-0.722
												],
												[
													0.159,
													-0.332
												],
												[
													0.451,
													-0.573
												],
												[
													0.474,
													-0.993
												],
												[
													-0.46,
													-1.008
												],
												[
													-1.325,
													-0.632
												],
												[
													-1.264,
													0.412
												],
												[
													0,
													0
												],
												[
													-0.33,
													1.011
												],
												[
													-0.534,
													1.117
												],
												[
													-0.18,
													0.269
												],
												[
													-0.559,
													0.85
												],
												[
													-0.592,
													1.242
												],
												[
													0.472,
													1.14
												],
												[
													2.525,
													1.204
												],
												[
													0.119,
													-0.249
												],
												[
													0.059,
													-0.124
												],
												[
													0.038,
													-0.186
												],
												[
													0.159,
													-0.332
												],
												[
													0.426,
													-0.255
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-2.656,
													-0.505
												],
												[
													0,
													0
												],
												[
													-0.809,
													1.696
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.994,
													-0.474
												],
												[
													-0.852,
													-0.558
												],
												[
													0.02,
													-0.041
												],
												[
													0.079,
													-0.165
												],
												[
													0.1,
													-0.104
												],
												[
													0.81,
													-1.699
												],
												[
													-1.366,
													-0.652
												],
												[
													-1.194,
													0.37
												],
												[
													-0.375,
													0.787
												],
												[
													-0.523,
													1.63
												],
												[
													-0.593,
													1.242
												],
												[
													-1.137,
													1.744
												],
												[
													-0.651,
													1.366
												],
												[
													0.412,
													1.213
												],
												[
													1.158,
													0.553
												],
												[
													1.102,
													-0.287
												],
												[
													0.159,
													-0.331
												],
												[
													0.171,
													-0.732
												],
												[
													0.513,
													-1.077
												],
												[
													0,
													0
												],
												[
													2.773,
													1.324
												],
												[
													-0.138,
													0.289
												],
												[
													-0.461,
													0.592
												],
												[
													-0.453,
													0.952
												],
												[
													0.48,
													1.016
												],
												[
													1.406,
													0.671
												],
												[
													1.202,
													-0.443
												],
												[
													0.257,
													-0.539
												],
												[
													1.544,
													-4.092
												],
												[
													0.455,
													-0.952
												],
												[
													1.095,
													-1.765
												],
												[
													0.494,
													-1.036
												],
												[
													-0.416,
													-0.884
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													1.751,
													0.378
												],
												[
													0.694,
													-0.177
												],
												[
													0.375,
													-0.788
												],
												[
													0.719,
													-2.147
												],
												[
													0.554,
													-1.159
												],
												[
													1.313,
													-2.219
												],
												[
													1.462,
													-3.063
												]
											],
											v: [
												[
													31.5,
													-24.395
												],
												[
													28.122,
													-24.825
												],
												[
													25.802,
													-22.997
												],
												[
													25.293,
													-21.372
												],
												[
													24.815,
													-19.809
												],
												[
													22.46,
													-19.027
												],
												[
													19.854,
													-20.117
												],
												[
													2.656,
													-28.324
												],
												[
													0.107,
													-29.694
												],
												[
													-0.766,
													-32.015
												],
												[
													0.148,
													-33.371
												],
												[
													1.06,
													-34.728
												],
												[
													1.083,
													-37.728
												],
												[
													-1.407,
													-40.098
												],
												[
													-5.29,
													-40.424
												],
												[
													-8.105,
													-37.882
												],
												[
													-9.445,
													-33.794
												],
												[
													-10.948,
													-30.166
												],
												[
													-12.495,
													-27.246
												],
												[
													-13.841,
													-25.22
												],
												[
													-15.094,
													-23.074
												],
												[
													-15.274,
													-19.501
												],
												[
													-12.456,
													-16.783
												],
												[
													-7.484,
													-17.46
												],
												[
													-7.279,
													-18.048
												],
												[
													-7.1,
													-18.421
												],
												[
													-6.985,
													-18.823
												],
												[
													-6.472,
													-19.418
												],
												[
													-2.915,
													-18.406
												],
												[
													20.492,
													-7.236
												],
												[
													-14.43,
													-13.762
												],
												[
													-19.599,
													-12.036
												],
												[
													-21.495,
													-8.062
												],
												[
													-19.269,
													-2.504
												],
												[
													7.161,
													20.702
												],
												[
													-16.247,
													9.534
												],
												[
													-18.328,
													8.464
												],
												[
													-19.131,
													6.633
												],
												[
													-18.922,
													6.352
												],
												[
													-18.714,
													5.917
												],
												[
													-18.385,
													5.389
												],
												[
													-21.021,
													1.006
												],
												[
													-24.859,
													0.585
												],
												[
													-27.537,
													3.003
												],
												[
													-28.886,
													6.628
												],
												[
													-30.234,
													10.253
												],
												[
													-32.26,
													13.861
												],
												[
													-34.529,
													17.655
												],
												[
													-34.888,
													21.524
												],
												[
													-32.159,
													24.35
												],
												[
													-28.767,
													24.75
												],
												[
													-26.432,
													22.891
												],
												[
													-25.938,
													21.298
												],
												[
													-25.444,
													19.704
												],
												[
													-20.453,
													20.103
												],
												[
													-3.255,
													28.31
												],
												[
													0.107,
													31.972
												],
												[
													-0.792,
													33.297
												],
												[
													-1.751,
													34.745
												],
												[
													-1.711,
													37.699
												],
												[
													0.747,
													40.053
												],
												[
													4.661,
													40.396
												],
												[
													7.443,
													37.684
												],
												[
													8.504,
													35.141
												],
												[
													11.531,
													27.514
												],
												[
													13.857,
													23.441
												],
												[
													16.153,
													19.43
												],
												[
													16.268,
													16.55
												],
												[
													13.237,
													13.237
												],
												[
													-5.914,
													-2.535
												],
												[
													19.206,
													3.126
												],
												[
													22.874,
													3.428
												],
												[
													24.656,
													1.611
												],
												[
													25.948,
													-1.737
												],
												[
													28.359,
													-7.751
												],
												[
													31.159,
													-12.819
												],
												[
													33.839,
													-17.637
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											591.133,
											450.03
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 17",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 10,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.468,
													-0.291
												],
												[
													0.141,
													-0.033
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.039,
													-0.024
												],
												[
													-0.628,
													-1.013
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.156,
													0.096
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.497,
													-0.416
												],
												[
													0.547,
													-0.339
												],
												[
													0,
													0
												],
												[
													0.606,
													0.973
												]
											],
											v: [
												[
													-3.427,
													11.776
												],
												[
													-3.873,
													11.972
												],
												[
													-18.569,
													16.085
												],
												[
													-8.334,
													5.835
												],
												[
													-7.648,
													5.246
												],
												[
													-5.886,
													6.257
												],
												[
													-3.634,
													9.88
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.307,
													0.028
												],
												[
													-0.459,
													-0.739
												],
												[
													-0.256,
													-0.541
												],
												[
													-0.146,
													-0.234
												],
												[
													-2.725,
													1.694
												],
												[
													-0.267,
													1.22
												],
												[
													0.752,
													1.207
												],
												[
													1.556,
													1.895
												],
												[
													0.994,
													1.598
												],
												[
													0.391,
													0.891
												],
												[
													0.341,
													0.545
												],
												[
													1.192,
													0.178
												],
												[
													1.247,
													-0.775
												],
												[
													-0.895,
													-1.441
												],
												[
													-0.301,
													-0.353
												],
												[
													-0.121,
													-0.194
												],
												[
													0.623,
													-0.388
												],
												[
													1.38,
													2.22
												],
												[
													0,
													0
												],
												[
													-0.435,
													0.865
												],
												[
													-1.052,
													0.654
												],
												[
													-0.459,
													-0.738
												],
												[
													-0.184,
													-0.425
												],
												[
													-0.12,
													-0.194
												],
												[
													-2.298,
													1.429
												],
												[
													-0.375,
													1.178
												],
												[
													0.653,
													1.052
												],
												[
													1.546,
													1.793
												],
												[
													0.921,
													1.48
												],
												[
													0.454,
													0.906
												],
												[
													0.484,
													1.211
												],
												[
													0.339,
													0.546
												],
												[
													1.264,
													0.295
												],
												[
													1.286,
													-0.8
												],
												[
													-1.355,
													-2.181
												],
												[
													0,
													0
												],
												[
													-0.145,
													-0.234
												],
												[
													1.623,
													-1.819
												],
												[
													0,
													0
												],
												[
													-0.124,
													-1.109
												],
												[
													-2.033,
													-3.273
												],
												[
													-0.961,
													-0.589
												],
												[
													-3.191,
													0.686
												],
												[
													0,
													0
												]
											],
											o: [
												[
													1.108,
													-0.041
												],
												[
													0.146,
													0.234
												],
												[
													0.257,
													0.544
												],
												[
													1.283,
													2.065
												],
												[
													1.209,
													-0.751
												],
												[
													0.268,
													-1.219
												],
												[
													-0.242,
													-0.389
												],
												[
													-0.674,
													-0.822
												],
												[
													-0.92,
													-1.48
												],
												[
													-0.891,
													-2.038
												],
												[
													-0.677,
													-1.09
												],
												[
													-1.19,
													-0.178
												],
												[
													-2.298,
													1.428
												],
												[
													0.121,
													0.195
												],
												[
													0.3,
													0.354
												],
												[
													0.412,
													0.663
												],
												[
													-2.649,
													1.646
												],
												[
													0,
													0
												],
												[
													-0.412,
													-0.662
												],
												[
													0.434,
													-0.864
												],
												[
													0.818,
													-0.509
												],
												[
													0.122,
													0.196
												],
												[
													0.184,
													0.426
												],
												[
													0.92,
													1.482
												],
												[
													1.208,
													-0.75
												],
												[
													0.375,
													-1.178
												],
												[
													-0.315,
													-0.506
												],
												[
													-0.391,
													-0.459
												],
												[
													-0.847,
													-1.362
												],
												[
													-0.218,
													-0.351
												],
												[
													-0.44,
													-0.968
												],
												[
													-0.774,
													-1.246
												],
												[
													-1.264,
													-0.294
												],
												[
													-2.57,
													1.597
												],
												[
													0,
													0
												],
												[
													0.479,
													0.512
												],
												[
													0.485,
													0.779
												],
												[
													0,
													0
												],
												[
													-1.531,
													1.709
												],
												[
													0.124,
													1.112
												],
												[
													1.816,
													2.921
												],
												[
													1.389,
													0.757
												],
												[
													0,
													0
												],
												[
													1.475,
													-0.321
												]
											],
											v: [
												[
													16.493,
													18.673
												],
												[
													18.845,
													19.721
												],
												[
													19.448,
													20.885
												],
												[
													20.051,
													22.05
												],
												[
													26.064,
													22.605
												],
												[
													28.278,
													19.649
												],
												[
													27.554,
													16.009
												],
												[
													24.857,
													12.582
												],
												[
													22.358,
													8.952
												],
												[
													20.391,
													5.395
												],
												[
													18.547,
													1.519
												],
												[
													15.745,
													-0.384
												],
												[
													12.089,
													0.511
												],
												[
													9.986,
													4.816
												],
												[
													10.619,
													5.638
												],
												[
													11.251,
													6.46
												],
												[
													10.934,
													8.034
												],
												[
													4.89,
													7.173
												],
												[
													0.06,
													-0.598
												],
												[
													0.095,
													-2.887
												],
												[
													2.325,
													-5.164
												],
												[
													4.241,
													-4.818
												],
												[
													4.699,
													-3.886
												],
												[
													5.156,
													-2.956
												],
												[
													9.983,
													-2.878
												],
												[
													12.357,
													-5.77
												],
												[
													11.938,
													-9.115
												],
												[
													9.146,
													-12.563
												],
												[
													7.177,
													-15.471
												],
												[
													5.225,
													-18.874
												],
												[
													4.173,
													-21.217
												],
												[
													3.004,
													-23.488
												],
												[
													-0.052,
													-25.8
												],
												[
													-3.876,
													-25.043
												],
												[
													-5.698,
													-19.375
												],
												[
													-5.298,
													-18.732
												],
												[
													-4.361,
													-17.614
												],
												[
													-6.069,
													-13.717
												],
												[
													-26.311,
													9.232
												],
												[
													-28.422,
													13.46
												],
												[
													-25.186,
													20.036
												],
												[
													-21.02,
													25.303
												],
												[
													-14.151,
													25.408
												],
												[
													13.822,
													19.198
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											73.276,
											470.172
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 18",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 11,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.605,
													0.408
												],
												[
													0.252,
													0.268
												],
												[
													-0.71,
													0.984
												],
												[
													-1.069,
													1.005
												],
												[
													0,
													0
												],
												[
													-0.396,
													0.248
												],
												[
													-0.627,
													-0.668
												],
												[
													-0.369,
													-0.628
												],
												[
													-0.252,
													-0.267
												],
												[
													-1.106,
													0.063
												],
												[
													-0.969,
													0.911
												],
												[
													-0.04,
													1.297
												],
												[
													1.005,
													1.07
												],
												[
													2.053,
													1.785
												],
												[
													1.413,
													1.504
												],
												[
													0.653,
													0.896
												],
												[
													0,
													0
												],
												[
													0.188,
													0.201
												],
												[
													1.315,
													-0.007
												],
												[
													1.07,
													-1.007
												],
												[
													0.148,
													-1.114
												],
												[
													-0.722,
													-0.768
												],
												[
													-0.618,
													-0.425
												],
												[
													-0.25,
													-0.267
												],
												[
													2.274,
													-2.137
												],
												[
													0,
													0
												],
												[
													0.848,
													0.902
												],
												[
													0.385,
													0.644
												],
												[
													0.252,
													0.269
												],
												[
													1.122,
													-0.079
												],
												[
													0.937,
													-0.879
												],
												[
													-2.292,
													-2.439
												],
												[
													-1.816,
													-1.598
												],
												[
													-0.88,
													-0.936
												],
												[
													-1.029,
													-1.363
												],
												[
													-0.471,
													-0.502
												],
												[
													-1.264,
													-0.039
												],
												[
													-1.136,
													1.068
												],
												[
													-0.147,
													1.115
												],
												[
													0.724,
													0.77
												]
											],
											o: [
												[
													-0.602,
													-0.409
												],
												[
													-0.628,
													-0.669
												],
												[
													0.239,
													-0.349
												],
												[
													0,
													0
												],
												[
													1.07,
													-1.006
												],
												[
													1.027,
													-0.648
												],
												[
													0.251,
													0.268
												],
												[
													0.37,
													0.629
												],
												[
													0.753,
													0.803
												],
												[
													1.106,
													-0.063
												],
												[
													1.103,
													-1.036
												],
												[
													0.041,
													-1.297
												],
												[
													-0.566,
													-0.602
												],
												[
													-1.706,
													-1.479
												],
												[
													-0.91,
													-0.968
												],
												[
													0,
													0
												],
												[
													-0.061,
													-0.131
												],
												[
													-0.943,
													-1.003
												],
												[
													-1.314,
													0.008
												],
												[
													-0.936,
													0.878
												],
												[
													-0.148,
													1.115
												],
												[
													0.252,
													0.267
												],
												[
													0.621,
													0.424
												],
												[
													0.848,
													0.903
												],
												[
													0,
													0
												],
												[
													-2.239,
													2.104
												],
												[
													-0.251,
													-0.268
												],
												[
													-0.386,
													-0.645
												],
												[
													-0.722,
													-0.768
												],
												[
													-1.122,
													0.078
												],
												[
													-2.439,
													2.292
												],
												[
													0.535,
													0.568
												],
												[
													1.817,
													1.597
												],
												[
													1.099,
													1.17
												],
												[
													1.526,
													2.027
												],
												[
													1.036,
													1.103
												],
												[
													1.264,
													0.039
												],
												[
													0.936,
													-0.879
												],
												[
													0.149,
													-1.115
												],
												[
													-0.282,
													-0.3
												]
											],
											v: [
												[
													-3.18,
													16.531
												],
												[
													-4.462,
													15.517
												],
												[
													-4.337,
													13.039
												],
												[
													-2.375,
													11.007
												],
												[
													11.513,
													-2.041
												],
												[
													13.714,
													-3.92
												],
												[
													16.194,
													-3.891
												],
												[
													17.126,
													-2.548
												],
												[
													18.059,
													-1.205
												],
												[
													20.846,
													-0.095
												],
												[
													23.957,
													-1.556
												],
												[
													25.672,
													-5.055
												],
												[
													24.227,
													-8.604
												],
												[
													20.298,
													-12.183
												],
												[
													15.618,
													-16.66
												],
												[
													13.273,
													-19.458
												],
												[
													10.706,
													-22.994
												],
												[
													10.333,
													-23.492
												],
												[
													6.948,
													-24.985
												],
												[
													3.372,
													-23.465
												],
												[
													1.746,
													-20.475
												],
												[
													2.607,
													-17.649
												],
												[
													3.913,
													-16.611
												],
												[
													5.219,
													-15.573
												],
												[
													3.081,
													-11.015
												],
												[
													-10.807,
													2.033
												],
												[
													-15.438,
													3.835
												],
												[
													-16.392,
													2.467
												],
												[
													-17.348,
													1.098
												],
												[
													-20.113,
													0.064
												],
												[
													-23.201,
													1.5
												],
												[
													-23.422,
													8.599
												],
												[
													-19.897,
													11.848
												],
												[
													-15.854,
													15.649
												],
												[
													-12.663,
													19.447
												],
												[
													-9.667,
													23.239
												],
												[
													-6.216,
													24.953
												],
												[
													-2.616,
													23.41
												],
												[
													-0.99,
													20.419
												],
												[
													-1.85,
													17.593
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											104.395,
											525.49
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 19",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 12,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.186,
													0.866
												],
												[
													2.745,
													1.607
												],
												[
													1.889,
													1.38
												],
												[
													1.774,
													1.577
												],
												[
													0.963,
													0.704
												],
												[
													1.287,
													-0.168
												],
												[
													0.866,
													-1.186
												],
												[
													-2.187,
													-1.595
												],
												[
													-0.872,
													-0.439
												],
												[
													-0.407,
													-0.298
												],
												[
													0.276,
													-0.765
												],
												[
													0.433,
													-0.594
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.339,
													-0.037
												],
												[
													0.704,
													0.515
												],
												[
													-0.675,
													0.926
												],
												[
													0,
													0
												],
												[
													-0.082,
													0.112
												],
												[
													-0.054,
													0.074
												],
												[
													1.964,
													1.433
												],
												[
													1.649,
													-2.261
												],
												[
													0.948,
													-1.609
												],
												[
													0.541,
													-0.742
												],
												[
													0.67,
													-0.761
												],
												[
													0.27,
													-0.37
												],
												[
													-2.037,
													-1.486
												],
												[
													-1.054,
													1.445
												],
												[
													-0.098,
													0.212
												],
												[
													-0.081,
													0.11
												],
												[
													-0.081,
													0.111
												],
												[
													-1.556,
													-1.136
												],
												[
													0.837,
													-1.148
												],
												[
													0,
													0
												],
												[
													0.648,
													-0.068
												],
												[
													1.446,
													1.054
												],
												[
													0,
													0
												],
												[
													-0.919,
													1.26
												],
												[
													-0.652,
													0.659
												],
												[
													-0.298,
													0.407
												],
												[
													0.129,
													1.342
												],
												[
													1.259,
													0.92
												],
												[
													1.372,
													-0.247
												],
												[
													0.947,
													-1.297
												],
												[
													0.635,
													-1.296
												],
												[
													0.433,
													-0.593
												],
												[
													1.114,
													-1.06
												],
												[
													0.486,
													-0.667
												],
												[
													-1.853,
													-1.351
												],
												[
													-0.472,
													-0.288
												],
												[
													0,
													0
												],
												[
													-1.258,
													-0.92
												],
												[
													-1.063,
													-0.72
												],
												[
													-1.261,
													-0.919
												],
												[
													-2.69,
													-2.304
												],
												[
													-0.852,
													-0.621
												],
												[
													-1.974,
													2.705
												],
												[
													0.061,
													1.123
												],
												[
													0.852,
													0.623
												],
												[
													0.671,
													0.289
												],
												[
													0.297,
													0.216
												],
												[
													-0.517,
													1.099
												],
												[
													-0.866,
													1.186
												],
												[
													0,
													0
												],
												[
													-0.344,
													0.316
												],
												[
													-0.74,
													-0.541
												],
												[
													-0.498,
													-0.563
												],
												[
													-0.297,
													-0.217
												],
												[
													-1.074,
													0.266
												],
												[
													-0.783,
													1.075
												],
												[
													0.182,
													1.268
												]
											],
											o: [
												[
													-0.296,
													-0.215
												],
												[
													-1.192,
													-0.7
												],
												[
													-0.962,
													-0.702
												],
												[
													-1.772,
													-1.577
												],
												[
													-1.259,
													-0.919
												],
												[
													-1.286,
													0.169
												],
												[
													-1.838,
													2.518
												],
												[
													0.407,
													0.298
												],
												[
													0.873,
													0.437
												],
												[
													0.815,
													0.595
												],
												[
													-0.133,
													0.416
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.459,
													0.629
												],
												[
													-0.338,
													0.037
												],
												[
													-1.408,
													-1.026
												],
												[
													0,
													0
												],
												[
													0.055,
													-0.074
												],
												[
													0.145,
													-0.121
												],
												[
													1.515,
													-2.075
												],
												[
													-1.926,
													-1.405
												],
												[
													-0.54,
													0.741
												],
												[
													-0.946,
													1.608
												],
												[
													-0.947,
													1.296
												],
												[
													-0.668,
													0.76
												],
												[
													-1.406,
													1.926
												],
												[
													1.741,
													1.271
												],
												[
													0.055,
													-0.075
												],
												[
													0.135,
													-0.186
												],
												[
													0.359,
													-0.648
												],
												[
													0.785,
													-1.075
												],
												[
													1,
													0.73
												],
												[
													0,
													0
												],
												[
													-1.135,
													1.556
												],
												[
													-0.645,
													0.069
												],
												[
													0,
													0
												],
												[
													-1.852,
													-1.352
												],
												[
													0.298,
													-0.408
												],
												[
													0.879,
													-0.892
												],
												[
													1,
													-1.37
												],
												[
													-0.126,
													-1.343
												],
												[
													-1.26,
													-0.918
												],
												[
													-1.373,
													0.246
												],
												[
													-0.432,
													0.592
												],
												[
													-0.634,
													1.298
												],
												[
													-0.567,
													0.777
												],
												[
													-0.743,
													0.707
												],
												[
													-1.19,
													1.63
												],
												[
													-0.073,
													-0.053
												],
												[
													0,
													0
												],
												[
													1.87,
													1.251
												],
												[
													3.139,
													2.234
												],
												[
													1.583,
													1.099
												],
												[
													1.814,
													1.326
												],
												[
													1.781,
													1.527
												],
												[
													2.742,
													2.002
												],
												[
													0.757,
													-1.037
												],
												[
													-0.06,
													-1.123
												],
												[
													-0.333,
													-0.243
												],
												[
													-0.668,
													-0.289
												],
												[
													-0.741,
													-0.54
												],
												[
													0.169,
													-0.387
												],
												[
													0,
													0
												],
												[
													0.866,
													-1.186
												],
												[
													0.889,
													-0.829
												],
												[
													0.26,
													0.189
												],
												[
													0.498,
													0.562
												],
												[
													0.888,
													0.649
												],
												[
													1.074,
													-0.267
												],
												[
													0.893,
													-1.223
												],
												[
													-0.182,
													-1.269
												]
											],
											v: [
												[
													28.818,
													-12.726
												],
												[
													24.256,
													-15.46
												],
												[
													19.633,
													-18.579
												],
												[
													15.529,
													-21.999
												],
												[
													11.426,
													-25.421
												],
												[
													7.606,
													-26.548
												],
												[
													4.378,
													-24.517
												],
												[
													4.9,
													-18.346
												],
												[
													6.82,
													-17.242
												],
												[
													8.739,
													-16.139
												],
												[
													9.55,
													-14.1
												],
												[
													8.704,
													-12.589
												],
												[
													7.38,
													-10.659
												],
												[
													5.027,
													-7.436
												],
												[
													3.829,
													-6.438
												],
												[
													2.265,
													-7.153
												],
												[
													1.167,
													-10.083
												],
												[
													1.614,
													-10.694
												],
												[
													1.817,
													-10.972
												],
												[
													2.115,
													-11.266
												],
												[
													1.441,
													-16.526
												],
												[
													-3.921,
													-15.245
												],
												[
													-6.153,
													-11.721
												],
												[
													-8.385,
													-8.197
												],
												[
													-10.808,
													-5.111
												],
												[
													-12.217,
													-3.414
												],
												[
													-11.27,
													1.706
												],
												[
													-7.076,
													1.445
												],
												[
													-6.848,
													1.016
												],
												[
													-6.524,
													0.572
												],
												[
													-5.864,
													-0.566
												],
												[
													-2.354,
													-0.474
												],
												[
													-2.111,
													2.343
												],
												[
													-4.018,
													4.956
												],
												[
													-6.691,
													7.391
												],
												[
													-9.826,
													5.911
												],
												[
													-15.882,
													1.491
												],
												[
													-17.282,
													-2.427
												],
												[
													-15.857,
													-4.027
												],
												[
													-14.093,
													-5.977
												],
												[
													-12.786,
													-10.047
												],
												[
													-14.864,
													-13.439
												],
												[
													-18.813,
													-14.447
												],
												[
													-22.292,
													-12.131
												],
												[
													-23.893,
													-9.297
												],
												[
													-25.494,
													-6.461
												],
												[
													-28.016,
													-3.705
												],
												[
													-29.861,
													-1.644
												],
												[
													-28.868,
													2.828
												],
												[
													-28.271,
													3.179
												],
												[
													-24.735,
													5.333
												],
												[
													-20.042,
													8.59
												],
												[
													-13.738,
													13.021
												],
												[
													-9.473,
													16.048
												],
												[
													-2.715,
													21.492
												],
												[
													1.235,
													24.715
												],
												[
													8.308,
													23.66
												],
												[
													9.352,
													20.42
												],
												[
													7.984,
													17.803
												],
												[
													6.48,
													17.004
												],
												[
													5.032,
													16.245
												],
												[
													4.697,
													13.786
												],
												[
													6.249,
													11.427
												],
												[
													17.485,
													-3.965
												],
												[
													19.299,
													-6.217
												],
												[
													21.742,
													-6.648
												],
												[
													22.878,
													-5.521
												],
												[
													24.071,
													-4.353
												],
												[
													27.015,
													-3.779
												],
												[
													29.803,
													-5.79
												],
												[
													30.869,
													-9.526
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											146.237,
											567.141
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 20",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 13,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0.215,
													-0.506
												],
												[
													0.097,
													-0.108
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.019,
													-0.042
												],
												[
													-1.097,
													-0.465
												],
												[
													0,
													0
												]
											],
											o: [
												[
													-0.071,
													0.168
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.167,
													-0.627
												],
												[
													0.253,
													-0.591
												],
												[
													0,
													0
												],
												[
													1.055,
													0.448
												]
											],
											v: [
												[
													-4.111,
													5.957
												],
												[
													-4.363,
													6.372
												],
												[
													-14.02,
													18.19
												],
												[
													-11.542,
													3.919
												],
												[
													-11.32,
													3.042
												],
												[
													-9.296,
													2.854
												],
												[
													-5.37,
													4.525
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.309,
													0.556
												],
												[
													2.363,
													0.657
												],
												[
													1.732,
													0.736
												],
												[
													0.833,
													0.504
												],
												[
													0.592,
													0.252
												],
												[
													1.077,
													-0.541
												],
												[
													0.574,
													-1.351
												],
												[
													-1.561,
													-0.663
												],
												[
													-0.448,
													-0.116
												],
												[
													-0.21,
													-0.09
												],
												[
													0.286,
													-0.675
												],
												[
													2.405,
													1.023
												],
												[
													0,
													0
												],
												[
													0.141,
													0.957
												],
												[
													-0.485,
													1.139
												],
												[
													-0.8,
													-0.34
												],
												[
													-0.394,
													-0.242
												],
												[
													-0.211,
													-0.09
												],
												[
													-1.058,
													2.489
												],
												[
													0.371,
													1.179
												],
												[
													1.14,
													0.484
												],
												[
													2.297,
													0.577
												],
												[
													1.605,
													0.682
												],
												[
													0.893,
													0.479
												],
												[
													1.093,
													0.714
												],
												[
													0.591,
													0.252
												],
												[
													1.204,
													-0.485
												],
												[
													0.592,
													-1.393
												],
												[
													-2.363,
													-1.004
												],
												[
													0,
													0
												],
												[
													-0.253,
													-0.108
												],
												[
													0.281,
													-2.421
												],
												[
													0,
													0
												],
												[
													-0.74,
													-0.836
												],
												[
													-3.545,
													-1.508
												],
												[
													-1.126,
													0.069
												],
												[
													-2.215,
													2.396
												],
												[
													0,
													0
												],
												[
													-0.235,
													0.199
												],
												[
													-0.801,
													-0.342
												],
												[
													-0.521,
													-0.297
												],
												[
													-0.252,
													-0.107
												],
												[
													-1.256,
													2.954
												],
												[
													0.482,
													1.151
												]
											],
											o: [
												[
													-0.422,
													-0.179
												],
												[
													-1.025,
													-0.285
												],
												[
													-1.603,
													-0.681
												],
												[
													-1.9,
													-1.155
												],
												[
													-1.18,
													-0.502
												],
												[
													-1.076,
													0.538
												],
												[
													-1.058,
													2.49
												],
												[
													0.212,
													0.09
												],
												[
													0.45,
													0.116
												],
												[
													0.718,
													0.306
												],
												[
													-1.22,
													2.87
												],
												[
													0,
													0
												],
												[
													-0.716,
													-0.305
												],
												[
													-0.142,
													-0.958
												],
												[
													0.377,
													-0.887
												],
												[
													0.213,
													0.091
												],
												[
													0.396,
													0.243
												],
												[
													1.604,
													0.682
												],
												[
													0.557,
													-1.309
												],
												[
													-0.37,
													-1.179
												],
												[
													-0.547,
													-0.233
												],
												[
													-0.584,
													-0.149
												],
												[
													-1.477,
													-0.628
												],
												[
													-0.381,
													-0.162
												],
												[
													-0.916,
													-0.539
												],
												[
													-1.351,
													-0.573
												],
												[
													-1.202,
													0.485
												],
												[
													-1.184,
													2.786
												],
												[
													0,
													0
												],
												[
													0.687,
													0.143
												],
												[
													0.845,
													0.359
												],
												[
													0,
													0
												],
												[
													-0.268,
													2.277
												],
												[
													0.74,
													0.839
												],
												[
													3.166,
													1.345
												],
												[
													1.57,
													-0.18
												],
												[
													0,
													0
												],
												[
													1.021,
													-1.112
												],
												[
													0.883,
													-0.67
												],
												[
													0.253,
													0.107
												],
												[
													0.522,
													0.296
												],
												[
													2.238,
													0.952
												],
												[
													0.556,
													-1.309
												],
												[
													-0.482,
													-1.153
												]
											],
											v: [
												[
													23.669,
													-8.398
												],
												[
													19.492,
													-9.651
												],
												[
													15.359,
													-11.183
												],
												[
													11.704,
													-12.961
												],
												[
													7.967,
													-15.073
												],
												[
													4.58,
													-15.016
												],
												[
													2.104,
													-12.182
												],
												[
													2.859,
													-7.451
												],
												[
													3.849,
													-7.142
												],
												[
													4.839,
													-6.834
												],
												[
													5.485,
													-5.363
												],
												[
													0.047,
													-2.592
												],
												[
													-8.375,
													-6.172
												],
												[
													-9.662,
													-8.064
												],
												[
													-9.148,
													-11.209
												],
												[
													-7.381,
													-12.029
												],
												[
													-6.471,
													-11.529
												],
												[
													-5.561,
													-11.031
												],
												[
													-1.568,
													-13.743
												],
												[
													-1.29,
													-17.475
												],
												[
													-3.556,
													-19.97
												],
												[
													-7.823,
													-21.187
												],
												[
													-11.106,
													-22.432
												],
												[
													-14.66,
													-24.092
												],
												[
													-16.869,
													-25.406
												],
												[
													-19.13,
													-26.591
												],
												[
													-22.961,
													-26.724
												],
												[
													-25.653,
													-23.906
												],
												[
													-23.884,
													-18.221
												],
												[
													-23.188,
													-17.925
												],
												[
													-21.778,
													-17.549
												],
												[
													-20.933,
													-13.38
												],
												[
													-24.295,
													17.037
												],
												[
													-23.589,
													21.708
												],
												[
													-17.161,
													25.228
												],
												[
													-10.722,
													27.141
												],
												[
													-5.044,
													23.276
												],
												[
													14.269,
													2.109
												],
												[
													16.152,
													0.141
												],
												[
													18.679,
													-0.352
												],
												[
													19.842,
													0.254
												],
												[
													21.004,
													0.859
												],
												[
													26.244,
													-2.146
												],
												[
													26.355,
													-5.836
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											212.217,
											591.879
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 21",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 14,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.41,
													0.186
												],
												[
													0,
													0
												],
												[
													1.547,
													0.204
												],
												[
													0.943,
													0.216
												],
												[
													1.25,
													0.35
												],
												[
													0.638,
													0.083
												],
												[
													0.938,
													-0.802
												],
												[
													0.205,
													-1.546
												],
												[
													-1.819,
													-0.239
												],
												[
													-0.142,
													0.026
												],
												[
													-0.135,
													-0.017
												],
												[
													-0.09,
													-0.011
												],
												[
													-0.119,
													-0.155
												],
												[
													0.282,
													-2.138
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													1.82,
													0.24
												],
												[
													0,
													0
												],
												[
													1.202,
													-2.803
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.104,
													0.449
												],
												[
													-0.726,
													-0.095
												],
												[
													-0.175,
													-0.07
												],
												[
													-0.137,
													-0.017
												],
												[
													-0.274,
													-0.036
												],
												[
													-0.372,
													2.819
												],
												[
													0.721,
													1.02
												],
												[
													1.364,
													0.18
												],
												[
													1.713,
													-0.006
												],
												[
													0.864,
													0.114
												],
												[
													1.34,
													0.361
												],
												[
													0.863,
													0.114
												],
												[
													1.027,
													-0.766
												],
												[
													0.204,
													-1.547
												],
												[
													-0.613,
													-0.96
												],
												[
													-1.047,
													-0.138
												],
												[
													-0.747,
													0.063
												],
												[
													-0.364,
													-0.048
												],
												[
													0.409,
													-3.093
												],
												[
													0,
													0
												],
												[
													1.228,
													0.162
												],
												[
													0.708,
													0.255
												],
												[
													0.409,
													0.054
												],
												[
													0.82,
													-0.772
												],
												[
													0.168,
													-1.273
												],
												[
													-0.793,
													-1.007
												],
												[
													-1.501,
													-0.198
												],
												[
													-1.24,
													-0.072
												],
												[
													-1.091,
													-0.144
												],
												[
													-2.015,
													-0.497
												],
												[
													-0.999,
													-0.131
												],
												[
													-0.712,
													0.669
												],
												[
													-0.763,
													1.934
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.382,
													-0.605
												],
												[
													-1.136,
													-0.15
												],
												[
													-1.525,
													-0.017
												],
												[
													-2.045,
													-0.27
												],
												[
													-2.517,
													-0.563
												],
												[
													-1.092,
													-0.144
												],
												[
													-0.438,
													3.319
												],
												[
													0.592,
													0.956
												],
												[
													1.046,
													0.138
												],
												[
													0.727,
													-0.067
												],
												[
													0.364,
													0.048
												],
												[
													0.072,
													1.212
												],
												[
													-0.192,
													1.454
												],
												[
													0,
													0
												],
												[
													-0.15,
													0.443
												],
												[
													-0.909,
													-0.12
												],
												[
													-0.683,
													-0.253
												],
												[
													-0.364,
													-0.048
												],
												[
													-0.815,
													0.747
												],
												[
													-0.172,
													1.318
												],
												[
													0.784,
													1.075
												]
											],
											o: [
												[
													0,
													0
												],
												[
													-1.062,
													-0.002
												],
												[
													-1.227,
													-0.162
												],
												[
													-0.312,
													-0.088
												],
												[
													-0.982,
													-0.268
												],
												[
													-1.363,
													-0.18
												],
												[
													-0.939,
													0.801
												],
												[
													-0.365,
													2.773
												],
												[
													0.272,
													0.036
												],
												[
													0.137,
													0.018
												],
												[
													0.188,
													-0.021
												],
												[
													0.365,
													0.048
												],
												[
													0.374,
													0.327
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.341,
													-2.682
												],
												[
													0,
													0
												],
												[
													-1.864,
													-0.246
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.143,
													-1.091
												],
												[
													0.268,
													-0.982
												],
												[
													0.047,
													0.007
												],
												[
													0.182,
													0.024
												],
												[
													0.13,
													0.063
												],
												[
													1.865,
													0.245
												],
												[
													0.198,
													-1.5
												],
												[
													-0.722,
													-1.02
												],
												[
													-0.864,
													-0.113
												],
												[
													-1.712,
													0.005
												],
												[
													-1.364,
													-0.18
												],
												[
													-2.011,
													-0.542
												],
												[
													-1.501,
													-0.198
												],
												[
													-1.026,
													0.767
												],
												[
													-0.168,
													1.272
												],
												[
													0.613,
													0.96
												],
												[
													0.363,
													0.048
												],
												[
													0.749,
													-0.065
												],
												[
													1.182,
													0.156
												],
												[
													0,
													0
												],
												[
													-0.402,
													3.046
												],
												[
													-0.318,
													-0.041
												],
												[
													-0.705,
													-0.256
												],
												[
													-1.045,
													-0.138
												],
												[
													-0.818,
													0.77
												],
												[
													-0.204,
													1.545
												],
												[
													0.793,
													1.006
												],
												[
													0.591,
													0.078
												],
												[
													4.369,
													0.204
												],
												[
													1.046,
													0.138
												],
												[
													2.016,
													0.498
												],
												[
													1.137,
													0.15
												],
												[
													0.713,
													-0.669
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.182,
													1.781
												],
												[
													0.384,
													0.605
												],
												[
													0.864,
													0.114
												],
												[
													2.264,
													0.02
												],
												[
													1.275,
													0.168
												],
												[
													2.517,
													0.564
												],
												[
													3.365,
													0.444
												],
												[
													0.167,
													-1.273
												],
												[
													-0.589,
													-0.957
												],
												[
													-0.409,
													-0.053
												],
												[
													-0.725,
													0.065
												],
												[
													-0.909,
													-0.119
												],
												[
													-0.037,
													-0.421
												],
												[
													0,
													0
												],
												[
													0.192,
													-1.455
												],
												[
													0.384,
													-1.152
												],
												[
													0.364,
													0.048
												],
												[
													0.685,
													0.251
												],
												[
													1.091,
													0.144
												],
												[
													0.817,
													-0.749
												],
												[
													0.193,
													-1.455
												],
												[
													-0.783,
													-1.075
												]
											],
											v: [
												[
													33.609,
													-19.213
												],
												[
													29.309,
													-19.224
												],
												[
													25.393,
													-19.532
												],
												[
													22.138,
													-20.1
												],
												[
													19.796,
													-20.756
												],
												[
													17.367,
													-21.283
												],
												[
													13.914,
													-20.351
												],
												[
													12.2,
													-16.83
												],
												[
													14.382,
													-12.31
												],
												[
													15.004,
													-12.297
												],
												[
													15.413,
													-12.244
												],
												[
													15.83,
													-12.258
												],
												[
													16.554,
													-11.954
												],
												[
													16.691,
													-8.258
												],
												[
													13.302,
													17.455
												],
												[
													8.717,
													-17.775
												],
												[
													5.478,
													-22.157
												],
												[
													1.113,
													-22.732
												],
												[
													-3.486,
													-18.898
												],
												[
													-17.389,
													13.409
												],
												[
													-14,
													-12.304
												],
												[
													-13.626,
													-14.614
												],
												[
													-12.134,
													-15.944
												],
												[
													-11.801,
													-15.83
												],
												[
													-11.323,
													-15.768
												],
												[
													-10.717,
													-15.618
												],
												[
													-7.365,
													-19.478
												],
												[
													-8.15,
													-23.26
												],
												[
													-11.277,
													-25.06
												],
												[
													-15.142,
													-25.222
												],
												[
													-19.007,
													-25.384
												],
												[
													-23.063,
													-26.197
												],
												[
													-27.374,
													-27.181
												],
												[
													-31.165,
													-26.328
												],
												[
													-33.01,
													-22.858
												],
												[
													-32.34,
													-19.509
												],
												[
													-29.851,
													-17.862
												],
												[
													-28.184,
													-17.885
												],
												[
													-26.514,
													-17.909
												],
												[
													-25.354,
													-13.037
												],
												[
													-27.843,
													5.856
												],
												[
													-30.287,
													10.182
												],
												[
													-31.825,
													9.737
												],
												[
													-33.498,
													9.274
												],
												[
													-36.295,
													10.224
												],
												[
													-37.775,
													13.29
												],
												[
													-36.891,
													17.119
												],
												[
													-33.452,
													18.925
												],
												[
													-30.706,
													19.149
												],
												[
													-22.517,
													19.672
												],
												[
													-17.925,
													20.624
												],
												[
													-13.4,
													21.568
												],
												[
													-10.626,
													20.789
												],
												[
													-8.41,
													16.883
												],
												[
													0.671,
													-6.207
												],
												[
													3.049,
													19.434
												],
												[
													3.895,
													23.015
												],
												[
													6.176,
													24.148
												],
												[
													9.758,
													24.343
												],
												[
													16.223,
													24.779
												],
												[
													21.908,
													25.874
												],
												[
													27.319,
													26.935
												],
												[
													33.022,
													22.621
												],
												[
													32.387,
													19.277
												],
												[
													29.932,
													17.634
												],
												[
													28.229,
													17.653
												],
												[
													26.595,
													17.68
												],
												[
													25.124,
													15.682
												],
												[
													25.356,
													12.868
												],
												[
													27.846,
													-6.025
												],
												[
													28.361,
													-8.872
												],
												[
													30.299,
													-10.42
												],
												[
													31.87,
													-9.97
												],
												[
													33.442,
													-9.52
												],
												[
													36.303,
													-10.426
												],
												[
													37.785,
													-13.527
												],
												[
													36.9,
													-17.322
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											282.852,
											617.017
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 22",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 15,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.034,
													0.03
												],
												[
													0.768,
													-0.912
												],
												[
													0,
													0
												],
												[
													0.421,
													0.355
												],
												[
													0.075,
													0.124
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.55,
													0.345
												],
												[
													0.491,
													0.415
												],
												[
													0,
													0
												],
												[
													-0.739,
													0.877
												],
												[
													-0.141,
													-0.118
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-5.016,
													-11.002
												],
												[
													-4.242,
													-10.531
												],
												[
													-4.66,
													-8.542
												],
												[
													-7.41,
													-5.282
												],
												[
													-9.148,
													-4.499
												],
												[
													-9.473,
													-4.862
												],
												[
													-17.926,
													-17.569
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													-0.122,
													-0.283
												],
												[
													0.561,
													-0.666
												],
												[
													0.436,
													-0.411
												],
												[
													0.177,
													-0.21
												],
												[
													-2.454,
													-2.069
												],
												[
													-1.241,
													0.122
												],
												[
													-0.916,
													1.088
												],
												[
													-1.322,
													2.066
												],
												[
													-1.212,
													1.438
												],
												[
													-0.727,
													0.647
												],
												[
													-0.413,
													0.491
												],
												[
													0.199,
													1.189
												],
												[
													1.122,
													0.947
												],
												[
													1.093,
													-1.297
												],
												[
													0.243,
													-0.394
												],
												[
													0.149,
													-0.175
												],
												[
													0.562,
													0.474
												],
												[
													-1.685,
													1.998
												],
												[
													0,
													0
												],
												[
													-0.958,
													-0.147
												],
												[
													-0.946,
													-0.798
												],
												[
													0.561,
													-0.666
												],
												[
													0.348,
													-0.306
												],
												[
													0.147,
													-0.175
												],
												[
													-2.068,
													-1.744
												],
												[
													-1.236,
													0.008
												],
												[
													-0.799,
													0.947
												],
												[
													-1.228,
													2.024
												],
												[
													-1.125,
													1.333
												],
												[
													-0.72,
													0.712
												],
												[
													-1.003,
													0.835
												],
												[
													-0.415,
													0.491
												],
												[
													0.11,
													1.293
												],
												[
													1.157,
													0.975
												],
												[
													1.656,
													-1.963
												],
												[
													0,
													0
												],
												[
													0.178,
													-0.21
												],
												[
													2.232,
													0.982
												],
												[
													0,
													0
												],
												[
													1.019,
													-0.46
												],
												[
													2.483,
													-2.945
												],
												[
													0.264,
													-1.095
												],
												[
													-1.639,
													-2.822
												]
											],
											o: [
												[
													0.762,
													1.303
												],
												[
													0.381,
													1.042
												],
												[
													-0.177,
													0.21
												],
												[
													-0.437,
													0.412
												],
												[
													-1.567,
													1.859
												],
												[
													1.088,
													0.917
												],
												[
													1.244,
													-0.122
												],
												[
													0.295,
													-0.35
												],
												[
													0.575,
													-0.895
												],
												[
													1.123,
													-1.333
												],
												[
													1.663,
													-1.477
												],
												[
													0.828,
													-0.981
												],
												[
													-0.2,
													-1.186
												],
												[
													-2.069,
													-1.744
												],
												[
													-0.148,
													0.176
												],
												[
													-0.243,
													0.395
												],
												[
													-0.503,
													0.596
												],
												[
													-2.383,
													-2.01
												],
												[
													0,
													0
												],
												[
													0.502,
													-0.596
												],
												[
													0.955,
													0.146
												],
												[
													0.737,
													0.621
												],
												[
													-0.148,
													0.176
												],
												[
													-0.348,
													0.306
												],
												[
													-1.124,
													1.333
												],
												[
													1.086,
													0.916
												],
												[
													1.237,
													-0.007
												],
												[
													0.384,
													-0.456
												],
												[
													0.313,
													-0.514
												],
												[
													1.033,
													-1.227
												],
												[
													0.267,
													-0.316
												],
												[
													0.785,
													-0.717
												],
												[
													0.946,
													-1.122
												],
												[
													-0.11,
													-1.292
												],
												[
													-2.314,
													-1.952
												],
												[
													0,
													0
												],
												[
													-0.338,
													0.614
												],
												[
													-0.591,
													0.702
												],
												[
													0,
													0
												],
												[
													-2.097,
													-0.927
												],
												[
													-1.018,
													0.462
												],
												[
													-2.218,
													2.629
												],
												[
													-0.289,
													1.556
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-10.879,
													14.2
												],
												[
													-9.552,
													16.577
												],
												[
													-9.823,
													19.139
												],
												[
													-10.743,
													20.072
												],
												[
													-11.665,
													21.004
												],
												[
													-10.335,
													26.896
												],
												[
													-6.841,
													28.088
												],
												[
													-3.602,
													26.274
												],
												[
													-1.176,
													22.65
												],
												[
													1.504,
													19.152
												],
												[
													4.28,
													16.182
												],
												[
													7.396,
													13.231
												],
												[
													8.34,
													9.977
												],
												[
													6.359,
													6.777
												],
												[
													1.616,
													6.107
												],
												[
													1.03,
													6.962
												],
												[
													0.441,
													7.818
												],
												[
													-1.154,
													8.002
												],
												[
													-2.202,
													1.989
												],
												[
													3.697,
													-5.006
												],
												[
													5.885,
													-5.68
												],
												[
													8.738,
													-4.264
												],
												[
													9.001,
													-2.333
												],
												[
													8.258,
													-1.61
												],
												[
													7.513,
													-0.888
												],
												[
													8.931,
													3.727
												],
												[
													12.415,
													5.09
												],
												[
													15.467,
													3.659
												],
												[
													17.885,
													-0.062
												],
												[
													20.042,
													-2.833
												],
												[
													22.673,
													-5.742
												],
												[
													24.577,
													-7.467
												],
												[
													26.376,
													-9.279
												],
												[
													27.63,
													-12.901
												],
												[
													25.729,
													-16.303
												],
												[
													19.776,
													-16.285
												],
												[
													19.288,
													-15.706
												],
												[
													18.513,
													-14.469
												],
												[
													14.28,
													-14.89
												],
												[
													-13.802,
													-27.049
												],
												[
													-18.475,
													-27.75
												],
												[
													-23.728,
													-22.64
												],
												[
													-27.452,
													-17.051
												],
												[
													-25.427,
													-10.485
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											100.646,
											135.811
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 23",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 16,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-1.366,
													-0.751
												],
												[
													-1.106,
													0.204
												],
												[
													-0.509,
													0.926
												],
												[
													-0.202,
													0.701
												],
												[
													-0.177,
													0.323
												],
												[
													-1.155,
													-0.372
												],
												[
													-1.286,
													-0.707
												],
												[
													0,
													0
												],
												[
													-0.356,
													-0.301
												],
												[
													0.442,
													-0.804
												],
												[
													0.483,
													-0.546
												],
												[
													0.176,
													-0.322
												],
												[
													-0.401,
													-1.031
												],
												[
													-1.165,
													-0.641
												],
												[
													-1.246,
													0.363
												],
												[
													-0.707,
													1.287
												],
												[
													-1.062,
													2.504
												],
												[
													-0.994,
													1.808
												],
												[
													-0.651,
													0.899
												],
												[
													0,
													0
												],
												[
													-0.132,
													0.241
												],
												[
													0.414,
													1.248
												],
												[
													1.287,
													0.708
												],
												[
													1.105,
													-0.203
												],
												[
													0.506,
													-0.925
												],
												[
													0.214,
													-0.719
												],
												[
													0.176,
													-0.321
												],
												[
													2.734,
													1.501
												],
												[
													0,
													0
												],
												[
													-0.596,
													1.085
												],
												[
													-0.495,
													0.566
												],
												[
													-0.178,
													0.322
												],
												[
													0.422,
													1.044
												],
												[
													1.126,
													0.618
												],
												[
													1.612,
													-2.934
												],
												[
													0.958,
													-2.221
												],
												[
													0.618,
													-1.125
												],
												[
													0.978,
													-1.398
												],
												[
													0.33,
													-0.603
												],
												[
													-0.353,
													-1.215
												]
											],
											o: [
												[
													1.126,
													0.618
												],
												[
													1.106,
													-0.203
												],
												[
													0.198,
													-0.362
												],
												[
													0.202,
													-0.7
												],
												[
													0.442,
													-0.803
												],
												[
													0.406,
													0.119
												],
												[
													0,
													0
												],
												[
													1.287,
													0.707
												],
												[
													0.936,
													0.776
												],
												[
													-0.178,
													0.322
												],
												[
													-0.483,
													0.546
												],
												[
													-0.53,
													0.964
												],
												[
													0.401,
													1.032
												],
												[
													1.327,
													0.728
												],
												[
													1.246,
													-0.362
												],
												[
													0.397,
													-0.723
												],
												[
													0.881,
													-2.079
												],
												[
													0.641,
													-1.166
												],
												[
													0,
													0
												],
												[
													0.106,
													-0.099
												],
												[
													0.663,
													-1.205
												],
												[
													-0.413,
													-1.247
												],
												[
													-1.125,
													-0.617
												],
												[
													-1.106,
													0.205
												],
												[
													-0.178,
													0.322
												],
												[
													-0.211,
													0.721
												],
												[
													-0.596,
													1.085
												],
												[
													0,
													0
												],
												[
													-2.693,
													-1.479
												],
												[
													0.176,
													-0.321
												],
												[
													0.493,
													-0.565
												],
												[
													0.508,
													-0.924
												],
												[
													-0.42,
													-1.042
												],
												[
													-2.933,
													-1.612
												],
												[
													-0.376,
													0.683
												],
												[
													-0.958,
													2.221
												],
												[
													-0.774,
													1.408
												],
												[
													-1.456,
													2.078
												],
												[
													-0.73,
													1.326
												],
												[
													0.353,
													1.214
												]
											],
											v: [
												[
													-23.231,
													4.745
												],
												[
													-19.884,
													5.367
												],
												[
													-17.462,
													3.675
												],
												[
													-16.862,
													2.082
												],
												[
													-16.295,
													0.549
												],
												[
													-13.899,
													-0.097
												],
												[
													-11.361,
													1.141
												],
												[
													5.341,
													10.317
												],
												[
													7.806,
													11.829
												],
												[
													8.546,
													14.198
												],
												[
													7.557,
													15.499
												],
												[
													6.567,
													16.8
												],
												[
													6.374,
													19.794
												],
												[
													8.724,
													22.302
												],
												[
													12.583,
													22.852
												],
												[
													15.511,
													20.379
												],
												[
													17.7,
													15.538
												],
												[
													20.512,
													9.705
												],
												[
													22.449,
													6.608
												],
												[
													25.018,
													3.075
												],
												[
													25.377,
													2.565
												],
												[
													25.75,
													-1.115
												],
												[
													23.201,
													-4.047
												],
												[
													19.854,
													-4.669
												],
												[
													17.434,
													-2.976
												],
												[
													16.848,
													-1.414
												],
												[
													16.265,
													0.149
												],
												[
													11.27,
													-0.475
												],
												[
													-5.431,
													-9.652
												],
												[
													-8.576,
													-13.499
												],
												[
													-7.569,
													-14.83
												],
												[
													-6.564,
													-16.161
												],
												[
													-6.435,
													-19.112
												],
												[
													-8.755,
													-21.603
												],
												[
													-15.574,
													-19.62
												],
												[
													-17.575,
													-15.264
												],
												[
													-19.94,
													-10.245
												],
												[
													-22.567,
													-6.036
												],
												[
													-25.246,
													-2.014
												],
												[
													-25.811,
													1.797
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											60.92,
											177.624
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 24",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 17,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-3.181,
													-1.042
												],
												[
													-1.049,
													0.405
												],
												[
													-0.329,
													1.004
												],
												[
													-0.068,
													0.727
												],
												[
													-0.114,
													0.349
												],
												[
													-1.204,
													-0.153
												],
												[
													-1.394,
													-0.457
												],
												[
													0,
													0
												],
												[
													-0.407,
													-0.23
												],
												[
													0.286,
													-0.871
												],
												[
													0.381,
													-0.646
												],
												[
													0.114,
													-0.348
												],
												[
													-0.585,
													-0.94
												],
												[
													-1.263,
													-0.414
												],
												[
													-1.148,
													0.565
												],
												[
													-0.456,
													1.395
												],
												[
													-0.68,
													3.107
												],
												[
													-0.728,
													2.223
												],
												[
													-0.953,
													2.174
												],
												[
													-0.372,
													1.134
												],
												[
													0.557,
													1.172
												],
												[
													1.395,
													0.458
												],
												[
													0.841,
													-2.572
												],
												[
													0.147,
													-0.965
												],
												[
													0.157,
													-0.479
												],
												[
													0.812,
													0.025
												],
												[
													0.698,
													0.229
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.139,
													0.311
												],
												[
													-0.272,
													0.829
												],
												[
													-1.09,
													-0.356
												],
												[
													0,
													0
												],
												[
													-0.13,
													-0.043
												],
												[
													-0.087,
													-0.028
												],
												[
													-0.757,
													2.311
												],
												[
													2.66,
													0.871
												],
												[
													1.822,
													0.404
												],
												[
													0.873,
													0.286
												],
												[
													0.931,
													0.401
												],
												[
													0.436,
													0.143
												],
												[
													0.785,
													-2.396
												],
												[
													-1.7,
													-0.556
												],
												[
													-0.232,
													-0.027
												],
												[
													-0.13,
													-0.042
												],
												[
													-0.131,
													-0.044
												],
												[
													0.6,
													-1.831
												],
												[
													1.352,
													0.443
												],
												[
													0,
													0
												],
												[
													0.264,
													0.594
												],
												[
													-0.557,
													1.7
												],
												[
													0,
													0
												],
												[
													-1.481,
													-0.485
												],
												[
													-0.828,
													-0.416
												],
												[
													-0.48,
													-0.157
												],
												[
													-1.236,
													0.537
												],
												[
													-0.485,
													1.483
												],
												[
													0.659,
													1.229
												],
												[
													1.526,
													0.5
												],
												[
													1.429,
													0.204
												],
												[
													0.698,
													0.228
												],
												[
													1.354,
													0.732
												],
												[
													0.785,
													0.257
												],
												[
													0.713,
													-2.18
												],
												[
													0.129,
													-0.537
												],
												[
													0,
													0
												],
												[
													0.486,
													-1.481
												],
												[
													0.356,
													-1.234
												],
												[
													0.485,
													-1.481
												],
												[
													1.36,
													-3.27
												],
												[
													0.329,
													-1.001
												]
											],
											o: [
												[
													1.22,
													0.4
												],
												[
													1.049,
													-0.404
												],
												[
													0.127,
													-0.392
												],
												[
													0.069,
													-0.724
												],
												[
													0.286,
													-0.871
												],
												[
													0.421,
													0.041
												],
												[
													0,
													0
												],
												[
													1.395,
													0.457
												],
												[
													1.062,
													0.59
												],
												[
													-0.1,
													0.306
												],
												[
													-0.381,
													0.648
												],
												[
													-0.343,
													1.046
												],
												[
													0.585,
													0.94
												],
												[
													1.439,
													0.471
												],
												[
													1.151,
													-0.565
												],
												[
													0.114,
													-0.348
												],
												[
													0.297,
													-1.351
												],
												[
													0.371,
													-1.133
												],
												[
													0.952,
													-2.173
												],
												[
													0.485,
													-1.482
												],
												[
													-0.558,
													-1.171
												],
												[
													-2.964,
													-0.97
												],
												[
													-0.158,
													0.48
												],
												[
													-0.147,
													0.965
												],
												[
													-0.315,
													0.959
												],
												[
													-0.436,
													0.002
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.74,
													-0.243
												],
												[
													-0.14,
													-0.311
												],
												[
													0.541,
													-1.656
												],
												[
													0,
													0
												],
												[
													0.088,
													0.029
												],
												[
													0.161,
													0.101
												],
												[
													2.442,
													0.8
												],
												[
													0.742,
													-2.266
												],
												[
													-0.871,
													-0.285
												],
												[
													-1.823,
													-0.403
												],
												[
													-1.525,
													-0.5
												],
												[
													-0.929,
													-0.401
												],
												[
													-2.265,
													-0.741
												],
												[
													-0.671,
													2.05
												],
												[
													0.088,
													0.029
												],
												[
													0.219,
													0.072
												],
												[
													0.727,
													0.143
												],
												[
													1.264,
													0.414
												],
												[
													-0.385,
													1.177
												],
												[
													0,
													0
												],
												[
													-1.831,
													-0.6
												],
												[
													-0.265,
													-0.593
												],
												[
													0,
													0
												],
												[
													0.713,
													-2.179
												],
												[
													0.481,
													0.157
												],
												[
													1.12,
													0.56
												],
												[
													1.613,
													0.529
												],
												[
													1.238,
													-0.536
												],
												[
													0.485,
													-1.481
												],
												[
													-0.658,
													-1.23
												],
												[
													-0.697,
													-0.228
												],
												[
													-1.43,
													-0.202
												],
												[
													-0.916,
													-0.3
												],
												[
													-0.9,
													-0.488
												],
												[
													-1.916,
													-0.627
												],
												[
													0.029,
													-0.087
												],
												[
													0,
													0
												],
												[
													-0.611,
													2.164
												],
												[
													-1.154,
													3.676
												],
												[
													-0.555,
													1.845
												],
												[
													-0.7,
													2.136
												],
												[
													-0.902,
													2.166
												],
												[
													-1.055,
													3.227
												]
											],
											v: [
												[
													-21.942,
													16.466
												],
												[
													-18.537,
													16.459
												],
												[
													-16.471,
													14.348
												],
												[
													-16.176,
													12.671
												],
												[
													-15.902,
													11.06
												],
												[
													-13.667,
													9.983
												],
												[
													-10.944,
													10.729
												],
												[
													7.167,
													16.657
												],
												[
													9.87,
													17.687
												],
												[
													11.035,
													19.878
												],
												[
													10.314,
													21.307
												],
												[
													9.572,
													22.801
												],
												[
													9.937,
													25.78
												],
												[
													12.71,
													27.81
												],
												[
													16.591,
													27.669
												],
												[
													19.002,
													24.73
												],
												[
													20.192,
													19.546
												],
												[
													21.73,
													14.186
												],
												[
													23.715,
													9.226
												],
												[
													25.701,
													4.266
												],
												[
													25.592,
													0.285
												],
												[
													22.665,
													-2.158
												],
												[
													16.956,
													0.245
												],
												[
													16.501,
													2.412
												],
												[
													16.044,
													4.579
												],
												[
													14.355,
													5.981
												],
												[
													12.656,
													5.641
												],
												[
													10.411,
													4.979
												],
												[
													6.62,
													3.738
												],
												[
													5.299,
													2.908
												],
												[
													5.496,
													1.199
												],
												[
													7.944,
													-0.751
												],
												[
													8.663,
													-0.516
												],
												[
													8.99,
													-0.408
												],
												[
													9.36,
													-0.215
												],
												[
													14.157,
													-2.481
												],
												[
													11.28,
													-7.187
												],
												[
													7.24,
													-8.22
												],
												[
													3.199,
													-9.253
												],
												[
													-0.486,
													-10.603
												],
												[
													-2.535,
													-11.42
												],
												[
													-7.111,
													-8.937
												],
												[
													-5.568,
													-5.029
												],
												[
													-5.089,
													-4.945
												],
												[
													-4.566,
													-4.774
												],
												[
													-3.281,
													-4.497
												],
												[
													-2.283,
													-1.131
												],
												[
													-4.888,
													-0.029
												],
												[
													-7.961,
													-1.034
												],
												[
													-11.103,
													-2.824
												],
												[
													-10.665,
													-6.263
												],
												[
													-8.332,
													-13.39
												],
												[
													-5.04,
													-15.931
												],
												[
													-3.077,
													-15.071
												],
												[
													-0.676,
													-13.997
												],
												[
													3.597,
													-14.009
												],
												[
													6.18,
													-17.036
												],
												[
													5.92,
													-21.102
												],
												[
													2.642,
													-23.696
												],
												[
													-0.548,
													-24.342
												],
												[
													-3.739,
													-24.988
												],
												[
													-7.142,
													-26.536
												],
												[
													-9.671,
													-27.654
												],
												[
													-13.618,
													-25.326
												],
												[
													-13.767,
													-24.651
												],
												[
													-14.724,
													-20.621
												],
												[
													-16.37,
													-15.152
												],
												[
													-18.636,
													-7.787
												],
												[
													-20.197,
													-2.797
												],
												[
													-23.286,
													5.313
												],
												[
													-25.132,
													10.065
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											36.086,
											229.033
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 25",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 18,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0.048,
													0.004
												],
												[
													0.104,
													-1.188
												],
												[
													0,
													0
												],
												[
													0.548,
													0.048
												],
												[
													0.133,
													0.058
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.648,
													-0.035
												],
												[
													0.642,
													0.057
												],
												[
													0,
													0
												],
												[
													-0.1,
													1.143
												],
												[
													-0.182,
													-0.017
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-2.249,
													-5.952
												],
												[
													-1.347,
													-6.011
												],
												[
													-0.543,
													-4.144
												],
												[
													-0.917,
													0.104
												],
												[
													-1.89,
													1.746
												],
												[
													-2.364,
													1.635
												],
												[
													-16.586,
													-3.899
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-2.964,
													-1.366
												],
												[
													0,
													0
												],
												[
													-0.262,
													-0.161
												],
												[
													0.077,
													-0.867
												],
												[
													0.121,
													-0.587
												],
												[
													0.024,
													-0.274
												],
												[
													-3.197,
													-0.281
												],
												[
													-0.946,
													0.815
												],
												[
													-0.125,
													1.417
												],
												[
													0.106,
													2.45
												],
												[
													-0.166,
													1.874
												],
												[
													-0.223,
													0.947
												],
												[
													-0.057,
													0.64
												],
												[
													0.847,
													0.858
												],
												[
													1.462,
													0.129
												],
												[
													0.149,
													-1.69
												],
												[
													-0.028,
													-0.462
												],
												[
													0.02,
													-0.228
												],
												[
													0.731,
													0.064
												],
												[
													-0.229,
													2.604
												],
												[
													0,
													0
												],
												[
													-0.867,
													0.43
												],
												[
													-1.233,
													-0.108
												],
												[
													0.075,
													-0.868
												],
												[
													0.108,
													-0.45
												],
												[
													0.02,
													-0.227
												],
												[
													-2.695,
													-0.237
												],
												[
													-1.006,
													0.717
												],
												[
													-0.109,
													1.233
												],
												[
													0.161,
													2.363
												],
												[
													-0.152,
													1.736
												],
												[
													-0.18,
													0.997
												],
												[
													-0.342,
													1.259
												],
												[
													-0.057,
													0.64
												],
												[
													0.834,
													0.995
												],
												[
													1.508,
													0.133
												],
												[
													0.225,
													-2.558
												],
												[
													0,
													0
												],
												[
													0.024,
													-0.274
												],
												[
													2.389,
													-0.48
												],
												[
													0,
													0
												],
												[
													0.568,
													-0.963
												],
												[
													0.338,
													-3.838
												],
												[
													-0.414,
													-1.048
												]
											],
											o: [
												[
													0,
													0
												],
												[
													1.372,
													0.629
												],
												[
													0.912,
													0.633
												],
												[
													-0.024,
													0.275
												],
												[
													-0.121,
													0.588
												],
												[
													-0.214,
													2.422
												],
												[
													1.417,
													0.125
												],
												[
													0.947,
													-0.814
												],
												[
													0.039,
													-0.456
												],
												[
													-0.045,
													-1.063
												],
												[
													0.151,
													-1.736
												],
												[
													0.512,
													-2.165
												],
												[
													0.112,
													-1.278
												],
												[
													-0.845,
													-0.857
												],
												[
													-2.696,
													-0.237
												],
												[
													-0.02,
													0.229
												],
												[
													0.029,
													0.463
												],
												[
													-0.069,
													0.777
												],
												[
													-3.106,
													-0.274
												],
												[
													0,
													0
												],
												[
													0.069,
													-0.776
												],
												[
													0.867,
													-0.43
												],
												[
													0.96,
													0.085
												],
												[
													-0.02,
													0.229
												],
												[
													-0.109,
													0.451
												],
												[
													-0.153,
													1.737
												],
												[
													1.416,
													0.125
												],
												[
													1.007,
													-0.717
												],
												[
													0.052,
													-0.593
												],
												[
													-0.039,
													-0.601
												],
												[
													0.141,
													-1.599
												],
												[
													0.035,
													-0.412
												],
												[
													0.229,
													-1.038
												],
												[
													0.128,
													-1.462
												],
												[
													-0.833,
													-0.993
												],
												[
													-3.015,
													-0.265
												],
												[
													0,
													0
												],
												[
													0.077,
													0.697
												],
												[
													-0.08,
													0.914
												],
												[
													0,
													0
												],
												[
													-2.248,
													0.448
												],
												[
													-0.568,
													0.963
												],
												[
													-0.302,
													3.427
												],
												[
													0.655,
													1.439
												]
											],
											v: [
												[
													-18.65,
													6.21
												],
												[
													7.451,
													18.036
												],
												[
													9.901,
													19.219
												],
												[
													11.154,
													21.47
												],
												[
													10.936,
													22.763
												],
												[
													10.719,
													24.056
												],
												[
													15.197,
													28.111
												],
												[
													18.74,
													27.075
												],
												[
													20.348,
													23.729
												],
												[
													20.247,
													19.37
												],
												[
													20.428,
													14.966
												],
												[
													20.99,
													10.941
												],
												[
													21.842,
													6.734
												],
												[
													20.742,
													3.53
												],
												[
													17.283,
													2.051
												],
												[
													13.016,
													4.231
												],
												[
													13.027,
													5.268
												],
												[
													13.04,
													6.305
												],
												[
													11.841,
													7.374
												],
												[
													7.524,
													3.057
												],
												[
													8.327,
													-6.057
												],
												[
													9.729,
													-7.867
												],
												[
													12.88,
													-8.35
												],
												[
													14.204,
													-6.921
												],
												[
													14.011,
													-5.902
												],
												[
													13.817,
													-4.884
												],
												[
													17.632,
													-1.924
												],
												[
													21.266,
													-2.811
												],
												[
													22.94,
													-5.738
												],
												[
													22.777,
													-10.173
												],
												[
													22.947,
													-13.678
												],
												[
													23.429,
													-17.573
												],
												[
													23.995,
													-20.079
												],
												[
													24.423,
													-22.596
												],
												[
													23.367,
													-26.281
												],
												[
													19.854,
													-27.971
												],
												[
													14.994,
													-24.531
												],
												[
													14.927,
													-23.777
												],
												[
													15.007,
													-22.32
												],
												[
													11.301,
													-20.229
												],
												[
													-18.665,
													-14.026
												],
												[
													-22.891,
													-11.911
												],
												[
													-24.25,
													-4.711
												],
												[
													-24.079,
													2.003
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											25.895,
											296.867
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 26",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 19,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.167,
													-0.902
												],
												[
													0.029,
													-0.728
												],
												[
													-0.067,
													-0.361
												],
												[
													-0.963,
													-0.544
												],
												[
													-1.307,
													0.243
												],
												[
													-0.779,
													1.078
												],
												[
													0.259,
													1.398
												],
												[
													0,
													0
												],
												[
													0.284,
													1.534
												],
												[
													0.086,
													0.963
												],
												[
													0.053,
													1.296
												],
												[
													0.117,
													0.632
												],
												[
													1.053,
													0.644
												],
												[
													1.533,
													-0.284
												],
												[
													-0.334,
													-1.803
												],
												[
													-0.069,
													-0.127
												],
												[
													-0.026,
													-0.136
												],
												[
													-0.018,
													-0.09
												],
												[
													0.11,
													-0.16
												],
												[
													2.12,
													-0.392
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.335,
													1.805
												],
												[
													0,
													0
												],
												[
													3.037,
													0.278
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.459,
													0.039
												],
												[
													-0.133,
													-0.721
												],
												[
													0.012,
													-0.189
												],
												[
													-0.025,
													-0.135
												],
												[
													-0.051,
													-0.27
												],
												[
													-2.795,
													0.518
												],
												[
													-0.746,
													1.002
												],
												[
													0.251,
													1.353
												],
												[
													0.535,
													1.627
												],
												[
													0.158,
													0.857
												],
												[
													0.07,
													1.386
												],
												[
													0.158,
													0.857
												],
												[
													1.047,
													0.739
												],
												[
													1.533,
													-0.284
												],
												[
													0.725,
													-0.88
												],
												[
													-0.193,
													-1.037
												],
												[
													-0.291,
													-0.692
												],
												[
													-0.067,
													-0.36
												],
												[
													3.067,
													-0.568
												],
												[
													0,
													0
												],
												[
													0.226,
													1.218
												],
												[
													-0.024,
													0.752
												],
												[
													0.076,
													0.406
												],
												[
													0.987,
													0.54
												],
												[
													1.263,
													-0.233
												],
												[
													0.712,
													-1.065
												],
												[
													-0.275,
													-1.488
												],
												[
													-0.316,
													-1.201
												],
												[
													-0.2,
													-1.082
												],
												[
													-0.15,
													-2.071
												],
												[
													-0.182,
													-0.991
												],
												[
													-0.857,
													-0.471
												],
												[
													-2.076,
													-0.128
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.458,
													-0.551
												],
												[
													-0.208,
													-1.127
												],
												[
													-0.455,
													-1.455
												],
												[
													-0.375,
													-2.029
												],
												[
													-0.242,
													-2.567
												],
												[
													-0.201,
													-1.083
												],
												[
													-3.291,
													0.609
												],
												[
													-0.726,
													0.858
												],
												[
													0.192,
													1.038
												],
												[
													0.289,
													0.67
												],
												[
													0.067,
													0.361
												],
												[
													-1.131,
													0.444
												],
												[
													-1.442,
													0.268
												],
												[
													0,
													0
												],
												[
													-0.468,
													-0.006
												]
											],
											o: [
												[
													0.066,
													0.361
												],
												[
													-0.028,
													0.729
												],
												[
													0.2,
													1.082
												],
												[
													0.964,
													0.545
												],
												[
													1.443,
													-0.267
												],
												[
													0.78,
													-1.077
												],
												[
													0,
													0
												],
												[
													-0.327,
													-1.012
												],
												[
													-0.225,
													-1.218
												],
												[
													-0.013,
													-0.323
												],
												[
													-0.049,
													-1.016
												],
												[
													-0.251,
													-1.353
												],
												[
													-1.052,
													-0.645
												],
												[
													-2.751,
													0.51
												],
												[
													0.05,
													0.271
												],
												[
													0.025,
													0.135
												],
												[
													0.079,
													0.172
												],
												[
													0.066,
													0.361
												],
												[
													-0.196,
													0.457
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													2.446,
													-1.152
												],
												[
													0,
													0
												],
												[
													-0.342,
													-1.849
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													1.081,
													-0.2
												],
												[
													1.017,
													-0.048
												],
												[
													0.008,
													0.045
												],
												[
													0.034,
													0.18
												],
												[
													-0.019,
													0.144
												],
												[
													0.342,
													1.85
												],
												[
													1.489,
													-0.276
												],
												[
													0.748,
													-1.002
												],
												[
													-0.159,
													-0.856
												],
												[
													-0.534,
													-1.626
												],
												[
													-0.25,
													-1.353
												],
												[
													-0.106,
													-2.08
												],
												[
													-0.276,
													-1.489
												],
												[
													-1.046,
													-0.739
												],
												[
													-1.263,
													0.233
												],
												[
													-0.722,
													0.88
												],
												[
													0.066,
													0.361
												],
												[
													0.292,
													0.692
												],
												[
													0.217,
													1.173
												],
												[
													0,
													0
												],
												[
													-3.021,
													0.559
												],
												[
													-0.058,
													-0.315
												],
												[
													0.026,
													-0.749
												],
												[
													-0.191,
													-1.037
												],
												[
													-0.985,
													-0.54
												],
												[
													-1.533,
													0.284
												],
												[
													-0.713,
													1.065
												],
												[
													0.109,
													0.587
												],
												[
													1.155,
													4.218
												],
												[
													0.192,
													1.037
												],
												[
													0.15,
													2.071
												],
												[
													0.209,
													1.128
												],
												[
													0.857,
													0.471
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-1.638,
													0.723
												],
												[
													-0.457,
													0.551
												],
												[
													0.159,
													0.856
												],
												[
													0.681,
													2.16
												],
												[
													0.234,
													1.263
												],
												[
													0.242,
													2.568
												],
												[
													0.617,
													3.337
												],
												[
													1.263,
													-0.234
												],
												[
													0.727,
													-0.857
												],
												[
													-0.076,
													-0.406
												],
												[
													-0.286,
													-0.67
												],
												[
													-0.168,
													-0.902
												],
												[
													0.388,
													-0.165
												],
												[
													0,
													0
												],
												[
													1.444,
													-0.267
												],
												[
													1.215,
													0.009
												]
											],
											v: [
												[
													19.12,
													25.465
												],
												[
													19.178,
													27.098
												],
												[
													19.236,
													28.732
												],
												[
													20.982,
													31.172
												],
												[
													24.389,
													31.625
												],
												[
													27.723,
													29.609
												],
												[
													28.505,
													25.896
												],
												[
													27.187,
													21.802
												],
												[
													26.27,
													17.984
												],
												[
													25.804,
													14.712
												],
												[
													25.705,
													12.282
												],
												[
													25.456,
													9.809
												],
												[
													23.502,
													6.813
												],
												[
													19.624,
													6.271
												],
												[
													15.999,
													9.741
												],
												[
													16.179,
													10.337
												],
												[
													16.254,
													10.743
												],
												[
													16.398,
													11.137
												],
												[
													16.332,
													11.918
												],
												[
													12.859,
													13.191
												],
												[
													-12.643,
													17.913
												],
												[
													19.445,
													2.665
												],
												[
													22.612,
													-1.77
												],
												[
													21.811,
													-6.098
												],
												[
													16.742,
													-9.288
												],
												[
													-18.279,
													-12.526
												],
												[
													7.223,
													-17.249
												],
												[
													9.535,
													-17.607
												],
												[
													11.261,
													-16.598
												],
												[
													11.256,
													-16.246
												],
												[
													11.344,
													-15.773
												],
												[
													11.389,
													-15.152
												],
												[
													16.096,
													-13.155
												],
												[
													19.449,
													-15.07
												],
												[
													20.195,
													-18.603
												],
												[
													19.155,
													-22.327
												],
												[
													18.116,
													-26.052
												],
												[
													17.635,
													-30.161
												],
												[
													17.239,
													-34.565
												],
												[
													15.256,
													-37.906
												],
												[
													11.387,
													-38.59
												],
												[
													8.407,
													-36.918
												],
												[
													7.611,
													-34.042
												],
												[
													8.148,
													-32.462
												],
												[
													8.686,
													-30.883
												],
												[
													4.412,
													-28.272
												],
												[
													-14.326,
													-24.802
												],
												[
													-19.197,
													-25.79
												],
												[
													-19.248,
													-27.39
												],
												[
													-19.325,
													-29.124
												],
												[
													-21.092,
													-31.491
												],
												[
													-24.465,
													-31.952
												],
												[
													-27.833,
													-29.927
												],
												[
													-28.489,
													-26.098
												],
												[
													-27.852,
													-23.417
												],
												[
													-25.82,
													-15.467
												],
												[
													-25.307,
													-10.805
												],
												[
													-24.807,
													-6.21
												],
												[
													-23.208,
													-3.814
												],
												[
													-18.808,
													-2.913
												],
												[
													5.957,
													-1.413
												],
												[
													-17.693,
													8.774
												],
												[
													-20.838,
													10.686
												],
												[
													-21.211,
													13.204
												],
												[
													-20.289,
													16.671
												],
												[
													-18.706,
													22.954
												],
												[
													-17.991,
													28.699
												],
												[
													-17.327,
													34.173
												],
												[
													-11.463,
													38.264
												],
												[
													-8.478,
													36.626
												],
												[
													-7.674,
													33.785
												],
												[
													-8.219,
													32.172
												],
												[
													-8.749,
													30.626
												],
												[
													-7.303,
													28.609
												],
												[
													-4.556,
													27.96
												],
												[
													14.182,
													24.49
												],
												[
													17.049,
													24.099
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											29.014,
											375.761
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 27",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 20,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.208,
													0.51
												],
												[
													-0.096,
													0.11
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.017,
													0.042
												],
												[
													1.104,
													0.45
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0.069,
													-0.171
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.158,
													0.629
												],
												[
													-0.243,
													0.595
												],
												[
													0,
													0
												],
												[
													-1.063,
													-0.432
												]
											],
											v: [
												[
													3.816,
													-5.757
												],
												[
													4.062,
													-6.178
												],
												[
													13.535,
													-18.144
												],
												[
													11.278,
													-3.835
												],
												[
													11.069,
													-2.955
												],
												[
													9.049,
													-2.738
												],
												[
													5.098,
													-4.345
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													1.572,
													0.639
												],
												[
													0.449,
													0.109
												],
												[
													0.212,
													0.087
												],
												[
													-0.277,
													0.68
												],
												[
													-2.422,
													-0.985
												],
												[
													0,
													0
												],
												[
													-0.156,
													-0.955
												],
												[
													0.467,
													-1.147
												],
												[
													0.807,
													0.327
												],
												[
													0.399,
													0.236
												],
												[
													0.212,
													0.086
												],
												[
													1.019,
													-2.506
												],
												[
													-0.39,
													-1.174
												],
												[
													-1.148,
													-0.466
												],
												[
													-2.304,
													-0.544
												],
												[
													-1.615,
													-0.658
												],
												[
													-0.901,
													-0.466
												],
												[
													-1.104,
													-0.696
												],
												[
													-0.595,
													-0.243
												],
												[
													-1.197,
													0.504
												],
												[
													-0.57,
													1.402
												],
												[
													2.379,
													0.968
												],
												[
													0,
													0
												],
												[
													0.255,
													0.102
												],
												[
													-0.244,
													2.427
												],
												[
													0,
													0
												],
												[
													0.753,
													0.826
												],
												[
													3.569,
													1.452
												],
												[
													1.124,
													-0.087
												],
												[
													2.176,
													-2.43
												],
												[
													0,
													0
												],
												[
													0.231,
													-0.203
												],
												[
													0.806,
													0.328
												],
												[
													0.526,
													0.288
												],
												[
													0.256,
													0.103
												],
												[
													1.21,
													-2.973
												],
												[
													-0.501,
													-1.142
												],
												[
													-1.317,
													-0.536
												],
												[
													-2.373,
													-0.619
												],
												[
													-1.743,
													-0.709
												],
												[
													-0.84,
													-0.491
												],
												[
													-0.595,
													-0.242
												],
												[
													-1.069,
													0.556
												],
												[
													-0.553,
													1.361
												]
											],
											o: [
												[
													-0.212,
													-0.087
												],
												[
													-0.451,
													-0.11
												],
												[
													-0.724,
													-0.294
												],
												[
													1.175,
													-2.888
												],
												[
													0,
													0
												],
												[
													0.722,
													0.294
												],
												[
													0.156,
													0.955
												],
												[
													-0.363,
													0.891
												],
												[
													-0.213,
													-0.087
												],
												[
													-0.398,
													-0.237
												],
												[
													-1.615,
													-0.658
												],
												[
													-0.536,
													1.316
												],
												[
													0.389,
													1.173
												],
												[
													0.551,
													0.224
												],
												[
													0.586,
													0.139
												],
												[
													1.487,
													0.604
												],
												[
													0.383,
													0.155
												],
												[
													0.924,
													0.525
												],
												[
													1.36,
													0.553
												],
												[
													1.194,
													-0.504
												],
												[
													1.141,
													-2.803
												],
												[
													0,
													0
												],
												[
													-0.689,
													-0.132
												],
												[
													-0.85,
													-0.347
												],
												[
													0,
													0
												],
												[
													0.235,
													-2.282
												],
												[
													-0.754,
													-0.826
												],
												[
													-3.186,
													-1.296
												],
												[
													-1.569,
													0.205
												],
												[
													0,
													0
												],
												[
													-1.004,
													1.127
												],
												[
													-0.873,
													0.685
												],
												[
													-0.255,
													-0.104
												],
												[
													-0.527,
													-0.288
												],
												[
													-2.252,
													-0.916
												],
												[
													-0.535,
													1.318
												],
												[
													0.5,
													1.145
												],
												[
													0.424,
													0.173
												],
												[
													1.029,
													0.27
												],
												[
													1.614,
													0.656
												],
												[
													1.919,
													1.126
												],
												[
													1.189,
													0.484
												],
												[
													1.067,
													-0.556
												],
												[
													1.02,
													-2.505
												]
											],
											v: [
												[
													-2.944,
													7.757
												],
												[
													-3.939,
													7.465
												],
												[
													-4.933,
													7.171
												],
												[
													-5.602,
													5.71
												],
												[
													-0.207,
													2.855
												],
												[
													8.269,
													6.303
												],
												[
													9.585,
													8.176
												],
												[
													9.121,
													11.329
												],
												[
													7.366,
													12.174
												],
												[
													6.447,
													11.689
												],
												[
													5.532,
													11.205
												],
												[
													1.58,
													13.98
												],
												[
													1.361,
													17.715
												],
												[
													3.665,
													20.174
												],
												[
													7.95,
													21.325
												],
												[
													11.252,
													22.52
												],
												[
													14.832,
													24.124
												],
												[
													17.061,
													25.402
												],
												[
													19.34,
													26.553
												],
												[
													23.173,
													26.626
												],
												[
													25.822,
													23.767
												],
												[
													23.963,
													18.11
												],
												[
													23.262,
													17.824
												],
												[
													21.847,
													17.472
												],
												[
													20.939,
													13.314
												],
												[
													23.824,
													-17.15
												],
												[
													23.048,
													-21.811
												],
												[
													16.564,
													-25.228
												],
												[
													10.098,
													-27.043
												],
												[
													4.48,
													-23.09
												],
												[
													-14.501,
													-1.624
												],
												[
													-16.353,
													0.371
												],
												[
													-18.873,
													0.907
												],
												[
													-20.045,
													0.319
												],
												[
													-21.217,
													-0.27
												],
												[
													-26.408,
													2.816
												],
												[
													-26.462,
													6.507
												],
												[
													-23.736,
													9.028
												],
												[
													-19.54,
													10.215
												],
												[
													-15.384,
													11.684
												],
												[
													-11.702,
													13.405
												],
												[
													-7.933,
													15.457
												],
												[
													-4.546,
													15.35
												],
												[
													-2.116,
													12.475
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											427.848,
											49.307
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 28",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 21,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-2.71,
													-0.237
												],
												[
													-2.028,
													-0.388
												],
												[
													-1.055,
													-0.341
												],
												[
													0,
													0
												],
												[
													-0.27,
													-0.052
												],
												[
													-1.059,
													0.779
												],
												[
													-0.276,
													1.443
												],
												[
													0.534,
													0.989
												],
												[
													1.036,
													0.197
												],
												[
													0.75,
													-0.02
												],
												[
													0.36,
													0.069
												],
												[
													-0.583,
													3.064
												],
												[
													0,
													0
												],
												[
													-1.217,
													-0.232
												],
												[
													-0.691,
													-0.294
												],
												[
													-0.36,
													-0.07
												],
												[
													-0.863,
													0.723
												],
												[
													-0.239,
													1.262
												],
												[
													3.288,
													0.627
												],
												[
													2.408,
													0.226
												],
												[
													1.26,
													0.239
												],
												[
													1.632,
													0.499
												],
												[
													0.676,
													0.129
												],
												[
													1.046,
													-0.712
												],
												[
													0.291,
													-1.531
												],
												[
													-0.536,
													-0.988
												],
												[
													-1.038,
													-0.197
												],
												[
													-0.729,
													0.025
												],
												[
													-0.361,
													-0.069
												],
												[
													-0.003,
													-1.214
												],
												[
													0.274,
													-1.441
												],
												[
													0,
													0
												],
												[
													0.176,
													-0.433
												],
												[
													0.9,
													0.172
												],
												[
													0.668,
													0.291
												],
												[
													0.36,
													0.068
												],
												[
													0.857,
													-0.699
												],
												[
													0.249,
													-1.307
												],
												[
													-0.73,
													-1.072
												],
												[
													-1.442,
													-0.275
												]
											],
											o: [
												[
													2.25,
													0.195
												],
												[
													1.306,
													0.247
												],
												[
													0,
													0
												],
												[
													0.127,
													0.07
												],
												[
													1.351,
													0.257
												],
												[
													1.059,
													-0.778
												],
												[
													0.239,
													-1.262
												],
												[
													-0.536,
													-0.988
												],
												[
													-0.362,
													-0.069
												],
												[
													-0.752,
													0.021
												],
												[
													-1.217,
													-0.231
												],
												[
													0,
													0
												],
												[
													0.575,
													-3.017
												],
												[
													0.36,
													0.068
												],
												[
													0.689,
													0.296
												],
												[
													1.036,
													0.198
												],
												[
													0.861,
													-0.722
												],
												[
													0.627,
													-3.288
												],
												[
													-0.767,
													-0.147
												],
												[
													-2.408,
													-0.224
												],
												[
													-1.578,
													-0.301
												],
												[
													-2.427,
													-0.742
												],
												[
													-1.487,
													-0.283
												],
												[
													-1.046,
													0.711
												],
												[
													-0.241,
													1.261
												],
												[
													0.535,
													0.99
												],
												[
													0.404,
													0.077
												],
												[
													0.728,
													-0.024
												],
												[
													0.9,
													0.172
												],
												[
													0.013,
													0.423
												],
												[
													0,
													0
												],
												[
													-0.275,
													1.442
												],
												[
													-0.449,
													1.129
												],
												[
													-0.361,
													-0.069
												],
												[
													-0.669,
													-0.291
												],
												[
													-1.082,
													-0.206
												],
												[
													-0.857,
													0.702
												],
												[
													-0.283,
													1.486
												],
												[
													0.728,
													1.074
												],
												[
													0.811,
													0.155
												]
											],
											v: [
												[
													-9.143,
													21.501
												],
												[
													-2.726,
													22.374
												],
												[
													0.816,
													23.259
												],
												[
													4.971,
													24.609
												],
												[
													5.568,
													24.795
												],
												[
													9.182,
													24.012
												],
												[
													11.183,
													20.681
												],
												[
													10.74,
													17.306
												],
												[
													8.383,
													15.527
												],
												[
													6.716,
													15.454
												],
												[
													5.049,
													15.381
												],
												[
													4.099,
													10.439
												],
												[
													7.667,
													-8.282
												],
												[
													10.353,
													-12.462
												],
												[
													11.93,
													-11.916
												],
												[
													13.506,
													-11.371
												],
												[
													16.353,
													-12.158
												],
												[
													18.005,
													-15.136
												],
												[
													14.013,
													-21.009
												],
												[
													9.251,
													-21.566
												],
												[
													3.747,
													-22.264
												],
												[
													-1.068,
													-23.462
												],
												[
													-5.721,
													-24.769
												],
												[
													-9.52,
													-24.126
												],
												[
													-11.526,
													-20.762
												],
												[
													-11.083,
													-17.387
												],
												[
													-8.726,
													-15.607
												],
												[
													-7.026,
													-15.527
												],
												[
													-5.393,
													-15.462
												],
												[
													-4.039,
													-13.382
												],
												[
													-4.431,
													-10.587
												],
												[
													-7.997,
													8.134
												],
												[
													-8.673,
													10.947
												],
												[
													-10.697,
													12.382
												],
												[
													-12.24,
													11.842
												],
												[
													-13.783,
													11.303
												],
												[
													-16.69,
													12.045
												],
												[
													-18.349,
													15.056
												],
												[
													-17.68,
													18.895
												],
												[
													-14.424,
													20.915
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											378.005,
											28.914
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 29",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 22,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.002,
													0.734
												],
												[
													-0.278,
													1.513
												],
												[
													-0.002,
													0.825
												],
												[
													2.293,
													0.005
												],
												[
													0.551,
													-0.043
												],
												[
													0,
													0
												],
												[
													1.559,
													0.004
												],
												[
													1.284,
													-0.042
												],
												[
													1.558,
													0.003
												],
												[
													3.53,
													0.282
												],
												[
													1.054,
													0.002
												],
												[
													0.008,
													-3.347
												],
												[
													-0.71,
													-0.872
												],
												[
													-1.055,
													-0.002
												],
												[
													-0.712,
													0.16
												],
												[
													-0.367,
													0
												],
												[
													-0.227,
													-1.193
												],
												[
													0.003,
													-1.468
												],
												[
													0,
													0
												],
												[
													0.092,
													-0.458
												],
												[
													0.917,
													0.003
												],
												[
													0.733,
													0.163
												],
												[
													0.366,
													0
												],
												[
													0.712,
													-0.847
												],
												[
													0.003,
													-1.329
												],
												[
													-0.893,
													-0.918
												],
												[
													-1.468,
													-0.003
												],
												[
													-3.166,
													0.313
												],
												[
													-2.339,
													-0.006
												],
												[
													-2.362,
													-0.234
												],
												[
													-1.193,
													-0.003
												],
												[
													-0.942,
													0.892
												],
												[
													-0.003,
													1.469
												],
												[
													2.706,
													0.005
												],
												[
													0.963,
													-0.158
												],
												[
													0.504,
													0.002
												],
												[
													0.227,
													0.782
												],
												[
													-0.002,
													0.734
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.253,
													0.23
												],
												[
													-0.872,
													-0.002
												],
												[
													0.003,
													-1.146
												],
												[
													0,
													0
												],
												[
													0.001,
													-0.137
												],
												[
													0,
													-0.092
												],
												[
													-2.431,
													-0.005
												],
												[
													-0.006,
													2.798
												],
												[
													0.179,
													1.858
												],
												[
													-0.003,
													0.919
												],
												[
													-0.095,
													1.01
												],
												[
													-0.002,
													0.459
												],
												[
													2.522,
													0.005
												],
												[
													0.005,
													-1.789
												],
												[
													-0.045,
													-0.229
												],
												[
													0,
													-0.137
												],
												[
													0,
													-0.137
												],
												[
													1.926,
													0.004
												],
												[
													-0.003,
													1.422
												],
												[
													0,
													0
												],
												[
													-0.483,
													0.435
												],
												[
													-1.789,
													-0.003
												],
												[
													0,
													0
												],
												[
													0.004,
													-1.558
												],
												[
													0.14,
													-0.916
												],
												[
													0.002,
													-0.504
												],
												[
													-0.892,
													-1.011
												],
												[
													-1.56,
													-0.004
												],
												[
													-0.966,
													1.008
												],
												[
													-0.005,
													1.605
												],
												[
													0.249,
													1.422
												]
											],
											o: [
												[
													0.002,
													-0.964
												],
												[
													0.184,
													-1.008
												],
												[
													0.005,
													-2.018
												],
												[
													0.091,
													0
												],
												[
													0,
													0
												],
												[
													-2.248,
													0.086
												],
												[
													-3.852,
													0.038
												],
												[
													-1.926,
													0.042
												],
												[
													-2.248,
													-0.006
												],
												[
													-2.339,
													-0.188
												],
												[
													-3.395,
													-0.007
												],
												[
													-0.003,
													1.286
												],
												[
													0.708,
													0.874
												],
												[
													0.413,
													0
												],
												[
													0.711,
													-0.159
												],
												[
													0.918,
													0.002
												],
												[
													0.091,
													0.412
												],
												[
													0,
													0
												],
												[
													-0.004,
													1.47
												],
												[
													-0.233,
													1.193
												],
												[
													-0.322,
													0
												],
												[
													-0.733,
													-0.162
												],
												[
													-1.101,
													-0.003
												],
												[
													-0.714,
													0.848
												],
												[
													-0.003,
													1.514
												],
												[
													0.892,
													0.92
												],
												[
													0.367,
													0.001
												],
												[
													1.376,
													-0.135
												],
												[
													1.192,
													0.002
												],
												[
													2.361,
													0.234
												],
												[
													1.559,
													0.004
												],
												[
													0.942,
													-0.892
												],
												[
													0.007,
													-3.118
												],
												[
													-0.505,
													-0.003
												],
												[
													-0.964,
													0.159
												],
												[
													-1.01,
													-0.002
												],
												[
													-0.137,
													-0.413
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.001,
													-0.778
												],
												[
													0.252,
													-0.228
												],
												[
													1.742,
													0.003
												],
												[
													0,
													0
												],
												[
													0,
													0.092
												],
												[
													-0.047,
													0.183
												],
												[
													-0.006,
													2.569
												],
												[
													2.384,
													0.005
												],
												[
													0.001,
													-0.917
												],
												[
													-0.18,
													-1.858
												],
												[
													0.003,
													-1.604
												],
												[
													0.093,
													-1.007
												],
												[
													0.005,
													-2.384
												],
												[
													-2.157,
													-0.006
												],
												[
													0,
													0.092
												],
												[
													-0.001,
													0.23
												],
												[
													0.09,
													0.735
												],
												[
													-0.003,
													1.331
												],
												[
													-1.239,
													-0.003
												],
												[
													0,
													0
												],
												[
													0.004,
													-1.927
												],
												[
													0.482,
													-0.434
												],
												[
													0,
													0
												],
												[
													2.293,
													0.006
												],
												[
													-0.001,
													0.506
												],
												[
													-0.187,
													1.238
												],
												[
													-0.003,
													1.698
												],
												[
													0.892,
													1.011
												],
												[
													1.558,
													0.003
												],
												[
													0.966,
													-1.006
												],
												[
													0.001,
													-0.734
												],
												[
													-0.249,
													-1.422
												]
											],
											v: [
												[
													22.195,
													-13.762
												],
												[
													22.616,
													-17.475
												],
												[
													22.897,
													-20.227
												],
												[
													19.464,
													-23.262
												],
												[
													18.775,
													-23.194
												],
												[
													14.648,
													-22.858
												],
												[
													8.937,
													-22.735
												],
												[
													1.232,
													-22.613
												],
												[
													-3.996,
													-22.556
												],
												[
													-12.663,
													-22.988
												],
												[
													-17.754,
													-23.275
												],
												[
													-22.856,
													-18.264
												],
												[
													-21.796,
													-15.029
												],
												[
													-19.151,
													-13.715
												],
												[
													-17.465,
													-13.952
												],
												[
													-15.848,
													-14.189
												],
												[
													-14.132,
													-12.397
												],
												[
													-14,
													-9.577
												],
												[
													-14.042,
													9.478
												],
												[
													-14.186,
													12.368
												],
												[
													-15.91,
													14.153
												],
												[
													-17.492,
													13.91
												],
												[
													-19.142,
													13.665
												],
												[
													-21.862,
													14.931
												],
												[
													-22.936,
													18.197
												],
												[
													-21.602,
													21.845
												],
												[
													-18.063,
													23.23
												],
												[
													-12.764,
													22.759
												],
												[
													-7.192,
													22.566
												],
												[
													-1.861,
													22.921
												],
												[
													3.47,
													23.277
												],
												[
													7.222,
													21.944
												],
												[
													8.64,
													18.403
												],
												[
													4.591,
													13.718
												],
												[
													2.39,
													13.954
												],
												[
													0.188,
													14.189
												],
												[
													-1.667,
													13.015
												],
												[
													-1.87,
													11.296
												],
												[
													-1.933,
													8.957
												],
												[
													-1.924,
													4.965
												],
												[
													-1.543,
													3.454
												],
												[
													0.144,
													3.113
												],
												[
													2.753,
													4.838
												],
												[
													2.752,
													5.595
												],
												[
													2.751,
													5.939
												],
												[
													2.682,
													6.353
												],
												[
													6.319,
													10.212
												],
												[
													9.906,
													6.025
												],
												[
													9.64,
													1.861
												],
												[
													9.374,
													-2.301
												],
												[
													9.52,
													-6.223
												],
												[
													9.663,
													-8.423
												],
												[
													5.887,
													-12.009
												],
												[
													2.647,
													-9.332
												],
												[
													2.715,
													-8.852
												],
												[
													2.714,
													-8.301
												],
												[
													2.849,
													-6.994
												],
												[
													-0.045,
													-5.006
												],
												[
													-1.898,
													-7.142
												],
												[
													-1.891,
													-10.374
												],
												[
													-1.16,
													-13.917
												],
												[
													2.246,
													-14.564
												],
												[
													9.745,
													-14.546
												],
												[
													13.179,
													-12.199
												],
												[
													12.968,
													-10.068
												],
												[
													12.687,
													-7.454
												],
												[
													14.02,
													-3.392
												],
												[
													17.697,
													-1.871
												],
												[
													21.484,
													-3.376
												],
												[
													22.938,
													-7.293
												],
												[
													22.566,
													-10.527
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											322.018,
											23.531
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 30",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 23,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.01,
													0.045
												],
												[
													1.161,
													-0.267
												],
												[
													0,
													0
												],
												[
													0.124,
													0.536
												],
												[
													-0.015,
													0.144
												]
											],
											o: [
												[
													0,
													0
												],
												[
													0.233,
													0.605
												],
												[
													0.143,
													0.627
												],
												[
													0,
													0
												],
												[
													-1.118,
													0.258
												],
												[
													-0.041,
													-0.178
												],
												[
													0,
													0
												]
											],
											v: [
												[
													-6.577,
													-17.634
												],
												[
													-0.193,
													-4.632
												],
												[
													0.142,
													-3.792
												],
												[
													-1.385,
													-2.452
												],
												[
													-5.542,
													-1.494
												],
												[
													-7.403,
													-1.913
												],
												[
													-7.444,
													-2.397
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ind: 1,
									ty: "sh",
									ix: 2,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-0.97,
													0.081
												],
												[
													-0.625,
													0.144
												],
												[
													-0.554,
													1.071
												],
												[
													0.329,
													1.431
												],
												[
													1.653,
													-0.381
												],
												[
													0.43,
													-0.17
												],
												[
													0.223,
													-0.051
												],
												[
													0.165,
													0.715
												],
												[
													-2.547,
													0.586
												],
												[
													0,
													0
												],
												[
													-0.678,
													-0.691
												],
												[
													-0.278,
													-1.206
												],
												[
													0.849,
													-0.195
												],
												[
													0.463,
													-0.036
												],
												[
													0.223,
													-0.05
												],
												[
													-0.608,
													-2.636
												],
												[
													-0.994,
													-0.736
												],
												[
													-1.207,
													0.278
												],
												[
													-2.198,
													0.883
												],
												[
													-1.699,
													0.392
												],
												[
													-1.004,
													0.137
												],
												[
													-1.303,
													0.065
												],
												[
													-0.626,
													0.144
												],
												[
													-0.689,
													1.101
												],
												[
													0.34,
													1.475
												],
												[
													2.502,
													-0.576
												],
												[
													0,
													0
												],
												[
													0.268,
													-0.061
												],
												[
													1.196,
													2.125
												],
												[
													0,
													0
												],
												[
													1.091,
													0.243
												],
												[
													3.754,
													-0.865
												],
												[
													0.869,
													-0.718
												],
												[
													0.383,
													-3.24
												],
												[
													0,
													0
												],
												[
													0.072,
													-0.299
												],
												[
													0.848,
													-0.195
												],
												[
													0.595,
													-0.066
												],
												[
													0.268,
													-0.062
												],
												[
													-0.72,
													-3.127
												],
												[
													-1.068,
													-0.647
												],
												[
													-1.385,
													0.319
												],
												[
													-2.296,
													0.858
												],
												[
													-1.834,
													0.421
												]
											],
											o: [
												[
													2.217,
													-0.183
												],
												[
													1.251,
													-0.289
												],
												[
													0.553,
													-1.068
												],
												[
													-0.608,
													-2.636
												],
												[
													-0.224,
													0.051
												],
												[
													-0.433,
													0.17
												],
												[
													-0.76,
													0.176
												],
												[
													-0.7,
													-3.038
												],
												[
													0,
													0
												],
												[
													0.759,
													-0.175
												],
												[
													0.676,
													0.692
												],
												[
													0.216,
													0.939
												],
												[
													-0.225,
													0.052
												],
												[
													-0.462,
													0.036
												],
												[
													-1.699,
													0.391
												],
												[
													0.319,
													1.386
												],
												[
													0.993,
													0.737
												],
												[
													0.58,
													-0.133
												],
												[
													0.56,
													-0.222
												],
												[
													1.564,
													-0.359
												],
												[
													0.402,
													-0.093
												],
												[
													1.059,
													-0.103
												],
												[
													1.43,
													-0.33
												],
												[
													0.687,
													-1.099
												],
												[
													-0.68,
													-2.95
												],
												[
													0,
													0
												],
												[
													-0.639,
													0.289
												],
												[
													-0.895,
													0.206
												],
												[
													0,
													0
												],
												[
													-1.121,
													-2
												],
												[
													-1.092,
													-0.243
												],
												[
													-3.352,
													0.772
												],
												[
													-1.166,
													1.069
												],
												[
													0,
													0
												],
												[
													-0.173,
													1.5
												],
												[
													-0.32,
													1.062
												],
												[
													-0.268,
													0.063
												],
												[
													-0.598,
													0.067
												],
												[
													-2.369,
													0.546
												],
												[
													0.319,
													1.386
												],
												[
													1.066,
													0.649
												],
												[
													0.446,
													-0.104
												],
												[
													0.997,
													-0.371
												],
												[
													1.698,
													-0.392
												]
											],
											v: [
												[
													-9.078,
													22.688
												],
												[
													-4.815,
													22.2
												],
												[
													-2.106,
													20.163
												],
												[
													-1.769,
													16.415
												],
												[
													-5.161,
													13.032
												],
												[
													-6.143,
													13.364
												],
												[
													-7.126,
													13.695
												],
												[
													-8.513,
													12.886
												],
												[
													-5.742,
													7.447
												],
												[
													3.175,
													5.393
												],
												[
													5.33,
													6.167
												],
												[
													6.762,
													9.014
												],
												[
													5.813,
													10.715
												],
												[
													4.783,
													10.847
												],
												[
													3.755,
													10.977
												],
												[
													2.119,
													15.52
												],
												[
													4.087,
													18.702
												],
												[
													7.387,
													19.389
												],
												[
													11.554,
													17.864
												],
												[
													14.942,
													16.942
												],
												[
													18.794,
													16.197
												],
												[
													21.352,
													15.961
												],
												[
													23.878,
													15.591
												],
												[
													27.056,
													13.447
												],
												[
													27.578,
													9.585
												],
												[
													22.805,
													6.025
												],
												[
													22.067,
													6.195
												],
												[
													20.706,
													6.72
												],
												[
													17.572,
													3.842
												],
												[
													2.413,
													-22.741
												],
												[
													-0.904,
													-26.106
												],
												[
													-8.172,
													-25.173
												],
												[
													-14.505,
													-22.938
												],
												[
													-16.828,
													-16.473
												],
												[
													-20.011,
													12.004
												],
												[
													-20.378,
													14.701
												],
												[
													-22.132,
													16.587
												],
												[
													-23.428,
													16.78
												],
												[
													-24.726,
													16.973
												],
												[
													-27.198,
													22.484
												],
												[
													-25.118,
													25.535
												],
												[
													-21.44,
													26.03
												],
												[
													-17.325,
													24.587
												],
												[
													-13.08,
													23.398
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 2",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "mm",
									mm: 1,
									nm: "Merge Paths 1",
									mn: "ADBE Vector Filter - Merge",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											259.099,
											32.972
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 31",
							np: 4,
							cix: 2,
							bm: 0,
							ix: 24,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "gr",
							it: [
								{
									ind: 0,
									ty: "sh",
									ix: 1,
									ks: {
										a: 0,
										k: {
											i: [
												[
													-1.613,
													0.876
												],
												[
													0,
													0
												],
												[
													0.675,
													2.974
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-0.178,
													-0.425
												],
												[
													0.644,
													-0.349
												],
												[
													0.183,
													-0.046
												],
												[
													0.121,
													-0.066
												],
												[
													0.242,
													-0.13
												],
												[
													-1.357,
													-2.498
												],
												[
													-1.184,
													-0.402
												],
												[
													-1.209,
													0.657
												],
												[
													-1.383,
													1.011
												],
												[
													-0.766,
													0.416
												],
												[
													-1.297,
													0.497
												],
												[
													-0.766,
													0.416
												],
												[
													-0.38,
													1.224
												],
												[
													0.744,
													1.37
												],
												[
													1.06,
													0.415
												],
												[
													0.928,
													-0.503
												],
												[
													0.568,
													-0.49
												],
												[
													0.323,
													-0.175
												],
												[
													1.487,
													2.742
												],
												[
													0,
													0
												],
												[
													-1.089,
													0.591
												],
												[
													-0.722,
													0.209
												],
												[
													-0.363,
													0.198
												],
												[
													-0.21,
													1.106
												],
												[
													0.613,
													1.13
												],
												[
													1.232,
													0.348
												],
												[
													1.33,
													-0.722
												],
												[
													1.045,
													-0.671
												],
												[
													0.967,
													-0.525
												],
												[
													1.924,
													-0.782
												],
												[
													0.886,
													-0.48
												],
												[
													0.183,
													-0.961
												],
												[
													-0.518,
													-2.013
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.665,
													0.265
												],
												[
													1.007,
													-0.547
												],
												[
													1.244,
													-0.883
												],
												[
													1.814,
													-0.985
												],
												[
													2.367,
													-1.023
												],
												[
													0.967,
													-0.524
												],
												[
													-1.597,
													-2.942
												],
												[
													-1.041,
													-0.426
												],
												[
													-0.928,
													0.504
												],
												[
													-0.548,
													0.481
												],
												[
													-0.323,
													0.176
												],
												[
													-0.771,
													-0.938
												],
												[
													-0.7,
													-1.288
												],
												[
													0,
													0
												],
												[
													-0.138,
													-0.446
												],
												[
													0.807,
													-0.438
												],
												[
													0.701,
													-0.197
												],
												[
													0.322,
													-0.176
												],
												[
													0.22,
													-1.083
												],
												[
													-0.634,
													-1.168
												],
												[
													-1.266,
													-0.41
												],
												[
													-1.25,
													0.678
												],
												[
													0,
													0
												],
												[
													-1.371,
													0.744
												],
												[
													-0.89,
													0.379
												],
												[
													-1.216,
													0.451
												],
												[
													-0.565,
													0.306
												],
												[
													-0.287,
													1.201
												],
												[
													0.744,
													1.371
												],
												[
													1.612,
													-0.875
												],
												[
													0.099,
													-0.105
												],
												[
													0.121,
													-0.065
												],
												[
													0.081,
													-0.044
												],
												[
													0.187,
													0.055
												],
												[
													1.028,
													1.895
												],
												[
													0,
													0
												],
												[
													0,
													0
												]
											],
											o: [
												[
													0,
													0
												],
												[
													1.652,
													-0.895
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													0.524,
													0.966
												],
												[
													0.361,
													0.952
												],
												[
													-0.041,
													0.022
												],
												[
													-0.161,
													0.087
												],
												[
													-0.143,
													0.026
												],
												[
													-1.653,
													0.898
												],
												[
													0.722,
													1.331
												],
												[
													1.183,
													0.401
												],
												[
													0.764,
													-0.415
												],
												[
													1.381,
													-1.011
												],
												[
													1.21,
													-0.656
												],
												[
													1.945,
													-0.742
												],
												[
													1.33,
													-0.722
												],
												[
													0.379,
													-1.223
												],
												[
													-0.612,
													-1.129
												],
												[
													-1.06,
													-0.416
												],
												[
													-0.322,
													0.176
												],
												[
													-0.568,
													0.492
												],
												[
													-1.048,
													0.569
												],
												[
													0,
													0
												],
												[
													-1.465,
													-2.701
												],
												[
													0.281,
													-0.153
												],
												[
													0.721,
													-0.208
												],
												[
													0.927,
													-0.503
												],
												[
													0.209,
													-1.105
												],
												[
													-0.743,
													-1.37
												],
												[
													-1.234,
													-0.348
												],
												[
													-0.525,
													0.285
												],
												[
													-3.654,
													2.402
												],
												[
													-0.928,
													0.503
												],
												[
													-1.923,
													0.784
												],
												[
													-1.008,
													0.547
												],
												[
													-0.183,
													0.96
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													-1.195,
													-1.334
												],
												[
													-0.666,
													-0.266
												],
												[
													-0.766,
													0.415
												],
												[
													-1.844,
													1.313
												],
												[
													-1.128,
													0.611
												],
												[
													-2.366,
													1.025
												],
												[
													-2.984,
													1.62
												],
												[
													0.613,
													1.128
												],
												[
													1.04,
													0.427
												],
												[
													0.363,
													-0.197
												],
												[
													0.548,
													-0.48
												],
												[
													0.807,
													-0.438
												],
												[
													0.277,
													0.319
												],
												[
													0,
													0
												],
												[
													0.7,
													1.291
												],
												[
													0.367,
													1.159
												],
												[
													-0.322,
													0.175
												],
												[
													-0.702,
													0.198
												],
												[
													-0.967,
													0.525
												],
												[
													-0.221,
													1.087
												],
												[
													0.701,
													1.29
												],
												[
													1.265,
													0.408
												],
												[
													0,
													0
												],
												[
													0.861,
													-0.624
												],
												[
													1.089,
													-0.591
												],
												[
													0.303,
													-0.112
												],
												[
													0.952,
													-0.36
												],
												[
													1.209,
													-0.657
												],
												[
													0.288,
													-1.199
												],
												[
													-1.334,
													-2.458
												],
												[
													-0.242,
													0.131
												],
												[
													-0.121,
													0.065
												],
												[
													-0.14,
													0.128
												],
												[
													-0.323,
													0.175
												],
												[
													-0.493,
													-0.045
												],
												[
													0,
													0
												],
												[
													0,
													0
												],
												[
													1.852,
													1.97
												]
											],
											v: [
												[
													8.862,
													21.031
												],
												[
													12.732,
													18.93
												],
												[
													14.198,
													13.125
												],
												[
													6.458,
													-21.185
												],
												[
													18.83,
													1.611
												],
												[
													19.884,
													3.699
												],
												[
													19.458,
													5.652
												],
												[
													19.122,
													5.756
												],
												[
													18.7,
													5.986
												],
												[
													18.122,
													6.22
												],
												[
													17.678,
													11.314
												],
												[
													20.536,
													13.913
												],
												[
													24.125,
													13.53
												],
												[
													27.347,
													11.39
												],
												[
													30.568,
													9.25
												],
												[
													34.328,
													7.522
												],
												[
													38.394,
													5.785
												],
												[
													40.959,
													2.867
												],
												[
													40.412,
													-1.024
												],
												[
													37.902,
													-3.34
												],
												[
													34.92,
													-3.21
												],
												[
													33.584,
													-2.211
												],
												[
													32.248,
													-1.211
												],
												[
													28.445,
													-4.47
												],
												[
													19.354,
													-21.217
												],
												[
													18.789,
													-26.155
												],
												[
													20.294,
													-26.698
												],
												[
													21.92,
													-27.307
												],
												[
													23.625,
													-29.719
												],
												[
													23.019,
													-33.07
												],
												[
													20.055,
													-35.648
												],
												[
													16.21,
													-35.088
												],
												[
													13.857,
													-33.654
												],
												[
													6.925,
													-29.265
												],
												[
													2.649,
													-27.336
												],
												[
													-1.566,
													-25.44
												],
												[
													-3.352,
													-23.178
												],
												[
													-2.849,
													-18.717
												],
												[
													3.377,
													5.3
												],
												[
													-13.619,
													-14.045
												],
												[
													-16.409,
													-16.444
												],
												[
													-18.919,
													-16.021
												],
												[
													-21.932,
													-14.072
												],
												[
													-27.419,
													-10.625
												],
												[
													-32.662,
													-8.172
												],
												[
													-37.662,
													-5.849
												],
												[
													-39.741,
													0.994
												],
												[
													-37.261,
													3.327
												],
												[
													-34.31,
													3.212
												],
												[
													-32.944,
													2.197
												],
												[
													-31.638,
													1.214
												],
												[
													-29.273,
													1.966
												],
												[
													-27.807,
													4.378
												],
												[
													-18.716,
													21.127
												],
												[
													-17.459,
													23.732
												],
												[
													-18.118,
													26.125
												],
												[
													-19.653,
													26.685
												],
												[
													-21.189,
													27.244
												],
												[
													-22.97,
													29.658
												],
												[
													-22.349,
													33.039
												],
												[
													-19.4,
													35.588
												],
												[
													-15.627,
													35.184
												],
												[
													-12.141,
													32.665
												],
												[
													-8.793,
													30.613
												],
												[
													-5.825,
													29.159
												],
												[
													-3.545,
													28.313
												],
												[
													-1.27,
													27.313
												],
												[
													0.976,
													24.528
												],
												[
													0.293,
													20.672
												],
												[
													-4.128,
													18.297
												],
												[
													-4.639,
													18.653
												],
												[
													-5.002,
													18.849
												],
												[
													-5.332,
													19.107
												],
												[
													-6.096,
													19.287
												],
												[
													-8.379,
													16.378
												],
												[
													-20.751,
													-6.417
												],
												[
													3.666,
													19.389
												]
											],
											c: true
										},
										ix: 2
									},
									nm: "Path 1",
									mn: "ADBE Vector Shape - Group",
									hd: false
								},
								{
									ty: "fl",
									c: {
										a: 0,
										k: [
											0.733333333333,
											0.215686289469,
											0.215686289469,
											1
										],
										ix: 4
									},
									o: {
										a: 0,
										k: 100,
										ix: 5
									},
									r: 1,
									bm: 0,
									nm: "Fill 1",
									mn: "ADBE Vector Graphic - Fill",
									hd: false
								},
								{
									ty: "tr",
									p: {
										a: 0,
										k: [
											179.679,
											59.591
										],
										ix: 2
									},
									a: {
										a: 0,
										k: [
											0,
											0
										],
										ix: 1
									},
									s: {
										a: 0,
										k: [
											100,
											100
										],
										ix: 3
									},
									r: {
										a: 0,
										k: 0,
										ix: 6
									},
									o: {
										a: 0,
										k: 100,
										ix: 7
									},
									sk: {
										a: 0,
										k: 0,
										ix: 4
									},
									sa: {
										a: 0,
										k: 0,
										ix: 5
									},
									nm: "Transform"
								}
							],
							nm: "Group 32",
							np: 2,
							cix: 2,
							bm: 0,
							ix: 25,
							mn: "ADBE Vector Group",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									321.625,
									322.144
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									321.625,
									322.144
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 1,
								k: [
									{
										i: {
											x: [
												0.833
											],
											y: [
												0.833
											]
										},
										o: {
											x: [
												0.167
											],
											y: [
												0.167
											]
										},
										t: 0,
										s: [
											0
										]
									},
									{
										t: 120,
										s: [
											72
										]
									}
								],
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 8",
					np: 25,
					cix: 2,
					bm: 0,
					ix: 8,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 120,
			st: 0,
			bm: 0
		}
	];
	var markers$1 = [
	];
	var lottieJson$1 = {
		v: v$1,
		fr: fr$1,
		ip: ip$1,
		op: op$1,
		w: w$1,
		h: h$1,
		nm: nm$1,
		ddd: ddd$1,
		assets: assets$1,
		layers: layers$1,
		markers: markers$1
	};

	var lottie$1 = {exports: {}};

	lottie$1.exports;

	(function (module, exports) {
		typeof navigator!=="undefined"&&function(global,factory){module.exports=factory();}(commonjsGlobal,function(){var svgNS='http://www.w3.org/2000/svg';var locationHref='';var _useWebWorker=false;var initialDefaultFrame=-999999;var setWebWorker=function setWebWorker(flag){_useWebWorker=!!flag;};var getWebWorker=function getWebWorker(){return _useWebWorker;};var setLocationHref=function setLocationHref(value){locationHref=value;};var getLocationHref=function getLocationHref(){return locationHref;};function createTag(type){// return {appendChild:function(){},setAttribute:function(){},style:{}}
		return document.createElement(type);}function extendPrototype(sources,destination){var i;var len=sources.length;var sourcePrototype;for(i=0;i<len;i+=1){sourcePrototype=sources[i].prototype;for(var attr in sourcePrototype){if(Object.prototype.hasOwnProperty.call(sourcePrototype,attr))destination.prototype[attr]=sourcePrototype[attr];}}}function getDescriptor(object,prop){return Object.getOwnPropertyDescriptor(object,prop);}function createProxyFunction(prototype){function ProxyFunction(){}ProxyFunction.prototype=prototype;return ProxyFunction;}// import Howl from '../../3rd_party/howler';
		var audioControllerFactory=function(){function AudioController(audioFactory){this.audios=[];this.audioFactory=audioFactory;this._volume=1;this._isMuted=false;}AudioController.prototype={addAudio:function addAudio(audio){this.audios.push(audio);},pause:function pause(){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].pause();}},resume:function resume(){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].resume();}},setRate:function setRate(rateValue){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].setRate(rateValue);}},createAudio:function createAudio(assetPath){if(this.audioFactory){return this.audioFactory(assetPath);}if(window.Howl){return new window.Howl({src:[assetPath]});}return {isPlaying:false,play:function play(){this.isPlaying=true;},seek:function seek(){this.isPlaying=false;},playing:function playing(){},rate:function rate(){},setVolume:function setVolume(){}};},setAudioFactory:function setAudioFactory(audioFactory){this.audioFactory=audioFactory;},setVolume:function setVolume(value){this._volume=value;this._updateVolume();},mute:function mute(){this._isMuted=true;this._updateVolume();},unmute:function unmute(){this._isMuted=false;this._updateVolume();},getVolume:function getVolume(){return this._volume;},_updateVolume:function _updateVolume(){var i;var len=this.audios.length;for(i=0;i<len;i+=1){this.audios[i].volume(this._volume*(this._isMuted?0:1));}}};return function(){return new AudioController();};}();var createTypedArray=function(){function createRegularArray(type,len){var i=0;var arr=[];var value;switch(type){case'int16':case'uint8c':value=1;break;default:value=1.1;break;}for(i=0;i<len;i+=1){arr.push(value);}return arr;}function createTypedArrayFactory(type,len){if(type==='float32'){return new Float32Array(len);}if(type==='int16'){return new Int16Array(len);}if(type==='uint8c'){return new Uint8ClampedArray(len);}return createRegularArray(type,len);}if(typeof Uint8ClampedArray==='function'&&typeof Float32Array==='function'){return createTypedArrayFactory;}return createRegularArray;}();function createSizedArray(len){return Array.apply(null,{length:len});}function _typeof$6(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$6=function _typeof(obj){return typeof obj;};}else {_typeof$6=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$6(obj);}var subframeEnabled=true;var expressionsPlugin=null;var expressionsInterfaces=null;var idPrefix$1='';var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var bmPow=Math.pow;var bmSqrt=Math.sqrt;var bmFloor=Math.floor;var bmMax=Math.max;var bmMin=Math.min;var BMMath={};(function(){var propertyNames=['abs','acos','acosh','asin','asinh','atan','atanh','atan2','ceil','cbrt','expm1','clz32','cos','cosh','exp','floor','fround','hypot','imul','log','log1p','log2','log10','max','min','pow','random','round','sign','sin','sinh','sqrt','tan','tanh','trunc','E','LN10','LN2','LOG10E','LOG2E','PI','SQRT1_2','SQRT2'];var i;var len=propertyNames.length;for(i=0;i<len;i+=1){BMMath[propertyNames[i]]=Math[propertyNames[i]];}})();BMMath.random=Math.random;BMMath.abs=function(val){var tOfVal=_typeof$6(val);if(tOfVal==='object'&&val.length){var absArr=createSizedArray(val.length);var i;var len=val.length;for(i=0;i<len;i+=1){absArr[i]=Math.abs(val[i]);}return absArr;}return Math.abs(val);};var defaultCurveSegments=150;var degToRads=Math.PI/180;var roundCorner=0.5519;function styleDiv(element){element.style.position='absolute';element.style.top=0;element.style.left=0;element.style.display='block';element.style.transformOrigin='0 0';element.style.webkitTransformOrigin='0 0';element.style.backfaceVisibility='visible';element.style.webkitBackfaceVisibility='visible';element.style.transformStyle='preserve-3d';element.style.webkitTransformStyle='preserve-3d';element.style.mozTransformStyle='preserve-3d';}function BMEnterFrameEvent(type,currentTime,totalTime,frameMultiplier){this.type=type;this.currentTime=currentTime;this.totalTime=totalTime;this.direction=frameMultiplier<0?-1:1;}function BMCompleteEvent(type,frameMultiplier){this.type=type;this.direction=frameMultiplier<0?-1:1;}function BMCompleteLoopEvent(type,totalLoops,currentLoop,frameMultiplier){this.type=type;this.currentLoop=currentLoop;this.totalLoops=totalLoops;this.direction=frameMultiplier<0?-1:1;}function BMSegmentStartEvent(type,firstFrame,totalFrames){this.type=type;this.firstFrame=firstFrame;this.totalFrames=totalFrames;}function BMDestroyEvent(type,target){this.type=type;this.target=target;}function BMRenderFrameErrorEvent(nativeError,currentTime){this.type='renderFrameError';this.nativeError=nativeError;this.currentTime=currentTime;}function BMConfigErrorEvent(nativeError){this.type='configError';this.nativeError=nativeError;}var createElementID=function(){var _count=0;return function createID(){_count+=1;return idPrefix$1+'__lottie_element_'+_count;};}();function HSVtoRGB(h,s,v){var r;var g;var b;var i;var f;var p;var q;var t;i=Math.floor(h*6);f=h*6-i;p=v*(1-s);q=v*(1-f*s);t=v*(1-(1-f)*s);switch(i%6){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break;}return [r,g,b];}function RGBtoHSV(r,g,b){var max=Math.max(r,g,b);var min=Math.min(r,g,b);var d=max-min;var h;var s=max===0?0:d/max;var v=max/255;switch(max){case min:h=0;break;case r:h=g-b+d*(g<b?6:0);h/=6*d;break;case g:h=b-r+d*2;h/=6*d;break;case b:h=r-g+d*4;h/=6*d;break;}return [h,s,v];}function addSaturationToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[1]+=offset;if(hsv[1]>1){hsv[1]=1;}else if(hsv[1]<=0){hsv[1]=0;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}function addBrightnessToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[2]+=offset;if(hsv[2]>1){hsv[2]=1;}else if(hsv[2]<0){hsv[2]=0;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}function addHueToRGB(color,offset){var hsv=RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);hsv[0]+=offset/360;if(hsv[0]>1){hsv[0]-=1;}else if(hsv[0]<0){hsv[0]+=1;}return HSVtoRGB(hsv[0],hsv[1],hsv[2]);}var rgbToHex=function(){var colorMap=[];var i;var hex;for(i=0;i<256;i+=1){hex=i.toString(16);colorMap[i]=hex.length===1?'0'+hex:hex;}return function(r,g,b){if(r<0){r=0;}if(g<0){g=0;}if(b<0){b=0;}return '#'+colorMap[r]+colorMap[g]+colorMap[b];};}();var setSubframeEnabled=function setSubframeEnabled(flag){subframeEnabled=!!flag;};var getSubframeEnabled=function getSubframeEnabled(){return subframeEnabled;};var setExpressionsPlugin=function setExpressionsPlugin(value){expressionsPlugin=value;};var getExpressionsPlugin=function getExpressionsPlugin(){return expressionsPlugin;};var setExpressionInterfaces=function setExpressionInterfaces(value){expressionsInterfaces=value;};var getExpressionInterfaces=function getExpressionInterfaces(){return expressionsInterfaces;};var setDefaultCurveSegments=function setDefaultCurveSegments(value){defaultCurveSegments=value;};var getDefaultCurveSegments=function getDefaultCurveSegments(){return defaultCurveSegments;};var setIdPrefix=function setIdPrefix(value){idPrefix$1=value;};function createNS(type){// return {appendChild:function(){},setAttribute:function(){},style:{}}
		return document.createElementNS(svgNS,type);}function _typeof$5(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$5=function _typeof(obj){return typeof obj;};}else {_typeof$5=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$5(obj);}var dataManager=function(){var _counterId=1;var processes=[];var workerFn;var workerInstance;var workerProxy={onmessage:function onmessage(){},postMessage:function postMessage(path){workerFn({data:path});}};var _workerSelf={postMessage:function postMessage(data){workerProxy.onmessage({data:data});}};function createWorker(fn){if(window.Worker&&window.Blob&&getWebWorker()){var blob=new Blob(['var _workerSelf = self; self.onmessage = ',fn.toString()],{type:'text/javascript'});// var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });
		var url=URL.createObjectURL(blob);return new Worker(url);}workerFn=fn;return workerProxy;}function setupWorker(){if(!workerInstance){workerInstance=createWorker(function workerStart(e){function dataFunctionManager(){function completeLayers(layers,comps){var layerData;var i;var len=layers.length;var j;var jLen;var k;var kLen;for(i=0;i<len;i+=1){layerData=layers[i];if('ks'in layerData&&!layerData.completed){layerData.completed=true;if(layerData.hasMask){var maskProps=layerData.masksProperties;jLen=maskProps.length;for(j=0;j<jLen;j+=1){if(maskProps[j].pt.k.i){convertPathsToAbsoluteValues(maskProps[j].pt.k);}else {kLen=maskProps[j].pt.k.length;for(k=0;k<kLen;k+=1){if(maskProps[j].pt.k[k].s){convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);}if(maskProps[j].pt.k[k].e){convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);}}}}}if(layerData.ty===0){layerData.layers=findCompLayers(layerData.refId,comps);completeLayers(layerData.layers,comps);}else if(layerData.ty===4){completeShapes(layerData.shapes);}else if(layerData.ty===5){completeText(layerData);}}}}function completeChars(chars,assets){if(chars){var i=0;var len=chars.length;for(i=0;i<len;i+=1){if(chars[i].t===1){// var compData = findComp(chars[i].data.refId, assets);
		chars[i].data.layers=findCompLayers(chars[i].data.refId,assets);// chars[i].data.ip = 0;
		// chars[i].data.op = 99999;
		// chars[i].data.st = 0;
		// chars[i].data.sr = 1;
		// chars[i].w = compData.w;
		// chars[i].data.ks = {
		//   a: { k: [0, 0, 0], a: 0 },
		//   p: { k: [0, -compData.h, 0], a: 0 },
		//   r: { k: 0, a: 0 },
		//   s: { k: [100, 100], a: 0 },
		//   o: { k: 100, a: 0 },
		// };
		completeLayers(chars[i].data.layers,assets);}}}}function findComp(id,comps){var i=0;var len=comps.length;while(i<len){if(comps[i].id===id){return comps[i];}i+=1;}return null;}function findCompLayers(id,comps){var comp=findComp(id,comps);if(comp){if(!comp.layers.__used){comp.layers.__used=true;return comp.layers;}return JSON.parse(JSON.stringify(comp.layers));}return null;}function completeShapes(arr){var i;var len=arr.length;var j;var jLen;for(i=len-1;i>=0;i-=1){if(arr[i].ty==='sh'){if(arr[i].ks.k.i){convertPathsToAbsoluteValues(arr[i].ks.k);}else {jLen=arr[i].ks.k.length;for(j=0;j<jLen;j+=1){if(arr[i].ks.k[j].s){convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);}if(arr[i].ks.k[j].e){convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);}}}}else if(arr[i].ty==='gr'){completeShapes(arr[i].it);}}}function convertPathsToAbsoluteValues(path){var i;var len=path.i.length;for(i=0;i<len;i+=1){path.i[i][0]+=path.v[i][0];path.i[i][1]+=path.v[i][1];path.o[i][0]+=path.v[i][0];path.o[i][1]+=path.v[i][1];}}function checkVersion(minimum,animVersionString){var animVersion=animVersionString?animVersionString.split('.'):[100,100,100];if(minimum[0]>animVersion[0]){return true;}if(animVersion[0]>minimum[0]){return false;}if(minimum[1]>animVersion[1]){return true;}if(animVersion[1]>minimum[1]){return false;}if(minimum[2]>animVersion[2]){return true;}if(animVersion[2]>minimum[2]){return false;}return null;}var checkText=function(){var minimumVersion=[4,4,14];function updateTextLayer(textLayer){var documentData=textLayer.t.d;textLayer.t.d={k:[{s:documentData,t:0}]};}function iterateLayers(layers){var i;var len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===5){updateTextLayer(layers[i]);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkChars=function(){var minimumVersion=[4,7,99];return function(animationData){if(animationData.chars&&!checkVersion(minimumVersion,animationData.v)){var i;var len=animationData.chars.length;for(i=0;i<len;i+=1){var charData=animationData.chars[i];if(charData.data&&charData.data.shapes){completeShapes(charData.data.shapes);charData.data.ip=0;charData.data.op=99999;charData.data.st=0;charData.data.sr=1;charData.data.ks={p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0}};if(!animationData.chars[i].t){charData.data.shapes.push({ty:'no'});charData.data.shapes[0].it.push({p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0},sk:{k:0,a:0},sa:{k:0,a:0},ty:'tr'});}}}}};}();var checkPathProperties=function(){var minimumVersion=[5,7,15];function updateTextLayer(textLayer){var pathData=textLayer.t.p;if(typeof pathData.a==='number'){pathData.a={a:0,k:pathData.a};}if(typeof pathData.p==='number'){pathData.p={a:0,k:pathData.p};}if(typeof pathData.r==='number'){pathData.r={a:0,k:pathData.r};}}function iterateLayers(layers){var i;var len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===5){updateTextLayer(layers[i]);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkColors=function(){var minimumVersion=[4,1,9];function iterateShapes(shapes){var i;var len=shapes.length;var j;var jLen;for(i=0;i<len;i+=1){if(shapes[i].ty==='gr'){iterateShapes(shapes[i].it);}else if(shapes[i].ty==='fl'||shapes[i].ty==='st'){if(shapes[i].c.k&&shapes[i].c.k[0].i){jLen=shapes[i].c.k.length;for(j=0;j<jLen;j+=1){if(shapes[i].c.k[j].s){shapes[i].c.k[j].s[0]/=255;shapes[i].c.k[j].s[1]/=255;shapes[i].c.k[j].s[2]/=255;shapes[i].c.k[j].s[3]/=255;}if(shapes[i].c.k[j].e){shapes[i].c.k[j].e[0]/=255;shapes[i].c.k[j].e[1]/=255;shapes[i].c.k[j].e[2]/=255;shapes[i].c.k[j].e[3]/=255;}}}else {shapes[i].c.k[0]/=255;shapes[i].c.k[1]/=255;shapes[i].c.k[2]/=255;shapes[i].c.k[3]/=255;}}}}function iterateLayers(layers){var i;var len=layers.length;for(i=0;i<len;i+=1){if(layers[i].ty===4){iterateShapes(layers[i].shapes);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();var checkShapes=function(){var minimumVersion=[4,4,18];function completeClosingShapes(arr){var i;var len=arr.length;var j;var jLen;for(i=len-1;i>=0;i-=1){if(arr[i].ty==='sh'){if(arr[i].ks.k.i){arr[i].ks.k.c=arr[i].closed;}else {jLen=arr[i].ks.k.length;for(j=0;j<jLen;j+=1){if(arr[i].ks.k[j].s){arr[i].ks.k[j].s[0].c=arr[i].closed;}if(arr[i].ks.k[j].e){arr[i].ks.k[j].e[0].c=arr[i].closed;}}}}else if(arr[i].ty==='gr'){completeClosingShapes(arr[i].it);}}}function iterateLayers(layers){var layerData;var i;var len=layers.length;var j;var jLen;var k;var kLen;for(i=0;i<len;i+=1){layerData=layers[i];if(layerData.hasMask){var maskProps=layerData.masksProperties;jLen=maskProps.length;for(j=0;j<jLen;j+=1){if(maskProps[j].pt.k.i){maskProps[j].pt.k.c=maskProps[j].cl;}else {kLen=maskProps[j].pt.k.length;for(k=0;k<kLen;k+=1){if(maskProps[j].pt.k[k].s){maskProps[j].pt.k[k].s[0].c=maskProps[j].cl;}if(maskProps[j].pt.k[k].e){maskProps[j].pt.k[k].e[0].c=maskProps[j].cl;}}}}}if(layerData.ty===4){completeClosingShapes(layerData.shapes);}}}return function(animationData){if(checkVersion(minimumVersion,animationData.v)){iterateLayers(animationData.layers);if(animationData.assets){var i;var len=animationData.assets.length;for(i=0;i<len;i+=1){if(animationData.assets[i].layers){iterateLayers(animationData.assets[i].layers);}}}}};}();function completeData(animationData){if(animationData.__complete){return;}checkColors(animationData);checkText(animationData);checkChars(animationData);checkPathProperties(animationData);checkShapes(animationData);completeLayers(animationData.layers,animationData.assets);completeChars(animationData.chars,animationData.assets);animationData.__complete=true;}function completeText(data){if(data.t.a.length===0&&!('m'in data.t.p));}var moduleOb={};moduleOb.completeData=completeData;moduleOb.checkColors=checkColors;moduleOb.checkChars=checkChars;moduleOb.checkPathProperties=checkPathProperties;moduleOb.checkShapes=checkShapes;moduleOb.completeLayers=completeLayers;return moduleOb;}if(!_workerSelf.dataManager){_workerSelf.dataManager=dataFunctionManager();}if(!_workerSelf.assetLoader){_workerSelf.assetLoader=function(){function formatResponse(xhr){// using typeof doubles the time of execution of this method,
		// so if available, it's better to use the header to validate the type
		var contentTypeHeader=xhr.getResponseHeader('content-type');if(contentTypeHeader&&xhr.responseType==='json'&&contentTypeHeader.indexOf('json')!==-1){return xhr.response;}if(xhr.response&&_typeof$5(xhr.response)==='object'){return xhr.response;}if(xhr.response&&typeof xhr.response==='string'){return JSON.parse(xhr.response);}if(xhr.responseText){return JSON.parse(xhr.responseText);}return null;}function loadAsset(path,fullPath,callback,errorCallback){var response;var xhr=new XMLHttpRequest();// set responseType after calling open or IE will break.
		try{// This crashes on Android WebView prior to KitKat
		xhr.responseType='json';}catch(err){}// eslint-disable-line no-empty
		xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200){response=formatResponse(xhr);callback(response);}else {try{response=formatResponse(xhr);callback(response);}catch(err){if(errorCallback){errorCallback(err);}}}}};try{// Hack to workaround banner validation
		xhr.open(['G','E','T'].join(''),path,true);}catch(error){// Hack to workaround banner validation
		xhr.open(['G','E','T'].join(''),fullPath+'/'+path,true);}xhr.send();}return {load:loadAsset};}();}if(e.data.type==='loadAnimation'){_workerSelf.assetLoader.load(e.data.path,e.data.fullPath,function(data){_workerSelf.dataManager.completeData(data);_workerSelf.postMessage({id:e.data.id,payload:data,status:'success'});},function(){_workerSelf.postMessage({id:e.data.id,status:'error'});});}else if(e.data.type==='complete'){var animation=e.data.animation;_workerSelf.dataManager.completeData(animation);_workerSelf.postMessage({id:e.data.id,payload:animation,status:'success'});}else if(e.data.type==='loadData'){_workerSelf.assetLoader.load(e.data.path,e.data.fullPath,function(data){_workerSelf.postMessage({id:e.data.id,payload:data,status:'success'});},function(){_workerSelf.postMessage({id:e.data.id,status:'error'});});}});workerInstance.onmessage=function(event){var data=event.data;var id=data.id;var process=processes[id];processes[id]=null;if(data.status==='success'){process.onComplete(data.payload);}else if(process.onError){process.onError();}};}}function createProcess(onComplete,onError){_counterId+=1;var id='processId_'+_counterId;processes[id]={onComplete:onComplete,onError:onError};return id;}function loadAnimation(path,onComplete,onError){setupWorker();var processId=createProcess(onComplete,onError);workerInstance.postMessage({type:'loadAnimation',path:path,fullPath:window.location.origin+window.location.pathname,id:processId});}function loadData(path,onComplete,onError){setupWorker();var processId=createProcess(onComplete,onError);workerInstance.postMessage({type:'loadData',path:path,fullPath:window.location.origin+window.location.pathname,id:processId});}function completeAnimation(anim,onComplete,onError){setupWorker();var processId=createProcess(onComplete,onError);workerInstance.postMessage({type:'complete',animation:anim,id:processId});}return {loadAnimation:loadAnimation,loadData:loadData,completeAnimation:completeAnimation};}();var ImagePreloader=function(){var proxyImage=function(){var canvas=createTag('canvas');canvas.width=1;canvas.height=1;var ctx=canvas.getContext('2d');ctx.fillStyle='rgba(0,0,0,0)';ctx.fillRect(0,0,1,1);return canvas;}();function imageLoaded(){this.loadedAssets+=1;if(this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages){if(this.imagesLoadedCb){this.imagesLoadedCb(null);}}}function footageLoaded(){this.loadedFootagesCount+=1;if(this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages){if(this.imagesLoadedCb){this.imagesLoadedCb(null);}}}function getAssetsPath(assetData,assetsPath,originalPath){var path='';if(assetData.e){path=assetData.p;}else if(assetsPath){var imagePath=assetData.p;if(imagePath.indexOf('images/')!==-1){imagePath=imagePath.split('/')[1];}path=assetsPath+imagePath;}else {path=originalPath;path+=assetData.u?assetData.u:'';path+=assetData.p;}return path;}function testImageLoaded(img){var _count=0;var intervalId=setInterval(function(){var box=img.getBBox();if(box.width||_count>500){this._imageLoaded();clearInterval(intervalId);}_count+=1;}.bind(this),50);}function createImageData(assetData){var path=getAssetsPath(assetData,this.assetsPath,this.path);var img=createNS('image');if(isSafari){this.testImageLoaded(img);}else {img.addEventListener('load',this._imageLoaded,false);}img.addEventListener('error',function(){ob.img=proxyImage;this._imageLoaded();}.bind(this),false);img.setAttributeNS('http://www.w3.org/1999/xlink','href',path);if(this._elementHelper.append){this._elementHelper.append(img);}else {this._elementHelper.appendChild(img);}var ob={img:img,assetData:assetData};return ob;}function createImgData(assetData){var path=getAssetsPath(assetData,this.assetsPath,this.path);var img=createTag('img');img.crossOrigin='anonymous';img.addEventListener('load',this._imageLoaded,false);img.addEventListener('error',function(){ob.img=proxyImage;this._imageLoaded();}.bind(this),false);img.src=path;var ob={img:img,assetData:assetData};return ob;}function createFootageData(data){var ob={assetData:data};var path=getAssetsPath(data,this.assetsPath,this.path);dataManager.loadData(path,function(footageData){ob.img=footageData;this._footageLoaded();}.bind(this),function(){ob.img={};this._footageLoaded();}.bind(this));return ob;}function loadAssets(assets,cb){this.imagesLoadedCb=cb;var i;var len=assets.length;for(i=0;i<len;i+=1){if(!assets[i].layers){if(!assets[i].t||assets[i].t==='seq'){this.totalImages+=1;this.images.push(this._createImageData(assets[i]));}else if(assets[i].t===3){this.totalFootages+=1;this.images.push(this.createFootageData(assets[i]));}}}}function setPath(path){this.path=path||'';}function setAssetsPath(path){this.assetsPath=path||'';}function getAsset(assetData){var i=0;var len=this.images.length;while(i<len){if(this.images[i].assetData===assetData){return this.images[i].img;}i+=1;}return null;}function destroy(){this.imagesLoadedCb=null;this.images.length=0;}function loadedImages(){return this.totalImages===this.loadedAssets;}function loadedFootages(){return this.totalFootages===this.loadedFootagesCount;}function setCacheType(type,elementHelper){if(type==='svg'){this._elementHelper=elementHelper;this._createImageData=this.createImageData.bind(this);}else {this._createImageData=this.createImgData.bind(this);}}function ImagePreloaderFactory(){this._imageLoaded=imageLoaded.bind(this);this._footageLoaded=footageLoaded.bind(this);this.testImageLoaded=testImageLoaded.bind(this);this.createFootageData=createFootageData.bind(this);this.assetsPath='';this.path='';this.totalImages=0;this.totalFootages=0;this.loadedAssets=0;this.loadedFootagesCount=0;this.imagesLoadedCb=null;this.images=[];}ImagePreloaderFactory.prototype={loadAssets:loadAssets,setAssetsPath:setAssetsPath,setPath:setPath,loadedImages:loadedImages,loadedFootages:loadedFootages,destroy:destroy,getAsset:getAsset,createImgData:createImgData,createImageData:createImageData,imageLoaded:imageLoaded,footageLoaded:footageLoaded,setCacheType:setCacheType};return ImagePreloaderFactory;}();function BaseEvent(){}BaseEvent.prototype={triggerEvent:function triggerEvent(eventName,args){if(this._cbs[eventName]){var callbacks=this._cbs[eventName];for(var i=0;i<callbacks.length;i+=1){callbacks[i](args);}}},addEventListener:function addEventListener(eventName,callback){if(!this._cbs[eventName]){this._cbs[eventName]=[];}this._cbs[eventName].push(callback);return function(){this.removeEventListener(eventName,callback);}.bind(this);},removeEventListener:function removeEventListener(eventName,callback){if(!callback){this._cbs[eventName]=null;}else if(this._cbs[eventName]){var i=0;var len=this._cbs[eventName].length;while(i<len){if(this._cbs[eventName][i]===callback){this._cbs[eventName].splice(i,1);i-=1;len-=1;}i+=1;}if(!this._cbs[eventName].length){this._cbs[eventName]=null;}}}};var markerParser=function(){function parsePayloadLines(payload){var lines=payload.split('\r\n');var keys={};var line;var keysCount=0;for(var i=0;i<lines.length;i+=1){line=lines[i].split(':');if(line.length===2){keys[line[0]]=line[1].trim();keysCount+=1;}}if(keysCount===0){throw new Error();}return keys;}return function(_markers){var markers=[];for(var i=0;i<_markers.length;i+=1){var _marker=_markers[i];var markerData={time:_marker.tm,duration:_marker.dr};try{markerData.payload=JSON.parse(_markers[i].cm);}catch(_){try{markerData.payload=parsePayloadLines(_markers[i].cm);}catch(__){markerData.payload={name:_markers[i].cm};}}markers.push(markerData);}return markers;};}();var ProjectInterface=function(){function registerComposition(comp){this.compositions.push(comp);}return function(){function _thisProjectFunction(name){var i=0;var len=this.compositions.length;while(i<len){if(this.compositions[i].data&&this.compositions[i].data.nm===name){if(this.compositions[i].prepareFrame&&this.compositions[i].data.xt){this.compositions[i].prepareFrame(this.currentFrame);}return this.compositions[i].compInterface;}i+=1;}return null;}_thisProjectFunction.compositions=[];_thisProjectFunction.currentFrame=0;_thisProjectFunction.registerComposition=registerComposition;return _thisProjectFunction;};}();var renderers={};var registerRenderer=function registerRenderer(key,value){renderers[key]=value;};function getRenderer(key){return renderers[key];}function getRegisteredRenderer(){// Returns canvas by default for compatibility
		if(renderers.canvas){return 'canvas';}// Returns any renderer that is registered
		for(var key in renderers){if(renderers[key]){return key;}}return '';}function _typeof$4(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$4=function _typeof(obj){return typeof obj;};}else {_typeof$4=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$4(obj);}var AnimationItem=function AnimationItem(){this._cbs=[];this.name='';this.path='';this.isLoaded=false;this.currentFrame=0;this.currentRawFrame=0;this.firstFrame=0;this.totalFrames=0;this.frameRate=0;this.frameMult=0;this.playSpeed=1;this.playDirection=1;this.playCount=0;this.animationData={};this.assets=[];this.isPaused=true;this.autoplay=false;this.loop=true;this.renderer=null;this.animationID=createElementID();this.assetsPath='';this.timeCompleted=0;this.segmentPos=0;this.isSubframeEnabled=getSubframeEnabled();this.segments=[];this._idle=true;this._completedLoop=false;this.projectInterface=ProjectInterface();this.imagePreloader=new ImagePreloader();this.audioController=audioControllerFactory();this.markers=[];this.configAnimation=this.configAnimation.bind(this);this.onSetupError=this.onSetupError.bind(this);this.onSegmentComplete=this.onSegmentComplete.bind(this);this.drawnFrameEvent=new BMEnterFrameEvent('drawnFrame',0,0,0);this.expressionsPlugin=getExpressionsPlugin();};extendPrototype([BaseEvent],AnimationItem);AnimationItem.prototype.setParams=function(params){if(params.wrapper||params.container){this.wrapper=params.wrapper||params.container;}var animType='svg';if(params.animType){animType=params.animType;}else if(params.renderer){animType=params.renderer;}var RendererClass=getRenderer(animType);this.renderer=new RendererClass(this,params.rendererSettings);this.imagePreloader.setCacheType(animType,this.renderer.globalData.defs);this.renderer.setProjectInterface(this.projectInterface);this.animType=animType;if(params.loop===''||params.loop===null||params.loop===undefined||params.loop===true){this.loop=true;}else if(params.loop===false){this.loop=false;}else {this.loop=parseInt(params.loop,10);}this.autoplay='autoplay'in params?params.autoplay:true;this.name=params.name?params.name:'';this.autoloadSegments=Object.prototype.hasOwnProperty.call(params,'autoloadSegments')?params.autoloadSegments:true;this.assetsPath=params.assetsPath;this.initialSegment=params.initialSegment;if(params.audioFactory){this.audioController.setAudioFactory(params.audioFactory);}if(params.animationData){this.setupAnimation(params.animationData);}else if(params.path){if(params.path.lastIndexOf('\\')!==-1){this.path=params.path.substr(0,params.path.lastIndexOf('\\')+1);}else {this.path=params.path.substr(0,params.path.lastIndexOf('/')+1);}this.fileName=params.path.substr(params.path.lastIndexOf('/')+1);this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf('.json'));dataManager.loadAnimation(params.path,this.configAnimation,this.onSetupError);}};AnimationItem.prototype.onSetupError=function(){this.trigger('data_failed');};AnimationItem.prototype.setupAnimation=function(data){dataManager.completeAnimation(data,this.configAnimation);};AnimationItem.prototype.setData=function(wrapper,animationData){if(animationData){if(_typeof$4(animationData)!=='object'){animationData=JSON.parse(animationData);}}var params={wrapper:wrapper,animationData:animationData};var wrapperAttributes=wrapper.attributes;params.path=wrapperAttributes.getNamedItem('data-animation-path')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-animation-path').value:wrapperAttributes.getNamedItem('data-bm-path')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-path').value:wrapperAttributes.getNamedItem('bm-path')?wrapperAttributes.getNamedItem('bm-path').value:'';params.animType=wrapperAttributes.getNamedItem('data-anim-type')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-type').value:wrapperAttributes.getNamedItem('data-bm-type')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-type').value:wrapperAttributes.getNamedItem('bm-type')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('bm-type').value:wrapperAttributes.getNamedItem('data-bm-renderer')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-renderer').value:wrapperAttributes.getNamedItem('bm-renderer')?wrapperAttributes.getNamedItem('bm-renderer').value:getRegisteredRenderer()||'canvas';var loop=wrapperAttributes.getNamedItem('data-anim-loop')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-loop').value:wrapperAttributes.getNamedItem('data-bm-loop')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-loop').value:wrapperAttributes.getNamedItem('bm-loop')?wrapperAttributes.getNamedItem('bm-loop').value:'';if(loop==='false'){params.loop=false;}else if(loop==='true'){params.loop=true;}else if(loop!==''){params.loop=parseInt(loop,10);}var autoplay=wrapperAttributes.getNamedItem('data-anim-autoplay')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-autoplay').value:wrapperAttributes.getNamedItem('data-bm-autoplay')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-autoplay').value:wrapperAttributes.getNamedItem('bm-autoplay')?wrapperAttributes.getNamedItem('bm-autoplay').value:true;params.autoplay=autoplay!=='false';params.name=wrapperAttributes.getNamedItem('data-name')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-name').value:wrapperAttributes.getNamedItem('data-bm-name')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-name').value:wrapperAttributes.getNamedItem('bm-name')?wrapperAttributes.getNamedItem('bm-name').value:'';var prerender=wrapperAttributes.getNamedItem('data-anim-prerender')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-anim-prerender').value:wrapperAttributes.getNamedItem('data-bm-prerender')// eslint-disable-line no-nested-ternary
		?wrapperAttributes.getNamedItem('data-bm-prerender').value:wrapperAttributes.getNamedItem('bm-prerender')?wrapperAttributes.getNamedItem('bm-prerender').value:'';if(prerender==='false'){params.prerender=false;}if(!params.path){this.trigger('destroy');}else {this.setParams(params);}};AnimationItem.prototype.includeLayers=function(data){if(data.op>this.animationData.op){this.animationData.op=data.op;this.totalFrames=Math.floor(data.op-this.animationData.ip);}var layers=this.animationData.layers;var i;var len=layers.length;var newLayers=data.layers;var j;var jLen=newLayers.length;for(j=0;j<jLen;j+=1){i=0;while(i<len){if(layers[i].id===newLayers[j].id){layers[i]=newLayers[j];break;}i+=1;}}if(data.chars||data.fonts){this.renderer.globalData.fontManager.addChars(data.chars);this.renderer.globalData.fontManager.addFonts(data.fonts,this.renderer.globalData.defs);}if(data.assets){len=data.assets.length;for(i=0;i<len;i+=1){this.animationData.assets.push(data.assets[i]);}}this.animationData.__complete=false;dataManager.completeAnimation(this.animationData,this.onSegmentComplete);};AnimationItem.prototype.onSegmentComplete=function(data){this.animationData=data;var expressionsPlugin=getExpressionsPlugin();if(expressionsPlugin){expressionsPlugin.initExpressions(this);}this.loadNextSegment();};AnimationItem.prototype.loadNextSegment=function(){var segments=this.animationData.segments;if(!segments||segments.length===0||!this.autoloadSegments){this.trigger('data_ready');this.timeCompleted=this.totalFrames;return;}var segment=segments.shift();this.timeCompleted=segment.time*this.frameRate;var segmentPath=this.path+this.fileName+'_'+this.segmentPos+'.json';this.segmentPos+=1;dataManager.loadData(segmentPath,this.includeLayers.bind(this),function(){this.trigger('data_failed');}.bind(this));};AnimationItem.prototype.loadSegments=function(){var segments=this.animationData.segments;if(!segments){this.timeCompleted=this.totalFrames;}this.loadNextSegment();};AnimationItem.prototype.imagesLoaded=function(){this.trigger('loaded_images');this.checkLoaded();};AnimationItem.prototype.preloadImages=function(){this.imagePreloader.setAssetsPath(this.assetsPath);this.imagePreloader.setPath(this.path);this.imagePreloader.loadAssets(this.animationData.assets,this.imagesLoaded.bind(this));};AnimationItem.prototype.configAnimation=function(animData){if(!this.renderer){return;}try{this.animationData=animData;if(this.initialSegment){this.totalFrames=Math.floor(this.initialSegment[1]-this.initialSegment[0]);this.firstFrame=Math.round(this.initialSegment[0]);}else {this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip);this.firstFrame=Math.round(this.animationData.ip);}this.renderer.configAnimation(animData);if(!animData.assets){animData.assets=[];}this.assets=this.animationData.assets;this.frameRate=this.animationData.fr;this.frameMult=this.animationData.fr/1000;this.renderer.searchExtraCompositions(animData.assets);this.markers=markerParser(animData.markers||[]);this.trigger('config_ready');this.preloadImages();this.loadSegments();this.updaFrameModifier();this.waitForFontsLoaded();if(this.isPaused){this.audioController.pause();}}catch(error){this.triggerConfigError(error);}};AnimationItem.prototype.waitForFontsLoaded=function(){if(!this.renderer){return;}if(this.renderer.globalData.fontManager.isLoaded){this.checkLoaded();}else {setTimeout(this.waitForFontsLoaded.bind(this),20);}};AnimationItem.prototype.checkLoaded=function(){if(!this.isLoaded&&this.renderer.globalData.fontManager.isLoaded&&(this.imagePreloader.loadedImages()||this.renderer.rendererType!=='canvas')&&this.imagePreloader.loadedFootages()){this.isLoaded=true;var expressionsPlugin=getExpressionsPlugin();if(expressionsPlugin){expressionsPlugin.initExpressions(this);}this.renderer.initItems();setTimeout(function(){this.trigger('DOMLoaded');}.bind(this),0);this.gotoFrame();if(this.autoplay){this.play();}}};AnimationItem.prototype.resize=function(width,height){// Adding this validation for backwards compatibility in case an event object was being passed down
		var _width=typeof width==='number'?width:undefined;var _height=typeof height==='number'?height:undefined;this.renderer.updateContainerSize(_width,_height);};AnimationItem.prototype.setSubframe=function(flag){this.isSubframeEnabled=!!flag;};AnimationItem.prototype.gotoFrame=function(){this.currentFrame=this.isSubframeEnabled?this.currentRawFrame:~~this.currentRawFrame;// eslint-disable-line no-bitwise
		if(this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted){this.currentFrame=this.timeCompleted;}this.trigger('enterFrame');this.renderFrame();this.trigger('drawnFrame');};AnimationItem.prototype.renderFrame=function(){if(this.isLoaded===false||!this.renderer){return;}try{if(this.expressionsPlugin){this.expressionsPlugin.resetFrame();}this.renderer.renderFrame(this.currentFrame+this.firstFrame);}catch(error){this.triggerRenderFrameError(error);}};AnimationItem.prototype.play=function(name){if(name&&this.name!==name){return;}if(this.isPaused===true){this.isPaused=false;this.trigger('_play');this.audioController.resume();if(this._idle){this._idle=false;this.trigger('_active');}}};AnimationItem.prototype.pause=function(name){if(name&&this.name!==name){return;}if(this.isPaused===false){this.isPaused=true;this.trigger('_pause');this._idle=true;this.trigger('_idle');this.audioController.pause();}};AnimationItem.prototype.togglePause=function(name){if(name&&this.name!==name){return;}if(this.isPaused===true){this.play();}else {this.pause();}};AnimationItem.prototype.stop=function(name){if(name&&this.name!==name){return;}this.pause();this.playCount=0;this._completedLoop=false;this.setCurrentRawFrameValue(0);};AnimationItem.prototype.getMarkerData=function(markerName){var marker;for(var i=0;i<this.markers.length;i+=1){marker=this.markers[i];if(marker.payload&&marker.payload.name===markerName){return marker;}}return null;};AnimationItem.prototype.goToAndStop=function(value,isFrame,name){if(name&&this.name!==name){return;}var numValue=Number(value);if(isNaN(numValue)){var marker=this.getMarkerData(value);if(marker){this.goToAndStop(marker.time,true);}}else if(isFrame){this.setCurrentRawFrameValue(value);}else {this.setCurrentRawFrameValue(value*this.frameModifier);}this.pause();};AnimationItem.prototype.goToAndPlay=function(value,isFrame,name){if(name&&this.name!==name){return;}var numValue=Number(value);if(isNaN(numValue)){var marker=this.getMarkerData(value);if(marker){if(!marker.duration){this.goToAndStop(marker.time,true);}else {this.playSegments([marker.time,marker.time+marker.duration],true);}}}else {this.goToAndStop(numValue,isFrame,name);}this.play();};AnimationItem.prototype.advanceTime=function(value){if(this.isPaused===true||this.isLoaded===false){return;}var nextValue=this.currentRawFrame+value*this.frameModifier;var _isComplete=false;// Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
		// If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
		if(nextValue>=this.totalFrames-1&&this.frameModifier>0){if(!this.loop||this.playCount===this.loop){if(!this.checkSegments(nextValue>this.totalFrames?nextValue%this.totalFrames:0)){_isComplete=true;nextValue=this.totalFrames-1;}}else if(nextValue>=this.totalFrames){this.playCount+=1;if(!this.checkSegments(nextValue%this.totalFrames)){this.setCurrentRawFrameValue(nextValue%this.totalFrames);this._completedLoop=true;this.trigger('loopComplete');}}else {this.setCurrentRawFrameValue(nextValue);}}else if(nextValue<0){if(!this.checkSegments(nextValue%this.totalFrames)){if(this.loop&&!(this.playCount--<=0&&this.loop!==true)){// eslint-disable-line no-plusplus
		this.setCurrentRawFrameValue(this.totalFrames+nextValue%this.totalFrames);if(!this._completedLoop){this._completedLoop=true;}else {this.trigger('loopComplete');}}else {_isComplete=true;nextValue=0;}}}else {this.setCurrentRawFrameValue(nextValue);}if(_isComplete){this.setCurrentRawFrameValue(nextValue);this.pause();this.trigger('complete');}};AnimationItem.prototype.adjustSegment=function(arr,offset){this.playCount=0;if(arr[1]<arr[0]){if(this.frameModifier>0){if(this.playSpeed<0){this.setSpeed(-this.playSpeed);}else {this.setDirection(-1);}}this.totalFrames=arr[0]-arr[1];this.timeCompleted=this.totalFrames;this.firstFrame=arr[1];this.setCurrentRawFrameValue(this.totalFrames-0.001-offset);}else if(arr[1]>arr[0]){if(this.frameModifier<0){if(this.playSpeed<0){this.setSpeed(-this.playSpeed);}else {this.setDirection(1);}}this.totalFrames=arr[1]-arr[0];this.timeCompleted=this.totalFrames;this.firstFrame=arr[0];this.setCurrentRawFrameValue(0.001+offset);}this.trigger('segmentStart');};AnimationItem.prototype.setSegment=function(init,end){var pendingFrame=-1;if(this.isPaused){if(this.currentRawFrame+this.firstFrame<init){pendingFrame=init;}else if(this.currentRawFrame+this.firstFrame>end){pendingFrame=end-init;}}this.firstFrame=init;this.totalFrames=end-init;this.timeCompleted=this.totalFrames;if(pendingFrame!==-1){this.goToAndStop(pendingFrame,true);}};AnimationItem.prototype.playSegments=function(arr,forceFlag){if(forceFlag){this.segments.length=0;}if(_typeof$4(arr[0])==='object'){var i;var len=arr.length;for(i=0;i<len;i+=1){this.segments.push(arr[i]);}}else {this.segments.push(arr);}if(this.segments.length&&forceFlag){this.adjustSegment(this.segments.shift(),0);}if(this.isPaused){this.play();}};AnimationItem.prototype.resetSegments=function(forceFlag){this.segments.length=0;this.segments.push([this.animationData.ip,this.animationData.op]);if(forceFlag){this.checkSegments(0);}};AnimationItem.prototype.checkSegments=function(offset){if(this.segments.length){this.adjustSegment(this.segments.shift(),offset);return true;}return false;};AnimationItem.prototype.destroy=function(name){if(name&&this.name!==name||!this.renderer){return;}this.renderer.destroy();this.imagePreloader.destroy();this.trigger('destroy');this._cbs=null;this.onEnterFrame=null;this.onLoopComplete=null;this.onComplete=null;this.onSegmentStart=null;this.onDestroy=null;this.renderer=null;this.expressionsPlugin=null;this.imagePreloader=null;this.projectInterface=null;};AnimationItem.prototype.setCurrentRawFrameValue=function(value){this.currentRawFrame=value;this.gotoFrame();};AnimationItem.prototype.setSpeed=function(val){this.playSpeed=val;this.updaFrameModifier();};AnimationItem.prototype.setDirection=function(val){this.playDirection=val<0?-1:1;this.updaFrameModifier();};AnimationItem.prototype.setLoop=function(isLooping){this.loop=isLooping;};AnimationItem.prototype.setVolume=function(val,name){if(name&&this.name!==name){return;}this.audioController.setVolume(val);};AnimationItem.prototype.getVolume=function(){return this.audioController.getVolume();};AnimationItem.prototype.mute=function(name){if(name&&this.name!==name){return;}this.audioController.mute();};AnimationItem.prototype.unmute=function(name){if(name&&this.name!==name){return;}this.audioController.unmute();};AnimationItem.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection;this.audioController.setRate(this.playSpeed*this.playDirection);};AnimationItem.prototype.getPath=function(){return this.path;};AnimationItem.prototype.getAssetsPath=function(assetData){var path='';if(assetData.e){path=assetData.p;}else if(this.assetsPath){var imagePath=assetData.p;if(imagePath.indexOf('images/')!==-1){imagePath=imagePath.split('/')[1];}path=this.assetsPath+imagePath;}else {path=this.path;path+=assetData.u?assetData.u:'';path+=assetData.p;}return path;};AnimationItem.prototype.getAssetData=function(id){var i=0;var len=this.assets.length;while(i<len){if(id===this.assets[i].id){return this.assets[i];}i+=1;}return null;};AnimationItem.prototype.hide=function(){this.renderer.hide();};AnimationItem.prototype.show=function(){this.renderer.show();};AnimationItem.prototype.getDuration=function(isFrame){return isFrame?this.totalFrames:this.totalFrames/this.frameRate;};AnimationItem.prototype.updateDocumentData=function(path,documentData,index){try{var element=this.renderer.getElementByPath(path);element.updateDocumentData(documentData,index);}catch(error){// TODO: decide how to handle catch case
		}};AnimationItem.prototype.trigger=function(name){if(this._cbs&&this._cbs[name]){switch(name){case'enterFrame':this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));break;case'drawnFrame':this.drawnFrameEvent.currentTime=this.currentFrame;this.drawnFrameEvent.totalTime=this.totalFrames;this.drawnFrameEvent.direction=this.frameModifier;this.triggerEvent(name,this.drawnFrameEvent);break;case'loopComplete':this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));break;case'complete':this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));break;case'segmentStart':this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));break;case'destroy':this.triggerEvent(name,new BMDestroyEvent(name,this));break;default:this.triggerEvent(name);}}if(name==='enterFrame'&&this.onEnterFrame){this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));}if(name==='loopComplete'&&this.onLoopComplete){this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));}if(name==='complete'&&this.onComplete){this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));}if(name==='segmentStart'&&this.onSegmentStart){this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));}if(name==='destroy'&&this.onDestroy){this.onDestroy.call(this,new BMDestroyEvent(name,this));}};AnimationItem.prototype.triggerRenderFrameError=function(nativeError){var error=new BMRenderFrameErrorEvent(nativeError,this.currentFrame);this.triggerEvent('error',error);if(this.onError){this.onError.call(this,error);}};AnimationItem.prototype.triggerConfigError=function(nativeError){var error=new BMConfigErrorEvent(nativeError,this.currentFrame);this.triggerEvent('error',error);if(this.onError){this.onError.call(this,error);}};var animationManager=function(){var moduleOb={};var registeredAnimations=[];var initTime=0;var len=0;var playingAnimationsNum=0;var _stopped=true;var _isFrozen=false;function removeElement(ev){var i=0;var animItem=ev.target;while(i<len){if(registeredAnimations[i].animation===animItem){registeredAnimations.splice(i,1);i-=1;len-=1;if(!animItem.isPaused){subtractPlayingCount();}}i+=1;}}function registerAnimation(element,animationData){if(!element){return null;}var i=0;while(i<len){if(registeredAnimations[i].elem===element&&registeredAnimations[i].elem!==null){return registeredAnimations[i].animation;}i+=1;}var animItem=new AnimationItem();setupAnimation(animItem,element);animItem.setData(element,animationData);return animItem;}function getRegisteredAnimations(){var i;var lenAnims=registeredAnimations.length;var animations=[];for(i=0;i<lenAnims;i+=1){animations.push(registeredAnimations[i].animation);}return animations;}function addPlayingCount(){playingAnimationsNum+=1;activate();}function subtractPlayingCount(){playingAnimationsNum-=1;}function setupAnimation(animItem,element){animItem.addEventListener('destroy',removeElement);animItem.addEventListener('_active',addPlayingCount);animItem.addEventListener('_idle',subtractPlayingCount);registeredAnimations.push({elem:element,animation:animItem});len+=1;}function loadAnimation(params){var animItem=new AnimationItem();setupAnimation(animItem,null);animItem.setParams(params);return animItem;}function setSpeed(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setSpeed(val,animation);}}function setDirection(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setDirection(val,animation);}}function play(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.play(animation);}}function resume(nowTime){var elapsedTime=nowTime-initTime;var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.advanceTime(elapsedTime);}initTime=nowTime;if(playingAnimationsNum&&!_isFrozen){window.requestAnimationFrame(resume);}else {_stopped=true;}}function first(nowTime){initTime=nowTime;window.requestAnimationFrame(resume);}function pause(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.pause(animation);}}function goToAndStop(value,isFrame,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);}}function stop(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.stop(animation);}}function togglePause(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.togglePause(animation);}}function destroy(animation){var i;for(i=len-1;i>=0;i-=1){registeredAnimations[i].animation.destroy(animation);}}function searchAnimations(animationData,standalone,renderer){var animElements=[].concat([].slice.call(document.getElementsByClassName('lottie')),[].slice.call(document.getElementsByClassName('bodymovin')));var i;var lenAnims=animElements.length;for(i=0;i<lenAnims;i+=1){if(renderer){animElements[i].setAttribute('data-bm-type',renderer);}registerAnimation(animElements[i],animationData);}if(standalone&&lenAnims===0){if(!renderer){renderer='svg';}var body=document.getElementsByTagName('body')[0];body.innerText='';var div=createTag('div');div.style.width='100%';div.style.height='100%';div.setAttribute('data-bm-type',renderer);body.appendChild(div);registerAnimation(div,animationData);}}function resize(){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.resize();}}function activate(){if(!_isFrozen&&playingAnimationsNum){if(_stopped){window.requestAnimationFrame(first);_stopped=false;}}}function freeze(){_isFrozen=true;}function unfreeze(){_isFrozen=false;activate();}function setVolume(val,animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.setVolume(val,animation);}}function mute(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.mute(animation);}}function unmute(animation){var i;for(i=0;i<len;i+=1){registeredAnimations[i].animation.unmute(animation);}}moduleOb.registerAnimation=registerAnimation;moduleOb.loadAnimation=loadAnimation;moduleOb.setSpeed=setSpeed;moduleOb.setDirection=setDirection;moduleOb.play=play;moduleOb.pause=pause;moduleOb.stop=stop;moduleOb.togglePause=togglePause;moduleOb.searchAnimations=searchAnimations;moduleOb.resize=resize;// moduleOb.start = start;
		moduleOb.goToAndStop=goToAndStop;moduleOb.destroy=destroy;moduleOb.freeze=freeze;moduleOb.unfreeze=unfreeze;moduleOb.setVolume=setVolume;moduleOb.mute=mute;moduleOb.unmute=unmute;moduleOb.getRegisteredAnimations=getRegisteredAnimations;return moduleOb;}();/* eslint-disable */var BezierFactory=function(){/**
		       * BezierEasing - use bezier curve for transition easing function
		       * by Gaëtan Renaudeau 2014 - 2015 – MIT License
		       *
		       * Credits: is based on Firefox's nsSMILKeySpline.cpp
		       * Usage:
		       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
		       * spline.get(x) => returns the easing value | x must be in [0, 1] range
		       *
		       */var ob={};ob.getBezierEasing=getBezierEasing;var beziers={};function getBezierEasing(a,b,c,d,nm){var str=nm||('bez_'+a+'_'+b+'_'+c+'_'+d).replace(/\./g,'p');if(beziers[str]){return beziers[str];}var bezEasing=new BezierEasing([a,b,c,d]);beziers[str]=bezEasing;return bezEasing;}// These values are established by empiricism with tests (tradeoff: performance VS precision)
		var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var float32ArraySupported=typeof Float32Array==='function';function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}function C(aA1){return 3.0*aA1;}// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
		function calcBezier(aT,aA1,aA2){return ((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
		function getSlope(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}function binarySubdivide(aX,aA,aB,mX1,mX2){var currentX,currentT,i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else {aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0)return aGuessT;var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}/**
		       * points is an array of [ mX1, mY1, mX2, mY2 ]
		       */function BezierEasing(points){this._p=points;this._mSampleValues=float32ArraySupported?new Float32Array(kSplineTableSize):new Array(kSplineTableSize);this._precomputed=false;this.get=this.get.bind(this);}BezierEasing.prototype={get:function get(x){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];if(!this._precomputed)this._precompute();if(mX1===mY1&&mX2===mY2)return x;// linear
		// Because JavaScript number are imprecise, we should guarantee the extremes are right.
		if(x===0)return 0;if(x===1)return 1;return calcBezier(this._getTForX(x),mY1,mY2);},// Private part
		_precompute:function _precompute(){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];this._precomputed=true;if(mX1!==mY1||mX2!==mY2){this._calcSampleValues();}},_calcSampleValues:function _calcSampleValues(){var mX1=this._p[0],mX2=this._p[2];for(var i=0;i<kSplineTableSize;++i){this._mSampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}},/**
		           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
		           */_getTForX:function _getTForX(aX){var mX1=this._p[0],mX2=this._p[2],mSampleValues=this._mSampleValues;var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&mSampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;// Interpolate to provide an initial guess for t
		var dist=(aX-mSampleValues[currentSample])/(mSampleValues[currentSample+1]-mSampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}if(initialSlope===0.0){return guessForT;}return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};return ob;}();var pooling=function(){function _double(arr){return arr.concat(createSizedArray(arr.length));}return {"double":_double};}();var poolFactory=function(){return function(initialLength,_create,_release){var _length=0;var _maxLength=initialLength;var pool=createSizedArray(_maxLength);var ob={newElement:newElement,release:release};function newElement(){var element;if(_length){_length-=1;element=pool[_length];}else {element=_create();}return element;}function release(element){if(_length===_maxLength){pool=pooling["double"](pool);_maxLength*=2;}if(_release){_release(element);}pool[_length]=element;_length+=1;}return ob;};}();var bezierLengthPool=function(){function create(){return {addedLength:0,percents:createTypedArray('float32',getDefaultCurveSegments()),lengths:createTypedArray('float32',getDefaultCurveSegments())};}return poolFactory(8,create);}();var segmentsLengthPool=function(){function create(){return {lengths:[],totalLength:0};}function release(element){var i;var len=element.lengths.length;for(i=0;i<len;i+=1){bezierLengthPool.release(element.lengths[i]);}element.lengths.length=0;}return poolFactory(8,create,release);}();function bezFunction(){var math=Math;function pointOnLine2D(x1,y1,x2,y2,x3,y3){var det1=x1*y2+y1*x3+x2*y3-x3*y2-y3*x1-x2*y1;return det1>-0.001&&det1<0.001;}function pointOnLine3D(x1,y1,z1,x2,y2,z2,x3,y3,z3){if(z1===0&&z2===0&&z3===0){return pointOnLine2D(x1,y1,x2,y2,x3,y3);}var dist1=math.sqrt(math.pow(x2-x1,2)+math.pow(y2-y1,2)+math.pow(z2-z1,2));var dist2=math.sqrt(math.pow(x3-x1,2)+math.pow(y3-y1,2)+math.pow(z3-z1,2));var dist3=math.sqrt(math.pow(x3-x2,2)+math.pow(y3-y2,2)+math.pow(z3-z2,2));var diffDist;if(dist1>dist2){if(dist1>dist3){diffDist=dist1-dist2-dist3;}else {diffDist=dist3-dist2-dist1;}}else if(dist3>dist2){diffDist=dist3-dist2-dist1;}else {diffDist=dist2-dist1-dist3;}return diffDist>-0.0001&&diffDist<0.0001;}var getBezierLength=function(){return function(pt1,pt2,pt3,pt4){var curveSegments=getDefaultCurveSegments();var k;var i;var len;var ptCoord;var perc;var addedLength=0;var ptDistance;var point=[];var lastPoint=[];var lengthData=bezierLengthPool.newElement();len=pt3.length;for(k=0;k<curveSegments;k+=1){perc=k/(curveSegments-1);ptDistance=0;for(i=0;i<len;i+=1){ptCoord=bmPow(1-perc,3)*pt1[i]+3*bmPow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bmPow(perc,2)*pt4[i]+bmPow(perc,3)*pt2[i];point[i]=ptCoord;if(lastPoint[i]!==null){ptDistance+=bmPow(point[i]-lastPoint[i],2);}lastPoint[i]=point[i];}if(ptDistance){ptDistance=bmSqrt(ptDistance);addedLength+=ptDistance;}lengthData.percents[k]=perc;lengthData.lengths[k]=addedLength;}lengthData.addedLength=addedLength;return lengthData;};}();function getSegmentsLength(shapeData){var segmentsLength=segmentsLengthPool.newElement();var closed=shapeData.c;var pathV=shapeData.v;var pathO=shapeData.o;var pathI=shapeData.i;var i;var len=shapeData._length;var lengths=segmentsLength.lengths;var totalLength=0;for(i=0;i<len-1;i+=1){lengths[i]=getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);totalLength+=lengths[i].addedLength;}if(closed&&len){lengths[i]=getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);totalLength+=lengths[i].addedLength;}segmentsLength.totalLength=totalLength;return segmentsLength;}function BezierData(length){this.segmentLength=0;this.points=new Array(length);}function PointData(partial,point){this.partialLength=partial;this.point=point;}var buildBezierData=function(){var storedData={};return function(pt1,pt2,pt3,pt4){var bezierName=(pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\./g,'p');if(!storedData[bezierName]){var curveSegments=getDefaultCurveSegments();var k;var i;var len;var ptCoord;var perc;var addedLength=0;var ptDistance;var point;var lastPoint=null;if(pt1.length===2&&(pt1[0]!==pt2[0]||pt1[1]!==pt2[1])&&pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1])&&pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){curveSegments=2;}var bezierData=new BezierData(curveSegments);len=pt3.length;for(k=0;k<curveSegments;k+=1){point=createSizedArray(len);perc=k/(curveSegments-1);ptDistance=0;for(i=0;i<len;i+=1){ptCoord=bmPow(1-perc,3)*pt1[i]+3*bmPow(1-perc,2)*perc*(pt1[i]+pt3[i])+3*(1-perc)*bmPow(perc,2)*(pt2[i]+pt4[i])+bmPow(perc,3)*pt2[i];point[i]=ptCoord;if(lastPoint!==null){ptDistance+=bmPow(point[i]-lastPoint[i],2);}}ptDistance=bmSqrt(ptDistance);addedLength+=ptDistance;bezierData.points[k]=new PointData(ptDistance,point);lastPoint=point;}bezierData.segmentLength=addedLength;storedData[bezierName]=bezierData;}return storedData[bezierName];};}();function getDistancePerc(perc,bezierData){var percents=bezierData.percents;var lengths=bezierData.lengths;var len=percents.length;var initPos=bmFloor((len-1)*perc);var lengthPos=perc*bezierData.addedLength;var lPerc=0;if(initPos===len-1||initPos===0||lengthPos===lengths[initPos]){return percents[initPos];}var dir=lengths[initPos]>lengthPos?-1:1;var flag=true;while(flag){if(lengths[initPos]<=lengthPos&&lengths[initPos+1]>lengthPos){lPerc=(lengthPos-lengths[initPos])/(lengths[initPos+1]-lengths[initPos]);flag=false;}else {initPos+=dir;}if(initPos<0||initPos>=len-1){// FIX for TypedArrays that don't store floating point values with enough accuracy
		if(initPos===len-1){return percents[initPos];}flag=false;}}return percents[initPos]+(percents[initPos+1]-percents[initPos])*lPerc;}function getPointInSegment(pt1,pt2,pt3,pt4,percent,bezierData){var t1=getDistancePerc(percent,bezierData);var u1=1-t1;var ptX=math.round((u1*u1*u1*pt1[0]+(t1*u1*u1+u1*t1*u1+u1*u1*t1)*pt3[0]+(t1*t1*u1+u1*t1*t1+t1*u1*t1)*pt4[0]+t1*t1*t1*pt2[0])*1000)/1000;var ptY=math.round((u1*u1*u1*pt1[1]+(t1*u1*u1+u1*t1*u1+u1*u1*t1)*pt3[1]+(t1*t1*u1+u1*t1*t1+t1*u1*t1)*pt4[1]+t1*t1*t1*pt2[1])*1000)/1000;return [ptX,ptY];}var bezierSegmentPoints=createTypedArray('float32',8);function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc,bezierData){if(startPerc<0){startPerc=0;}else if(startPerc>1){startPerc=1;}var t0=getDistancePerc(startPerc,bezierData);endPerc=endPerc>1?1:endPerc;var t1=getDistancePerc(endPerc,bezierData);var i;var len=pt1.length;var u0=1-t0;var u1=1-t1;var u0u0u0=u0*u0*u0;var t0u0u0_3=t0*u0*u0*3;// eslint-disable-line camelcase
		var t0t0u0_3=t0*t0*u0*3;// eslint-disable-line camelcase
		var t0t0t0=t0*t0*t0;//
		var u0u0u1=u0*u0*u1;var t0u0u1_3=t0*u0*u1+u0*t0*u1+u0*u0*t1;// eslint-disable-line camelcase
		var t0t0u1_3=t0*t0*u1+u0*t0*t1+t0*u0*t1;// eslint-disable-line camelcase
		var t0t0t1=t0*t0*t1;//
		var u0u1u1=u0*u1*u1;var t0u1u1_3=t0*u1*u1+u0*t1*u1+u0*u1*t1;// eslint-disable-line camelcase
		var t0t1u1_3=t0*t1*u1+u0*t1*t1+t0*u1*t1;// eslint-disable-line camelcase
		var t0t1t1=t0*t1*t1;//
		var u1u1u1=u1*u1*u1;var t1u1u1_3=t1*u1*u1+u1*t1*u1+u1*u1*t1;// eslint-disable-line camelcase
		var t1t1u1_3=t1*t1*u1+u1*t1*t1+t1*u1*t1;// eslint-disable-line camelcase
		var t1t1t1=t1*t1*t1;for(i=0;i<len;i+=1){bezierSegmentPoints[i*4]=math.round((u0u0u0*pt1[i]+t0u0u0_3*pt3[i]+t0t0u0_3*pt4[i]+t0t0t0*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		bezierSegmentPoints[i*4+1]=math.round((u0u0u1*pt1[i]+t0u0u1_3*pt3[i]+t0t0u1_3*pt4[i]+t0t0t1*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		bezierSegmentPoints[i*4+2]=math.round((u0u1u1*pt1[i]+t0u1u1_3*pt3[i]+t0t1u1_3*pt4[i]+t0t1t1*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		bezierSegmentPoints[i*4+3]=math.round((u1u1u1*pt1[i]+t1u1u1_3*pt3[i]+t1t1u1_3*pt4[i]+t1t1t1*pt2[i])*1000)/1000;// eslint-disable-line camelcase
		}return bezierSegmentPoints;}return {getSegmentsLength:getSegmentsLength,getNewSegment:getNewSegment,getPointInSegment:getPointInSegment,buildBezierData:buildBezierData,pointOnLine2D:pointOnLine2D,pointOnLine3D:pointOnLine3D};}var bez=bezFunction();var initFrame=initialDefaultFrame;var mathAbs=Math.abs;function interpolateValue(frameNum,caching){var offsetTime=this.offsetTime;var newValue;if(this.propType==='multidimensional'){newValue=createTypedArray('float32',this.pv.length);}var iterationIndex=caching.lastIndex;var i=iterationIndex;var len=this.keyframes.length-1;var flag=true;var keyData;var nextKeyData;var keyframeMetadata;while(flag){keyData=this.keyframes[i];nextKeyData=this.keyframes[i+1];if(i===len-1&&frameNum>=nextKeyData.t-offsetTime){if(keyData.h){keyData=nextKeyData;}iterationIndex=0;break;}if(nextKeyData.t-offsetTime>frameNum){iterationIndex=i;break;}if(i<len-1){i+=1;}else {iterationIndex=0;flag=false;}}keyframeMetadata=this.keyframesMetadata[i]||{};var k;var kLen;var perc;var jLen;var j;var fnc;var nextKeyTime=nextKeyData.t-offsetTime;var keyTime=keyData.t-offsetTime;var endValue;if(keyData.to){if(!keyframeMetadata.bezierData){keyframeMetadata.bezierData=bez.buildBezierData(keyData.s,nextKeyData.s||keyData.e,keyData.to,keyData.ti);}var bezierData=keyframeMetadata.bezierData;if(frameNum>=nextKeyTime||frameNum<keyTime){var ind=frameNum>=nextKeyTime?bezierData.points.length-1:0;kLen=bezierData.points[ind].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[ind].point[k];}// caching._lastKeyframeIndex = -1;
		}else {if(keyframeMetadata.__fnct){fnc=keyframeMetadata.__fnct;}else {fnc=BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;keyframeMetadata.__fnct=fnc;}perc=fnc((frameNum-keyTime)/(nextKeyTime-keyTime));var distanceInLine=bezierData.segmentLength*perc;var segmentPerc;var addedLength=caching.lastFrame<frameNum&&caching._lastKeyframeIndex===i?caching._lastAddedLength:0;j=caching.lastFrame<frameNum&&caching._lastKeyframeIndex===i?caching._lastPoint:0;flag=true;jLen=bezierData.points.length;while(flag){addedLength+=bezierData.points[j].partialLength;if(distanceInLine===0||perc===0||j===bezierData.points.length-1){kLen=bezierData.points[j].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[j].point[k];}break;}else if(distanceInLine>=addedLength&&distanceInLine<addedLength+bezierData.points[j+1].partialLength){segmentPerc=(distanceInLine-addedLength)/bezierData.points[j+1].partialLength;kLen=bezierData.points[j].point.length;for(k=0;k<kLen;k+=1){newValue[k]=bezierData.points[j].point[k]+(bezierData.points[j+1].point[k]-bezierData.points[j].point[k])*segmentPerc;}break;}if(j<jLen-1){j+=1;}else {flag=false;}}caching._lastPoint=j;caching._lastAddedLength=addedLength-bezierData.points[j].partialLength;caching._lastKeyframeIndex=i;}}else {var outX;var outY;var inX;var inY;var keyValue;len=keyData.s.length;endValue=nextKeyData.s||keyData.e;if(this.sh&&keyData.h!==1){if(frameNum>=nextKeyTime){newValue[0]=endValue[0];newValue[1]=endValue[1];newValue[2]=endValue[2];}else if(frameNum<=keyTime){newValue[0]=keyData.s[0];newValue[1]=keyData.s[1];newValue[2]=keyData.s[2];}else {var quatStart=createQuaternion(keyData.s);var quatEnd=createQuaternion(endValue);var time=(frameNum-keyTime)/(nextKeyTime-keyTime);quaternionToEuler(newValue,slerp(quatStart,quatEnd,time));}}else {for(i=0;i<len;i+=1){if(keyData.h!==1){if(frameNum>=nextKeyTime){perc=1;}else if(frameNum<keyTime){perc=0;}else {if(keyData.o.x.constructor===Array){if(!keyframeMetadata.__fnct){keyframeMetadata.__fnct=[];}if(!keyframeMetadata.__fnct[i]){outX=keyData.o.x[i]===undefined?keyData.o.x[0]:keyData.o.x[i];outY=keyData.o.y[i]===undefined?keyData.o.y[0]:keyData.o.y[i];inX=keyData.i.x[i]===undefined?keyData.i.x[0]:keyData.i.x[i];inY=keyData.i.y[i]===undefined?keyData.i.y[0]:keyData.i.y[i];fnc=BezierFactory.getBezierEasing(outX,outY,inX,inY).get;keyframeMetadata.__fnct[i]=fnc;}else {fnc=keyframeMetadata.__fnct[i];}}else if(!keyframeMetadata.__fnct){outX=keyData.o.x;outY=keyData.o.y;inX=keyData.i.x;inY=keyData.i.y;fnc=BezierFactory.getBezierEasing(outX,outY,inX,inY).get;keyData.keyframeMetadata=fnc;}else {fnc=keyframeMetadata.__fnct;}perc=fnc((frameNum-keyTime)/(nextKeyTime-keyTime));}}endValue=nextKeyData.s||keyData.e;keyValue=keyData.h===1?keyData.s[i]:keyData.s[i]+(endValue[i]-keyData.s[i])*perc;if(this.propType==='multidimensional'){newValue[i]=keyValue;}else {newValue=keyValue;}}}}caching.lastIndex=iterationIndex;return newValue;}// based on @Toji's https://github.com/toji/gl-matrix/
		function slerp(a,b,t){var out=[];var ax=a[0];var ay=a[1];var az=a[2];var aw=a[3];var bx=b[0];var by=b[1];var bz=b[2];var bw=b[3];var omega;var cosom;var sinom;var scale0;var scale1;cosom=ax*bx+ay*by+az*bz+aw*bw;if(cosom<0.0){cosom=-cosom;bx=-bx;by=-by;bz=-bz;bw=-bw;}if(1.0-cosom>0.000001){omega=Math.acos(cosom);sinom=Math.sin(omega);scale0=Math.sin((1.0-t)*omega)/sinom;scale1=Math.sin(t*omega)/sinom;}else {scale0=1.0-t;scale1=t;}out[0]=scale0*ax+scale1*bx;out[1]=scale0*ay+scale1*by;out[2]=scale0*az+scale1*bz;out[3]=scale0*aw+scale1*bw;return out;}function quaternionToEuler(out,quat){var qx=quat[0];var qy=quat[1];var qz=quat[2];var qw=quat[3];var heading=Math.atan2(2*qy*qw-2*qx*qz,1-2*qy*qy-2*qz*qz);var attitude=Math.asin(2*qx*qy+2*qz*qw);var bank=Math.atan2(2*qx*qw-2*qy*qz,1-2*qx*qx-2*qz*qz);out[0]=heading/degToRads;out[1]=attitude/degToRads;out[2]=bank/degToRads;}function createQuaternion(values){var heading=values[0]*degToRads;var attitude=values[1]*degToRads;var bank=values[2]*degToRads;var c1=Math.cos(heading/2);var c2=Math.cos(attitude/2);var c3=Math.cos(bank/2);var s1=Math.sin(heading/2);var s2=Math.sin(attitude/2);var s3=Math.sin(bank/2);var w=c1*c2*c3-s1*s2*s3;var x=s1*s2*c3+c1*c2*s3;var y=s1*c2*c3+c1*s2*s3;var z=c1*s2*c3-s1*c2*s3;return [x,y,z,w];}function getValueAtCurrentTime(){var frameNum=this.comp.renderedFrame-this.offsetTime;var initTime=this.keyframes[0].t-this.offsetTime;var endTime=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(frameNum===this._caching.lastFrame||this._caching.lastFrame!==initFrame&&(this._caching.lastFrame>=endTime&&frameNum>=endTime||this._caching.lastFrame<initTime&&frameNum<initTime))){if(this._caching.lastFrame>=frameNum){this._caching._lastKeyframeIndex=-1;this._caching.lastIndex=0;}var renderResult=this.interpolateValue(frameNum,this._caching);this.pv=renderResult;}this._caching.lastFrame=frameNum;return this.pv;}function setVValue(val){var multipliedValue;if(this.propType==='unidimensional'){multipliedValue=val*this.mult;if(mathAbs(this.v-multipliedValue)>0.00001){this.v=multipliedValue;this._mdf=true;}}else {var i=0;var len=this.v.length;while(i<len){multipliedValue=val[i]*this.mult;if(mathAbs(this.v[i]-multipliedValue)>0.00001){this.v[i]=multipliedValue;this._mdf=true;}i+=1;}}}function processEffectsSequence(){if(this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length){return;}if(this.lock){this.setVValue(this.pv);return;}this.lock=true;this._mdf=this._isFirstFrame;var i;var len=this.effectsSequence.length;var finalValue=this.kf?this.pv:this.data.k;for(i=0;i<len;i+=1){finalValue=this.effectsSequence[i](finalValue);}this.setVValue(finalValue);this._isFirstFrame=false;this.lock=false;this.frameId=this.elem.globalData.frameId;}function addEffect(effectFunction){this.effectsSequence.push(effectFunction);this.container.addDynamicProperty(this);}function ValueProperty(elem,data,mult,container){this.propType='unidimensional';this.mult=mult||1;this.data=data;this.v=mult?data.k*mult:data.k;this.pv=data.k;this._mdf=false;this.elem=elem;this.container=container;this.comp=elem.comp;this.k=false;this.kf=false;this.vel=0;this.effectsSequence=[];this._isFirstFrame=true;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.addEffect=addEffect;}function MultiDimensionalProperty(elem,data,mult,container){this.propType='multidimensional';this.mult=mult||1;this.data=data;this._mdf=false;this.elem=elem;this.container=container;this.comp=elem.comp;this.k=false;this.kf=false;this.frameId=-1;var i;var len=data.k.length;this.v=createTypedArray('float32',len);this.pv=createTypedArray('float32',len);this.vel=createTypedArray('float32',len);for(i=0;i<len;i+=1){this.v[i]=data.k[i]*this.mult;this.pv[i]=data.k[i];}this._isFirstFrame=true;this.effectsSequence=[];this.getValue=processEffectsSequence;this.setVValue=setVValue;this.addEffect=addEffect;}function KeyframedValueProperty(elem,data,mult,container){this.propType='unidimensional';this.keyframes=data.k;this.keyframesMetadata=[];this.offsetTime=elem.data.st;this.frameId=-1;this._caching={lastFrame:initFrame,lastIndex:0,value:0,_lastKeyframeIndex:-1};this.k=true;this.kf=true;this.data=data;this.mult=mult||1;this.elem=elem;this.container=container;this.comp=elem.comp;this.v=initFrame;this.pv=initFrame;this._isFirstFrame=true;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.interpolateValue=interpolateValue;this.effectsSequence=[getValueAtCurrentTime.bind(this)];this.addEffect=addEffect;}function KeyframedMultidimensionalProperty(elem,data,mult,container){this.propType='multidimensional';var i;var len=data.k.length;var s;var e;var to;var ti;for(i=0;i<len-1;i+=1){if(data.k[i].to&&data.k[i].s&&data.k[i+1]&&data.k[i+1].s){s=data.k[i].s;e=data.k[i+1].s;to=data.k[i].to;ti=data.k[i].ti;if(s.length===2&&!(s[0]===e[0]&&s[1]===e[1])&&bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0]+to[0],s[1]+to[1])&&bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0]+ti[0],e[1]+ti[1])||s.length===3&&!(s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])&&bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0]+to[0],s[1]+to[1],s[2]+to[2])&&bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0]+ti[0],e[1]+ti[1],e[2]+ti[2])){data.k[i].to=null;data.k[i].ti=null;}if(s[0]===e[0]&&s[1]===e[1]&&to[0]===0&&to[1]===0&&ti[0]===0&&ti[1]===0){if(s.length===2||s[2]===e[2]&&to[2]===0&&ti[2]===0){data.k[i].to=null;data.k[i].ti=null;}}}}this.effectsSequence=[getValueAtCurrentTime.bind(this)];this.data=data;this.keyframes=data.k;this.keyframesMetadata=[];this.offsetTime=elem.data.st;this.k=true;this.kf=true;this._isFirstFrame=true;this.mult=mult||1;this.elem=elem;this.container=container;this.comp=elem.comp;this.getValue=processEffectsSequence;this.setVValue=setVValue;this.interpolateValue=interpolateValue;this.frameId=-1;var arrLen=data.k[0].s.length;this.v=createTypedArray('float32',arrLen);this.pv=createTypedArray('float32',arrLen);for(i=0;i<arrLen;i+=1){this.v[i]=initFrame;this.pv[i]=initFrame;}this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32',arrLen)};this.addEffect=addEffect;}var PropertyFactory=function(){function getProp(elem,data,type,mult,container){if(data.sid){data=elem.globalData.slotManager.getProp(data);}var p;if(!data.k.length){p=new ValueProperty(elem,data,mult,container);}else if(typeof data.k[0]==='number'){p=new MultiDimensionalProperty(elem,data,mult,container);}else {switch(type){case 0:p=new KeyframedValueProperty(elem,data,mult,container);break;case 1:p=new KeyframedMultidimensionalProperty(elem,data,mult,container);break;}}if(p.effectsSequence.length){container.addDynamicProperty(p);}return p;}var ob={getProp:getProp};return ob;}();function DynamicPropertyContainer(){}DynamicPropertyContainer.prototype={addDynamicProperty:function addDynamicProperty(prop){if(this.dynamicProperties.indexOf(prop)===-1){this.dynamicProperties.push(prop);this.container.addDynamicProperty(this);this._isAnimated=true;}},iterateDynamicProperties:function iterateDynamicProperties(){this._mdf=false;var i;var len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();if(this.dynamicProperties[i]._mdf){this._mdf=true;}}},initDynamicPropertyContainer:function initDynamicPropertyContainer(container){this.container=container;this.dynamicProperties=[];this._mdf=false;this._isAnimated=false;}};var pointPool=function(){function create(){return createTypedArray('float32',2);}return poolFactory(8,create);}();function ShapePath(){this.c=false;this._length=0;this._maxLength=8;this.v=createSizedArray(this._maxLength);this.o=createSizedArray(this._maxLength);this.i=createSizedArray(this._maxLength);}ShapePath.prototype.setPathData=function(closed,len){this.c=closed;this.setLength(len);var i=0;while(i<len){this.v[i]=pointPool.newElement();this.o[i]=pointPool.newElement();this.i[i]=pointPool.newElement();i+=1;}};ShapePath.prototype.setLength=function(len){while(this._maxLength<len){this.doubleArrayLength();}this._length=len;};ShapePath.prototype.doubleArrayLength=function(){this.v=this.v.concat(createSizedArray(this._maxLength));this.i=this.i.concat(createSizedArray(this._maxLength));this.o=this.o.concat(createSizedArray(this._maxLength));this._maxLength*=2;};ShapePath.prototype.setXYAt=function(x,y,type,pos,replace){var arr;this._length=Math.max(this._length,pos+1);if(this._length>=this._maxLength){this.doubleArrayLength();}switch(type){case'v':arr=this.v;break;case'i':arr=this.i;break;case'o':arr=this.o;break;default:arr=[];break;}if(!arr[pos]||arr[pos]&&!replace){arr[pos]=pointPool.newElement();}arr[pos][0]=x;arr[pos][1]=y;};ShapePath.prototype.setTripleAt=function(vX,vY,oX,oY,iX,iY,pos,replace){this.setXYAt(vX,vY,'v',pos,replace);this.setXYAt(oX,oY,'o',pos,replace);this.setXYAt(iX,iY,'i',pos,replace);};ShapePath.prototype.reverse=function(){var newPath=new ShapePath();newPath.setPathData(this.c,this._length);var vertices=this.v;var outPoints=this.o;var inPoints=this.i;var init=0;if(this.c){newPath.setTripleAt(vertices[0][0],vertices[0][1],inPoints[0][0],inPoints[0][1],outPoints[0][0],outPoints[0][1],0,false);init=1;}var cnt=this._length-1;var len=this._length;var i;for(i=init;i<len;i+=1){newPath.setTripleAt(vertices[cnt][0],vertices[cnt][1],inPoints[cnt][0],inPoints[cnt][1],outPoints[cnt][0],outPoints[cnt][1],i,false);cnt-=1;}return newPath;};ShapePath.prototype.length=function(){return this._length;};var shapePool=function(){function create(){return new ShapePath();}function release(shapePath){var len=shapePath._length;var i;for(i=0;i<len;i+=1){pointPool.release(shapePath.v[i]);pointPool.release(shapePath.i[i]);pointPool.release(shapePath.o[i]);shapePath.v[i]=null;shapePath.i[i]=null;shapePath.o[i]=null;}shapePath._length=0;shapePath.c=false;}function clone(shape){var cloned=factory.newElement();var i;var len=shape._length===undefined?shape.v.length:shape._length;cloned.setLength(len);cloned.c=shape.c;for(i=0;i<len;i+=1){cloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1],i);}return cloned;}var factory=poolFactory(4,create,release);factory.clone=clone;return factory;}();function ShapeCollection(){this._length=0;this._maxLength=4;this.shapes=createSizedArray(this._maxLength);}ShapeCollection.prototype.addShape=function(shapeData){if(this._length===this._maxLength){this.shapes=this.shapes.concat(createSizedArray(this._maxLength));this._maxLength*=2;}this.shapes[this._length]=shapeData;this._length+=1;};ShapeCollection.prototype.releaseShapes=function(){var i;for(i=0;i<this._length;i+=1){shapePool.release(this.shapes[i]);}this._length=0;};var shapeCollectionPool=function(){var ob={newShapeCollection:newShapeCollection,release:release};var _length=0;var _maxLength=4;var pool=createSizedArray(_maxLength);function newShapeCollection(){var shapeCollection;if(_length){_length-=1;shapeCollection=pool[_length];}else {shapeCollection=new ShapeCollection();}return shapeCollection;}function release(shapeCollection){var i;var len=shapeCollection._length;for(i=0;i<len;i+=1){shapePool.release(shapeCollection.shapes[i]);}shapeCollection._length=0;if(_length===_maxLength){pool=pooling["double"](pool);_maxLength*=2;}pool[_length]=shapeCollection;_length+=1;}return ob;}();var ShapePropertyFactory=function(){var initFrame=-999999;function interpolateShape(frameNum,previousValue,caching){var iterationIndex=caching.lastIndex;var keyPropS;var keyPropE;var isHold;var j;var k;var jLen;var kLen;var perc;var vertexValue;var kf=this.keyframes;if(frameNum<kf[0].t-this.offsetTime){keyPropS=kf[0].s[0];isHold=true;iterationIndex=0;}else if(frameNum>=kf[kf.length-1].t-this.offsetTime){keyPropS=kf[kf.length-1].s?kf[kf.length-1].s[0]:kf[kf.length-2].e[0];/* if(kf[kf.length - 1].s){
		                  keyPropS = kf[kf.length - 1].s[0];
		              }else{
		                  keyPropS = kf[kf.length - 2].e[0];
		              } */isHold=true;}else {var i=iterationIndex;var len=kf.length-1;var flag=true;var keyData;var nextKeyData;var keyframeMetadata;while(flag){keyData=kf[i];nextKeyData=kf[i+1];if(nextKeyData.t-this.offsetTime>frameNum){break;}if(i<len-1){i+=1;}else {flag=false;}}keyframeMetadata=this.keyframesMetadata[i]||{};isHold=keyData.h===1;iterationIndex=i;if(!isHold){if(frameNum>=nextKeyData.t-this.offsetTime){perc=1;}else if(frameNum<keyData.t-this.offsetTime){perc=0;}else {var fnc;if(keyframeMetadata.__fnct){fnc=keyframeMetadata.__fnct;}else {fnc=BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;keyframeMetadata.__fnct=fnc;}perc=fnc((frameNum-(keyData.t-this.offsetTime))/(nextKeyData.t-this.offsetTime-(keyData.t-this.offsetTime)));}keyPropE=nextKeyData.s?nextKeyData.s[0]:keyData.e[0];}keyPropS=keyData.s[0];}jLen=previousValue._length;kLen=keyPropS.i[0].length;caching.lastIndex=iterationIndex;for(j=0;j<jLen;j+=1){for(k=0;k<kLen;k+=1){vertexValue=isHold?keyPropS.i[j][k]:keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;previousValue.i[j][k]=vertexValue;vertexValue=isHold?keyPropS.o[j][k]:keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;previousValue.o[j][k]=vertexValue;vertexValue=isHold?keyPropS.v[j][k]:keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;previousValue.v[j][k]=vertexValue;}}}function interpolateShapeCurrentTime(){var frameNum=this.comp.renderedFrame-this.offsetTime;var initTime=this.keyframes[0].t-this.offsetTime;var endTime=this.keyframes[this.keyframes.length-1].t-this.offsetTime;var lastFrame=this._caching.lastFrame;if(!(lastFrame!==initFrame&&(lastFrame<initTime&&frameNum<initTime||lastFrame>endTime&&frameNum>endTime))){/// /
		this._caching.lastIndex=lastFrame<frameNum?this._caching.lastIndex:0;this.interpolateShape(frameNum,this.pv,this._caching);/// /
		}this._caching.lastFrame=frameNum;return this.pv;}function resetShape(){this.paths=this.localShapeCollection;}function shapesEqual(shape1,shape2){if(shape1._length!==shape2._length||shape1.c!==shape2.c){return false;}var i;var len=shape1._length;for(i=0;i<len;i+=1){if(shape1.v[i][0]!==shape2.v[i][0]||shape1.v[i][1]!==shape2.v[i][1]||shape1.o[i][0]!==shape2.o[i][0]||shape1.o[i][1]!==shape2.o[i][1]||shape1.i[i][0]!==shape2.i[i][0]||shape1.i[i][1]!==shape2.i[i][1]){return false;}}return true;}function setVValue(newPath){if(!shapesEqual(this.v,newPath)){this.v=shapePool.clone(newPath);this.localShapeCollection.releaseShapes();this.localShapeCollection.addShape(this.v);this._mdf=true;this.paths=this.localShapeCollection;}}function processEffectsSequence(){if(this.elem.globalData.frameId===this.frameId){return;}if(!this.effectsSequence.length){this._mdf=false;return;}if(this.lock){this.setVValue(this.pv);return;}this.lock=true;this._mdf=false;var finalValue;if(this.kf){finalValue=this.pv;}else if(this.data.ks){finalValue=this.data.ks.k;}else {finalValue=this.data.pt.k;}var i;var len=this.effectsSequence.length;for(i=0;i<len;i+=1){finalValue=this.effectsSequence[i](finalValue);}this.setVValue(finalValue);this.lock=false;this.frameId=this.elem.globalData.frameId;}function ShapeProperty(elem,data,type){this.propType='shape';this.comp=elem.comp;this.container=elem;this.elem=elem;this.data=data;this.k=false;this.kf=false;this._mdf=false;var pathData=type===3?data.pt.k:data.ks.k;this.v=shapePool.clone(pathData);this.pv=shapePool.clone(this.v);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.paths=this.localShapeCollection;this.paths.addShape(this.v);this.reset=resetShape;this.effectsSequence=[];}function addEffect(effectFunction){this.effectsSequence.push(effectFunction);this.container.addDynamicProperty(this);}ShapeProperty.prototype.interpolateShape=interpolateShape;ShapeProperty.prototype.getValue=processEffectsSequence;ShapeProperty.prototype.setVValue=setVValue;ShapeProperty.prototype.addEffect=addEffect;function KeyframedShapeProperty(elem,data,type){this.propType='shape';this.comp=elem.comp;this.elem=elem;this.container=elem;this.offsetTime=elem.data.st;this.keyframes=type===3?data.pt.k:data.ks.k;this.keyframesMetadata=[];this.k=true;this.kf=true;var len=this.keyframes[0].s[0].i.length;this.v=shapePool.newElement();this.v.setPathData(this.keyframes[0].s[0].c,len);this.pv=shapePool.clone(this.v);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.paths=this.localShapeCollection;this.paths.addShape(this.v);this.lastFrame=initFrame;this.reset=resetShape;this._caching={lastFrame:initFrame,lastIndex:0};this.effectsSequence=[interpolateShapeCurrentTime.bind(this)];}KeyframedShapeProperty.prototype.getValue=processEffectsSequence;KeyframedShapeProperty.prototype.interpolateShape=interpolateShape;KeyframedShapeProperty.prototype.setVValue=setVValue;KeyframedShapeProperty.prototype.addEffect=addEffect;var EllShapeProperty=function(){var cPoint=roundCorner;function EllShapePropertyFactory(elem,data){this.v=shapePool.newElement();this.v.setPathData(true,4);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.paths=this.localShapeCollection;this.localShapeCollection.addShape(this.v);this.d=data.d;this.elem=elem;this.comp=elem.comp;this.frameId=-1;this.initDynamicPropertyContainer(elem);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.s=PropertyFactory.getProp(elem,data.s,1,0,this);if(this.dynamicProperties.length){this.k=true;}else {this.k=false;this.convertEllToPath();}}EllShapePropertyFactory.prototype={reset:resetShape,getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertEllToPath();}},convertEllToPath:function convertEllToPath(){var p0=this.p.v[0];var p1=this.p.v[1];var s0=this.s.v[0]/2;var s1=this.s.v[1]/2;var _cw=this.d!==3;var _v=this.v;_v.v[0][0]=p0;_v.v[0][1]=p1-s1;_v.v[1][0]=_cw?p0+s0:p0-s0;_v.v[1][1]=p1;_v.v[2][0]=p0;_v.v[2][1]=p1+s1;_v.v[3][0]=_cw?p0-s0:p0+s0;_v.v[3][1]=p1;_v.i[0][0]=_cw?p0-s0*cPoint:p0+s0*cPoint;_v.i[0][1]=p1-s1;_v.i[1][0]=_cw?p0+s0:p0-s0;_v.i[1][1]=p1-s1*cPoint;_v.i[2][0]=_cw?p0+s0*cPoint:p0-s0*cPoint;_v.i[2][1]=p1+s1;_v.i[3][0]=_cw?p0-s0:p0+s0;_v.i[3][1]=p1+s1*cPoint;_v.o[0][0]=_cw?p0+s0*cPoint:p0-s0*cPoint;_v.o[0][1]=p1-s1;_v.o[1][0]=_cw?p0+s0:p0-s0;_v.o[1][1]=p1+s1*cPoint;_v.o[2][0]=_cw?p0-s0*cPoint:p0+s0*cPoint;_v.o[2][1]=p1+s1;_v.o[3][0]=_cw?p0-s0:p0+s0;_v.o[3][1]=p1-s1*cPoint;}};extendPrototype([DynamicPropertyContainer],EllShapePropertyFactory);return EllShapePropertyFactory;}();var StarShapeProperty=function(){function StarShapePropertyFactory(elem,data){this.v=shapePool.newElement();this.v.setPathData(true,0);this.elem=elem;this.comp=elem.comp;this.data=data;this.frameId=-1;this.d=data.d;this.initDynamicPropertyContainer(elem);if(data.sy===1){this.ir=PropertyFactory.getProp(elem,data.ir,0,0,this);this.is=PropertyFactory.getProp(elem,data.is,0,0.01,this);this.convertToPath=this.convertStarToPath;}else {this.convertToPath=this.convertPolygonToPath;}this.pt=PropertyFactory.getProp(elem,data.pt,0,0,this);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.r=PropertyFactory.getProp(elem,data.r,0,degToRads,this);this.or=PropertyFactory.getProp(elem,data.or,0,0,this);this.os=PropertyFactory.getProp(elem,data.os,0,0.01,this);this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.localShapeCollection.addShape(this.v);this.paths=this.localShapeCollection;if(this.dynamicProperties.length){this.k=true;}else {this.k=false;this.convertToPath();}}StarShapePropertyFactory.prototype={reset:resetShape,getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertToPath();}},convertStarToPath:function convertStarToPath(){var numPts=Math.floor(this.pt.v)*2;var angle=Math.PI*2/numPts;/* this.v.v.length = numPts;
		                  this.v.i.length = numPts;
		                  this.v.o.length = numPts; */var longFlag=true;var longRad=this.or.v;var shortRad=this.ir.v;var longRound=this.os.v;var shortRound=this.is.v;var longPerimSegment=2*Math.PI*longRad/(numPts*2);var shortPerimSegment=2*Math.PI*shortRad/(numPts*2);var i;var rad;var roundness;var perimSegment;var currentAng=-Math.PI/2;currentAng+=this.r.v;var dir=this.data.d===3?-1:1;this.v._length=0;for(i=0;i<numPts;i+=1){rad=longFlag?longRad:shortRad;roundness=longFlag?longRound:shortRound;perimSegment=longFlag?longPerimSegment:shortPerimSegment;var x=rad*Math.cos(currentAng);var y=rad*Math.sin(currentAng);var ox=x===0&&y===0?0:y/Math.sqrt(x*x+y*y);var oy=x===0&&y===0?0:-x/Math.sqrt(x*x+y*y);x+=+this.p.v[0];y+=+this.p.v[1];this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir,i,true);/* this.v.v[i] = [x,y];
		                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
		                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
		                      this.v._length = numPts; */longFlag=!longFlag;currentAng+=angle*dir;}},convertPolygonToPath:function convertPolygonToPath(){var numPts=Math.floor(this.pt.v);var angle=Math.PI*2/numPts;var rad=this.or.v;var roundness=this.os.v;var perimSegment=2*Math.PI*rad/(numPts*4);var i;var currentAng=-Math.PI*0.5;var dir=this.data.d===3?-1:1;currentAng+=this.r.v;this.v._length=0;for(i=0;i<numPts;i+=1){var x=rad*Math.cos(currentAng);var y=rad*Math.sin(currentAng);var ox=x===0&&y===0?0:y/Math.sqrt(x*x+y*y);var oy=x===0&&y===0?0:-x/Math.sqrt(x*x+y*y);x+=+this.p.v[0];y+=+this.p.v[1];this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir,i,true);currentAng+=angle*dir;}this.paths.length=0;this.paths[0]=this.v;}};extendPrototype([DynamicPropertyContainer],StarShapePropertyFactory);return StarShapePropertyFactory;}();var RectShapeProperty=function(){function RectShapePropertyFactory(elem,data){this.v=shapePool.newElement();this.v.c=true;this.localShapeCollection=shapeCollectionPool.newShapeCollection();this.localShapeCollection.addShape(this.v);this.paths=this.localShapeCollection;this.elem=elem;this.comp=elem.comp;this.frameId=-1;this.d=data.d;this.initDynamicPropertyContainer(elem);this.p=PropertyFactory.getProp(elem,data.p,1,0,this);this.s=PropertyFactory.getProp(elem,data.s,1,0,this);this.r=PropertyFactory.getProp(elem,data.r,0,0,this);if(this.dynamicProperties.length){this.k=true;}else {this.k=false;this.convertRectToPath();}}RectShapePropertyFactory.prototype={convertRectToPath:function convertRectToPath(){var p0=this.p.v[0];var p1=this.p.v[1];var v0=this.s.v[0]/2;var v1=this.s.v[1]/2;var round=bmMin(v0,v1,this.r.v);var cPoint=round*(1-roundCorner);this.v._length=0;if(this.d===2||this.d===1){this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,0,true);this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,p0+v0,p1+v1-round,1,true);if(round!==0){this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2,true);this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3,true);this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4,true);this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5,true);this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6,true);this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7,true);}else {this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);}}else {this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0,true);if(round!==0){this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1,true);this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2,true);this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3,true);this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4,true);this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5,true);this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6,true);this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7,true);}else {this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1,true);this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2,true);this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3,true);}}},getValue:function getValue(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();if(this._mdf){this.convertRectToPath();}},reset:resetShape};extendPrototype([DynamicPropertyContainer],RectShapePropertyFactory);return RectShapePropertyFactory;}();function getShapeProp(elem,data,type){var prop;if(type===3||type===4){var dataProp=type===3?data.pt:data.ks;var keys=dataProp.k;if(keys.length){prop=new KeyframedShapeProperty(elem,data,type);}else {prop=new ShapeProperty(elem,data,type);}}else if(type===5){prop=new RectShapeProperty(elem,data);}else if(type===6){prop=new EllShapeProperty(elem,data);}else if(type===7){prop=new StarShapeProperty(elem,data);}if(prop.k){elem.addDynamicProperty(prop);}return prop;}function getConstructorFunction(){return ShapeProperty;}function getKeyframedConstructorFunction(){return KeyframedShapeProperty;}var ob={};ob.getShapeProp=getShapeProp;ob.getConstructorFunction=getConstructorFunction;ob.getKeyframedConstructorFunction=getKeyframedConstructorFunction;return ob;}();/*!
		   Transformation Matrix v2.0
		   (c) Epistemex 2014-2015
		   www.epistemex.com
		   By Ken Fyrstenberg
		   Contributions by leeoniya.
		   License: MIT, header required.
		   */ /**
		   * 2D transformation matrix object initialized with identity matrix.
		   *
		   * The matrix can synchronize a canvas context by supplying the context
		   * as an argument, or later apply current absolute transform to an
		   * existing context.
		   *
		   * All values are handled as floating point values.
		   *
		   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
		   * @prop {number} a - scale x
		   * @prop {number} b - shear y
		   * @prop {number} c - shear x
		   * @prop {number} d - scale y
		   * @prop {number} e - translate x
		   * @prop {number} f - translate y
		   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
		   * @constructor
		   */var Matrix=function(){var _cos=Math.cos;var _sin=Math.sin;var _tan=Math.tan;var _rnd=Math.round;function reset(){this.props[0]=1;this.props[1]=0;this.props[2]=0;this.props[3]=0;this.props[4]=0;this.props[5]=1;this.props[6]=0;this.props[7]=0;this.props[8]=0;this.props[9]=0;this.props[10]=1;this.props[11]=0;this.props[12]=0;this.props[13]=0;this.props[14]=0;this.props[15]=1;return this;}function rotate(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);}function rotateX(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(1,0,0,0,0,mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1);}function rotateY(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,0,mSin,0,0,1,0,0,-mSin,0,mCos,0,0,0,0,1);}function rotateZ(angle){if(angle===0){return this;}var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);}function shear(sx,sy){return this._t(1,sy,sx,1,0,0);}function skew(ax,ay){return this.shear(_tan(ax),_tan(ay));}function skewFromAxis(ax,angle){var mCos=_cos(angle);var mSin=_sin(angle);return this._t(mCos,mSin,0,0,-mSin,mCos,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,_tan(ax),1,0,0,0,0,1,0,0,0,0,1)._t(mCos,-mSin,0,0,mSin,mCos,0,0,0,0,1,0,0,0,0,1);// return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
		}function scale(sx,sy,sz){if(!sz&&sz!==0){sz=1;}if(sx===1&&sy===1&&sz===1){return this;}return this._t(sx,0,0,0,0,sy,0,0,0,0,sz,0,0,0,0,1);}function setTransform(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.props[0]=a;this.props[1]=b;this.props[2]=c;this.props[3]=d;this.props[4]=e;this.props[5]=f;this.props[6]=g;this.props[7]=h;this.props[8]=i;this.props[9]=j;this.props[10]=k;this.props[11]=l;this.props[12]=m;this.props[13]=n;this.props[14]=o;this.props[15]=p;return this;}function translate(tx,ty,tz){tz=tz||0;if(tx!==0||ty!==0||tz!==0){return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);}return this;}function transform(a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2){var _p=this.props;if(a2===1&&b2===0&&c2===0&&d2===0&&e2===0&&f2===1&&g2===0&&h2===0&&i2===0&&j2===0&&k2===1&&l2===0){// NOTE: commenting this condition because TurboFan deoptimizes code when present
		// if(m2 !== 0 || n2 !== 0 || o2 !== 0){
		_p[12]=_p[12]*a2+_p[15]*m2;_p[13]=_p[13]*f2+_p[15]*n2;_p[14]=_p[14]*k2+_p[15]*o2;_p[15]*=p2;// }
		this._identityCalculated=false;return this;}var a1=_p[0];var b1=_p[1];var c1=_p[2];var d1=_p[3];var e1=_p[4];var f1=_p[5];var g1=_p[6];var h1=_p[7];var i1=_p[8];var j1=_p[9];var k1=_p[10];var l1=_p[11];var m1=_p[12];var n1=_p[13];var o1=_p[14];var p1=_p[15];/* matrix order (canvas compatible):
		           * ace
		           * bdf
		           * 001
		           */_p[0]=a1*a2+b1*e2+c1*i2+d1*m2;_p[1]=a1*b2+b1*f2+c1*j2+d1*n2;_p[2]=a1*c2+b1*g2+c1*k2+d1*o2;_p[3]=a1*d2+b1*h2+c1*l2+d1*p2;_p[4]=e1*a2+f1*e2+g1*i2+h1*m2;_p[5]=e1*b2+f1*f2+g1*j2+h1*n2;_p[6]=e1*c2+f1*g2+g1*k2+h1*o2;_p[7]=e1*d2+f1*h2+g1*l2+h1*p2;_p[8]=i1*a2+j1*e2+k1*i2+l1*m2;_p[9]=i1*b2+j1*f2+k1*j2+l1*n2;_p[10]=i1*c2+j1*g2+k1*k2+l1*o2;_p[11]=i1*d2+j1*h2+k1*l2+l1*p2;_p[12]=m1*a2+n1*e2+o1*i2+p1*m2;_p[13]=m1*b2+n1*f2+o1*j2+p1*n2;_p[14]=m1*c2+n1*g2+o1*k2+p1*o2;_p[15]=m1*d2+n1*h2+o1*l2+p1*p2;this._identityCalculated=false;return this;}function multiply(matrix){var matrixProps=matrix.props;return this.transform(matrixProps[0],matrixProps[1],matrixProps[2],matrixProps[3],matrixProps[4],matrixProps[5],matrixProps[6],matrixProps[7],matrixProps[8],matrixProps[9],matrixProps[10],matrixProps[11],matrixProps[12],matrixProps[13],matrixProps[14],matrixProps[15]);}function isIdentity(){if(!this._identityCalculated){this._identity=!(this.props[0]!==1||this.props[1]!==0||this.props[2]!==0||this.props[3]!==0||this.props[4]!==0||this.props[5]!==1||this.props[6]!==0||this.props[7]!==0||this.props[8]!==0||this.props[9]!==0||this.props[10]!==1||this.props[11]!==0||this.props[12]!==0||this.props[13]!==0||this.props[14]!==0||this.props[15]!==1);this._identityCalculated=true;}return this._identity;}function equals(matr){var i=0;while(i<16){if(matr.props[i]!==this.props[i]){return false;}i+=1;}return true;}function clone(matr){var i;for(i=0;i<16;i+=1){matr.props[i]=this.props[i];}return matr;}function cloneFromProps(props){var i;for(i=0;i<16;i+=1){this.props[i]=props[i];}}function applyToPoint(x,y,z){return {x:x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12],y:x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13],z:x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14]};/* return {
		           x: x * me.a + y * me.c + me.e,
		           y: x * me.b + y * me.d + me.f
		           }; */}function applyToX(x,y,z){return x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12];}function applyToY(x,y,z){return x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13];}function applyToZ(x,y,z){return x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14];}function getInverseMatrix(){var determinant=this.props[0]*this.props[5]-this.props[1]*this.props[4];var a=this.props[5]/determinant;var b=-this.props[1]/determinant;var c=-this.props[4]/determinant;var d=this.props[0]/determinant;var e=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/determinant;var f=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/determinant;var inverseMatrix=new Matrix();inverseMatrix.props[0]=a;inverseMatrix.props[1]=b;inverseMatrix.props[4]=c;inverseMatrix.props[5]=d;inverseMatrix.props[12]=e;inverseMatrix.props[13]=f;return inverseMatrix;}function inversePoint(pt){var inverseMatrix=this.getInverseMatrix();return inverseMatrix.applyToPointArray(pt[0],pt[1],pt[2]||0);}function inversePoints(pts){var i;var len=pts.length;var retPts=[];for(i=0;i<len;i+=1){retPts[i]=inversePoint(pts[i]);}return retPts;}function applyToTriplePoints(pt1,pt2,pt3){var arr=createTypedArray('float32',6);if(this.isIdentity()){arr[0]=pt1[0];arr[1]=pt1[1];arr[2]=pt2[0];arr[3]=pt2[1];arr[4]=pt3[0];arr[5]=pt3[1];}else {var p0=this.props[0];var p1=this.props[1];var p4=this.props[4];var p5=this.props[5];var p12=this.props[12];var p13=this.props[13];arr[0]=pt1[0]*p0+pt1[1]*p4+p12;arr[1]=pt1[0]*p1+pt1[1]*p5+p13;arr[2]=pt2[0]*p0+pt2[1]*p4+p12;arr[3]=pt2[0]*p1+pt2[1]*p5+p13;arr[4]=pt3[0]*p0+pt3[1]*p4+p12;arr[5]=pt3[0]*p1+pt3[1]*p5+p13;}return arr;}function applyToPointArray(x,y,z){var arr;if(this.isIdentity()){arr=[x,y,z];}else {arr=[x*this.props[0]+y*this.props[4]+z*this.props[8]+this.props[12],x*this.props[1]+y*this.props[5]+z*this.props[9]+this.props[13],x*this.props[2]+y*this.props[6]+z*this.props[10]+this.props[14]];}return arr;}function applyToPointStringified(x,y){if(this.isIdentity()){return x+','+y;}var _p=this.props;return Math.round((x*_p[0]+y*_p[4]+_p[12])*100)/100+','+Math.round((x*_p[1]+y*_p[5]+_p[13])*100)/100;}function toCSS(){// Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
		/* if(this.isIdentity()) {
		              return '';
		          } */var i=0;var props=this.props;var cssValue='matrix3d(';var v=10000;while(i<16){cssValue+=_rnd(props[i]*v)/v;cssValue+=i===15?')':',';i+=1;}return cssValue;}function roundMatrixProperty(val){var v=10000;if(val<0.000001&&val>0||val>-0.000001&&val<0){return _rnd(val*v)/v;}return val;}function to2dCSS(){// Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
		/* if(this.isIdentity()) {
		              return '';
		          } */var props=this.props;var _a=roundMatrixProperty(props[0]);var _b=roundMatrixProperty(props[1]);var _c=roundMatrixProperty(props[4]);var _d=roundMatrixProperty(props[5]);var _e=roundMatrixProperty(props[12]);var _f=roundMatrixProperty(props[13]);return 'matrix('+_a+','+_b+','+_c+','+_d+','+_e+','+_f+')';}return function(){this.reset=reset;this.rotate=rotate;this.rotateX=rotateX;this.rotateY=rotateY;this.rotateZ=rotateZ;this.skew=skew;this.skewFromAxis=skewFromAxis;this.shear=shear;this.scale=scale;this.setTransform=setTransform;this.translate=translate;this.transform=transform;this.multiply=multiply;this.applyToPoint=applyToPoint;this.applyToX=applyToX;this.applyToY=applyToY;this.applyToZ=applyToZ;this.applyToPointArray=applyToPointArray;this.applyToTriplePoints=applyToTriplePoints;this.applyToPointStringified=applyToPointStringified;this.toCSS=toCSS;this.to2dCSS=to2dCSS;this.clone=clone;this.cloneFromProps=cloneFromProps;this.equals=equals;this.inversePoints=inversePoints;this.inversePoint=inversePoint;this.getInverseMatrix=getInverseMatrix;this._t=this.transform;this.isIdentity=isIdentity;this._identity=true;this._identityCalculated=false;this.props=createTypedArray('float32',16);this.reset();};}();function _typeof$3(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$3=function _typeof(obj){return typeof obj;};}else {_typeof$3=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$3(obj);}var lottie={};function setLocation(href){setLocationHref(href);}function searchAnimations(){{animationManager.searchAnimations();}}function setSubframeRendering(flag){setSubframeEnabled(flag);}function setPrefix(prefix){setIdPrefix(prefix);}function loadAnimation(params){return animationManager.loadAnimation(params);}function setQuality(value){if(typeof value==='string'){switch(value){case'high':setDefaultCurveSegments(200);break;default:case'medium':setDefaultCurveSegments(50);break;case'low':setDefaultCurveSegments(10);break;}}else if(!isNaN(value)&&value>1){setDefaultCurveSegments(value);}}function inBrowser(){return typeof navigator!=='undefined';}function installPlugin(type,plugin){if(type==='expressions'){setExpressionsPlugin(plugin);}}function getFactory(name){switch(name){case'propertyFactory':return PropertyFactory;case'shapePropertyFactory':return ShapePropertyFactory;case'matrix':return Matrix;default:return null;}}lottie.play=animationManager.play;lottie.pause=animationManager.pause;lottie.setLocationHref=setLocation;lottie.togglePause=animationManager.togglePause;lottie.setSpeed=animationManager.setSpeed;lottie.setDirection=animationManager.setDirection;lottie.stop=animationManager.stop;lottie.searchAnimations=searchAnimations;lottie.registerAnimation=animationManager.registerAnimation;lottie.loadAnimation=loadAnimation;lottie.setSubframeRendering=setSubframeRendering;lottie.resize=animationManager.resize;// lottie.start = start;
		lottie.goToAndStop=animationManager.goToAndStop;lottie.destroy=animationManager.destroy;lottie.setQuality=setQuality;lottie.inBrowser=inBrowser;lottie.installPlugin=installPlugin;lottie.freeze=animationManager.freeze;lottie.unfreeze=animationManager.unfreeze;lottie.setVolume=animationManager.setVolume;lottie.mute=animationManager.mute;lottie.unmute=animationManager.unmute;lottie.getRegisteredAnimations=animationManager.getRegisteredAnimations;lottie.useWebWorker=setWebWorker;lottie.setIDPrefix=setPrefix;lottie.__getFactory=getFactory;lottie.version='5.12.2';function checkReady(){if(document.readyState==='complete'){clearInterval(readyStateCheckInterval);searchAnimations();}}function getQueryVariable(variable){var vars=queryString.split('&');for(var i=0;i<vars.length;i+=1){var pair=vars[i].split('=');if(decodeURIComponent(pair[0])==variable){// eslint-disable-line eqeqeq
		return decodeURIComponent(pair[1]);}}return null;}var queryString='';{var scripts=document.getElementsByTagName('script');var index=scripts.length-1;var myScript=scripts[index]||{src:''};queryString=myScript.src?myScript.src.replace(/^[^\?]+\??/,''):'';// eslint-disable-line no-useless-escape
		getQueryVariable('renderer');}var readyStateCheckInterval=setInterval(checkReady,100);// this adds bodymovin to the window object for backwards compatibility
		try{if(!(('object'==="undefined"?"undefined":_typeof$3(exports))==='object'&&'object'!=='undefined')&&!(typeof undefined==='function'&&undefined.amd)// eslint-disable-line no-undef
		){window.bodymovin=lottie;}}catch(err){//
		}var ShapeModifiers=function(){var ob={};var modifiers={};ob.registerModifier=registerModifier;ob.getModifier=getModifier;function registerModifier(nm,factory){if(!modifiers[nm]){modifiers[nm]=factory;}}function getModifier(nm,elem,data){return new modifiers[nm](elem,data);}return ob;}();function ShapeModifier(){}ShapeModifier.prototype.initModifierProperties=function(){};ShapeModifier.prototype.addShapeToModifier=function(){};ShapeModifier.prototype.addShape=function(data){if(!this.closed){// Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
		data.sh.container.addDynamicProperty(data.sh);var shapeData={shape:data.sh,data:data,localShapeCollection:shapeCollectionPool.newShapeCollection()};this.shapes.push(shapeData);this.addShapeToModifier(shapeData);if(this._isAnimated){data.setAsAnimated();}}};ShapeModifier.prototype.init=function(elem,data){this.shapes=[];this.elem=elem;this.initDynamicPropertyContainer(elem);this.initModifierProperties(elem,data);this.frameId=initialDefaultFrame;this.closed=false;this.k=false;if(this.dynamicProperties.length){this.k=true;}else {this.getValue(true);}};ShapeModifier.prototype.processKeys=function(){if(this.elem.globalData.frameId===this.frameId){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();};extendPrototype([DynamicPropertyContainer],ShapeModifier);function TrimModifier(){}extendPrototype([ShapeModifier],TrimModifier);TrimModifier.prototype.initModifierProperties=function(elem,data){this.s=PropertyFactory.getProp(elem,data.s,0,0.01,this);this.e=PropertyFactory.getProp(elem,data.e,0,0.01,this);this.o=PropertyFactory.getProp(elem,data.o,0,0,this);this.sValue=0;this.eValue=0;this.getValue=this.processKeys;this.m=data.m;this._isAnimated=!!this.s.effectsSequence.length||!!this.e.effectsSequence.length||!!this.o.effectsSequence.length;};TrimModifier.prototype.addShapeToModifier=function(shapeData){shapeData.pathsData=[];};TrimModifier.prototype.calculateShapeEdges=function(s,e,shapeLength,addedLength,totalModifierLength){var segments=[];if(e<=1){segments.push({s:s,e:e});}else if(s>=1){segments.push({s:s-1,e:e-1});}else {segments.push({s:s,e:1});segments.push({s:0,e:e-1});}var shapeSegments=[];var i;var len=segments.length;var segmentOb;for(i=0;i<len;i+=1){segmentOb=segments[i];if(!(segmentOb.e*totalModifierLength<addedLength||segmentOb.s*totalModifierLength>addedLength+shapeLength)){var shapeS;var shapeE;if(segmentOb.s*totalModifierLength<=addedLength){shapeS=0;}else {shapeS=(segmentOb.s*totalModifierLength-addedLength)/shapeLength;}if(segmentOb.e*totalModifierLength>=addedLength+shapeLength){shapeE=1;}else {shapeE=(segmentOb.e*totalModifierLength-addedLength)/shapeLength;}shapeSegments.push([shapeS,shapeE]);}}if(!shapeSegments.length){shapeSegments.push([0,0]);}return shapeSegments;};TrimModifier.prototype.releasePathsData=function(pathsData){var i;var len=pathsData.length;for(i=0;i<len;i+=1){segmentsLengthPool.release(pathsData[i]);}pathsData.length=0;return pathsData;};TrimModifier.prototype.processShapes=function(_isFirstFrame){var s;var e;if(this._mdf||_isFirstFrame){var o=this.o.v%360/360;if(o<0){o+=1;}if(this.s.v>1){s=1+o;}else if(this.s.v<0){s=0+o;}else {s=this.s.v+o;}if(this.e.v>1){e=1+o;}else if(this.e.v<0){e=0+o;}else {e=this.e.v+o;}if(s>e){var _s=s;s=e;e=_s;}s=Math.round(s*10000)*0.0001;e=Math.round(e*10000)*0.0001;this.sValue=s;this.eValue=e;}else {s=this.sValue;e=this.eValue;}var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var pathsData;var pathData;var totalShapeLength;var totalModifierLength=0;if(e===s){for(i=0;i<len;i+=1){this.shapes[i].localShapeCollection.releaseShapes();this.shapes[i].shape._mdf=true;this.shapes[i].shape.paths=this.shapes[i].localShapeCollection;if(this._mdf){this.shapes[i].pathsData.length=0;}}}else if(!(e===1&&s===0||e===0&&s===1)){var segments=[];var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];// if shape hasn't changed and trim properties haven't changed, cached previous path can be used
		if(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame&&this.m!==2){shapeData.shape.paths=shapeData.localShapeCollection;}else {shapePaths=shapeData.shape.paths;jLen=shapePaths._length;totalShapeLength=0;if(!shapeData.shape._mdf&&shapeData.pathsData.length){totalShapeLength=shapeData.totalShapeLength;}else {pathsData=this.releasePathsData(shapeData.pathsData);for(j=0;j<jLen;j+=1){pathData=bez.getSegmentsLength(shapePaths.shapes[j]);pathsData.push(pathData);totalShapeLength+=pathData.totalLength;}shapeData.totalShapeLength=totalShapeLength;shapeData.pathsData=pathsData;}totalModifierLength+=totalShapeLength;shapeData.shape._mdf=true;}}var shapeS=s;var shapeE=e;var addedLength=0;var edges;for(i=len-1;i>=0;i-=1){shapeData=this.shapes[i];if(shapeData.shape._mdf){localShapeCollection=shapeData.localShapeCollection;localShapeCollection.releaseShapes();// if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
		if(this.m===2&&len>1){edges=this.calculateShapeEdges(s,e,shapeData.totalShapeLength,addedLength,totalModifierLength);addedLength+=shapeData.totalShapeLength;}else {edges=[[shapeS,shapeE]];}jLen=edges.length;for(j=0;j<jLen;j+=1){shapeS=edges[j][0];shapeE=edges[j][1];segments.length=0;if(shapeE<=1){segments.push({s:shapeData.totalShapeLength*shapeS,e:shapeData.totalShapeLength*shapeE});}else if(shapeS>=1){segments.push({s:shapeData.totalShapeLength*(shapeS-1),e:shapeData.totalShapeLength*(shapeE-1)});}else {segments.push({s:shapeData.totalShapeLength*shapeS,e:shapeData.totalShapeLength});segments.push({s:0,e:shapeData.totalShapeLength*(shapeE-1)});}var newShapesData=this.addShapes(shapeData,segments[0]);if(segments[0].s!==segments[0].e){if(segments.length>1){var lastShapeInCollection=shapeData.shape.paths.shapes[shapeData.shape.paths._length-1];if(lastShapeInCollection.c){var lastShape=newShapesData.pop();this.addPaths(newShapesData,localShapeCollection);newShapesData=this.addShapes(shapeData,segments[1],lastShape);}else {this.addPaths(newShapesData,localShapeCollection);newShapesData=this.addShapes(shapeData,segments[1]);}}this.addPaths(newShapesData,localShapeCollection);}}shapeData.shape.paths=localShapeCollection;}}}else if(this._mdf){for(i=0;i<len;i+=1){// Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
		// Don't remove this even if it's losing cached info.
		this.shapes[i].pathsData.length=0;this.shapes[i].shape._mdf=true;}}};TrimModifier.prototype.addPaths=function(newPaths,localShapeCollection){var i;var len=newPaths.length;for(i=0;i<len;i+=1){localShapeCollection.addShape(newPaths[i]);}};TrimModifier.prototype.addSegment=function(pt1,pt2,pt3,pt4,shapePath,pos,newShape){shapePath.setXYAt(pt2[0],pt2[1],'o',pos);shapePath.setXYAt(pt3[0],pt3[1],'i',pos+1);if(newShape){shapePath.setXYAt(pt1[0],pt1[1],'v',pos);}shapePath.setXYAt(pt4[0],pt4[1],'v',pos+1);};TrimModifier.prototype.addSegmentFromArray=function(points,shapePath,pos,newShape){shapePath.setXYAt(points[1],points[5],'o',pos);shapePath.setXYAt(points[2],points[6],'i',pos+1);if(newShape){shapePath.setXYAt(points[0],points[4],'v',pos);}shapePath.setXYAt(points[3],points[7],'v',pos+1);};TrimModifier.prototype.addShapes=function(shapeData,shapeSegment,shapePath){var pathsData=shapeData.pathsData;var shapePaths=shapeData.shape.paths.shapes;var i;var len=shapeData.shape.paths._length;var j;var jLen;var addedLength=0;var currentLengthData;var segmentCount;var lengths;var segment;var shapes=[];var initPos;var newShape=true;if(!shapePath){shapePath=shapePool.newElement();segmentCount=0;initPos=0;}else {segmentCount=shapePath._length;initPos=shapePath._length;}shapes.push(shapePath);for(i=0;i<len;i+=1){lengths=pathsData[i].lengths;shapePath.c=shapePaths[i].c;jLen=shapePaths[i].c?lengths.length:lengths.length+1;for(j=1;j<jLen;j+=1){currentLengthData=lengths[j-1];if(addedLength+currentLengthData.addedLength<shapeSegment.s){addedLength+=currentLengthData.addedLength;shapePath.c=false;}else if(addedLength>shapeSegment.e){shapePath.c=false;break;}else {if(shapeSegment.s<=addedLength&&shapeSegment.e>=addedLength+currentLengthData.addedLength){this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);newShape=false;}else {segment=bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j],(shapeSegment.s-addedLength)/currentLengthData.addedLength,(shapeSegment.e-addedLength)/currentLengthData.addedLength,lengths[j-1]);this.addSegmentFromArray(segment,shapePath,segmentCount,newShape);// this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
		newShape=false;shapePath.c=false;}addedLength+=currentLengthData.addedLength;segmentCount+=1;}}if(shapePaths[i].c&&lengths.length){currentLengthData=lengths[j-1];if(addedLength<=shapeSegment.e){var segmentLength=lengths[j-1].addedLength;if(shapeSegment.s<=addedLength&&shapeSegment.e>=addedLength+segmentLength){this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);newShape=false;}else {segment=bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0],(shapeSegment.s-addedLength)/segmentLength,(shapeSegment.e-addedLength)/segmentLength,lengths[j-1]);this.addSegmentFromArray(segment,shapePath,segmentCount,newShape);// this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
		newShape=false;shapePath.c=false;}}else {shapePath.c=false;}addedLength+=currentLengthData.addedLength;segmentCount+=1;}if(shapePath._length){shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);shapePath.setXYAt(shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1],'o',shapePath._length-1);}if(addedLength>shapeSegment.e){break;}if(i<len-1){shapePath=shapePool.newElement();newShape=true;shapes.push(shapePath);segmentCount=0;}}return shapes;};function PuckerAndBloatModifier(){}extendPrototype([ShapeModifier],PuckerAndBloatModifier);PuckerAndBloatModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.amount=PropertyFactory.getProp(elem,data.a,0,null,this);this._isAnimated=!!this.amount.effectsSequence.length;};PuckerAndBloatModifier.prototype.processPath=function(path,amount){var percent=amount/100;var centerPoint=[0,0];var pathLength=path._length;var i=0;for(i=0;i<pathLength;i+=1){centerPoint[0]+=path.v[i][0];centerPoint[1]+=path.v[i][1];}centerPoint[0]/=pathLength;centerPoint[1]/=pathLength;var clonedPath=shapePool.newElement();clonedPath.c=path.c;var vX;var vY;var oX;var oY;var iX;var iY;for(i=0;i<pathLength;i+=1){vX=path.v[i][0]+(centerPoint[0]-path.v[i][0])*percent;vY=path.v[i][1]+(centerPoint[1]-path.v[i][1])*percent;oX=path.o[i][0]+(centerPoint[0]-path.o[i][0])*-percent;oY=path.o[i][1]+(centerPoint[1]-path.o[i][1])*-percent;iX=path.i[i][0]+(centerPoint[0]-path.i[i][0])*-percent;iY=path.i[i][1]+(centerPoint[1]-path.i[i][1])*-percent;clonedPath.setTripleAt(vX,vY,oX,oY,iX,iY,i);}return clonedPath;};PuckerAndBloatModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var amount=this.amount.v;if(amount!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],amount));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};var TransformPropertyFactory=function(){var defaultVector=[0,0];function applyToMatrix(mat){var _mdf=this._mdf;this.iterateDynamicProperties();this._mdf=this._mdf||_mdf;if(this.a){mat.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);}if(this.s){mat.scale(this.s.v[0],this.s.v[1],this.s.v[2]);}if(this.sk){mat.skewFromAxis(-this.sk.v,this.sa.v);}if(this.r){mat.rotate(-this.r.v);}else {mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);}if(this.data.p.s){if(this.data.p.z){mat.translate(this.px.v,this.py.v,-this.pz.v);}else {mat.translate(this.px.v,this.py.v,0);}}else {mat.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}}function processKeys(forceRender){if(this.elem.globalData.frameId===this.frameId){return;}if(this._isDirty){this.precalculateMatrix();this._isDirty=false;}this.iterateDynamicProperties();if(this._mdf||forceRender){var frameRate;this.v.cloneFromProps(this.pre.props);if(this.appliedTransformations<1){this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);}if(this.appliedTransformations<2){this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);}if(this.sk&&this.appliedTransformations<3){this.v.skewFromAxis(-this.sk.v,this.sa.v);}if(this.r&&this.appliedTransformations<4){this.v.rotate(-this.r.v);}else if(!this.r&&this.appliedTransformations<4){this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);}if(this.autoOriented){var v1;var v2;frameRate=this.elem.globalData.frameRate;if(this.p&&this.p.keyframes&&this.p.getValueAtTime){if(this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t){v1=this.p.getValueAtTime((this.p.keyframes[0].t+0.01)/frameRate,0);v2=this.p.getValueAtTime(this.p.keyframes[0].t/frameRate,0);}else if(this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t){v1=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/frameRate,0);v2=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-0.05)/frameRate,0);}else {v1=this.p.pv;v2=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-0.01)/frameRate,this.p.offsetTime);}}else if(this.px&&this.px.keyframes&&this.py.keyframes&&this.px.getValueAtTime&&this.py.getValueAtTime){v1=[];v2=[];var px=this.px;var py=this.py;if(px._caching.lastFrame+px.offsetTime<=px.keyframes[0].t){v1[0]=px.getValueAtTime((px.keyframes[0].t+0.01)/frameRate,0);v1[1]=py.getValueAtTime((py.keyframes[0].t+0.01)/frameRate,0);v2[0]=px.getValueAtTime(px.keyframes[0].t/frameRate,0);v2[1]=py.getValueAtTime(py.keyframes[0].t/frameRate,0);}else if(px._caching.lastFrame+px.offsetTime>=px.keyframes[px.keyframes.length-1].t){v1[0]=px.getValueAtTime(px.keyframes[px.keyframes.length-1].t/frameRate,0);v1[1]=py.getValueAtTime(py.keyframes[py.keyframes.length-1].t/frameRate,0);v2[0]=px.getValueAtTime((px.keyframes[px.keyframes.length-1].t-0.01)/frameRate,0);v2[1]=py.getValueAtTime((py.keyframes[py.keyframes.length-1].t-0.01)/frameRate,0);}else {v1=[px.pv,py.pv];v2[0]=px.getValueAtTime((px._caching.lastFrame+px.offsetTime-0.01)/frameRate,px.offsetTime);v2[1]=py.getValueAtTime((py._caching.lastFrame+py.offsetTime-0.01)/frameRate,py.offsetTime);}}else {v2=defaultVector;v1=v2;}this.v.rotate(-Math.atan2(v1[1]-v2[1],v1[0]-v2[0]));}if(this.data.p&&this.data.p.s){if(this.data.p.z){this.v.translate(this.px.v,this.py.v,-this.pz.v);}else {this.v.translate(this.px.v,this.py.v,0);}}else {this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}}this.frameId=this.elem.globalData.frameId;}function precalculateMatrix(){this.appliedTransformations=0;this.pre.reset();if(!this.a.effectsSequence.length){this.pre.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);this.appliedTransformations=1;}else {return;}if(!this.s.effectsSequence.length){this.pre.scale(this.s.v[0],this.s.v[1],this.s.v[2]);this.appliedTransformations=2;}else {return;}if(this.sk){if(!this.sk.effectsSequence.length&&!this.sa.effectsSequence.length){this.pre.skewFromAxis(-this.sk.v,this.sa.v);this.appliedTransformations=3;}else {return;}}if(this.r){if(!this.r.effectsSequence.length){this.pre.rotate(-this.r.v);this.appliedTransformations=4;}}else if(!this.rz.effectsSequence.length&&!this.ry.effectsSequence.length&&!this.rx.effectsSequence.length&&!this.or.effectsSequence.length){this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);this.appliedTransformations=4;}}function autoOrient(){//
		// var prevP = this.getValueAtTime();
		}function addDynamicProperty(prop){this._addDynamicProperty(prop);this.elem.addDynamicProperty(prop);this._isDirty=true;}function TransformProperty(elem,data,container){this.elem=elem;this.frameId=-1;this.propType='transform';this.data=data;this.v=new Matrix();// Precalculated matrix with non animated properties
		this.pre=new Matrix();this.appliedTransformations=0;this.initDynamicPropertyContainer(container||elem);if(data.p&&data.p.s){this.px=PropertyFactory.getProp(elem,data.p.x,0,0,this);this.py=PropertyFactory.getProp(elem,data.p.y,0,0,this);if(data.p.z){this.pz=PropertyFactory.getProp(elem,data.p.z,0,0,this);}}else {this.p=PropertyFactory.getProp(elem,data.p||{k:[0,0,0]},1,0,this);}if(data.rx){this.rx=PropertyFactory.getProp(elem,data.rx,0,degToRads,this);this.ry=PropertyFactory.getProp(elem,data.ry,0,degToRads,this);this.rz=PropertyFactory.getProp(elem,data.rz,0,degToRads,this);if(data.or.k[0].ti){var i;var len=data.or.k.length;for(i=0;i<len;i+=1){data.or.k[i].to=null;data.or.k[i].ti=null;}}this.or=PropertyFactory.getProp(elem,data.or,1,degToRads,this);// sh Indicates it needs to be capped between -180 and 180
		this.or.sh=true;}else {this.r=PropertyFactory.getProp(elem,data.r||{k:0},0,degToRads,this);}if(data.sk){this.sk=PropertyFactory.getProp(elem,data.sk,0,degToRads,this);this.sa=PropertyFactory.getProp(elem,data.sa,0,degToRads,this);}this.a=PropertyFactory.getProp(elem,data.a||{k:[0,0,0]},1,0,this);this.s=PropertyFactory.getProp(elem,data.s||{k:[100,100,100]},1,0.01,this);// Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
		if(data.o){this.o=PropertyFactory.getProp(elem,data.o,0,0.01,elem);}else {this.o={_mdf:false,v:1};}this._isDirty=true;if(!this.dynamicProperties.length){this.getValue(true);}}TransformProperty.prototype={applyToMatrix:applyToMatrix,getValue:processKeys,precalculateMatrix:precalculateMatrix,autoOrient:autoOrient};extendPrototype([DynamicPropertyContainer],TransformProperty);TransformProperty.prototype.addDynamicProperty=addDynamicProperty;TransformProperty.prototype._addDynamicProperty=DynamicPropertyContainer.prototype.addDynamicProperty;function getTransformProperty(elem,data,container){return new TransformProperty(elem,data,container);}return {getTransformProperty:getTransformProperty};}();function RepeaterModifier(){}extendPrototype([ShapeModifier],RepeaterModifier);RepeaterModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.c=PropertyFactory.getProp(elem,data.c,0,null,this);this.o=PropertyFactory.getProp(elem,data.o,0,null,this);this.tr=TransformPropertyFactory.getTransformProperty(elem,data.tr,this);this.so=PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);this.eo=PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);this.data=data;if(!this.dynamicProperties.length){this.getValue(true);}this._isAnimated=!!this.dynamicProperties.length;this.pMatrix=new Matrix();this.rMatrix=new Matrix();this.sMatrix=new Matrix();this.tMatrix=new Matrix();this.matrix=new Matrix();};RepeaterModifier.prototype.applyTransforms=function(pMatrix,rMatrix,sMatrix,transform,perc,inv){var dir=inv?-1:1;var scaleX=transform.s.v[0]+(1-transform.s.v[0])*(1-perc);var scaleY=transform.s.v[1]+(1-transform.s.v[1])*(1-perc);pMatrix.translate(transform.p.v[0]*dir*perc,transform.p.v[1]*dir*perc,transform.p.v[2]);rMatrix.translate(-transform.a.v[0],-transform.a.v[1],transform.a.v[2]);rMatrix.rotate(-transform.r.v*dir*perc);rMatrix.translate(transform.a.v[0],transform.a.v[1],transform.a.v[2]);sMatrix.translate(-transform.a.v[0],-transform.a.v[1],transform.a.v[2]);sMatrix.scale(inv?1/scaleX:scaleX,inv?1/scaleY:scaleY);sMatrix.translate(transform.a.v[0],transform.a.v[1],transform.a.v[2]);};RepeaterModifier.prototype.init=function(elem,arr,pos,elemsData){this.elem=elem;this.arr=arr;this.pos=pos;this.elemsData=elemsData;this._currentCopies=0;this._elements=[];this._groups=[];this.frameId=-1;this.initDynamicPropertyContainer(elem);this.initModifierProperties(elem,arr[pos]);while(pos>0){pos-=1;// this._elements.unshift(arr.splice(pos,1)[0]);
		this._elements.unshift(arr[pos]);}if(this.dynamicProperties.length){this.k=true;}else {this.getValue(true);}};RepeaterModifier.prototype.resetElements=function(elements){var i;var len=elements.length;for(i=0;i<len;i+=1){elements[i]._processed=false;if(elements[i].ty==='gr'){this.resetElements(elements[i].it);}}};RepeaterModifier.prototype.cloneElements=function(elements){var newElements=JSON.parse(JSON.stringify(elements));this.resetElements(newElements);return newElements;};RepeaterModifier.prototype.changeGroupRender=function(elements,renderFlag){var i;var len=elements.length;for(i=0;i<len;i+=1){elements[i]._render=renderFlag;if(elements[i].ty==='gr'){this.changeGroupRender(elements[i].it,renderFlag);}}};RepeaterModifier.prototype.processShapes=function(_isFirstFrame){var items;var itemsTransform;var i;var dir;var cont;var hasReloaded=false;if(this._mdf||_isFirstFrame){var copies=Math.ceil(this.c.v);if(this._groups.length<copies){while(this._groups.length<copies){var group={it:this.cloneElements(this._elements),ty:'gr'};group.it.push({a:{a:0,ix:1,k:[0,0]},nm:'Transform',o:{a:0,ix:7,k:100},p:{a:0,ix:2,k:[0,0]},r:{a:1,ix:6,k:[{s:0,e:0,t:0},{s:0,e:0,t:1}]},s:{a:0,ix:3,k:[100,100]},sa:{a:0,ix:5,k:0},sk:{a:0,ix:4,k:0},ty:'tr'});this.arr.splice(0,0,group);this._groups.splice(0,0,group);this._currentCopies+=1;}this.elem.reloadShapes();hasReloaded=true;}cont=0;var renderFlag;for(i=0;i<=this._groups.length-1;i+=1){renderFlag=cont<copies;this._groups[i]._render=renderFlag;this.changeGroupRender(this._groups[i].it,renderFlag);if(!renderFlag){var elems=this.elemsData[i].it;var transformData=elems[elems.length-1];if(transformData.transform.op.v!==0){transformData.transform.op._mdf=true;transformData.transform.op.v=0;}else {transformData.transform.op._mdf=false;}}cont+=1;}this._currentCopies=copies;/// /
		var offset=this.o.v;var offsetModulo=offset%1;var roundOffset=offset>0?Math.floor(offset):Math.ceil(offset);var pProps=this.pMatrix.props;var rProps=this.rMatrix.props;var sProps=this.sMatrix.props;this.pMatrix.reset();this.rMatrix.reset();this.sMatrix.reset();this.tMatrix.reset();this.matrix.reset();var iteration=0;if(offset>0){while(iteration<roundOffset){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,false);iteration+=1;}if(offsetModulo){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,offsetModulo,false);iteration+=offsetModulo;}}else if(offset<0){while(iteration>roundOffset){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,true);iteration-=1;}if(offsetModulo){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-offsetModulo,true);iteration-=offsetModulo;}}i=this.data.m===1?0:this._currentCopies-1;dir=this.data.m===1?1:-1;cont=this._currentCopies;var j;var jLen;while(cont){items=this.elemsData[i].it;itemsTransform=items[items.length-1].transform.mProps.v.props;jLen=itemsTransform.length;items[items.length-1].transform.mProps._mdf=true;items[items.length-1].transform.op._mdf=true;items[items.length-1].transform.op.v=this._currentCopies===1?this.so.v:this.so.v+(this.eo.v-this.so.v)*(i/(this._currentCopies-1));if(iteration!==0){if(i!==0&&dir===1||i!==this._currentCopies-1&&dir===-1){this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,false);}this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);for(j=0;j<jLen;j+=1){itemsTransform[j]=this.matrix.props[j];}this.matrix.reset();}else {this.matrix.reset();for(j=0;j<jLen;j+=1){itemsTransform[j]=this.matrix.props[j];}}iteration+=1;cont-=1;i+=dir;}}else {cont=this._currentCopies;i=0;dir=1;while(cont){items=this.elemsData[i].it;itemsTransform=items[items.length-1].transform.mProps.v.props;items[items.length-1].transform.mProps._mdf=false;items[items.length-1].transform.op._mdf=false;cont-=1;i+=dir;}}return hasReloaded;};RepeaterModifier.prototype.addShape=function(){};function RoundCornersModifier(){}extendPrototype([ShapeModifier],RoundCornersModifier);RoundCornersModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.rd=PropertyFactory.getProp(elem,data.r,0,null,this);this._isAnimated=!!this.rd.effectsSequence.length;};RoundCornersModifier.prototype.processPath=function(path,round){var clonedPath=shapePool.newElement();clonedPath.c=path.c;var i;var len=path._length;var currentV;var currentI;var currentO;var closerV;var distance;var newPosPerc;var index=0;var vX;var vY;var oX;var oY;var iX;var iY;for(i=0;i<len;i+=1){currentV=path.v[i];currentO=path.o[i];currentI=path.i[i];if(currentV[0]===currentO[0]&&currentV[1]===currentO[1]&&currentV[0]===currentI[0]&&currentV[1]===currentI[1]){if((i===0||i===len-1)&&!path.c){clonedPath.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);/* clonedPath.v[index] = currentV;
		                  clonedPath.o[index] = currentO;
		                  clonedPath.i[index] = currentI; */index+=1;}else {if(i===0){closerV=path.v[len-1];}else {closerV=path.v[i-1];}distance=Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));newPosPerc=distance?Math.min(distance/2,round)/distance:0;iX=currentV[0]+(closerV[0]-currentV[0])*newPosPerc;vX=iX;iY=currentV[1]-(currentV[1]-closerV[1])*newPosPerc;vY=iY;oX=vX-(vX-currentV[0])*roundCorner;oY=vY-(vY-currentV[1])*roundCorner;clonedPath.setTripleAt(vX,vY,oX,oY,iX,iY,index);index+=1;if(i===len-1){closerV=path.v[0];}else {closerV=path.v[i+1];}distance=Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));newPosPerc=distance?Math.min(distance/2,round)/distance:0;oX=currentV[0]+(closerV[0]-currentV[0])*newPosPerc;vX=oX;oY=currentV[1]+(closerV[1]-currentV[1])*newPosPerc;vY=oY;iX=vX-(vX-currentV[0])*roundCorner;iY=vY-(vY-currentV[1])*roundCorner;clonedPath.setTripleAt(vX,vY,oX,oY,iX,iY,index);index+=1;}}else {clonedPath.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);index+=1;}}return clonedPath;};RoundCornersModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var rd=this.rd.v;if(rd!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],rd));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};function floatEqual(a,b){return Math.abs(a-b)*100000<=Math.min(Math.abs(a),Math.abs(b));}function floatZero(f){return Math.abs(f)<=0.00001;}function lerp(p0,p1,amount){return p0*(1-amount)+p1*amount;}function lerpPoint(p0,p1,amount){return [lerp(p0[0],p1[0],amount),lerp(p0[1],p1[1],amount)];}function quadRoots(a,b,c){// no root
		if(a===0)return [];var s=b*b-4*a*c;// Complex roots
		if(s<0)return [];var singleRoot=-b/(2*a);// 1 root
		if(s===0)return [singleRoot];var delta=Math.sqrt(s)/(2*a);// 2 roots
		return [singleRoot-delta,singleRoot+delta];}function polynomialCoefficients(p0,p1,p2,p3){return [-p0+3*p1-3*p2+p3,3*p0-6*p1+3*p2,-3*p0+3*p1,p0];}function singlePoint(p){return new PolynomialBezier(p,p,p,p,false);}function PolynomialBezier(p0,p1,p2,p3,linearize){if(linearize&&pointEqual(p0,p1)){p1=lerpPoint(p0,p3,1/3);}if(linearize&&pointEqual(p2,p3)){p2=lerpPoint(p0,p3,2/3);}var coeffx=polynomialCoefficients(p0[0],p1[0],p2[0],p3[0]);var coeffy=polynomialCoefficients(p0[1],p1[1],p2[1],p3[1]);this.a=[coeffx[0],coeffy[0]];this.b=[coeffx[1],coeffy[1]];this.c=[coeffx[2],coeffy[2]];this.d=[coeffx[3],coeffy[3]];this.points=[p0,p1,p2,p3];}PolynomialBezier.prototype.point=function(t){return [((this.a[0]*t+this.b[0])*t+this.c[0])*t+this.d[0],((this.a[1]*t+this.b[1])*t+this.c[1])*t+this.d[1]];};PolynomialBezier.prototype.derivative=function(t){return [(3*t*this.a[0]+2*this.b[0])*t+this.c[0],(3*t*this.a[1]+2*this.b[1])*t+this.c[1]];};PolynomialBezier.prototype.tangentAngle=function(t){var p=this.derivative(t);return Math.atan2(p[1],p[0]);};PolynomialBezier.prototype.normalAngle=function(t){var p=this.derivative(t);return Math.atan2(p[0],p[1]);};PolynomialBezier.prototype.inflectionPoints=function(){var denom=this.a[1]*this.b[0]-this.a[0]*this.b[1];if(floatZero(denom))return [];var tcusp=-0.5*(this.a[1]*this.c[0]-this.a[0]*this.c[1])/denom;var square=tcusp*tcusp-1/3*(this.b[1]*this.c[0]-this.b[0]*this.c[1])/denom;if(square<0)return [];var root=Math.sqrt(square);if(floatZero(root)){if(root>0&&root<1)return [tcusp];return [];}return [tcusp-root,tcusp+root].filter(function(r){return r>0&&r<1;});};PolynomialBezier.prototype.split=function(t){if(t<=0)return [singlePoint(this.points[0]),this];if(t>=1)return [this,singlePoint(this.points[this.points.length-1])];var p10=lerpPoint(this.points[0],this.points[1],t);var p11=lerpPoint(this.points[1],this.points[2],t);var p12=lerpPoint(this.points[2],this.points[3],t);var p20=lerpPoint(p10,p11,t);var p21=lerpPoint(p11,p12,t);var p3=lerpPoint(p20,p21,t);return [new PolynomialBezier(this.points[0],p10,p20,p3,true),new PolynomialBezier(p3,p21,p12,this.points[3],true)];};function extrema(bez,comp){var min=bez.points[0][comp];var max=bez.points[bez.points.length-1][comp];if(min>max){var e=max;max=min;min=e;}// Derivative roots to find min/max
		var f=quadRoots(3*bez.a[comp],2*bez.b[comp],bez.c[comp]);for(var i=0;i<f.length;i+=1){if(f[i]>0&&f[i]<1){var val=bez.point(f[i])[comp];if(val<min)min=val;else if(val>max)max=val;}}return {min:min,max:max};}PolynomialBezier.prototype.bounds=function(){return {x:extrema(this,0),y:extrema(this,1)};};PolynomialBezier.prototype.boundingBox=function(){var bounds=this.bounds();return {left:bounds.x.min,right:bounds.x.max,top:bounds.y.min,bottom:bounds.y.max,width:bounds.x.max-bounds.x.min,height:bounds.y.max-bounds.y.min,cx:(bounds.x.max+bounds.x.min)/2,cy:(bounds.y.max+bounds.y.min)/2};};function intersectData(bez,t1,t2){var box=bez.boundingBox();return {cx:box.cx,cy:box.cy,width:box.width,height:box.height,bez:bez,t:(t1+t2)/2,t1:t1,t2:t2};}function splitData(data){var split=data.bez.split(0.5);return [intersectData(split[0],data.t1,data.t),intersectData(split[1],data.t,data.t2)];}function boxIntersect(b1,b2){return Math.abs(b1.cx-b2.cx)*2<b1.width+b2.width&&Math.abs(b1.cy-b2.cy)*2<b1.height+b2.height;}function intersectsImpl(d1,d2,depth,tolerance,intersections,maxRecursion){if(!boxIntersect(d1,d2))return;if(depth>=maxRecursion||d1.width<=tolerance&&d1.height<=tolerance&&d2.width<=tolerance&&d2.height<=tolerance){intersections.push([d1.t,d2.t]);return;}var d1s=splitData(d1);var d2s=splitData(d2);intersectsImpl(d1s[0],d2s[0],depth+1,tolerance,intersections,maxRecursion);intersectsImpl(d1s[0],d2s[1],depth+1,tolerance,intersections,maxRecursion);intersectsImpl(d1s[1],d2s[0],depth+1,tolerance,intersections,maxRecursion);intersectsImpl(d1s[1],d2s[1],depth+1,tolerance,intersections,maxRecursion);}PolynomialBezier.prototype.intersections=function(other,tolerance,maxRecursion){if(tolerance===undefined)tolerance=2;if(maxRecursion===undefined)maxRecursion=7;var intersections=[];intersectsImpl(intersectData(this,0,1),intersectData(other,0,1),0,tolerance,intersections,maxRecursion);return intersections;};PolynomialBezier.shapeSegment=function(shapePath,index){var nextIndex=(index+1)%shapePath.length();return new PolynomialBezier(shapePath.v[index],shapePath.o[index],shapePath.i[nextIndex],shapePath.v[nextIndex],true);};PolynomialBezier.shapeSegmentInverted=function(shapePath,index){var nextIndex=(index+1)%shapePath.length();return new PolynomialBezier(shapePath.v[nextIndex],shapePath.i[nextIndex],shapePath.o[index],shapePath.v[index],true);};function crossProduct(a,b){return [a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];}function lineIntersection(start1,end1,start2,end2){var v1=[start1[0],start1[1],1];var v2=[end1[0],end1[1],1];var v3=[start2[0],start2[1],1];var v4=[end2[0],end2[1],1];var r=crossProduct(crossProduct(v1,v2),crossProduct(v3,v4));if(floatZero(r[2]))return null;return [r[0]/r[2],r[1]/r[2]];}function polarOffset(p,angle,length){return [p[0]+Math.cos(angle)*length,p[1]-Math.sin(angle)*length];}function pointDistance(p1,p2){return Math.hypot(p1[0]-p2[0],p1[1]-p2[1]);}function pointEqual(p1,p2){return floatEqual(p1[0],p2[0])&&floatEqual(p1[1],p2[1]);}function ZigZagModifier(){}extendPrototype([ShapeModifier],ZigZagModifier);ZigZagModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.amplitude=PropertyFactory.getProp(elem,data.s,0,null,this);this.frequency=PropertyFactory.getProp(elem,data.r,0,null,this);this.pointsType=PropertyFactory.getProp(elem,data.pt,0,null,this);this._isAnimated=this.amplitude.effectsSequence.length!==0||this.frequency.effectsSequence.length!==0||this.pointsType.effectsSequence.length!==0;};function setPoint(outputBezier,point,angle,direction,amplitude,outAmplitude,inAmplitude){var angO=angle-Math.PI/2;var angI=angle+Math.PI/2;var px=point[0]+Math.cos(angle)*direction*amplitude;var py=point[1]-Math.sin(angle)*direction*amplitude;outputBezier.setTripleAt(px,py,px+Math.cos(angO)*outAmplitude,py-Math.sin(angO)*outAmplitude,px+Math.cos(angI)*inAmplitude,py-Math.sin(angI)*inAmplitude,outputBezier.length());}function getPerpendicularVector(pt1,pt2){var vector=[pt2[0]-pt1[0],pt2[1]-pt1[1]];var rot=-Math.PI*0.5;var rotatedVector=[Math.cos(rot)*vector[0]-Math.sin(rot)*vector[1],Math.sin(rot)*vector[0]+Math.cos(rot)*vector[1]];return rotatedVector;}function getProjectingAngle(path,cur){var prevIndex=cur===0?path.length()-1:cur-1;var nextIndex=(cur+1)%path.length();var prevPoint=path.v[prevIndex];var nextPoint=path.v[nextIndex];var pVector=getPerpendicularVector(prevPoint,nextPoint);return Math.atan2(0,1)-Math.atan2(pVector[1],pVector[0]);}function zigZagCorner(outputBezier,path,cur,amplitude,frequency,pointType,direction){var angle=getProjectingAngle(path,cur);var point=path.v[cur%path._length];var prevPoint=path.v[cur===0?path._length-1:cur-1];var nextPoint=path.v[(cur+1)%path._length];var prevDist=pointType===2?Math.sqrt(Math.pow(point[0]-prevPoint[0],2)+Math.pow(point[1]-prevPoint[1],2)):0;var nextDist=pointType===2?Math.sqrt(Math.pow(point[0]-nextPoint[0],2)+Math.pow(point[1]-nextPoint[1],2)):0;setPoint(outputBezier,path.v[cur%path._length],angle,direction,amplitude,nextDist/((frequency+1)*2),prevDist/((frequency+1)*2));}function zigZagSegment(outputBezier,segment,amplitude,frequency,pointType,direction){for(var i=0;i<frequency;i+=1){var t=(i+1)/(frequency+1);var dist=pointType===2?Math.sqrt(Math.pow(segment.points[3][0]-segment.points[0][0],2)+Math.pow(segment.points[3][1]-segment.points[0][1],2)):0;var angle=segment.normalAngle(t);var point=segment.point(t);setPoint(outputBezier,point,angle,direction,amplitude,dist/((frequency+1)*2),dist/((frequency+1)*2));direction=-direction;}return direction;}ZigZagModifier.prototype.processPath=function(path,amplitude,frequency,pointType){var count=path._length;var clonedPath=shapePool.newElement();clonedPath.c=path.c;if(!path.c){count-=1;}if(count===0)return clonedPath;var direction=-1;var segment=PolynomialBezier.shapeSegment(path,0);zigZagCorner(clonedPath,path,0,amplitude,frequency,pointType,direction);for(var i=0;i<count;i+=1){direction=zigZagSegment(clonedPath,segment,amplitude,frequency,pointType,-direction);if(i===count-1&&!path.c){segment=null;}else {segment=PolynomialBezier.shapeSegment(path,(i+1)%count);}zigZagCorner(clonedPath,path,i+1,amplitude,frequency,pointType,direction);}return clonedPath;};ZigZagModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var amplitude=this.amplitude.v;var frequency=Math.max(0,Math.round(this.frequency.v));var pointType=this.pointsType.v;if(amplitude!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],amplitude,frequency,pointType));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};function linearOffset(p1,p2,amount){var angle=Math.atan2(p2[0]-p1[0],p2[1]-p1[1]);return [polarOffset(p1,angle,amount),polarOffset(p2,angle,amount)];}function offsetSegment(segment,amount){var p0;var p1a;var p1b;var p2b;var p2a;var p3;var e;e=linearOffset(segment.points[0],segment.points[1],amount);p0=e[0];p1a=e[1];e=linearOffset(segment.points[1],segment.points[2],amount);p1b=e[0];p2b=e[1];e=linearOffset(segment.points[2],segment.points[3],amount);p2a=e[0];p3=e[1];var p1=lineIntersection(p0,p1a,p1b,p2b);if(p1===null)p1=p1a;var p2=lineIntersection(p2a,p3,p1b,p2b);if(p2===null)p2=p2a;return new PolynomialBezier(p0,p1,p2,p3);}function joinLines(outputBezier,seg1,seg2,lineJoin,miterLimit){var p0=seg1.points[3];var p1=seg2.points[0];// Bevel
		if(lineJoin===3)return p0;// Connected, they don't need a joint
		if(pointEqual(p0,p1))return p0;// Round
		if(lineJoin===2){var angleOut=-seg1.tangentAngle(1);var angleIn=-seg2.tangentAngle(0)+Math.PI;var center=lineIntersection(p0,polarOffset(p0,angleOut+Math.PI/2,100),p1,polarOffset(p1,angleOut+Math.PI/2,100));var radius=center?pointDistance(center,p0):pointDistance(p0,p1)/2;var tan=polarOffset(p0,angleOut,2*radius*roundCorner);outputBezier.setXYAt(tan[0],tan[1],'o',outputBezier.length()-1);tan=polarOffset(p1,angleIn,2*radius*roundCorner);outputBezier.setTripleAt(p1[0],p1[1],p1[0],p1[1],tan[0],tan[1],outputBezier.length());return p1;}// Miter
		var t0=pointEqual(p0,seg1.points[2])?seg1.points[0]:seg1.points[2];var t1=pointEqual(p1,seg2.points[1])?seg2.points[3]:seg2.points[1];var intersection=lineIntersection(t0,p0,p1,t1);if(intersection&&pointDistance(intersection,p0)<miterLimit){outputBezier.setTripleAt(intersection[0],intersection[1],intersection[0],intersection[1],intersection[0],intersection[1],outputBezier.length());return intersection;}return p0;}function getIntersection(a,b){var intersect=a.intersections(b);if(intersect.length&&floatEqual(intersect[0][0],1))intersect.shift();if(intersect.length)return intersect[0];return null;}function pruneSegmentIntersection(a,b){var outa=a.slice();var outb=b.slice();var intersect=getIntersection(a[a.length-1],b[0]);if(intersect){outa[a.length-1]=a[a.length-1].split(intersect[0])[0];outb[0]=b[0].split(intersect[1])[1];}if(a.length>1&&b.length>1){intersect=getIntersection(a[0],b[b.length-1]);if(intersect){return [[a[0].split(intersect[0])[0]],[b[b.length-1].split(intersect[1])[1]]];}}return [outa,outb];}function pruneIntersections(segments){var e;for(var i=1;i<segments.length;i+=1){e=pruneSegmentIntersection(segments[i-1],segments[i]);segments[i-1]=e[0];segments[i]=e[1];}if(segments.length>1){e=pruneSegmentIntersection(segments[segments.length-1],segments[0]);segments[segments.length-1]=e[0];segments[0]=e[1];}return segments;}function offsetSegmentSplit(segment,amount){/*
		      We split each bezier segment into smaller pieces based
		      on inflection points, this ensures the control point
		      polygon is convex.
		        (A cubic bezier can have none, one, or two inflection points)
		    */var flex=segment.inflectionPoints();var left;var right;var split;var mid;if(flex.length===0){return [offsetSegment(segment,amount)];}if(flex.length===1||floatEqual(flex[1],1)){split=segment.split(flex[0]);left=split[0];right=split[1];return [offsetSegment(left,amount),offsetSegment(right,amount)];}split=segment.split(flex[0]);left=split[0];var t=(flex[1]-flex[0])/(1-flex[0]);split=split[1].split(t);mid=split[0];right=split[1];return [offsetSegment(left,amount),offsetSegment(mid,amount),offsetSegment(right,amount)];}function OffsetPathModifier(){}extendPrototype([ShapeModifier],OffsetPathModifier);OffsetPathModifier.prototype.initModifierProperties=function(elem,data){this.getValue=this.processKeys;this.amount=PropertyFactory.getProp(elem,data.a,0,null,this);this.miterLimit=PropertyFactory.getProp(elem,data.ml,0,null,this);this.lineJoin=data.lj;this._isAnimated=this.amount.effectsSequence.length!==0;};OffsetPathModifier.prototype.processPath=function(inputBezier,amount,lineJoin,miterLimit){var outputBezier=shapePool.newElement();outputBezier.c=inputBezier.c;var count=inputBezier.length();if(!inputBezier.c){count-=1;}var i;var j;var segment;var multiSegments=[];for(i=0;i<count;i+=1){segment=PolynomialBezier.shapeSegment(inputBezier,i);multiSegments.push(offsetSegmentSplit(segment,amount));}if(!inputBezier.c){for(i=count-1;i>=0;i-=1){segment=PolynomialBezier.shapeSegmentInverted(inputBezier,i);multiSegments.push(offsetSegmentSplit(segment,amount));}}multiSegments=pruneIntersections(multiSegments);// Add bezier segments to the output and apply line joints
		var lastPoint=null;var lastSeg=null;for(i=0;i<multiSegments.length;i+=1){var multiSegment=multiSegments[i];if(lastSeg)lastPoint=joinLines(outputBezier,lastSeg,multiSegment[0],lineJoin,miterLimit);lastSeg=multiSegment[multiSegment.length-1];for(j=0;j<multiSegment.length;j+=1){segment=multiSegment[j];if(lastPoint&&pointEqual(segment.points[0],lastPoint)){outputBezier.setXYAt(segment.points[1][0],segment.points[1][1],'o',outputBezier.length()-1);}else {outputBezier.setTripleAt(segment.points[0][0],segment.points[0][1],segment.points[1][0],segment.points[1][1],segment.points[0][0],segment.points[0][1],outputBezier.length());}outputBezier.setTripleAt(segment.points[3][0],segment.points[3][1],segment.points[3][0],segment.points[3][1],segment.points[2][0],segment.points[2][1],outputBezier.length());lastPoint=segment.points[3];}}if(multiSegments.length)joinLines(outputBezier,lastSeg,multiSegments[0][0],lineJoin,miterLimit);return outputBezier;};OffsetPathModifier.prototype.processShapes=function(_isFirstFrame){var shapePaths;var i;var len=this.shapes.length;var j;var jLen;var amount=this.amount.v;var miterLimit=this.miterLimit.v;var lineJoin=this.lineJoin;if(amount!==0){var shapeData;var localShapeCollection;for(i=0;i<len;i+=1){shapeData=this.shapes[i];localShapeCollection=shapeData.localShapeCollection;if(!(!shapeData.shape._mdf&&!this._mdf&&!_isFirstFrame)){localShapeCollection.releaseShapes();shapeData.shape._mdf=true;shapePaths=shapeData.shape.paths.shapes;jLen=shapeData.shape.paths._length;for(j=0;j<jLen;j+=1){localShapeCollection.addShape(this.processPath(shapePaths[j],amount,lineJoin,miterLimit));}}shapeData.shape.paths=shapeData.localShapeCollection;}}if(!this.dynamicProperties.length){this._mdf=false;}};function getFontProperties(fontData){var styles=fontData.fStyle?fontData.fStyle.split(' '):[];var fWeight='normal';var fStyle='normal';var len=styles.length;var styleName;for(var i=0;i<len;i+=1){styleName=styles[i].toLowerCase();switch(styleName){case'italic':fStyle='italic';break;case'bold':fWeight='700';break;case'black':fWeight='900';break;case'medium':fWeight='500';break;case'regular':case'normal':fWeight='400';break;case'light':case'thin':fWeight='200';break;}}return {style:fStyle,weight:fontData.fWeight||fWeight};}var FontManager=function(){var maxWaitingTime=5000;var emptyChar={w:0,size:0,shapes:[],data:{shapes:[]}};var combinedCharacters=[];// Hindi characters
		combinedCharacters=combinedCharacters.concat([2304,2305,2306,2307,2362,2363,2364,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2387,2388,2389,2390,2391,2402,2403]);var BLACK_FLAG_CODE_POINT=127988;var CANCEL_TAG_CODE_POINT=917631;var A_TAG_CODE_POINT=917601;var Z_TAG_CODE_POINT=917626;var VARIATION_SELECTOR_16_CODE_POINT=65039;var ZERO_WIDTH_JOINER_CODE_POINT=8205;var REGIONAL_CHARACTER_A_CODE_POINT=127462;var REGIONAL_CHARACTER_Z_CODE_POINT=127487;var surrogateModifiers=['d83cdffb','d83cdffc','d83cdffd','d83cdffe','d83cdfff'];function trimFontOptions(font){var familyArray=font.split(',');var i;var len=familyArray.length;var enabledFamilies=[];for(i=0;i<len;i+=1){if(familyArray[i]!=='sans-serif'&&familyArray[i]!=='monospace'){enabledFamilies.push(familyArray[i]);}}return enabledFamilies.join(',');}function setUpNode(font,family){var parentNode=createTag('span');// Node is invisible to screen readers.
		parentNode.setAttribute('aria-hidden',true);parentNode.style.fontFamily=family;var node=createTag('span');// Characters that vary significantly among different fonts
		node.innerText='giItT1WQy@!-/#';// Visible - so we can measure it - but not on the screen
		parentNode.style.position='absolute';parentNode.style.left='-10000px';parentNode.style.top='-10000px';// Large font size makes even subtle changes obvious
		parentNode.style.fontSize='300px';// Reset any font properties
		parentNode.style.fontVariant='normal';parentNode.style.fontStyle='normal';parentNode.style.fontWeight='normal';parentNode.style.letterSpacing='0';parentNode.appendChild(node);document.body.appendChild(parentNode);// Remember width with no applied web font
		var width=node.offsetWidth;node.style.fontFamily=trimFontOptions(font)+', '+family;return {node:node,w:width,parent:parentNode};}function checkLoadedFonts(){var i;var len=this.fonts.length;var node;var w;var loadedCount=len;for(i=0;i<len;i+=1){if(this.fonts[i].loaded){loadedCount-=1;}else if(this.fonts[i].fOrigin==='n'||this.fonts[i].origin===0){this.fonts[i].loaded=true;}else {node=this.fonts[i].monoCase.node;w=this.fonts[i].monoCase.w;if(node.offsetWidth!==w){loadedCount-=1;this.fonts[i].loaded=true;}else {node=this.fonts[i].sansCase.node;w=this.fonts[i].sansCase.w;if(node.offsetWidth!==w){loadedCount-=1;this.fonts[i].loaded=true;}}if(this.fonts[i].loaded){this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);}}}if(loadedCount!==0&&Date.now()-this.initTime<maxWaitingTime){setTimeout(this.checkLoadedFontsBinded,20);}else {setTimeout(this.setIsLoadedBinded,10);}}function createHelper(fontData,def){var engine=document.body&&def?'svg':'canvas';var helper;var fontProps=getFontProperties(fontData);if(engine==='svg'){var tHelper=createNS('text');tHelper.style.fontSize='100px';// tHelper.style.fontFamily = fontData.fFamily;
		tHelper.setAttribute('font-family',fontData.fFamily);tHelper.setAttribute('font-style',fontProps.style);tHelper.setAttribute('font-weight',fontProps.weight);tHelper.textContent='1';if(fontData.fClass){tHelper.style.fontFamily='inherit';tHelper.setAttribute('class',fontData.fClass);}else {tHelper.style.fontFamily=fontData.fFamily;}def.appendChild(tHelper);helper=tHelper;}else {var tCanvasHelper=new OffscreenCanvas(500,500).getContext('2d');tCanvasHelper.font=fontProps.style+' '+fontProps.weight+' 100px '+fontData.fFamily;helper=tCanvasHelper;}function measure(text){if(engine==='svg'){helper.textContent=text;return helper.getComputedTextLength();}return helper.measureText(text).width;}return {measureText:measure};}function addFonts(fontData,defs){if(!fontData){this.isLoaded=true;return;}if(this.chars){this.isLoaded=true;this.fonts=fontData.list;return;}if(!document.body){this.isLoaded=true;fontData.list.forEach(function(data){data.helper=createHelper(data);data.cache={};});this.fonts=fontData.list;return;}var fontArr=fontData.list;var i;var len=fontArr.length;var _pendingFonts=len;for(i=0;i<len;i+=1){var shouldLoadFont=true;var loadedSelector;var j;fontArr[i].loaded=false;fontArr[i].monoCase=setUpNode(fontArr[i].fFamily,'monospace');fontArr[i].sansCase=setUpNode(fontArr[i].fFamily,'sans-serif');if(!fontArr[i].fPath){fontArr[i].loaded=true;_pendingFonts-=1;}else if(fontArr[i].fOrigin==='p'||fontArr[i].origin===3){loadedSelector=document.querySelectorAll('style[f-forigin="p"][f-family="'+fontArr[i].fFamily+'"], style[f-origin="3"][f-family="'+fontArr[i].fFamily+'"]');if(loadedSelector.length>0){shouldLoadFont=false;}if(shouldLoadFont){var s=createTag('style');s.setAttribute('f-forigin',fontArr[i].fOrigin);s.setAttribute('f-origin',fontArr[i].origin);s.setAttribute('f-family',fontArr[i].fFamily);s.type='text/css';s.innerText='@font-face {font-family: '+fontArr[i].fFamily+"; font-style: normal; src: url('"+fontArr[i].fPath+"');}";defs.appendChild(s);}}else if(fontArr[i].fOrigin==='g'||fontArr[i].origin===1){loadedSelector=document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');for(j=0;j<loadedSelector.length;j+=1){if(loadedSelector[j].href.indexOf(fontArr[i].fPath)!==-1){// Font is already loaded
		shouldLoadFont=false;}}if(shouldLoadFont){var l=createTag('link');l.setAttribute('f-forigin',fontArr[i].fOrigin);l.setAttribute('f-origin',fontArr[i].origin);l.type='text/css';l.rel='stylesheet';l.href=fontArr[i].fPath;document.body.appendChild(l);}}else if(fontArr[i].fOrigin==='t'||fontArr[i].origin===2){loadedSelector=document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');for(j=0;j<loadedSelector.length;j+=1){if(fontArr[i].fPath===loadedSelector[j].src){// Font is already loaded
		shouldLoadFont=false;}}if(shouldLoadFont){var sc=createTag('link');sc.setAttribute('f-forigin',fontArr[i].fOrigin);sc.setAttribute('f-origin',fontArr[i].origin);sc.setAttribute('rel','stylesheet');sc.setAttribute('href',fontArr[i].fPath);defs.appendChild(sc);}}fontArr[i].helper=createHelper(fontArr[i],defs);fontArr[i].cache={};this.fonts.push(fontArr[i]);}if(_pendingFonts===0){this.isLoaded=true;}else {// On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
		// Adding this timeout seems to fix it
		setTimeout(this.checkLoadedFonts.bind(this),100);}}function addChars(chars){if(!chars){return;}if(!this.chars){this.chars=[];}var i;var len=chars.length;var j;var jLen=this.chars.length;var found;for(i=0;i<len;i+=1){j=0;found=false;while(j<jLen){if(this.chars[j].style===chars[i].style&&this.chars[j].fFamily===chars[i].fFamily&&this.chars[j].ch===chars[i].ch){found=true;}j+=1;}if(!found){this.chars.push(chars[i]);jLen+=1;}}}function getCharData(_char,style,font){var i=0;var len=this.chars.length;while(i<len){if(this.chars[i].ch===_char&&this.chars[i].style===style&&this.chars[i].fFamily===font){return this.chars[i];}i+=1;}if((typeof _char==='string'&&_char.charCodeAt(0)!==13||!_char)&&console&&console.warn// eslint-disable-line no-console
		&&!this._warned){this._warned=true;console.warn('Missing character from exported characters list: ',_char,style,font);// eslint-disable-line no-console
		}return emptyChar;}function measureText(_char2,fontName,size){var fontData=this.getFontByName(fontName);// Using the char instead of char.charCodeAt(0)
		// to avoid collisions between equal chars
		var index=_char2;if(!fontData.cache[index]){var tHelper=fontData.helper;if(_char2===' '){var doubleSize=tHelper.measureText('|'+_char2+'|');var singleSize=tHelper.measureText('||');fontData.cache[index]=(doubleSize-singleSize)/100;}else {fontData.cache[index]=tHelper.measureText(_char2)/100;}}return fontData.cache[index]*size;}function getFontByName(name){var i=0;var len=this.fonts.length;while(i<len){if(this.fonts[i].fName===name){return this.fonts[i];}i+=1;}return this.fonts[0];}function getCodePoint(string){var codePoint=0;var first=string.charCodeAt(0);if(first>=0xD800&&first<=0xDBFF){var second=string.charCodeAt(1);if(second>=0xDC00&&second<=0xDFFF){codePoint=(first-0xD800)*0x400+second-0xDC00+0x10000;}}return codePoint;}// Skin tone modifiers
		function isModifier(firstCharCode,secondCharCode){var sum=firstCharCode.toString(16)+secondCharCode.toString(16);return surrogateModifiers.indexOf(sum)!==-1;}function isZeroWidthJoiner(charCode){return charCode===ZERO_WIDTH_JOINER_CODE_POINT;}// This codepoint may change the appearance of the preceding character.
		// If that is a symbol, dingbat or emoji, U+FE0F forces it to be rendered
		// as a colorful image as compared to a monochrome text variant.
		function isVariationSelector(charCode){return charCode===VARIATION_SELECTOR_16_CODE_POINT;}// The regional indicator symbols are a set of 26 alphabetic Unicode
		/// characters (A–Z) intended to be used to encode ISO 3166-1 alpha-2
		// two-letter country codes in a way that allows optional special treatment.
		function isRegionalCode(string){var codePoint=getCodePoint(string);if(codePoint>=REGIONAL_CHARACTER_A_CODE_POINT&&codePoint<=REGIONAL_CHARACTER_Z_CODE_POINT){return true;}return false;}// Some Emoji implementations represent combinations of
		// two “regional indicator” letters as a single flag symbol.
		function isFlagEmoji(string){return isRegionalCode(string.substr(0,2))&&isRegionalCode(string.substr(2,2));}function isCombinedCharacter(_char3){return combinedCharacters.indexOf(_char3)!==-1;}// Regional flags start with a BLACK_FLAG_CODE_POINT
		// folowed by 5 chars in the TAG range
		// and end with a CANCEL_TAG_CODE_POINT
		function isRegionalFlag(text,index){var codePoint=getCodePoint(text.substr(index,2));if(codePoint!==BLACK_FLAG_CODE_POINT){return false;}var count=0;index+=2;while(count<5){codePoint=getCodePoint(text.substr(index,2));if(codePoint<A_TAG_CODE_POINT||codePoint>Z_TAG_CODE_POINT){return false;}count+=1;index+=2;}return getCodePoint(text.substr(index,2))===CANCEL_TAG_CODE_POINT;}function setIsLoaded(){this.isLoaded=true;}var Font=function Font(){this.fonts=[];this.chars=null;this.typekitLoaded=0;this.isLoaded=false;this._warned=false;this.initTime=Date.now();this.setIsLoadedBinded=this.setIsLoaded.bind(this);this.checkLoadedFontsBinded=this.checkLoadedFonts.bind(this);};Font.isModifier=isModifier;Font.isZeroWidthJoiner=isZeroWidthJoiner;Font.isFlagEmoji=isFlagEmoji;Font.isRegionalCode=isRegionalCode;Font.isCombinedCharacter=isCombinedCharacter;Font.isRegionalFlag=isRegionalFlag;Font.isVariationSelector=isVariationSelector;Font.BLACK_FLAG_CODE_POINT=BLACK_FLAG_CODE_POINT;var fontPrototype={addChars:addChars,addFonts:addFonts,getCharData:getCharData,getFontByName:getFontByName,measureText:measureText,checkLoadedFonts:checkLoadedFonts,setIsLoaded:setIsLoaded};Font.prototype=fontPrototype;return Font;}();function SlotManager(animationData){this.animationData=animationData;}SlotManager.prototype.getProp=function(data){if(this.animationData.slots&&this.animationData.slots[data.sid]){return Object.assign(data,this.animationData.slots[data.sid].p);}return data;};function slotFactory(animationData){return new SlotManager(animationData);}function RenderableElement(){}RenderableElement.prototype={initRenderable:function initRenderable(){// layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
		this.isInRange=false;// layer's display state
		this.hidden=false;// If layer's transparency equals 0, it can be hidden
		this.isTransparent=false;// list of animated components
		this.renderableComponents=[];},addRenderableComponent:function addRenderableComponent(component){if(this.renderableComponents.indexOf(component)===-1){this.renderableComponents.push(component);}},removeRenderableComponent:function removeRenderableComponent(component){if(this.renderableComponents.indexOf(component)!==-1){this.renderableComponents.splice(this.renderableComponents.indexOf(component),1);}},prepareRenderableFrame:function prepareRenderableFrame(num){this.checkLayerLimits(num);},checkTransparency:function checkTransparency(){if(this.finalTransform.mProp.o.v<=0){if(!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent){this.isTransparent=true;this.hide();}}else if(this.isTransparent){this.isTransparent=false;this.show();}},/**
		       * @function
		       * Initializes frame related properties.
		       *
		       * @param {number} num
		       * current frame number in Layer's time
		       *
		       */checkLayerLimits:function checkLayerLimits(num){if(this.data.ip-this.data.st<=num&&this.data.op-this.data.st>num){if(this.isInRange!==true){this.globalData._mdf=true;this._mdf=true;this.isInRange=true;this.show();}}else if(this.isInRange!==false){this.globalData._mdf=true;this.isInRange=false;this.hide();}},renderRenderable:function renderRenderable(){var i;var len=this.renderableComponents.length;for(i=0;i<len;i+=1){this.renderableComponents[i].renderFrame(this._isFirstFrame);}/* this.maskManager.renderFrame(this.finalTransform.mat);
		          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */},sourceRectAtTime:function sourceRectAtTime(){return {top:0,left:0,width:100,height:100};},getLayerSize:function getLayerSize(){if(this.data.ty===5){return {w:this.data.textData.width,h:this.data.textData.height};}return {w:this.data.width,h:this.data.height};}};var getBlendMode=function(){var blendModeEnums={0:'source-over',1:'multiply',2:'screen',3:'overlay',4:'darken',5:'lighten',6:'color-dodge',7:'color-burn',8:'hard-light',9:'soft-light',10:'difference',11:'exclusion',12:'hue',13:'saturation',14:'color',15:'luminosity'};return function(mode){return blendModeEnums[mode]||'';};}();function SliderEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function AngleEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function ColorEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,1,0,container);}function PointEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,1,0,container);}function LayerIndexEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function MaskIndexEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function CheckboxEffect(data,elem,container){this.p=PropertyFactory.getProp(elem,data.v,0,0,container);}function NoValueEffect(){this.p={};}function EffectsManager(data,element){var effects=data.ef||[];this.effectElements=[];var i;var len=effects.length;var effectItem;for(i=0;i<len;i+=1){effectItem=new GroupEffect(effects[i],element);this.effectElements.push(effectItem);}}function GroupEffect(data,element){this.init(data,element);}extendPrototype([DynamicPropertyContainer],GroupEffect);GroupEffect.prototype.getValue=GroupEffect.prototype.iterateDynamicProperties;GroupEffect.prototype.init=function(data,element){this.data=data;this.effectElements=[];this.initDynamicPropertyContainer(element);var i;var len=this.data.ef.length;var eff;var effects=this.data.ef;for(i=0;i<len;i+=1){eff=null;switch(effects[i].ty){case 0:eff=new SliderEffect(effects[i],element,this);break;case 1:eff=new AngleEffect(effects[i],element,this);break;case 2:eff=new ColorEffect(effects[i],element,this);break;case 3:eff=new PointEffect(effects[i],element,this);break;case 4:case 7:eff=new CheckboxEffect(effects[i],element,this);break;case 10:eff=new LayerIndexEffect(effects[i],element,this);break;case 11:eff=new MaskIndexEffect(effects[i],element,this);break;case 5:eff=new EffectsManager(effects[i],element);break;// case 6:
		default:eff=new NoValueEffect(effects[i]);break;}if(eff){this.effectElements.push(eff);}}};function BaseElement(){}BaseElement.prototype={checkMasks:function checkMasks(){if(!this.data.hasMask){return false;}var i=0;var len=this.data.masksProperties.length;while(i<len){if(this.data.masksProperties[i].mode!=='n'&&this.data.masksProperties[i].cl!==false){return true;}i+=1;}return false;},initExpressions:function initExpressions(){var expressionsInterfaces=getExpressionInterfaces();if(!expressionsInterfaces){return;}var LayerExpressionInterface=expressionsInterfaces('layer');var EffectsExpressionInterface=expressionsInterfaces('effects');var ShapeExpressionInterface=expressionsInterfaces('shape');var TextExpressionInterface=expressionsInterfaces('text');var CompExpressionInterface=expressionsInterfaces('comp');this.layerInterface=LayerExpressionInterface(this);if(this.data.hasMask&&this.maskManager){this.layerInterface.registerMaskInterface(this.maskManager);}var effectsInterface=EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(effectsInterface);if(this.data.ty===0||this.data.xt){this.compInterface=CompExpressionInterface(this);}else if(this.data.ty===4){this.layerInterface.shapeInterface=ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);this.layerInterface.content=this.layerInterface.shapeInterface;}else if(this.data.ty===5){this.layerInterface.textInterface=TextExpressionInterface(this);this.layerInterface.text=this.layerInterface.textInterface;}},setBlendMode:function setBlendMode(){var blendModeValue=getBlendMode(this.data.bm);var elem=this.baseElement||this.layerElement;elem.style['mix-blend-mode']=blendModeValue;},initBaseData:function initBaseData(data,globalData,comp){this.globalData=globalData;this.comp=comp;this.data=data;this.layerId=createElementID();// Stretch factor for old animations missing this property.
		if(!this.data.sr){this.data.sr=1;}// effects manager
		this.effectsManager=new EffectsManager(this.data,this,this.dynamicProperties);},getType:function getType(){return this.type;},sourceRectAtTime:function sourceRectAtTime(){}};/**
		   * @file
		   * Handles element's layer frame update.
		   * Checks layer in point and out point
		   *
		   */function FrameElement(){}FrameElement.prototype={/**
		       * @function
		       * Initializes frame related properties.
		       *
		       */initFrame:function initFrame(){// set to true when inpoint is rendered
		this._isFirstFrame=false;// list of animated properties
		this.dynamicProperties=[];// If layer has been modified in current tick this will be true
		this._mdf=false;},/**
		       * @function
		       * Calculates all dynamic values
		       *
		       * @param {number} num
		       * current frame number in Layer's time
		       * @param {boolean} isVisible
		       * if layers is currently in range
		       *
		       */prepareProperties:function prepareProperties(num,isVisible){var i;var len=this.dynamicProperties.length;for(i=0;i<len;i+=1){if(isVisible||this._isParent&&this.dynamicProperties[i].propType==='transform'){this.dynamicProperties[i].getValue();if(this.dynamicProperties[i]._mdf){this.globalData._mdf=true;this._mdf=true;}}}},addDynamicProperty:function addDynamicProperty(prop){if(this.dynamicProperties.indexOf(prop)===-1){this.dynamicProperties.push(prop);}}};function FootageElement(data,globalData,comp){this.initFrame();this.initRenderable();this.assetData=globalData.getAssetData(data.refId);this.footageData=globalData.imageLoader.getAsset(this.assetData);this.initBaseData(data,globalData,comp);}FootageElement.prototype.prepareFrame=function(){};extendPrototype([RenderableElement,BaseElement,FrameElement],FootageElement);FootageElement.prototype.getBaseElement=function(){return null;};FootageElement.prototype.renderFrame=function(){};FootageElement.prototype.destroy=function(){};FootageElement.prototype.initExpressions=function(){var expressionsInterfaces=getExpressionInterfaces();if(!expressionsInterfaces){return;}var FootageInterface=expressionsInterfaces('footage');this.layerInterface=FootageInterface(this);};FootageElement.prototype.getFootageData=function(){return this.footageData;};function AudioElement(data,globalData,comp){this.initFrame();this.initRenderable();this.assetData=globalData.getAssetData(data.refId);this.initBaseData(data,globalData,comp);this._isPlaying=false;this._canPlay=false;var assetPath=this.globalData.getAssetsPath(this.assetData);this.audio=this.globalData.audioController.createAudio(assetPath);this._currentTime=0;this.globalData.audioController.addAudio(this);this._volumeMultiplier=1;this._volume=1;this._previousVolume=null;this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};this.lv=PropertyFactory.getProp(this,data.au&&data.au.lv?data.au.lv:{k:[100]},1,0.01,this);}AudioElement.prototype.prepareFrame=function(num){this.prepareRenderableFrame(num,true);this.prepareProperties(num,true);if(!this.tm._placeholder){var timeRemapped=this.tm.v;this._currentTime=timeRemapped;}else {this._currentTime=num/this.data.sr;}this._volume=this.lv.v[0];var totalVolume=this._volume*this._volumeMultiplier;if(this._previousVolume!==totalVolume){this._previousVolume=totalVolume;this.audio.volume(totalVolume);}};extendPrototype([RenderableElement,BaseElement,FrameElement],AudioElement);AudioElement.prototype.renderFrame=function(){if(this.isInRange&&this._canPlay){if(!this._isPlaying){this.audio.play();this.audio.seek(this._currentTime/this.globalData.frameRate);this._isPlaying=true;}else if(!this.audio.playing()||Math.abs(this._currentTime/this.globalData.frameRate-this.audio.seek())>0.1){this.audio.seek(this._currentTime/this.globalData.frameRate);}}};AudioElement.prototype.show=function(){// this.audio.play()
		};AudioElement.prototype.hide=function(){this.audio.pause();this._isPlaying=false;};AudioElement.prototype.pause=function(){this.audio.pause();this._isPlaying=false;this._canPlay=false;};AudioElement.prototype.resume=function(){this._canPlay=true;};AudioElement.prototype.setRate=function(rateValue){this.audio.rate(rateValue);};AudioElement.prototype.volume=function(volumeValue){this._volumeMultiplier=volumeValue;this._previousVolume=volumeValue*this._volume;this.audio.volume(this._previousVolume);};AudioElement.prototype.getBaseElement=function(){return null;};AudioElement.prototype.destroy=function(){};AudioElement.prototype.sourceRectAtTime=function(){};AudioElement.prototype.initExpressions=function(){};function BaseRenderer(){}BaseRenderer.prototype.checkLayers=function(num){var i;var len=this.layers.length;var data;this.completeLayers=true;for(i=len-1;i>=0;i-=1){if(!this.elements[i]){data=this.layers[i];if(data.ip-data.st<=num-this.layers[i].st&&data.op-data.st>num-this.layers[i].st){this.buildItem(i);}}this.completeLayers=this.elements[i]?this.completeLayers:false;}this.checkPendingElements();};BaseRenderer.prototype.createItem=function(layer){switch(layer.ty){case 2:return this.createImage(layer);case 0:return this.createComp(layer);case 1:return this.createSolid(layer);case 3:return this.createNull(layer);case 4:return this.createShape(layer);case 5:return this.createText(layer);case 6:return this.createAudio(layer);case 13:return this.createCamera(layer);case 15:return this.createFootage(layer);default:return this.createNull(layer);}};BaseRenderer.prototype.createCamera=function(){throw new Error('You\'re using a 3d camera. Try the html renderer.');};BaseRenderer.prototype.createAudio=function(data){return new AudioElement(data,this.globalData,this);};BaseRenderer.prototype.createFootage=function(data){return new FootageElement(data,this.globalData,this);};BaseRenderer.prototype.buildAllItems=function(){var i;var len=this.layers.length;for(i=0;i<len;i+=1){this.buildItem(i);}this.checkPendingElements();};BaseRenderer.prototype.includeLayers=function(newLayers){this.completeLayers=false;var i;var len=newLayers.length;var j;var jLen=this.layers.length;for(i=0;i<len;i+=1){j=0;while(j<jLen){if(this.layers[j].id===newLayers[i].id){this.layers[j]=newLayers[i];break;}j+=1;}}};BaseRenderer.prototype.setProjectInterface=function(pInterface){this.globalData.projectInterface=pInterface;};BaseRenderer.prototype.initItems=function(){if(!this.globalData.progressiveLoad){this.buildAllItems();}};BaseRenderer.prototype.buildElementParenting=function(element,parentName,hierarchy){var elements=this.elements;var layers=this.layers;var i=0;var len=layers.length;while(i<len){if(layers[i].ind==parentName){// eslint-disable-line eqeqeq
		if(!elements[i]||elements[i]===true){this.buildItem(i);this.addPendingElement(element);}else {hierarchy.push(elements[i]);elements[i].setAsParent();if(layers[i].parent!==undefined){this.buildElementParenting(element,layers[i].parent,hierarchy);}else {element.setHierarchy(hierarchy);}}}i+=1;}};BaseRenderer.prototype.addPendingElement=function(element){this.pendingElements.push(element);};BaseRenderer.prototype.searchExtraCompositions=function(assets){var i;var len=assets.length;for(i=0;i<len;i+=1){if(assets[i].xt){var comp=this.createComp(assets[i]);comp.initExpressions();this.globalData.projectInterface.registerComposition(comp);}}};BaseRenderer.prototype.getElementById=function(ind){var i;var len=this.elements.length;for(i=0;i<len;i+=1){if(this.elements[i].data.ind===ind){return this.elements[i];}}return null;};BaseRenderer.prototype.getElementByPath=function(path){var pathValue=path.shift();var element;if(typeof pathValue==='number'){element=this.elements[pathValue];}else {var i;var len=this.elements.length;for(i=0;i<len;i+=1){if(this.elements[i].data.nm===pathValue){element=this.elements[i];break;}}}if(path.length===0){return element;}return element.getElementByPath(path);};BaseRenderer.prototype.setupGlobalData=function(animData,fontsContainer){this.globalData.fontManager=new FontManager();this.globalData.slotManager=slotFactory(animData);this.globalData.fontManager.addChars(animData.chars);this.globalData.fontManager.addFonts(animData.fonts,fontsContainer);this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem);this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem);this.globalData.imageLoader=this.animationItem.imagePreloader;this.globalData.audioController=this.animationItem.audioController;this.globalData.frameId=0;this.globalData.frameRate=animData.fr;this.globalData.nm=animData.nm;this.globalData.compSize={w:animData.w,h:animData.h};};var effectTypes={TRANSFORM_EFFECT:'transformEFfect'};function TransformElement(){}TransformElement.prototype={initTransform:function initTransform(){var mat=new Matrix();this.finalTransform={mProp:this.data.ks?TransformPropertyFactory.getTransformProperty(this,this.data.ks,this):{o:0},_matMdf:false,_localMatMdf:false,_opMdf:false,mat:mat,localMat:mat,localOpacity:1};if(this.data.ao){this.finalTransform.mProp.autoOriented=true;}// TODO: check TYPE 11: Guided elements
		if(this.data.ty!==11);},renderTransform:function renderTransform(){this.finalTransform._opMdf=this.finalTransform.mProp.o._mdf||this._isFirstFrame;this.finalTransform._matMdf=this.finalTransform.mProp._mdf||this._isFirstFrame;if(this.hierarchy){var mat;var finalMat=this.finalTransform.mat;var i=0;var len=this.hierarchy.length;// Checking if any of the transformation matrices in the hierarchy chain has changed.
		if(!this.finalTransform._matMdf){while(i<len){if(this.hierarchy[i].finalTransform.mProp._mdf){this.finalTransform._matMdf=true;break;}i+=1;}}if(this.finalTransform._matMdf){mat=this.finalTransform.mProp.v.props;finalMat.cloneFromProps(mat);for(i=0;i<len;i+=1){finalMat.multiply(this.hierarchy[i].finalTransform.mProp.v);}}}if(this.finalTransform._matMdf){this.finalTransform._localMatMdf=this.finalTransform._matMdf;}if(this.finalTransform._opMdf){this.finalTransform.localOpacity=this.finalTransform.mProp.o.v;}},renderLocalTransform:function renderLocalTransform(){if(this.localTransforms){var i=0;var len=this.localTransforms.length;this.finalTransform._localMatMdf=this.finalTransform._matMdf;if(!this.finalTransform._localMatMdf||!this.finalTransform._opMdf){while(i<len){if(this.localTransforms[i]._mdf){this.finalTransform._localMatMdf=true;}if(this.localTransforms[i]._opMdf&&!this.finalTransform._opMdf){this.finalTransform.localOpacity=this.finalTransform.mProp.o.v;this.finalTransform._opMdf=true;}i+=1;}}if(this.finalTransform._localMatMdf){var localMat=this.finalTransform.localMat;this.localTransforms[0].matrix.clone(localMat);for(i=1;i<len;i+=1){var lmat=this.localTransforms[i].matrix;localMat.multiply(lmat);}localMat.multiply(this.finalTransform.mat);}if(this.finalTransform._opMdf){var localOp=this.finalTransform.localOpacity;for(i=0;i<len;i+=1){localOp*=this.localTransforms[i].opacity*0.01;}this.finalTransform.localOpacity=localOp;}}},searchEffectTransforms:function searchEffectTransforms(){if(this.renderableEffectsManager){var transformEffects=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);if(transformEffects.length){this.localTransforms=[];this.finalTransform.localMat=new Matrix();var i=0;var len=transformEffects.length;for(i=0;i<len;i+=1){this.localTransforms.push(transformEffects[i]);}}}},globalToLocal:function globalToLocal(pt){var transforms=[];transforms.push(this.finalTransform);var flag=true;var comp=this.comp;while(flag){if(comp.finalTransform){if(comp.data.hasMask){transforms.splice(0,0,comp.finalTransform);}comp=comp.comp;}else {flag=false;}}var i;var len=transforms.length;var ptNew;for(i=0;i<len;i+=1){ptNew=transforms[i].mat.applyToPointArray(0,0,0);// ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
		pt=[pt[0]-ptNew[0],pt[1]-ptNew[1],0];}return pt;},mHelper:new Matrix()};function MaskElement(data,element,globalData){this.data=data;this.element=element;this.globalData=globalData;this.storedData=[];this.masksProperties=this.data.masksProperties||[];this.maskElement=null;var defs=this.globalData.defs;var i;var len=this.masksProperties?this.masksProperties.length:0;this.viewData=createSizedArray(len);this.solidPath='';var path;var properties=this.masksProperties;var count=0;var currentMasks=[];var j;var jLen;var layerId=createElementID();var rect;var expansor;var feMorph;var x;var maskType='clipPath';var maskRef='clip-path';for(i=0;i<len;i+=1){if(properties[i].mode!=='a'&&properties[i].mode!=='n'||properties[i].inv||properties[i].o.k!==100||properties[i].o.x){maskType='mask';maskRef='mask';}if((properties[i].mode==='s'||properties[i].mode==='i')&&count===0){rect=createNS('rect');rect.setAttribute('fill','#ffffff');rect.setAttribute('width',this.element.comp.data.w||0);rect.setAttribute('height',this.element.comp.data.h||0);currentMasks.push(rect);}else {rect=null;}path=createNS('path');if(properties[i].mode==='n'){// TODO move this to a factory or to a constructor
		this.viewData[i]={op:PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),elem:path,lastPath:''};defs.appendChild(path);}else {count+=1;path.setAttribute('fill',properties[i].mode==='s'?'#000000':'#ffffff');path.setAttribute('clip-rule','nonzero');var filterID;if(properties[i].x.k!==0){maskType='mask';maskRef='mask';x=PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);filterID=createElementID();expansor=createNS('filter');expansor.setAttribute('id',filterID);feMorph=createNS('feMorphology');feMorph.setAttribute('operator','erode');feMorph.setAttribute('in','SourceGraphic');feMorph.setAttribute('radius','0');expansor.appendChild(feMorph);defs.appendChild(expansor);path.setAttribute('stroke',properties[i].mode==='s'?'#000000':'#ffffff');}else {feMorph=null;x=null;}// TODO move this to a factory or to a constructor
		this.storedData[i]={elem:path,x:x,expan:feMorph,lastPath:'',lastOperator:'',filterId:filterID,lastRadius:0};if(properties[i].mode==='i'){jLen=currentMasks.length;var g=createNS('g');for(j=0;j<jLen;j+=1){g.appendChild(currentMasks[j]);}var mask=createNS('mask');mask.setAttribute('mask-type','alpha');mask.setAttribute('id',layerId+'_'+count);mask.appendChild(path);defs.appendChild(mask);g.setAttribute('mask','url('+getLocationHref()+'#'+layerId+'_'+count+')');currentMasks.length=0;currentMasks.push(g);}else {currentMasks.push(path);}if(properties[i].inv&&!this.solidPath){this.solidPath=this.createLayerSolidPath();}// TODO move this to a factory or to a constructor
		this.viewData[i]={elem:path,lastPath:'',op:PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),invRect:rect};if(!this.viewData[i].prop.k){this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);}}}this.maskElement=createNS(maskType);len=currentMasks.length;for(i=0;i<len;i+=1){this.maskElement.appendChild(currentMasks[i]);}if(count>0){this.maskElement.setAttribute('id',layerId);this.element.maskedElement.setAttribute(maskRef,'url('+getLocationHref()+'#'+layerId+')');defs.appendChild(this.maskElement);}if(this.viewData.length){this.element.addRenderableComponent(this);}}MaskElement.prototype.getMaskProperty=function(pos){return this.viewData[pos].prop;};MaskElement.prototype.renderFrame=function(isFirstFrame){var finalMat=this.element.finalTransform.mat;var i;var len=this.masksProperties.length;for(i=0;i<len;i+=1){if(this.viewData[i].prop._mdf||isFirstFrame){this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);}if(this.viewData[i].op._mdf||isFirstFrame){this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);}if(this.masksProperties[i].mode!=='n'){if(this.viewData[i].invRect&&(this.element.finalTransform.mProp._mdf||isFirstFrame)){this.viewData[i].invRect.setAttribute('transform',finalMat.getInverseMatrix().to2dCSS());}if(this.storedData[i].x&&(this.storedData[i].x._mdf||isFirstFrame)){var feMorph=this.storedData[i].expan;if(this.storedData[i].x.v<0){if(this.storedData[i].lastOperator!=='erode'){this.storedData[i].lastOperator='erode';this.storedData[i].elem.setAttribute('filter','url('+getLocationHref()+'#'+this.storedData[i].filterId+')');}feMorph.setAttribute('radius',-this.storedData[i].x.v);}else {if(this.storedData[i].lastOperator!=='dilate'){this.storedData[i].lastOperator='dilate';this.storedData[i].elem.setAttribute('filter',null);}this.storedData[i].elem.setAttribute('stroke-width',this.storedData[i].x.v*2);}}}}};MaskElement.prototype.getMaskelement=function(){return this.maskElement;};MaskElement.prototype.createLayerSolidPath=function(){var path='M0,0 ';path+=' h'+this.globalData.compSize.w;path+=' v'+this.globalData.compSize.h;path+=' h-'+this.globalData.compSize.w;path+=' v-'+this.globalData.compSize.h+' ';return path;};MaskElement.prototype.drawPath=function(pathData,pathNodes,viewData){var pathString=' M'+pathNodes.v[0][0]+','+pathNodes.v[0][1];var i;var len;len=pathNodes._length;for(i=1;i<len;i+=1){// pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
		pathString+=' C'+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1]+' '+pathNodes.i[i][0]+','+pathNodes.i[i][1]+' '+pathNodes.v[i][0]+','+pathNodes.v[i][1];}// pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
		if(pathNodes.c&&len>1){pathString+=' C'+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1]+' '+pathNodes.i[0][0]+','+pathNodes.i[0][1]+' '+pathNodes.v[0][0]+','+pathNodes.v[0][1];}// pathNodes.__renderedString = pathString;
		if(viewData.lastPath!==pathString){var pathShapeValue='';if(viewData.elem){if(pathNodes.c){pathShapeValue=pathData.inv?this.solidPath+pathString:pathString;}viewData.elem.setAttribute('d',pathShapeValue);}viewData.lastPath=pathString;}};MaskElement.prototype.destroy=function(){this.element=null;this.globalData=null;this.maskElement=null;this.data=null;this.masksProperties=null;};var filtersFactory=function(){var ob={};ob.createFilter=createFilter;ob.createAlphaToLuminanceFilter=createAlphaToLuminanceFilter;function createFilter(filId,skipCoordinates){var fil=createNS('filter');fil.setAttribute('id',filId);if(skipCoordinates!==true){fil.setAttribute('filterUnits','objectBoundingBox');fil.setAttribute('x','0%');fil.setAttribute('y','0%');fil.setAttribute('width','100%');fil.setAttribute('height','100%');}return fil;}function createAlphaToLuminanceFilter(){var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');return feColorMatrix;}return ob;}();var featureSupport=function(){var ob={maskType:true,svgLumaHidden:true,offscreenCanvas:typeof OffscreenCanvas!=='undefined'};if(/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\/\d./i.test(navigator.userAgent)){ob.maskType=false;}if(/firefox/i.test(navigator.userAgent)){ob.svgLumaHidden=false;}return ob;}();var registeredEffects$1={};var idPrefix='filter_result_';function SVGEffects(elem){var i;var source='SourceGraphic';var len=elem.data.ef?elem.data.ef.length:0;var filId=createElementID();var fil=filtersFactory.createFilter(filId,true);var count=0;this.filters=[];var filterManager;for(i=0;i<len;i+=1){filterManager=null;var type=elem.data.ef[i].ty;if(registeredEffects$1[type]){var Effect=registeredEffects$1[type].effect;filterManager=new Effect(fil,elem.effectsManager.effectElements[i],elem,idPrefix+count,source);source=idPrefix+count;if(registeredEffects$1[type].countsAsEffect){count+=1;}}if(filterManager){this.filters.push(filterManager);}}if(count){elem.globalData.defs.appendChild(fil);elem.layerElement.setAttribute('filter','url('+getLocationHref()+'#'+filId+')');}if(this.filters.length){elem.addRenderableComponent(this);}}SVGEffects.prototype.renderFrame=function(_isFirstFrame){var i;var len=this.filters.length;for(i=0;i<len;i+=1){this.filters[i].renderFrame(_isFirstFrame);}};SVGEffects.prototype.getEffects=function(type){var i;var len=this.filters.length;var effects=[];for(i=0;i<len;i+=1){if(this.filters[i].type===type){effects.push(this.filters[i]);}}return effects;};function registerEffect$1(id,effect,countsAsEffect){registeredEffects$1[id]={effect:effect,countsAsEffect:countsAsEffect};}function SVGBaseElement(){}SVGBaseElement.prototype={initRendererElement:function initRendererElement(){this.layerElement=createNS('g');},createContainerElements:function createContainerElements(){this.matteElement=createNS('g');this.transformedElement=this.layerElement;this.maskedElement=this.layerElement;this._sizeChanged=false;var layerElementParent=null;// If this layer acts as a mask for the following layer
		if(this.data.td){this.matteMasks={};var gg=createNS('g');gg.setAttribute('id',this.layerId);gg.appendChild(this.layerElement);layerElementParent=gg;this.globalData.defs.appendChild(gg);}else if(this.data.tt){this.matteElement.appendChild(this.layerElement);layerElementParent=this.matteElement;this.baseElement=this.matteElement;}else {this.baseElement=this.layerElement;}if(this.data.ln){this.layerElement.setAttribute('id',this.data.ln);}if(this.data.cl){this.layerElement.setAttribute('class',this.data.cl);}// Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
		if(this.data.ty===0&&!this.data.hd){var cp=createNS('clipPath');var pt=createNS('path');pt.setAttribute('d','M0,0 L'+this.data.w+',0 L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');var clipId=createElementID();cp.setAttribute('id',clipId);cp.appendChild(pt);this.globalData.defs.appendChild(cp);if(this.checkMasks()){var cpGroup=createNS('g');cpGroup.setAttribute('clip-path','url('+getLocationHref()+'#'+clipId+')');cpGroup.appendChild(this.layerElement);this.transformedElement=cpGroup;if(layerElementParent){layerElementParent.appendChild(this.transformedElement);}else {this.baseElement=this.transformedElement;}}else {this.layerElement.setAttribute('clip-path','url('+getLocationHref()+'#'+clipId+')');}}if(this.data.bm!==0){this.setBlendMode();}},renderElement:function renderElement(){if(this.finalTransform._localMatMdf){this.transformedElement.setAttribute('transform',this.finalTransform.localMat.to2dCSS());}if(this.finalTransform._opMdf){this.transformedElement.setAttribute('opacity',this.finalTransform.localOpacity);}},destroyBaseElement:function destroyBaseElement(){this.layerElement=null;this.matteElement=null;this.maskManager.destroy();},getBaseElement:function getBaseElement(){if(this.data.hd){return null;}return this.baseElement;},createRenderableComponents:function createRenderableComponents(){this.maskManager=new MaskElement(this.data,this,this.globalData);this.renderableEffectsManager=new SVGEffects(this);this.searchEffectTransforms();},getMatte:function getMatte(matteType){// This should not be a common case. But for backward compatibility, we'll create the matte object.
		// It solves animations that have two consecutive layers marked as matte masks.
		// Which is an undefined behavior in AE.
		if(!this.matteMasks){this.matteMasks={};}if(!this.matteMasks[matteType]){var id=this.layerId+'_'+matteType;var filId;var fil;var useElement;var gg;if(matteType===1||matteType===3){var masker=createNS('mask');masker.setAttribute('id',id);masker.setAttribute('mask-type',matteType===3?'luminance':'alpha');useElement=createNS('use');useElement.setAttributeNS('http://www.w3.org/1999/xlink','href','#'+this.layerId);masker.appendChild(useElement);this.globalData.defs.appendChild(masker);if(!featureSupport.maskType&&matteType===1){masker.setAttribute('mask-type','luminance');filId=createElementID();fil=filtersFactory.createFilter(filId);this.globalData.defs.appendChild(fil);fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());gg=createNS('g');gg.appendChild(useElement);masker.appendChild(gg);gg.setAttribute('filter','url('+getLocationHref()+'#'+filId+')');}}else if(matteType===2){var maskGroup=createNS('mask');maskGroup.setAttribute('id',id);maskGroup.setAttribute('mask-type','alpha');var maskGrouper=createNS('g');maskGroup.appendChild(maskGrouper);filId=createElementID();fil=filtersFactory.createFilter(filId);/// /
		var feCTr=createNS('feComponentTransfer');feCTr.setAttribute('in','SourceGraphic');fil.appendChild(feCTr);var feFunc=createNS('feFuncA');feFunc.setAttribute('type','table');feFunc.setAttribute('tableValues','1.0 0.0');feCTr.appendChild(feFunc);/// /
		this.globalData.defs.appendChild(fil);var alphaRect=createNS('rect');alphaRect.setAttribute('width',this.comp.data.w);alphaRect.setAttribute('height',this.comp.data.h);alphaRect.setAttribute('x','0');alphaRect.setAttribute('y','0');alphaRect.setAttribute('fill','#ffffff');alphaRect.setAttribute('opacity','0');maskGrouper.setAttribute('filter','url('+getLocationHref()+'#'+filId+')');maskGrouper.appendChild(alphaRect);useElement=createNS('use');useElement.setAttributeNS('http://www.w3.org/1999/xlink','href','#'+this.layerId);maskGrouper.appendChild(useElement);if(!featureSupport.maskType){maskGroup.setAttribute('mask-type','luminance');fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());gg=createNS('g');maskGrouper.appendChild(alphaRect);gg.appendChild(this.layerElement);maskGrouper.appendChild(gg);}this.globalData.defs.appendChild(maskGroup);}this.matteMasks[matteType]=id;}return this.matteMasks[matteType];},setMatte:function setMatte(id){if(!this.matteElement){return;}this.matteElement.setAttribute('mask','url('+getLocationHref()+'#'+id+')');}};/**
		   * @file
		   * Handles AE's layer parenting property.
		   *
		   */function HierarchyElement(){}HierarchyElement.prototype={/**
		       * @function
		       * Initializes hierarchy properties
		       *
		       */initHierarchy:function initHierarchy(){// element's parent list
		this.hierarchy=[];// if element is parent of another layer _isParent will be true
		this._isParent=false;this.checkParenting();},/**
		       * @function
		       * Sets layer's hierarchy.
		       * @param {array} hierarch
		       * layer's parent list
		       *
		       */setHierarchy:function setHierarchy(hierarchy){this.hierarchy=hierarchy;},/**
		       * @function
		       * Sets layer as parent.
		       *
		       */setAsParent:function setAsParent(){this._isParent=true;},/**
		       * @function
		       * Searches layer's parenting chain
		       *
		       */checkParenting:function checkParenting(){if(this.data.parent!==undefined){this.comp.buildElementParenting(this,this.data.parent,[]);}}};function RenderableDOMElement(){}(function(){var _prototype={initElement:function initElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initTransform(data,globalData,comp);this.initHierarchy();this.initRenderable();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();this.createContent();this.hide();},hide:function hide(){// console.log('HIDE', this);
		if(!this.hidden&&(!this.isInRange||this.isTransparent)){var elem=this.baseElement||this.layerElement;elem.style.display='none';this.hidden=true;}},show:function show(){// console.log('SHOW', this);
		if(this.isInRange&&!this.isTransparent){if(!this.data.hd){var elem=this.baseElement||this.layerElement;elem.style.display='block';}this.hidden=false;this._isFirstFrame=true;}},renderFrame:function renderFrame(){// If it is exported as hidden (data.hd === true) no need to render
		// If it is not visible no need to render
		if(this.data.hd||this.hidden){return;}this.renderTransform();this.renderRenderable();this.renderLocalTransform();this.renderElement();this.renderInnerContent();if(this._isFirstFrame){this._isFirstFrame=false;}},renderInnerContent:function renderInnerContent(){},prepareFrame:function prepareFrame(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);this.checkTransparency();},destroy:function destroy(){this.innerElem=null;this.destroyBaseElement();}};extendPrototype([RenderableElement,createProxyFunction(_prototype)],RenderableDOMElement);})();function IImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);if(this.assetData&&this.assetData.sid){this.assetData=globalData.slotManager.getProp(this.assetData);}this.initElement(data,globalData,comp);this.sourceRect={top:0,left:0,width:this.assetData.w,height:this.assetData.h};}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],IImageElement);IImageElement.prototype.createContent=function(){var assetPath=this.globalData.getAssetsPath(this.assetData);this.innerElem=createNS('image');this.innerElem.setAttribute('width',this.assetData.w+'px');this.innerElem.setAttribute('height',this.assetData.h+'px');this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio);this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);this.layerElement.appendChild(this.innerElem);};IImageElement.prototype.sourceRectAtTime=function(){return this.sourceRect;};function ProcessedElement(element,position){this.elem=element;this.pos=position;}function IShapeElement(){}IShapeElement.prototype={addShapeToModifiers:function addShapeToModifiers(data){var i;var len=this.shapeModifiers.length;for(i=0;i<len;i+=1){this.shapeModifiers[i].addShape(data);}},isShapeInAnimatedModifiers:function isShapeInAnimatedModifiers(data){var i=0;var len=this.shapeModifiers.length;while(i<len){if(this.shapeModifiers[i].isAnimatedWithShape(data)){return true;}}return false;},renderModifiers:function renderModifiers(){if(!this.shapeModifiers.length){return;}var i;var len=this.shapes.length;for(i=0;i<len;i+=1){this.shapes[i].sh.reset();}len=this.shapeModifiers.length;var shouldBreakProcess;for(i=len-1;i>=0;i-=1){shouldBreakProcess=this.shapeModifiers[i].processShapes(this._isFirstFrame);// workaround to fix cases where a repeater resets the shape so the following processes get called twice
		// TODO: find a better solution for this
		if(shouldBreakProcess){break;}}},searchProcessedElement:function searchProcessedElement(elem){var elements=this.processedElements;var i=0;var len=elements.length;while(i<len){if(elements[i].elem===elem){return elements[i].pos;}i+=1;}return 0;},addProcessedElement:function addProcessedElement(elem,pos){var elements=this.processedElements;var i=elements.length;while(i){i-=1;if(elements[i].elem===elem){elements[i].pos=pos;return;}}elements.push(new ProcessedElement(elem,pos));},prepareFrame:function prepareFrame(num){this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);}};var lineCapEnum={1:'butt',2:'round',3:'square'};var lineJoinEnum={1:'miter',2:'round',3:'bevel'};function SVGShapeData(transformers,level,shape){this.caches=[];this.styles=[];this.transformers=transformers;this.lStr='';this.sh=shape;this.lvl=level;// TODO find if there are some cases where _isAnimated can be false.
		// For now, since shapes add up with other shapes. They have to be calculated every time.
		// One way of finding out is checking if all styles associated to this shape depend only of this shape
		this._isAnimated=!!shape.k;// TODO: commenting this for now since all shapes are animated
		var i=0;var len=transformers.length;while(i<len){if(transformers[i].mProps.dynamicProperties.length){this._isAnimated=true;break;}i+=1;}}SVGShapeData.prototype.setAsAnimated=function(){this._isAnimated=true;};function SVGStyleData(data,level){this.data=data;this.type=data.ty;this.d='';this.lvl=level;this._mdf=false;this.closed=data.hd===true;this.pElem=createNS('path');this.msElem=null;}SVGStyleData.prototype.reset=function(){this.d='';this._mdf=false;};function DashProperty(elem,data,renderer,container){this.elem=elem;this.frameId=-1;this.dataProps=createSizedArray(data.length);this.renderer=renderer;this.k=false;this.dashStr='';this.dashArray=createTypedArray('float32',data.length?data.length-1:0);this.dashoffset=createTypedArray('float32',1);this.initDynamicPropertyContainer(container);var i;var len=data.length||0;var prop;for(i=0;i<len;i+=1){prop=PropertyFactory.getProp(elem,data[i].v,0,0,this);this.k=prop.k||this.k;this.dataProps[i]={n:data[i].n,p:prop};}if(!this.k){this.getValue(true);}this._isAnimated=this.k;}DashProperty.prototype.getValue=function(forceRender){if(this.elem.globalData.frameId===this.frameId&&!forceRender){return;}this.frameId=this.elem.globalData.frameId;this.iterateDynamicProperties();this._mdf=this._mdf||forceRender;if(this._mdf){var i=0;var len=this.dataProps.length;if(this.renderer==='svg'){this.dashStr='';}for(i=0;i<len;i+=1){if(this.dataProps[i].n!=='o'){if(this.renderer==='svg'){this.dashStr+=' '+this.dataProps[i].p.v;}else {this.dashArray[i]=this.dataProps[i].p.v;}}else {this.dashoffset[0]=this.dataProps[i].p.v;}}}};extendPrototype([DynamicPropertyContainer],DashProperty);function SVGStrokeStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.w=PropertyFactory.getProp(elem,data.w,0,null,this);this.d=new DashProperty(elem,data.d||{},'svg',this);this.c=PropertyFactory.getProp(elem,data.c,1,255,this);this.style=styleOb;this._isAnimated=!!this._isAnimated;}extendPrototype([DynamicPropertyContainer],SVGStrokeStyleData);function SVGFillStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.c=PropertyFactory.getProp(elem,data.c,1,255,this);this.style=styleOb;}extendPrototype([DynamicPropertyContainer],SVGFillStyleData);function SVGNoStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.style=styleOb;}extendPrototype([DynamicPropertyContainer],SVGNoStyleData);function GradientProperty(elem,data,container){this.data=data;this.c=createTypedArray('uint8c',data.p*4);var cLength=data.k.k[0].s?data.k.k[0].s.length-data.p*4:data.k.k.length-data.p*4;this.o=createTypedArray('float32',cLength);this._cmdf=false;this._omdf=false;this._collapsable=this.checkCollapsable();this._hasOpacity=cLength;this.initDynamicPropertyContainer(container);this.prop=PropertyFactory.getProp(elem,data.k,1,null,this);this.k=this.prop.k;this.getValue(true);}GradientProperty.prototype.comparePoints=function(values,points){var i=0;var len=this.o.length/2;var diff;while(i<len){diff=Math.abs(values[i*4]-values[points*4+i*2]);if(diff>0.01){return false;}i+=1;}return true;};GradientProperty.prototype.checkCollapsable=function(){if(this.o.length/2!==this.c.length/4){return false;}if(this.data.k.k[0].s){var i=0;var len=this.data.k.k.length;while(i<len){if(!this.comparePoints(this.data.k.k[i].s,this.data.p)){return false;}i+=1;}}else if(!this.comparePoints(this.data.k.k,this.data.p)){return false;}return true;};GradientProperty.prototype.getValue=function(forceRender){this.prop.getValue();this._mdf=false;this._cmdf=false;this._omdf=false;if(this.prop._mdf||forceRender){var i;var len=this.data.p*4;var mult;var val;for(i=0;i<len;i+=1){mult=i%4===0?100:255;val=Math.round(this.prop.v[i]*mult);if(this.c[i]!==val){this.c[i]=val;this._cmdf=!forceRender;}}if(this.o.length){len=this.prop.v.length;for(i=this.data.p*4;i<len;i+=1){mult=i%2===0?100:1;val=i%2===0?Math.round(this.prop.v[i]*100):this.prop.v[i];if(this.o[i-this.data.p*4]!==val){this.o[i-this.data.p*4]=val;this._omdf=!forceRender;}}}this._mdf=!forceRender;}};extendPrototype([DynamicPropertyContainer],GradientProperty);function SVGGradientFillStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.initGradientData(elem,data,styleOb);}SVGGradientFillStyleData.prototype.initGradientData=function(elem,data,styleOb){this.o=PropertyFactory.getProp(elem,data.o,0,0.01,this);this.s=PropertyFactory.getProp(elem,data.s,1,null,this);this.e=PropertyFactory.getProp(elem,data.e,1,null,this);this.h=PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);this.a=PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);this.g=new GradientProperty(elem,data.g,this);this.style=styleOb;this.stops=[];this.setGradientData(styleOb.pElem,data);this.setGradientOpacity(data,styleOb);this._isAnimated=!!this._isAnimated;};SVGGradientFillStyleData.prototype.setGradientData=function(pathElement,data){var gradientId=createElementID();var gfill=createNS(data.t===1?'linearGradient':'radialGradient');gfill.setAttribute('id',gradientId);gfill.setAttribute('spreadMethod','pad');gfill.setAttribute('gradientUnits','userSpaceOnUse');var stops=[];var stop;var j;var jLen;jLen=data.g.p*4;for(j=0;j<jLen;j+=4){stop=createNS('stop');gfill.appendChild(stop);stops.push(stop);}pathElement.setAttribute(data.ty==='gf'?'fill':'stroke','url('+getLocationHref()+'#'+gradientId+')');this.gf=gfill;this.cst=stops;};SVGGradientFillStyleData.prototype.setGradientOpacity=function(data,styleOb){if(this.g._hasOpacity&&!this.g._collapsable){var stop;var j;var jLen;var mask=createNS('mask');var maskElement=createNS('path');mask.appendChild(maskElement);var opacityId=createElementID();var maskId=createElementID();mask.setAttribute('id',maskId);var opFill=createNS(data.t===1?'linearGradient':'radialGradient');opFill.setAttribute('id',opacityId);opFill.setAttribute('spreadMethod','pad');opFill.setAttribute('gradientUnits','userSpaceOnUse');jLen=data.g.k.k[0].s?data.g.k.k[0].s.length:data.g.k.k.length;var stops=this.stops;for(j=data.g.p*4;j<jLen;j+=2){stop=createNS('stop');stop.setAttribute('stop-color','rgb(255,255,255)');opFill.appendChild(stop);stops.push(stop);}maskElement.setAttribute(data.ty==='gf'?'fill':'stroke','url('+getLocationHref()+'#'+opacityId+')');if(data.ty==='gs'){maskElement.setAttribute('stroke-linecap',lineCapEnum[data.lc||2]);maskElement.setAttribute('stroke-linejoin',lineJoinEnum[data.lj||2]);if(data.lj===1){maskElement.setAttribute('stroke-miterlimit',data.ml);}}this.of=opFill;this.ms=mask;this.ost=stops;this.maskId=maskId;styleOb.msElem=maskElement;}};extendPrototype([DynamicPropertyContainer],SVGGradientFillStyleData);function SVGGradientStrokeStyleData(elem,data,styleOb){this.initDynamicPropertyContainer(elem);this.getValue=this.iterateDynamicProperties;this.w=PropertyFactory.getProp(elem,data.w,0,null,this);this.d=new DashProperty(elem,data.d||{},'svg',this);this.initGradientData(elem,data,styleOb);this._isAnimated=!!this._isAnimated;}extendPrototype([SVGGradientFillStyleData,DynamicPropertyContainer],SVGGradientStrokeStyleData);function ShapeGroupData(){this.it=[];this.prevViewData=[];this.gr=createNS('g');}function SVGTransformData(mProps,op,container){this.transform={mProps:mProps,op:op,container:container};this.elements=[];this._isAnimated=this.transform.mProps.dynamicProperties.length||this.transform.op.effectsSequence.length;}var buildShapeString=function buildShapeString(pathNodes,length,closed,mat){if(length===0){return '';}var _o=pathNodes.o;var _i=pathNodes.i;var _v=pathNodes.v;var i;var shapeString=' M'+mat.applyToPointStringified(_v[0][0],_v[0][1]);for(i=1;i<length;i+=1){shapeString+=' C'+mat.applyToPointStringified(_o[i-1][0],_o[i-1][1])+' '+mat.applyToPointStringified(_i[i][0],_i[i][1])+' '+mat.applyToPointStringified(_v[i][0],_v[i][1]);}if(closed&&length){shapeString+=' C'+mat.applyToPointStringified(_o[i-1][0],_o[i-1][1])+' '+mat.applyToPointStringified(_i[0][0],_i[0][1])+' '+mat.applyToPointStringified(_v[0][0],_v[0][1]);shapeString+='z';}return shapeString;};var SVGElementsRenderer=function(){var _identityMatrix=new Matrix();var _matrixHelper=new Matrix();var ob={createRenderFunction:createRenderFunction};function createRenderFunction(data){switch(data.ty){case'fl':return renderFill;case'gf':return renderGradient;case'gs':return renderGradientStroke;case'st':return renderStroke;case'sh':case'el':case'rc':case'sr':return renderPath;case'tr':return renderContentTransform;case'no':return renderNoop;default:return null;}}function renderContentTransform(styleData,itemData,isFirstFrame){if(isFirstFrame||itemData.transform.op._mdf){itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);}if(isFirstFrame||itemData.transform.mProps._mdf){itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());}}function renderNoop(){}function renderPath(styleData,itemData,isFirstFrame){var j;var jLen;var pathStringTransformed;var redraw;var pathNodes;var l;var lLen=itemData.styles.length;var lvl=itemData.lvl;var paths;var mat;var iterations;var k;for(l=0;l<lLen;l+=1){redraw=itemData.sh._mdf||isFirstFrame;if(itemData.styles[l].lvl<lvl){mat=_matrixHelper.reset();iterations=lvl-itemData.styles[l].lvl;k=itemData.transformers.length-1;while(!redraw&&iterations>0){redraw=itemData.transformers[k].mProps._mdf||redraw;iterations-=1;k-=1;}if(redraw){iterations=lvl-itemData.styles[l].lvl;k=itemData.transformers.length-1;while(iterations>0){mat.multiply(itemData.transformers[k].mProps.v);iterations-=1;k-=1;}}}else {mat=_identityMatrix;}paths=itemData.sh.paths;jLen=paths._length;if(redraw){pathStringTransformed='';for(j=0;j<jLen;j+=1){pathNodes=paths.shapes[j];if(pathNodes&&pathNodes._length){pathStringTransformed+=buildShapeString(pathNodes,pathNodes._length,pathNodes.c,mat);}}itemData.caches[l]=pathStringTransformed;}else {pathStringTransformed=itemData.caches[l];}itemData.styles[l].d+=styleData.hd===true?'':pathStringTransformed;itemData.styles[l]._mdf=redraw||itemData.styles[l]._mdf;}}function renderFill(styleData,itemData,isFirstFrame){var styleElem=itemData.style;if(itemData.c._mdf||isFirstFrame){styleElem.pElem.setAttribute('fill','rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')');}if(itemData.o._mdf||isFirstFrame){styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);}}function renderGradientStroke(styleData,itemData,isFirstFrame){renderGradient(styleData,itemData,isFirstFrame);renderStroke(styleData,itemData,isFirstFrame);}function renderGradient(styleData,itemData,isFirstFrame){var gfill=itemData.gf;var hasOpacity=itemData.g._hasOpacity;var pt1=itemData.s.v;var pt2=itemData.e.v;if(itemData.o._mdf||isFirstFrame){var attr=styleData.ty==='gf'?'fill-opacity':'stroke-opacity';itemData.style.pElem.setAttribute(attr,itemData.o.v);}if(itemData.s._mdf||isFirstFrame){var attr1=styleData.t===1?'x1':'cx';var attr2=attr1==='x1'?'y1':'cy';gfill.setAttribute(attr1,pt1[0]);gfill.setAttribute(attr2,pt1[1]);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute(attr1,pt1[0]);itemData.of.setAttribute(attr2,pt1[1]);}}var stops;var i;var len;var stop;if(itemData.g._cmdf||isFirstFrame){stops=itemData.cst;var cValues=itemData.g.c;len=stops.length;for(i=0;i<len;i+=1){stop=stops[i];stop.setAttribute('offset',cValues[i*4]+'%');stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');}}if(hasOpacity&&(itemData.g._omdf||isFirstFrame)){var oValues=itemData.g.o;if(itemData.g._collapsable){stops=itemData.cst;}else {stops=itemData.ost;}len=stops.length;for(i=0;i<len;i+=1){stop=stops[i];if(!itemData.g._collapsable){stop.setAttribute('offset',oValues[i*2]+'%');}stop.setAttribute('stop-opacity',oValues[i*2+1]);}}if(styleData.t===1){if(itemData.e._mdf||isFirstFrame){gfill.setAttribute('x2',pt2[0]);gfill.setAttribute('y2',pt2[1]);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('x2',pt2[0]);itemData.of.setAttribute('y2',pt2[1]);}}}else {var rad;if(itemData.s._mdf||itemData.e._mdf||isFirstFrame){rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));gfill.setAttribute('r',rad);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('r',rad);}}if(itemData.e._mdf||itemData.h._mdf||itemData.a._mdf||isFirstFrame){if(!rad){rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));}var ang=Math.atan2(pt2[1]-pt1[1],pt2[0]-pt1[0]);var percent=itemData.h.v;if(percent>=1){percent=0.99;}else if(percent<=-1){percent=-0.99;}var dist=rad*percent;var x=Math.cos(ang+itemData.a.v)*dist+pt1[0];var y=Math.sin(ang+itemData.a.v)*dist+pt1[1];gfill.setAttribute('fx',x);gfill.setAttribute('fy',y);if(hasOpacity&&!itemData.g._collapsable){itemData.of.setAttribute('fx',x);itemData.of.setAttribute('fy',y);}}// gfill.setAttribute('fy','200');
		}}function renderStroke(styleData,itemData,isFirstFrame){var styleElem=itemData.style;var d=itemData.d;if(d&&(d._mdf||isFirstFrame)&&d.dashStr){styleElem.pElem.setAttribute('stroke-dasharray',d.dashStr);styleElem.pElem.setAttribute('stroke-dashoffset',d.dashoffset[0]);}if(itemData.c&&(itemData.c._mdf||isFirstFrame)){styleElem.pElem.setAttribute('stroke','rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')');}if(itemData.o._mdf||isFirstFrame){styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);}if(itemData.w._mdf||isFirstFrame){styleElem.pElem.setAttribute('stroke-width',itemData.w.v);if(styleElem.msElem){styleElem.msElem.setAttribute('stroke-width',itemData.w.v);}}}return ob;}();function SVGShapeElement(data,globalData,comp){// List of drawable elements
		this.shapes=[];// Full shape data
		this.shapesData=data.shapes;// List of styles that will be applied to shapes
		this.stylesList=[];// List of modifiers that will be applied to shapes
		this.shapeModifiers=[];// List of items in shape tree
		this.itemsData=[];// List of items in previous shape tree
		this.processedElements=[];// List of animated components
		this.animatedContents=[];this.initElement(data,globalData,comp);// Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
		// List of elements that have been created
		this.prevViewData=[];// Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
		}extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement],SVGShapeElement);SVGShapeElement.prototype.initSecondaryElement=function(){};SVGShapeElement.prototype.identityMatrix=new Matrix();SVGShapeElement.prototype.buildExpressionInterface=function(){};SVGShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],true);this.filterUniqueShapes();};/*
		  This method searches for multiple shapes that affect a single element and one of them is animated
		  */SVGShapeElement.prototype.filterUniqueShapes=function(){var i;var len=this.shapes.length;var shape;var j;var jLen=this.stylesList.length;var style;var tempShapes=[];var areAnimated=false;for(j=0;j<jLen;j+=1){style=this.stylesList[j];areAnimated=false;tempShapes.length=0;for(i=0;i<len;i+=1){shape=this.shapes[i];if(shape.styles.indexOf(style)!==-1){tempShapes.push(shape);areAnimated=shape._isAnimated||areAnimated;}}if(tempShapes.length>1&&areAnimated){this.setShapesAsAnimated(tempShapes);}}};SVGShapeElement.prototype.setShapesAsAnimated=function(shapes){var i;var len=shapes.length;for(i=0;i<len;i+=1){shapes[i].setAsAnimated();}};SVGShapeElement.prototype.createStyleElement=function(data,level){// TODO: prevent drawing of hidden styles
		var elementData;var styleOb=new SVGStyleData(data,level);var pathElement=styleOb.pElem;if(data.ty==='st'){elementData=new SVGStrokeStyleData(this,data,styleOb);}else if(data.ty==='fl'){elementData=new SVGFillStyleData(this,data,styleOb);}else if(data.ty==='gf'||data.ty==='gs'){var GradientConstructor=data.ty==='gf'?SVGGradientFillStyleData:SVGGradientStrokeStyleData;elementData=new GradientConstructor(this,data,styleOb);this.globalData.defs.appendChild(elementData.gf);if(elementData.maskId){this.globalData.defs.appendChild(elementData.ms);this.globalData.defs.appendChild(elementData.of);pathElement.setAttribute('mask','url('+getLocationHref()+'#'+elementData.maskId+')');}}else if(data.ty==='no'){elementData=new SVGNoStyleData(this,data,styleOb);}if(data.ty==='st'||data.ty==='gs'){pathElement.setAttribute('stroke-linecap',lineCapEnum[data.lc||2]);pathElement.setAttribute('stroke-linejoin',lineJoinEnum[data.lj||2]);pathElement.setAttribute('fill-opacity','0');if(data.lj===1){pathElement.setAttribute('stroke-miterlimit',data.ml);}}if(data.r===2){pathElement.setAttribute('fill-rule','evenodd');}if(data.ln){pathElement.setAttribute('id',data.ln);}if(data.cl){pathElement.setAttribute('class',data.cl);}if(data.bm){pathElement.style['mix-blend-mode']=getBlendMode(data.bm);}this.stylesList.push(styleOb);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.createGroupElement=function(data){var elementData=new ShapeGroupData();if(data.ln){elementData.gr.setAttribute('id',data.ln);}if(data.cl){elementData.gr.setAttribute('class',data.cl);}if(data.bm){elementData.gr.style['mix-blend-mode']=getBlendMode(data.bm);}return elementData;};SVGShapeElement.prototype.createTransformElement=function(data,container){var transformProperty=TransformPropertyFactory.getTransformProperty(this,data,this);var elementData=new SVGTransformData(transformProperty,transformProperty.o,container);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.createShapeElement=function(data,ownTransformers,level){var ty=4;if(data.ty==='rc'){ty=5;}else if(data.ty==='el'){ty=6;}else if(data.ty==='sr'){ty=7;}var shapeProperty=ShapePropertyFactory.getShapeProp(this,data,ty,this);var elementData=new SVGShapeData(ownTransformers,level,shapeProperty);this.shapes.push(elementData);this.addShapeToModifiers(elementData);this.addToAnimatedContents(data,elementData);return elementData;};SVGShapeElement.prototype.addToAnimatedContents=function(data,element){var i=0;var len=this.animatedContents.length;while(i<len){if(this.animatedContents[i].element===element){return;}i+=1;}this.animatedContents.push({fn:SVGElementsRenderer.createRenderFunction(data),element:element,data:data});};SVGShapeElement.prototype.setElementStyles=function(elementData){var arr=elementData.styles;var j;var jLen=this.stylesList.length;for(j=0;j<jLen;j+=1){if(!this.stylesList[j].closed){arr.push(this.stylesList[j]);}}};SVGShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=true;var i;var len=this.itemsData.length;for(i=0;i<len;i+=1){this.prevViewData[i]=this.itemsData[i];}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],true);this.filterUniqueShapes();len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();}this.renderModifiers();};SVGShapeElement.prototype.searchShapes=function(arr,itemsData,prevViewData,container,level,transformers,render){var ownTransformers=[].concat(transformers);var i;var len=arr.length-1;var j;var jLen;var ownStyles=[];var ownModifiers=[];var currentTransform;var modifier;var processedPos;for(i=len;i>=0;i-=1){processedPos=this.searchProcessedElement(arr[i]);if(!processedPos){arr[i]._render=render;}else {itemsData[i]=prevViewData[processedPos-1];}if(arr[i].ty==='fl'||arr[i].ty==='st'||arr[i].ty==='gf'||arr[i].ty==='gs'||arr[i].ty==='no'){if(!processedPos){itemsData[i]=this.createStyleElement(arr[i],level);}else {itemsData[i].style.closed=false;}if(arr[i]._render){if(itemsData[i].style.pElem.parentNode!==container){container.appendChild(itemsData[i].style.pElem);}}ownStyles.push(itemsData[i].style);}else if(arr[i].ty==='gr'){if(!processedPos){itemsData[i]=this.createGroupElement(arr[i]);}else {jLen=itemsData[i].it.length;for(j=0;j<jLen;j+=1){itemsData[i].prevViewData[j]=itemsData[i].it[j];}}this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,level+1,ownTransformers,render);if(arr[i]._render){if(itemsData[i].gr.parentNode!==container){container.appendChild(itemsData[i].gr);}}}else if(arr[i].ty==='tr'){if(!processedPos){itemsData[i]=this.createTransformElement(arr[i],container);}currentTransform=itemsData[i].transform;ownTransformers.push(currentTransform);}else if(arr[i].ty==='sh'||arr[i].ty==='rc'||arr[i].ty==='el'||arr[i].ty==='sr'){if(!processedPos){itemsData[i]=this.createShapeElement(arr[i],ownTransformers,level);}this.setElementStyles(itemsData[i]);}else if(arr[i].ty==='tm'||arr[i].ty==='rd'||arr[i].ty==='ms'||arr[i].ty==='pb'||arr[i].ty==='zz'||arr[i].ty==='op'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);modifier.init(this,arr[i]);itemsData[i]=modifier;this.shapeModifiers.push(modifier);}else {modifier=itemsData[i];modifier.closed=false;}ownModifiers.push(modifier);}else if(arr[i].ty==='rp'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);itemsData[i]=modifier;modifier.init(this,arr,i,itemsData);this.shapeModifiers.push(modifier);render=false;}else {modifier=itemsData[i];modifier.closed=true;}ownModifiers.push(modifier);}this.addProcessedElement(arr[i],i+1);}len=ownStyles.length;for(i=0;i<len;i+=1){ownStyles[i].closed=true;}len=ownModifiers.length;for(i=0;i<len;i+=1){ownModifiers[i].closed=true;}};SVGShapeElement.prototype.renderInnerContent=function(){this.renderModifiers();var i;var len=this.stylesList.length;for(i=0;i<len;i+=1){this.stylesList[i].reset();}this.renderShape();for(i=0;i<len;i+=1){if(this.stylesList[i]._mdf||this._isFirstFrame){if(this.stylesList[i].msElem){this.stylesList[i].msElem.setAttribute('d',this.stylesList[i].d);// Adding M0 0 fixes same mask bug on all browsers
		this.stylesList[i].d='M0 0'+this.stylesList[i].d;}this.stylesList[i].pElem.setAttribute('d',this.stylesList[i].d||'M0 0');}}};SVGShapeElement.prototype.renderShape=function(){var i;var len=this.animatedContents.length;var animatedContent;for(i=0;i<len;i+=1){animatedContent=this.animatedContents[i];if((this._isFirstFrame||animatedContent.element._isAnimated)&&animatedContent.data!==true){animatedContent.fn(animatedContent.data,animatedContent.element,this._isFirstFrame);}}};SVGShapeElement.prototype.destroy=function(){this.destroyBaseElement();this.shapesData=null;this.itemsData=null;};function LetterProps(o,sw,sc,fc,m,p){this.o=o;this.sw=sw;this.sc=sc;this.fc=fc;this.m=m;this.p=p;this._mdf={o:true,sw:!!sw,sc:!!sc,fc:!!fc,m:true,p:true};}LetterProps.prototype.update=function(o,sw,sc,fc,m,p){this._mdf.o=false;this._mdf.sw=false;this._mdf.sc=false;this._mdf.fc=false;this._mdf.m=false;this._mdf.p=false;var updated=false;if(this.o!==o){this.o=o;this._mdf.o=true;updated=true;}if(this.sw!==sw){this.sw=sw;this._mdf.sw=true;updated=true;}if(this.sc!==sc){this.sc=sc;this._mdf.sc=true;updated=true;}if(this.fc!==fc){this.fc=fc;this._mdf.fc=true;updated=true;}if(this.m!==m){this.m=m;this._mdf.m=true;updated=true;}if(p.length&&(this.p[0]!==p[0]||this.p[1]!==p[1]||this.p[4]!==p[4]||this.p[5]!==p[5]||this.p[12]!==p[12]||this.p[13]!==p[13])){this.p=p;this._mdf.p=true;updated=true;}return updated;};function TextProperty(elem,data){this._frameId=initialDefaultFrame;this.pv='';this.v='';this.kf=false;this._isFirstFrame=true;this._mdf=false;if(data.d&&data.d.sid){data.d=elem.globalData.slotManager.getProp(data.d);}this.data=data;this.elem=elem;this.comp=this.elem.comp;this.keysIndex=0;this.canResize=false;this.minimumFontSize=1;this.effectsSequence=[];this.currentData={ascent:0,boxWidth:this.defaultBoxWidth,f:'',fStyle:'',fWeight:'',fc:'',j:'',justifyOffset:'',l:[],lh:0,lineWidths:[],ls:'',of:'',s:'',sc:'',sw:0,t:0,tr:0,sz:0,ps:null,fillColorAnim:false,strokeColorAnim:false,strokeWidthAnim:false,yOffset:0,finalSize:0,finalText:[],finalLineHeight:0,__complete:false};this.copyData(this.currentData,this.data.d.k[0].s);if(!this.searchProperty()){this.completeTextData(this.currentData);}}TextProperty.prototype.defaultBoxWidth=[0,0];TextProperty.prototype.copyData=function(obj,data){for(var s in data){if(Object.prototype.hasOwnProperty.call(data,s)){obj[s]=data[s];}}return obj;};TextProperty.prototype.setCurrentData=function(data){if(!data.__complete){this.completeTextData(data);}this.currentData=data;this.currentData.boxWidth=this.currentData.boxWidth||this.defaultBoxWidth;this._mdf=true;};TextProperty.prototype.searchProperty=function(){return this.searchKeyframes();};TextProperty.prototype.searchKeyframes=function(){this.kf=this.data.d.k.length>1;if(this.kf){this.addEffect(this.getKeyframeValue.bind(this));}return this.kf;};TextProperty.prototype.addEffect=function(effectFunction){this.effectsSequence.push(effectFunction);this.elem.addDynamicProperty(this);};TextProperty.prototype.getValue=function(_finalValue){if((this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length)&&!_finalValue){return;}this.currentData.t=this.data.d.k[this.keysIndex].s.t;var currentValue=this.currentData;var currentIndex=this.keysIndex;if(this.lock){this.setCurrentData(this.currentData);return;}this.lock=true;this._mdf=false;var i;var len=this.effectsSequence.length;var finalValue=_finalValue||this.data.d.k[this.keysIndex].s;for(i=0;i<len;i+=1){// Checking if index changed to prevent creating a new object every time the expression updates.
		if(currentIndex!==this.keysIndex){finalValue=this.effectsSequence[i](finalValue,finalValue.t);}else {finalValue=this.effectsSequence[i](this.currentData,finalValue.t);}}if(currentValue!==finalValue){this.setCurrentData(finalValue);}this.v=this.currentData;this.pv=this.v;this.lock=false;this.frameId=this.elem.globalData.frameId;};TextProperty.prototype.getKeyframeValue=function(){var textKeys=this.data.d.k;var frameNum=this.elem.comp.renderedFrame;var i=0;var len=textKeys.length;while(i<=len-1){if(i===len-1||textKeys[i+1].t>frameNum){break;}i+=1;}if(this.keysIndex!==i){this.keysIndex=i;}return this.data.d.k[this.keysIndex].s;};TextProperty.prototype.buildFinalText=function(text){var charactersArray=[];var i=0;var len=text.length;var charCode;var secondCharCode;var shouldCombine=false;var shouldCombineNext=false;var currentChars='';while(i<len){shouldCombine=shouldCombineNext;shouldCombineNext=false;charCode=text.charCodeAt(i);currentChars=text.charAt(i);if(FontManager.isCombinedCharacter(charCode)){shouldCombine=true;// It's a potential surrogate pair (this is the High surrogate)
		}else if(charCode>=0xD800&&charCode<=0xDBFF){if(FontManager.isRegionalFlag(text,i)){currentChars=text.substr(i,14);}else {secondCharCode=text.charCodeAt(i+1);// It's a surrogate pair (this is the Low surrogate)
		if(secondCharCode>=0xDC00&&secondCharCode<=0xDFFF){if(FontManager.isModifier(charCode,secondCharCode)){currentChars=text.substr(i,2);shouldCombine=true;}else if(FontManager.isFlagEmoji(text.substr(i,4))){currentChars=text.substr(i,4);}else {currentChars=text.substr(i,2);}}}}else if(charCode>0xDBFF){secondCharCode=text.charCodeAt(i+1);if(FontManager.isVariationSelector(charCode)){shouldCombine=true;}}else if(FontManager.isZeroWidthJoiner(charCode)){shouldCombine=true;shouldCombineNext=true;}if(shouldCombine){charactersArray[charactersArray.length-1]+=currentChars;shouldCombine=false;}else {charactersArray.push(currentChars);}i+=currentChars.length;}return charactersArray;};TextProperty.prototype.completeTextData=function(documentData){documentData.__complete=true;var fontManager=this.elem.globalData.fontManager;var data=this.data;var letters=[];var i;var len;var newLineFlag;var index=0;var val;var anchorGrouping=data.m.g;var currentSize=0;var currentPos=0;var currentLine=0;var lineWidths=[];var lineWidth=0;var maxLineWidth=0;var j;var jLen;var fontData=fontManager.getFontByName(documentData.f);var charData;var cLength=0;var fontProps=getFontProperties(fontData);documentData.fWeight=fontProps.weight;documentData.fStyle=fontProps.style;documentData.finalSize=documentData.s;documentData.finalText=this.buildFinalText(documentData.t);len=documentData.finalText.length;documentData.finalLineHeight=documentData.lh;var trackingOffset=documentData.tr/1000*documentData.finalSize;var charCode;if(documentData.sz){var flag=true;var boxWidth=documentData.sz[0];var boxHeight=documentData.sz[1];var currentHeight;var finalText;while(flag){finalText=this.buildFinalText(documentData.t);currentHeight=0;lineWidth=0;len=finalText.length;trackingOffset=documentData.tr/1000*documentData.finalSize;var lastSpaceIndex=-1;for(i=0;i<len;i+=1){charCode=finalText[i].charCodeAt(0);newLineFlag=false;if(finalText[i]===' '){lastSpaceIndex=i;}else if(charCode===13||charCode===3){lineWidth=0;newLineFlag=true;currentHeight+=documentData.finalLineHeight||documentData.finalSize*1.2;}if(fontManager.chars){charData=fontManager.getCharData(finalText[i],fontData.fStyle,fontData.fFamily);cLength=newLineFlag?0:charData.w*documentData.finalSize/100;}else {// tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
		cLength=fontManager.measureText(finalText[i],documentData.f,documentData.finalSize);}if(lineWidth+cLength>boxWidth&&finalText[i]!==' '){if(lastSpaceIndex===-1){len+=1;}else {i=lastSpaceIndex;}currentHeight+=documentData.finalLineHeight||documentData.finalSize*1.2;finalText.splice(i,lastSpaceIndex===i?1:0,'\r');// finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
		lastSpaceIndex=-1;lineWidth=0;}else {lineWidth+=cLength;lineWidth+=trackingOffset;}}currentHeight+=fontData.ascent*documentData.finalSize/100;if(this.canResize&&documentData.finalSize>this.minimumFontSize&&boxHeight<currentHeight){documentData.finalSize-=1;documentData.finalLineHeight=documentData.finalSize*documentData.lh/documentData.s;}else {documentData.finalText=finalText;len=documentData.finalText.length;flag=false;}}}lineWidth=-trackingOffset;cLength=0;var uncollapsedSpaces=0;var currentChar;for(i=0;i<len;i+=1){newLineFlag=false;currentChar=documentData.finalText[i];charCode=currentChar.charCodeAt(0);if(charCode===13||charCode===3){uncollapsedSpaces=0;lineWidths.push(lineWidth);maxLineWidth=lineWidth>maxLineWidth?lineWidth:maxLineWidth;lineWidth=-2*trackingOffset;val='';newLineFlag=true;currentLine+=1;}else {val=currentChar;}if(fontManager.chars){charData=fontManager.getCharData(currentChar,fontData.fStyle,fontManager.getFontByName(documentData.f).fFamily);cLength=newLineFlag?0:charData.w*documentData.finalSize/100;}else {// var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
		// tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
		cLength=fontManager.measureText(val,documentData.f,documentData.finalSize);}//
		if(currentChar===' '){uncollapsedSpaces+=cLength+trackingOffset;}else {lineWidth+=cLength+trackingOffset+uncollapsedSpaces;uncollapsedSpaces=0;}letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag,anIndexes:[],val:val,line:currentLine,animatorJustifyOffset:0});if(anchorGrouping==2){// eslint-disable-line eqeqeq
		currentSize+=cLength;if(val===''||val===' '||i===len-1){if(val===''||val===' '){currentSize-=cLength;}while(currentPos<=i){letters[currentPos].an=currentSize;letters[currentPos].ind=index;letters[currentPos].extra=cLength;currentPos+=1;}index+=1;currentSize=0;}}else if(anchorGrouping==3){// eslint-disable-line eqeqeq
		currentSize+=cLength;if(val===''||i===len-1){if(val===''){currentSize-=cLength;}while(currentPos<=i){letters[currentPos].an=currentSize;letters[currentPos].ind=index;letters[currentPos].extra=cLength;currentPos+=1;}currentSize=0;index+=1;}}else {letters[index].ind=index;letters[index].extra=0;index+=1;}}documentData.l=letters;maxLineWidth=lineWidth>maxLineWidth?lineWidth:maxLineWidth;lineWidths.push(lineWidth);if(documentData.sz){documentData.boxWidth=documentData.sz[0];documentData.justifyOffset=0;}else {documentData.boxWidth=maxLineWidth;switch(documentData.j){case 1:documentData.justifyOffset=-documentData.boxWidth;break;case 2:documentData.justifyOffset=-documentData.boxWidth/2;break;default:documentData.justifyOffset=0;}}documentData.lineWidths=lineWidths;var animators=data.a;var animatorData;var letterData;jLen=animators.length;var based;var ind;var indexes=[];for(j=0;j<jLen;j+=1){animatorData=animators[j];if(animatorData.a.sc){documentData.strokeColorAnim=true;}if(animatorData.a.sw){documentData.strokeWidthAnim=true;}if(animatorData.a.fc||animatorData.a.fh||animatorData.a.fs||animatorData.a.fb){documentData.fillColorAnim=true;}ind=0;based=animatorData.s.b;for(i=0;i<len;i+=1){letterData=letters[i];letterData.anIndexes[j]=ind;if(based==1&&letterData.val!==''||based==2&&letterData.val!==''&&letterData.val!==' '||based==3&&(letterData.n||letterData.val==' '||i==len-1)||based==4&&(letterData.n||i==len-1)){// eslint-disable-line eqeqeq
		if(animatorData.s.rn===1){indexes.push(ind);}ind+=1;}}data.a[j].s.totalChars=ind;var currentInd=-1;var newInd;if(animatorData.s.rn===1){for(i=0;i<len;i+=1){letterData=letters[i];if(currentInd!=letterData.anIndexes[j]){// eslint-disable-line eqeqeq
		currentInd=letterData.anIndexes[j];newInd=indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];}letterData.anIndexes[j]=newInd;}}}documentData.yOffset=documentData.finalLineHeight||documentData.finalSize*1.2;documentData.ls=documentData.ls||0;documentData.ascent=fontData.ascent*documentData.finalSize/100;};TextProperty.prototype.updateDocumentData=function(newData,index){index=index===undefined?this.keysIndex:index;var dData=this.copyData({},this.data.d.k[index].s);dData=this.copyData(dData,newData);this.data.d.k[index].s=dData;this.recalculate(index);this.setCurrentData(dData);this.elem.addDynamicProperty(this);};TextProperty.prototype.recalculate=function(index){var dData=this.data.d.k[index].s;dData.__complete=false;this.keysIndex=0;this._isFirstFrame=true;this.getValue(dData);};TextProperty.prototype.canResizeFont=function(_canResize){this.canResize=_canResize;this.recalculate(this.keysIndex);this.elem.addDynamicProperty(this);};TextProperty.prototype.setMinimumFontSize=function(_fontValue){this.minimumFontSize=Math.floor(_fontValue)||1;this.recalculate(this.keysIndex);this.elem.addDynamicProperty(this);};var TextSelectorProp=function(){var max=Math.max;var min=Math.min;var floor=Math.floor;function TextSelectorPropFactory(elem,data){this._currentTextLength=-1;this.k=false;this.data=data;this.elem=elem;this.comp=elem.comp;this.finalS=0;this.finalE=0;this.initDynamicPropertyContainer(elem);this.s=PropertyFactory.getProp(elem,data.s||{k:0},0,0,this);if('e'in data){this.e=PropertyFactory.getProp(elem,data.e,0,0,this);}else {this.e={v:100};}this.o=PropertyFactory.getProp(elem,data.o||{k:0},0,0,this);this.xe=PropertyFactory.getProp(elem,data.xe||{k:0},0,0,this);this.ne=PropertyFactory.getProp(elem,data.ne||{k:0},0,0,this);this.sm=PropertyFactory.getProp(elem,data.sm||{k:100},0,0,this);this.a=PropertyFactory.getProp(elem,data.a,0,0.01,this);if(!this.dynamicProperties.length){this.getValue();}}TextSelectorPropFactory.prototype={getMult:function getMult(ind){if(this._currentTextLength!==this.elem.textProperty.currentData.l.length){this.getValue();}var x1=0;var y1=0;var x2=1;var y2=1;if(this.ne.v>0){x1=this.ne.v/100.0;}else {y1=-this.ne.v/100.0;}if(this.xe.v>0){x2=1.0-this.xe.v/100.0;}else {y2=1.0+this.xe.v/100.0;}var easer=BezierFactory.getBezierEasing(x1,y1,x2,y2).get;var mult=0;var s=this.finalS;var e=this.finalE;var type=this.data.sh;if(type===2){if(e===s){mult=ind>=e?1:0;}else {mult=max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));}mult=easer(mult);}else if(type===3){if(e===s){mult=ind>=e?0:1;}else {mult=1-max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));}mult=easer(mult);}else if(type===4){if(e===s){mult=0;}else {mult=max(0,min(0.5/(e-s)+(ind-s)/(e-s),1));if(mult<0.5){mult*=2;}else {mult=1-2*(mult-0.5);}}mult=easer(mult);}else if(type===5){if(e===s){mult=0;}else {var tot=e-s;/* ind += 0.5;
		                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */ind=min(max(0,ind+0.5-s),e-s);var x=-tot/2+ind;var a=tot/2;mult=Math.sqrt(1-x*x/(a*a));}mult=easer(mult);}else if(type===6){if(e===s){mult=0;}else {ind=min(max(0,ind+0.5-s),e-s);mult=(1+Math.cos(Math.PI+Math.PI*2*ind/(e-s)))/2;// eslint-disable-line
		}mult=easer(mult);}else {if(ind>=floor(s)){if(ind-s<0){mult=max(0,min(min(e,1)-(s-ind),1));}else {mult=max(0,min(e-ind,1));}}mult=easer(mult);}// Smoothness implementation.
		// The smoothness represents a reduced range of the original [0; 1] range.
		// if smoothness is 25%, the new range will be [0.375; 0.625]
		// Steps are:
		// - find the lower value of the new range (threshold)
		// - if multiplier is smaller than that value, floor it to 0
		// - if it is larger,
		//     - subtract the threshold
		//     - divide it by the smoothness (this will return the range to [0; 1])
		// Note: If it doesn't work on some scenarios, consider applying it before the easer.
		if(this.sm.v!==100){var smoothness=this.sm.v*0.01;if(smoothness===0){smoothness=0.00000001;}var threshold=0.5-smoothness*0.5;if(mult<threshold){mult=0;}else {mult=(mult-threshold)/smoothness;if(mult>1){mult=1;}}}return mult*this.a.v;},getValue:function getValue(newCharsFlag){this.iterateDynamicProperties();this._mdf=newCharsFlag||this._mdf;this._currentTextLength=this.elem.textProperty.currentData.l.length||0;if(newCharsFlag&&this.data.r===2){this.e.v=this._currentTextLength;}var divisor=this.data.r===2?1:100/this.data.totalChars;var o=this.o.v/divisor;var s=this.s.v/divisor+o;var e=this.e.v/divisor+o;if(s>e){var _s=s;s=e;e=_s;}this.finalS=s;this.finalE=e;}};extendPrototype([DynamicPropertyContainer],TextSelectorPropFactory);function getTextSelectorProp(elem,data,arr){return new TextSelectorPropFactory(elem,data);}return {getTextSelectorProp:getTextSelectorProp};}();function TextAnimatorDataProperty(elem,animatorProps,container){var defaultData={propType:false};var getProp=PropertyFactory.getProp;var textAnimatorAnimatables=animatorProps.a;this.a={r:textAnimatorAnimatables.r?getProp(elem,textAnimatorAnimatables.r,0,degToRads,container):defaultData,rx:textAnimatorAnimatables.rx?getProp(elem,textAnimatorAnimatables.rx,0,degToRads,container):defaultData,ry:textAnimatorAnimatables.ry?getProp(elem,textAnimatorAnimatables.ry,0,degToRads,container):defaultData,sk:textAnimatorAnimatables.sk?getProp(elem,textAnimatorAnimatables.sk,0,degToRads,container):defaultData,sa:textAnimatorAnimatables.sa?getProp(elem,textAnimatorAnimatables.sa,0,degToRads,container):defaultData,s:textAnimatorAnimatables.s?getProp(elem,textAnimatorAnimatables.s,1,0.01,container):defaultData,a:textAnimatorAnimatables.a?getProp(elem,textAnimatorAnimatables.a,1,0,container):defaultData,o:textAnimatorAnimatables.o?getProp(elem,textAnimatorAnimatables.o,0,0.01,container):defaultData,p:textAnimatorAnimatables.p?getProp(elem,textAnimatorAnimatables.p,1,0,container):defaultData,sw:textAnimatorAnimatables.sw?getProp(elem,textAnimatorAnimatables.sw,0,0,container):defaultData,sc:textAnimatorAnimatables.sc?getProp(elem,textAnimatorAnimatables.sc,1,0,container):defaultData,fc:textAnimatorAnimatables.fc?getProp(elem,textAnimatorAnimatables.fc,1,0,container):defaultData,fh:textAnimatorAnimatables.fh?getProp(elem,textAnimatorAnimatables.fh,0,0,container):defaultData,fs:textAnimatorAnimatables.fs?getProp(elem,textAnimatorAnimatables.fs,0,0.01,container):defaultData,fb:textAnimatorAnimatables.fb?getProp(elem,textAnimatorAnimatables.fb,0,0.01,container):defaultData,t:textAnimatorAnimatables.t?getProp(elem,textAnimatorAnimatables.t,0,0,container):defaultData};this.s=TextSelectorProp.getTextSelectorProp(elem,animatorProps.s,container);this.s.t=animatorProps.s.t;}function TextAnimatorProperty(textData,renderType,elem){this._isFirstFrame=true;this._hasMaskedPath=false;this._frameId=-1;this._textData=textData;this._renderType=renderType;this._elem=elem;this._animatorsData=createSizedArray(this._textData.a.length);this._pathData={};this._moreOptions={alignment:{}};this.renderedLetters=[];this.lettersChangedFlag=false;this.initDynamicPropertyContainer(elem);}TextAnimatorProperty.prototype.searchProperties=function(){var i;var len=this._textData.a.length;var animatorProps;var getProp=PropertyFactory.getProp;for(i=0;i<len;i+=1){animatorProps=this._textData.a[i];this._animatorsData[i]=new TextAnimatorDataProperty(this._elem,animatorProps,this);}if(this._textData.p&&'m'in this._textData.p){this._pathData={a:getProp(this._elem,this._textData.p.a,0,0,this),f:getProp(this._elem,this._textData.p.f,0,0,this),l:getProp(this._elem,this._textData.p.l,0,0,this),r:getProp(this._elem,this._textData.p.r,0,0,this),p:getProp(this._elem,this._textData.p.p,0,0,this),m:this._elem.maskManager.getMaskProperty(this._textData.p.m)};this._hasMaskedPath=true;}else {this._hasMaskedPath=false;}this._moreOptions.alignment=getProp(this._elem,this._textData.m.a,1,0,this);};TextAnimatorProperty.prototype.getMeasures=function(documentData,lettersChangedFlag){this.lettersChangedFlag=lettersChangedFlag;if(!this._mdf&&!this._isFirstFrame&&!lettersChangedFlag&&(!this._hasMaskedPath||!this._pathData.m._mdf)){return;}this._isFirstFrame=false;var alignment=this._moreOptions.alignment.v;var animators=this._animatorsData;var textData=this._textData;var matrixHelper=this.mHelper;var renderType=this._renderType;var renderedLettersCount=this.renderedLetters.length;var xPos;var yPos;var i;var len;var letters=documentData.l;var pathInfo;var currentLength;var currentPoint;var segmentLength;var flag;var pointInd;var segmentInd;var prevPoint;var points;var segments;var partialLength;var totalLength;var perc;var tanAngle;var mask;if(this._hasMaskedPath){mask=this._pathData.m;if(!this._pathData.n||this._pathData._mdf){var paths=mask.v;if(this._pathData.r.v){paths=paths.reverse();}// TODO: release bezier data cached from previous pathInfo: this._pathData.pi
		pathInfo={tLength:0,segments:[]};len=paths._length-1;var bezierData;totalLength=0;for(i=0;i<len;i+=1){bezierData=bez.buildBezierData(paths.v[i],paths.v[i+1],[paths.o[i][0]-paths.v[i][0],paths.o[i][1]-paths.v[i][1]],[paths.i[i+1][0]-paths.v[i+1][0],paths.i[i+1][1]-paths.v[i+1][1]]);pathInfo.tLength+=bezierData.segmentLength;pathInfo.segments.push(bezierData);totalLength+=bezierData.segmentLength;}i=len;if(mask.v.c){bezierData=bez.buildBezierData(paths.v[i],paths.v[0],[paths.o[i][0]-paths.v[i][0],paths.o[i][1]-paths.v[i][1]],[paths.i[0][0]-paths.v[0][0],paths.i[0][1]-paths.v[0][1]]);pathInfo.tLength+=bezierData.segmentLength;pathInfo.segments.push(bezierData);totalLength+=bezierData.segmentLength;}this._pathData.pi=pathInfo;}pathInfo=this._pathData.pi;currentLength=this._pathData.f.v;segmentInd=0;pointInd=1;segmentLength=0;flag=true;segments=pathInfo.segments;if(currentLength<0&&mask.v.c){if(pathInfo.tLength<Math.abs(currentLength)){currentLength=-Math.abs(currentLength)%pathInfo.tLength;}segmentInd=segments.length-1;points=segments[segmentInd].points;pointInd=points.length-1;while(currentLength<0){currentLength+=points[pointInd].partialLength;pointInd-=1;if(pointInd<0){segmentInd-=1;points=segments[segmentInd].points;pointInd=points.length-1;}}}points=segments[segmentInd].points;prevPoint=points[pointInd-1];currentPoint=points[pointInd];partialLength=currentPoint.partialLength;}len=letters.length;xPos=0;yPos=0;var yOff=documentData.finalSize*1.2*0.714;var firstLine=true;var animatorProps;var animatorSelector;var j;var jLen;var letterValue;jLen=animators.length;var mult;var ind=-1;var offf;var xPathPos;var yPathPos;var initPathPos=currentLength;var initSegmentInd=segmentInd;var initPointInd=pointInd;var currentLine=-1;var elemOpacity;var sc;var sw;var fc;var k;var letterSw;var letterSc;var letterFc;var letterM='';var letterP=this.defaultPropsArray;var letterO;//
		if(documentData.j===2||documentData.j===1){var animatorJustifyOffset=0;var animatorFirstCharOffset=0;var justifyOffsetMult=documentData.j===2?-0.5:-1;var lastIndex=0;var isNewLine=true;for(i=0;i<len;i+=1){if(letters[i].n){if(animatorJustifyOffset){animatorJustifyOffset+=animatorFirstCharOffset;}while(lastIndex<i){letters[lastIndex].animatorJustifyOffset=animatorJustifyOffset;lastIndex+=1;}animatorJustifyOffset=0;isNewLine=true;}else {for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.t.propType){if(isNewLine&&documentData.j===2){animatorFirstCharOffset+=animatorProps.t.v*justifyOffsetMult;}animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorJustifyOffset+=animatorProps.t.v*mult[0]*justifyOffsetMult;}else {animatorJustifyOffset+=animatorProps.t.v*mult*justifyOffsetMult;}}}isNewLine=false;}}if(animatorJustifyOffset){animatorJustifyOffset+=animatorFirstCharOffset;}while(lastIndex<i){letters[lastIndex].animatorJustifyOffset=animatorJustifyOffset;lastIndex+=1;}}//
		for(i=0;i<len;i+=1){matrixHelper.reset();elemOpacity=1;if(letters[i].n){xPos=0;yPos+=documentData.yOffset;yPos+=firstLine?1:0;currentLength=initPathPos;firstLine=false;if(this._hasMaskedPath){segmentInd=initSegmentInd;pointInd=initPointInd;points=segments[segmentInd].points;prevPoint=points[pointInd-1];currentPoint=points[pointInd];partialLength=currentPoint.partialLength;segmentLength=0;}letterM='';letterFc='';letterSw='';letterO='';letterP=this.defaultPropsArray;}else {if(this._hasMaskedPath){if(currentLine!==letters[i].line){switch(documentData.j){case 1:currentLength+=totalLength-documentData.lineWidths[letters[i].line];break;case 2:currentLength+=(totalLength-documentData.lineWidths[letters[i].line])/2;break;}currentLine=letters[i].line;}if(ind!==letters[i].ind){if(letters[ind]){currentLength+=letters[ind].extra;}currentLength+=letters[i].an/2;ind=letters[i].ind;}currentLength+=alignment[0]*letters[i].an*0.005;var animatorOffset=0;for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.p.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorOffset+=animatorProps.p.v[0]*mult[0];}else {animatorOffset+=animatorProps.p.v[0]*mult;}}if(animatorProps.a.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){animatorOffset+=animatorProps.a.v[0]*mult[0];}else {animatorOffset+=animatorProps.a.v[0]*mult;}}}flag=true;// Force alignment only works with a single line for now
		if(this._pathData.a.v){currentLength=letters[0].an*0.5+(totalLength-this._pathData.f.v-letters[0].an*0.5-letters[letters.length-1].an*0.5)*ind/(len-1);currentLength+=this._pathData.f.v;}while(flag){if(segmentLength+partialLength>=currentLength+animatorOffset||!points){perc=(currentLength+animatorOffset-segmentLength)/currentPoint.partialLength;xPathPos=prevPoint.point[0]+(currentPoint.point[0]-prevPoint.point[0])*perc;yPathPos=prevPoint.point[1]+(currentPoint.point[1]-prevPoint.point[1])*perc;matrixHelper.translate(-alignment[0]*letters[i].an*0.005,-(alignment[1]*yOff)*0.01);flag=false;}else if(points){segmentLength+=currentPoint.partialLength;pointInd+=1;if(pointInd>=points.length){pointInd=0;segmentInd+=1;if(!segments[segmentInd]){if(mask.v.c){pointInd=0;segmentInd=0;points=segments[segmentInd].points;}else {segmentLength-=currentPoint.partialLength;points=null;}}else {points=segments[segmentInd].points;}}if(points){prevPoint=currentPoint;currentPoint=points[pointInd];partialLength=currentPoint.partialLength;}}}offf=letters[i].an/2-letters[i].add;matrixHelper.translate(-offf,0,0);}else {offf=letters[i].an/2-letters[i].add;matrixHelper.translate(-offf,0,0);// Grouping alignment
		matrixHelper.translate(-alignment[0]*letters[i].an*0.005,-alignment[1]*yOff*0.01,0);}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.t.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);// This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
		if(xPos!==0||documentData.j!==0){if(this._hasMaskedPath){if(mult.length){currentLength+=animatorProps.t.v*mult[0];}else {currentLength+=animatorProps.t.v*mult;}}else if(mult.length){xPos+=animatorProps.t.v*mult[0];}else {xPos+=animatorProps.t.v*mult;}}}}if(documentData.strokeWidthAnim){sw=documentData.sw||0;}if(documentData.strokeColorAnim){if(documentData.sc){sc=[documentData.sc[0],documentData.sc[1],documentData.sc[2]];}else {sc=[0,0,0];}}if(documentData.fillColorAnim&&documentData.fc){fc=[documentData.fc[0],documentData.fc[1],documentData.fc[2]];}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.a.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){matrixHelper.translate(-animatorProps.a.v[0]*mult[0],-animatorProps.a.v[1]*mult[1],animatorProps.a.v[2]*mult[2]);}else {matrixHelper.translate(-animatorProps.a.v[0]*mult,-animatorProps.a.v[1]*mult,animatorProps.a.v[2]*mult);}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.s.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(mult.length){matrixHelper.scale(1+(animatorProps.s.v[0]-1)*mult[0],1+(animatorProps.s.v[1]-1)*mult[1],1);}else {matrixHelper.scale(1+(animatorProps.s.v[0]-1)*mult,1+(animatorProps.s.v[1]-1)*mult,1);}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(animatorProps.sk.propType){if(mult.length){matrixHelper.skewFromAxis(-animatorProps.sk.v*mult[0],animatorProps.sa.v*mult[1]);}else {matrixHelper.skewFromAxis(-animatorProps.sk.v*mult,animatorProps.sa.v*mult);}}if(animatorProps.r.propType){if(mult.length){matrixHelper.rotateZ(-animatorProps.r.v*mult[2]);}else {matrixHelper.rotateZ(-animatorProps.r.v*mult);}}if(animatorProps.ry.propType){if(mult.length){matrixHelper.rotateY(animatorProps.ry.v*mult[1]);}else {matrixHelper.rotateY(animatorProps.ry.v*mult);}}if(animatorProps.rx.propType){if(mult.length){matrixHelper.rotateX(animatorProps.rx.v*mult[0]);}else {matrixHelper.rotateX(animatorProps.rx.v*mult);}}if(animatorProps.o.propType){if(mult.length){elemOpacity+=(animatorProps.o.v*mult[0]-elemOpacity)*mult[0];}else {elemOpacity+=(animatorProps.o.v*mult-elemOpacity)*mult;}}if(documentData.strokeWidthAnim&&animatorProps.sw.propType){if(mult.length){sw+=animatorProps.sw.v*mult[0];}else {sw+=animatorProps.sw.v*mult;}}if(documentData.strokeColorAnim&&animatorProps.sc.propType){for(k=0;k<3;k+=1){if(mult.length){sc[k]+=(animatorProps.sc.v[k]-sc[k])*mult[0];}else {sc[k]+=(animatorProps.sc.v[k]-sc[k])*mult;}}}if(documentData.fillColorAnim&&documentData.fc){if(animatorProps.fc.propType){for(k=0;k<3;k+=1){if(mult.length){fc[k]+=(animatorProps.fc.v[k]-fc[k])*mult[0];}else {fc[k]+=(animatorProps.fc.v[k]-fc[k])*mult;}}}if(animatorProps.fh.propType){if(mult.length){fc=addHueToRGB(fc,animatorProps.fh.v*mult[0]);}else {fc=addHueToRGB(fc,animatorProps.fh.v*mult);}}if(animatorProps.fs.propType){if(mult.length){fc=addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);}else {fc=addSaturationToRGB(fc,animatorProps.fs.v*mult);}}if(animatorProps.fb.propType){if(mult.length){fc=addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);}else {fc=addBrightnessToRGB(fc,animatorProps.fb.v*mult);}}}}for(j=0;j<jLen;j+=1){animatorProps=animators[j].a;if(animatorProps.p.propType){animatorSelector=animators[j].s;mult=animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);if(this._hasMaskedPath){if(mult.length){matrixHelper.translate(0,animatorProps.p.v[1]*mult[0],-animatorProps.p.v[2]*mult[1]);}else {matrixHelper.translate(0,animatorProps.p.v[1]*mult,-animatorProps.p.v[2]*mult);}}else if(mult.length){matrixHelper.translate(animatorProps.p.v[0]*mult[0],animatorProps.p.v[1]*mult[1],-animatorProps.p.v[2]*mult[2]);}else {matrixHelper.translate(animatorProps.p.v[0]*mult,animatorProps.p.v[1]*mult,-animatorProps.p.v[2]*mult);}}}if(documentData.strokeWidthAnim){letterSw=sw<0?0:sw;}if(documentData.strokeColorAnim){letterSc='rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';}if(documentData.fillColorAnim&&documentData.fc){letterFc='rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';}if(this._hasMaskedPath){matrixHelper.translate(0,-documentData.ls);matrixHelper.translate(0,alignment[1]*yOff*0.01+yPos,0);if(this._pathData.p.v){tanAngle=(currentPoint.point[1]-prevPoint.point[1])/(currentPoint.point[0]-prevPoint.point[0]);var rot=Math.atan(tanAngle)*180/Math.PI;if(currentPoint.point[0]<prevPoint.point[0]){rot+=180;}matrixHelper.rotate(-rot*Math.PI/180);}matrixHelper.translate(xPathPos,yPathPos,0);currentLength-=alignment[0]*letters[i].an*0.005;if(letters[i+1]&&ind!==letters[i+1].ind){currentLength+=letters[i].an/2;currentLength+=documentData.tr*0.001*documentData.finalSize;}}else {matrixHelper.translate(xPos,yPos,0);if(documentData.ps){// matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
		matrixHelper.translate(documentData.ps[0],documentData.ps[1]+documentData.ascent,0);}switch(documentData.j){case 1:matrixHelper.translate(letters[i].animatorJustifyOffset+documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[letters[i].line]),0,0);break;case 2:matrixHelper.translate(letters[i].animatorJustifyOffset+documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[letters[i].line])/2,0,0);break;}matrixHelper.translate(0,-documentData.ls);matrixHelper.translate(offf,0,0);matrixHelper.translate(alignment[0]*letters[i].an*0.005,alignment[1]*yOff*0.01,0);xPos+=letters[i].l+documentData.tr*0.001*documentData.finalSize;}if(renderType==='html'){letterM=matrixHelper.toCSS();}else if(renderType==='svg'){letterM=matrixHelper.to2dCSS();}else {letterP=[matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];}letterO=elemOpacity;}if(renderedLettersCount<=i){letterValue=new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);this.renderedLetters.push(letterValue);renderedLettersCount+=1;this.lettersChangedFlag=true;}else {letterValue=this.renderedLetters[i];this.lettersChangedFlag=letterValue.update(letterO,letterSw,letterSc,letterFc,letterM,letterP)||this.lettersChangedFlag;}}};TextAnimatorProperty.prototype.getValue=function(){if(this._elem.globalData.frameId===this._frameId){return;}this._frameId=this._elem.globalData.frameId;this.iterateDynamicProperties();};TextAnimatorProperty.prototype.mHelper=new Matrix();TextAnimatorProperty.prototype.defaultPropsArray=[];extendPrototype([DynamicPropertyContainer],TextAnimatorProperty);function ITextElement(){}ITextElement.prototype.initElement=function(data,globalData,comp){this.lettersChangedFlag=true;this.initFrame();this.initBaseData(data,globalData,comp);this.textProperty=new TextProperty(this,data.t,this.dynamicProperties);this.textAnimator=new TextAnimatorProperty(data.t,this.renderType,this);this.initTransform(data,globalData,comp);this.initHierarchy();this.initRenderable();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();this.createContent();this.hide();this.textAnimator.searchProperties(this.dynamicProperties);};ITextElement.prototype.prepareFrame=function(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);};ITextElement.prototype.createPathShape=function(matrixHelper,shapes){var j;var jLen=shapes.length;var pathNodes;var shapeStr='';for(j=0;j<jLen;j+=1){if(shapes[j].ty==='sh'){pathNodes=shapes[j].ks.k;shapeStr+=buildShapeString(pathNodes,pathNodes.i.length,true,matrixHelper);}}return shapeStr;};ITextElement.prototype.updateDocumentData=function(newData,index){this.textProperty.updateDocumentData(newData,index);};ITextElement.prototype.canResizeFont=function(_canResize){this.textProperty.canResizeFont(_canResize);};ITextElement.prototype.setMinimumFontSize=function(_fontSize){this.textProperty.setMinimumFontSize(_fontSize);};ITextElement.prototype.applyTextPropertiesToMatrix=function(documentData,matrixHelper,lineNumber,xPos,yPos){if(documentData.ps){matrixHelper.translate(documentData.ps[0],documentData.ps[1]+documentData.ascent,0);}matrixHelper.translate(0,-documentData.ls,0);switch(documentData.j){case 1:matrixHelper.translate(documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[lineNumber]),0,0);break;case 2:matrixHelper.translate(documentData.justifyOffset+(documentData.boxWidth-documentData.lineWidths[lineNumber])/2,0,0);break;}matrixHelper.translate(xPos,yPos,0);};ITextElement.prototype.buildColor=function(colorData){return 'rgb('+Math.round(colorData[0]*255)+','+Math.round(colorData[1]*255)+','+Math.round(colorData[2]*255)+')';};ITextElement.prototype.emptyProp=new LetterProps();ITextElement.prototype.destroy=function(){};ITextElement.prototype.validateText=function(){if(this.textProperty._mdf||this.textProperty._isFirstFrame){this.buildNewText();this.textProperty._isFirstFrame=false;this.textProperty._mdf=false;}};var emptyShapeData={shapes:[]};function SVGTextLottieElement(data,globalData,comp){this.textSpans=[];this.renderType='svg';this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],SVGTextLottieElement);SVGTextLottieElement.prototype.createContent=function(){if(this.data.singleShape&&!this.globalData.fontManager.chars){this.textContainer=createNS('text');}};SVGTextLottieElement.prototype.buildTextContents=function(textArray){var i=0;var len=textArray.length;var textContents=[];var currentTextContent='';while(i<len){if(textArray[i]===String.fromCharCode(13)||textArray[i]===String.fromCharCode(3)){textContents.push(currentTextContent);currentTextContent='';}else {currentTextContent+=textArray[i];}i+=1;}textContents.push(currentTextContent);return textContents;};SVGTextLottieElement.prototype.buildShapeData=function(data,scale){// data should probably be cloned to apply scale separately to each instance of a text on different layers
		// but since text internal content gets only rendered once and then it's never rerendered,
		// it's probably safe not to clone data and reuse always the same instance even if the object is mutated.
		// Avoiding cloning is preferred since cloning each character shape data is expensive
		if(data.shapes&&data.shapes.length){var shape=data.shapes[0];if(shape.it){var shapeItem=shape.it[shape.it.length-1];if(shapeItem.s){shapeItem.s.k[0]=scale;shapeItem.s.k[1]=scale;}}}return data;};SVGTextLottieElement.prototype.buildNewText=function(){this.addDynamicProperty(this);var i;var len;var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData?documentData.l.length:0);if(documentData.fc){this.layerElement.setAttribute('fill',this.buildColor(documentData.fc));}else {this.layerElement.setAttribute('fill','rgba(0,0,0,0)');}if(documentData.sc){this.layerElement.setAttribute('stroke',this.buildColor(documentData.sc));this.layerElement.setAttribute('stroke-width',documentData.sw);}this.layerElement.setAttribute('font-size',documentData.finalSize);var fontData=this.globalData.fontManager.getFontByName(documentData.f);if(fontData.fClass){this.layerElement.setAttribute('class',fontData.fClass);}else {this.layerElement.setAttribute('font-family',fontData.fFamily);var fWeight=documentData.fWeight;var fStyle=documentData.fStyle;this.layerElement.setAttribute('font-style',fStyle);this.layerElement.setAttribute('font-weight',fWeight);}this.layerElement.setAttribute('aria-label',documentData.t);var letters=documentData.l||[];var usesGlyphs=!!this.globalData.fontManager.chars;len=letters.length;var tSpan;var matrixHelper=this.mHelper;var shapeStr='';var singleShape=this.data.singleShape;var xPos=0;var yPos=0;var firstLine=true;var trackingOffset=documentData.tr*0.001*documentData.finalSize;if(singleShape&&!usesGlyphs&&!documentData.sz){var tElement=this.textContainer;var justify='start';switch(documentData.j){case 1:justify='end';break;case 2:justify='middle';break;default:justify='start';break;}tElement.setAttribute('text-anchor',justify);tElement.setAttribute('letter-spacing',trackingOffset);var textContent=this.buildTextContents(documentData.finalText);len=textContent.length;yPos=documentData.ps?documentData.ps[1]+documentData.ascent:0;for(i=0;i<len;i+=1){tSpan=this.textSpans[i].span||createNS('tspan');tSpan.textContent=textContent[i];tSpan.setAttribute('x',0);tSpan.setAttribute('y',yPos);tSpan.style.display='inherit';tElement.appendChild(tSpan);if(!this.textSpans[i]){this.textSpans[i]={span:null,glyph:null};}this.textSpans[i].span=tSpan;yPos+=documentData.finalLineHeight;}this.layerElement.appendChild(tElement);}else {var cachedSpansLength=this.textSpans.length;var charData;for(i=0;i<len;i+=1){if(!this.textSpans[i]){this.textSpans[i]={span:null,childSpan:null,glyph:null};}if(!usesGlyphs||!singleShape||i===0){tSpan=cachedSpansLength>i?this.textSpans[i].span:createNS(usesGlyphs?'g':'text');if(cachedSpansLength<=i){tSpan.setAttribute('stroke-linecap','butt');tSpan.setAttribute('stroke-linejoin','round');tSpan.setAttribute('stroke-miterlimit','4');this.textSpans[i].span=tSpan;if(usesGlyphs){var childSpan=createNS('g');tSpan.appendChild(childSpan);this.textSpans[i].childSpan=childSpan;}this.textSpans[i].span=tSpan;this.layerElement.appendChild(tSpan);}tSpan.style.display='inherit';}matrixHelper.reset();if(singleShape){if(letters[i].n){xPos=-trackingOffset;yPos+=documentData.yOffset;yPos+=firstLine?1:0;firstLine=false;}this.applyTextPropertiesToMatrix(documentData,matrixHelper,letters[i].line,xPos,yPos);xPos+=letters[i].l||0;// xPos += letters[i].val === ' ' ? 0 : trackingOffset;
		xPos+=trackingOffset;}if(usesGlyphs){charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);var glyphElement;// t === 1 means the character has been replaced with an animated shaped
		if(charData.t===1){glyphElement=new SVGCompElement(charData.data,this.globalData,this);}else {var data=emptyShapeData;if(charData.data&&charData.data.shapes){data=this.buildShapeData(charData.data,documentData.finalSize);}glyphElement=new SVGShapeElement(data,this.globalData,this);}if(this.textSpans[i].glyph){var glyph=this.textSpans[i].glyph;this.textSpans[i].childSpan.removeChild(glyph.layerElement);glyph.destroy();}this.textSpans[i].glyph=glyphElement;glyphElement._debug=true;glyphElement.prepareFrame(0);glyphElement.renderFrame();this.textSpans[i].childSpan.appendChild(glyphElement.layerElement);// when using animated shapes, the layer will be scaled instead of replacing the internal scale
		// this might have issues with strokes and might need a different solution
		if(charData.t===1){this.textSpans[i].childSpan.setAttribute('transform','scale('+documentData.finalSize/100+','+documentData.finalSize/100+')');}}else {if(singleShape){tSpan.setAttribute('transform','translate('+matrixHelper.props[12]+','+matrixHelper.props[13]+')');}tSpan.textContent=letters[i].val;tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace','xml:space','preserve');}//
		}if(singleShape&&tSpan){tSpan.setAttribute('d',shapeStr);}}while(i<this.textSpans.length){this.textSpans[i].span.style.display='none';i+=1;}this._sizeChanged=true;};SVGTextLottieElement.prototype.sourceRectAtTime=function(){this.prepareFrame(this.comp.renderedFrame-this.data.st);this.renderInnerContent();if(this._sizeChanged){this._sizeChanged=false;var textBox=this.layerElement.getBBox();this.bbox={top:textBox.y,left:textBox.x,width:textBox.width,height:textBox.height};}return this.bbox;};SVGTextLottieElement.prototype.getValue=function(){var i;var len=this.textSpans.length;var glyphElement;this.renderedFrame=this.comp.renderedFrame;for(i=0;i<len;i+=1){glyphElement=this.textSpans[i].glyph;if(glyphElement){glyphElement.prepareFrame(this.comp.renderedFrame-this.data.st);if(glyphElement._mdf){this._mdf=true;}}}};SVGTextLottieElement.prototype.renderInnerContent=function(){this.validateText();if(!this.data.singleShape||this._mdf){this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);if(this.lettersChangedFlag||this.textAnimator.lettersChangedFlag){this._sizeChanged=true;var i;var len;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var textSpan;var glyphElement;for(i=0;i<len;i+=1){if(!letters[i].n){renderedLetter=renderedLetters[i];textSpan=this.textSpans[i].span;glyphElement=this.textSpans[i].glyph;if(glyphElement){glyphElement.renderFrame();}if(renderedLetter._mdf.m){textSpan.setAttribute('transform',renderedLetter.m);}if(renderedLetter._mdf.o){textSpan.setAttribute('opacity',renderedLetter.o);}if(renderedLetter._mdf.sw){textSpan.setAttribute('stroke-width',renderedLetter.sw);}if(renderedLetter._mdf.sc){textSpan.setAttribute('stroke',renderedLetter.sc);}if(renderedLetter._mdf.fc){textSpan.setAttribute('fill',renderedLetter.fc);}}}}}};function ISolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([IImageElement],ISolidElement);ISolidElement.prototype.createContent=function(){var rect=createNS('rect');/// /rect.style.width = this.data.sw;
		/// /rect.style.height = this.data.sh;
		/// /rect.style.fill = this.data.sc;
		rect.setAttribute('width',this.data.sw);rect.setAttribute('height',this.data.sh);rect.setAttribute('fill',this.data.sc);this.layerElement.appendChild(rect);};function NullElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initFrame();this.initTransform(data,globalData,comp);this.initHierarchy();}NullElement.prototype.prepareFrame=function(num){this.prepareProperties(num,true);};NullElement.prototype.renderFrame=function(){};NullElement.prototype.getBaseElement=function(){return null;};NullElement.prototype.destroy=function(){};NullElement.prototype.sourceRectAtTime=function(){};NullElement.prototype.hide=function(){};extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement],NullElement);function SVGRendererBase(){}extendPrototype([BaseRenderer],SVGRendererBase);SVGRendererBase.prototype.createNull=function(data){return new NullElement(data,this.globalData,this);};SVGRendererBase.prototype.createShape=function(data){return new SVGShapeElement(data,this.globalData,this);};SVGRendererBase.prototype.createText=function(data){return new SVGTextLottieElement(data,this.globalData,this);};SVGRendererBase.prototype.createImage=function(data){return new IImageElement(data,this.globalData,this);};SVGRendererBase.prototype.createSolid=function(data){return new ISolidElement(data,this.globalData,this);};SVGRendererBase.prototype.configAnimation=function(animData){this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');this.svgElement.setAttribute('xmlns:xlink','http://www.w3.org/1999/xlink');if(this.renderConfig.viewBoxSize){this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);}else {this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);}if(!this.renderConfig.viewBoxOnly){this.svgElement.setAttribute('width',animData.w);this.svgElement.setAttribute('height',animData.h);this.svgElement.style.width='100%';this.svgElement.style.height='100%';this.svgElement.style.transform='translate3d(0,0,0)';this.svgElement.style.contentVisibility=this.renderConfig.contentVisibility;}if(this.renderConfig.width){this.svgElement.setAttribute('width',this.renderConfig.width);}if(this.renderConfig.height){this.svgElement.setAttribute('height',this.renderConfig.height);}if(this.renderConfig.className){this.svgElement.setAttribute('class',this.renderConfig.className);}if(this.renderConfig.id){this.svgElement.setAttribute('id',this.renderConfig.id);}if(this.renderConfig.focusable!==undefined){this.svgElement.setAttribute('focusable',this.renderConfig.focusable);}this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);// this.layerElement.style.transform = 'translate3d(0,0,0)';
		// this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
		this.animationItem.wrapper.appendChild(this.svgElement);// Mask animation
		var defs=this.globalData.defs;this.setupGlobalData(animData,defs);this.globalData.progressiveLoad=this.renderConfig.progressiveLoad;this.data=animData;var maskElement=createNS('clipPath');var rect=createNS('rect');rect.setAttribute('width',animData.w);rect.setAttribute('height',animData.h);rect.setAttribute('x',0);rect.setAttribute('y',0);var maskId=createElementID();maskElement.setAttribute('id',maskId);maskElement.appendChild(rect);this.layerElement.setAttribute('clip-path','url('+getLocationHref()+'#'+maskId+')');defs.appendChild(maskElement);this.layers=animData.layers;this.elements=createSizedArray(animData.layers.length);};SVGRendererBase.prototype.destroy=function(){if(this.animationItem.wrapper){this.animationItem.wrapper.innerText='';}this.layerElement=null;this.globalData.defs=null;var i;var len=this.layers?this.layers.length:0;for(i=0;i<len;i+=1){if(this.elements[i]&&this.elements[i].destroy){this.elements[i].destroy();}}this.elements.length=0;this.destroyed=true;this.animationItem=null;};SVGRendererBase.prototype.updateContainerSize=function(){};SVGRendererBase.prototype.findIndexByInd=function(ind){var i=0;var len=this.layers.length;for(i=0;i<len;i+=1){if(this.layers[i].ind===ind){return i;}}return -1;};SVGRendererBase.prototype.buildItem=function(pos){var elements=this.elements;if(elements[pos]||this.layers[pos].ty===99){return;}elements[pos]=true;var element=this.createItem(this.layers[pos]);elements[pos]=element;if(getExpressionsPlugin()){if(this.layers[pos].ty===0){this.globalData.projectInterface.registerComposition(element);}element.initExpressions();}this.appendElementInPos(element,pos);if(this.layers[pos].tt){var elementIndex='tp'in this.layers[pos]?this.findIndexByInd(this.layers[pos].tp):pos-1;if(elementIndex===-1){return;}if(!this.elements[elementIndex]||this.elements[elementIndex]===true){this.buildItem(elementIndex);this.addPendingElement(element);}else {var matteElement=elements[elementIndex];var matteMask=matteElement.getMatte(this.layers[pos].tt);element.setMatte(matteMask);}}};SVGRendererBase.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();if(element.data.tt){var i=0;var len=this.elements.length;while(i<len){if(this.elements[i]===element){var elementIndex='tp'in element.data?this.findIndexByInd(element.data.tp):i-1;var matteElement=this.elements[elementIndex];var matteMask=matteElement.getMatte(this.layers[i].tt);element.setMatte(matteMask);break;}i+=1;}}}};SVGRendererBase.prototype.renderFrame=function(num){if(this.renderedFrame===num||this.destroyed){return;}if(num===null){num=this.renderedFrame;}else {this.renderedFrame=num;}// console.log('-------');
		// console.log('FRAME ',num);
		this.globalData.frameNum=num;this.globalData.frameId+=1;this.globalData.projectInterface.currentFrame=num;this.globalData._mdf=false;var i;var len=this.layers.length;if(!this.completeLayers){this.checkLayers(num);}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(num-this.layers[i].st);}}if(this.globalData._mdf){for(i=0;i<len;i+=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}}};SVGRendererBase.prototype.appendElementInPos=function(element,pos){var newElement=element.getBaseElement();if(!newElement){return;}var i=0;var nextElement;while(i<pos){if(this.elements[i]&&this.elements[i]!==true&&this.elements[i].getBaseElement()){nextElement=this.elements[i].getBaseElement();}i+=1;}if(nextElement){this.layerElement.insertBefore(newElement,nextElement);}else {this.layerElement.appendChild(newElement);}};SVGRendererBase.prototype.hide=function(){this.layerElement.style.display='none';};SVGRendererBase.prototype.show=function(){this.layerElement.style.display='block';};function ICompElement(){}extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement,RenderableDOMElement],ICompElement);ICompElement.prototype.initElement=function(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initTransform(data,globalData,comp);this.initRenderable();this.initHierarchy();this.initRendererElement();this.createContainerElements();this.createRenderableComponents();if(this.data.xt||!globalData.progressiveLoad){this.buildAllItems();}this.hide();};/* ICompElement.prototype.hide = function(){
		      if(!this.hidden){
		          this.hideElement();
		          var i,len = this.elements.length;
		          for( i = 0; i < len; i+=1 ){
		              if(this.elements[i]){
		                  this.elements[i].hide();
		              }
		          }
		      }
		  }; */ICompElement.prototype.prepareFrame=function(num){this._mdf=false;this.prepareRenderableFrame(num);this.prepareProperties(num,this.isInRange);if(!this.isInRange&&!this.data.xt){return;}if(!this.tm._placeholder){var timeRemapped=this.tm.v;if(timeRemapped===this.data.op){timeRemapped=this.data.op-1;}this.renderedFrame=timeRemapped;}else {this.renderedFrame=num/this.data.sr;}var i;var len=this.elements.length;if(!this.completeLayers){this.checkLayers(this.renderedFrame);}// This iteration needs to be backwards because of how expressions connect between each other
		for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(this.renderedFrame-this.layers[i].st);if(this.elements[i]._mdf){this._mdf=true;}}}};ICompElement.prototype.renderInnerContent=function(){var i;var len=this.layers.length;for(i=0;i<len;i+=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}};ICompElement.prototype.setElements=function(elems){this.elements=elems;};ICompElement.prototype.getElements=function(){return this.elements;};ICompElement.prototype.destroyElements=function(){var i;var len=this.layers.length;for(i=0;i<len;i+=1){if(this.elements[i]){this.elements[i].destroy();}}};ICompElement.prototype.destroy=function(){this.destroyElements();this.destroyBaseElement();};function SVGCompElement(data,globalData,comp){this.layers=data.layers;this.supports3d=true;this.completeLayers=false;this.pendingElements=[];this.elements=this.layers?createSizedArray(this.layers.length):[];this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([SVGRendererBase,ICompElement,SVGBaseElement],SVGCompElement);SVGCompElement.prototype.createComp=function(data){return new SVGCompElement(data,this.globalData,this);};function SVGRenderer(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.svgElement=createNS('svg');var ariaLabel='';if(config&&config.title){var titleElement=createNS('title');var titleId=createElementID();titleElement.setAttribute('id',titleId);titleElement.textContent=config.title;this.svgElement.appendChild(titleElement);ariaLabel+=titleId;}if(config&&config.description){var descElement=createNS('desc');var descId=createElementID();descElement.setAttribute('id',descId);descElement.textContent=config.description;this.svgElement.appendChild(descElement);ariaLabel+=' '+descId;}if(ariaLabel){this.svgElement.setAttribute('aria-labelledby',ariaLabel);}var defs=createNS('defs');this.svgElement.appendChild(defs);var maskElement=createNS('g');this.svgElement.appendChild(maskElement);this.layerElement=maskElement;this.renderConfig={preserveAspectRatio:config&&config.preserveAspectRatio||'xMidYMid meet',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',contentVisibility:config&&config.contentVisibility||'visible',progressiveLoad:config&&config.progressiveLoad||false,hideOnTransparent:!(config&&config.hideOnTransparent===false),viewBoxOnly:config&&config.viewBoxOnly||false,viewBoxSize:config&&config.viewBoxSize||false,className:config&&config.className||'',id:config&&config.id||'',focusable:config&&config.focusable,filterSize:{width:config&&config.filterSize&&config.filterSize.width||'100%',height:config&&config.filterSize&&config.filterSize.height||'100%',x:config&&config.filterSize&&config.filterSize.x||'0%',y:config&&config.filterSize&&config.filterSize.y||'0%'},width:config&&config.width,height:config&&config.height,runExpressions:!config||config.runExpressions===undefined||config.runExpressions};this.globalData={_mdf:false,frameNum:-1,defs:defs,renderConfig:this.renderConfig};this.elements=[];this.pendingElements=[];this.destroyed=false;this.rendererType='svg';}extendPrototype([SVGRendererBase],SVGRenderer);SVGRenderer.prototype.createComp=function(data){return new SVGCompElement(data,this.globalData,this);};function ShapeTransformManager(){this.sequences={};this.sequenceList=[];this.transform_key_count=0;}ShapeTransformManager.prototype={addTransformSequence:function addTransformSequence(transforms){var i;var len=transforms.length;var key='_';for(i=0;i<len;i+=1){key+=transforms[i].transform.key+'_';}var sequence=this.sequences[key];if(!sequence){sequence={transforms:[].concat(transforms),finalTransform:new Matrix(),_mdf:false};this.sequences[key]=sequence;this.sequenceList.push(sequence);}return sequence;},processSequence:function processSequence(sequence,isFirstFrame){var i=0;var len=sequence.transforms.length;var _mdf=isFirstFrame;while(i<len&&!isFirstFrame){if(sequence.transforms[i].transform.mProps._mdf){_mdf=true;break;}i+=1;}if(_mdf){sequence.finalTransform.reset();for(i=len-1;i>=0;i-=1){sequence.finalTransform.multiply(sequence.transforms[i].transform.mProps.v);}}sequence._mdf=_mdf;},processSequences:function processSequences(isFirstFrame){var i;var len=this.sequenceList.length;for(i=0;i<len;i+=1){this.processSequence(this.sequenceList[i],isFirstFrame);}},getNewKey:function getNewKey(){this.transform_key_count+=1;return '_'+this.transform_key_count;}};var lumaLoader=function lumaLoader(){var id='__lottie_element_luma_buffer';var lumaBuffer=null;var lumaBufferCtx=null;var svg=null;// This alternate solution has a slight delay before the filter is applied, resulting in a flicker on the first frame.
		// Keeping this here for reference, and in the future, if offscreen canvas supports url filters, this can be used.
		// For now, neither of them work for offscreen canvas, so canvas workers can't support the luma track matte mask.
		// Naming it solution 2 to mark the extra comment lines.
		/*
		    var svgString = [
		      '<svg xmlns="http://www.w3.org/2000/svg">',
		      '<filter id="' + id + '">',
		      '<feColorMatrix type="matrix" color-interpolation-filters="sRGB" values="',
		      '0.3, 0.3, 0.3, 0, 0, ',
		      '0.3, 0.3, 0.3, 0, 0, ',
		      '0.3, 0.3, 0.3, 0, 0, ',
		      '0.3, 0.3, 0.3, 0, 0',
		      '"/>',
		      '</filter>',
		      '</svg>',
		    ].join('');
		    var blob = new Blob([svgString], { type: 'image/svg+xml' });
		    var url = URL.createObjectURL(blob);
		    */function createLumaSvgFilter(){var _svg=createNS('svg');var fil=createNS('filter');var matrix=createNS('feColorMatrix');fil.setAttribute('id',id);matrix.setAttribute('type','matrix');matrix.setAttribute('color-interpolation-filters','sRGB');matrix.setAttribute('values','0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0');fil.appendChild(matrix);_svg.appendChild(fil);_svg.setAttribute('id',id+'_svg');if(featureSupport.svgLumaHidden){_svg.style.display='none';}return _svg;}function loadLuma(){if(!lumaBuffer){svg=createLumaSvgFilter();document.body.appendChild(svg);lumaBuffer=createTag('canvas');lumaBufferCtx=lumaBuffer.getContext('2d');// lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2
		lumaBufferCtx.filter='url(#'+id+')';lumaBufferCtx.fillStyle='rgba(0,0,0,0)';lumaBufferCtx.fillRect(0,0,1,1);}}function getLuma(canvas){if(!lumaBuffer){loadLuma();}lumaBuffer.width=canvas.width;lumaBuffer.height=canvas.height;// lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2
		lumaBufferCtx.filter='url(#'+id+')';return lumaBuffer;}return {load:loadLuma,get:getLuma};};function createCanvas(width,height){if(featureSupport.offscreenCanvas){return new OffscreenCanvas(width,height);}var canvas=createTag('canvas');canvas.width=width;canvas.height=height;return canvas;}var assetLoader=function(){return {loadLumaCanvas:lumaLoader.load,getLumaCanvas:lumaLoader.get,createCanvas:createCanvas};}();var registeredEffects={};function CVEffects(elem){var i;var len=elem.data.ef?elem.data.ef.length:0;this.filters=[];var filterManager;for(i=0;i<len;i+=1){filterManager=null;var type=elem.data.ef[i].ty;if(registeredEffects[type]){var Effect=registeredEffects[type].effect;filterManager=new Effect(elem.effectsManager.effectElements[i],elem);}if(filterManager){this.filters.push(filterManager);}}if(this.filters.length){elem.addRenderableComponent(this);}}CVEffects.prototype.renderFrame=function(_isFirstFrame){var i;var len=this.filters.length;for(i=0;i<len;i+=1){this.filters[i].renderFrame(_isFirstFrame);}};CVEffects.prototype.getEffects=function(type){var i;var len=this.filters.length;var effects=[];for(i=0;i<len;i+=1){if(this.filters[i].type===type){effects.push(this.filters[i]);}}return effects;};function registerEffect(id,effect){registeredEffects[id]={effect:effect};}function CVMaskElement(data,element){this.data=data;this.element=element;this.masksProperties=this.data.masksProperties||[];this.viewData=createSizedArray(this.masksProperties.length);var i;var len=this.masksProperties.length;var hasMasks=false;for(i=0;i<len;i+=1){if(this.masksProperties[i].mode!=='n'){hasMasks=true;}this.viewData[i]=ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);}this.hasMasks=hasMasks;if(hasMasks){this.element.addRenderableComponent(this);}}CVMaskElement.prototype.renderFrame=function(){if(!this.hasMasks){return;}var transform=this.element.finalTransform.mat;var ctx=this.element.canvasContext;var i;var len=this.masksProperties.length;var pt;var pts;var data;ctx.beginPath();for(i=0;i<len;i+=1){if(this.masksProperties[i].mode!=='n'){if(this.masksProperties[i].inv){ctx.moveTo(0,0);ctx.lineTo(this.element.globalData.compSize.w,0);ctx.lineTo(this.element.globalData.compSize.w,this.element.globalData.compSize.h);ctx.lineTo(0,this.element.globalData.compSize.h);ctx.lineTo(0,0);}data=this.viewData[i].v;pt=transform.applyToPointArray(data.v[0][0],data.v[0][1],0);ctx.moveTo(pt[0],pt[1]);var j;var jLen=data._length;for(j=1;j<jLen;j+=1){pts=transform.applyToTriplePoints(data.o[j-1],data.i[j],data.v[j]);ctx.bezierCurveTo(pts[0],pts[1],pts[2],pts[3],pts[4],pts[5]);}pts=transform.applyToTriplePoints(data.o[j-1],data.i[0],data.v[0]);ctx.bezierCurveTo(pts[0],pts[1],pts[2],pts[3],pts[4],pts[5]);}}this.element.globalData.renderer.save(true);ctx.clip();};CVMaskElement.prototype.getMaskProperty=MaskElement.prototype.getMaskProperty;CVMaskElement.prototype.destroy=function(){this.element=null;};function CVBaseElement(){}var operationsMap={1:'source-in',2:'source-out',3:'source-in',4:'source-out'};CVBaseElement.prototype={createElements:function createElements(){},initRendererElement:function initRendererElement(){},createContainerElements:function createContainerElements(){// If the layer is masked we will use two buffers to store each different states of the drawing
		// This solution is not ideal for several reason. But unfortunately, because of the recursive
		// nature of the render tree, it's the only simple way to make sure one inner mask doesn't override an outer mask.
		// TODO: try to reduce the size of these buffers to the size of the composition contaning the layer
		// It might be challenging because the layer most likely is transformed in some way
		if(this.data.tt>=1){this.buffers=[];var canvasContext=this.globalData.canvasContext;var bufferCanvas=assetLoader.createCanvas(canvasContext.canvas.width,canvasContext.canvas.height);this.buffers.push(bufferCanvas);var bufferCanvas2=assetLoader.createCanvas(canvasContext.canvas.width,canvasContext.canvas.height);this.buffers.push(bufferCanvas2);if(this.data.tt>=3&&!document._isProxy){assetLoader.loadLumaCanvas();}}this.canvasContext=this.globalData.canvasContext;this.transformCanvas=this.globalData.transformCanvas;this.renderableEffectsManager=new CVEffects(this);this.searchEffectTransforms();},createContent:function createContent(){},setBlendMode:function setBlendMode(){var globalData=this.globalData;if(globalData.blendMode!==this.data.bm){globalData.blendMode=this.data.bm;var blendModeValue=getBlendMode(this.data.bm);globalData.canvasContext.globalCompositeOperation=blendModeValue;}},createRenderableComponents:function createRenderableComponents(){this.maskManager=new CVMaskElement(this.data,this);this.transformEffects=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);},hideElement:function hideElement(){if(!this.hidden&&(!this.isInRange||this.isTransparent)){this.hidden=true;}},showElement:function showElement(){if(this.isInRange&&!this.isTransparent){this.hidden=false;this._isFirstFrame=true;this.maskManager._isFirstFrame=true;}},clearCanvas:function clearCanvas(canvasContext){canvasContext.clearRect(this.transformCanvas.tx,this.transformCanvas.ty,this.transformCanvas.w*this.transformCanvas.sx,this.transformCanvas.h*this.transformCanvas.sy);},prepareLayer:function prepareLayer(){if(this.data.tt>=1){var buffer=this.buffers[0];var bufferCtx=buffer.getContext('2d');this.clearCanvas(bufferCtx);// on the first buffer we store the current state of the global drawing
		bufferCtx.drawImage(this.canvasContext.canvas,0,0);// The next four lines are to clear the canvas
		// TODO: Check if there is a way to clear the canvas without resetting the transform
		this.currentTransform=this.canvasContext.getTransform();this.canvasContext.setTransform(1,0,0,1,0,0);this.clearCanvas(this.canvasContext);this.canvasContext.setTransform(this.currentTransform);}},exitLayer:function exitLayer(){if(this.data.tt>=1){var buffer=this.buffers[1];// On the second buffer we store the current state of the global drawing
		// that only contains the content of this layer
		// (if it is a composition, it also includes the nested layers)
		var bufferCtx=buffer.getContext('2d');this.clearCanvas(bufferCtx);bufferCtx.drawImage(this.canvasContext.canvas,0,0);// We clear the canvas again
		this.canvasContext.setTransform(1,0,0,1,0,0);this.clearCanvas(this.canvasContext);this.canvasContext.setTransform(this.currentTransform);// We draw the mask
		var mask=this.comp.getElementById('tp'in this.data?this.data.tp:this.data.ind-1);mask.renderFrame(true);// We draw the second buffer (that contains the content of this layer)
		this.canvasContext.setTransform(1,0,0,1,0,0);// If the mask is a Luma matte, we need to do two extra painting operations
		// the _isProxy check is to avoid drawing a fake canvas in workers that will throw an error
		if(this.data.tt>=3&&!document._isProxy){// We copy the painted mask to a buffer that has a color matrix filter applied to it
		// that applies the rgb values to the alpha channel
		var lumaBuffer=assetLoader.getLumaCanvas(this.canvasContext.canvas);var lumaBufferCtx=lumaBuffer.getContext('2d');lumaBufferCtx.drawImage(this.canvasContext.canvas,0,0);this.clearCanvas(this.canvasContext);// we repaint the context with the mask applied to it
		this.canvasContext.drawImage(lumaBuffer,0,0);}this.canvasContext.globalCompositeOperation=operationsMap[this.data.tt];this.canvasContext.drawImage(buffer,0,0);// We finally draw the first buffer (that contains the content of the global drawing)
		// We use destination-over to draw the global drawing below the current layer
		this.canvasContext.globalCompositeOperation='destination-over';this.canvasContext.drawImage(this.buffers[0],0,0);this.canvasContext.setTransform(this.currentTransform);// We reset the globalCompositeOperation to source-over, the standard type of operation
		this.canvasContext.globalCompositeOperation='source-over';}},renderFrame:function renderFrame(forceRender){if(this.hidden||this.data.hd){return;}if(this.data.td===1&&!forceRender){return;}this.renderTransform();this.renderRenderable();this.renderLocalTransform();this.setBlendMode();var forceRealStack=this.data.ty===0;this.prepareLayer();this.globalData.renderer.save(forceRealStack);this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props);this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity);this.renderInnerContent();this.globalData.renderer.restore(forceRealStack);this.exitLayer();if(this.maskManager.hasMasks){this.globalData.renderer.restore(true);}if(this._isFirstFrame){this._isFirstFrame=false;}},destroy:function destroy(){this.canvasContext=null;this.data=null;this.globalData=null;this.maskManager.destroy();},mHelper:new Matrix()};CVBaseElement.prototype.hide=CVBaseElement.prototype.hideElement;CVBaseElement.prototype.show=CVBaseElement.prototype.showElement;function CVShapeData(element,data,styles,transformsManager){this.styledShapes=[];this.tr=[0,0,0,0,0,0];var ty=4;if(data.ty==='rc'){ty=5;}else if(data.ty==='el'){ty=6;}else if(data.ty==='sr'){ty=7;}this.sh=ShapePropertyFactory.getShapeProp(element,data,ty,element);var i;var len=styles.length;var styledShape;for(i=0;i<len;i+=1){if(!styles[i].closed){styledShape={transforms:transformsManager.addTransformSequence(styles[i].transforms),trNodes:[]};this.styledShapes.push(styledShape);styles[i].elements.push(styledShape);}}}CVShapeData.prototype.setAsAnimated=SVGShapeData.prototype.setAsAnimated;function CVShapeElement(data,globalData,comp){this.shapes=[];this.shapesData=data.shapes;this.stylesList=[];this.itemsData=[];this.prevViewData=[];this.shapeModifiers=[];this.processedElements=[];this.transformsManager=new ShapeTransformManager();this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement],CVShapeElement);CVShapeElement.prototype.initElement=RenderableDOMElement.prototype.initElement;CVShapeElement.prototype.transformHelper={opacity:1,_opMdf:false};CVShapeElement.prototype.dashResetter=[];CVShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,true,[]);};CVShapeElement.prototype.createStyleElement=function(data,transforms){var styleElem={data:data,type:data.ty,preTransforms:this.transformsManager.addTransformSequence(transforms),transforms:[],elements:[],closed:data.hd===true};var elementData={};if(data.ty==='fl'||data.ty==='st'){elementData.c=PropertyFactory.getProp(this,data.c,1,255,this);if(!elementData.c.k){styleElem.co='rgb('+bmFloor(elementData.c.v[0])+','+bmFloor(elementData.c.v[1])+','+bmFloor(elementData.c.v[2])+')';}}else if(data.ty==='gf'||data.ty==='gs'){elementData.s=PropertyFactory.getProp(this,data.s,1,null,this);elementData.e=PropertyFactory.getProp(this,data.e,1,null,this);elementData.h=PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);elementData.a=PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);elementData.g=new GradientProperty(this,data.g,this);}elementData.o=PropertyFactory.getProp(this,data.o,0,0.01,this);if(data.ty==='st'||data.ty==='gs'){styleElem.lc=lineCapEnum[data.lc||2];styleElem.lj=lineJoinEnum[data.lj||2];if(data.lj==1){// eslint-disable-line eqeqeq
		styleElem.ml=data.ml;}elementData.w=PropertyFactory.getProp(this,data.w,0,null,this);if(!elementData.w.k){styleElem.wi=elementData.w.v;}if(data.d){var d=new DashProperty(this,data.d,'canvas',this);elementData.d=d;if(!elementData.d.k){styleElem.da=elementData.d.dashArray;styleElem["do"]=elementData.d.dashoffset[0];}}}else {styleElem.r=data.r===2?'evenodd':'nonzero';}this.stylesList.push(styleElem);elementData.style=styleElem;return elementData;};CVShapeElement.prototype.createGroupElement=function(){var elementData={it:[],prevViewData:[]};return elementData;};CVShapeElement.prototype.createTransformElement=function(data){var elementData={transform:{opacity:1,_opMdf:false,key:this.transformsManager.getNewKey(),op:PropertyFactory.getProp(this,data.o,0,0.01,this),mProps:TransformPropertyFactory.getTransformProperty(this,data,this)}};return elementData;};CVShapeElement.prototype.createShapeElement=function(data){var elementData=new CVShapeData(this,data,this.stylesList,this.transformsManager);this.shapes.push(elementData);this.addShapeToModifiers(elementData);return elementData;};CVShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=true;var i;var len=this.itemsData.length;for(i=0;i<len;i+=1){this.prevViewData[i]=this.itemsData[i];}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,true,[]);len=this.dynamicProperties.length;for(i=0;i<len;i+=1){this.dynamicProperties[i].getValue();}this.renderModifiers();this.transformsManager.processSequences(this._isFirstFrame);};CVShapeElement.prototype.addTransformToStyleList=function(transform){var i;var len=this.stylesList.length;for(i=0;i<len;i+=1){if(!this.stylesList[i].closed){this.stylesList[i].transforms.push(transform);}}};CVShapeElement.prototype.removeTransformFromStyleList=function(){var i;var len=this.stylesList.length;for(i=0;i<len;i+=1){if(!this.stylesList[i].closed){this.stylesList[i].transforms.pop();}}};CVShapeElement.prototype.closeStyles=function(styles){var i;var len=styles.length;for(i=0;i<len;i+=1){styles[i].closed=true;}};CVShapeElement.prototype.searchShapes=function(arr,itemsData,prevViewData,shouldRender,transforms){var i;var len=arr.length-1;var j;var jLen;var ownStyles=[];var ownModifiers=[];var processedPos;var modifier;var currentTransform;var ownTransforms=[].concat(transforms);for(i=len;i>=0;i-=1){processedPos=this.searchProcessedElement(arr[i]);if(!processedPos){arr[i]._shouldRender=shouldRender;}else {itemsData[i]=prevViewData[processedPos-1];}if(arr[i].ty==='fl'||arr[i].ty==='st'||arr[i].ty==='gf'||arr[i].ty==='gs'){if(!processedPos){itemsData[i]=this.createStyleElement(arr[i],ownTransforms);}else {itemsData[i].style.closed=false;}ownStyles.push(itemsData[i].style);}else if(arr[i].ty==='gr'){if(!processedPos){itemsData[i]=this.createGroupElement(arr[i]);}else {jLen=itemsData[i].it.length;for(j=0;j<jLen;j+=1){itemsData[i].prevViewData[j]=itemsData[i].it[j];}}this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,shouldRender,ownTransforms);}else if(arr[i].ty==='tr'){if(!processedPos){currentTransform=this.createTransformElement(arr[i]);itemsData[i]=currentTransform;}ownTransforms.push(itemsData[i]);this.addTransformToStyleList(itemsData[i]);}else if(arr[i].ty==='sh'||arr[i].ty==='rc'||arr[i].ty==='el'||arr[i].ty==='sr'){if(!processedPos){itemsData[i]=this.createShapeElement(arr[i]);}}else if(arr[i].ty==='tm'||arr[i].ty==='rd'||arr[i].ty==='pb'||arr[i].ty==='zz'||arr[i].ty==='op'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);modifier.init(this,arr[i]);itemsData[i]=modifier;this.shapeModifiers.push(modifier);}else {modifier=itemsData[i];modifier.closed=false;}ownModifiers.push(modifier);}else if(arr[i].ty==='rp'){if(!processedPos){modifier=ShapeModifiers.getModifier(arr[i].ty);itemsData[i]=modifier;modifier.init(this,arr,i,itemsData);this.shapeModifiers.push(modifier);shouldRender=false;}else {modifier=itemsData[i];modifier.closed=true;}ownModifiers.push(modifier);}this.addProcessedElement(arr[i],i+1);}this.removeTransformFromStyleList();this.closeStyles(ownStyles);len=ownModifiers.length;for(i=0;i<len;i+=1){ownModifiers[i].closed=true;}};CVShapeElement.prototype.renderInnerContent=function(){this.transformHelper.opacity=1;this.transformHelper._opMdf=false;this.renderModifiers();this.transformsManager.processSequences(this._isFirstFrame);this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);};CVShapeElement.prototype.renderShapeTransform=function(parentTransform,groupTransform){if(parentTransform._opMdf||groupTransform.op._mdf||this._isFirstFrame){groupTransform.opacity=parentTransform.opacity;groupTransform.opacity*=groupTransform.op.v;groupTransform._opMdf=true;}};CVShapeElement.prototype.drawLayer=function(){var i;var len=this.stylesList.length;var j;var jLen;var k;var kLen;var elems;var nodes;var renderer=this.globalData.renderer;var ctx=this.globalData.canvasContext;var type;var currentStyle;for(i=0;i<len;i+=1){currentStyle=this.stylesList[i];type=currentStyle.type;// Skipping style when
		// Stroke width equals 0
		// style should not be rendered (extra unused repeaters)
		// current opacity equals 0
		// global opacity equals 0
		if(!((type==='st'||type==='gs')&&currentStyle.wi===0||!currentStyle.data._shouldRender||currentStyle.coOp===0||this.globalData.currentGlobalAlpha===0)){renderer.save();elems=currentStyle.elements;if(type==='st'||type==='gs'){renderer.ctxStrokeStyle(type==='st'?currentStyle.co:currentStyle.grd);// ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;
		renderer.ctxLineWidth(currentStyle.wi);// ctx.lineWidth = currentStyle.wi;
		renderer.ctxLineCap(currentStyle.lc);// ctx.lineCap = currentStyle.lc;
		renderer.ctxLineJoin(currentStyle.lj);// ctx.lineJoin = currentStyle.lj;
		renderer.ctxMiterLimit(currentStyle.ml||0);// ctx.miterLimit = currentStyle.ml || 0;
		}else {renderer.ctxFillStyle(type==='fl'?currentStyle.co:currentStyle.grd);// ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;
		}renderer.ctxOpacity(currentStyle.coOp);if(type!=='st'&&type!=='gs'){ctx.beginPath();}renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);jLen=elems.length;for(j=0;j<jLen;j+=1){if(type==='st'||type==='gs'){ctx.beginPath();if(currentStyle.da){ctx.setLineDash(currentStyle.da);ctx.lineDashOffset=currentStyle["do"];}}nodes=elems[j].trNodes;kLen=nodes.length;for(k=0;k<kLen;k+=1){if(nodes[k].t==='m'){ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);}else if(nodes[k].t==='c'){ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);}else {ctx.closePath();}}if(type==='st'||type==='gs'){// ctx.stroke();
		renderer.ctxStroke();if(currentStyle.da){ctx.setLineDash(this.dashResetter);}}}if(type!=='st'&&type!=='gs'){// ctx.fill(currentStyle.r);
		this.globalData.renderer.ctxFill(currentStyle.r);}renderer.restore();}}};CVShapeElement.prototype.renderShape=function(parentTransform,items,data,isMain){var i;var len=items.length-1;var groupTransform;groupTransform=parentTransform;for(i=len;i>=0;i-=1){if(items[i].ty==='tr'){groupTransform=data[i].transform;this.renderShapeTransform(parentTransform,groupTransform);}else if(items[i].ty==='sh'||items[i].ty==='el'||items[i].ty==='rc'||items[i].ty==='sr'){this.renderPath(items[i],data[i]);}else if(items[i].ty==='fl'){this.renderFill(items[i],data[i],groupTransform);}else if(items[i].ty==='st'){this.renderStroke(items[i],data[i],groupTransform);}else if(items[i].ty==='gf'||items[i].ty==='gs'){this.renderGradientFill(items[i],data[i],groupTransform);}else if(items[i].ty==='gr'){this.renderShape(groupTransform,items[i].it,data[i].it);}else if(items[i].ty==='tm');}if(isMain){this.drawLayer();}};CVShapeElement.prototype.renderStyledShape=function(styledShape,shape){if(this._isFirstFrame||shape._mdf||styledShape.transforms._mdf){var shapeNodes=styledShape.trNodes;var paths=shape.paths;var i;var len;var j;var jLen=paths._length;shapeNodes.length=0;var groupTransformMat=styledShape.transforms.finalTransform;for(j=0;j<jLen;j+=1){var pathNodes=paths.shapes[j];if(pathNodes&&pathNodes.v){len=pathNodes._length;for(i=1;i<len;i+=1){if(i===1){shapeNodes.push({t:'m',p:groupTransformMat.applyToPointArray(pathNodes.v[0][0],pathNodes.v[0][1],0)});}shapeNodes.push({t:'c',pts:groupTransformMat.applyToTriplePoints(pathNodes.o[i-1],pathNodes.i[i],pathNodes.v[i])});}if(len===1){shapeNodes.push({t:'m',p:groupTransformMat.applyToPointArray(pathNodes.v[0][0],pathNodes.v[0][1],0)});}if(pathNodes.c&&len){shapeNodes.push({t:'c',pts:groupTransformMat.applyToTriplePoints(pathNodes.o[i-1],pathNodes.i[0],pathNodes.v[0])});shapeNodes.push({t:'z'});}}}styledShape.trNodes=shapeNodes;}};CVShapeElement.prototype.renderPath=function(pathData,itemData){if(pathData.hd!==true&&pathData._shouldRender){var i;var len=itemData.styledShapes.length;for(i=0;i<len;i+=1){this.renderStyledShape(itemData.styledShapes[i],itemData.sh);}}};CVShapeElement.prototype.renderFill=function(styleData,itemData,groupTransform){var styleElem=itemData.style;if(itemData.c._mdf||this._isFirstFrame){styleElem.co='rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')';}if(itemData.o._mdf||groupTransform._opMdf||this._isFirstFrame){styleElem.coOp=itemData.o.v*groupTransform.opacity;}};CVShapeElement.prototype.renderGradientFill=function(styleData,itemData,groupTransform){var styleElem=itemData.style;var grd;if(!styleElem.grd||itemData.g._mdf||itemData.s._mdf||itemData.e._mdf||styleData.t!==1&&(itemData.h._mdf||itemData.a._mdf)){var ctx=this.globalData.canvasContext;var pt1=itemData.s.v;var pt2=itemData.e.v;if(styleData.t===1){grd=ctx.createLinearGradient(pt1[0],pt1[1],pt2[0],pt2[1]);}else {var rad=Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));var ang=Math.atan2(pt2[1]-pt1[1],pt2[0]-pt1[0]);var percent=itemData.h.v;if(percent>=1){percent=0.99;}else if(percent<=-1){percent=-0.99;}var dist=rad*percent;var x=Math.cos(ang+itemData.a.v)*dist+pt1[0];var y=Math.sin(ang+itemData.a.v)*dist+pt1[1];grd=ctx.createRadialGradient(x,y,0,pt1[0],pt1[1],rad);}var i;var len=styleData.g.p;var cValues=itemData.g.c;var opacity=1;for(i=0;i<len;i+=1){if(itemData.g._hasOpacity&&itemData.g._collapsable){opacity=itemData.g.o[i*2+1];}grd.addColorStop(cValues[i*4]/100,'rgba('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+','+opacity+')');}styleElem.grd=grd;}styleElem.coOp=itemData.o.v*groupTransform.opacity;};CVShapeElement.prototype.renderStroke=function(styleData,itemData,groupTransform){var styleElem=itemData.style;var d=itemData.d;if(d&&(d._mdf||this._isFirstFrame)){styleElem.da=d.dashArray;styleElem["do"]=d.dashoffset[0];}if(itemData.c._mdf||this._isFirstFrame){styleElem.co='rgb('+bmFloor(itemData.c.v[0])+','+bmFloor(itemData.c.v[1])+','+bmFloor(itemData.c.v[2])+')';}if(itemData.o._mdf||groupTransform._opMdf||this._isFirstFrame){styleElem.coOp=itemData.o.v*groupTransform.opacity;}if(itemData.w._mdf||this._isFirstFrame){styleElem.wi=itemData.w.v;}};CVShapeElement.prototype.destroy=function(){this.shapesData=null;this.globalData=null;this.canvasContext=null;this.stylesList.length=0;this.itemsData.length=0;};function CVTextElement(data,globalData,comp){this.textSpans=[];this.yOffset=0;this.fillColorAnim=false;this.strokeColorAnim=false;this.strokeWidthAnim=false;this.stroke=false;this.fill=false;this.justifyOffset=0;this.currentRender=null;this.renderType='canvas';this.values={fill:'rgba(0,0,0,0)',stroke:'rgba(0,0,0,0)',sWidth:0,fValue:''};this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement],CVTextElement);CVTextElement.prototype.tHelper=createTag('canvas').getContext('2d');CVTextElement.prototype.buildNewText=function(){var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData.l?documentData.l.length:0);var hasFill=false;if(documentData.fc){hasFill=true;this.values.fill=this.buildColor(documentData.fc);}else {this.values.fill='rgba(0,0,0,0)';}this.fill=hasFill;var hasStroke=false;if(documentData.sc){hasStroke=true;this.values.stroke=this.buildColor(documentData.sc);this.values.sWidth=documentData.sw;}var fontData=this.globalData.fontManager.getFontByName(documentData.f);var i;var len;var letters=documentData.l;var matrixHelper=this.mHelper;this.stroke=hasStroke;this.values.fValue=documentData.finalSize+'px '+this.globalData.fontManager.getFontByName(documentData.f).fFamily;len=documentData.finalText.length;// this.tHelper.font = this.values.fValue;
		var charData;var shapeData;var k;var kLen;var shapes;var j;var jLen;var pathNodes;var commands;var pathArr;var singleShape=this.data.singleShape;var trackingOffset=documentData.tr*0.001*documentData.finalSize;var xPos=0;var yPos=0;var firstLine=true;var cnt=0;for(i=0;i<len;i+=1){charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);shapeData=charData&&charData.data||{};matrixHelper.reset();if(singleShape&&letters[i].n){xPos=-trackingOffset;yPos+=documentData.yOffset;yPos+=firstLine?1:0;firstLine=false;}shapes=shapeData.shapes?shapeData.shapes[0].it:[];jLen=shapes.length;matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);if(singleShape){this.applyTextPropertiesToMatrix(documentData,matrixHelper,letters[i].line,xPos,yPos);}commands=createSizedArray(jLen-1);var commandsCounter=0;for(j=0;j<jLen;j+=1){if(shapes[j].ty==='sh'){kLen=shapes[j].ks.k.i.length;pathNodes=shapes[j].ks.k;pathArr=[];for(k=1;k<kLen;k+=1){if(k===1){pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));}pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));}pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));commands[commandsCounter]=pathArr;commandsCounter+=1;}}if(singleShape){xPos+=letters[i].l;xPos+=trackingOffset;}if(this.textSpans[cnt]){this.textSpans[cnt].elem=commands;}else {this.textSpans[cnt]={elem:commands};}cnt+=1;}};CVTextElement.prototype.renderInnerContent=function(){this.validateText();var ctx=this.canvasContext;ctx.font=this.values.fValue;this.globalData.renderer.ctxLineCap('butt');// ctx.lineCap = 'butt';
		this.globalData.renderer.ctxLineJoin('miter');// ctx.lineJoin = 'miter';
		this.globalData.renderer.ctxMiterLimit(4);// ctx.miterLimit = 4;
		if(!this.data.singleShape){this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);}var i;var len;var j;var jLen;var k;var kLen;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var lastFill=null;var lastStroke=null;var lastStrokeW=null;var commands;var pathArr;var renderer=this.globalData.renderer;for(i=0;i<len;i+=1){if(!letters[i].n){renderedLetter=renderedLetters[i];if(renderedLetter){renderer.save();renderer.ctxTransform(renderedLetter.p);renderer.ctxOpacity(renderedLetter.o);}if(this.fill){if(renderedLetter&&renderedLetter.fc){if(lastFill!==renderedLetter.fc){renderer.ctxFillStyle(renderedLetter.fc);lastFill=renderedLetter.fc;// ctx.fillStyle = renderedLetter.fc;
		}}else if(lastFill!==this.values.fill){lastFill=this.values.fill;renderer.ctxFillStyle(this.values.fill);// ctx.fillStyle = this.values.fill;
		}commands=this.textSpans[i].elem;jLen=commands.length;this.globalData.canvasContext.beginPath();for(j=0;j<jLen;j+=1){pathArr=commands[j];kLen=pathArr.length;this.globalData.canvasContext.moveTo(pathArr[0],pathArr[1]);for(k=2;k<kLen;k+=6){this.globalData.canvasContext.bezierCurveTo(pathArr[k],pathArr[k+1],pathArr[k+2],pathArr[k+3],pathArr[k+4],pathArr[k+5]);}}this.globalData.canvasContext.closePath();renderer.ctxFill();// this.globalData.canvasContext.fill();
		/// ctx.fillText(this.textSpans[i].val,0,0);
		}if(this.stroke){if(renderedLetter&&renderedLetter.sw){if(lastStrokeW!==renderedLetter.sw){lastStrokeW=renderedLetter.sw;renderer.ctxLineWidth(renderedLetter.sw);// ctx.lineWidth = renderedLetter.sw;
		}}else if(lastStrokeW!==this.values.sWidth){lastStrokeW=this.values.sWidth;renderer.ctxLineWidth(this.values.sWidth);// ctx.lineWidth = this.values.sWidth;
		}if(renderedLetter&&renderedLetter.sc){if(lastStroke!==renderedLetter.sc){lastStroke=renderedLetter.sc;renderer.ctxStrokeStyle(renderedLetter.sc);// ctx.strokeStyle = renderedLetter.sc;
		}}else if(lastStroke!==this.values.stroke){lastStroke=this.values.stroke;renderer.ctxStrokeStyle(this.values.stroke);// ctx.strokeStyle = this.values.stroke;
		}commands=this.textSpans[i].elem;jLen=commands.length;this.globalData.canvasContext.beginPath();for(j=0;j<jLen;j+=1){pathArr=commands[j];kLen=pathArr.length;this.globalData.canvasContext.moveTo(pathArr[0],pathArr[1]);for(k=2;k<kLen;k+=6){this.globalData.canvasContext.bezierCurveTo(pathArr[k],pathArr[k+1],pathArr[k+2],pathArr[k+3],pathArr[k+4],pathArr[k+5]);}}this.globalData.canvasContext.closePath();renderer.ctxStroke();// this.globalData.canvasContext.stroke();
		/// ctx.strokeText(letters[i].val,0,0);
		}if(renderedLetter){this.globalData.renderer.restore();}}}};function CVImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.img=globalData.imageLoader.getAsset(this.assetData);this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVImageElement);CVImageElement.prototype.initElement=SVGShapeElement.prototype.initElement;CVImageElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame;CVImageElement.prototype.createContent=function(){if(this.img.width&&(this.assetData.w!==this.img.width||this.assetData.h!==this.img.height)){var canvas=createTag('canvas');canvas.width=this.assetData.w;canvas.height=this.assetData.h;var ctx=canvas.getContext('2d');var imgW=this.img.width;var imgH=this.img.height;var imgRel=imgW/imgH;var canvasRel=this.assetData.w/this.assetData.h;var widthCrop;var heightCrop;var par=this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio;if(imgRel>canvasRel&&par==='xMidYMid slice'||imgRel<canvasRel&&par!=='xMidYMid slice'){heightCrop=imgH;widthCrop=heightCrop*canvasRel;}else {widthCrop=imgW;heightCrop=widthCrop/canvasRel;}ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);this.img=canvas;}};CVImageElement.prototype.renderInnerContent=function(){this.canvasContext.drawImage(this.img,0,0);};CVImageElement.prototype.destroy=function(){this.img=null;};function CVSolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVSolidElement);CVSolidElement.prototype.initElement=SVGShapeElement.prototype.initElement;CVSolidElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame;CVSolidElement.prototype.renderInnerContent=function(){// var ctx = this.canvasContext;
		this.globalData.renderer.ctxFillStyle(this.data.sc);// ctx.fillStyle = this.data.sc;
		this.globalData.renderer.ctxFillRect(0,0,this.data.sw,this.data.sh);// ctx.fillRect(0, 0, this.data.sw, this.data.sh);
		//
		};function CanvasRendererBase(){}extendPrototype([BaseRenderer],CanvasRendererBase);CanvasRendererBase.prototype.createShape=function(data){return new CVShapeElement(data,this.globalData,this);};CanvasRendererBase.prototype.createText=function(data){return new CVTextElement(data,this.globalData,this);};CanvasRendererBase.prototype.createImage=function(data){return new CVImageElement(data,this.globalData,this);};CanvasRendererBase.prototype.createSolid=function(data){return new CVSolidElement(data,this.globalData,this);};CanvasRendererBase.prototype.createNull=SVGRenderer.prototype.createNull;CanvasRendererBase.prototype.ctxTransform=function(props){if(props[0]===1&&props[1]===0&&props[4]===0&&props[5]===1&&props[12]===0&&props[13]===0){return;}this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);};CanvasRendererBase.prototype.ctxOpacity=function(op){this.canvasContext.globalAlpha*=op<0?0:op;};CanvasRendererBase.prototype.ctxFillStyle=function(value){this.canvasContext.fillStyle=value;};CanvasRendererBase.prototype.ctxStrokeStyle=function(value){this.canvasContext.strokeStyle=value;};CanvasRendererBase.prototype.ctxLineWidth=function(value){this.canvasContext.lineWidth=value;};CanvasRendererBase.prototype.ctxLineCap=function(value){this.canvasContext.lineCap=value;};CanvasRendererBase.prototype.ctxLineJoin=function(value){this.canvasContext.lineJoin=value;};CanvasRendererBase.prototype.ctxMiterLimit=function(value){this.canvasContext.miterLimit=value;};CanvasRendererBase.prototype.ctxFill=function(rule){this.canvasContext.fill(rule);};CanvasRendererBase.prototype.ctxFillRect=function(x,y,w,h){this.canvasContext.fillRect(x,y,w,h);};CanvasRendererBase.prototype.ctxStroke=function(){this.canvasContext.stroke();};CanvasRendererBase.prototype.reset=function(){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return;}this.contextData.reset();};CanvasRendererBase.prototype.save=function(){this.canvasContext.save();};CanvasRendererBase.prototype.restore=function(actionFlag){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return;}if(actionFlag){this.globalData.blendMode='source-over';}this.contextData.restore(actionFlag);};CanvasRendererBase.prototype.configAnimation=function(animData){if(this.animationItem.wrapper){this.animationItem.container=createTag('canvas');var containerStyle=this.animationItem.container.style;containerStyle.width='100%';containerStyle.height='100%';var origin='0px 0px 0px';containerStyle.transformOrigin=origin;containerStyle.mozTransformOrigin=origin;containerStyle.webkitTransformOrigin=origin;containerStyle['-webkit-transform']=origin;containerStyle.contentVisibility=this.renderConfig.contentVisibility;this.animationItem.wrapper.appendChild(this.animationItem.container);this.canvasContext=this.animationItem.container.getContext('2d');if(this.renderConfig.className){this.animationItem.container.setAttribute('class',this.renderConfig.className);}if(this.renderConfig.id){this.animationItem.container.setAttribute('id',this.renderConfig.id);}}else {this.canvasContext=this.renderConfig.context;}this.contextData.setContext(this.canvasContext);this.data=animData;this.layers=animData.layers;this.transformCanvas={w:animData.w,h:animData.h,sx:0,sy:0,tx:0,ty:0};this.setupGlobalData(animData,document.body);this.globalData.canvasContext=this.canvasContext;this.globalData.renderer=this;this.globalData.isDashed=false;this.globalData.progressiveLoad=this.renderConfig.progressiveLoad;this.globalData.transformCanvas=this.transformCanvas;this.elements=createSizedArray(animData.layers.length);this.updateContainerSize();};CanvasRendererBase.prototype.updateContainerSize=function(width,height){this.reset();var elementWidth;var elementHeight;if(width){elementWidth=width;elementHeight=height;this.canvasContext.canvas.width=elementWidth;this.canvasContext.canvas.height=elementHeight;}else {if(this.animationItem.wrapper&&this.animationItem.container){elementWidth=this.animationItem.wrapper.offsetWidth;elementHeight=this.animationItem.wrapper.offsetHeight;}else {elementWidth=this.canvasContext.canvas.width;elementHeight=this.canvasContext.canvas.height;}this.canvasContext.canvas.width=elementWidth*this.renderConfig.dpr;this.canvasContext.canvas.height=elementHeight*this.renderConfig.dpr;}var elementRel;var animationRel;if(this.renderConfig.preserveAspectRatio.indexOf('meet')!==-1||this.renderConfig.preserveAspectRatio.indexOf('slice')!==-1){var par=this.renderConfig.preserveAspectRatio.split(' ');var fillType=par[1]||'meet';var pos=par[0]||'xMidYMid';var xPos=pos.substr(0,4);var yPos=pos.substr(4);elementRel=elementWidth/elementHeight;animationRel=this.transformCanvas.w/this.transformCanvas.h;if(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice'){this.transformCanvas.sx=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);this.transformCanvas.sy=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);}else {this.transformCanvas.sx=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);this.transformCanvas.sy=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);}if(xPos==='xMid'&&(animationRel<elementRel&&fillType==='meet'||animationRel>elementRel&&fillType==='slice')){this.transformCanvas.tx=(elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;}else if(xPos==='xMax'&&(animationRel<elementRel&&fillType==='meet'||animationRel>elementRel&&fillType==='slice')){this.transformCanvas.tx=(elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;}else {this.transformCanvas.tx=0;}if(yPos==='YMid'&&(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice')){this.transformCanvas.ty=(elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2*this.renderConfig.dpr;}else if(yPos==='YMax'&&(animationRel>elementRel&&fillType==='meet'||animationRel<elementRel&&fillType==='slice')){this.transformCanvas.ty=(elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))*this.renderConfig.dpr;}else {this.transformCanvas.ty=0;}}else if(this.renderConfig.preserveAspectRatio==='none'){this.transformCanvas.sx=elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);this.transformCanvas.sy=elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);this.transformCanvas.tx=0;this.transformCanvas.ty=0;}else {this.transformCanvas.sx=this.renderConfig.dpr;this.transformCanvas.sy=this.renderConfig.dpr;this.transformCanvas.tx=0;this.transformCanvas.ty=0;}this.transformCanvas.props=[this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];/* var i, len = this.elements.length;
		      for(i=0;i<len;i+=1){
		          if(this.elements[i] && this.elements[i].data.ty === 0){
		              this.elements[i].resize(this.globalData.transformCanvas);
		          }
		      } */this.ctxTransform(this.transformCanvas.props);this.canvasContext.beginPath();this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);this.canvasContext.closePath();this.canvasContext.clip();this.renderFrame(this.renderedFrame,true);};CanvasRendererBase.prototype.destroy=function(){if(this.renderConfig.clearCanvas&&this.animationItem.wrapper){this.animationItem.wrapper.innerText='';}var i;var len=this.layers?this.layers.length:0;for(i=len-1;i>=0;i-=1){if(this.elements[i]&&this.elements[i].destroy){this.elements[i].destroy();}}this.elements.length=0;this.globalData.canvasContext=null;this.animationItem.container=null;this.destroyed=true;};CanvasRendererBase.prototype.renderFrame=function(num,forceRender){if(this.renderedFrame===num&&this.renderConfig.clearCanvas===true&&!forceRender||this.destroyed||num===-1){return;}this.renderedFrame=num;this.globalData.frameNum=num-this.animationItem._isFirstFrame;this.globalData.frameId+=1;this.globalData._mdf=!this.renderConfig.clearCanvas||forceRender;this.globalData.projectInterface.currentFrame=num;// console.log('--------');
		// console.log('NEW: ',num);
		var i;var len=this.layers.length;if(!this.completeLayers){this.checkLayers(num);}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].prepareFrame(num-this.layers[i].st);}}if(this.globalData._mdf){if(this.renderConfig.clearCanvas===true){this.canvasContext.clearRect(0,0,this.transformCanvas.w,this.transformCanvas.h);}else {this.save();}for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}if(this.renderConfig.clearCanvas!==true){this.restore();}}};CanvasRendererBase.prototype.buildItem=function(pos){var elements=this.elements;if(elements[pos]||this.layers[pos].ty===99){return;}var element=this.createItem(this.layers[pos],this,this.globalData);elements[pos]=element;element.initExpressions();/* if(this.layers[pos].ty === 0){
		          element.resize(this.globalData.transformCanvas);
		      } */};CanvasRendererBase.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();}};CanvasRendererBase.prototype.hide=function(){this.animationItem.container.style.display='none';};CanvasRendererBase.prototype.show=function(){this.animationItem.container.style.display='block';};function CanvasContext(){this.opacity=-1;this.transform=createTypedArray('float32',16);this.fillStyle='';this.strokeStyle='';this.lineWidth='';this.lineCap='';this.lineJoin='';this.miterLimit='';this.id=Math.random();}function CVContextData(){this.stack=[];this.cArrPos=0;this.cTr=new Matrix();var i;var len=15;for(i=0;i<len;i+=1){var canvasContext=new CanvasContext();this.stack[i]=canvasContext;}this._length=len;this.nativeContext=null;this.transformMat=new Matrix();this.currentOpacity=1;//
		this.currentFillStyle='';this.appliedFillStyle='';//
		this.currentStrokeStyle='';this.appliedStrokeStyle='';//
		this.currentLineWidth='';this.appliedLineWidth='';//
		this.currentLineCap='';this.appliedLineCap='';//
		this.currentLineJoin='';this.appliedLineJoin='';//
		this.appliedMiterLimit='';this.currentMiterLimit='';}CVContextData.prototype.duplicate=function(){var newLength=this._length*2;var i=0;for(i=this._length;i<newLength;i+=1){this.stack[i]=new CanvasContext();}this._length=newLength;};CVContextData.prototype.reset=function(){this.cArrPos=0;this.cTr.reset();this.stack[this.cArrPos].opacity=1;};CVContextData.prototype.restore=function(forceRestore){this.cArrPos-=1;var currentContext=this.stack[this.cArrPos];var transform=currentContext.transform;var i;var arr=this.cTr.props;for(i=0;i<16;i+=1){arr[i]=transform[i];}if(forceRestore){this.nativeContext.restore();var prevStack=this.stack[this.cArrPos+1];this.appliedFillStyle=prevStack.fillStyle;this.appliedStrokeStyle=prevStack.strokeStyle;this.appliedLineWidth=prevStack.lineWidth;this.appliedLineCap=prevStack.lineCap;this.appliedLineJoin=prevStack.lineJoin;this.appliedMiterLimit=prevStack.miterLimit;}this.nativeContext.setTransform(transform[0],transform[1],transform[4],transform[5],transform[12],transform[13]);if(forceRestore||currentContext.opacity!==-1&&this.currentOpacity!==currentContext.opacity){this.nativeContext.globalAlpha=currentContext.opacity;this.currentOpacity=currentContext.opacity;}this.currentFillStyle=currentContext.fillStyle;this.currentStrokeStyle=currentContext.strokeStyle;this.currentLineWidth=currentContext.lineWidth;this.currentLineCap=currentContext.lineCap;this.currentLineJoin=currentContext.lineJoin;this.currentMiterLimit=currentContext.miterLimit;};CVContextData.prototype.save=function(saveOnNativeFlag){if(saveOnNativeFlag){this.nativeContext.save();}var props=this.cTr.props;if(this._length<=this.cArrPos){this.duplicate();}var currentStack=this.stack[this.cArrPos];var i;for(i=0;i<16;i+=1){currentStack.transform[i]=props[i];}this.cArrPos+=1;var newStack=this.stack[this.cArrPos];newStack.opacity=currentStack.opacity;newStack.fillStyle=currentStack.fillStyle;newStack.strokeStyle=currentStack.strokeStyle;newStack.lineWidth=currentStack.lineWidth;newStack.lineCap=currentStack.lineCap;newStack.lineJoin=currentStack.lineJoin;newStack.miterLimit=currentStack.miterLimit;};CVContextData.prototype.setOpacity=function(value){this.stack[this.cArrPos].opacity=value;};CVContextData.prototype.setContext=function(value){this.nativeContext=value;};CVContextData.prototype.fillStyle=function(value){if(this.stack[this.cArrPos].fillStyle!==value){this.currentFillStyle=value;this.stack[this.cArrPos].fillStyle=value;}};CVContextData.prototype.strokeStyle=function(value){if(this.stack[this.cArrPos].strokeStyle!==value){this.currentStrokeStyle=value;this.stack[this.cArrPos].strokeStyle=value;}};CVContextData.prototype.lineWidth=function(value){if(this.stack[this.cArrPos].lineWidth!==value){this.currentLineWidth=value;this.stack[this.cArrPos].lineWidth=value;}};CVContextData.prototype.lineCap=function(value){if(this.stack[this.cArrPos].lineCap!==value){this.currentLineCap=value;this.stack[this.cArrPos].lineCap=value;}};CVContextData.prototype.lineJoin=function(value){if(this.stack[this.cArrPos].lineJoin!==value){this.currentLineJoin=value;this.stack[this.cArrPos].lineJoin=value;}};CVContextData.prototype.miterLimit=function(value){if(this.stack[this.cArrPos].miterLimit!==value){this.currentMiterLimit=value;this.stack[this.cArrPos].miterLimit=value;}};CVContextData.prototype.transform=function(props){this.transformMat.cloneFromProps(props);// Taking the last transform value from the stored stack of transforms
		var currentTransform=this.cTr;// Applying the last transform value after the new transform to respect the order of transformations
		this.transformMat.multiply(currentTransform);// Storing the new transformed value in the stored transform
		currentTransform.cloneFromProps(this.transformMat.props);var trProps=currentTransform.props;// Applying the new transform to the canvas
		this.nativeContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);};CVContextData.prototype.opacity=function(op){var currentOpacity=this.stack[this.cArrPos].opacity;currentOpacity*=op<0?0:op;if(this.stack[this.cArrPos].opacity!==currentOpacity){if(this.currentOpacity!==op){this.nativeContext.globalAlpha=op;this.currentOpacity=op;}this.stack[this.cArrPos].opacity=currentOpacity;}};CVContextData.prototype.fill=function(rule){if(this.appliedFillStyle!==this.currentFillStyle){this.appliedFillStyle=this.currentFillStyle;this.nativeContext.fillStyle=this.appliedFillStyle;}this.nativeContext.fill(rule);};CVContextData.prototype.fillRect=function(x,y,w,h){if(this.appliedFillStyle!==this.currentFillStyle){this.appliedFillStyle=this.currentFillStyle;this.nativeContext.fillStyle=this.appliedFillStyle;}this.nativeContext.fillRect(x,y,w,h);};CVContextData.prototype.stroke=function(){if(this.appliedStrokeStyle!==this.currentStrokeStyle){this.appliedStrokeStyle=this.currentStrokeStyle;this.nativeContext.strokeStyle=this.appliedStrokeStyle;}if(this.appliedLineWidth!==this.currentLineWidth){this.appliedLineWidth=this.currentLineWidth;this.nativeContext.lineWidth=this.appliedLineWidth;}if(this.appliedLineCap!==this.currentLineCap){this.appliedLineCap=this.currentLineCap;this.nativeContext.lineCap=this.appliedLineCap;}if(this.appliedLineJoin!==this.currentLineJoin){this.appliedLineJoin=this.currentLineJoin;this.nativeContext.lineJoin=this.appliedLineJoin;}if(this.appliedMiterLimit!==this.currentMiterLimit){this.appliedMiterLimit=this.currentMiterLimit;this.nativeContext.miterLimit=this.appliedMiterLimit;}this.nativeContext.stroke();};function CVCompElement(data,globalData,comp){this.completeLayers=false;this.layers=data.layers;this.pendingElements=[];this.elements=createSizedArray(this.layers.length);this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([CanvasRendererBase,ICompElement,CVBaseElement],CVCompElement);CVCompElement.prototype.renderInnerContent=function(){var ctx=this.canvasContext;ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(this.data.w,0);ctx.lineTo(this.data.w,this.data.h);ctx.lineTo(0,this.data.h);ctx.lineTo(0,0);ctx.clip();var i;var len=this.layers.length;for(i=len-1;i>=0;i-=1){if(this.completeLayers||this.elements[i]){this.elements[i].renderFrame();}}};CVCompElement.prototype.destroy=function(){var i;var len=this.layers.length;for(i=len-1;i>=0;i-=1){if(this.elements[i]){this.elements[i].destroy();}}this.layers=null;this.elements=null;};CVCompElement.prototype.createComp=function(data){return new CVCompElement(data,this.globalData,this);};function CanvasRenderer(animationItem,config){this.animationItem=animationItem;this.renderConfig={clearCanvas:config&&config.clearCanvas!==undefined?config.clearCanvas:true,context:config&&config.context||null,progressiveLoad:config&&config.progressiveLoad||false,preserveAspectRatio:config&&config.preserveAspectRatio||'xMidYMid meet',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',contentVisibility:config&&config.contentVisibility||'visible',className:config&&config.className||'',id:config&&config.id||'',runExpressions:!config||config.runExpressions===undefined||config.runExpressions};this.renderConfig.dpr=config&&config.dpr||1;if(this.animationItem.wrapper){this.renderConfig.dpr=config&&config.dpr||window.devicePixelRatio||1;}this.renderedFrame=-1;this.globalData={frameNum:-1,_mdf:false,renderConfig:this.renderConfig,currentGlobalAlpha:-1};this.contextData=new CVContextData();this.elements=[];this.pendingElements=[];this.transformMat=new Matrix();this.completeLayers=false;this.rendererType='canvas';if(this.renderConfig.clearCanvas){this.ctxTransform=this.contextData.transform.bind(this.contextData);this.ctxOpacity=this.contextData.opacity.bind(this.contextData);this.ctxFillStyle=this.contextData.fillStyle.bind(this.contextData);this.ctxStrokeStyle=this.contextData.strokeStyle.bind(this.contextData);this.ctxLineWidth=this.contextData.lineWidth.bind(this.contextData);this.ctxLineCap=this.contextData.lineCap.bind(this.contextData);this.ctxLineJoin=this.contextData.lineJoin.bind(this.contextData);this.ctxMiterLimit=this.contextData.miterLimit.bind(this.contextData);this.ctxFill=this.contextData.fill.bind(this.contextData);this.ctxFillRect=this.contextData.fillRect.bind(this.contextData);this.ctxStroke=this.contextData.stroke.bind(this.contextData);this.save=this.contextData.save.bind(this.contextData);}}extendPrototype([CanvasRendererBase],CanvasRenderer);CanvasRenderer.prototype.createComp=function(data){return new CVCompElement(data,this.globalData,this);};function HBaseElement(){}HBaseElement.prototype={checkBlendMode:function checkBlendMode(){},initRendererElement:function initRendererElement(){this.baseElement=createTag(this.data.tg||'div');if(this.data.hasMask){this.svgElement=createNS('svg');this.layerElement=createNS('g');this.maskedElement=this.layerElement;this.svgElement.appendChild(this.layerElement);this.baseElement.appendChild(this.svgElement);}else {this.layerElement=this.baseElement;}styleDiv(this.baseElement);},createContainerElements:function createContainerElements(){this.renderableEffectsManager=new CVEffects(this);this.transformedElement=this.baseElement;this.maskedElement=this.layerElement;if(this.data.ln){this.layerElement.setAttribute('id',this.data.ln);}if(this.data.cl){this.layerElement.setAttribute('class',this.data.cl);}if(this.data.bm!==0){this.setBlendMode();}},renderElement:function renderElement(){var transformedElementStyle=this.transformedElement?this.transformedElement.style:{};if(this.finalTransform._matMdf){var matrixValue=this.finalTransform.mat.toCSS();transformedElementStyle.transform=matrixValue;transformedElementStyle.webkitTransform=matrixValue;}if(this.finalTransform._opMdf){transformedElementStyle.opacity=this.finalTransform.mProp.o.v;}},renderFrame:function renderFrame(){// If it is exported as hidden (data.hd === true) no need to render
		// If it is not visible no need to render
		if(this.data.hd||this.hidden){return;}this.renderTransform();this.renderRenderable();this.renderElement();this.renderInnerContent();if(this._isFirstFrame){this._isFirstFrame=false;}},destroy:function destroy(){this.layerElement=null;this.transformedElement=null;if(this.matteElement){this.matteElement=null;}if(this.maskManager){this.maskManager.destroy();this.maskManager=null;}},createRenderableComponents:function createRenderableComponents(){this.maskManager=new MaskElement(this.data,this,this.globalData);},addEffects:function addEffects(){},setMatte:function setMatte(){}};HBaseElement.prototype.getBaseElement=SVGBaseElement.prototype.getBaseElement;HBaseElement.prototype.destroyBaseElement=HBaseElement.prototype.destroy;HBaseElement.prototype.buildElementParenting=BaseRenderer.prototype.buildElementParenting;function HSolidElement(data,globalData,comp){this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],HSolidElement);HSolidElement.prototype.createContent=function(){var rect;if(this.data.hasMask){rect=createNS('rect');rect.setAttribute('width',this.data.sw);rect.setAttribute('height',this.data.sh);rect.setAttribute('fill',this.data.sc);this.svgElement.setAttribute('width',this.data.sw);this.svgElement.setAttribute('height',this.data.sh);}else {rect=createTag('div');rect.style.width=this.data.sw+'px';rect.style.height=this.data.sh+'px';rect.style.backgroundColor=this.data.sc;}this.layerElement.appendChild(rect);};function HShapeElement(data,globalData,comp){// List of drawable elements
		this.shapes=[];// Full shape data
		this.shapesData=data.shapes;// List of styles that will be applied to shapes
		this.stylesList=[];// List of modifiers that will be applied to shapes
		this.shapeModifiers=[];// List of items in shape tree
		this.itemsData=[];// List of items in previous shape tree
		this.processedElements=[];// List of animated components
		this.animatedContents=[];this.shapesContainer=createNS('g');this.initElement(data,globalData,comp);// Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
		// List of elements that have been created
		this.prevViewData=[];this.currentBBox={x:999999,y:-999999,h:0,w:0};}extendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement],HShapeElement);HShapeElement.prototype._renderShapeFrame=HShapeElement.prototype.renderInnerContent;HShapeElement.prototype.createContent=function(){var cont;this.baseElement.style.fontSize=0;if(this.data.hasMask){this.layerElement.appendChild(this.shapesContainer);cont=this.svgElement;}else {cont=createNS('svg');var size=this.comp.data?this.comp.data:this.globalData.compSize;cont.setAttribute('width',size.w);cont.setAttribute('height',size.h);cont.appendChild(this.shapesContainer);this.layerElement.appendChild(cont);}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0,[],true);this.filterUniqueShapes();this.shapeCont=cont;};HShapeElement.prototype.getTransformedPoint=function(transformers,point){var i;var len=transformers.length;for(i=0;i<len;i+=1){point=transformers[i].mProps.v.applyToPointArray(point[0],point[1],0);}return point;};HShapeElement.prototype.calculateShapeBoundingBox=function(item,boundingBox){var shape=item.sh.v;var transformers=item.transformers;var i;var len=shape._length;var vPoint;var oPoint;var nextIPoint;var nextVPoint;if(len<=1){return;}for(i=0;i<len-1;i+=1){vPoint=this.getTransformedPoint(transformers,shape.v[i]);oPoint=this.getTransformedPoint(transformers,shape.o[i]);nextIPoint=this.getTransformedPoint(transformers,shape.i[i+1]);nextVPoint=this.getTransformedPoint(transformers,shape.v[i+1]);this.checkBounds(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox);}if(shape.c){vPoint=this.getTransformedPoint(transformers,shape.v[i]);oPoint=this.getTransformedPoint(transformers,shape.o[i]);nextIPoint=this.getTransformedPoint(transformers,shape.i[0]);nextVPoint=this.getTransformedPoint(transformers,shape.v[0]);this.checkBounds(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox);}};HShapeElement.prototype.checkBounds=function(vPoint,oPoint,nextIPoint,nextVPoint,boundingBox){this.getBoundsOfCurve(vPoint,oPoint,nextIPoint,nextVPoint);var bounds=this.shapeBoundingBox;boundingBox.x=bmMin(bounds.left,boundingBox.x);boundingBox.xMax=bmMax(bounds.right,boundingBox.xMax);boundingBox.y=bmMin(bounds.top,boundingBox.y);boundingBox.yMax=bmMax(bounds.bottom,boundingBox.yMax);};HShapeElement.prototype.shapeBoundingBox={left:0,right:0,top:0,bottom:0};HShapeElement.prototype.tempBoundingBox={x:0,xMax:0,y:0,yMax:0,width:0,height:0};HShapeElement.prototype.getBoundsOfCurve=function(p0,p1,p2,p3){var bounds=[[p0[0],p3[0]],[p0[1],p3[1]]];for(var a,b,c,t,b2ac,t1,t2,i=0;i<2;++i){// eslint-disable-line no-plusplus
		b=6*p0[i]-12*p1[i]+6*p2[i];a=-3*p0[i]+9*p1[i]-9*p2[i]+3*p3[i];c=3*p1[i]-3*p0[i];b|=0;// eslint-disable-line no-bitwise
		a|=0;// eslint-disable-line no-bitwise
		c|=0;// eslint-disable-line no-bitwise
		if(a===0&&b===0);else if(a===0){t=-c/b;if(t>0&&t<1){bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));}}else {b2ac=b*b-4*c*a;if(b2ac>=0){t1=(-b+bmSqrt(b2ac))/(2*a);if(t1>0&&t1<1)bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));t2=(-b-bmSqrt(b2ac))/(2*a);if(t2>0&&t2<1)bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));}}}this.shapeBoundingBox.left=bmMin.apply(null,bounds[0]);this.shapeBoundingBox.top=bmMin.apply(null,bounds[1]);this.shapeBoundingBox.right=bmMax.apply(null,bounds[0]);this.shapeBoundingBox.bottom=bmMax.apply(null,bounds[1]);};HShapeElement.prototype.calculateF=function(t,p0,p1,p2,p3,i){return bmPow(1-t,3)*p0[i]+3*bmPow(1-t,2)*t*p1[i]+3*(1-t)*bmPow(t,2)*p2[i]+bmPow(t,3)*p3[i];};HShapeElement.prototype.calculateBoundingBox=function(itemsData,boundingBox){var i;var len=itemsData.length;for(i=0;i<len;i+=1){if(itemsData[i]&&itemsData[i].sh){this.calculateShapeBoundingBox(itemsData[i],boundingBox);}else if(itemsData[i]&&itemsData[i].it){this.calculateBoundingBox(itemsData[i].it,boundingBox);}else if(itemsData[i]&&itemsData[i].style&&itemsData[i].w){this.expandStrokeBoundingBox(itemsData[i].w,boundingBox);}}};HShapeElement.prototype.expandStrokeBoundingBox=function(widthProperty,boundingBox){var width=0;if(widthProperty.keyframes){for(var i=0;i<widthProperty.keyframes.length;i+=1){var kfw=widthProperty.keyframes[i].s;if(kfw>width){width=kfw;}}width*=widthProperty.mult;}else {width=widthProperty.v*widthProperty.mult;}boundingBox.x-=width;boundingBox.xMax+=width;boundingBox.y-=width;boundingBox.yMax+=width;};HShapeElement.prototype.currentBoxContains=function(box){return this.currentBBox.x<=box.x&&this.currentBBox.y<=box.y&&this.currentBBox.width+this.currentBBox.x>=box.x+box.width&&this.currentBBox.height+this.currentBBox.y>=box.y+box.height;};HShapeElement.prototype.renderInnerContent=function(){this._renderShapeFrame();if(!this.hidden&&(this._isFirstFrame||this._mdf)){var tempBoundingBox=this.tempBoundingBox;var max=999999;tempBoundingBox.x=max;tempBoundingBox.xMax=-max;tempBoundingBox.y=max;tempBoundingBox.yMax=-max;this.calculateBoundingBox(this.itemsData,tempBoundingBox);tempBoundingBox.width=tempBoundingBox.xMax<tempBoundingBox.x?0:tempBoundingBox.xMax-tempBoundingBox.x;tempBoundingBox.height=tempBoundingBox.yMax<tempBoundingBox.y?0:tempBoundingBox.yMax-tempBoundingBox.y;// var tempBoundingBox = this.shapeCont.getBBox();
		if(this.currentBoxContains(tempBoundingBox)){return;}var changed=false;if(this.currentBBox.w!==tempBoundingBox.width){this.currentBBox.w=tempBoundingBox.width;this.shapeCont.setAttribute('width',tempBoundingBox.width);changed=true;}if(this.currentBBox.h!==tempBoundingBox.height){this.currentBBox.h=tempBoundingBox.height;this.shapeCont.setAttribute('height',tempBoundingBox.height);changed=true;}if(changed||this.currentBBox.x!==tempBoundingBox.x||this.currentBBox.y!==tempBoundingBox.y){this.currentBBox.w=tempBoundingBox.width;this.currentBBox.h=tempBoundingBox.height;this.currentBBox.x=tempBoundingBox.x;this.currentBBox.y=tempBoundingBox.y;this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);var shapeStyle=this.shapeCont.style;var shapeTransform='translate('+this.currentBBox.x+'px,'+this.currentBBox.y+'px)';shapeStyle.transform=shapeTransform;shapeStyle.webkitTransform=shapeTransform;}}};function HTextElement(data,globalData,comp){this.textSpans=[];this.textPaths=[];this.currentBBox={x:999999,y:-999999,h:0,w:0};this.renderType='svg';this.isMasked=false;this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],HTextElement);HTextElement.prototype.createContent=function(){this.isMasked=this.checkMasks();if(this.isMasked){this.renderType='svg';this.compW=this.comp.data.w;this.compH=this.comp.data.h;this.svgElement.setAttribute('width',this.compW);this.svgElement.setAttribute('height',this.compH);var g=createNS('g');this.maskedElement.appendChild(g);this.innerElem=g;}else {this.renderType='html';this.innerElem=this.layerElement;}this.checkParenting();};HTextElement.prototype.buildNewText=function(){var documentData=this.textProperty.currentData;this.renderedLetters=createSizedArray(documentData.l?documentData.l.length:0);var innerElemStyle=this.innerElem.style;var textColor=documentData.fc?this.buildColor(documentData.fc):'rgba(0,0,0,0)';innerElemStyle.fill=textColor;innerElemStyle.color=textColor;if(documentData.sc){innerElemStyle.stroke=this.buildColor(documentData.sc);innerElemStyle.strokeWidth=documentData.sw+'px';}var fontData=this.globalData.fontManager.getFontByName(documentData.f);if(!this.globalData.fontManager.chars){innerElemStyle.fontSize=documentData.finalSize+'px';innerElemStyle.lineHeight=documentData.finalSize+'px';if(fontData.fClass){this.innerElem.className=fontData.fClass;}else {innerElemStyle.fontFamily=fontData.fFamily;var fWeight=documentData.fWeight;var fStyle=documentData.fStyle;innerElemStyle.fontStyle=fStyle;innerElemStyle.fontWeight=fWeight;}}var i;var len;var letters=documentData.l;len=letters.length;var tSpan;var tParent;var tCont;var matrixHelper=this.mHelper;var shapes;var shapeStr='';var cnt=0;for(i=0;i<len;i+=1){if(this.globalData.fontManager.chars){if(!this.textPaths[cnt]){tSpan=createNS('path');tSpan.setAttribute('stroke-linecap',lineCapEnum[1]);tSpan.setAttribute('stroke-linejoin',lineJoinEnum[2]);tSpan.setAttribute('stroke-miterlimit','4');}else {tSpan=this.textPaths[cnt];}if(!this.isMasked){if(this.textSpans[cnt]){tParent=this.textSpans[cnt];tCont=tParent.children[0];}else {tParent=createTag('div');tParent.style.lineHeight=0;tCont=createNS('svg');tCont.appendChild(tSpan);styleDiv(tParent);}}}else if(!this.isMasked){if(this.textSpans[cnt]){tParent=this.textSpans[cnt];tSpan=this.textPaths[cnt];}else {tParent=createTag('span');styleDiv(tParent);tSpan=createTag('span');styleDiv(tSpan);tParent.appendChild(tSpan);}}else {tSpan=this.textPaths[cnt]?this.textPaths[cnt]:createNS('text');}// tSpan.setAttribute('visibility', 'hidden');
		if(this.globalData.fontManager.chars){var charData=this.globalData.fontManager.getCharData(documentData.finalText[i],fontData.fStyle,this.globalData.fontManager.getFontByName(documentData.f).fFamily);var shapeData;if(charData){shapeData=charData.data;}else {shapeData=null;}matrixHelper.reset();if(shapeData&&shapeData.shapes&&shapeData.shapes.length){shapes=shapeData.shapes[0].it;matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);shapeStr=this.createPathShape(matrixHelper,shapes);tSpan.setAttribute('d',shapeStr);}if(!this.isMasked){this.innerElem.appendChild(tParent);if(shapeData&&shapeData.shapes){// document.body.appendChild is needed to get exact measure of shape
		document.body.appendChild(tCont);var boundingBox=tCont.getBBox();tCont.setAttribute('width',boundingBox.width+2);tCont.setAttribute('height',boundingBox.height+2);tCont.setAttribute('viewBox',boundingBox.x-1+' '+(boundingBox.y-1)+' '+(boundingBox.width+2)+' '+(boundingBox.height+2));var tContStyle=tCont.style;var tContTranslation='translate('+(boundingBox.x-1)+'px,'+(boundingBox.y-1)+'px)';tContStyle.transform=tContTranslation;tContStyle.webkitTransform=tContTranslation;letters[i].yOffset=boundingBox.y-1;}else {tCont.setAttribute('width',1);tCont.setAttribute('height',1);}tParent.appendChild(tCont);}else {this.innerElem.appendChild(tSpan);}}else {tSpan.textContent=letters[i].val;tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace','xml:space','preserve');if(!this.isMasked){this.innerElem.appendChild(tParent);//
		var tStyle=tSpan.style;var tSpanTranslation='translate3d(0,'+-documentData.finalSize/1.2+'px,0)';tStyle.transform=tSpanTranslation;tStyle.webkitTransform=tSpanTranslation;}else {this.innerElem.appendChild(tSpan);}}//
		if(!this.isMasked){this.textSpans[cnt]=tParent;}else {this.textSpans[cnt]=tSpan;}this.textSpans[cnt].style.display='block';this.textPaths[cnt]=tSpan;cnt+=1;}while(cnt<this.textSpans.length){this.textSpans[cnt].style.display='none';cnt+=1;}};HTextElement.prototype.renderInnerContent=function(){this.validateText();var svgStyle;if(this.data.singleShape){if(!this._isFirstFrame&&!this.lettersChangedFlag){return;}if(this.isMasked&&this.finalTransform._matMdf){// Todo Benchmark if using this is better than getBBox
		this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+-this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);svgStyle=this.svgElement.style;var translation='translate('+-this.finalTransform.mProp.p.v[0]+'px,'+-this.finalTransform.mProp.p.v[1]+'px)';svgStyle.transform=translation;svgStyle.webkitTransform=translation;}}this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);if(!this.lettersChangedFlag&&!this.textAnimator.lettersChangedFlag){return;}var i;var len;var count=0;var renderedLetters=this.textAnimator.renderedLetters;var letters=this.textProperty.currentData.l;len=letters.length;var renderedLetter;var textSpan;var textPath;for(i=0;i<len;i+=1){if(letters[i].n){count+=1;}else {textSpan=this.textSpans[i];textPath=this.textPaths[i];renderedLetter=renderedLetters[count];count+=1;if(renderedLetter._mdf.m){if(!this.isMasked){textSpan.style.webkitTransform=renderedLetter.m;textSpan.style.transform=renderedLetter.m;}else {textSpan.setAttribute('transform',renderedLetter.m);}}/// /textSpan.setAttribute('opacity',renderedLetter.o);
		textSpan.style.opacity=renderedLetter.o;if(renderedLetter.sw&&renderedLetter._mdf.sw){textPath.setAttribute('stroke-width',renderedLetter.sw);}if(renderedLetter.sc&&renderedLetter._mdf.sc){textPath.setAttribute('stroke',renderedLetter.sc);}if(renderedLetter.fc&&renderedLetter._mdf.fc){textPath.setAttribute('fill',renderedLetter.fc);textPath.style.color=renderedLetter.fc;}}}if(this.innerElem.getBBox&&!this.hidden&&(this._isFirstFrame||this._mdf)){var boundingBox=this.innerElem.getBBox();if(this.currentBBox.w!==boundingBox.width){this.currentBBox.w=boundingBox.width;this.svgElement.setAttribute('width',boundingBox.width);}if(this.currentBBox.h!==boundingBox.height){this.currentBBox.h=boundingBox.height;this.svgElement.setAttribute('height',boundingBox.height);}var margin=1;if(this.currentBBox.w!==boundingBox.width+margin*2||this.currentBBox.h!==boundingBox.height+margin*2||this.currentBBox.x!==boundingBox.x-margin||this.currentBBox.y!==boundingBox.y-margin){this.currentBBox.w=boundingBox.width+margin*2;this.currentBBox.h=boundingBox.height+margin*2;this.currentBBox.x=boundingBox.x-margin;this.currentBBox.y=boundingBox.y-margin;this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);svgStyle=this.svgElement.style;var svgTransform='translate('+this.currentBBox.x+'px,'+this.currentBBox.y+'px)';svgStyle.transform=svgTransform;svgStyle.webkitTransform=svgTransform;}}};function HCameraElement(data,globalData,comp){this.initFrame();this.initBaseData(data,globalData,comp);this.initHierarchy();var getProp=PropertyFactory.getProp;this.pe=getProp(this,data.pe,0,0,this);if(data.ks.p.s){this.px=getProp(this,data.ks.p.x,1,0,this);this.py=getProp(this,data.ks.p.y,1,0,this);this.pz=getProp(this,data.ks.p.z,1,0,this);}else {this.p=getProp(this,data.ks.p,1,0,this);}if(data.ks.a){this.a=getProp(this,data.ks.a,1,0,this);}if(data.ks.or.k.length&&data.ks.or.k[0].to){var i;var len=data.ks.or.k.length;for(i=0;i<len;i+=1){data.ks.or.k[i].to=null;data.ks.or.k[i].ti=null;}}this.or=getProp(this,data.ks.or,1,degToRads,this);this.or.sh=true;this.rx=getProp(this,data.ks.rx,0,degToRads,this);this.ry=getProp(this,data.ks.ry,0,degToRads,this);this.rz=getProp(this,data.ks.rz,0,degToRads,this);this.mat=new Matrix();this._prevMat=new Matrix();this._isFirstFrame=true;// TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
		this.finalTransform={mProp:this};}extendPrototype([BaseElement,FrameElement,HierarchyElement],HCameraElement);HCameraElement.prototype.setup=function(){var i;var len=this.comp.threeDElements.length;var comp;var perspectiveStyle;var containerStyle;for(i=0;i<len;i+=1){// [perspectiveElem,container]
		comp=this.comp.threeDElements[i];if(comp.type==='3d'){perspectiveStyle=comp.perspectiveElem.style;containerStyle=comp.container.style;var perspective=this.pe.v+'px';var origin='0px 0px 0px';var matrix='matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';perspectiveStyle.perspective=perspective;perspectiveStyle.webkitPerspective=perspective;containerStyle.transformOrigin=origin;containerStyle.mozTransformOrigin=origin;containerStyle.webkitTransformOrigin=origin;perspectiveStyle.transform=matrix;perspectiveStyle.webkitTransform=matrix;}}};HCameraElement.prototype.createElements=function(){};HCameraElement.prototype.hide=function(){};HCameraElement.prototype.renderFrame=function(){var _mdf=this._isFirstFrame;var i;var len;if(this.hierarchy){len=this.hierarchy.length;for(i=0;i<len;i+=1){_mdf=this.hierarchy[i].finalTransform.mProp._mdf||_mdf;}}if(_mdf||this.pe._mdf||this.p&&this.p._mdf||this.px&&(this.px._mdf||this.py._mdf||this.pz._mdf)||this.rx._mdf||this.ry._mdf||this.rz._mdf||this.or._mdf||this.a&&this.a._mdf){this.mat.reset();if(this.hierarchy){len=this.hierarchy.length-1;for(i=len;i>=0;i-=1){var mTransf=this.hierarchy[i].finalTransform.mProp;this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);}}if(this.p){this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);}else {this.mat.translate(-this.px.v,-this.py.v,this.pz.v);}if(this.a){var diffVector;if(this.p){diffVector=[this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];}else {diffVector=[this.px.v-this.a.v[0],this.py.v-this.a.v[1],this.pz.v-this.a.v[2]];}var mag=Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));// var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
		var lookDir=[diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];var lookLengthOnXZ=Math.sqrt(lookDir[2]*lookDir[2]+lookDir[0]*lookDir[0]);var mRotationX=Math.atan2(lookDir[1],lookLengthOnXZ);var mRotationY=Math.atan2(lookDir[0],-lookDir[2]);this.mat.rotateY(mRotationY).rotateX(-mRotationX);}this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);this.mat.translate(0,0,this.pe.v);var hasMatrixChanged=!this._prevMat.equals(this.mat);if((hasMatrixChanged||this.pe._mdf)&&this.comp.threeDElements){len=this.comp.threeDElements.length;var comp;var perspectiveStyle;var containerStyle;for(i=0;i<len;i+=1){comp=this.comp.threeDElements[i];if(comp.type==='3d'){if(hasMatrixChanged){var matValue=this.mat.toCSS();containerStyle=comp.container.style;containerStyle.transform=matValue;containerStyle.webkitTransform=matValue;}if(this.pe._mdf){perspectiveStyle=comp.perspectiveElem.style;perspectiveStyle.perspective=this.pe.v+'px';perspectiveStyle.webkitPerspective=this.pe.v+'px';}}}this.mat.clone(this._prevMat);}}this._isFirstFrame=false;};HCameraElement.prototype.prepareFrame=function(num){this.prepareProperties(num,true);};HCameraElement.prototype.destroy=function(){};HCameraElement.prototype.getBaseElement=function(){return null;};function HImageElement(data,globalData,comp){this.assetData=globalData.getAssetData(data.refId);this.initElement(data,globalData,comp);}extendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement],HImageElement);HImageElement.prototype.createContent=function(){var assetPath=this.globalData.getAssetsPath(this.assetData);var img=new Image();if(this.data.hasMask){this.imageElem=createNS('image');this.imageElem.setAttribute('width',this.assetData.w+'px');this.imageElem.setAttribute('height',this.assetData.h+'px');this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);this.layerElement.appendChild(this.imageElem);this.baseElement.setAttribute('width',this.assetData.w);this.baseElement.setAttribute('height',this.assetData.h);}else {this.layerElement.appendChild(img);}img.crossOrigin='anonymous';img.src=assetPath;if(this.data.ln){this.baseElement.setAttribute('id',this.data.ln);}};function HybridRendererBase(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.renderConfig={className:config&&config.className||'',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',hideOnTransparent:!(config&&config.hideOnTransparent===false),filterSize:{width:config&&config.filterSize&&config.filterSize.width||'400%',height:config&&config.filterSize&&config.filterSize.height||'400%',x:config&&config.filterSize&&config.filterSize.x||'-100%',y:config&&config.filterSize&&config.filterSize.y||'-100%'}};this.globalData={_mdf:false,frameNum:-1,renderConfig:this.renderConfig};this.pendingElements=[];this.elements=[];this.threeDElements=[];this.destroyed=false;this.camera=null;this.supports3d=true;this.rendererType='html';}extendPrototype([BaseRenderer],HybridRendererBase);HybridRendererBase.prototype.buildItem=SVGRenderer.prototype.buildItem;HybridRendererBase.prototype.checkPendingElements=function(){while(this.pendingElements.length){var element=this.pendingElements.pop();element.checkParenting();}};HybridRendererBase.prototype.appendElementInPos=function(element,pos){var newDOMElement=element.getBaseElement();if(!newDOMElement){return;}var layer=this.layers[pos];if(!layer.ddd||!this.supports3d){if(this.threeDElements){this.addTo3dContainer(newDOMElement,pos);}else {var i=0;var nextDOMElement;var nextLayer;var tmpDOMElement;while(i<pos){if(this.elements[i]&&this.elements[i]!==true&&this.elements[i].getBaseElement){nextLayer=this.elements[i];tmpDOMElement=this.layers[i].ddd?this.getThreeDContainerByPos(i):nextLayer.getBaseElement();nextDOMElement=tmpDOMElement||nextDOMElement;}i+=1;}if(nextDOMElement){if(!layer.ddd||!this.supports3d){this.layerElement.insertBefore(newDOMElement,nextDOMElement);}}else if(!layer.ddd||!this.supports3d){this.layerElement.appendChild(newDOMElement);}}}else {this.addTo3dContainer(newDOMElement,pos);}};HybridRendererBase.prototype.createShape=function(data){if(!this.supports3d){return new SVGShapeElement(data,this.globalData,this);}return new HShapeElement(data,this.globalData,this);};HybridRendererBase.prototype.createText=function(data){if(!this.supports3d){return new SVGTextLottieElement(data,this.globalData,this);}return new HTextElement(data,this.globalData,this);};HybridRendererBase.prototype.createCamera=function(data){this.camera=new HCameraElement(data,this.globalData,this);return this.camera;};HybridRendererBase.prototype.createImage=function(data){if(!this.supports3d){return new IImageElement(data,this.globalData,this);}return new HImageElement(data,this.globalData,this);};HybridRendererBase.prototype.createSolid=function(data){if(!this.supports3d){return new ISolidElement(data,this.globalData,this);}return new HSolidElement(data,this.globalData,this);};HybridRendererBase.prototype.createNull=SVGRenderer.prototype.createNull;HybridRendererBase.prototype.getThreeDContainerByPos=function(pos){var i=0;var len=this.threeDElements.length;while(i<len){if(this.threeDElements[i].startPos<=pos&&this.threeDElements[i].endPos>=pos){return this.threeDElements[i].perspectiveElem;}i+=1;}return null;};HybridRendererBase.prototype.createThreeDContainer=function(pos,type){var perspectiveElem=createTag('div');var style;var containerStyle;styleDiv(perspectiveElem);var container=createTag('div');styleDiv(container);if(type==='3d'){style=perspectiveElem.style;style.width=this.globalData.compSize.w+'px';style.height=this.globalData.compSize.h+'px';var center='50% 50%';style.webkitTransformOrigin=center;style.mozTransformOrigin=center;style.transformOrigin=center;containerStyle=container.style;var matrix='matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';containerStyle.transform=matrix;containerStyle.webkitTransform=matrix;}perspectiveElem.appendChild(container);// this.resizerElem.appendChild(perspectiveElem);
		var threeDContainerData={container:container,perspectiveElem:perspectiveElem,startPos:pos,endPos:pos,type:type};this.threeDElements.push(threeDContainerData);return threeDContainerData;};HybridRendererBase.prototype.build3dContainers=function(){var i;var len=this.layers.length;var lastThreeDContainerData;var currentContainer='';for(i=0;i<len;i+=1){if(this.layers[i].ddd&&this.layers[i].ty!==3){if(currentContainer!=='3d'){currentContainer='3d';lastThreeDContainerData=this.createThreeDContainer(i,'3d');}lastThreeDContainerData.endPos=Math.max(lastThreeDContainerData.endPos,i);}else {if(currentContainer!=='2d'){currentContainer='2d';lastThreeDContainerData=this.createThreeDContainer(i,'2d');}lastThreeDContainerData.endPos=Math.max(lastThreeDContainerData.endPos,i);}}len=this.threeDElements.length;for(i=len-1;i>=0;i-=1){this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);}};HybridRendererBase.prototype.addTo3dContainer=function(elem,pos){var i=0;var len=this.threeDElements.length;while(i<len){if(pos<=this.threeDElements[i].endPos){var j=this.threeDElements[i].startPos;var nextElement;while(j<pos){if(this.elements[j]&&this.elements[j].getBaseElement){nextElement=this.elements[j].getBaseElement();}j+=1;}if(nextElement){this.threeDElements[i].container.insertBefore(elem,nextElement);}else {this.threeDElements[i].container.appendChild(elem);}break;}i+=1;}};HybridRendererBase.prototype.configAnimation=function(animData){var resizerElem=createTag('div');var wrapper=this.animationItem.wrapper;var style=resizerElem.style;style.width=animData.w+'px';style.height=animData.h+'px';this.resizerElem=resizerElem;styleDiv(resizerElem);style.transformStyle='flat';style.mozTransformStyle='flat';style.webkitTransformStyle='flat';if(this.renderConfig.className){resizerElem.setAttribute('class',this.renderConfig.className);}wrapper.appendChild(resizerElem);style.overflow='hidden';var svg=createNS('svg');svg.setAttribute('width','1');svg.setAttribute('height','1');styleDiv(svg);this.resizerElem.appendChild(svg);var defs=createNS('defs');svg.appendChild(defs);this.data=animData;// Mask animation
		this.setupGlobalData(animData,svg);this.globalData.defs=defs;this.layers=animData.layers;this.layerElement=this.resizerElem;this.build3dContainers();this.updateContainerSize();};HybridRendererBase.prototype.destroy=function(){if(this.animationItem.wrapper){this.animationItem.wrapper.innerText='';}this.animationItem.container=null;this.globalData.defs=null;var i;var len=this.layers?this.layers.length:0;for(i=0;i<len;i+=1){if(this.elements[i]&&this.elements[i].destroy){this.elements[i].destroy();}}this.elements.length=0;this.destroyed=true;this.animationItem=null;};HybridRendererBase.prototype.updateContainerSize=function(){var elementWidth=this.animationItem.wrapper.offsetWidth;var elementHeight=this.animationItem.wrapper.offsetHeight;var elementRel=elementWidth/elementHeight;var animationRel=this.globalData.compSize.w/this.globalData.compSize.h;var sx;var sy;var tx;var ty;if(animationRel>elementRel){sx=elementWidth/this.globalData.compSize.w;sy=elementWidth/this.globalData.compSize.w;tx=0;ty=(elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2;}else {sx=elementHeight/this.globalData.compSize.h;sy=elementHeight/this.globalData.compSize.h;tx=(elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;ty=0;}var style=this.resizerElem.style;style.webkitTransform='matrix3d('+sx+',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';style.transform=style.webkitTransform;};HybridRendererBase.prototype.renderFrame=SVGRenderer.prototype.renderFrame;HybridRendererBase.prototype.hide=function(){this.resizerElem.style.display='none';};HybridRendererBase.prototype.show=function(){this.resizerElem.style.display='block';};HybridRendererBase.prototype.initItems=function(){this.buildAllItems();if(this.camera){this.camera.setup();}else {var cWidth=this.globalData.compSize.w;var cHeight=this.globalData.compSize.h;var i;var len=this.threeDElements.length;for(i=0;i<len;i+=1){var style=this.threeDElements[i].perspectiveElem.style;style.webkitPerspective=Math.sqrt(Math.pow(cWidth,2)+Math.pow(cHeight,2))+'px';style.perspective=style.webkitPerspective;}}};HybridRendererBase.prototype.searchExtraCompositions=function(assets){var i;var len=assets.length;var floatingContainer=createTag('div');for(i=0;i<len;i+=1){if(assets[i].xt){var comp=this.createComp(assets[i],floatingContainer,this.globalData.comp,null);comp.initExpressions();this.globalData.projectInterface.registerComposition(comp);}}};function HCompElement(data,globalData,comp){this.layers=data.layers;this.supports3d=!data.hasMask;this.completeLayers=false;this.pendingElements=[];this.elements=this.layers?createSizedArray(this.layers.length):[];this.initElement(data,globalData,comp);this.tm=data.tm?PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this):{_placeholder:true};}extendPrototype([HybridRendererBase,ICompElement,HBaseElement],HCompElement);HCompElement.prototype._createBaseContainerElements=HCompElement.prototype.createContainerElements;HCompElement.prototype.createContainerElements=function(){this._createBaseContainerElements();// divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
		if(this.data.hasMask){this.svgElement.setAttribute('width',this.data.w);this.svgElement.setAttribute('height',this.data.h);this.transformedElement=this.baseElement;}else {this.transformedElement=this.layerElement;}};HCompElement.prototype.addTo3dContainer=function(elem,pos){var j=0;var nextElement;while(j<pos){if(this.elements[j]&&this.elements[j].getBaseElement){nextElement=this.elements[j].getBaseElement();}j+=1;}if(nextElement){this.layerElement.insertBefore(elem,nextElement);}else {this.layerElement.appendChild(elem);}};HCompElement.prototype.createComp=function(data){if(!this.supports3d){return new SVGCompElement(data,this.globalData,this);}return new HCompElement(data,this.globalData,this);};function HybridRenderer(animationItem,config){this.animationItem=animationItem;this.layers=null;this.renderedFrame=-1;this.renderConfig={className:config&&config.className||'',imagePreserveAspectRatio:config&&config.imagePreserveAspectRatio||'xMidYMid slice',hideOnTransparent:!(config&&config.hideOnTransparent===false),filterSize:{width:config&&config.filterSize&&config.filterSize.width||'400%',height:config&&config.filterSize&&config.filterSize.height||'400%',x:config&&config.filterSize&&config.filterSize.x||'-100%',y:config&&config.filterSize&&config.filterSize.y||'-100%'},runExpressions:!config||config.runExpressions===undefined||config.runExpressions};this.globalData={_mdf:false,frameNum:-1,renderConfig:this.renderConfig};this.pendingElements=[];this.elements=[];this.threeDElements=[];this.destroyed=false;this.camera=null;this.supports3d=true;this.rendererType='html';}extendPrototype([HybridRendererBase],HybridRenderer);HybridRenderer.prototype.createComp=function(data){if(!this.supports3d){return new SVGCompElement(data,this.globalData,this);}return new HCompElement(data,this.globalData,this);};var CompExpressionInterface=function(){return function(comp){function _thisLayerFunction(name){var i=0;var len=comp.layers.length;while(i<len){if(comp.layers[i].nm===name||comp.layers[i].ind===name){return comp.elements[i].layerInterface;}i+=1;}return null;// return {active:false};
		}Object.defineProperty(_thisLayerFunction,'_name',{value:comp.data.nm});_thisLayerFunction.layer=_thisLayerFunction;_thisLayerFunction.pixelAspect=1;_thisLayerFunction.height=comp.data.h||comp.globalData.compSize.h;_thisLayerFunction.width=comp.data.w||comp.globalData.compSize.w;_thisLayerFunction.pixelAspect=1;_thisLayerFunction.frameDuration=1/comp.globalData.frameRate;_thisLayerFunction.displayStartTime=0;_thisLayerFunction.numLayers=comp.layers.length;return _thisLayerFunction;};}();function _typeof$2(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$2=function _typeof(obj){return typeof obj;};}else {_typeof$2=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$2(obj);}/* eslint-disable */ /*
		   Copyright 2014 David Bau.

		   Permission is hereby granted, free of charge, to any person obtaining
		   a copy of this software and associated documentation files (the
		   "Software"), to deal in the Software without restriction, including
		   without limitation the rights to use, copy, modify, merge, publish,
		   distribute, sublicense, and/or sell copies of the Software, and to
		   permit persons to whom the Software is furnished to do so, subject to
		   the following conditions:

		   The above copyright notice and this permission notice shall be
		   included in all copies or substantial portions of the Software.

		   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
		   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
		   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
		   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
		   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
		   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

		   */function seedRandom(pool,math){//
		// The following constants are related to IEEE 754 limits.
		//
		var global=this,width=256,// each RC4 output is 0 <= x < 256
		chunks=6,// at least six RC4 outputs for each double
		digits=52,// there are 52 significant digits in a double
		rngname='random',// rngname: name for Math.random and Math.seedrandom
		startdenom=math.pow(width,chunks),significance=math.pow(2,digits),overflow=significance*2,mask=width-1,nodecrypto;// node.js crypto module, initialized at the bottom.
		//
		// seedrandom()
		// This is the seedrandom function described above.
		//
		function seedrandom(seed,options,callback){var key=[];options=options===true?{entropy:true}:options||{};// Flatten the seed string or build one from local entropy if needed.
		var shortseed=mixkey(flatten(options.entropy?[seed,tostring(pool)]:seed===null?autoseed():seed,3),key);// Use the seed to initialize an ARC4 generator.
		var arc4=new ARC4(key);// This function returns a random double in [0, 1) that contains
		// randomness in every bit of the mantissa of the IEEE 754 value.
		var prng=function prng(){var n=arc4.g(chunks),// Start with a numerator n < 2 ^ 48
		d=startdenom,//   and denominator d = 2 ^ 48.
		x=0;//   and no 'extra last byte'.
		while(n<significance){// Fill up all significant digits by
		n=(n+x)*width;//   shifting numerator and
		d*=width;//   denominator and generating a
		x=arc4.g(1);//   new least-significant-byte.
		}while(n>=overflow){// To avoid rounding up, before adding
		n/=2;//   last byte, shift everything
		d/=2;//   right using integer math until
		x>>>=1;//   we have exactly the desired bits.
		}return (n+x)/d;// Form the number within [0, 1).
		};prng.int32=function(){return arc4.g(4)|0;};prng.quick=function(){return arc4.g(4)/0x100000000;};prng["double"]=prng;// Mix the randomness into accumulated entropy.
		mixkey(tostring(arc4.S),pool);// Calling convention: what to return as a function of prng, seed, is_math.
		return (options.pass||callback||function(prng,seed,is_math_call,state){if(state){// Load the arc4 state from the given state if it has an S array.
		if(state.S){copy(state,arc4);}// Only provide the .state method if requested via options.state.
		prng.state=function(){return copy(arc4,{});};}// If called as a method of Math (Math.seedrandom()), mutate
		// Math.random because that is how seedrandom.js has worked since v1.0.
		if(is_math_call){math[rngname]=prng;return seed;}// Otherwise, it is a newer calling convention, so return the
		// prng directly.
		else return prng;})(prng,shortseed,'global'in options?options.global:this==math,options.state);}math['seed'+rngname]=seedrandom;//
		// ARC4
		//
		// An ARC4 implementation.  The constructor takes a key in the form of
		// an array of at most (width) integers that should be 0 <= x < (width).
		//
		// The g(count) method returns a pseudorandom integer that concatenates
		// the next (count) outputs from ARC4.  Its return value is a number x
		// that is in the range 0 <= x < (width ^ count).
		//
		function ARC4(key){var t,keylen=key.length,me=this,i=0,j=me.i=me.j=0,s=me.S=[];// The empty key [] is treated as [0].
		if(!keylen){key=[keylen++];}// Set up S using the standard key scheduling algorithm.
		while(i<width){s[i]=i++;}for(i=0;i<width;i++){s[i]=s[j=mask&j+key[i%keylen]+(t=s[i])];s[j]=t;}// The "g" method returns the next (count) outputs as one number.
		me.g=function(count){// Using instance members instead of closure state nearly doubles speed.
		var t,r=0,i=me.i,j=me.j,s=me.S;while(count--){t=s[i=mask&i+1];r=r*width+s[mask&(s[i]=s[j=mask&j+t])+(s[j]=t)];}me.i=i;me.j=j;return r;// For robust unpredictability, the function call below automatically
		// discards an initial batch of values.  This is called RC4-drop[256].
		// See http://google.com/search?q=rsa+fluhrer+response&btnI
		};}//
		// copy()
		// Copies internal state of ARC4 to or from a plain object.
		//
		function copy(f,t){t.i=f.i;t.j=f.j;t.S=f.S.slice();return t;}//
		// flatten()
		// Converts an object tree to nested arrays of strings.
		//
		function flatten(obj,depth){var result=[],typ=_typeof$2(obj),prop;if(depth&&typ=='object'){for(prop in obj){try{result.push(flatten(obj[prop],depth-1));}catch(e){}}}return result.length?result:typ=='string'?obj:obj+'\0';}//
		// mixkey()
		// Mixes a string seed into a key that is an array of integers, and
		// returns a shortened string seed that is equivalent to the result key.
		//
		function mixkey(seed,key){var stringseed=seed+'',smear,j=0;while(j<stringseed.length){key[mask&j]=mask&(smear^=key[mask&j]*19)+stringseed.charCodeAt(j++);}return tostring(key);}//
		// autoseed()
		// Returns an object for autoseeding, using window.crypto and Node crypto
		// module if available.
		//
		function autoseed(){try{if(nodecrypto);var out=new Uint8Array(width);(global.crypto||global.msCrypto).getRandomValues(out);return tostring(out);}catch(e){var browser=global.navigator,plugins=browser&&browser.plugins;return [+new Date(),global,plugins,global.screen,tostring(pool)];}}//
		// tostring()
		// Converts an array of charcodes to a string
		//
		function tostring(a){return String.fromCharCode.apply(0,a);}//
		// When seedrandom.js is loaded, we immediately mix a few bits
		// from the built-in RNG into the entropy pool.  Because we do
		// not want to interfere with deterministic PRNG state later,
		// seedrandom will not call math.random on its own again after
		// initialization.
		//
		mixkey(math.random(),pool);//
		// Nodejs and AMD support: export the implementation as a module using
		// either convention.
		//
		// End anonymous scope, and pass initial values.
		}function initialize$2(BMMath){seedRandom([],BMMath);}var propTypes={SHAPE:'shape'};function _typeof$1(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof$1=function _typeof(obj){return typeof obj;};}else {_typeof$1=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof$1(obj);}var ExpressionManager=function(){var ob={};var Math=BMMath;var window=null;var document=null;var XMLHttpRequest=null;var fetch=null;var frames=null;var _lottieGlobal={};initialize$2(BMMath);function resetFrame(){_lottieGlobal={};}function $bm_isInstanceOfArray(arr){return arr.constructor===Array||arr.constructor===Float32Array;}function isNumerable(tOfV,v){return tOfV==='number'||v instanceof Number||tOfV==='boolean'||tOfV==='string';}function $bm_neg(a){var tOfA=_typeof$1(a);if(tOfA==='number'||a instanceof Number||tOfA==='boolean'){return -a;}if($bm_isInstanceOfArray(a)){var i;var lenA=a.length;var retArr=[];for(i=0;i<lenA;i+=1){retArr[i]=-a[i];}return retArr;}if(a.propType){return a.v;}return -a;}var easeInBez=BezierFactory.getBezierEasing(0.333,0,0.833,0.833,'easeIn').get;var easeOutBez=BezierFactory.getBezierEasing(0.167,0.167,0.667,1,'easeOut').get;var easeInOutBez=BezierFactory.getBezierEasing(0.33,0,0.667,1,'easeInOut').get;function sum(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)||tOfA==='string'||tOfB==='string'){return a+b;}if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){a=a.slice(0);a[0]+=b;return a;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){b=b.slice(0);b[0]=a+b[0];return b;}if($bm_isInstanceOfArray(a)&&$bm_isInstanceOfArray(b)){var i=0;var lenA=a.length;var lenB=b.length;var retArr=[];while(i<lenA||i<lenB){if((typeof a[i]==='number'||a[i]instanceof Number)&&(typeof b[i]==='number'||b[i]instanceof Number)){retArr[i]=a[i]+b[i];}else {retArr[i]=b[i]===undefined?a[i]:a[i]||b[i];}i+=1;}return retArr;}return 0;}var add=sum;function sub(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){if(tOfA==='string'){a=parseInt(a,10);}if(tOfB==='string'){b=parseInt(b,10);}return a-b;}if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){a=a.slice(0);a[0]-=b;return a;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){b=b.slice(0);b[0]=a-b[0];return b;}if($bm_isInstanceOfArray(a)&&$bm_isInstanceOfArray(b)){var i=0;var lenA=a.length;var lenB=b.length;var retArr=[];while(i<lenA||i<lenB){if((typeof a[i]==='number'||a[i]instanceof Number)&&(typeof b[i]==='number'||b[i]instanceof Number)){retArr[i]=a[i]-b[i];}else {retArr[i]=b[i]===undefined?a[i]:a[i]||b[i];}i+=1;}return retArr;}return 0;}function mul(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);var arr;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a*b;}var i;var len;if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){len=a.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a[i]*b;}return arr;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){len=b.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a*b[i];}return arr;}return 0;}function div(a,b){var tOfA=_typeof$1(a);var tOfB=_typeof$1(b);var arr;if(isNumerable(tOfA,a)&&isNumerable(tOfB,b)){return a/b;}var i;var len;if($bm_isInstanceOfArray(a)&&isNumerable(tOfB,b)){len=a.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a[i]/b;}return arr;}if(isNumerable(tOfA,a)&&$bm_isInstanceOfArray(b)){len=b.length;arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=a/b[i];}return arr;}return 0;}function mod(a,b){if(typeof a==='string'){a=parseInt(a,10);}if(typeof b==='string'){b=parseInt(b,10);}return a%b;}var $bm_sum=sum;var $bm_sub=sub;var $bm_mul=mul;var $bm_div=div;var $bm_mod=mod;function clamp(num,min,max){if(min>max){var mm=max;max=min;min=mm;}return Math.min(Math.max(num,min),max);}function radiansToDegrees(val){return val/degToRads;}var radians_to_degrees=radiansToDegrees;function degreesToRadians(val){return val*degToRads;}var degrees_to_radians=radiansToDegrees;var helperLengthArray=[0,0,0,0,0,0];function length(arr1,arr2){if(typeof arr1==='number'||arr1 instanceof Number){arr2=arr2||0;return Math.abs(arr1-arr2);}if(!arr2){arr2=helperLengthArray;}var i;var len=Math.min(arr1.length,arr2.length);var addedLength=0;for(i=0;i<len;i+=1){addedLength+=Math.pow(arr2[i]-arr1[i],2);}return Math.sqrt(addedLength);}function normalize(vec){return div(vec,length(vec));}function rgbToHsl(val){var r=val[0];var g=val[1];var b=val[2];var max=Math.max(r,g,b);var min=Math.min(r,g,b);var h;var s;var l=(max+min)/2;if(max===min){h=0;// achromatic
		s=0;// achromatic
		}else {var d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;}h/=6;}return [h,s,l,val[3]];}function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;}function hslToRgb(val){var h=val[0];var s=val[1];var l=val[2];var r;var g;var b;if(s===0){r=l;// achromatic
		b=l;// achromatic
		g=l;// achromatic
		}else {var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3);}return [r,g,b,val[3]];}function linear(t,tMin,tMax,value1,value2){if(value1===undefined||value2===undefined){value1=tMin;value2=tMax;tMin=0;tMax=1;}if(tMax<tMin){var _tMin=tMax;tMax=tMin;tMin=_tMin;}if(t<=tMin){return value1;}if(t>=tMax){return value2;}var perc=tMax===tMin?0:(t-tMin)/(tMax-tMin);if(!value1.length){return value1+(value2-value1)*perc;}var i;var len=value1.length;var arr=createTypedArray('float32',len);for(i=0;i<len;i+=1){arr[i]=value1[i]+(value2[i]-value1[i])*perc;}return arr;}function random(min,max){if(max===undefined){if(min===undefined){min=0;max=1;}else {max=min;min=undefined;}}if(max.length){var i;var len=max.length;if(!min){min=createTypedArray('float32',len);}var arr=createTypedArray('float32',len);var rnd=BMMath.random();for(i=0;i<len;i+=1){arr[i]=min[i]+rnd*(max[i]-min[i]);}return arr;}if(min===undefined){min=0;}var rndm=BMMath.random();return min+rndm*(max-min);}function createPath(points,inTangents,outTangents,closed){var i;var len=points.length;var path=shapePool.newElement();path.setPathData(!!closed,len);var arrPlaceholder=[0,0];var inVertexPoint;var outVertexPoint;for(i=0;i<len;i+=1){inVertexPoint=inTangents&&inTangents[i]?inTangents[i]:arrPlaceholder;outVertexPoint=outTangents&&outTangents[i]?outTangents[i]:arrPlaceholder;path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0]+points[i][0],outVertexPoint[1]+points[i][1],inVertexPoint[0]+points[i][0],inVertexPoint[1]+points[i][1],i,true);}return path;}function initiateExpression(elem,data,property){// Bail out if we don't want expressions
		function noOp(_value){return _value;}if(!elem.globalData.renderConfig.runExpressions){return noOp;}var val=data.x;var needsVelocity=/velocity(?![\w\d])/.test(val);var _needsRandom=val.indexOf('random')!==-1;var elemType=elem.data.ty;var transform;var $bm_transform;var content;var effect;var thisProperty=property;thisProperty.valueAtTime=thisProperty.getValueAtTime;Object.defineProperty(thisProperty,'value',{get:function get(){return thisProperty.v;}});elem.comp.frameDuration=1/elem.comp.globalData.frameRate;elem.comp.displayStartTime=0;var inPoint=elem.data.ip/elem.comp.globalData.frameRate;var outPoint=elem.data.op/elem.comp.globalData.frameRate;var width=elem.data.sw?elem.data.sw:0;var height=elem.data.sh?elem.data.sh:0;var name=elem.data.nm;var loopIn;var loop_in;var loopOut;var loop_out;var smooth;var toWorld;var fromWorld;var fromComp;var toComp;var fromCompToSurface;var position;var rotation;var anchorPoint;var scale;var thisLayer;var thisComp;var mask;var valueAtTime;var velocityAtTime;var scoped_bm_rt;// val = val.replace(/(\\?"|')((http)(s)?(:\/))?\/.*?(\\?"|')/g, "\"\""); // deter potential network calls
		var expression_function=eval('[function _expression_function(){'+val+';scoped_bm_rt=$bm_rt}]')[0];// eslint-disable-line no-eval
		var numKeys=property.kf?data.k.length:0;var active=!this.data||this.data.hd!==true;var wiggle=function wiggle(freq,amp){var iWiggle;var j;var lenWiggle=this.pv.length?this.pv.length:1;var addedAmps=createTypedArray('float32',lenWiggle);freq=5;var iterations=Math.floor(time*freq);iWiggle=0;j=0;while(iWiggle<iterations){// var rnd = BMMath.random();
		for(j=0;j<lenWiggle;j+=1){addedAmps[j]+=-amp+amp*2*BMMath.random();// addedAmps[j] += -amp + amp*2*rnd;
		}iWiggle+=1;}// var rnd2 = BMMath.random();
		var periods=time*freq;var perc=periods-Math.floor(periods);var arr=createTypedArray('float32',lenWiggle);if(lenWiggle>1){for(j=0;j<lenWiggle;j+=1){arr[j]=this.pv[j]+addedAmps[j]+(-amp+amp*2*BMMath.random())*perc;// arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
		// arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
		}return arr;}return this.pv+addedAmps[0]+(-amp+amp*2*BMMath.random())*perc;}.bind(this);if(thisProperty.loopIn){loopIn=thisProperty.loopIn.bind(thisProperty);loop_in=loopIn;}if(thisProperty.loopOut){loopOut=thisProperty.loopOut.bind(thisProperty);loop_out=loopOut;}if(thisProperty.smooth){smooth=thisProperty.smooth.bind(thisProperty);}function loopInDuration(type,duration){return loopIn(type,duration,true);}function loopOutDuration(type,duration){return loopOut(type,duration,true);}if(this.getValueAtTime){valueAtTime=this.getValueAtTime.bind(this);}if(this.getVelocityAtTime){velocityAtTime=this.getVelocityAtTime.bind(this);}var comp=elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);function lookAt(elem1,elem2){var fVec=[elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];var pitch=Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;var yaw=-Math.atan2(fVec[1],fVec[2])/degToRads;return [yaw,pitch,0];}function easeOut(t,tMin,tMax,val1,val2){return applyEase(easeOutBez,t,tMin,tMax,val1,val2);}function easeIn(t,tMin,tMax,val1,val2){return applyEase(easeInBez,t,tMin,tMax,val1,val2);}function ease(t,tMin,tMax,val1,val2){return applyEase(easeInOutBez,t,tMin,tMax,val1,val2);}function applyEase(fn,t,tMin,tMax,val1,val2){if(val1===undefined){val1=tMin;val2=tMax;}else {t=(t-tMin)/(tMax-tMin);}if(t>1){t=1;}else if(t<0){t=0;}var mult=fn(t);if($bm_isInstanceOfArray(val1)){var iKey;var lenKey=val1.length;var arr=createTypedArray('float32',lenKey);for(iKey=0;iKey<lenKey;iKey+=1){arr[iKey]=(val2[iKey]-val1[iKey])*mult+val1[iKey];}return arr;}return (val2-val1)*mult+val1;}function nearestKey(time){var iKey;var lenKey=data.k.length;var index;var keyTime;if(!data.k.length||typeof data.k[0]==='number'){index=0;keyTime=0;}else {index=-1;time*=elem.comp.globalData.frameRate;if(time<data.k[0].t){index=1;keyTime=data.k[0].t;}else {for(iKey=0;iKey<lenKey-1;iKey+=1){if(time===data.k[iKey].t){index=iKey+1;keyTime=data.k[iKey].t;break;}else if(time>data.k[iKey].t&&time<data.k[iKey+1].t){if(time-data.k[iKey].t>data.k[iKey+1].t-time){index=iKey+2;keyTime=data.k[iKey+1].t;}else {index=iKey+1;keyTime=data.k[iKey].t;}break;}}if(index===-1){index=iKey+1;keyTime=data.k[iKey].t;}}}var obKey={};obKey.index=index;obKey.time=keyTime/elem.comp.globalData.frameRate;return obKey;}function key(ind){var obKey;var iKey;var lenKey;if(!data.k.length||typeof data.k[0]==='number'){throw new Error('The property has no keyframe at index '+ind);}ind-=1;obKey={time:data.k[ind].t/elem.comp.globalData.frameRate,value:[]};var arr=Object.prototype.hasOwnProperty.call(data.k[ind],'s')?data.k[ind].s:data.k[ind-1].e;lenKey=arr.length;for(iKey=0;iKey<lenKey;iKey+=1){obKey[iKey]=arr[iKey];obKey.value[iKey]=arr[iKey];}return obKey;}function framesToTime(fr,fps){if(!fps){fps=elem.comp.globalData.frameRate;}return fr/fps;}function timeToFrames(t,fps){if(!t&&t!==0){t=time;}if(!fps){fps=elem.comp.globalData.frameRate;}return t*fps;}function seedRandom(seed){BMMath.seedrandom(randSeed+seed);}function sourceRectAtTime(){return elem.sourceRectAtTime();}function substring(init,end){if(typeof value==='string'){if(end===undefined){return value.substring(init);}return value.substring(init,end);}return '';}function substr(init,end){if(typeof value==='string'){if(end===undefined){return value.substr(init);}return value.substr(init,end);}return '';}function posterizeTime(framesPerSecond){time=framesPerSecond===0?0:Math.floor(time*framesPerSecond)/framesPerSecond;value=valueAtTime(time);}var time;var velocity;var value;var text;var textIndex;var textTotal;var selectorValue;var index=elem.data.ind;var hasParent=!!(elem.hierarchy&&elem.hierarchy.length);var parent;var randSeed=Math.floor(Math.random()*1000000);var globalData=elem.globalData;function executeExpression(_value){// globalData.pushExpression();
		value=_value;if(this.frameExpressionId===elem.globalData.frameId&&this.propType!=='textSelector'){return value;}if(this.propType==='textSelector'){textIndex=this.textIndex;textTotal=this.textTotal;selectorValue=this.selectorValue;}if(!thisLayer){text=elem.layerInterface.text;thisLayer=elem.layerInterface;thisComp=elem.comp.compInterface;toWorld=thisLayer.toWorld.bind(thisLayer);fromWorld=thisLayer.fromWorld.bind(thisLayer);fromComp=thisLayer.fromComp.bind(thisLayer);toComp=thisLayer.toComp.bind(thisLayer);mask=thisLayer.mask?thisLayer.mask.bind(thisLayer):null;fromCompToSurface=fromComp;}if(!transform){transform=elem.layerInterface('ADBE Transform Group');$bm_transform=transform;if(transform){anchorPoint=transform.anchorPoint;/* position = transform.position;
		                      rotation = transform.rotation;
		                      scale = transform.scale; */}}if(elemType===4&&!content){content=thisLayer('ADBE Root Vectors Group');}if(!effect){effect=thisLayer(4);}hasParent=!!(elem.hierarchy&&elem.hierarchy.length);if(hasParent&&!parent){parent=elem.hierarchy[0].layerInterface;}time=this.comp.renderedFrame/this.comp.globalData.frameRate;if(_needsRandom){seedRandom(randSeed+time);}if(needsVelocity){velocity=velocityAtTime(time);}expression_function();this.frameExpressionId=elem.globalData.frameId;// TODO: Check if it's possible to return on ShapeInterface the .v value
		// Changed this to a ternary operation because Rollup failed compiling it correctly
		scoped_bm_rt=scoped_bm_rt.propType===propTypes.SHAPE?scoped_bm_rt.v:scoped_bm_rt;return scoped_bm_rt;}// Bundlers will see these as dead code and unless we reference them
		executeExpression.__preventDeadCodeRemoval=[$bm_transform,anchorPoint,time,velocity,inPoint,outPoint,width,height,name,loop_in,loop_out,smooth,toComp,fromCompToSurface,toWorld,fromWorld,mask,position,rotation,scale,thisComp,numKeys,active,wiggle,loopInDuration,loopOutDuration,comp,lookAt,easeOut,easeIn,ease,nearestKey,key,text,textIndex,textTotal,selectorValue,framesToTime,timeToFrames,sourceRectAtTime,substring,substr,posterizeTime,index,globalData];return executeExpression;}ob.initiateExpression=initiateExpression;ob.__preventDeadCodeRemoval=[window,document,XMLHttpRequest,fetch,frames,$bm_neg,add,$bm_sum,$bm_sub,$bm_mul,$bm_div,$bm_mod,clamp,radians_to_degrees,degreesToRadians,degrees_to_radians,normalize,rgbToHsl,hslToRgb,linear,random,createPath,_lottieGlobal];ob.resetFrame=resetFrame;return ob;}();var Expressions=function(){var ob={};ob.initExpressions=initExpressions;ob.resetFrame=ExpressionManager.resetFrame;function initExpressions(animation){var stackCount=0;var registers=[];function pushExpression(){stackCount+=1;}function popExpression(){stackCount-=1;if(stackCount===0){releaseInstances();}}function registerExpressionProperty(expression){if(registers.indexOf(expression)===-1){registers.push(expression);}}function releaseInstances(){var i;var len=registers.length;for(i=0;i<len;i+=1){registers[i].release();}registers.length=0;}animation.renderer.compInterface=CompExpressionInterface(animation.renderer);animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);animation.renderer.globalData.pushExpression=pushExpression;animation.renderer.globalData.popExpression=popExpression;animation.renderer.globalData.registerExpressionProperty=registerExpressionProperty;}return ob;}();var MaskManagerInterface=function(){function MaskInterface(mask,data){this._mask=mask;this._data=data;}Object.defineProperty(MaskInterface.prototype,'maskPath',{get:function get(){if(this._mask.prop.k){this._mask.prop.getValue();}return this._mask.prop;}});Object.defineProperty(MaskInterface.prototype,'maskOpacity',{get:function get(){if(this._mask.op.k){this._mask.op.getValue();}return this._mask.op.v*100;}});var MaskManager=function MaskManager(maskManager){var _masksInterfaces=createSizedArray(maskManager.viewData.length);var i;var len=maskManager.viewData.length;for(i=0;i<len;i+=1){_masksInterfaces[i]=new MaskInterface(maskManager.viewData[i],maskManager.masksProperties[i]);}var maskFunction=function maskFunction(name){i=0;while(i<len){if(maskManager.masksProperties[i].nm===name){return _masksInterfaces[i];}i+=1;}return null;};return maskFunction;};return MaskManager;}();var ExpressionPropertyInterface=function(){var defaultUnidimensionalValue={pv:0,v:0,mult:1};var defaultMultidimensionalValue={pv:[0,0,0],v:[0,0,0],mult:1};function completeProperty(expressionValue,property,type){Object.defineProperty(expressionValue,'velocity',{get:function get(){return property.getVelocityAtTime(property.comp.currentFrame);}});expressionValue.numKeys=property.keyframes?property.keyframes.length:0;expressionValue.key=function(pos){if(!expressionValue.numKeys){return 0;}var value='';if('s'in property.keyframes[pos-1]){value=property.keyframes[pos-1].s;}else if('e'in property.keyframes[pos-2]){value=property.keyframes[pos-2].e;}else {value=property.keyframes[pos-2].s;}var valueProp=type==='unidimensional'?new Number(value):Object.assign({},value);// eslint-disable-line no-new-wrappers
		valueProp.time=property.keyframes[pos-1].t/property.elem.comp.globalData.frameRate;valueProp.value=type==='unidimensional'?value[0]:value;return valueProp;};expressionValue.valueAtTime=property.getValueAtTime;expressionValue.speedAtTime=property.getSpeedAtTime;expressionValue.velocityAtTime=property.getVelocityAtTime;expressionValue.propertyGroup=property.propertyGroup;}function UnidimensionalPropertyInterface(property){if(!property||!('pv'in property)){property=defaultUnidimensionalValue;}var mult=1/property.mult;var val=property.pv*mult;var expressionValue=new Number(val);// eslint-disable-line no-new-wrappers
		expressionValue.value=val;completeProperty(expressionValue,property,'unidimensional');return function(){if(property.k){property.getValue();}val=property.v*mult;if(expressionValue.value!==val){expressionValue=new Number(val);// eslint-disable-line no-new-wrappers
		expressionValue.value=val;completeProperty(expressionValue,property,'unidimensional');}return expressionValue;};}function MultidimensionalPropertyInterface(property){if(!property||!('pv'in property)){property=defaultMultidimensionalValue;}var mult=1/property.mult;var len=property.data&&property.data.l||property.pv.length;var expressionValue=createTypedArray('float32',len);var arrValue=createTypedArray('float32',len);expressionValue.value=arrValue;completeProperty(expressionValue,property,'multidimensional');return function(){if(property.k){property.getValue();}for(var i=0;i<len;i+=1){arrValue[i]=property.v[i]*mult;expressionValue[i]=arrValue[i];}return expressionValue;};}// TODO: try to avoid using this getter
		function defaultGetter(){return defaultUnidimensionalValue;}return function(property){if(!property){return defaultGetter;}if(property.propType==='unidimensional'){return UnidimensionalPropertyInterface(property);}return MultidimensionalPropertyInterface(property);};}();var TransformExpressionInterface=function(){return function(transform){function _thisFunction(name){switch(name){case'scale':case'Scale':case'ADBE Scale':case 6:return _thisFunction.scale;case'rotation':case'Rotation':case'ADBE Rotation':case'ADBE Rotate Z':case 10:return _thisFunction.rotation;case'ADBE Rotate X':return _thisFunction.xRotation;case'ADBE Rotate Y':return _thisFunction.yRotation;case'position':case'Position':case'ADBE Position':case 2:return _thisFunction.position;case'ADBE Position_0':return _thisFunction.xPosition;case'ADBE Position_1':return _thisFunction.yPosition;case'ADBE Position_2':return _thisFunction.zPosition;case'anchorPoint':case'AnchorPoint':case'Anchor Point':case'ADBE AnchorPoint':case 1:return _thisFunction.anchorPoint;case'opacity':case'Opacity':case 11:return _thisFunction.opacity;default:return null;}}Object.defineProperty(_thisFunction,'rotation',{get:ExpressionPropertyInterface(transform.r||transform.rz)});Object.defineProperty(_thisFunction,'zRotation',{get:ExpressionPropertyInterface(transform.rz||transform.r)});Object.defineProperty(_thisFunction,'xRotation',{get:ExpressionPropertyInterface(transform.rx)});Object.defineProperty(_thisFunction,'yRotation',{get:ExpressionPropertyInterface(transform.ry)});Object.defineProperty(_thisFunction,'scale',{get:ExpressionPropertyInterface(transform.s)});var _px;var _py;var _pz;var _transformFactory;if(transform.p){_transformFactory=ExpressionPropertyInterface(transform.p);}else {_px=ExpressionPropertyInterface(transform.px);_py=ExpressionPropertyInterface(transform.py);if(transform.pz){_pz=ExpressionPropertyInterface(transform.pz);}}Object.defineProperty(_thisFunction,'position',{get:function get(){if(transform.p){return _transformFactory();}return [_px(),_py(),_pz?_pz():0];}});Object.defineProperty(_thisFunction,'xPosition',{get:ExpressionPropertyInterface(transform.px)});Object.defineProperty(_thisFunction,'yPosition',{get:ExpressionPropertyInterface(transform.py)});Object.defineProperty(_thisFunction,'zPosition',{get:ExpressionPropertyInterface(transform.pz)});Object.defineProperty(_thisFunction,'anchorPoint',{get:ExpressionPropertyInterface(transform.a)});Object.defineProperty(_thisFunction,'opacity',{get:ExpressionPropertyInterface(transform.o)});Object.defineProperty(_thisFunction,'skew',{get:ExpressionPropertyInterface(transform.sk)});Object.defineProperty(_thisFunction,'skewAxis',{get:ExpressionPropertyInterface(transform.sa)});Object.defineProperty(_thisFunction,'orientation',{get:ExpressionPropertyInterface(transform.or)});return _thisFunction;};}();var LayerExpressionInterface=function(){function getMatrix(time){var toWorldMat=new Matrix();if(time!==undefined){var propMatrix=this._elem.finalTransform.mProp.getValueAtTime(time);propMatrix.clone(toWorldMat);}else {var transformMat=this._elem.finalTransform.mProp;transformMat.applyToMatrix(toWorldMat);}return toWorldMat;}function toWorldVec(arr,time){var toWorldMat=this.getMatrix(time);toWorldMat.props[12]=0;toWorldMat.props[13]=0;toWorldMat.props[14]=0;return this.applyPoint(toWorldMat,arr);}function toWorld(arr,time){var toWorldMat=this.getMatrix(time);return this.applyPoint(toWorldMat,arr);}function fromWorldVec(arr,time){var toWorldMat=this.getMatrix(time);toWorldMat.props[12]=0;toWorldMat.props[13]=0;toWorldMat.props[14]=0;return this.invertPoint(toWorldMat,arr);}function fromWorld(arr,time){var toWorldMat=this.getMatrix(time);return this.invertPoint(toWorldMat,arr);}function applyPoint(matrix,arr){if(this._elem.hierarchy&&this._elem.hierarchy.length){var i;var len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);}}return matrix.applyToPointArray(arr[0],arr[1],arr[2]||0);}function invertPoint(matrix,arr){if(this._elem.hierarchy&&this._elem.hierarchy.length){var i;var len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);}}return matrix.inversePoint(arr);}function fromComp(arr){var toWorldMat=new Matrix();toWorldMat.reset();this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);if(this._elem.hierarchy&&this._elem.hierarchy.length){var i;var len=this._elem.hierarchy.length;for(i=0;i<len;i+=1){this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);}return toWorldMat.inversePoint(arr);}return toWorldMat.inversePoint(arr);}function sampleImage(){return [1,1,1,1];}return function(elem){var transformInterface;function _registerMaskInterface(maskManager){_thisLayerFunction.mask=new MaskManagerInterface(maskManager,elem);}function _registerEffectsInterface(effects){_thisLayerFunction.effect=effects;}function _thisLayerFunction(name){switch(name){case'ADBE Root Vectors Group':case'Contents':case 2:return _thisLayerFunction.shapeInterface;case 1:case 6:case'Transform':case'transform':case'ADBE Transform Group':return transformInterface;case 4:case'ADBE Effect Parade':case'effects':case'Effects':return _thisLayerFunction.effect;case'ADBE Text Properties':return _thisLayerFunction.textInterface;default:return null;}}_thisLayerFunction.getMatrix=getMatrix;_thisLayerFunction.invertPoint=invertPoint;_thisLayerFunction.applyPoint=applyPoint;_thisLayerFunction.toWorld=toWorld;_thisLayerFunction.toWorldVec=toWorldVec;_thisLayerFunction.fromWorld=fromWorld;_thisLayerFunction.fromWorldVec=fromWorldVec;_thisLayerFunction.toComp=toWorld;_thisLayerFunction.fromComp=fromComp;_thisLayerFunction.sampleImage=sampleImage;_thisLayerFunction.sourceRectAtTime=elem.sourceRectAtTime.bind(elem);_thisLayerFunction._elem=elem;transformInterface=TransformExpressionInterface(elem.finalTransform.mProp);var anchorPointDescriptor=getDescriptor(transformInterface,'anchorPoint');Object.defineProperties(_thisLayerFunction,{hasParent:{get:function get(){return elem.hierarchy.length;}},parent:{get:function get(){return elem.hierarchy[0].layerInterface;}},rotation:getDescriptor(transformInterface,'rotation'),scale:getDescriptor(transformInterface,'scale'),position:getDescriptor(transformInterface,'position'),opacity:getDescriptor(transformInterface,'opacity'),anchorPoint:anchorPointDescriptor,anchor_point:anchorPointDescriptor,transform:{get:function get(){return transformInterface;}},active:{get:function get(){return elem.isInRange;}}});_thisLayerFunction.startTime=elem.data.st;_thisLayerFunction.index=elem.data.ind;_thisLayerFunction.source=elem.data.refId;_thisLayerFunction.height=elem.data.ty===0?elem.data.h:100;_thisLayerFunction.width=elem.data.ty===0?elem.data.w:100;_thisLayerFunction.inPoint=elem.data.ip/elem.comp.globalData.frameRate;_thisLayerFunction.outPoint=elem.data.op/elem.comp.globalData.frameRate;_thisLayerFunction._name=elem.data.nm;_thisLayerFunction.registerMaskInterface=_registerMaskInterface;_thisLayerFunction.registerEffectsInterface=_registerEffectsInterface;return _thisLayerFunction;};}();var propertyGroupFactory=function(){return function(interfaceFunction,parentPropertyGroup){return function(val){val=val===undefined?1:val;if(val<=0){return interfaceFunction;}return parentPropertyGroup(val-1);};};}();var PropertyInterface=function(){return function(propertyName,propertyGroup){var interfaceFunction={_name:propertyName};function _propertyGroup(val){val=val===undefined?1:val;if(val<=0){return interfaceFunction;}return propertyGroup(val-1);}return _propertyGroup;};}();var EffectsExpressionInterface=function(){var ob={createEffectsInterface:createEffectsInterface};function createEffectsInterface(elem,propertyGroup){if(elem.effectsManager){var effectElements=[];var effectsData=elem.data.ef;var i;var len=elem.effectsManager.effectElements.length;for(i=0;i<len;i+=1){effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));}var effects=elem.data.ef||[];var groupInterface=function groupInterface(name){i=0;len=effects.length;while(i<len){if(name===effects[i].nm||name===effects[i].mn||name===effects[i].ix){return effectElements[i];}i+=1;}return null;};Object.defineProperty(groupInterface,'numProperties',{get:function get(){return effects.length;}});return groupInterface;}return null;}function createGroupInterface(data,elements,propertyGroup,elem){function groupInterface(name){var effects=data.ef;var i=0;var len=effects.length;while(i<len){if(name===effects[i].nm||name===effects[i].mn||name===effects[i].ix){if(effects[i].ty===5){return effectElements[i];}return effectElements[i]();}i+=1;}throw new Error();}var _propertyGroup=propertyGroupFactory(groupInterface,propertyGroup);var effectElements=[];var i;var len=data.ef.length;for(i=0;i<len;i+=1){if(data.ef[i].ty===5){effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup,elem));}else {effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty,elem,_propertyGroup));}}if(data.mn==='ADBE Color Control'){Object.defineProperty(groupInterface,'color',{get:function get(){return effectElements[0]();}});}Object.defineProperties(groupInterface,{numProperties:{get:function get(){return data.np;}},_name:{value:data.nm},propertyGroup:{value:_propertyGroup}});groupInterface.enabled=data.en!==0;groupInterface.active=groupInterface.enabled;return groupInterface;}function createValueInterface(element,type,elem,propertyGroup){var expressionProperty=ExpressionPropertyInterface(element.p);function interfaceFunction(){if(type===10){return elem.comp.compInterface(element.p.v);}return expressionProperty();}if(element.p.setGroupProperty){element.p.setGroupProperty(PropertyInterface('',propertyGroup));}return interfaceFunction;}return ob;}();var ShapePathInterface=function(){return function pathInterfaceFactory(shape,view,propertyGroup){var prop=view.sh;function interfaceFunction(val){if(val==='Shape'||val==='shape'||val==='Path'||val==='path'||val==='ADBE Vector Shape'||val===2){return interfaceFunction.path;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);prop.setGroupProperty(PropertyInterface('Path',_propertyGroup));Object.defineProperties(interfaceFunction,{path:{get:function get(){if(prop.k){prop.getValue();}return prop;}},shape:{get:function get(){if(prop.k){prop.getValue();}return prop;}},_name:{value:shape.nm},ix:{value:shape.ix},propertyIndex:{value:shape.ix},mn:{value:shape.mn},propertyGroup:{value:propertyGroup}});return interfaceFunction;};}();var ShapeExpressionInterface=function(){function iterateElements(shapes,view,propertyGroup){var arr=[];var i;var len=shapes?shapes.length:0;for(i=0;i<len;i+=1){if(shapes[i].ty==='gr'){arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='fl'){arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='st'){arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='tm'){arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='tr');else if(shapes[i].ty==='el'){arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='sr'){arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='sh'){arr.push(ShapePathInterface(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='rc'){arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='rd'){arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='rp'){arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));}else if(shapes[i].ty==='gf'){arr.push(gradientFillInterfaceFactory(shapes[i],view[i],propertyGroup));}else {arr.push(defaultInterfaceFactory(shapes[i],view[i]));}}return arr;}function contentsInterfaceFactory(shape,view,propertyGroup){var interfaces;var interfaceFunction=function _interfaceFunction(value){var i=0;var len=interfaces.length;while(i<len){if(interfaces[i]._name===value||interfaces[i].mn===value||interfaces[i].propertyIndex===value||interfaces[i].ix===value||interfaces[i].ind===value){return interfaces[i];}i+=1;}if(typeof value==='number'){return interfaces[value-1];}return null;};interfaceFunction.propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);interfaces=iterateElements(shape.it,view.it,interfaceFunction.propertyGroup);interfaceFunction.numProperties=interfaces.length;var transformInterface=transformInterfaceFactory(shape.it[shape.it.length-1],view.it[view.it.length-1],interfaceFunction.propertyGroup);interfaceFunction.transform=transformInterface;interfaceFunction.propertyIndex=shape.cix;interfaceFunction._name=shape.nm;return interfaceFunction;}function groupInterfaceFactory(shape,view,propertyGroup){var interfaceFunction=function _interfaceFunction(value){switch(value){case'ADBE Vectors Group':case'Contents':case 2:return interfaceFunction.content;// Not necessary for now. Keeping them here in case a new case appears
		// case 'ADBE Vector Transform Group':
		// case 3:
		default:return interfaceFunction.transform;}};interfaceFunction.propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var content=contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);var transformInterface=transformInterfaceFactory(shape.it[shape.it.length-1],view.it[view.it.length-1],interfaceFunction.propertyGroup);interfaceFunction.content=content;interfaceFunction.transform=transformInterface;Object.defineProperty(interfaceFunction,'_name',{get:function get(){return shape.nm;}});// interfaceFunction.content = interfaceFunction;
		interfaceFunction.numProperties=shape.np;interfaceFunction.propertyIndex=shape.ix;interfaceFunction.nm=shape.nm;interfaceFunction.mn=shape.mn;return interfaceFunction;}function fillInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val==='Color'||val==='color'){return interfaceFunction.color;}if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}return null;}Object.defineProperties(interfaceFunction,{color:{get:ExpressionPropertyInterface(view.c)},opacity:{get:ExpressionPropertyInterface(view.o)},_name:{value:shape.nm},mn:{value:shape.mn}});view.c.setGroupProperty(PropertyInterface('Color',propertyGroup));view.o.setGroupProperty(PropertyInterface('Opacity',propertyGroup));return interfaceFunction;}function gradientFillInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val==='Start Point'||val==='start point'){return interfaceFunction.startPoint;}if(val==='End Point'||val==='end point'){return interfaceFunction.endPoint;}if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}return null;}Object.defineProperties(interfaceFunction,{startPoint:{get:ExpressionPropertyInterface(view.s)},endPoint:{get:ExpressionPropertyInterface(view.e)},opacity:{get:ExpressionPropertyInterface(view.o)},type:{get:function get(){return 'a';}},_name:{value:shape.nm},mn:{value:shape.mn}});view.s.setGroupProperty(PropertyInterface('Start Point',propertyGroup));view.e.setGroupProperty(PropertyInterface('End Point',propertyGroup));view.o.setGroupProperty(PropertyInterface('Opacity',propertyGroup));return interfaceFunction;}function defaultInterfaceFactory(){function interfaceFunction(){return null;}return interfaceFunction;}function strokeInterfaceFactory(shape,view,propertyGroup){var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var _dashPropertyGroup=propertyGroupFactory(dashOb,_propertyGroup);function addPropertyToDashOb(i){Object.defineProperty(dashOb,shape.d[i].nm,{get:ExpressionPropertyInterface(view.d.dataProps[i].p)});}var i;var len=shape.d?shape.d.length:0;var dashOb={};for(i=0;i<len;i+=1){addPropertyToDashOb(i);view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);}function interfaceFunction(val){if(val==='Color'||val==='color'){return interfaceFunction.color;}if(val==='Opacity'||val==='opacity'){return interfaceFunction.opacity;}if(val==='Stroke Width'||val==='stroke width'){return interfaceFunction.strokeWidth;}return null;}Object.defineProperties(interfaceFunction,{color:{get:ExpressionPropertyInterface(view.c)},opacity:{get:ExpressionPropertyInterface(view.o)},strokeWidth:{get:ExpressionPropertyInterface(view.w)},dash:{get:function get(){return dashOb;}},_name:{value:shape.nm},mn:{value:shape.mn}});view.c.setGroupProperty(PropertyInterface('Color',_propertyGroup));view.o.setGroupProperty(PropertyInterface('Opacity',_propertyGroup));view.w.setGroupProperty(PropertyInterface('Stroke Width',_propertyGroup));return interfaceFunction;}function trimInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(val){if(val===shape.e.ix||val==='End'||val==='end'){return interfaceFunction.end;}if(val===shape.s.ix){return interfaceFunction.start;}if(val===shape.o.ix){return interfaceFunction.offset;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);interfaceFunction.propertyIndex=shape.ix;view.s.setGroupProperty(PropertyInterface('Start',_propertyGroup));view.e.setGroupProperty(PropertyInterface('End',_propertyGroup));view.o.setGroupProperty(PropertyInterface('Offset',_propertyGroup));interfaceFunction.propertyIndex=shape.ix;interfaceFunction.propertyGroup=propertyGroup;Object.defineProperties(interfaceFunction,{start:{get:ExpressionPropertyInterface(view.s)},end:{get:ExpressionPropertyInterface(view.e)},offset:{get:ExpressionPropertyInterface(view.o)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function transformInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.a.ix===value||value==='Anchor Point'){return interfaceFunction.anchorPoint;}if(shape.o.ix===value||value==='Opacity'){return interfaceFunction.opacity;}if(shape.p.ix===value||value==='Position'){return interfaceFunction.position;}if(shape.r.ix===value||value==='Rotation'||value==='ADBE Vector Rotation'){return interfaceFunction.rotation;}if(shape.s.ix===value||value==='Scale'){return interfaceFunction.scale;}if(shape.sk&&shape.sk.ix===value||value==='Skew'){return interfaceFunction.skew;}if(shape.sa&&shape.sa.ix===value||value==='Skew Axis'){return interfaceFunction.skewAxis;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity',_propertyGroup));view.transform.mProps.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point',_propertyGroup));view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale',_propertyGroup));view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation',_propertyGroup));if(view.transform.mProps.sk){view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew',_propertyGroup));view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle',_propertyGroup));}view.transform.op.setGroupProperty(PropertyInterface('Opacity',_propertyGroup));Object.defineProperties(interfaceFunction,{opacity:{get:ExpressionPropertyInterface(view.transform.mProps.o)},position:{get:ExpressionPropertyInterface(view.transform.mProps.p)},anchorPoint:{get:ExpressionPropertyInterface(view.transform.mProps.a)},scale:{get:ExpressionPropertyInterface(view.transform.mProps.s)},rotation:{get:ExpressionPropertyInterface(view.transform.mProps.r)},skew:{get:ExpressionPropertyInterface(view.transform.mProps.sk)},skewAxis:{get:ExpressionPropertyInterface(view.transform.mProps.sa)},_name:{value:shape.nm}});interfaceFunction.ty='tr';interfaceFunction.mn=shape.mn;interfaceFunction.propertyGroup=propertyGroup;return interfaceFunction;}function ellipseInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.s.ix===value){return interfaceFunction.size;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);interfaceFunction.propertyIndex=shape.ix;var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;prop.s.setGroupProperty(PropertyInterface('Size',_propertyGroup));prop.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));Object.defineProperties(interfaceFunction,{size:{get:ExpressionPropertyInterface(prop.s)},position:{get:ExpressionPropertyInterface(prop.p)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function starInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.r.ix===value){return interfaceFunction.rotation;}if(shape.pt.ix===value){return interfaceFunction.points;}if(shape.or.ix===value||value==='ADBE Vector Star Outer Radius'){return interfaceFunction.outerRadius;}if(shape.os.ix===value){return interfaceFunction.outerRoundness;}if(shape.ir&&(shape.ir.ix===value||value==='ADBE Vector Star Inner Radius')){return interfaceFunction.innerRadius;}if(shape.is&&shape.is.ix===value){return interfaceFunction.innerRoundness;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;interfaceFunction.propertyIndex=shape.ix;prop.or.setGroupProperty(PropertyInterface('Outer Radius',_propertyGroup));prop.os.setGroupProperty(PropertyInterface('Outer Roundness',_propertyGroup));prop.pt.setGroupProperty(PropertyInterface('Points',_propertyGroup));prop.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));prop.r.setGroupProperty(PropertyInterface('Rotation',_propertyGroup));if(shape.ir){prop.ir.setGroupProperty(PropertyInterface('Inner Radius',_propertyGroup));prop.is.setGroupProperty(PropertyInterface('Inner Roundness',_propertyGroup));}Object.defineProperties(interfaceFunction,{position:{get:ExpressionPropertyInterface(prop.p)},rotation:{get:ExpressionPropertyInterface(prop.r)},points:{get:ExpressionPropertyInterface(prop.pt)},outerRadius:{get:ExpressionPropertyInterface(prop.or)},outerRoundness:{get:ExpressionPropertyInterface(prop.os)},innerRadius:{get:ExpressionPropertyInterface(prop.ir)},innerRoundness:{get:ExpressionPropertyInterface(prop.is)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function rectInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.p.ix===value){return interfaceFunction.position;}if(shape.r.ix===value){return interfaceFunction.roundness;}if(shape.s.ix===value||value==='Size'||value==='ADBE Vector Rect Size'){return interfaceFunction.size;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view.sh.ty==='tm'?view.sh.prop:view.sh;interfaceFunction.propertyIndex=shape.ix;prop.p.setGroupProperty(PropertyInterface('Position',_propertyGroup));prop.s.setGroupProperty(PropertyInterface('Size',_propertyGroup));prop.r.setGroupProperty(PropertyInterface('Rotation',_propertyGroup));Object.defineProperties(interfaceFunction,{position:{get:ExpressionPropertyInterface(prop.p)},roundness:{get:ExpressionPropertyInterface(prop.r)},size:{get:ExpressionPropertyInterface(prop.s)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function roundedInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.r.ix===value||value==='Round Corners 1'){return interfaceFunction.radius;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view;interfaceFunction.propertyIndex=shape.ix;prop.rd.setGroupProperty(PropertyInterface('Radius',_propertyGroup));Object.defineProperties(interfaceFunction,{radius:{get:ExpressionPropertyInterface(prop.rd)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}function repeaterInterfaceFactory(shape,view,propertyGroup){function interfaceFunction(value){if(shape.c.ix===value||value==='Copies'){return interfaceFunction.copies;}if(shape.o.ix===value||value==='Offset'){return interfaceFunction.offset;}return null;}var _propertyGroup=propertyGroupFactory(interfaceFunction,propertyGroup);var prop=view;interfaceFunction.propertyIndex=shape.ix;prop.c.setGroupProperty(PropertyInterface('Copies',_propertyGroup));prop.o.setGroupProperty(PropertyInterface('Offset',_propertyGroup));Object.defineProperties(interfaceFunction,{copies:{get:ExpressionPropertyInterface(prop.c)},offset:{get:ExpressionPropertyInterface(prop.o)},_name:{value:shape.nm}});interfaceFunction.mn=shape.mn;return interfaceFunction;}return function(shapes,view,propertyGroup){var interfaces;function _interfaceFunction(value){if(typeof value==='number'){value=value===undefined?1:value;if(value===0){return propertyGroup;}return interfaces[value-1];}var i=0;var len=interfaces.length;while(i<len){if(interfaces[i]._name===value){return interfaces[i];}i+=1;}return null;}function parentGroupWrapper(){return propertyGroup;}_interfaceFunction.propertyGroup=propertyGroupFactory(_interfaceFunction,parentGroupWrapper);interfaces=iterateElements(shapes,view,_interfaceFunction.propertyGroup);_interfaceFunction.numProperties=interfaces.length;_interfaceFunction._name='Contents';return _interfaceFunction;};}();var TextExpressionInterface=function(){return function(elem){var _sourceText;function _thisLayerFunction(name){switch(name){case'ADBE Text Document':return _thisLayerFunction.sourceText;default:return null;}}Object.defineProperty(_thisLayerFunction,'sourceText',{get:function get(){elem.textProperty.getValue();var stringValue=elem.textProperty.currentData.t;if(!_sourceText||stringValue!==_sourceText.value){_sourceText=new String(stringValue);// eslint-disable-line no-new-wrappers
		// If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive
		_sourceText.value=stringValue||new String(stringValue);// eslint-disable-line no-new-wrappers
		Object.defineProperty(_sourceText,'style',{get:function get(){return {fillColor:elem.textProperty.currentData.fc};}});}return _sourceText;}});return _thisLayerFunction;};}();function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var FootageInterface=function(){var outlineInterfaceFactory=function outlineInterfaceFactory(elem){var currentPropertyName='';var currentProperty=elem.getFootageData();function init(){currentPropertyName='';currentProperty=elem.getFootageData();return searchProperty;}function searchProperty(value){if(currentProperty[value]){currentPropertyName=value;currentProperty=currentProperty[value];if(_typeof(currentProperty)==='object'){return searchProperty;}return currentProperty;}var propertyNameIndex=value.indexOf(currentPropertyName);if(propertyNameIndex!==-1){var index=parseInt(value.substr(propertyNameIndex+currentPropertyName.length),10);currentProperty=currentProperty[index];if(_typeof(currentProperty)==='object'){return searchProperty;}return currentProperty;}return '';}return init;};var dataInterfaceFactory=function dataInterfaceFactory(elem){function interfaceFunction(value){if(value==='Outline'){return interfaceFunction.outlineInterface();}return null;}interfaceFunction._name='Outline';interfaceFunction.outlineInterface=outlineInterfaceFactory(elem);return interfaceFunction;};return function(elem){function _interfaceFunction(value){if(value==='Data'){return _interfaceFunction.dataInterface;}return null;}_interfaceFunction._name='Data';_interfaceFunction.dataInterface=dataInterfaceFactory(elem);return _interfaceFunction;};}();var interfaces={layer:LayerExpressionInterface,effects:EffectsExpressionInterface,comp:CompExpressionInterface,shape:ShapeExpressionInterface,text:TextExpressionInterface,footage:FootageInterface};function getInterface(type){return interfaces[type]||null;}var expressionHelpers=function(){function searchExpressions(elem,data,prop){if(data.x){prop.k=true;prop.x=true;prop.initiateExpression=ExpressionManager.initiateExpression;prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));}}function getValueAtTime(frameNum){frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastFrame){this._cachingAtTime.lastIndex=this._cachingAtTime.lastFrame<frameNum?this._cachingAtTime.lastIndex:0;this._cachingAtTime.value=this.interpolateValue(frameNum,this._cachingAtTime);this._cachingAtTime.lastFrame=frameNum;}return this._cachingAtTime.value;}function getSpeedAtTime(frameNum){var delta=-0.01;var v1=this.getValueAtTime(frameNum);var v2=this.getValueAtTime(frameNum+delta);var speed=0;if(v1.length){var i;for(i=0;i<v1.length;i+=1){speed+=Math.pow(v2[i]-v1[i],2);}speed=Math.sqrt(speed)*100;}else {speed=0;}return speed;}function getVelocityAtTime(frameNum){if(this.vel!==undefined){return this.vel;}var delta=-0.001;// frameNum += this.elem.data.st;
		var v1=this.getValueAtTime(frameNum);var v2=this.getValueAtTime(frameNum+delta);var velocity;if(v1.length){velocity=createTypedArray('float32',v1.length);var i;for(i=0;i<v1.length;i+=1){// removing frameRate
		// if needed, don't add it here
		// velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
		velocity[i]=(v2[i]-v1[i])/delta;}}else {velocity=(v2-v1)/delta;}return velocity;}function getStaticValueAtTime(){return this.pv;}function setGroupProperty(propertyGroup){this.propertyGroup=propertyGroup;}return {searchExpressions:searchExpressions,getSpeedAtTime:getSpeedAtTime,getVelocityAtTime:getVelocityAtTime,getValueAtTime:getValueAtTime,getStaticValueAtTime:getStaticValueAtTime,setGroupProperty:setGroupProperty};}();function addPropertyDecorator(){function loopOut(type,duration,durationFlag){if(!this.k||!this.keyframes){return this.pv;}type=type?type.toLowerCase():'';var currentFrame=this.comp.renderedFrame;var keyframes=this.keyframes;var lastKeyFrame=keyframes[keyframes.length-1].t;if(currentFrame<=lastKeyFrame){return this.pv;}var cycleDuration;var firstKeyFrame;if(!durationFlag){if(!duration||duration>keyframes.length-1){duration=keyframes.length-1;}firstKeyFrame=keyframes[keyframes.length-1-duration].t;cycleDuration=lastKeyFrame-firstKeyFrame;}else {if(!duration){cycleDuration=Math.max(0,lastKeyFrame-this.elem.data.ip);}else {cycleDuration=Math.abs(lastKeyFrame-this.elem.comp.globalData.frameRate*duration);}firstKeyFrame=lastKeyFrame-cycleDuration;}var i;var len;var ret;if(type==='pingpong'){var iterations=Math.floor((currentFrame-firstKeyFrame)/cycleDuration);if(iterations%2!==0){return this.getValueAtTime((cycleDuration-(currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		}}else if(type==='offset'){var initV=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var endV=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var current=this.getValueAtTime(((currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		var repeats=Math.floor((currentFrame-firstKeyFrame)/cycleDuration);if(this.pv.length){ret=new Array(initV.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=(endV[i]-initV[i])*repeats+current[i];}return ret;}return (endV-initV)*repeats+current;}else if(type==='continue'){var lastValue=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var nextLastValue=this.getValueAtTime((lastKeyFrame-0.001)/this.comp.globalData.frameRate,0);if(this.pv.length){ret=new Array(lastValue.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=lastValue[i]+(lastValue[i]-nextLastValue[i])*((currentFrame-lastKeyFrame)/this.comp.globalData.frameRate)/0.0005;// eslint-disable-line
		}return ret;}return lastValue+(lastValue-nextLastValue)*((currentFrame-lastKeyFrame)/0.001);}return this.getValueAtTime(((currentFrame-firstKeyFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		}function loopIn(type,duration,durationFlag){if(!this.k){return this.pv;}type=type?type.toLowerCase():'';var currentFrame=this.comp.renderedFrame;var keyframes=this.keyframes;var firstKeyFrame=keyframes[0].t;if(currentFrame>=firstKeyFrame){return this.pv;}var cycleDuration;var lastKeyFrame;if(!durationFlag){if(!duration||duration>keyframes.length-1){duration=keyframes.length-1;}lastKeyFrame=keyframes[duration].t;cycleDuration=lastKeyFrame-firstKeyFrame;}else {if(!duration){cycleDuration=Math.max(0,this.elem.data.op-firstKeyFrame);}else {cycleDuration=Math.abs(this.elem.comp.globalData.frameRate*duration);}lastKeyFrame=firstKeyFrame+cycleDuration;}var i;var len;var ret;if(type==='pingpong'){var iterations=Math.floor((firstKeyFrame-currentFrame)/cycleDuration);if(iterations%2===0){return this.getValueAtTime(((firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);// eslint-disable-line
		}}else if(type==='offset'){var initV=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var endV=this.getValueAtTime(lastKeyFrame/this.comp.globalData.frameRate,0);var current=this.getValueAtTime((cycleDuration-(firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame)/this.comp.globalData.frameRate,0);var repeats=Math.floor((firstKeyFrame-currentFrame)/cycleDuration)+1;if(this.pv.length){ret=new Array(initV.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=current[i]-(endV[i]-initV[i])*repeats;}return ret;}return current-(endV-initV)*repeats;}else if(type==='continue'){var firstValue=this.getValueAtTime(firstKeyFrame/this.comp.globalData.frameRate,0);var nextFirstValue=this.getValueAtTime((firstKeyFrame+0.001)/this.comp.globalData.frameRate,0);if(this.pv.length){ret=new Array(firstValue.length);len=ret.length;for(i=0;i<len;i+=1){ret[i]=firstValue[i]+(firstValue[i]-nextFirstValue[i])*(firstKeyFrame-currentFrame)/0.001;}return ret;}return firstValue+(firstValue-nextFirstValue)*(firstKeyFrame-currentFrame)/0.001;}return this.getValueAtTime((cycleDuration-((firstKeyFrame-currentFrame)%cycleDuration+firstKeyFrame))/this.comp.globalData.frameRate,0);// eslint-disable-line
		}function smooth(width,samples){if(!this.k){return this.pv;}width=(width||0.4)*0.5;samples=Math.floor(samples||5);if(samples<=1){return this.pv;}var currentTime=this.comp.renderedFrame/this.comp.globalData.frameRate;var initFrame=currentTime-width;var endFrame=currentTime+width;var sampleFrequency=samples>1?(endFrame-initFrame)/(samples-1):1;var i=0;var j=0;var value;if(this.pv.length){value=createTypedArray('float32',this.pv.length);}else {value=0;}var sampleValue;while(i<samples){sampleValue=this.getValueAtTime(initFrame+i*sampleFrequency);if(this.pv.length){for(j=0;j<this.pv.length;j+=1){value[j]+=sampleValue[j];}}else {value+=sampleValue;}i+=1;}if(this.pv.length){for(j=0;j<this.pv.length;j+=1){value[j]/=samples;}}else {value/=samples;}return value;}function getTransformValueAtTime(time){if(!this._transformCachingAtTime){this._transformCachingAtTime={v:new Matrix()};}/// /
		var matrix=this._transformCachingAtTime.v;matrix.cloneFromProps(this.pre.props);if(this.appliedTransformations<1){var anchor=this.a.getValueAtTime(time);matrix.translate(-anchor[0]*this.a.mult,-anchor[1]*this.a.mult,anchor[2]*this.a.mult);}if(this.appliedTransformations<2){var scale=this.s.getValueAtTime(time);matrix.scale(scale[0]*this.s.mult,scale[1]*this.s.mult,scale[2]*this.s.mult);}if(this.sk&&this.appliedTransformations<3){var skew=this.sk.getValueAtTime(time);var skewAxis=this.sa.getValueAtTime(time);matrix.skewFromAxis(-skew*this.sk.mult,skewAxis*this.sa.mult);}if(this.r&&this.appliedTransformations<4){var rotation=this.r.getValueAtTime(time);matrix.rotate(-rotation*this.r.mult);}else if(!this.r&&this.appliedTransformations<4){var rotationZ=this.rz.getValueAtTime(time);var rotationY=this.ry.getValueAtTime(time);var rotationX=this.rx.getValueAtTime(time);var orientation=this.or.getValueAtTime(time);matrix.rotateZ(-rotationZ*this.rz.mult).rotateY(rotationY*this.ry.mult).rotateX(rotationX*this.rx.mult).rotateZ(-orientation[2]*this.or.mult).rotateY(orientation[1]*this.or.mult).rotateX(orientation[0]*this.or.mult);}if(this.data.p&&this.data.p.s){var positionX=this.px.getValueAtTime(time);var positionY=this.py.getValueAtTime(time);if(this.data.p.z){var positionZ=this.pz.getValueAtTime(time);matrix.translate(positionX*this.px.mult,positionY*this.py.mult,-positionZ*this.pz.mult);}else {matrix.translate(positionX*this.px.mult,positionY*this.py.mult,0);}}else {var position=this.p.getValueAtTime(time);matrix.translate(position[0]*this.p.mult,position[1]*this.p.mult,-position[2]*this.p.mult);}return matrix;/// /
		}function getTransformStaticValueAtTime(){return this.v.clone(new Matrix());}var getTransformProperty=TransformPropertyFactory.getTransformProperty;TransformPropertyFactory.getTransformProperty=function(elem,data,container){var prop=getTransformProperty(elem,data,container);if(prop.dynamicProperties.length){prop.getValueAtTime=getTransformValueAtTime.bind(prop);}else {prop.getValueAtTime=getTransformStaticValueAtTime.bind(prop);}prop.setGroupProperty=expressionHelpers.setGroupProperty;return prop;};var propertyGetProp=PropertyFactory.getProp;PropertyFactory.getProp=function(elem,data,type,mult,container){var prop=propertyGetProp(elem,data,type,mult,container);// prop.getVelocityAtTime = getVelocityAtTime;
		// prop.loopOut = loopOut;
		// prop.loopIn = loopIn;
		if(prop.kf){prop.getValueAtTime=expressionHelpers.getValueAtTime.bind(prop);}else {prop.getValueAtTime=expressionHelpers.getStaticValueAtTime.bind(prop);}prop.setGroupProperty=expressionHelpers.setGroupProperty;prop.loopOut=loopOut;prop.loopIn=loopIn;prop.smooth=smooth;prop.getVelocityAtTime=expressionHelpers.getVelocityAtTime.bind(prop);prop.getSpeedAtTime=expressionHelpers.getSpeedAtTime.bind(prop);prop.numKeys=data.a===1?data.k.length:0;prop.propertyIndex=data.ix;var value=0;if(type!==0){value=createTypedArray('float32',data.a===1?data.k[0].s.length:data.k.length);}prop._cachingAtTime={lastFrame:initialDefaultFrame,lastIndex:0,value:value};expressionHelpers.searchExpressions(elem,data,prop);if(prop.k){container.addDynamicProperty(prop);}return prop;};function getShapeValueAtTime(frameNum){// For now this caching object is created only when needed instead of creating it when the shape is initialized.
		if(!this._cachingAtTime){this._cachingAtTime={shapeValue:shapePool.clone(this.pv),lastIndex:0,lastTime:initialDefaultFrame};}frameNum*=this.elem.globalData.frameRate;frameNum-=this.offsetTime;if(frameNum!==this._cachingAtTime.lastTime){this._cachingAtTime.lastIndex=this._cachingAtTime.lastTime<frameNum?this._caching.lastIndex:0;this._cachingAtTime.lastTime=frameNum;this.interpolateShape(frameNum,this._cachingAtTime.shapeValue,this._cachingAtTime);}return this._cachingAtTime.shapeValue;}var ShapePropertyConstructorFunction=ShapePropertyFactory.getConstructorFunction();var KeyframedShapePropertyConstructorFunction=ShapePropertyFactory.getKeyframedConstructorFunction();function ShapeExpressions(){}ShapeExpressions.prototype={vertices:function vertices(prop,time){if(this.k){this.getValue();}var shapePath=this.v;if(time!==undefined){shapePath=this.getValueAtTime(time,0);}var i;var len=shapePath._length;var vertices=shapePath[prop];var points=shapePath.v;var arr=createSizedArray(len);for(i=0;i<len;i+=1){if(prop==='i'||prop==='o'){arr[i]=[vertices[i][0]-points[i][0],vertices[i][1]-points[i][1]];}else {arr[i]=[vertices[i][0],vertices[i][1]];}}return arr;},points:function points(time){return this.vertices('v',time);},inTangents:function inTangents(time){return this.vertices('i',time);},outTangents:function outTangents(time){return this.vertices('o',time);},isClosed:function isClosed(){return this.v.c;},pointOnPath:function pointOnPath(perc,time){var shapePath=this.v;if(time!==undefined){shapePath=this.getValueAtTime(time,0);}if(!this._segmentsLength){this._segmentsLength=bez.getSegmentsLength(shapePath);}var segmentsLength=this._segmentsLength;var lengths=segmentsLength.lengths;var lengthPos=segmentsLength.totalLength*perc;var i=0;var len=lengths.length;var accumulatedLength=0;var pt;while(i<len){if(accumulatedLength+lengths[i].addedLength>lengthPos){var initIndex=i;var endIndex=shapePath.c&&i===len-1?0:i+1;var segmentPerc=(lengthPos-accumulatedLength)/lengths[i].addedLength;pt=bez.getPointInSegment(shapePath.v[initIndex],shapePath.v[endIndex],shapePath.o[initIndex],shapePath.i[endIndex],segmentPerc,lengths[i]);break;}else {accumulatedLength+=lengths[i].addedLength;}i+=1;}if(!pt){pt=shapePath.c?[shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];}return pt;},vectorOnPath:function vectorOnPath(perc,time,vectorType){// perc doesn't use triple equality because it can be a Number object as well as a primitive.
		if(perc==1){// eslint-disable-line eqeqeq
		perc=this.v.c;}else if(perc==0){// eslint-disable-line eqeqeq
		perc=0.999;}var pt1=this.pointOnPath(perc,time);var pt2=this.pointOnPath(perc+0.001,time);var xLength=pt2[0]-pt1[0];var yLength=pt2[1]-pt1[1];var magnitude=Math.sqrt(Math.pow(xLength,2)+Math.pow(yLength,2));if(magnitude===0){return [0,0];}var unitVector=vectorType==='tangent'?[xLength/magnitude,yLength/magnitude]:[-yLength/magnitude,xLength/magnitude];return unitVector;},tangentOnPath:function tangentOnPath(perc,time){return this.vectorOnPath(perc,time,'tangent');},normalOnPath:function normalOnPath(perc,time){return this.vectorOnPath(perc,time,'normal');},setGroupProperty:expressionHelpers.setGroupProperty,getValueAtTime:expressionHelpers.getStaticValueAtTime};extendPrototype([ShapeExpressions],ShapePropertyConstructorFunction);extendPrototype([ShapeExpressions],KeyframedShapePropertyConstructorFunction);KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime=getShapeValueAtTime;KeyframedShapePropertyConstructorFunction.prototype.initiateExpression=ExpressionManager.initiateExpression;var propertyGetShapeProp=ShapePropertyFactory.getShapeProp;ShapePropertyFactory.getShapeProp=function(elem,data,type,arr,trims){var prop=propertyGetShapeProp(elem,data,type,arr,trims);prop.propertyIndex=data.ix;prop.lock=false;if(type===3){expressionHelpers.searchExpressions(elem,data.pt,prop);}else if(type===4){expressionHelpers.searchExpressions(elem,data.ks,prop);}if(prop.k){elem.addDynamicProperty(prop);}return prop;};}function initialize$1(){addPropertyDecorator();}function addDecorator(){function searchExpressions(){if(this.data.d.x){this.calculateExpression=ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);this.addEffect(this.getExpressionValue.bind(this));return true;}return null;}TextProperty.prototype.getExpressionValue=function(currentValue,text){var newValue=this.calculateExpression(text);if(currentValue.t!==newValue){var newData={};this.copyData(newData,currentValue);newData.t=newValue.toString();newData.__complete=false;return newData;}return currentValue;};TextProperty.prototype.searchProperty=function(){var isKeyframed=this.searchKeyframes();var hasExpressions=this.searchExpressions();this.kf=isKeyframed||hasExpressions;return this.kf;};TextProperty.prototype.searchExpressions=searchExpressions;}function initialize(){addDecorator();}function SVGComposableEffect(){}SVGComposableEffect.prototype={createMergeNode:function createMergeNode(resultId,ins){var feMerge=createNS('feMerge');feMerge.setAttribute('result',resultId);var feMergeNode;var i;for(i=0;i<ins.length;i+=1){feMergeNode=createNS('feMergeNode');feMergeNode.setAttribute('in',ins[i]);feMerge.appendChild(feMergeNode);feMerge.appendChild(feMergeNode);}return feMerge;}};var linearFilterValue='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0';function SVGTintFilter(filter,filterManager,elem,id,source){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');feColorMatrix.setAttribute('values',linearFilterValue+' 1 0');this.linearFilter=feColorMatrix;feColorMatrix.setAttribute('result',id+'_tint_1');filter.appendChild(feColorMatrix);feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result',id+'_tint_2');filter.appendChild(feColorMatrix);this.matrixFilter=feColorMatrix;var feMerge=this.createMergeNode(id,[source,id+'_tint_1',id+'_tint_2']);filter.appendChild(feMerge);}extendPrototype([SVGComposableEffect],SVGTintFilter);SVGTintFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var colorBlack=this.filterManager.effectElements[0].p.v;var colorWhite=this.filterManager.effectElements[1].p.v;var opacity=this.filterManager.effectElements[2].p.v/100;this.linearFilter.setAttribute('values',linearFilterValue+' '+opacity+' 0');this.matrixFilter.setAttribute('values',colorWhite[0]-colorBlack[0]+' 0 0 0 '+colorBlack[0]+' '+(colorWhite[1]-colorBlack[1])+' 0 0 0 '+colorBlack[1]+' '+(colorWhite[2]-colorBlack[2])+' 0 0 0 '+colorBlack[2]+' 0 0 0 1 0');}};function SVGFillFilter(filter,filterManager,elem,id){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','sRGB');feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');feColorMatrix.setAttribute('result',id);filter.appendChild(feColorMatrix);this.matrixFilter=feColorMatrix;}SVGFillFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var color=this.filterManager.effectElements[2].p.v;var opacity=this.filterManager.effectElements[6].p.v;this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');}};function SVGStrokeEffect(fil,filterManager,elem){this.initialized=false;this.filterManager=filterManager;this.elem=elem;this.paths=[];}SVGStrokeEffect.prototype.initialize=function(){var elemChildren=this.elem.layerElement.children||this.elem.layerElement.childNodes;var path;var groupPath;var i;var len;if(this.filterManager.effectElements[1].p.v===1){len=this.elem.maskManager.masksProperties.length;i=0;}else {i=this.filterManager.effectElements[0].p.v-1;len=i+1;}groupPath=createNS('g');groupPath.setAttribute('fill','none');groupPath.setAttribute('stroke-linecap','round');groupPath.setAttribute('stroke-dashoffset',1);for(i;i<len;i+=1){path=createNS('path');groupPath.appendChild(path);this.paths.push({p:path,m:i});}if(this.filterManager.effectElements[10].p.v===3){var mask=createNS('mask');var id=createElementID();mask.setAttribute('id',id);mask.setAttribute('mask-type','alpha');mask.appendChild(groupPath);this.elem.globalData.defs.appendChild(mask);var g=createNS('g');g.setAttribute('mask','url('+getLocationHref()+'#'+id+')');while(elemChildren[0]){g.appendChild(elemChildren[0]);}this.elem.layerElement.appendChild(g);this.masker=mask;groupPath.setAttribute('stroke','#fff');}else if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(this.filterManager.effectElements[10].p.v===2){elemChildren=this.elem.layerElement.children||this.elem.layerElement.childNodes;while(elemChildren.length){this.elem.layerElement.removeChild(elemChildren[0]);}}this.elem.layerElement.appendChild(groupPath);this.elem.layerElement.removeAttribute('mask');groupPath.setAttribute('stroke','#fff');}this.initialized=true;this.pathMasker=groupPath;};SVGStrokeEffect.prototype.renderFrame=function(forceRender){if(!this.initialized){this.initialize();}var i;var len=this.paths.length;var mask;var path;for(i=0;i<len;i+=1){if(this.paths[i].m!==-1){mask=this.elem.maskManager.viewData[this.paths[i].m];path=this.paths[i].p;if(forceRender||this.filterManager._mdf||mask.prop._mdf){path.setAttribute('d',mask.lastPath);}if(forceRender||this.filterManager.effectElements[9].p._mdf||this.filterManager.effectElements[4].p._mdf||this.filterManager.effectElements[7].p._mdf||this.filterManager.effectElements[8].p._mdf||mask.prop._mdf){var dasharrayValue;if(this.filterManager.effectElements[7].p.v!==0||this.filterManager.effectElements[8].p.v!==100){var s=Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)*0.01;var e=Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)*0.01;var l=path.getTotalLength();dasharrayValue='0 0 0 '+l*s+' ';var lineLength=l*(e-s);var segment=1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*0.01;var units=Math.floor(lineLength/segment);var j;for(j=0;j<units;j+=1){dasharrayValue+='1 '+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*0.01+' ';}dasharrayValue+='0 '+l*10+' 0 0';}else {dasharrayValue='1 '+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*0.01;}path.setAttribute('stroke-dasharray',dasharrayValue);}}}if(forceRender||this.filterManager.effectElements[4].p._mdf){this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);}if(forceRender||this.filterManager.effectElements[6].p._mdf){this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);}if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(forceRender||this.filterManager.effectElements[3].p._mdf){var color=this.filterManager.effectElements[3].p.v;this.pathMasker.setAttribute('stroke','rgb('+bmFloor(color[0]*255)+','+bmFloor(color[1]*255)+','+bmFloor(color[2]*255)+')');}}};function SVGTritoneFilter(filter,filterManager,elem,id){this.filterManager=filterManager;var feColorMatrix=createNS('feColorMatrix');feColorMatrix.setAttribute('type','matrix');feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');filter.appendChild(feColorMatrix);var feComponentTransfer=createNS('feComponentTransfer');feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');feComponentTransfer.setAttribute('result',id);this.matrixFilter=feComponentTransfer;var feFuncR=createNS('feFuncR');feFuncR.setAttribute('type','table');feComponentTransfer.appendChild(feFuncR);this.feFuncR=feFuncR;var feFuncG=createNS('feFuncG');feFuncG.setAttribute('type','table');feComponentTransfer.appendChild(feFuncG);this.feFuncG=feFuncG;var feFuncB=createNS('feFuncB');feFuncB.setAttribute('type','table');feComponentTransfer.appendChild(feFuncB);this.feFuncB=feFuncB;filter.appendChild(feComponentTransfer);}SVGTritoneFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var color1=this.filterManager.effectElements[0].p.v;var color2=this.filterManager.effectElements[1].p.v;var color3=this.filterManager.effectElements[2].p.v;var tableR=color3[0]+' '+color2[0]+' '+color1[0];var tableG=color3[1]+' '+color2[1]+' '+color1[1];var tableB=color3[2]+' '+color2[2]+' '+color1[2];this.feFuncR.setAttribute('tableValues',tableR);this.feFuncG.setAttribute('tableValues',tableG);this.feFuncB.setAttribute('tableValues',tableB);}};function SVGProLevelsFilter(filter,filterManager,elem,id){this.filterManager=filterManager;var effectElements=this.filterManager.effectElements;var feComponentTransfer=createNS('feComponentTransfer');// Red
		if(effectElements[10].p.k||effectElements[10].p.v!==0||effectElements[11].p.k||effectElements[11].p.v!==1||effectElements[12].p.k||effectElements[12].p.v!==1||effectElements[13].p.k||effectElements[13].p.v!==0||effectElements[14].p.k||effectElements[14].p.v!==1){this.feFuncR=this.createFeFunc('feFuncR',feComponentTransfer);}// Green
		if(effectElements[17].p.k||effectElements[17].p.v!==0||effectElements[18].p.k||effectElements[18].p.v!==1||effectElements[19].p.k||effectElements[19].p.v!==1||effectElements[20].p.k||effectElements[20].p.v!==0||effectElements[21].p.k||effectElements[21].p.v!==1){this.feFuncG=this.createFeFunc('feFuncG',feComponentTransfer);}// Blue
		if(effectElements[24].p.k||effectElements[24].p.v!==0||effectElements[25].p.k||effectElements[25].p.v!==1||effectElements[26].p.k||effectElements[26].p.v!==1||effectElements[27].p.k||effectElements[27].p.v!==0||effectElements[28].p.k||effectElements[28].p.v!==1){this.feFuncB=this.createFeFunc('feFuncB',feComponentTransfer);}// Alpha
		if(effectElements[31].p.k||effectElements[31].p.v!==0||effectElements[32].p.k||effectElements[32].p.v!==1||effectElements[33].p.k||effectElements[33].p.v!==1||effectElements[34].p.k||effectElements[34].p.v!==0||effectElements[35].p.k||effectElements[35].p.v!==1){this.feFuncA=this.createFeFunc('feFuncA',feComponentTransfer);}// RGB
		if(this.feFuncR||this.feFuncG||this.feFuncB||this.feFuncA){feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');filter.appendChild(feComponentTransfer);}if(effectElements[3].p.k||effectElements[3].p.v!==0||effectElements[4].p.k||effectElements[4].p.v!==1||effectElements[5].p.k||effectElements[5].p.v!==1||effectElements[6].p.k||effectElements[6].p.v!==0||effectElements[7].p.k||effectElements[7].p.v!==1){feComponentTransfer=createNS('feComponentTransfer');feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');feComponentTransfer.setAttribute('result',id);filter.appendChild(feComponentTransfer);this.feFuncRComposed=this.createFeFunc('feFuncR',feComponentTransfer);this.feFuncGComposed=this.createFeFunc('feFuncG',feComponentTransfer);this.feFuncBComposed=this.createFeFunc('feFuncB',feComponentTransfer);}}SVGProLevelsFilter.prototype.createFeFunc=function(type,feComponentTransfer){var feFunc=createNS(type);feFunc.setAttribute('type','table');feComponentTransfer.appendChild(feFunc);return feFunc;};SVGProLevelsFilter.prototype.getTableValue=function(inputBlack,inputWhite,gamma,outputBlack,outputWhite){var cnt=0;var segments=256;var perc;var min=Math.min(inputBlack,inputWhite);var max=Math.max(inputBlack,inputWhite);var table=Array.call(null,{length:segments});var colorValue;var pos=0;var outputDelta=outputWhite-outputBlack;var inputDelta=inputWhite-inputBlack;while(cnt<=256){perc=cnt/256;if(perc<=min){colorValue=inputDelta<0?outputWhite:outputBlack;}else if(perc>=max){colorValue=inputDelta<0?outputBlack:outputWhite;}else {colorValue=outputBlack+outputDelta*Math.pow((perc-inputBlack)/inputDelta,1/gamma);}table[pos]=colorValue;pos+=1;cnt+=256/(segments-1);}return table.join(' ');};SVGProLevelsFilter.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){var val;var effectElements=this.filterManager.effectElements;if(this.feFuncRComposed&&(forceRender||effectElements[3].p._mdf||effectElements[4].p._mdf||effectElements[5].p._mdf||effectElements[6].p._mdf||effectElements[7].p._mdf)){val=this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);this.feFuncRComposed.setAttribute('tableValues',val);this.feFuncGComposed.setAttribute('tableValues',val);this.feFuncBComposed.setAttribute('tableValues',val);}if(this.feFuncR&&(forceRender||effectElements[10].p._mdf||effectElements[11].p._mdf||effectElements[12].p._mdf||effectElements[13].p._mdf||effectElements[14].p._mdf)){val=this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);this.feFuncR.setAttribute('tableValues',val);}if(this.feFuncG&&(forceRender||effectElements[17].p._mdf||effectElements[18].p._mdf||effectElements[19].p._mdf||effectElements[20].p._mdf||effectElements[21].p._mdf)){val=this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);this.feFuncG.setAttribute('tableValues',val);}if(this.feFuncB&&(forceRender||effectElements[24].p._mdf||effectElements[25].p._mdf||effectElements[26].p._mdf||effectElements[27].p._mdf||effectElements[28].p._mdf)){val=this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);this.feFuncB.setAttribute('tableValues',val);}if(this.feFuncA&&(forceRender||effectElements[31].p._mdf||effectElements[32].p._mdf||effectElements[33].p._mdf||effectElements[34].p._mdf||effectElements[35].p._mdf)){val=this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);this.feFuncA.setAttribute('tableValues',val);}}};function SVGDropShadowEffect(filter,filterManager,elem,id,source){var globalFilterSize=filterManager.container.globalData.renderConfig.filterSize;var filterSize=filterManager.data.fs||globalFilterSize;filter.setAttribute('x',filterSize.x||globalFilterSize.x);filter.setAttribute('y',filterSize.y||globalFilterSize.y);filter.setAttribute('width',filterSize.width||globalFilterSize.width);filter.setAttribute('height',filterSize.height||globalFilterSize.height);this.filterManager=filterManager;var feGaussianBlur=createNS('feGaussianBlur');feGaussianBlur.setAttribute('in','SourceAlpha');feGaussianBlur.setAttribute('result',id+'_drop_shadow_1');feGaussianBlur.setAttribute('stdDeviation','0');this.feGaussianBlur=feGaussianBlur;filter.appendChild(feGaussianBlur);var feOffset=createNS('feOffset');feOffset.setAttribute('dx','25');feOffset.setAttribute('dy','0');feOffset.setAttribute('in',id+'_drop_shadow_1');feOffset.setAttribute('result',id+'_drop_shadow_2');this.feOffset=feOffset;filter.appendChild(feOffset);var feFlood=createNS('feFlood');feFlood.setAttribute('flood-color','#00ff00');feFlood.setAttribute('flood-opacity','1');feFlood.setAttribute('result',id+'_drop_shadow_3');this.feFlood=feFlood;filter.appendChild(feFlood);var feComposite=createNS('feComposite');feComposite.setAttribute('in',id+'_drop_shadow_3');feComposite.setAttribute('in2',id+'_drop_shadow_2');feComposite.setAttribute('operator','in');feComposite.setAttribute('result',id+'_drop_shadow_4');filter.appendChild(feComposite);var feMerge=this.createMergeNode(id,[id+'_drop_shadow_4',source]);filter.appendChild(feMerge);//
		}extendPrototype([SVGComposableEffect],SVGDropShadowEffect);SVGDropShadowEffect.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){if(forceRender||this.filterManager.effectElements[4].p._mdf){this.feGaussianBlur.setAttribute('stdDeviation',this.filterManager.effectElements[4].p.v/4);}if(forceRender||this.filterManager.effectElements[0].p._mdf){var col=this.filterManager.effectElements[0].p.v;this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));}if(forceRender||this.filterManager.effectElements[1].p._mdf){this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);}if(forceRender||this.filterManager.effectElements[2].p._mdf||this.filterManager.effectElements[3].p._mdf){var distance=this.filterManager.effectElements[3].p.v;var angle=(this.filterManager.effectElements[2].p.v-90)*degToRads;var x=distance*Math.cos(angle);var y=distance*Math.sin(angle);this.feOffset.setAttribute('dx',x);this.feOffset.setAttribute('dy',y);}}};var _svgMatteSymbols=[];function SVGMatte3Effect(filterElem,filterManager,elem){this.initialized=false;this.filterManager=filterManager;this.filterElem=filterElem;this.elem=elem;elem.matteElement=createNS('g');elem.matteElement.appendChild(elem.layerElement);elem.matteElement.appendChild(elem.transformedElement);elem.baseElement=elem.matteElement;}SVGMatte3Effect.prototype.findSymbol=function(mask){var i=0;var len=_svgMatteSymbols.length;while(i<len){if(_svgMatteSymbols[i]===mask){return _svgMatteSymbols[i];}i+=1;}return null;};SVGMatte3Effect.prototype.replaceInParent=function(mask,symbolId){var parentNode=mask.layerElement.parentNode;if(!parentNode){return;}var children=parentNode.children;var i=0;var len=children.length;while(i<len){if(children[i]===mask.layerElement){break;}i+=1;}var nextChild;if(i<=len-2){nextChild=children[i+1];}var useElem=createNS('use');useElem.setAttribute('href','#'+symbolId);if(nextChild){parentNode.insertBefore(useElem,nextChild);}else {parentNode.appendChild(useElem);}};SVGMatte3Effect.prototype.setElementAsMask=function(elem,mask){if(!this.findSymbol(mask)){var symbolId=createElementID();var masker=createNS('mask');masker.setAttribute('id',mask.layerId);masker.setAttribute('mask-type','alpha');_svgMatteSymbols.push(mask);var defs=elem.globalData.defs;defs.appendChild(masker);var symbol=createNS('symbol');symbol.setAttribute('id',symbolId);this.replaceInParent(mask,symbolId);symbol.appendChild(mask.layerElement);defs.appendChild(symbol);var useElem=createNS('use');useElem.setAttribute('href','#'+symbolId);masker.appendChild(useElem);mask.data.hd=false;mask.show();}elem.setMatte(mask.layerId);};SVGMatte3Effect.prototype.initialize=function(){var ind=this.filterManager.effectElements[0].p.v;var elements=this.elem.comp.elements;var i=0;var len=elements.length;while(i<len){if(elements[i]&&elements[i].data.ind===ind){this.setElementAsMask(this.elem,elements[i]);}i+=1;}this.initialized=true;};SVGMatte3Effect.prototype.renderFrame=function(){if(!this.initialized){this.initialize();}};function SVGGaussianBlurEffect(filter,filterManager,elem,id){// Outset the filter region by 100% on all sides to accommodate blur expansion.
		filter.setAttribute('x','-100%');filter.setAttribute('y','-100%');filter.setAttribute('width','300%');filter.setAttribute('height','300%');this.filterManager=filterManager;var feGaussianBlur=createNS('feGaussianBlur');feGaussianBlur.setAttribute('result',id);filter.appendChild(feGaussianBlur);this.feGaussianBlur=feGaussianBlur;}SVGGaussianBlurEffect.prototype.renderFrame=function(forceRender){if(forceRender||this.filterManager._mdf){// Empirical value, matching AE's blur appearance.
		var kBlurrinessToSigma=0.3;var sigma=this.filterManager.effectElements[0].p.v*kBlurrinessToSigma;// Dimensions mapping:
		//
		//   1 -> horizontal & vertical
		//   2 -> horizontal only
		//   3 -> vertical only
		//
		var dimensions=this.filterManager.effectElements[1].p.v;var sigmaX=dimensions==3?0:sigma;// eslint-disable-line eqeqeq
		var sigmaY=dimensions==2?0:sigma;// eslint-disable-line eqeqeq
		this.feGaussianBlur.setAttribute('stdDeviation',sigmaX+' '+sigmaY);// Repeat edges mapping:
		//
		//   0 -> off -> duplicate
		//   1 -> on  -> wrap
		var edgeMode=this.filterManager.effectElements[2].p.v==1?'wrap':'duplicate';// eslint-disable-line eqeqeq
		this.feGaussianBlur.setAttribute('edgeMode',edgeMode);}};function TransformEffect(){}TransformEffect.prototype.init=function(effectsManager){this.effectsManager=effectsManager;this.type=effectTypes.TRANSFORM_EFFECT;this.matrix=new Matrix();this.opacity=-1;this._mdf=false;this._opMdf=false;};TransformEffect.prototype.renderFrame=function(forceFrame){this._opMdf=false;this._mdf=false;if(forceFrame||this.effectsManager._mdf){var effectElements=this.effectsManager.effectElements;var anchor=effectElements[0].p.v;var position=effectElements[1].p.v;var isUniformScale=effectElements[2].p.v===1;var scaleHeight=effectElements[3].p.v;var scaleWidth=isUniformScale?scaleHeight:effectElements[4].p.v;var skew=effectElements[5].p.v;var skewAxis=effectElements[6].p.v;var rotation=effectElements[7].p.v;this.matrix.reset();this.matrix.translate(-anchor[0],-anchor[1],anchor[2]);this.matrix.scale(scaleWidth*0.01,scaleHeight*0.01,1);this.matrix.rotate(-rotation*degToRads);this.matrix.skewFromAxis(-skew*degToRads,(skewAxis+90)*degToRads);this.matrix.translate(position[0],position[1],0);this._mdf=true;if(this.opacity!==effectElements[8].p.v){this.opacity=effectElements[8].p.v;this._opMdf=true;}}};function SVGTransformEffect(_,filterManager){this.init(filterManager);}extendPrototype([TransformEffect],SVGTransformEffect);function CVTransformEffect(effectsManager){this.init(effectsManager);}extendPrototype([TransformEffect],CVTransformEffect);registerRenderer('canvas',CanvasRenderer);registerRenderer('html',HybridRenderer);registerRenderer('svg',SVGRenderer);// Registering shape modifiers
		ShapeModifiers.registerModifier('tm',TrimModifier);ShapeModifiers.registerModifier('pb',PuckerAndBloatModifier);ShapeModifiers.registerModifier('rp',RepeaterModifier);ShapeModifiers.registerModifier('rd',RoundCornersModifier);ShapeModifiers.registerModifier('zz',ZigZagModifier);ShapeModifiers.registerModifier('op',OffsetPathModifier);// Registering expression plugin
		setExpressionsPlugin(Expressions);setExpressionInterfaces(getInterface);initialize$1();initialize();// Registering svg effects
		registerEffect$1(20,SVGTintFilter,true);registerEffect$1(21,SVGFillFilter,true);registerEffect$1(22,SVGStrokeEffect,false);registerEffect$1(23,SVGTritoneFilter,true);registerEffect$1(24,SVGProLevelsFilter,true);registerEffect$1(25,SVGDropShadowEffect,true);registerEffect$1(28,SVGMatte3Effect,false);registerEffect$1(29,SVGGaussianBlurEffect,true);registerEffect$1(35,SVGTransformEffect,false);registerEffect(35,CVTransformEffect);return lottie;}); 
	} (lottie$1, lottie$1.exports));

	var lottieExports = lottie$1.exports;
	var lottie = /*@__PURE__*/getDefaultExportFromCjs(lottieExports);

	var react = function equal(a, b) {
	  if (a === b) return true;
	  if (a && b && typeof a == 'object' && typeof b == 'object') {
	    if (a.constructor !== b.constructor) return false;
	    var length, i, keys;
	    if (Array.isArray(a)) {
	      length = a.length;
	      if (length != b.length) return false;
	      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;
	      return true;
	    }
	    if (a instanceof Map && b instanceof Map) {
	      if (a.size !== b.size) return false;
	      for (i of a.entries()) if (!b.has(i[0])) return false;
	      for (i of a.entries()) if (!equal(i[1], b.get(i[0]))) return false;
	      return true;
	    }
	    if (a instanceof Set && b instanceof Set) {
	      if (a.size !== b.size) return false;
	      for (i of a.entries()) if (!b.has(i[0])) return false;
	      return true;
	    }
	    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
	      length = a.length;
	      if (length != b.length) return false;
	      for (i = length; i-- !== 0;) if (a[i] !== b[i]) return false;
	      return true;
	    }
	    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
	    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
	    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
	    keys = Object.keys(a);
	    length = keys.length;
	    if (length !== Object.keys(b).length) return false;
	    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
	    for (i = length; i-- !== 0;) {
	      var key = keys[i];
	      if (key === '_owner' && a.$$typeof) {
	        // React-specific: avoid traversing React elements' _owner.
	        //  _owner contains circular references
	        // and is not needed when comparing the actual elements (and not their owners)
	        continue;
	      }
	      if (!equal(a[key], b[key])) return false;
	    }
	    return true;
	  }

	  // true if both NaN, false otherwise
	  return a !== a && b !== b;
	};

	var equal = /*@__PURE__*/getDefaultExportFromCjs(react);

	var rfdc_1 = rfdc;
	function copyBuffer(cur) {
	  if (cur instanceof Buffer) {
	    return Buffer.from(cur);
	  }
	  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length);
	}
	function rfdc(opts) {
	  opts = opts || {};
	  if (opts.circles) return rfdcCircles(opts);
	  return opts.proto ? cloneProto : clone;
	  function cloneArray(a, fn) {
	    var keys = Object.keys(a);
	    var a2 = new Array(keys.length);
	    for (var i = 0; i < keys.length; i++) {
	      var k = keys[i];
	      var cur = a[k];
	      if (typeof cur !== 'object' || cur === null) {
	        a2[k] = cur;
	      } else if (cur instanceof Date) {
	        a2[k] = new Date(cur);
	      } else if (ArrayBuffer.isView(cur)) {
	        a2[k] = copyBuffer(cur);
	      } else {
	        a2[k] = fn(cur);
	      }
	    }
	    return a2;
	  }
	  function clone(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, clone);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone));
	    var o2 = {};
	    for (var k in o) {
	      if (Object.hasOwnProperty.call(o, k) === false) continue;
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), clone));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), clone));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        o2[k] = clone(cur);
	      }
	    }
	    return o2;
	  }
	  function cloneProto(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, cloneProto);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto));
	    var o2 = {};
	    for (var k in o) {
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        o2[k] = cloneProto(cur);
	      }
	    }
	    return o2;
	  }
	}
	function rfdcCircles(opts) {
	  var refs = [];
	  var refsNew = [];
	  return opts.proto ? cloneProto : clone;
	  function cloneArray(a, fn) {
	    var keys = Object.keys(a);
	    var a2 = new Array(keys.length);
	    for (var i = 0; i < keys.length; i++) {
	      var k = keys[i];
	      var cur = a[k];
	      if (typeof cur !== 'object' || cur === null) {
	        a2[k] = cur;
	      } else if (cur instanceof Date) {
	        a2[k] = new Date(cur);
	      } else if (ArrayBuffer.isView(cur)) {
	        a2[k] = copyBuffer(cur);
	      } else {
	        var index = refs.indexOf(cur);
	        if (index !== -1) {
	          a2[k] = refsNew[index];
	        } else {
	          a2[k] = fn(cur);
	        }
	      }
	    }
	    return a2;
	  }
	  function clone(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, clone);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone));
	    var o2 = {};
	    refs.push(o);
	    refsNew.push(o2);
	    for (var k in o) {
	      if (Object.hasOwnProperty.call(o, k) === false) continue;
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), clone));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), clone));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        var i = refs.indexOf(cur);
	        if (i !== -1) {
	          o2[k] = refsNew[i];
	        } else {
	          o2[k] = clone(cur);
	        }
	      }
	    }
	    refs.pop();
	    refsNew.pop();
	    return o2;
	  }
	  function cloneProto(o) {
	    if (typeof o !== 'object' || o === null) return o;
	    if (o instanceof Date) return new Date(o);
	    if (Array.isArray(o)) return cloneArray(o, cloneProto);
	    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto));
	    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto));
	    var o2 = {};
	    refs.push(o);
	    refsNew.push(o2);
	    for (var k in o) {
	      var cur = o[k];
	      if (typeof cur !== 'object' || cur === null) {
	        o2[k] = cur;
	      } else if (cur instanceof Date) {
	        o2[k] = new Date(cur);
	      } else if (cur instanceof Map) {
	        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));
	      } else if (cur instanceof Set) {
	        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));
	      } else if (ArrayBuffer.isView(cur)) {
	        o2[k] = copyBuffer(cur);
	      } else {
	        var i = refs.indexOf(cur);
	        if (i !== -1) {
	          o2[k] = refsNew[i];
	        } else {
	          o2[k] = cloneProto(cur);
	        }
	      }
	    }
	    refs.pop();
	    refsNew.pop();
	    return o2;
	  }
	}

	var _default = rfdc_1();

	var clone = /*@__PURE__*/getDefaultExportFromCjs(_default);

	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	    return target;
	  };
	  return _extends.apply(this, arguments);
	}
	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	  return target;
	}
	function createCommonjsModule(fn, module) {
	  return module = {
	    exports: {}
	  }, fn(module, module.exports), module.exports;
	}
	var reactIs_development = createCommonjsModule(function (module, exports) {
	  {
	    (function () {
	      // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	      // nor polyfill, then a plain number is used for performance.
	      var hasSymbol = typeof Symbol === 'function' && Symbol.for;
	      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
	      // (unstable) APIs that have been removed. Can we remove the symbols?

	      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
	      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
	      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
	      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
	      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
	      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
	      function isValidElementType(type) {
	        return typeof type === 'string' || typeof type === 'function' ||
	        // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
	      }
	      function typeOf(object) {
	        if (typeof object === 'object' && object !== null) {
	          var $$typeof = object.$$typeof;
	          switch ($$typeof) {
	            case REACT_ELEMENT_TYPE:
	              var type = object.type;
	              switch (type) {
	                case REACT_ASYNC_MODE_TYPE:
	                case REACT_CONCURRENT_MODE_TYPE:
	                case REACT_FRAGMENT_TYPE:
	                case REACT_PROFILER_TYPE:
	                case REACT_STRICT_MODE_TYPE:
	                case REACT_SUSPENSE_TYPE:
	                  return type;
	                default:
	                  var $$typeofType = type && type.$$typeof;
	                  switch ($$typeofType) {
	                    case REACT_CONTEXT_TYPE:
	                    case REACT_FORWARD_REF_TYPE:
	                    case REACT_LAZY_TYPE:
	                    case REACT_MEMO_TYPE:
	                    case REACT_PROVIDER_TYPE:
	                      return $$typeofType;
	                    default:
	                      return $$typeof;
	                  }
	              }
	            case REACT_PORTAL_TYPE:
	              return $$typeof;
	          }
	        }
	        return undefined;
	      } // AsyncMode is deprecated along with isAsyncMode

	      var AsyncMode = REACT_ASYNC_MODE_TYPE;
	      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	      var ContextConsumer = REACT_CONTEXT_TYPE;
	      var ContextProvider = REACT_PROVIDER_TYPE;
	      var Element = REACT_ELEMENT_TYPE;
	      var ForwardRef = REACT_FORWARD_REF_TYPE;
	      var Fragment = REACT_FRAGMENT_TYPE;
	      var Lazy = REACT_LAZY_TYPE;
	      var Memo = REACT_MEMO_TYPE;
	      var Portal = REACT_PORTAL_TYPE;
	      var Profiler = REACT_PROFILER_TYPE;
	      var StrictMode = REACT_STRICT_MODE_TYPE;
	      var Suspense = REACT_SUSPENSE_TYPE;
	      var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

	      function isAsyncMode(object) {
	        {
	          if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
	          }
	        }
	        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
	      }
	      function isConcurrentMode(object) {
	        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
	      }
	      function isContextConsumer(object) {
	        return typeOf(object) === REACT_CONTEXT_TYPE;
	      }
	      function isContextProvider(object) {
	        return typeOf(object) === REACT_PROVIDER_TYPE;
	      }
	      function isElement(object) {
	        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	      }
	      function isForwardRef(object) {
	        return typeOf(object) === REACT_FORWARD_REF_TYPE;
	      }
	      function isFragment(object) {
	        return typeOf(object) === REACT_FRAGMENT_TYPE;
	      }
	      function isLazy(object) {
	        return typeOf(object) === REACT_LAZY_TYPE;
	      }
	      function isMemo(object) {
	        return typeOf(object) === REACT_MEMO_TYPE;
	      }
	      function isPortal(object) {
	        return typeOf(object) === REACT_PORTAL_TYPE;
	      }
	      function isProfiler(object) {
	        return typeOf(object) === REACT_PROFILER_TYPE;
	      }
	      function isStrictMode(object) {
	        return typeOf(object) === REACT_STRICT_MODE_TYPE;
	      }
	      function isSuspense(object) {
	        return typeOf(object) === REACT_SUSPENSE_TYPE;
	      }
	      exports.AsyncMode = AsyncMode;
	      exports.ConcurrentMode = ConcurrentMode;
	      exports.ContextConsumer = ContextConsumer;
	      exports.ContextProvider = ContextProvider;
	      exports.Element = Element;
	      exports.ForwardRef = ForwardRef;
	      exports.Fragment = Fragment;
	      exports.Lazy = Lazy;
	      exports.Memo = Memo;
	      exports.Portal = Portal;
	      exports.Profiler = Profiler;
	      exports.StrictMode = StrictMode;
	      exports.Suspense = Suspense;
	      exports.isAsyncMode = isAsyncMode;
	      exports.isConcurrentMode = isConcurrentMode;
	      exports.isContextConsumer = isContextConsumer;
	      exports.isContextProvider = isContextProvider;
	      exports.isElement = isElement;
	      exports.isForwardRef = isForwardRef;
	      exports.isFragment = isFragment;
	      exports.isLazy = isLazy;
	      exports.isMemo = isMemo;
	      exports.isPortal = isPortal;
	      exports.isProfiler = isProfiler;
	      exports.isStrictMode = isStrictMode;
	      exports.isSuspense = isSuspense;
	      exports.isValidElementType = isValidElementType;
	      exports.typeOf = typeOf;
	    })();
	  }
	});
	var reactIs = createCommonjsModule(function (module) {
	  {
	    module.exports = reactIs_development;
	  }
	});

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	function toObject(val) {
	  if (val === null || val === undefined) {
	    throw new TypeError('Object.assign cannot be called with null or undefined');
	  }
	  return Object(val);
	}
	function shouldUseNative() {
	  try {
	    if (!Object.assign) {
	      return false;
	    }

	    // Detect buggy property enumeration order in older V8 versions.

	    // https://bugs.chromium.org/p/v8/issues/detail?id=4118
	    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
	    test1[5] = 'de';
	    if (Object.getOwnPropertyNames(test1)[0] === '5') {
	      return false;
	    }

	    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
	    var test2 = {};
	    for (var i = 0; i < 10; i++) {
	      test2['_' + String.fromCharCode(i)] = i;
	    }
	    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
	      return test2[n];
	    });
	    if (order2.join('') !== '0123456789') {
	      return false;
	    }

	    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
	    var test3 = {};
	    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
	      test3[letter] = letter;
	    });
	    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
	      return false;
	    }
	    return true;
	  } catch (err) {
	    // We don't expect any of the above to throw, but better to be safe.
	    return false;
	  }
	}
	var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	  var from;
	  var to = toObject(target);
	  var symbols;
	  for (var s = 1; s < arguments.length; s++) {
	    from = Object(arguments[s]);
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	    if (getOwnPropertySymbols) {
	      symbols = getOwnPropertySymbols(from);
	      for (var i = 0; i < symbols.length; i++) {
	        if (propIsEnumerable.call(from, symbols[i])) {
	          to[symbols[i]] = from[symbols[i]];
	        }
	      }
	    }
	  }
	  return to;
	};

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	var ReactPropTypesSecret_1 = ReactPropTypesSecret;
	var has = Function.call.bind(Object.prototype.hasOwnProperty);
	var printWarning = function () {};
	{
	  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
	  var loggedTypeFailures = {};
	  var has$1 = has;
	  printWarning = function (text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {/**/}
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  {
	    for (var typeSpecName in typeSpecs) {
	      if (has$1(typeSpecs, typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;
	          var stack = getStack ? getStack() : '';
	          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
	        }
	      }
	    }
	  }
	}

	/**
	 * Resets warning cache when testing.
	 *
	 * @private
	 */
	checkPropTypes.resetWarningCache = function () {
	  {
	    loggedTypeFailures = {};
	  }
	};
	var checkPropTypes_1 = checkPropTypes;
	var printWarning$1 = function () {};
	{
	  printWarning$1 = function (text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}
	function emptyFunctionThatReturnsNull() {
	  return null;
	}
	var factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bigint: createPrimitiveTypeChecker('bigint'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),
	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    elementType: createElementTypeTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message, data) {
	    this.message = message;
	    this.data = data && typeof data === 'object' ? data : {};
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;
	  function createChainableTypeChecker(validate) {
	    {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;
	      if (secret !== ReactPropTypesSecret_1) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (!manualPropTypeCallCache[cacheKey] &&
	          // Avoid spamming the console because they are often not actionable except for lib authors
	          manualPropTypeWarningCount < 3) {
	            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }
	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);
	    return chainedCheckType;
	  }
	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
	          expectedType: expectedType
	        });
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }
	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createElementTypeTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!reactIs.isValidElementType(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      {
	        if (arguments.length > 1) {
	          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
	        } else {
	          printWarning$1('Invalid argument supplied to oneOf, expected an array.');
	        }
	      }
	      return emptyFunctionThatReturnsNull;
	    }
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }
	      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
	        var type = getPreciseType(value);
	        if (type === 'symbol') {
	          return String(value);
	        }
	        return value;
	      });
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (has(propValue, key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') ;
	      return emptyFunctionThatReturnsNull;
	    }
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
	        return emptyFunctionThatReturnsNull;
	      }
	    }
	    function validate(props, propName, componentName, location, propFullName) {
	      var expectedTypes = [];
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1);
	        if (checkerResult == null) {
	          return null;
	        }
	        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
	          expectedTypes.push(checkerResult.data.expectedType);
	        }
	      }
	      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function invalidValidatorError(componentName, location, propFullName, key, type) {
	    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
	  }
	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from props.
	      var allKeys = objectAssign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (has(shapeTypes, key) && typeof checker !== 'function') {
	          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
	        }
	        if (!checker) {
	          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }
	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }
	        return true;
	      default:
	        return false;
	    }
	  }
	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // falsy value can't be a Symbol
	    if (!propValue) {
	      return false;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }
	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }
	  ReactPropTypes.checkPropTypes = checkPropTypes_1;
	  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	  return ReactPropTypes;
	};
	var propTypes = createCommonjsModule(function (module) {
	  /**
	   * Copyright (c) 2013-present, Facebook, Inc.
	   *
	   * This source code is licensed under the MIT license found in the
	   * LICENSE file in the root directory of this source tree.
	   */

	  {
	    var ReactIs = reactIs;

	    // By explicitly using `prop-types` you are opting into new development behavior.
	    // http://fb.me/prop-types-in-prod
	    var throwOnDirectAccess = true;
	    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
	  }
	});
	var propTypes$1 = {
	  animationData: propTypes.object,
	  path: propTypes.string,
	  play: propTypes.bool,
	  goTo: propTypes.number,
	  speed: propTypes.number,
	  direction: propTypes.number,
	  loop: propTypes.oneOfType([propTypes.number, propTypes.bool]),
	  useSubframes: propTypes.bool,
	  segments: propTypes.oneOfType([propTypes.arrayOf(propTypes.number), propTypes.bool]),
	  rendererSettings: propTypes.object,
	  renderer: propTypes.string,
	  audioFactory: propTypes.func,
	  onComplete: propTypes.func,
	  onLoopComplete: propTypes.func,
	  onEnterFrame: propTypes.func,
	  onSegmentStart: propTypes.func
	};
	var emptyObject = {};
	var noOp = function noOp() {};
	var makeLottiePlayer = function makeLottiePlayer(_ref) {
	  var loadAnimation = _ref.loadAnimation;
	  var Lottie = /*#__PURE__*/reactExports.memo( /*#__PURE__*/reactExports.forwardRef(function (params, forwardedRef) {
	    var _params$animationData = params.animationData,
	      animationData = _params$animationData === void 0 ? null : _params$animationData,
	      _params$path = params.path,
	      path = _params$path === void 0 ? null : _params$path,
	      _params$play = params.play,
	      play = _params$play === void 0 ? null : _params$play,
	      _params$speed = params.speed,
	      speed = _params$speed === void 0 ? 1 : _params$speed,
	      _params$direction = params.direction,
	      direction = _params$direction === void 0 ? 1 : _params$direction,
	      _params$segments = params.segments,
	      segmentsIn = _params$segments === void 0 ? null : _params$segments,
	      _params$goTo = params.goTo,
	      goTo = _params$goTo === void 0 ? null : _params$goTo,
	      _params$useSubframes = params.useSubframes,
	      useSubframes = _params$useSubframes === void 0 ? true : _params$useSubframes,
	      _params$renderer = params.renderer,
	      renderer = _params$renderer === void 0 ? 'svg' : _params$renderer,
	      _params$loop = params.loop,
	      loop = _params$loop === void 0 ? true : _params$loop,
	      _params$rendererSetti = params.rendererSettings,
	      rendererSettingsIn = _params$rendererSetti === void 0 ? emptyObject : _params$rendererSetti,
	      _params$audioFactory = params.audioFactory,
	      audioFactory = _params$audioFactory === void 0 ? null : _params$audioFactory,
	      _params$onLoad = params.onLoad,
	      onLoad = _params$onLoad === void 0 ? noOp : _params$onLoad,
	      _params$onComplete = params.onComplete,
	      onComplete = _params$onComplete === void 0 ? noOp : _params$onComplete,
	      _params$onLoopComplet = params.onLoopComplete,
	      onLoopComplete = _params$onLoopComplet === void 0 ? noOp : _params$onLoopComplet,
	      _params$onEnterFrame = params.onEnterFrame,
	      onEnterFrame = _params$onEnterFrame === void 0 ? noOp : _params$onEnterFrame,
	      _params$onSegmentStar = params.onSegmentStart,
	      onSegmentStart = _params$onSegmentStar === void 0 ? noOp : _params$onSegmentStar,
	      props = _objectWithoutPropertiesLoose(params, ["animationData", "path", "play", "speed", "direction", "segments", "goTo", "useSubframes", "renderer", "loop", "rendererSettings", "audioFactory", "onLoad", "onComplete", "onLoopComplete", "onEnterFrame", "onSegmentStart"]);
	    var animElementRef = reactExports.useRef();
	    var animRef = reactExports.useRef();
	    var _useState = reactExports.useState(false),
	      ready = _useState[0],
	      setReady = _useState[1];
	    var _useState2 = reactExports.useState(segmentsIn),
	      segments = _useState2[0],
	      setSegments = _useState2[1];
	    reactExports.useEffect(function () {
	      if (!equal(segments, segmentsIn)) setSegments(segmentsIn);
	    }, [segmentsIn, segments]);
	    var _useState3 = reactExports.useState(rendererSettingsIn),
	      rendererSettings = _useState3[0],
	      setRendererSettings = _useState3[1];
	    reactExports.useEffect(function () {
	      if (!equal(rendererSettings, rendererSettingsIn)) setRendererSettings(rendererSettingsIn);
	    }, [rendererSettingsIn, rendererSettings]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('complete', onComplete);
	      };
	    }, [onComplete]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('loopComplete', onLoopComplete);
	      };
	    }, [onLoopComplete]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('enterFrame', onEnterFrame);
	      };
	    }, [onEnterFrame]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('segmentStart', onSegmentStart);
	      };
	    }, [onSegmentStart]);
	    reactExports.useEffect(function () {
	      return function () {
	        return animRef.current.removeEventListener('DOMLoaded', onLoad);
	      };
	    }, [onLoad]);
	    var setLottieRefs = reactExports.useCallback(function (newRef) {
	      animRef.current = newRef;
	      if (typeof forwardedRef === 'function') {
	        forwardedRef(newRef);
	      } else if (forwardedRef !== undefined && forwardedRef !== null) {
	        forwardedRef.current = newRef;
	      }
	    }, [forwardedRef]);
	    reactExports.useEffect(function () {
	      function parseAnimationData() {
	        if (animationData == null || typeof animationData !== 'object') return animationData;
	        if (typeof animationData["default"] === 'object') {
	          return clone(animationData["default"]);
	        }
	        return clone(animationData);
	      }
	      var lottie = loadAnimation({
	        animationData: parseAnimationData(),
	        path: path,
	        container: animElementRef.current,
	        renderer: renderer,
	        loop: false,
	        autoplay: false,
	        rendererSettings: rendererSettings,
	        audioFactory: audioFactory
	      });
	      setLottieRefs(lottie);
	      var onDomLoaded = function onDomLoaded() {
	        return setReady(true);
	      };
	      animRef.current.addEventListener('DOMLoaded', onDomLoaded);
	      return function () {
	        animRef.current.removeEventListener('DOMLoaded', onDomLoaded);
	        setReady(false);
	        animRef.current.destroy();
	        setLottieRefs(undefined);
	      };
	    }, [loop, renderer, rendererSettings, animationData, path, audioFactory, setLottieRefs]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('DOMLoaded', onLoad);
	    }, [onLoad]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('complete', onComplete);
	    }, [onComplete]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('loopComplete', onLoopComplete);
	    }, [onLoopComplete]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('enterFrame', onEnterFrame);
	    }, [onEnterFrame]);
	    reactExports.useEffect(function () {
	      animRef.current.addEventListener('segmentStart', onSegmentStart);
	    }, [onSegmentStart]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      animRef.current.loop = loop;
	    }, [ready, loop]);
	    var wasPlayingSegmentsRef = reactExports.useRef(false);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      function playReverse(lastFrame) {
	        animRef.current.goToAndPlay(lastFrame, true);
	        animRef.current.setDirection(direction);
	      }
	      if (play === true) {
	        var force = true;
	        if (segments) {
	          animRef.current.playSegments(segments, force);
	          wasPlayingSegmentsRef.current = true;
	          if (direction === -1) {
	            var lastFrame = segments[1];
	            playReverse(lastFrame);
	          }
	        } else {
	          if (wasPlayingSegmentsRef.current) animRef.current.resetSegments(force);
	          wasPlayingSegmentsRef.current = false;
	          if (direction === -1) {
	            var _lastFrame = animRef.current.getDuration(true);
	            playReverse(_lastFrame);
	          } else {
	            animRef.current.play();
	          }
	        }
	      } else if (play === false) {
	        animRef.current.pause();
	      }
	    }, [play, segments, ready, direction]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      if (Number.isNaN(speed)) return;
	      animRef.current.setSpeed(speed);
	    }, [speed, ready]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      animRef.current.setDirection(direction);
	    }, [direction, ready]);
	    reactExports.useEffect(function () {
	      if (!ready) return;
	      if (goTo == null) return;
	      var isFrame = true;
	      if (play) animRef.current.goToAndPlay(goTo, isFrame);else animRef.current.goToAndStop(goTo, isFrame);
	    }, [goTo, play, ready]);
	    reactExports.useEffect(function () {
	      if (animRef.current.setSubframe) animRef.current.setSubframe(useSubframes);
	    }, [useSubframes]);
	    return /*#__PURE__*/React.createElement("div", _extends({}, props, {
	      ref: animElementRef
	    }));
	  }));
	  Lottie.propTypes = propTypes$1;
	  return Lottie;
	};
	var LottiePlayer = makeLottiePlayer(lottie);

	const ActionContext = /*#__PURE__*/reactExports.createContext({
	  handlePlayerJoin: () => {},
	  handlePlayerLeave: () => {},
	  handlePlayerSubmitRealname: () => {},
	  handleHostStartGame: () => {},
	  handleHostSkipInstructions: () => {},
	  handleMafiaSelection: () => {},
	  handleMafiaVote: () => {},
	  handleDetectiveIdentification: () => {},
	  handleAngelProtection: () => {},
	  handleCivilianTriviaFinish: () => {},
	  handleAccusation: () => {},
	  handleLifeDeathSelection: () => {},
	  handleLifeDeathVote: () => {},
	  handleProgressToWelcomePage: () => {},
	  handleProgressToAreYouReadyPage: () => {},
	  handleProgressToLookAtYourPhonePage: () => {},
	  handleProgressToInstructionsPage: () => {},
	  handleProgressToNighttimePage: () => {},
	  handleProgressToNighttimeTimerPage: () => {},
	  handleProgressToNightOverPage: () => {},
	  handleProgressToStoryPage: () => {},
	  handleProgressToPostStoryPage: () => {},
	  handleProgressToAccusationTimerPage: () => {},
	  handleProgressToAccusedPage: () => {},
	  handleProgressToVotingPage: () => {},
	  handleProgressToVotingTimerPage: () => {},
	  handleProgressToVotingResultsPage: () => {},
	  handleTransitionFromVotingResultsPage: () => {},
	  handleProgressToGameOverPage: () => {}
	});
	const ActionProvider = ({
	  children
	}) => {
	  const {
	    setPage,
	    players,
	    setPlayers,
	    setMafia,
	    setDetective,
	    setAngel,
	    setCivilians,
	    setCurrentMafiaSelections,
	    setCurrentMafiaVotes,
	    setDetectiveIdentifications,
	    setCurrentDetectiveIdentification,
	    setCurrentAngelProtection,
	    setCurrentCivilianTriviaFinishes,
	    setCurrentAccusations,
	    setCurrentLifeDeathSelections,
	    setCurrentLifeDeathVotes,
	    nighttimeTimer,
	    setNighttimeTimer,
	    setCurrentKill,
	    setAccusationTimer,
	    setRecentlyAccused,
	    setVotingTimer,
	    playersRef,
	    pageRef,
	    currentMafiaSelectionsRef,
	    currentMafiaVotesRef,
	    detectiveIdentificationsRef,
	    currentDetectiveIdentificationRef,
	    currentAngelProtectionRef,
	    currentCivilianTriviaFinishesRef,
	    currentAccusationsRef,
	    recentlyAccusedRef,
	    currentLifeDeathSelectionsRef,
	    currentLifeDeathVotesRef,
	    mafiaRef,
	    detectiveRef,
	    angelRef,
	    civiliansRef,
	    currentKillRef,
	    accusationTimer
	  } = reactExports.useContext(VariableContext);
	  const introAudioRef = reactExports.useRef(new Audio("./assets/Introloop.wav"));
	  const narrationAudioRef = reactExports.useRef(new Audio("./assets/narration.mp3"));
	  const nighttimeOverTimeoutRef = reactExports.useRef(null);
	  reactExports.useEffect(() => {
	    if (nighttimeTimer === 0 && pageRef.current === NIGHTTIME_TIMER$1) {
	      handleProgressToNightOverPage();
	    }
	  }, [nighttimeTimer]);
	  reactExports.useEffect(() => {
	    if (accusationTimer === 0 && pageRef.current === ACCUSATIONS$1) {
	      handleProgressToNighttimePage();
	    }
	  }, [accusationTimer]);
	  const handlePlayerJoin = gamername => {
	    // create a new player info object, with the gamername
	    const newPlayer = {
	      gamername,
	      realname: "",
	      role: "civilian",
	      isAlive: true,
	      isHost: playersRef.current.length === 0
	    };
	    // add the new player to the players array
	    playersRef.current = [...playersRef.current, newPlayer];
	    setPlayers(playersRef.current);
	  };
	  const handlePlayerLeave = () => {
	    // remove the player from the players array
	    // TODO
	    // evaluate if the game is over
	    // TODO
	  };
	  const handlePlayerSubmitRealname = (gamername, realname) => {
	    // if realname is already taken, add a number to the end of the realname
	    const realnames = playersRef.current.map(player => player.realname);
	    if (realnames.includes(realname)) {
	      let i = 2;
	      while (realnames.includes(realname + i)) {
	        i++;
	      }
	      realname += i;
	    }
	    // update the player's realname
	    const newPlayers = playersRef.current.map(player => {
	      if (player.gamername === gamername) {
	        player.realname = realname;
	      }
	      return player;
	    });
	    const bellAudio = new Audio("./assets/death-bell.wav");
	    bellAudio.volume = 0.25;
	    bellAudio.play();
	    playersRef.current = newPlayers;
	    setPlayers(playersRef.current);
	  };
	  const handleHostStartGame = () => {
	    // assign roles
	    const roles = getRoles(playersRef.current.length);
	    // keep track of the roles
	    const mafia = [];
	    let detective = null;
	    let angel = null;
	    const civilians = [];
	    // assign the roles to the players
	    const newPlayers = playersRef.current.map((player, index) => {
	      player.role = roles[index];
	      if (player.role === "mafia") {
	        mafia.push(player);
	      } else if (player.role === "detective") {
	        detective = player;
	      } else if (player.role === "angel") {
	        angel = player;
	      } else {
	        civilians.push(player);
	      }
	      return player;
	    });
	    playersRef.current = newPlayers;
	    setPlayers(playersRef.current);
	    mafiaRef.current = mafia;
	    setMafia(mafiaRef.current);
	    detectiveRef.current = detective;
	    setDetective(detectiveRef.current);
	    angelRef.current = angel;
	    setAngel(angelRef.current);
	    civiliansRef.current = civilians;
	    setCivilians(civiliansRef.current);
	    // advance to welcome page
	    handleProgressToWelcomePage();
	  };
	  const handleHostSkipInstructions = () => {
	    // advance to nighttime page
	    handleProgressToNighttimePage();
	  };
	  const setNighttimeOverTimeout = () => {
	    nighttimeOverTimeoutRef.current = setTimeout(() => {
	      if (pageRef.current === NIGHTTIME_TIMER$1) {
	        if (isNightOver(currentMafiaVotesRef.current, currentDetectiveIdentificationRef.current, currentAngelProtectionRef.current, currentCivilianTriviaFinishesRef.current, playersRef.current.length)) {
	          handleProgressToNightOverPage();
	        }
	      }
	    }, 2000);
	  };
	  const handleMafiaSelection = (mafiaGamername, targetGamername) => {
	    if (pageRef.current !== NIGHTTIME_TIMER$1) return;
	    const mafiaPlayer = playersRef.current.find(player => player.gamername === mafiaGamername);
	    const targetPlayer = playersRef.current.find(player => player.gamername === targetGamername);
	    if (!mafiaPlayer || !targetPlayer) {
	      return;
	    }
	    const currentMafiaSelection = currentMafiaSelectionsRef.current.find(selection => selection.player.gamername === mafiaPlayer.gamername);
	    // if mafia member has not selected a target, add the target to the currentMafiaSelections array
	    if (!currentMafiaSelection) {
	      currentMafiaSelectionsRef.current = [...currentMafiaSelectionsRef.current, {
	        player: mafiaPlayer,
	        target: targetPlayer
	      }];
	      setCurrentMafiaSelections(currentMafiaSelectionsRef.current);
	    }
	    // if mafia member has selected a target and this target is different from the previous target, update the target in the currentMafiaSelections array
	    else if (currentMafiaSelection.target !== targetPlayer) {
	      currentMafiaSelectionsRef.current = currentMafiaSelectionsRef.current.map(selection => {
	        if (selection.player.gamername === mafiaPlayer.gamername) {
	          selection.target = targetPlayer;
	        }
	        return selection;
	      });
	      setCurrentMafiaSelections(currentMafiaSelectionsRef.current);
	    }
	    // if mafia member has selected a target and this target is the same as the previous target, remove the target from the currentMafiaSelections array
	    else {
	      currentMafiaSelectionsRef.current = currentMafiaSelectionsRef.current.filter(selection => selection.player.gamername !== mafiaPlayer.gamername);
	      setCurrentMafiaSelections(currentMafiaSelectionsRef.current);
	    }
	  };
	  const handleMafiaVote = (mafiaGamername, targetGamername) => {
	    if (pageRef.current !== NIGHTTIME_TIMER$1) return;
	    const mafiaPlayer = playersRef.current.find(player => player.gamername === mafiaGamername);
	    const targetPlayer = playersRef.current.find(player => player.gamername === targetGamername);
	    if (!mafiaPlayer || !targetPlayer) {
	      return;
	    }
	    const currentMafiaVote = currentMafiaVotesRef.current.find(selection => selection.player.gamername === mafiaPlayer.gamername);
	    // if mafia member has not voted, add the vote to the currentMafiaVotes array
	    if (!currentMafiaVote) {
	      currentMafiaVotesRef.current = [...currentMafiaVotesRef.current, {
	        player: mafiaPlayer,
	        target: targetPlayer
	      }];
	      setCurrentMafiaVotes(currentMafiaVotesRef.current);
	    }
	    // remove the vote from the currentMafiaSelections array
	    currentMafiaSelectionsRef.current = currentMafiaSelectionsRef.current.filter(selection => selection.player.gamername !== mafiaPlayer.gamername);
	    setCurrentMafiaSelections(currentMafiaSelectionsRef.current);
	    // check if night is over
	    setNighttimeOverTimeout();
	  };
	  const handleDetectiveIdentification = targetGamername => {
	    if (pageRef.current !== NIGHTTIME_TIMER$1) return;
	    // find the detective
	    const detective = playersRef.current.find(player => player.role === "detective");
	    // find the target
	    const target = playersRef.current.find(player => player.gamername === targetGamername);
	    // if the detective and target are found, add the identification to the detectiveIdentifications array
	    if (!detective || !target) {
	      return;
	    }
	    detectiveIdentificationsRef.current = [...detectiveIdentificationsRef.current, {
	      player: detective,
	      target
	    }];
	    setDetectiveIdentifications(detectiveIdentificationsRef.current);
	    currentDetectiveIdentificationRef.current = {
	      player: detective,
	      target
	    };
	    setCurrentDetectiveIdentification(currentDetectiveIdentificationRef.current);
	    // check if night is over
	    setNighttimeOverTimeout();
	  };
	  const handleAngelProtection = targetGamername => {
	    if (pageRef.current !== NIGHTTIME_TIMER$1) return;
	    // find the angel
	    const angel = playersRef.current.find(player => player.role === "angel");
	    // find the target
	    const target = playersRef.current.find(player => player.gamername === targetGamername);
	    // if the angel and target are found, update the currentAngelProtection
	    if (!angel || !target) {
	      return;
	    }
	    currentAngelProtectionRef.current = {
	      player: angel,
	      target
	    };
	    setCurrentAngelProtection(currentAngelProtectionRef.current);
	    // check if night is over
	    setNighttimeOverTimeout();
	  };
	  const handleCivilianTriviaFinish = gamername => {
	    if (pageRef.current !== NIGHTTIME_TIMER$1) return;
	    // find the player
	    const player = playersRef.current.find(player => player.gamername === gamername);
	    // if the player is found, add the player to the currentCivilianTriviaFinishes array
	    if (!player) {
	      return;
	    }
	    currentCivilianTriviaFinishesRef.current = [...currentCivilianTriviaFinishesRef.current, player];
	    setCurrentCivilianTriviaFinishes(currentCivilianTriviaFinishesRef.current);
	    // check if night is over
	    setNighttimeOverTimeout();
	  };
	  const handleAccusation = (accuserGamername, targetGamername) => {
	    if (pageRef.current !== ACCUSATIONS$1) return;
	    // find the accuser
	    const accuser = playersRef.current.find(player => player.gamername === accuserGamername);
	    // find the target
	    const target = playersRef.current.find(player => player.gamername === targetGamername);
	    // if the accuser and target are found, add the accusation to the currentAccusations array
	    if (!accuser || !target) {
	      return;
	    }
	    // if the player has already accused someone, remove the previous accusation
	    currentAccusationsRef.current = currentAccusationsRef.current.filter(accusation => accusation.player.gamername !== accuserGamername);
	    // add the new accusation
	    currentAccusationsRef.current = [...currentAccusationsRef.current, {
	      player: accuser,
	      target
	    }];
	    setCurrentAccusations(currentAccusationsRef.current);
	    // TODO: check if accusations are over
	    // find the max number of accusations for a single player
	    const accusationCounts = {};
	    currentAccusationsRef.current.forEach(accusation => {
	      accusationCounts[accusation.target.gamername] = (accusationCounts[accusation.target.gamername] || 0) + 1;
	    });
	    const maxAccusations = Math.max(...Object.values(accusationCounts));
	    // if any player has been accused 2 times, set this player as the recentlyAccused and progress to ACCUSED page
	    if (maxAccusations >= 2) {
	      const accusedPlayers = Object.keys(accusationCounts).filter(gamername => accusationCounts[gamername] === maxAccusations);
	      const randomIndex = Math.floor(Math.random() * accusedPlayers.length);
	      const recentlyAccused = playersRef.current.find(player => player.gamername === accusedPlayers[randomIndex]);
	      recentlyAccusedRef.current = recentlyAccused;
	      setRecentlyAccused(recentlyAccusedRef.current);
	      handleProgressToAccusedPage();
	    }
	  };
	  const handleLifeDeathSelection = (voterGamername, vote) => {
	    // find the voter
	    const voter = playersRef.current.find(player => player.gamername === voterGamername);
	    // if the voter is found, add the vote to the currentLifeDeathSelections array
	    if (!voter) {
	      return;
	    }
	    // get the current vote
	    const currentVote = currentLifeDeathSelectionsRef.current.find(vote => vote.player === voter);
	    // if the voter has not voted, add the vote to the currentLifeDeathSelections array
	    if (!currentVote) {
	      currentLifeDeathSelectionsRef.current = [...currentLifeDeathSelectionsRef.current, {
	        player: voter,
	        vote
	      }];
	      setCurrentLifeDeathSelections(currentLifeDeathSelectionsRef.current);
	    }
	    // if the voter has voted and this vote is different from the previous vote, update the vote in the currentLifeDeathSelections array
	    else if (currentVote.vote !== vote) {
	      currentLifeDeathSelectionsRef.current = currentLifeDeathSelectionsRef.current.map(playerVote => {
	        if (playerVote.player === voter) {
	          playerVote.vote = vote;
	        }
	        return playerVote;
	      });
	      setCurrentLifeDeathSelections(currentLifeDeathSelectionsRef.current);
	    }
	    // if the voter has voted and this vote is the same as the previous vote, remove the vote from the currentLifeDeathSelections array
	    else {
	      currentLifeDeathSelectionsRef.current = currentLifeDeathSelectionsRef.current.filter(playerVote => playerVote.player !== voter);
	      setCurrentLifeDeathSelections(currentLifeDeathSelectionsRef.current);
	    }
	  };
	  const handleLifeDeathVote = (voterGamername, vote) => {
	    // find the voter
	    const voter = playersRef.current.find(player => player.gamername === voterGamername);
	    // if the voter is found, add the vote to the currentLifeDeathVotes array
	    if (!voter) {
	      return;
	    }
	    // get the current vote
	    const currentVote = currentLifeDeathVotesRef.current.find(vote => vote.player === voter);
	    // if the voter has not voted, add the vote to the currentLifeDeathVotes array
	    if (!currentVote) {
	      currentLifeDeathVotesRef.current = [...currentLifeDeathVotesRef.current, {
	        player: voter,
	        vote
	      }];
	      setCurrentLifeDeathVotes(currentLifeDeathVotesRef.current);
	    }
	    // remove the vote from the currentLifeDeathSelections array
	    currentLifeDeathSelectionsRef.current = currentLifeDeathSelectionsRef.current.filter(playerVote => playerVote.player !== voter);
	    setCurrentLifeDeathSelections(currentLifeDeathSelectionsRef.current);
	  };
	  const handleProgressToWelcomePage = () => {
	    // play the intro audio
	    introAudioRef.current.play();
	    // set the page to WELCOME
	    pageRef.current = WELCOME$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToAreYouReadyPage = () => {
	    // set the page to YOU_READY
	    pageRef.current = YOU_READY$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToLookAtYourPhonePage = () => {
	    // set the page to REVEAL_IDENTITY
	    pageRef.current = REVEAL_IDENTITY$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToInstructionsPage = () => {
	    // stop the intro audio
	    introAudioRef.current.pause();
	    // reset the intro audio
	    introAudioRef.current.currentTime = 0;
	    // play the intro audio again
	    introAudioRef.current.play();
	    // set the page to INSTRUCTIONS
	    pageRef.current = INSTRUCTIONS$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToNighttimePage = () => {
	    // pause the intro audio
	    introAudioRef.current.pause();
	    // reset the currentMafiaSelections array
	    currentMafiaSelectionsRef.current = [];
	    setCurrentMafiaSelections([]);
	    // reset the currentMafiaVotes array
	    currentMafiaVotesRef.current = [];
	    setCurrentMafiaVotes([]);
	    // reset the currentKill
	    currentKillRef.current = null;
	    setCurrentKill(null);
	    // reset the currentDetectiveIdentification
	    currentDetectiveIdentificationRef.current = null;
	    setCurrentDetectiveIdentification(null);
	    // reset the currentAngelProtection
	    currentAngelProtectionRef.current = null;
	    setCurrentAngelProtection(null);
	    // reset the currentCivilianTriviaFinishes array
	    currentCivilianTriviaFinishesRef.current = [];
	    setCurrentCivilianTriviaFinishes([]);
	    // set the page to NIGHTTIME
	    pageRef.current = NIGHTTIME$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToNighttimeTimerPage = () => {
	    // reset the nighttimeTimer
	    setNighttimeTimer(120);
	    // set the page to NIGHTTIME_TIMER
	    pageRef.current = NIGHTTIME_TIMER$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToNightOverPage = () => {
	    // set the page to NIGHT_OVER
	    pageRef.current = NIGHT_OVER$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToStoryPage = () => {
	    // decide on the player to die
	    // this is determined by the mafia votes
	    // whoever has the most votes dies
	    // if there is a tie, select randomly from the tied players
	    const voteCounts = {};
	    currentMafiaVotesRef.current.forEach(vote => {
	      voteCounts[vote.target.gamername] = (voteCounts[vote.target.gamername] || 0) + 1;
	    });
	    const maxVotes = Math.max(...Object.values(voteCounts));
	    const playersWithMaxVotes = Object.keys(voteCounts).filter(gamername => voteCounts[gamername] === maxVotes);
	    const randomIndex = Math.floor(Math.random() * playersWithMaxVotes.length);
	    const playerToDie = playersRef.current.find(player => player.gamername === playersWithMaxVotes[randomIndex]);
	    if (!playerToDie) {
	      return;
	    }
	    // update the player's isAlive status
	    if (playerToDie && playerToDie.gamername !== currentAngelProtectionRef.current?.target.gamername) {
	      playerToDie.isAlive = false;
	    }
	    // set the currentKill
	    currentKillRef.current = playerToDie;
	    setCurrentKill(currentKillRef.current);
	    // set the page to STORY
	    pageRef.current = STORY$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToPostStoryPage = () => {
	    // reset the accusationTimer
	    setAccusationTimer(300);
	    // reset the recentlyAccused
	    recentlyAccusedRef.current = null;
	    setRecentlyAccused(recentlyAccusedRef.current);
	    // set the page to POST_STORY_2
	    pageRef.current = POST_STORY_2$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToAccusationTimerPage = () => {
	    // reset currentAccusations
	    currentAccusationsRef.current = [];
	    setCurrentAccusations([]);
	    // reset currentLifeDeathSelections
	    currentLifeDeathSelectionsRef.current = [];
	    setCurrentLifeDeathSelections([]);
	    // reset currentLifeDeathVotes
	    currentLifeDeathVotesRef.current = [];
	    setCurrentLifeDeathVotes([]);
	    // set the page to ACCUSATIONS
	    pageRef.current = ACCUSATIONS$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToAccusedPage = () => {
	    // play narration audio
	    narrationAudioRef.current.currentTime = 0;
	    narrationAudioRef.current.play();
	    // set the page to ACCUSED
	    pageRef.current = ACCUSED$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToVotingPage = () => {
	    // set the page to VOTING
	    pageRef.current = VOTING$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToVotingTimerPage = () => {
	    // stop the narration audio
	    narrationAudioRef.current.pause();
	    // reset the votingTimer
	    setVotingTimer(300);
	    // set the page to VOTING_TIMER
	    pageRef.current = VOTING_TIMER$1;
	    setPage(pageRef.current);
	  };
	  const handleProgressToVotingResultsPage = () => {
	    // set the page to VOTING_RESULTS
	    pageRef.current = VOTING_RESULTS$1;
	    setPage(pageRef.current);
	  };
	  const handleTransitionFromVotingResultsPage = () => {
	    // check if player lives or dies
	    const votesToLive = currentLifeDeathVotesRef.current.filter(vote => vote.vote === "live").length;
	    const votesToDie = currentLifeDeathVotesRef.current.filter(vote => vote.vote === "die").length;
	    if (votesToDie > votesToLive) {
	      // the player dies
	      const newPlayers = playersRef.current.map(player => {
	        if (player.gamername === recentlyAccusedRef.current?.gamername) {
	          player.isAlive = false;
	        }
	        return player;
	      });
	      playersRef.current = newPlayers;
	      setPlayers(playersRef.current);
	      // TODO: check if game is over
	    } else {
	      handleProgressToAccusationTimerPage();
	    }
	  };
	  const handleProgressToGameOverPage = () => {
	    // set the page to GAME_OVER
	    pageRef.current = GAME_OVER$1;
	    setPage(pageRef.current);
	  };
	  const actions = reactExports.useMemo(() => ({
	    handlePlayerJoin,
	    handlePlayerLeave,
	    handlePlayerSubmitRealname,
	    handleHostStartGame,
	    handleHostSkipInstructions,
	    handleMafiaSelection,
	    handleMafiaVote,
	    handleDetectiveIdentification,
	    handleAngelProtection,
	    handleCivilianTriviaFinish,
	    handleAccusation,
	    handleLifeDeathSelection,
	    handleLifeDeathVote,
	    handleProgressToWelcomePage,
	    handleProgressToAreYouReadyPage,
	    handleProgressToLookAtYourPhonePage,
	    handleProgressToInstructionsPage,
	    handleProgressToNighttimePage,
	    handleProgressToNighttimeTimerPage,
	    handleProgressToNightOverPage,
	    handleProgressToStoryPage,
	    handleProgressToPostStoryPage,
	    handleProgressToAccusationTimerPage,
	    handleProgressToAccusedPage,
	    handleProgressToVotingPage,
	    handleProgressToVotingTimerPage,
	    handleProgressToVotingResultsPage,
	    handleTransitionFromVotingResultsPage,
	    handleProgressToGameOverPage
	  }), [handlePlayerJoin, handlePlayerLeave, handlePlayerSubmitRealname, handleHostStartGame, handleHostSkipInstructions, handleMafiaSelection, handleMafiaVote, handleDetectiveIdentification, handleAngelProtection, handleCivilianTriviaFinish, handleAccusation, handleLifeDeathSelection, handleLifeDeathVote, handleProgressToWelcomePage, handleProgressToAreYouReadyPage, handleProgressToLookAtYourPhonePage, handleProgressToInstructionsPage, handleProgressToNighttimePage, handleProgressToNighttimeTimerPage, handleProgressToNightOverPage, handleProgressToStoryPage, handleProgressToPostStoryPage, handleProgressToAccusationTimerPage, handleProgressToAccusedPage, handleProgressToVotingPage, handleProgressToVotingTimerPage, handleProgressToVotingResultsPage, handleTransitionFromVotingResultsPage, handleProgressToGameOverPage]);
	  return /*#__PURE__*/React.createElement(ActionContext.Provider, {
	    value: actions
	  }, children);
	};
	const getRoles = numPlayers => {
	  const roles = [];
	  for (let i = 0; i < numPlayers; i++) {
	    if (i === 0) {
	      roles.push("detective");
	    } else if (i === 1) {
	      roles.push("angel");
	    } else if (i % 4 === 2) {
	      roles.push("mafia");
	    } else {
	      roles.push("civilian");
	    }
	  }
	  return shuffle(roles);
	};
	const shuffle = array => {
	  let currentIndex = array.length,
	    randomIndex;
	  while (currentIndex !== 0) {
	    randomIndex = Math.floor(Math.random() * currentIndex);
	    currentIndex--;
	    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];
	  }
	  return array;
	};
	const isNightOver = (mafiaVotes, currentDetectiveIdentification, currentAngelProtection, currentCivilianTriviaFinishes, playersLength) => {
	  let totalNightCompletions = 0;
	  totalNightCompletions += mafiaVotes.length;
	  if (currentDetectiveIdentification) {
	    totalNightCompletions++;
	  }
	  if (currentAngelProtection) {
	    totalNightCompletions++;
	  }
	  totalNightCompletions += currentCivilianTriviaFinishes.length;
	  return totalNightCompletions === playersLength;
	};

	function Welcome({
	  youReady
	}) {
	  const {
	    handleProgressToAreYouReadyPage,
	    handleProgressToLookAtYourPhonePage
	  } = reactExports.useContext(ActionContext);
	  const welcomeAudio = new Audio("./assets/welcome.mp3");
	  const readyAudio = new Audio("./assets/ready.mp3");
	  reactExports.useEffect(() => {
	    setTimeout(() => {
	      welcomeAudio.play();
	    }, 3000);
	    welcomeAudio.onended = () => {
	      setTimeout(() => {
	        handleProgressToAreYouReadyPage();
	      }, 6500);
	    };
	    return () => welcomeAudio.pause();
	  }, []);
	  reactExports.useEffect(() => {
	    if (youReady) {
	      setTimeout(() => readyAudio.play(), 2000);
	    }
	    readyAudio.onended = () => {
	      setTimeout(() => {
	        handleProgressToLookAtYourPhonePage();
	      }, 7000);
	    };
	    return () => readyAudio.pause();
	  }, [youReady]);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LottiePlayer, {
	    loop: true,
	    animationData: lottieJson$1,
	    play: true
	  }), /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 12
	    }
	  }), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, youReady ? "are you ready?" : "welcome"));
	}

	function RevealIdentity() {
	  const {
	    handleProgressToInstructionsPage
	  } = reactExports.useContext(ActionContext);
	  const identityAudio = new Audio("./assets/identity.mp3");
	  reactExports.useEffect(() => {
	    setTimeout(() => identityAudio.play(), 1000);
	    setTimeout(() => {
	      handleProgressToInstructionsPage();
	    }, 19000);
	    return () => identityAudio.pause();
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, "look at your phone"), /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    color: "var(--Main-Red)",
	    weight: 700
	  }, "don\u2019t tell anyone"));
	}

	function Instructions() {
	  const {
	    handleProgressToNighttimePage
	  } = reactExports.useContext(ActionContext);
	  const instructions1Audio = new Audio("./assets/instructions1.mp3");
	  const instructions2Audio = new Audio("./assets/instructions2.mp3");
	  reactExports.useEffect(() => {
	    const timeout = setTimeout(() => instructions1Audio.play(), 1000);
	    instructions1Audio.onended = () => {
	      setTimeout(() => instructions2Audio.play(), 1000);
	    };
	    instructions2Audio.onended = () => {
	      setTimeout(() => handleProgressToNighttimePage(), 1000);
	    };
	    return () => {
	      clearTimeout(timeout);
	      instructions1Audio.pause();
	      instructions2Audio.pause();
	    };
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, "nighttime roles"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    color: "var(--Main-Red)",
	    weight: 700
	  }, "mafia:"), /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    opacity: 0.75,
	    style: {
	      marginTop: -18
	    }
	  }, "kill someone"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    color: "var(--Main-Yellow)",
	    weight: 700
	  }, "angel:"), /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    opacity: 0.75,
	    style: {
	      marginTop: -18
	    }
	  }, "save this person"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    color: "var(--Main-Blue)",
	    weight: 700
	  }, "detective:"), /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    opacity: 0.75,
	    style: {
	      marginTop: -18
	    }
	  }, "discover an identity"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    weight: 700
	  }, "civilians:"), /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    opacity: 0.75,
	    style: {
	      marginTop: -18
	    }
	  }, "must play trivia"));
	}

	function Nighttime() {
	  const {
	    handleProgressToNighttimeTimerPage
	  } = reactExports.useContext(ActionContext);
	  const nighttimeSeePhonesAudio = new Audio("./assets/nighttime-see-phones.mp3");
	  new Audio("./assets/nighttime-again.mp3");
	  const narrationAudio = new Audio("./assets/narration.mp3");
	  reactExports.useEffect(() => {
	    narrationAudio.play();
	    {
	      setTimeout(() => nighttimeSeePhonesAudio.play(), 1000);
	      nighttimeSeePhonesAudio.onended = () => {
	        setTimeout(() => handleProgressToNighttimeTimerPage(), 1000);
	      };
	      return () => {
	        nighttimeSeePhonesAudio.pause();
	        narrationAudio.pause();
	      };
	    }
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("svg", {
	    xmlns: "http://www.w3.org/2000/svg",
	    width: "48",
	    height: "52",
	    viewBox: "0 0 48 52",
	    fill: "none"
	  }, /*#__PURE__*/React.createElement("path", {
	    d: "M28.0683 0C31.2194 4.41765 33.0778 9.8 33.0778 15.6176C33.0778 30.6059 20.7715 42.7588 5.59409 42.7588C3.74755 42.7588 1.94865 42.5765 0.203369 42.2353C5.11756 48.1941 12.605 52 20.9919 52C35.794 52 47.7966 40.1471 47.7966 25.5294C47.7966 13.3294 39.4335 3.06471 28.0624 0H28.0683Z",
	    fill: "#EBEBEB"
	  })), /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "look at your phone"));
	}

	var v = "5.9.0";
	var fr = 30;
	var ip = 0;
	var op = 240;
	var w = 286;
	var h = 286;
	var nm = "Layer 1/MafiaTimer";
	var ddd = 0;
	var assets = [
	];
	var layers = [
		{
			ddd: 0,
			ind: 1,
			ty: 4,
			nm: "Layer 1/MafiaTimer Outlines",
			sr: 1,
			ks: {
				o: {
					a: 0,
					k: 100,
					ix: 11
				},
				r: {
					a: 1,
					k: [
						{
							i: {
								x: [
									0
								],
								y: [
									0.995
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.167
								]
							},
							t: 0,
							s: [
								0
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									0.995
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.328
								]
							},
							t: 30,
							s: [
								9
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									1.003
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.325
								]
							},
							t: 60,
							s: [
								18
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									1.003
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.336
								]
							},
							t: 90,
							s: [
								27
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									0.995
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.323
								]
							},
							t: 120,
							s: [
								36
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									0.995
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.323
								]
							},
							t: 150,
							s: [
								45
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									0.995
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.312
								]
							},
							t: 180,
							s: [
								54
							]
						},
						{
							i: {
								x: [
									0
								],
								y: [
									0.995
								]
							},
							o: {
								x: [
									0.167
								],
								y: [
									0.317
								]
							},
							t: 210,
							s: [
								63
							]
						},
						{
							t: 240,
							s: [
								72
							]
						}
					],
					ix: 10
				},
				p: {
					a: 0,
					k: [
						143,
						143,
						0
					],
					ix: 2,
					l: 2
				},
				a: {
					a: 0,
					k: [
						322,
						322.5,
						0
					],
					ix: 1,
					l: 2
				},
				s: {
					a: 0,
					k: [
						44,
						44,
						100
					],
					ix: 6,
					l: 2
				}
			},
			ao: 0,
			shapes: [
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											-0.046,
											-0.003
										],
										[
											-0.087,
											1.189
										],
										[
											0,
											0
										],
										[
											-0.549,
											-0.039
										],
										[
											-0.134,
											-0.057
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.648,
											0.044
										],
										[
											-0.641,
											-0.046
										],
										[
											0,
											0
										],
										[
											0.082,
											-1.144
										],
										[
											0.183,
											0.013
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											2.144,
											5.655
										],
										[
											1.242,
											5.727
										],
										[
											0.411,
											3.874
										],
										[
											0.718,
											-0.38
										],
										[
											1.665,
											-2.036
										],
										[
											2.141,
											-1.932
										],
										[
											16.449,
											3.378
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.43,
											1.042
										],
										[
											2.985,
											1.319
										],
										[
											0,
											0
										],
										[
											0.265,
											0.157
										],
										[
											-0.063,
											0.868
										],
										[
											-0.112,
											0.589
										],
										[
											-0.02,
											0.275
										],
										[
											3.201,
											0.232
										],
										[
											0.933,
											-0.829
										],
										[
											0.103,
											-1.418
										],
										[
											-0.144,
											-2.448
										],
										[
											0.135,
											-1.876
										],
										[
											0.207,
											-0.95
										],
										[
											0.046,
											-0.641
										],
										[
											-0.859,
											-0.844
										],
										[
											-1.465,
											-0.106
										],
										[
											-0.122,
											1.692
										],
										[
											0.035,
											0.462
										],
										[
											-0.016,
											0.228
										],
										[
											-0.733,
											-0.052
										],
										[
											0.189,
											-2.607
										],
										[
											0,
											0
										],
										[
											0.859,
											-0.445
										],
										[
											1.235,
											0.09
										],
										[
											-0.062,
											0.869
										],
										[
											-0.102,
											0.452
										],
										[
											-0.017,
											0.228
										],
										[
											2.698,
											0.195
										],
										[
											0.995,
											-0.733
										],
										[
											0.09,
											-1.235
										],
										[
											-0.197,
											-2.359
										],
										[
											0.127,
											-1.739
										],
										[
											0.164,
											-1
										],
										[
											0.321,
											-1.265
										],
										[
											0.047,
											-0.641
										],
										[
											-0.849,
											-0.982
										],
										[
											-1.509,
											-0.109
										],
										[
											-0.186,
											2.561
										],
										[
											0,
											0
										],
										[
											-0.019,
											0.274
										],
										[
											-2.384,
											0.518
										],
										[
											0,
											0
										],
										[
											-0.553,
											0.971
										],
										[
											-0.279,
											3.843
										]
									],
									o: [
										[
											-0.68,
											-1.429
										],
										[
											0,
											0
										],
										[
											-1.382,
											-0.606
										],
										[
											-0.92,
											-0.618
										],
										[
											0.02,
											-0.275
										],
										[
											0.112,
											-0.591
										],
										[
											0.176,
											-2.425
										],
										[
											-1.419,
											-0.102
										],
										[
											-0.935,
											0.829
										],
										[
											-0.033,
											0.457
										],
										[
											0.061,
											1.062
										],
										[
											-0.126,
											1.738
										],
										[
											-0.478,
											2.173
										],
										[
											-0.092,
											1.28
										],
										[
											0.859,
											0.844
										],
										[
											2.699,
											0.195
										],
										[
											0.017,
											-0.23
										],
										[
											-0.035,
											-0.462
										],
										[
											0.057,
											-0.779
										],
										[
											3.109,
											0.225
										],
										[
											0,
											0
										],
										[
											-0.056,
											0.777
										],
										[
											-0.86,
											0.443
										],
										[
											-0.961,
											-0.069
										],
										[
											0.017,
											-0.229
										],
										[
											0.102,
											-0.452
										],
										[
											0.126,
											-1.739
										],
										[
											-1.419,
											-0.103
										],
										[
											-0.996,
											0.732
										],
										[
											-0.042,
											0.595
										],
										[
											0.047,
											0.6
										],
										[
											-0.115,
											1.601
										],
										[
											-0.03,
											0.412
										],
										[
											-0.212,
											1.042
										],
										[
											-0.106,
											1.463
										],
										[
											0.849,
											0.981
										],
										[
											3.019,
											0.219
										],
										[
											0,
											0
										],
										[
											-0.087,
											-0.696
										],
										[
											0.066,
											-0.916
										],
										[
											0,
											0
										],
										[
											2.243,
											-0.482
										],
										[
											0.552,
											-0.972
										],
										[
											0.247,
											-3.43
										]
									],
									v: [
										[
											23.85,
											-2.639
										],
										[
											18.354,
											-6.761
										],
										[
											-7.927,
											-18.18
										],
										[
											-10.397,
											-19.324
										],
										[
											-11.683,
											-21.555
										],
										[
											-11.486,
											-22.851
										],
										[
											-11.289,
											-24.148
										],
										[
											-15.829,
											-28.132
										],
										[
											-19.356,
											-27.042
										],
										[
											-20.911,
											-23.671
										],
										[
											-20.743,
											-19.314
										],
										[
											-20.855,
											-14.907
										],
										[
											-21.354,
											-10.874
										],
										[
											-22.142,
											-6.654
										],
										[
											-20.993,
											-3.468
										],
										[
											-17.509,
											-2.043
										],
										[
											-13.277,
											-4.289
										],
										[
											-13.306,
											-5.326
										],
										[
											-13.334,
											-6.362
										],
										[
											-12.151,
											-7.45
										],
										[
											-7.769,
											-3.201
										],
										[
											-8.429,
											5.925
										],
										[
											-9.802,
											7.757
										],
										[
											-12.945,
											8.288
										],
										[
											-14.292,
											6.88
										],
										[
											-14.114,
											5.858
										],
										[
											-13.937,
											4.837
										],
										[
											-17.796,
											1.937
										],
										[
											-21.417,
											2.882
										],
										[
											-23.045,
											5.833
										],
										[
											-22.813,
											10.265
										],
										[
											-22.93,
											13.774
										],
										[
											-23.349,
											17.675
										],
										[
											-23.876,
											20.189
										],
										[
											-24.265,
											22.713
										],
										[
											-23.151,
											26.38
										],
										[
											-19.614,
											28.015
										],
										[
											-14.807,
											24.501
										],
										[
											-14.753,
											23.746
										],
										[
											-14.854,
											22.29
										],
										[
											-11.18,
											20.141
										],
										[
											18.684,
											13.472
										],
										[
											22.877,
											11.292
										],
										[
											24.124,
											4.071
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									618.581,
									341.981
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 1",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 1,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.774,
											-0.816
										],
										[
											-0.133,
											-1.048
										],
										[
											-0.249,
											-0.686
										],
										[
											-0.047,
											-0.364
										],
										[
											1.153,
											-0.378
										],
										[
											1.456,
											-0.184
										],
										[
											0,
											0
										],
										[
											0.467,
											0.034
										],
										[
											0.115,
											0.909
										],
										[
											-0.07,
											0.725
										],
										[
											0.046,
											0.363
										],
										[
											0.93,
											0.598
										],
										[
											1.319,
											-0.167
										],
										[
											0.794,
											-1.026
										],
										[
											-0.184,
											-1.457
										],
										[
											-0.613,
											-2.651
										],
										[
											-0.259,
											-2.048
										],
										[
											-0.001,
											-1.109
										],
										[
											0,
											0
										],
										[
											-0.035,
											-0.273
										],
										[
											-1.068,
											-0.766
										],
										[
											-1.458,
											0.185
										],
										[
											-0.775,
											0.815
										],
										[
											0.134,
											1.047
										],
										[
											0.251,
											0.707
										],
										[
											0.047,
											0.364
										],
										[
											-3.095,
											0.391
										],
										[
											0,
											0
										],
										[
											-0.155,
											-1.229
										],
										[
											0.066,
											-0.749
										],
										[
											-0.046,
											-0.365
										],
										[
											-0.954,
											-0.596
										],
										[
											-1.275,
											0.162
										],
										[
											0.421,
											3.321
										],
										[
											0.53,
											2.36
										],
										[
											0.162,
											1.273
										],
										[
											0.031,
											1.706
										],
										[
											0.086,
											0.683
										],
										[
											1,
											0.775
										],
										[
											1.546,
											-0.196
										]
									],
									o: [
										[
											-0.776,
											0.814
										],
										[
											0.052,
											0.409
										],
										[
											0.248,
											0.684
										],
										[
											0.115,
											0.91
										],
										[
											-0.398,
											0.142
										],
										[
											0,
											0
										],
										[
											-1.457,
											0.184
										],
										[
											-1.211,
											-0.078
										],
										[
											-0.045,
											-0.365
										],
										[
											0.07,
											-0.726
										],
										[
											-0.138,
											-1.092
										],
										[
											-0.933,
											-0.6
										],
										[
											-1.502,
											0.19
										],
										[
											-0.796,
											1.025
										],
										[
											0.104,
											0.819
										],
										[
											0.509,
											2.2
										],
										[
											0.167,
											1.319
										],
										[
											0,
											0
										],
										[
											-0.029,
											0.143
										],
										[
											0.172,
											1.365
										],
										[
											1.067,
											0.767
										],
										[
											1.273,
											-0.161
										],
										[
											0.775,
											-0.815
										],
										[
											-0.046,
											-0.364
										],
										[
											-0.253,
											-0.708
										],
										[
											-0.155,
											-1.229
										],
										[
											0,
											0
										],
										[
											3.048,
											-0.387
										],
										[
											0.046,
											0.363
										],
										[
											-0.068,
											0.747
										],
										[
											0.133,
											1.046
										],
										[
											0.952,
											0.596
										],
										[
											3.32,
											-0.42
										],
										[
											-0.097,
											-0.774
										],
										[
											-0.53,
											-2.36
										],
										[
											-0.201,
											-1.593
										],
										[
											-0.043,
											-2.538
										],
										[
											-0.19,
											-1.501
										],
										[
											-1,
											-0.775
										],
										[
											-1.274,
											0.161
										]
									],
									v: [
										[
											13.012,
											-15.732
										],
										[
											12.047,
											-12.94
										],
										[
											12.498,
											-11.299
										],
										[
											12.94,
											-9.726
										],
										[
											11.381,
											-7.794
										],
										[
											8.6,
											-7.304
										],
										[
											-10.305,
											-4.911
										],
										[
											-13.19,
											-4.685
										],
										[
											-15.18,
											-6.166
										],
										[
											-15.144,
											-7.799
										],
										[
											-15.108,
											-9.433
										],
										[
											-16.711,
											-11.969
										],
										[
											-20.087,
											-12.617
										],
										[
											-23.532,
											-10.794
										],
										[
											-24.448,
											-7.073
										],
										[
											-23.373,
											-1.87
										],
										[
											-22.22,
											4.503
										],
										[
											-21.967,
											8.146
										],
										[
											-21.967,
											12.515
										],
										[
											-21.958,
											13.138
										],
										[
											-20.097,
											16.334
										],
										[
											-16.311,
											17.208
										],
										[
											-13.238,
											15.744
										],
										[
											-12.275,
											12.951
										],
										[
											-12.72,
											11.344
										],
										[
											-13.167,
											9.737
										],
										[
											-8.759,
											7.307
										],
										[
											10.146,
											4.914
										],
										[
											14.952,
											6.177
										],
										[
											14.921,
											7.846
										],
										[
											14.889,
											9.513
										],
										[
											16.519,
											11.977
										],
										[
											19.861,
											12.628
										],
										[
											24.211,
											7.016
										],
										[
											23.27,
											2.315
										],
										[
											22.233,
											-3.135
										],
										[
											21.884,
											-8.083
										],
										[
											21.689,
											-12.914
										],
										[
											19.905,
											-16.328
										],
										[
											16.085,
											-17.196
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									617.682,
									284.207
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 2",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 2,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.065,
											-0.585
										],
										[
											1.398,
											-0.451
										],
										[
											0,
											0
										],
										[
											0.464,
											-0.053
										],
										[
											0.281,
											0.873
										],
										[
											0.072,
											0.748
										],
										[
											0.113,
											0.349
										],
										[
											1.026,
											0.417
										],
										[
											1.266,
											-0.408
										],
										[
											0.598,
											-1.132
										],
										[
											-0.451,
											-1.398
										],
										[
											-1.276,
											-2.913
										],
										[
											-0.718,
											-2.226
										],
										[
											-0.507,
											-2.319
										],
										[
											-0.367,
											-1.136
										],
										[
											-1.14,
											-0.621
										],
										[
											-1.397,
											0.451
										],
										[
											0.831,
											2.575
										],
										[
											0.448,
											0.868
										],
										[
											0.154,
											0.48
										],
										[
											-0.672,
											0.458
										],
										[
											-0.699,
											0.225
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.297,
											-0.17
										],
										[
											-0.268,
											-0.829
										],
										[
											1.091,
											-0.352
										],
										[
											0,
											0
										],
										[
											0.132,
											-0.043
										],
										[
											0.087,
											-0.028
										],
										[
											-0.747,
											-2.314
										],
										[
											-2.663,
											0.859
										],
										[
											-1.712,
											0.744
										],
										[
											-0.874,
											0.281
										],
										[
											-0.989,
											0.222
										],
										[
											-0.437,
											0.141
										],
										[
											0.774,
											2.4
										],
										[
											1.702,
											-0.549
										],
										[
											0.204,
											-0.115
										],
										[
											0.13,
											-0.042
										],
										[
											0.131,
											-0.042
										],
										[
											0.592,
											1.833
										],
										[
											-1.352,
											0.436
										],
										[
											0,
											0
										],
										[
											-0.563,
											-0.325
										],
										[
											-0.549,
											-1.702
										],
										[
											0,
											0
										],
										[
											1.483,
											-0.478
										],
										[
											0.913,
											-0.15
										],
										[
											0.48,
											-0.155
										],
										[
											0.685,
											-1.16
										],
										[
											-0.479,
											-1.485
										],
										[
											-1.256,
											-0.606
										],
										[
											-1.527,
											0.492
										],
										[
											-1.276,
											0.676
										],
										[
											-0.698,
											0.225
										],
										[
											-1.525,
											0.203
										],
										[
											-0.784,
											0.253
										],
										[
											0.705,
											2.182
										],
										[
											0.212,
											0.51
										],
										[
											0,
											0
										],
										[
											0.478,
											1.484
										],
										[
											0.437,
											1.207
										],
										[
											0.478,
											1.483
										],
										[
											0.822,
											3.445
										],
										[
											0.324,
											1.003
										],
										[
											3.186,
											-1.027
										],
										[
											0.61,
											-0.944
										],
										[
											-0.323,
											-1.005
										],
										[
											-0.372,
											-0.628
										],
										[
											-0.113,
											-0.35
										]
									],
									o: [
										[
											-0.364,
											0.214
										],
										[
											0,
											0
										],
										[
											-1.398,
											0.451
										],
										[
											-1.206,
											0.147
										],
										[
											-0.099,
											-0.306
										],
										[
											-0.072,
											-0.748
										],
										[
											-0.337,
											-1.047
										],
										[
											-1.026,
											-0.416
										],
										[
											-1.44,
											0.464
										],
										[
											-0.599,
											1.133
										],
										[
											0.112,
											0.348
										],
										[
											0.554,
											1.268
										],
										[
											0.366,
											1.135
										],
										[
											0.507,
											2.318
										],
										[
											0.478,
											1.483
										],
										[
											1.139,
											0.619
										],
										[
											2.967,
											-0.957
										],
										[
											-0.155,
											-0.481
										],
										[
											-0.449,
											-0.867
										],
										[
											-0.309,
											-0.961
										],
										[
											0.351,
											-0.257
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.742,
											-0.239
										],
										[
											0.295,
											0.169
										],
										[
											0.535,
											1.658
										],
										[
											0,
											0
										],
										[
											-0.089,
											0.029
										],
										[
											-0.189,
											0.012
										],
										[
											-2.445,
											0.788
										],
										[
											0.731,
											2.27
										],
										[
											0.873,
											-0.281
										],
										[
											1.711,
											-0.745
										],
										[
											1.527,
											-0.493
										],
										[
											0.987,
											-0.222
										],
										[
											2.269,
											-0.731
										],
										[
											-0.662,
											-2.052
										],
										[
											-0.088,
											0.029
										],
										[
											-0.219,
											0.07
										],
										[
											-0.671,
											0.312
										],
										[
											-1.267,
											0.408
										],
										[
											-0.379,
											-1.178
										],
										[
											0,
											0
										],
										[
											1.834,
											-0.592
										],
										[
											0.562,
											0.324
										],
										[
											0,
											0
										],
										[
											0.703,
											2.182
										],
										[
											-0.481,
											0.155
										],
										[
											-1.236,
											0.205
										],
										[
											-1.615,
											0.521
										],
										[
											-0.686,
											1.161
										],
										[
											0.478,
											1.483
										],
										[
											1.256,
											0.607
										],
										[
											0.699,
											-0.225
										],
										[
											1.275,
											-0.677
										],
										[
											0.917,
											-0.296
										],
										[
											1.016,
											-0.135
										],
										[
											1.92,
											-0.619
										],
										[
											0.028,
											0.087
										],
										[
											0,
											0
										],
										[
											-0.777,
											-2.11
										],
										[
											-1.227,
											-3.652
										],
										[
											-0.634,
											-1.82
										],
										[
											-0.69,
											-2.14
										],
										[
											-0.544,
											-2.282
										],
										[
											-1.042,
											-3.231
										],
										[
											-1.222,
											0.394
										],
										[
											-0.611,
											0.944
										],
										[
											0.127,
											0.393
										],
										[
											0.37,
											0.627
										],
										[
											0.282,
											0.873
										]
									],
									v: [
										[
											7.065,
											-13.093
										],
										[
											4.422,
											-12.096
										],
										[
											-13.712,
											-6.249
										],
										[
											-16.505,
											-5.492
										],
										[
											-18.735,
											-6.58
										],
										[
											-18.992,
											-8.16
										],
										[
											-19.271,
											-9.805
										],
										[
											-21.315,
											-12.001
										],
										[
											-24.753,
											-12.012
										],
										[
											-27.81,
											-9.617
										],
										[
											-28.032,
											-5.822
										],
										[
											-25.948,
											-0.929
										],
										[
											-24.042,
											4.311
										],
										[
											-22.733,
											9.491
										],
										[
											-21.423,
											14.671
										],
										[
											-18.996,
											17.828
										],
										[
											-15.191,
											18.082
										],
										[
											-11.985,
											12.784
										],
										[
											-12.891,
											10.762
										],
										[
											-13.794,
											8.741
										],
										[
											-13.253,
											6.614
										],
										[
											-11.678,
											5.889
										],
										[
											-9.474,
											5.107
										],
										[
											-5.677,
											3.882
										],
										[
											-4.12,
											3.777
										],
										[
											-3.274,
											5.276
										],
										[
											-4.109,
											8.292
										],
										[
											-4.828,
											8.524
										],
										[
											-5.157,
											8.63
										],
										[
											-5.57,
											8.691
										],
										[
											-8.117,
											13.342
										],
										[
											-3.026,
											15.46
										],
										[
											0.851,
											13.921
										],
										[
											4.728,
											12.382
										],
										[
											8.502,
											11.309
										],
										[
											10.638,
											10.764
										],
										[
											12.883,
											6.065
										],
										[
											9.336,
											3.811
										],
										[
											8.9,
											4.025
										],
										[
											8.375,
											4.194
										],
										[
											7.174,
											4.725
										],
										[
											4.388,
											2.588
										],
										[
											5.846,
											0.165
										],
										[
											8.924,
											-0.826
										],
										[
											12.518,
											-1.226
										],
										[
											14.185,
											1.814
										],
										[
											16.487,
											8.951
										],
										[
											15.317,
											12.941
										],
										[
											13.224,
											13.4
										],
										[
											10.651,
											13.941
										],
										[
											7.2,
											16.463
										],
										[
											6.89,
											20.431
										],
										[
											9.491,
											23.566
										],
										[
											13.666,
											23.739
										],
										[
											16.628,
											22.386
										],
										[
											19.589,
											21.034
										],
										[
											23.25,
											20.286
										],
										[
											25.953,
											19.704
										],
										[
											27.779,
											15.501
										],
										[
											27.503,
											14.867
										],
										[
											25.909,
											11.044
										],
										[
											24.026,
											5.652
										],
										[
											21.53,
											-1.638
										],
										[
											19.859,
											-6.593
										],
										[
											17.591,
											-14.97
										],
										[
											16.291,
											-19.9
										],
										[
											9.948,
											-23.203
										],
										[
											7.198,
											-21.197
										],
										[
											6.768,
											-18.275
										],
										[
											7.515,
											-16.744
										],
										[
											8.24,
											-15.279
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									605.76,
									225.301
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 3",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 3,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.472,
											0.283
										],
										[
											-0.142,
											0.031
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.04,
											0.024
										],
										[
											0.614,
											1.023
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.157,
											-0.094
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.503,
											0.41
										],
										[
											-0.552,
											0.331
										],
										[
											0,
											0
										],
										[
											-0.59,
											-0.983
										]
									],
									v: [
										[
											3.372,
											-11.867
										],
										[
											3.82,
											-12.056
										],
										[
											18.578,
											-15.94
										],
										[
											8.186,
											-5.851
										],
										[
											7.491,
											-5.273
										],
										[
											5.744,
											-6.31
										],
										[
											3.549,
											-9.968
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.306,
											-0.024
										],
										[
											0.448,
											0.746
										],
										[
											0.248,
											0.546
										],
										[
											0.141,
											0.236
										],
										[
											2.752,
											-1.652
										],
										[
											0.286,
											-1.216
										],
										[
											-0.731,
											-1.219
										],
										[
											-1.525,
											-1.92
										],
										[
											-0.968,
											-1.613
										],
										[
											-0.378,
											-0.896
										],
										[
											-0.331,
											-0.551
										],
										[
											-1.188,
											-0.197
										],
										[
											-1.259,
											0.755
										],
										[
											0.873,
											1.454
										],
										[
											0.295,
											0.357
										],
										[
											0.118,
											0.196
										],
										[
											-0.629,
											0.377
										],
										[
											-1.344,
											-2.241
										],
										[
											0,
											0
										],
										[
											0.448,
											-0.858
										],
										[
											1.06,
											-0.637
										],
										[
											0.449,
											0.747
										],
										[
											0.177,
											0.428
										],
										[
											0.118,
											0.197
										],
										[
											2.32,
											-1.393
										],
										[
											0.393,
											-1.172
										],
										[
											-0.637,
											-1.062
										],
										[
											-1.52,
											-1.817
										],
										[
											-0.898,
											-1.495
										],
										[
											-0.44,
											-0.912
										],
										[
											-0.465,
											-1.22
										],
										[
											-0.33,
											-0.551
										],
										[
											-1.26,
											-0.314
										],
										[
											-1.298,
											0.779
										],
										[
											1.322,
											2.202
										],
										[
											0,
											0
										],
										[
											0.142,
											0.236
										],
										[
											-1.651,
											1.793
										],
										[
											0,
											0
										],
										[
											0.106,
											1.113
										],
										[
											1.982,
											3.303
										],
										[
											0.951,
											0.605
										],
										[
											3.201,
											-0.637
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-1.109,
											0.023
										],
										[
											-0.142,
											-0.236
										],
										[
											-0.247,
											-0.547
										],
										[
											-1.251,
											-2.085
										],
										[
											-1.219,
											0.732
										],
										[
											-0.288,
											1.215
										],
										[
											0.237,
											0.392
										],
										[
											0.661,
											0.833
										],
										[
											0.898,
											1.494
										],
										[
											0.859,
											2.053
										],
										[
											0.661,
											1.101
										],
										[
											1.187,
											0.196
										],
										[
											2.32,
											-1.393
										],
										[
											-0.117,
											-0.197
										],
										[
											-0.294,
											-0.359
										],
										[
											-0.402,
											-0.669
										],
										[
											2.674,
											-1.605
										],
										[
											0,
											0
										],
										[
											0.4,
											0.669
										],
										[
											-0.448,
											0.858
										],
										[
											-0.827,
											0.496
										],
										[
											-0.119,
											-0.197
										],
										[
											-0.177,
											-0.429
										],
										[
											-0.898,
											-1.495
										],
										[
											-1.22,
											0.731
										],
										[
											-0.393,
											1.172
										],
										[
											0.307,
											0.51
										],
										[
											0.383,
											0.463
										],
										[
											0.825,
											1.376
										],
										[
											0.213,
											0.354
										],
										[
											0.424,
											0.975
										],
										[
											0.755,
											1.258
										],
										[
											1.258,
											0.315
										],
										[
											2.596,
											-1.558
										],
										[
											0,
											0
										],
										[
											-0.472,
											-0.519
										],
										[
											-0.471,
											-0.787
										],
										[
											0,
											0
										],
										[
											1.556,
											-1.684
										],
										[
											-0.107,
											-1.113
										],
										[
											-1.771,
											-2.949
										],
										[
											-1.378,
											-0.778
										],
										[
											0,
											0
										],
										[
											-1.48,
											0.298
										]
									],
									v: [
										[
											-16.438,
											-19.073
										],
										[
											-18.774,
											-20.158
										],
										[
											-19.359,
											-21.332
										],
										[
											-19.943,
											-22.505
										],
										[
											-25.948,
											-23.154
										],
										[
											-28.207,
											-20.233
										],
										[
											-27.54,
											-16.582
										],
										[
											-24.897,
											-13.114
										],
										[
											-22.454,
											-9.445
										],
										[
											-20.542,
											-5.859
										],
										[
											-18.76,
											-1.953
										],
										[
											-15.987,
											-0.007
										],
										[
											-12.318,
											-0.845
										],
										[
											-10.148,
											-5.117
										],
										[
											-10.768,
											-5.948
										],
										[
											-11.387,
											-6.78
										],
										[
											-11.045,
											-8.349
										],
										[
											-5.016,
											-7.395
										],
										[
											-0.307,
											0.451
										],
										[
											-0.378,
											2.74
										],
										[
											-2.642,
											4.982
										],
										[
											-4.555,
											4.604
										],
										[
											-4.997,
											3.667
										],
										[
											-5.439,
											2.728
										],
										[
											-10.264,
											2.576
										],
										[
											-12.683,
											5.431
										],
										[
											-12.318,
											8.782
										],
										[
											-9.578,
											12.274
										],
										[
											-7.655,
											15.211
										],
										[
											-5.756,
											18.644
										],
										[
											-4.741,
											21.004
										],
										[
											-3.608,
											23.292
										],
										[
											-0.587,
											25.651
										],
										[
											3.247,
											24.956
										],
										[
											5.158,
											19.315
										],
										[
											4.768,
											18.667
										],
										[
											3.846,
											17.534
										],
										[
											5.617,
											13.664
										],
										[
											26.214,
											-8.968
										],
										[
											28.39,
											-13.163
										],
										[
											25.257,
											-19.786
										],
										[
											21.174,
											-25.119
										],
										[
											14.307,
											-25.33
										],
										[
											-13.76,
											-19.557
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									573.14,
									176.791
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 4",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 4,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											-1.131,
											-1.074
										],
										[
											-0.636,
											-0.729
										],
										[
											-0.806,
											-1.017
										],
										[
											-0.466,
											-0.443
										],
										[
											-1.231,
											0.097
										],
										[
											-1.074,
											1.131
										],
										[
											1.33,
											1.262
										],
										[
											0.13,
											0.062
										],
										[
											0.099,
											0.095
										],
										[
											0.066,
											0.063
										],
										[
											0.005,
											0.195
										],
										[
											-1.484,
											1.564
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.331,
											-1.264
										],
										[
											0,
											0
										],
										[
											-2.62,
											1.561
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.349,
											-0.301
										],
										[
											0.531,
											0.505
										],
										[
											0.1,
											0.159
										],
										[
											0.1,
											0.095
										],
										[
											0.2,
											0.19
										],
										[
											1.957,
											-2.062
										],
										[
											0.016,
											-1.249
										],
										[
											-0.999,
											-0.947
										],
										[
											-1.387,
											-1.002
										],
										[
											-0.631,
											-0.6
										],
										[
											-0.872,
											-1.08
										],
										[
											-0.632,
											-0.601
										],
										[
											-1.281,
											0.017
										],
										[
											-1.073,
											1.131
										],
										[
											-0.068,
											1.137
										],
										[
											0.766,
											0.726
										],
										[
											0.642,
											0.389
										],
										[
											0.266,
											0.252
										],
										[
											-2.147,
											2.262
										],
										[
											0,
											0
										],
										[
											-0.897,
											-0.853
										],
										[
											-0.421,
											-0.622
										],
										[
											-0.3,
											-0.285
										],
										[
											-1.118,
											0.142
										],
										[
											-0.884,
											0.931
										],
										[
											0.05,
											1.28
										],
										[
											1.097,
											1.042
										],
										[
											0.961,
											0.786
										],
										[
											0.798,
											0.757
										],
										[
											1.338,
											1.588
										],
										[
											0.731,
											0.693
										],
										[
											0.971,
											-0.122
										],
										[
											1.754,
											-1.117
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.047,
											0.714
										],
										[
											0.831,
											0.79
										],
										[
											1.225,
											0.91
										],
										[
											1.497,
											1.421
										],
										[
											1.705,
											1.934
										],
										[
											0.799,
											0.758
										],
										[
											2.304,
											-2.428
										],
										[
											0.083,
											-1.122
										],
										[
											-0.766,
											-0.726
										],
										[
											-0.628,
											-0.373
										],
										[
											-0.266,
											-0.253
										],
										[
											0.653,
											-1.023
										],
										[
											1.01,
											-1.064
										],
										[
											0,
											0
										],
										[
											0.381,
											-0.27
										],
										[
											0.665,
											0.631
										],
										[
											0.405,
											0.606
										],
										[
											0.266,
											0.252
										],
										[
											1.099,
											-0.126
										],
										[
											0.915,
											-0.965
										],
										[
											-0.002,
											-1.331
										],
										[
											-1.031,
											-0.98
										]
									],
									o: [
										[
											0.858,
											0.626
										],
										[
											0.898,
											0.852
										],
										[
											0.201,
											0.254
										],
										[
											0.635,
											0.794
										],
										[
											0.999,
											0.947
										],
										[
											1.23,
											-0.097
										],
										[
											1.925,
											-2.029
										],
										[
											-0.2,
											-0.19
										],
										[
											-0.1,
											-0.095
										],
										[
											-0.165,
											-0.093
										],
										[
											-0.266,
											-0.253
										],
										[
											-0.11,
											-0.484
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.301,
											2.37
										],
										[
											0,
											0
										],
										[
											1.363,
											1.294
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.758,
											0.798
										],
										[
											-0.795,
											0.637
										],
										[
											-0.034,
											-0.031
										],
										[
											-0.133,
											-0.127
										],
										[
											-0.068,
											-0.127
										],
										[
											-1.365,
											-1.295
										],
										[
											-1.042,
											1.097
										],
										[
											-0.016,
											1.25
										],
										[
											0.631,
											0.6
										],
										[
											1.389,
											1.002
										],
										[
											0.998,
											0.947
										],
										[
											1.307,
											1.621
										],
										[
											1.098,
											1.042
										],
										[
											1.281,
											-0.017
										],
										[
											0.884,
											-0.931
										],
										[
											0.068,
											-1.137
										],
										[
											-0.266,
											-0.253
										],
										[
											-0.643,
											-0.389
										],
										[
											-0.866,
											-0.821
										],
										[
											0,
											0
										],
										[
											2.115,
											-2.228
										],
										[
											0.233,
											0.22
										],
										[
											0.421,
											0.621
										],
										[
											0.765,
											0.725
										],
										[
											1.113,
											-0.142
										],
										[
											1.074,
											-1.131
										],
										[
											-0.05,
											-1.28
										],
										[
											-0.434,
											-0.411
										],
										[
											-3.414,
											-2.733
										],
										[
											-0.766,
											-0.727
										],
										[
											-1.34,
											-1.586
										],
										[
											-0.831,
											-0.79
										],
										[
											-0.969,
											0.123
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.9,
											-1.548
										],
										[
											0.046,
											-0.715
										],
										[
											-0.633,
											-0.6
										],
										[
											-1.82,
											-1.348
										],
										[
											-0.931,
											-0.885
										],
										[
											-1.705,
											-1.935
										],
										[
											-2.461,
											-2.337
										],
										[
											-0.884,
											0.931
										],
										[
											-0.085,
											1.121
										],
										[
											0.299,
											0.284
										],
										[
											0.624,
											0.373
										],
										[
											0.665,
											0.632
										],
										[
											-0.218,
											0.362
										],
										[
											0,
											0
										],
										[
											-1.011,
											1.065
										],
										[
											-0.989,
											0.707
										],
										[
											-0.267,
											-0.253
										],
										[
											-0.406,
											-0.606
										],
										[
											-0.798,
											-0.758
										],
										[
											-1.102,
											0.126
										],
										[
											-1.011,
											1.065
										],
										[
											0.002,
											1.329
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-34.971,
											-1.399
										],
										[
											-31.985,
											1.151
										],
										[
											-29.685,
											3.524
										],
										[
											-28.175,
											5.431
										],
										[
											-26.523,
											7.286
										],
										[
											-23.18,
											8.562
										],
										[
											-19.724,
											6.72
										],
										[
											-18.831,
											1.782
										],
										[
											-19.328,
											1.405
										],
										[
											-19.627,
											1.121
										],
										[
											-19.974,
											0.887
										],
										[
											-20.38,
											0.216
										],
										[
											-18.32,
											-2.855
										],
										[
											-0.464,
											-21.665
										],
										[
											-17.461,
											9.532
										],
										[
											-17.417,
											14.981
										],
										[
											-14.222,
											18.012
										],
										[
											-8.248,
											17.613
										],
										[
											21.99,
											-0.352
										],
										[
											4.133,
											18.459
										],
										[
											2.474,
											20.108
										],
										[
											0.484,
											20.305
										],
										[
											0.281,
											20.019
										],
										[
											-0.068,
											19.687
										],
										[
											-0.469,
											19.211
										],
										[
											-5.451,
											20.363
										],
										[
											-7.039,
											23.883
										],
										[
											-5.565,
											27.178
										],
										[
											-2.536,
											29.581
										],
										[
											0.495,
											31.984
										],
										[
											3.299,
											35.025
										],
										[
											6.208,
											38.356
										],
										[
											9.776,
											39.893
										],
										[
											13.308,
											38.171
										],
										[
											14.735,
											35.068
										],
										[
											13.69,
											32.273
										],
										[
											12.326,
											31.311
										],
										[
											10.964,
											30.349
										],
										[
											12.886,
											25.725
										],
										[
											26.007,
											11.904
										],
										[
											30.526,
											9.84
										],
										[
											31.508,
											11.104
										],
										[
											32.591,
											12.463
										],
										[
											35.412,
											13.338
										],
										[
											38.411,
											11.727
										],
										[
											39.947,
											8.11
										],
										[
											38.227,
											4.627
										],
										[
											36.135,
											2.832
										],
										[
											29.818,
											-2.404
										],
										[
											26.664,
											-5.875
										],
										[
											23.557,
											-9.297
										],
										[
											20.854,
											-10.298
										],
										[
											16.766,
											-8.439
										],
										[
											-4.151,
											4.903
										],
										[
											8.995,
											-17.239
										],
										[
											10.416,
											-20.634
										],
										[
											9.237,
											-22.891
										],
										[
											6.453,
											-25.154
										],
										[
											1.479,
											-29.306
										],
										[
											-2.476,
											-33.534
										],
										[
											-6.23,
											-37.573
										],
										[
											-13.38,
											-37.435
										],
										[
											-14.831,
											-34.356
										],
										[
											-13.812,
											-31.585
										],
										[
											-12.422,
											-30.599
										],
										[
											-11.086,
											-29.661
										],
										[
											-11.068,
											-27.179
										],
										[
											-12.911,
											-25.039
										],
										[
											-26.031,
											-11.218
										],
										[
											-28.12,
											-9.217
										],
										[
											-30.597,
											-9.104
										],
										[
											-31.605,
											-10.392
										],
										[
											-32.612,
											-11.679
										],
										[
											-35.458,
											-12.627
										],
										[
											-38.482,
											-10.991
										],
										[
											-39.995,
											-7.399
										],
										[
											-38.445,
											-3.936
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									527.275,
									105.196
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 5",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 5,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.012,
											-0.045
										],
										[
											-1.157,
											0.285
										],
										[
											0,
											0
										],
										[
											-0.133,
											-0.534
										],
										[
											0.012,
											-0.145
										]
									],
									o: [
										[
											0,
											0
										],
										[
											-0.243,
											-0.602
										],
										[
											-0.155,
											-0.624
										],
										[
											0,
											0
										],
										[
											1.114,
											-0.275
										],
										[
											0.044,
											0.178
										],
										[
											0,
											0
										]
									],
									v: [
										[
											7.087,
											17.722
										],
										[
											0.502,
											4.822
										],
										[
											0.155,
											3.986
										],
										[
											1.659,
											2.623
										],
										[
											5.801,
											1.601
										],
										[
											7.669,
											1.99
										],
										[
											7.717,
											2.475
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.077,
											0.632
										],
										[
											1.381,
											-0.342
										],
										[
											2.284,
											-0.894
										],
										[
											1.826,
											-0.451
										],
										[
											0.969,
											-0.097
										],
										[
											0.624,
											-0.154
										],
										[
											0.538,
											-1.078
										],
										[
											-0.352,
											-1.425
										],
										[
											-1.647,
											0.406
										],
										[
											-0.428,
											0.177
										],
										[
											-0.222,
											0.055
										],
										[
											-0.176,
											-0.713
										],
										[
											2.538,
											-0.626
										],
										[
											0,
											0
										],
										[
											0.689,
											0.682
										],
										[
											0.297,
											1.202
										],
										[
											-0.845,
											0.21
										],
										[
											-0.461,
											0.043
										],
										[
											-0.221,
											0.054
										],
										[
											0.648,
											2.627
										],
										[
											1.005,
											0.721
										],
										[
											1.203,
											-0.296
										],
										[
											2.184,
											-0.915
										],
										[
											1.692,
											-0.417
										],
										[
											1.002,
											-0.153
										],
										[
											1.302,
											-0.087
										],
										[
											0.624,
											-0.153
										],
										[
											0.672,
											-1.111
										],
										[
											-0.363,
											-1.47
										],
										[
											-2.493,
											0.615
										],
										[
											0,
											0
										],
										[
											-0.267,
											0.067
										],
										[
											-1.229,
											-2.106
										],
										[
											0,
											0
										],
										[
											-1.095,
											-0.226
										],
										[
											-3.741,
											0.923
										],
										[
											-0.857,
											0.73
										],
										[
											-0.333,
											3.247
										],
										[
											0,
											0
										],
										[
											-0.067,
											0.301
										],
										[
											-0.845,
											0.209
										],
										[
											-0.594,
											0.077
										],
										[
											-0.267,
											0.065
										],
										[
											0.769,
											3.117
										]
									],
									o: [
										[
											-1.077,
											-0.631
										],
										[
											-0.444,
											0.109
										],
										[
											-0.991,
											0.385
										],
										[
											-1.692,
											0.418
										],
										[
											-2.214,
											0.217
										],
										[
											-1.246,
											0.308
										],
										[
											-0.537,
											1.077
										],
										[
											0.648,
											2.627
										],
										[
											0.223,
											-0.056
										],
										[
											0.429,
											-0.176
										],
										[
											0.758,
											-0.187
										],
										[
											0.747,
											3.027
										],
										[
											0,
											0
										],
										[
											-0.757,
											0.188
										],
										[
											-0.687,
											-0.68
										],
										[
											-0.231,
											-0.935
										],
										[
											0.223,
											-0.054
										],
										[
											0.462,
											-0.043
										],
										[
											1.693,
											-0.418
										],
										[
											-0.341,
											-1.38
										],
										[
											-1.003,
											-0.72
										],
										[
											-0.578,
											0.144
										],
										[
											-0.555,
											0.232
										],
										[
											-1.559,
											0.385
										],
										[
											-0.401,
											0.099
										],
										[
											-1.057,
											0.118
										],
										[
											-1.425,
											0.352
										],
										[
											-0.67,
											1.111
										],
										[
											0.725,
											2.938
										],
										[
											0,
											0
										],
										[
											0.634,
											-0.298
										],
										[
											0.891,
											-0.219
										],
										[
											0,
											0
										],
										[
											1.152,
											1.985
										],
										[
											1.094,
											0.226
										],
										[
											3.339,
											-0.824
										],
										[
											1.148,
											-1.088
										],
										[
											0,
											0
										],
										[
											0.15,
											-1.501
										],
										[
											0.305,
											-1.067
										],
										[
											0.267,
											-0.066
										],
										[
											0.596,
											-0.076
										],
										[
											2.361,
											-0.583
										],
										[
											-0.341,
											-1.382
										]
									],
									v: [
										[
											24.954,
											-25.731
										],
										[
											21.268,
											-26.166
										],
										[
											17.176,
											-24.66
										],
										[
											12.951,
											-23.405
										],
										[
											8.96,
											-22.633
										],
										[
											4.704,
											-22.079
										],
										[
											2.028,
											-20.001
										],
										[
											1.75,
											-16.248
										],
										[
											5.194,
											-12.917
										],
										[
											6.171,
											-13.265
										],
										[
											7.148,
											-13.612
										],
										[
											8.547,
											-12.823
										],
										[
											5.861,
											-7.342
										],
										[
											-3.022,
											-5.15
										],
										[
											-5.189,
											-5.891
										],
										[
											-6.665,
											-8.714
										],
										[
											-5.742,
											-10.431
										],
										[
											-4.716,
											-10.578
										],
										[
											-3.69,
											-10.724
										],
										[
											-2.124,
											-15.292
										],
										[
											-4.142,
											-18.444
										],
										[
											-7.452,
											-19.079
										],
										[
											-11.595,
											-17.49
										],
										[
											-14.967,
											-16.515
										],
										[
											-18.808,
											-15.709
										],
										[
											-21.362,
											-15.432
										],
										[
											-23.882,
											-15.024
										],
										[
											-27.026,
											-12.831
										],
										[
											-27.487,
											-8.96
										],
										[
											-22.66,
											-5.476
										],
										[
											-21.924,
											-5.657
										],
										[
											-20.572,
											-6.204
										],
										[
											-17.393,
											-3.375
										],
										[
											-1.822,
											22.967
										],
										[
											1.548,
											26.282
										],
										[
											8.8,
											25.236
										],
										[
											15.097,
											22.903
										],
										[
											17.32,
											16.402
										],
										[
											20.058,
											-12.122
										],
										[
											20.382,
											-14.824
										],
										[
											22.107,
											-16.737
										],
										[
											23.401,
											-16.951
										],
										[
											24.695,
											-17.163
										],
										[
											27.081,
											-22.712
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									388.965,
									608.9
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 6",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 6,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.014,
											0.484
										],
										[
											0.956,
											-0.451
										],
										[
											0.575,
											-0.45
										],
										[
											0.332,
											-0.158
										],
										[
											0.717,
											0.981
										],
										[
											0.624,
											1.328
										],
										[
											0,
											0
										],
										[
											0.112,
											0.453
										],
										[
											-0.83,
											0.392
										],
										[
											-0.711,
											0.157
										],
										[
											-0.331,
											0.156
										],
										[
											-0.281,
											1.07
										],
										[
											0.567,
											1.203
										],
										[
											1.222,
											0.437
										],
										[
											1.329,
											-0.625
										],
										[
											2.332,
											-1.402
										],
										[
											1.867,
											-0.879
										],
										[
											1.054,
											-0.345
										],
										[
											0,
											0
										],
										[
											0.248,
											-0.117
										],
										[
											0.399,
											-1.252
										],
										[
											-0.626,
											-1.329
										],
										[
											-1.014,
											-0.486
										],
										[
											-0.954,
											0.449
										],
										[
											-0.595,
											0.457
										],
										[
											-0.331,
											0.156
										],
										[
											-1.328,
											-2.822
										],
										[
											0,
											0
										],
										[
											1.119,
											-0.527
										],
										[
											0.733,
											-0.168
										],
										[
											0.333,
											-0.156
										],
										[
											0.272,
											-1.091
										],
										[
											-0.547,
											-1.163
										],
										[
											-3.028,
											1.425
										],
										[
											-2.08,
											1.232
										],
										[
											-1.16,
											0.546
										],
										[
											-1.613,
											0.556
										],
										[
											-0.622,
											0.293
										],
										[
											-0.428,
											1.19
										],
										[
											0.664,
											1.411
										]
									],
									o: [
										[
											-1.014,
											-0.487
										],
										[
											-0.373,
											0.175
										],
										[
											-0.575,
											0.446
										],
										[
											-0.83,
											0.389
										],
										[
											-0.258,
											-0.335
										],
										[
											0,
											0
										],
										[
											-0.625,
											-1.329
										],
										[
											-0.3,
											-1.177
										],
										[
											0.333,
											-0.156
										],
										[
											0.713,
											-0.157
										],
										[
											0.997,
											-0.469
										],
										[
											0.281,
											-1.072
										],
										[
											-0.645,
											-1.369
										],
										[
											-1.221,
											-0.441
										],
										[
											-0.746,
											0.352
										],
										[
											-1.935,
											1.165
										],
										[
											-1.202,
											0.567
										],
										[
											0,
											0
										],
										[
											-0.145,
											0.018
										],
										[
											-1.245,
											0.585
										],
										[
											-0.399,
											1.252
										],
										[
											0.546,
											1.161
										],
										[
											1.014,
											0.484
										],
										[
											0.333,
											-0.157
										],
										[
											0.595,
											-0.459
										],
										[
											1.121,
											-0.528
										],
										[
											0,
											0
										],
										[
											1.309,
											2.78
										],
										[
											-0.332,
											0.156
										],
										[
											-0.732,
											0.166
										],
										[
											-0.954,
											0.449
										],
										[
											-0.273,
											1.09
										],
										[
											1.426,
											3.028
										],
										[
											0.706,
											-0.332
										],
										[
											2.081,
											-1.234
										],
										[
											1.454,
											-0.684
										],
										[
											2.4,
											-0.825
										],
										[
											1.37,
											-0.645
										],
										[
											0.428,
											-1.189
										],
										[
											-0.547,
											-1.161
										]
									],
									v: [
										[
											19.002,
											7.281
										],
										[
											16.048,
											7.227
										],
										[
											14.627,
											8.163
										],
										[
											13.267,
											9.07
										],
										[
											10.948,
											8.183
										],
										[
											9.623,
											5.69
										],
										[
											1.504,
											-11.55
										],
										[
											0.398,
											-14.223
										],
										[
											1.192,
											-16.575
										],
										[
											2.757,
											-17.045
										],
										[
											4.322,
											-17.516
										],
										[
											6.239,
											-19.825
										],
										[
											5.811,
											-23.235
										],
										[
											3.013,
											-25.947
										],
										[
											-0.81,
											-25.669
										],
										[
											-5.426,
											-23.039
										],
										[
											-11.13,
											-19.973
										],
										[
											-14.517,
											-18.606
										],
										[
											-18.671,
											-17.258
										],
										[
											-19.261,
											-17.056
										],
										[
											-21.727,
											-14.298
										],
										[
											-21.387,
											-10.428
										],
										[
											-19.045,
											-7.957
										],
										[
											-16.092,
											-7.903
										],
										[
											-14.701,
											-8.824
										],
										[
											-13.31,
											-9.745
										],
										[
											-9.637,
											-6.305
										],
										[
											-1.519,
											10.936
										],
										[
											-1.235,
											15.897
										],
										[
											-2.832,
											16.383
										],
										[
											-4.428,
											16.868
										],
										[
											-6.267,
											19.179
										],
										[
											-5.855,
											22.559
										],
										[
											0.828,
											24.963
										],
										[
											5.007,
											22.615
										],
										[
											9.87,
											19.944
										],
										[
											14.469,
											18.083
										],
										[
											19.002,
											16.405
										],
										[
											21.698,
											13.653
										],
										[
											21.344,
											9.751
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									448.832,
									591.46
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 7",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 7,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.087,
											0.288
										],
										[
											0.855,
											-0.618
										],
										[
											0.482,
											-0.548
										],
										[
											0.297,
											-0.215
										],
										[
											0.886,
											0.832
										],
										[
											0.859,
											1.19
										],
										[
											0,
											0
										],
										[
											0.194,
											0.424
										],
										[
											-0.743,
											0.538
										],
										[
											-0.689,
											0.299
										],
										[
											-0.297,
											0.214
										],
										[
											-0.079,
											1.104
										],
										[
											0.779,
											1.076
										],
										[
											1.261,
											0.219
										],
										[
											1.19,
											-0.861
										],
										[
											2.376,
											-2.113
										],
										[
											1.896,
											-1.371
										],
										[
											2.049,
											-1.199
										],
										[
											0.966,
											-0.699
										],
										[
											0.238,
											-1.276
										],
										[
											-0.86,
											-1.19
										],
										[
											-2.193,
											1.586
										],
										[
											-0.686,
											0.694
										],
										[
											-0.409,
											0.296
										],
										[
											-0.643,
											-0.497
										],
										[
											-0.431,
											-0.595
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.07,
											-0.334
										],
										[
											0.706,
											-0.512
										],
										[
											0.672,
											0.928
										],
										[
											0,
											0
										],
										[
											0.081,
											0.112
										],
										[
											0.055,
											0.074
										],
										[
											1.97,
											-1.425
										],
										[
											-1.64,
											-2.267
										],
										[
											-1.237,
											-1.396
										],
										[
											-0.538,
											-0.744
										],
										[
											-0.516,
											-0.872
										],
										[
											-0.27,
											-0.372
										],
										[
											-2.043,
											1.478
										],
										[
											1.048,
											1.45
										],
										[
											0.172,
											0.158
										],
										[
											0.08,
											0.112
										],
										[
											0.081,
											0.112
										],
										[
											-1.561,
											1.129
										],
										[
											-0.833,
											-1.152
										],
										[
											0,
											0
										],
										[
											0.134,
											-0.635
										],
										[
											1.45,
											-1.047
										],
										[
											0,
											0
										],
										[
											0.914,
											1.263
										],
										[
											0.425,
											0.821
										],
										[
											0.295,
											0.408
										],
										[
											1.316,
											0.292
										],
										[
											1.263,
											-0.913
										],
										[
											0.19,
											-1.383
										],
										[
											-0.94,
											-1.301
										],
										[
											-1.037,
											-1.004
										],
										[
											-0.431,
											-0.594
										],
										[
											-0.665,
											-1.388
										],
										[
											-0.484,
											-0.669
										],
										[
											-1.857,
											1.343
										],
										[
											-0.42,
											0.358
										],
										[
											0,
											0
										],
										[
											-1.263,
											0.913
										],
										[
											-1.013,
											0.788
										],
										[
											-1.263,
											0.914
										],
										[
											-3.022,
											1.846
										],
										[
											-0.855,
											0.618
										],
										[
											1.962,
											2.713
										]
									],
									o: [
										[
											-1.086,
											-0.29
										],
										[
											-0.334,
											0.242
										],
										[
											-0.482,
											0.545
										],
										[
											-0.744,
											0.537
										],
										[
											-0.315,
											-0.28
										],
										[
											0,
											0
										],
										[
											-0.86,
											-1.19
										],
										[
											-0.513,
											-1.102
										],
										[
											0.261,
											-0.188
										],
										[
											0.689,
											-0.3
										],
										[
											0.893,
											-0.645
										],
										[
											0.079,
											-1.105
										],
										[
											-0.888,
											-1.227
										],
										[
											-1.263,
											-0.22
										],
										[
											-0.297,
											0.216
										],
										[
											-1.034,
											0.919
										],
										[
											-0.966,
											0.698
										],
										[
											-2.047,
											1.199
										],
										[
											-1.263,
											0.914
										],
										[
											-0.238,
											1.275
										],
										[
											1.828,
											2.527
										],
										[
											0.409,
											-0.295
										],
										[
											0.686,
											-0.695
										],
										[
											0.818,
											-0.59
										],
										[
											0.354,
											0.255
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.457,
											0.631
										],
										[
											-0.069,
											0.333
										],
										[
											-1.411,
											1.021
										],
										[
											0,
											0
										],
										[
											-0.054,
											-0.074
										],
										[
											-0.07,
											-0.175
										],
										[
											-1.504,
											-2.082
										],
										[
											-1.932,
											1.397
										],
										[
											0.536,
											0.742
										],
										[
											1.237,
											1.398
										],
										[
											0.941,
											1.301
										],
										[
											0.517,
											0.87
										],
										[
											1.396,
											1.932
										],
										[
											1.748,
											-1.263
										],
										[
											-0.054,
											-0.075
										],
										[
											-0.134,
											-0.187
										],
										[
											-0.505,
											-0.541
										],
										[
											-0.779,
											-1.078
										],
										[
											1.003,
											-0.726
										],
										[
											0,
											0
										],
										[
											1.129,
											1.561
										],
										[
											-0.135,
											0.635
										],
										[
											0,
											0
										],
										[
											-1.859,
											1.344
										],
										[
											-0.296,
											-0.411
										],
										[
											-0.578,
											-1.113
										],
										[
											-0.995,
											-1.375
										],
										[
											-1.316,
											-0.294
										],
										[
											-1.263,
											0.914
										],
										[
											-0.19,
											1.381
										],
										[
											0.43,
											0.594
										],
										[
											1.037,
											1.004
										],
										[
											0.563,
											0.781
										],
										[
											0.442,
											0.924
										],
										[
											1.182,
											1.635
										],
										[
											-0.074,
											0.053
										],
										[
											0,
											0
										],
										[
											1.767,
											-1.393
										],
										[
											3.095,
											-2.295
										],
										[
											1.534,
											-1.166
										],
										[
											1.821,
											-1.317
										],
										[
											2.003,
											-1.223
										],
										[
											2.75,
											-1.988
										],
										[
											-0.753,
											-1.041
										]
									],
									v: [
										[
											20.362,
											-1.159
										],
										[
											17.451,
											-0.666
										],
										[
											16.227,
											0.517
										],
										[
											15.057,
											1.659
										],
										[
											12.615,
											1.217
										],
										[
											10.852,
											-0.987
										],
										[
											-0.317,
											-16.428
										],
										[
											-1.898,
											-18.85
										],
										[
											-1.552,
											-21.308
										],
										[
											-0.129,
											-22.04
										],
										[
											1.349,
											-22.812
										],
										[
											2.806,
											-25.436
										],
										[
											1.755,
											-28.708
										],
										[
											-1.468,
											-30.877
										],
										[
											-5.146,
											-29.916
										],
										[
											-9.156,
											-26.422
										],
										[
											-13.551,
											-22.988
										],
										[
											-18.073,
											-20.143
										],
										[
											-22.594,
											-17.298
										],
										[
											-24.846,
											-14.013
										],
										[
											-23.913,
											-10.316
										],
										[
											-17.882,
											-8.904
										],
										[
											-16.24,
											-10.389
										],
										[
											-14.596,
											-11.875
										],
										[
											-12.406,
											-12.016
										],
										[
											-11.231,
											-10.742
										],
										[
											-9.805,
											-8.888
										],
										[
											-7.466,
											-5.654
										],
										[
											-6.887,
											-4.206
										],
										[
											-8.051,
											-2.939
										],
										[
											-11.177,
											-2.801
										],
										[
											-11.62,
											-3.415
										],
										[
											-11.822,
											-3.694
										],
										[
											-12.008,
											-4.068
										],
										[
											-17.22,
											-5.053
										],
										[
											-17.659,
											0.444
										],
										[
											-14.997,
											3.654
										],
										[
											-12.336,
											6.866
										],
										[
											-10.15,
											10.124
										],
										[
											-8.97,
											11.989
										],
										[
											-3.809,
											12.67
										],
										[
											-2.76,
											8.601
										],
										[
											-3.099,
											8.252
										],
										[
											-3.421,
											7.805
										],
										[
											-4.299,
											6.827
										],
										[
											-3.125,
											3.518
										],
										[
											-0.372,
											4.157
										],
										[
											1.523,
											6.777
										],
										[
											3.014,
											10.071
										],
										[
											0.638,
											12.596
										],
										[
											-5.438,
											16.99
										],
										[
											-9.596,
											17.112
										],
										[
											-10.677,
											15.263
										],
										[
											-11.987,
											12.982
										],
										[
											-15.453,
											10.48
										],
										[
											-19.322,
											11.409
										],
										[
											-21.502,
											14.853
										],
										[
											-20.375,
											18.877
										],
										[
											-18.172,
											21.275
										],
										[
											-15.971,
											23.674
										],
										[
											-14.129,
											26.926
										],
										[
											-12.74,
											29.317
										],
										[
											-8.179,
											29.754
										],
										[
											-7.661,
											29.296
										],
										[
											-4.518,
											26.598
										],
										[
											0.027,
											23.14
										],
										[
											6.19,
											18.514
										],
										[
											10.388,
											15.394
										],
										[
											17.652,
											10.649
										],
										[
											21.94,
											7.888
										],
										[
											23.121,
											0.836
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									503.21,
									563.142
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 8",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 8,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											-0.035,
											-0.031
										],
										[
											-0.782,
											0.899
										],
										[
											0,
											0
										],
										[
											-0.415,
											-0.362
										],
										[
											-0.073,
											-0.125
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.545,
											-0.353
										],
										[
											-0.485,
											-0.422
										],
										[
											0,
											0
										],
										[
											0.753,
											-0.865
										],
										[
											0.137,
											0.12
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											5.055,
											10.88
										],
										[
											4.29,
											10.398
										],
										[
											4.737,
											8.415
										],
										[
											7.537,
											5.198
										],
										[
											9.289,
											4.443
										],
										[
											9.607,
											4.81
										],
										[
											17.861,
											17.646
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0.117,
											0.284
										],
										[
											-0.572,
											0.656
										],
										[
											-0.443,
											0.404
										],
										[
											-0.18,
											0.207
										],
										[
											2.421,
											2.108
										],
										[
											1.244,
											-0.103
										],
										[
											0.934,
											-1.073
										],
										[
											1.354,
											-2.045
										],
										[
											1.236,
											-1.42
										],
										[
											0.736,
											-0.636
										],
										[
											0.422,
											-0.485
										],
										[
											-0.181,
											-1.192
										],
										[
											-1.107,
											-0.964
										],
										[
											-1.113,
											1.28
										],
										[
											-0.249,
											0.39
										],
										[
											-0.15,
											0.172
										],
										[
											-0.553,
											-0.481
										],
										[
											1.715,
											-1.972
										],
										[
											0,
											0
										],
										[
											0.954,
											0.161
										],
										[
											0.933,
											0.813
										],
										[
											-0.572,
											0.658
										],
										[
											-0.353,
											0.301
										],
										[
											-0.15,
											0.172
										],
										[
											2.041,
											1.776
										],
										[
											1.236,
											0.011
										],
										[
											0.813,
											-0.934
										],
										[
											1.259,
											-2.005
										],
										[
											1.145,
											-1.316
										],
										[
											0.731,
											-0.701
										],
										[
											1.016,
											-0.818
										],
										[
											0.422,
											-0.485
										],
										[
											-0.091,
											-1.296
										],
										[
											-1.142,
											-0.992
										],
										[
											-1.686,
											1.936
										],
										[
											0,
											0
										],
										[
											-0.18,
											0.208
										],
										[
											-2.216,
											-1.016
										],
										[
											0,
											0
										],
										[
											-1.025,
											0.445
										],
										[
											-2.529,
											2.905
										],
										[
											-0.281,
											1.093
										],
										[
											1.595,
											2.847
										]
									],
									o: [
										[
											-0.741,
											-1.316
										],
										[
											-0.365,
											-1.048
										],
										[
											0.181,
											-0.209
										],
										[
											0.444,
											-0.404
										],
										[
											1.596,
											-1.835
										],
										[
											-1.073,
											-0.934
										],
										[
											-1.245,
											0.102
										],
										[
											-0.301,
											0.346
										],
										[
											-0.588,
											0.886
										],
										[
											-1.143,
											1.314
										],
										[
											-1.687,
											1.45
										],
										[
											-0.843,
											0.968
										],
										[
											0.18,
											1.19
										],
										[
											2.042,
											1.776
										],
										[
											0.152,
											-0.173
										],
										[
											0.249,
											-0.392
										],
										[
											0.512,
											-0.59
										],
										[
											2.353,
											2.047
										],
										[
											0,
											0
										],
										[
											-0.511,
											0.588
										],
										[
											-0.954,
											-0.162
										],
										[
											-0.727,
											-0.633
										],
										[
											0.151,
											-0.173
										],
										[
											0.353,
											-0.301
										],
										[
											1.145,
											-1.315
										],
										[
											-1.073,
											-0.935
										],
										[
											-1.236,
											-0.012
										],
										[
											-0.391,
											0.449
										],
										[
											-0.322,
											0.51
										],
										[
											-1.053,
											1.21
										],
										[
											-0.271,
											0.312
										],
										[
											-0.795,
											0.706
										],
										[
											-0.962,
											1.107
										],
										[
											0.089,
											1.293
										],
										[
											2.285,
											1.988
										],
										[
											0,
											0
										],
										[
											0.348,
											-0.609
										],
										[
											0.603,
											-0.692
										],
										[
											0,
											0
										],
										[
											2.083,
											0.959
										],
										[
											1.025,
											-0.444
										],
										[
											2.258,
											-2.596
										],
										[
											0.314,
											-1.549
										],
										[
											0,
											0
										]
									],
									v: [
										[
											11.309,
											-14.227
										],
										[
											10.021,
											-16.625
										],
										[
											10.331,
											-19.182
										],
										[
											11.267,
											-20.101
										],
										[
											12.202,
											-21.018
										],
										[
											10.963,
											-26.93
										],
										[
											7.488,
											-28.177
										],
										[
											4.221,
											-26.414
										],
										[
											1.739,
											-22.828
										],
										[
											-0.996,
											-19.37
										],
										[
											-3.815,
											-16.445
										],
										[
											-6.978,
											-13.542
										],
										[
											-7.972,
											-10.305
										],
										[
											-6.042,
											-7.073
										],
										[
											-1.309,
											-6.331
										],
										[
											-0.709,
											-7.176
										],
										[
											-0.11,
											-8.021
										],
										[
											1.488,
											-8.182
										],
										[
											2.444,
											-2.153
										],
										[
											-3.563,
											4.75
										],
										[
											-5.761,
											5.389
										],
										[
											-8.593,
											3.929
										],
										[
											-8.825,
											1.993
										],
										[
											-8.07,
											1.284
										],
										[
											-7.315,
											0.573
										],
										[
											-8.661,
											-4.064
										],
										[
											-12.124,
											-5.482
										],
										[
											-15.197,
											-4.098
										],
										[
											-17.672,
											-0.416
										],
										[
											-19.872,
											2.323
										],
										[
											-22.549,
											5.19
										],
										[
											-24.48,
											6.883
										],
										[
											-26.307,
											8.669
										],
										[
											-27.616,
											12.271
										],
										[
											-25.77,
											15.701
										],
										[
											-19.815,
											15.776
										],
										[
											-19.319,
											15.206
										],
										[
											-18.526,
											13.981
										],
										[
											-14.299,
											14.466
										],
										[
											13.59,
											27.062
										],
										[
											18.252,
											27.834
										],
										[
											23.584,
											22.81
										],
										[
											27.393,
											17.276
										],
										[
											25.472,
											10.681
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									540.284,
									510.769
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 9",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 9,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											3.02,
											1.441
										],
										[
											1.092,
											-0.267
										],
										[
											0.455,
											-0.953
										],
										[
											0.161,
											-0.712
										],
										[
											0.158,
											-0.332
										],
										[
											1.174,
											0.305
										],
										[
											1.324,
											0.63
										],
										[
											0,
											0
										],
										[
											0.373,
											0.28
										],
										[
											-0.395,
											0.827
										],
										[
											-0.452,
											0.572
										],
										[
											-0.157,
											0.332
										],
										[
											0.459,
											1.007
										],
										[
											1.2,
											0.573
										],
										[
											1.264,
											-0.415
										],
										[
											0.613,
											-1.283
										],
										[
											0,
											0
										],
										[
											0.672,
											-1.408
										],
										[
											0.497,
											-0.83
										],
										[
											0.718,
											-1.08
										],
										[
											0.276,
											-0.58
										],
										[
											-0.473,
											-1.14
										],
										[
											-1.408,
											-0.672
										],
										[
											-0.789,
											1.656
										],
										[
											-0.019,
											0.143
										],
										[
											-0.059,
											0.125
										],
										[
											-0.039,
											0.083
										],
										[
											-0.184,
											0.065
										],
										[
											-1.946,
											-0.928
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.79,
											-1.656
										],
										[
											0,
											0
										],
										[
											-2.294,
											-2.009
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.394,
											0.238
										],
										[
											-0.316,
											0.661
										],
										[
											-0.121,
											0.145
										],
										[
											-0.06,
											0.124
										],
										[
											-0.119,
											0.248
										],
										[
											2.566,
											1.224
										],
										[
											1.193,
											-0.372
										],
										[
											0.592,
											-1.242
										],
										[
											0.525,
											-1.631
										],
										[
											0.375,
											-0.787
										],
										[
											0.757,
											-1.164
										],
										[
											0.376,
											-0.787
										],
										[
											-0.412,
											-1.214
										],
										[
											-1.407,
											-0.671
										],
										[
											-1.102,
											0.286
										],
										[
											-0.454,
											0.952
										],
										[
											-0.171,
											0.731
										],
										[
											-0.158,
											0.331
										],
										[
											-2.815,
											-1.343
										],
										[
											0,
											0
										],
										[
											0.533,
											-1.117
										],
										[
											0.46,
											-0.594
										],
										[
											0.178,
											-0.373
										],
										[
											-0.481,
											-1.019
										],
										[
											-1.159,
											-0.554
										],
										[
											-1.202,
											0.444
										],
										[
											-0.652,
											1.365
										],
										[
											-0.451,
											1.156
										],
										[
											-0.473,
											0.993
										],
										[
											-1.096,
											1.763
										],
										[
											-0.435,
											0.909
										],
										[
											0.417,
											0.885
										],
										[
											1.604,
											1.323
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.694,
											0.176
										],
										[
											-0.494,
											1.033
										],
										[
											-0.487,
											1.444
										],
										[
											-0.889,
											1.863
										],
										[
											-1.313,
											2.22
										],
										[
											-0.473,
											0.993
										]
									],
									o: [
										[
											-1.159,
											-0.554
										],
										[
											-1.092,
											0.267
										],
										[
											-0.177,
											0.372
										],
										[
											-0.161,
											0.71
										],
										[
											-0.395,
											0.828
										],
										[
											-0.413,
											-0.095
										],
										[
											0,
											0
										],
										[
											-1.326,
											-0.632
										],
										[
											-0.978,
											-0.722
										],
										[
											0.159,
											-0.332
										],
										[
											0.451,
											-0.573
										],
										[
											0.474,
											-0.993
										],
										[
											-0.46,
											-1.008
										],
										[
											-1.325,
											-0.632
										],
										[
											-1.264,
											0.412
										],
										[
											0,
											0
										],
										[
											-0.33,
											1.011
										],
										[
											-0.534,
											1.117
										],
										[
											-0.18,
											0.269
										],
										[
											-0.559,
											0.85
										],
										[
											-0.592,
											1.242
										],
										[
											0.472,
											1.14
										],
										[
											2.525,
											1.204
										],
										[
											0.119,
											-0.249
										],
										[
											0.059,
											-0.124
										],
										[
											0.038,
											-0.186
										],
										[
											0.159,
											-0.332
										],
										[
											0.426,
											-0.255
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-2.656,
											-0.505
										],
										[
											0,
											0
										],
										[
											-0.809,
											1.696
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.994,
											-0.474
										],
										[
											-0.852,
											-0.558
										],
										[
											0.02,
											-0.041
										],
										[
											0.079,
											-0.165
										],
										[
											0.1,
											-0.104
										],
										[
											0.81,
											-1.699
										],
										[
											-1.366,
											-0.652
										],
										[
											-1.194,
											0.37
										],
										[
											-0.375,
											0.787
										],
										[
											-0.523,
											1.63
										],
										[
											-0.593,
											1.242
										],
										[
											-1.137,
											1.744
										],
										[
											-0.651,
											1.366
										],
										[
											0.412,
											1.213
										],
										[
											1.158,
											0.553
										],
										[
											1.102,
											-0.287
										],
										[
											0.159,
											-0.331
										],
										[
											0.171,
											-0.732
										],
										[
											0.513,
											-1.077
										],
										[
											0,
											0
										],
										[
											2.773,
											1.324
										],
										[
											-0.138,
											0.289
										],
										[
											-0.461,
											0.592
										],
										[
											-0.453,
											0.952
										],
										[
											0.48,
											1.016
										],
										[
											1.406,
											0.671
										],
										[
											1.202,
											-0.443
										],
										[
											0.257,
											-0.539
										],
										[
											1.544,
											-4.092
										],
										[
											0.455,
											-0.952
										],
										[
											1.095,
											-1.765
										],
										[
											0.494,
											-1.036
										],
										[
											-0.416,
											-0.884
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											1.751,
											0.378
										],
										[
											0.694,
											-0.177
										],
										[
											0.375,
											-0.788
										],
										[
											0.719,
											-2.147
										],
										[
											0.554,
											-1.159
										],
										[
											1.313,
											-2.219
										],
										[
											1.462,
											-3.063
										]
									],
									v: [
										[
											31.5,
											-24.395
										],
										[
											28.122,
											-24.825
										],
										[
											25.802,
											-22.997
										],
										[
											25.293,
											-21.372
										],
										[
											24.815,
											-19.809
										],
										[
											22.46,
											-19.027
										],
										[
											19.854,
											-20.117
										],
										[
											2.656,
											-28.324
										],
										[
											0.107,
											-29.694
										],
										[
											-0.766,
											-32.015
										],
										[
											0.148,
											-33.371
										],
										[
											1.06,
											-34.728
										],
										[
											1.083,
											-37.728
										],
										[
											-1.407,
											-40.098
										],
										[
											-5.29,
											-40.424
										],
										[
											-8.105,
											-37.882
										],
										[
											-9.445,
											-33.794
										],
										[
											-10.948,
											-30.166
										],
										[
											-12.495,
											-27.246
										],
										[
											-13.841,
											-25.22
										],
										[
											-15.094,
											-23.074
										],
										[
											-15.274,
											-19.501
										],
										[
											-12.456,
											-16.783
										],
										[
											-7.484,
											-17.46
										],
										[
											-7.279,
											-18.048
										],
										[
											-7.1,
											-18.421
										],
										[
											-6.985,
											-18.823
										],
										[
											-6.472,
											-19.418
										],
										[
											-2.915,
											-18.406
										],
										[
											20.492,
											-7.236
										],
										[
											-14.43,
											-13.762
										],
										[
											-19.599,
											-12.036
										],
										[
											-21.495,
											-8.062
										],
										[
											-19.269,
											-2.504
										],
										[
											7.161,
											20.702
										],
										[
											-16.247,
											9.534
										],
										[
											-18.328,
											8.464
										],
										[
											-19.131,
											6.633
										],
										[
											-18.922,
											6.352
										],
										[
											-18.714,
											5.917
										],
										[
											-18.385,
											5.389
										],
										[
											-21.021,
											1.006
										],
										[
											-24.859,
											0.585
										],
										[
											-27.537,
											3.003
										],
										[
											-28.886,
											6.628
										],
										[
											-30.234,
											10.253
										],
										[
											-32.26,
											13.861
										],
										[
											-34.529,
											17.655
										],
										[
											-34.888,
											21.524
										],
										[
											-32.159,
											24.35
										],
										[
											-28.767,
											24.75
										],
										[
											-26.432,
											22.891
										],
										[
											-25.938,
											21.298
										],
										[
											-25.444,
											19.704
										],
										[
											-20.453,
											20.103
										],
										[
											-3.255,
											28.31
										],
										[
											0.107,
											31.972
										],
										[
											-0.792,
											33.297
										],
										[
											-1.751,
											34.745
										],
										[
											-1.711,
											37.699
										],
										[
											0.747,
											40.053
										],
										[
											4.661,
											40.396
										],
										[
											7.443,
											37.684
										],
										[
											8.504,
											35.141
										],
										[
											11.531,
											27.514
										],
										[
											13.857,
											23.441
										],
										[
											16.153,
											19.43
										],
										[
											16.268,
											16.55
										],
										[
											13.237,
											13.237
										],
										[
											-5.914,
											-2.535
										],
										[
											19.206,
											3.126
										],
										[
											22.874,
											3.428
										],
										[
											24.656,
											1.611
										],
										[
											25.948,
											-1.737
										],
										[
											28.359,
											-7.751
										],
										[
											31.159,
											-12.819
										],
										[
											33.839,
											-17.637
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									591.133,
									450.03
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 10",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 10,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.468,
											-0.291
										],
										[
											0.141,
											-0.033
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.039,
											-0.024
										],
										[
											-0.628,
											-1.013
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.156,
											0.096
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.497,
											-0.416
										],
										[
											0.547,
											-0.339
										],
										[
											0,
											0
										],
										[
											0.606,
											0.973
										]
									],
									v: [
										[
											-3.427,
											11.776
										],
										[
											-3.873,
											11.972
										],
										[
											-18.569,
											16.085
										],
										[
											-8.334,
											5.835
										],
										[
											-7.648,
											5.246
										],
										[
											-5.886,
											6.257
										],
										[
											-3.634,
											9.88
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.307,
											0.028
										],
										[
											-0.459,
											-0.739
										],
										[
											-0.256,
											-0.541
										],
										[
											-0.146,
											-0.234
										],
										[
											-2.725,
											1.694
										],
										[
											-0.267,
											1.22
										],
										[
											0.752,
											1.207
										],
										[
											1.556,
											1.895
										],
										[
											0.994,
											1.598
										],
										[
											0.391,
											0.891
										],
										[
											0.341,
											0.545
										],
										[
											1.192,
											0.178
										],
										[
											1.247,
											-0.775
										],
										[
											-0.895,
											-1.441
										],
										[
											-0.301,
											-0.353
										],
										[
											-0.121,
											-0.194
										],
										[
											0.623,
											-0.388
										],
										[
											1.38,
											2.22
										],
										[
											0,
											0
										],
										[
											-0.435,
											0.865
										],
										[
											-1.052,
											0.654
										],
										[
											-0.459,
											-0.738
										],
										[
											-0.184,
											-0.425
										],
										[
											-0.12,
											-0.194
										],
										[
											-2.298,
											1.429
										],
										[
											-0.375,
											1.178
										],
										[
											0.653,
											1.052
										],
										[
											1.546,
											1.793
										],
										[
											0.921,
											1.48
										],
										[
											0.454,
											0.906
										],
										[
											0.484,
											1.211
										],
										[
											0.339,
											0.546
										],
										[
											1.264,
											0.295
										],
										[
											1.286,
											-0.8
										],
										[
											-1.355,
											-2.181
										],
										[
											0,
											0
										],
										[
											-0.145,
											-0.234
										],
										[
											1.623,
											-1.819
										],
										[
											0,
											0
										],
										[
											-0.124,
											-1.109
										],
										[
											-2.033,
											-3.273
										],
										[
											-0.961,
											-0.589
										],
										[
											-3.191,
											0.686
										],
										[
											0,
											0
										]
									],
									o: [
										[
											1.108,
											-0.041
										],
										[
											0.146,
											0.234
										],
										[
											0.257,
											0.544
										],
										[
											1.283,
											2.065
										],
										[
											1.209,
											-0.751
										],
										[
											0.268,
											-1.219
										],
										[
											-0.242,
											-0.389
										],
										[
											-0.674,
											-0.822
										],
										[
											-0.92,
											-1.48
										],
										[
											-0.891,
											-2.038
										],
										[
											-0.677,
											-1.09
										],
										[
											-1.19,
											-0.178
										],
										[
											-2.298,
											1.428
										],
										[
											0.121,
											0.195
										],
										[
											0.3,
											0.354
										],
										[
											0.412,
											0.663
										],
										[
											-2.649,
											1.646
										],
										[
											0,
											0
										],
										[
											-0.412,
											-0.662
										],
										[
											0.434,
											-0.864
										],
										[
											0.818,
											-0.509
										],
										[
											0.122,
											0.196
										],
										[
											0.184,
											0.426
										],
										[
											0.92,
											1.482
										],
										[
											1.208,
											-0.75
										],
										[
											0.375,
											-1.178
										],
										[
											-0.315,
											-0.506
										],
										[
											-0.391,
											-0.459
										],
										[
											-0.847,
											-1.362
										],
										[
											-0.218,
											-0.351
										],
										[
											-0.44,
											-0.968
										],
										[
											-0.774,
											-1.246
										],
										[
											-1.264,
											-0.294
										],
										[
											-2.57,
											1.597
										],
										[
											0,
											0
										],
										[
											0.479,
											0.512
										],
										[
											0.485,
											0.779
										],
										[
											0,
											0
										],
										[
											-1.531,
											1.709
										],
										[
											0.124,
											1.112
										],
										[
											1.816,
											2.921
										],
										[
											1.389,
											0.757
										],
										[
											0,
											0
										],
										[
											1.475,
											-0.321
										]
									],
									v: [
										[
											16.493,
											18.673
										],
										[
											18.845,
											19.721
										],
										[
											19.448,
											20.885
										],
										[
											20.051,
											22.05
										],
										[
											26.064,
											22.605
										],
										[
											28.278,
											19.649
										],
										[
											27.554,
											16.009
										],
										[
											24.857,
											12.582
										],
										[
											22.358,
											8.952
										],
										[
											20.391,
											5.395
										],
										[
											18.547,
											1.519
										],
										[
											15.745,
											-0.384
										],
										[
											12.089,
											0.511
										],
										[
											9.986,
											4.816
										],
										[
											10.619,
											5.638
										],
										[
											11.251,
											6.46
										],
										[
											10.934,
											8.034
										],
										[
											4.89,
											7.173
										],
										[
											0.06,
											-0.598
										],
										[
											0.095,
											-2.887
										],
										[
											2.325,
											-5.164
										],
										[
											4.241,
											-4.818
										],
										[
											4.699,
											-3.886
										],
										[
											5.156,
											-2.956
										],
										[
											9.983,
											-2.878
										],
										[
											12.357,
											-5.77
										],
										[
											11.938,
											-9.115
										],
										[
											9.146,
											-12.563
										],
										[
											7.177,
											-15.471
										],
										[
											5.225,
											-18.874
										],
										[
											4.173,
											-21.217
										],
										[
											3.004,
											-23.488
										],
										[
											-0.052,
											-25.8
										],
										[
											-3.876,
											-25.043
										],
										[
											-5.698,
											-19.375
										],
										[
											-5.298,
											-18.732
										],
										[
											-4.361,
											-17.614
										],
										[
											-6.069,
											-13.717
										],
										[
											-26.311,
											9.232
										],
										[
											-28.422,
											13.46
										],
										[
											-25.186,
											20.036
										],
										[
											-21.02,
											25.303
										],
										[
											-14.151,
											25.408
										],
										[
											13.822,
											19.198
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									73.276,
									470.172
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 11",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 11,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.605,
											0.408
										],
										[
											0.252,
											0.268
										],
										[
											-0.71,
											0.984
										],
										[
											-1.069,
											1.005
										],
										[
											0,
											0
										],
										[
											-0.396,
											0.248
										],
										[
											-0.627,
											-0.668
										],
										[
											-0.369,
											-0.628
										],
										[
											-0.252,
											-0.267
										],
										[
											-1.106,
											0.063
										],
										[
											-0.969,
											0.911
										],
										[
											-0.04,
											1.297
										],
										[
											1.005,
											1.07
										],
										[
											2.053,
											1.785
										],
										[
											1.413,
											1.504
										],
										[
											0.653,
											0.896
										],
										[
											0,
											0
										],
										[
											0.188,
											0.201
										],
										[
											1.315,
											-0.007
										],
										[
											1.07,
											-1.007
										],
										[
											0.148,
											-1.114
										],
										[
											-0.722,
											-0.768
										],
										[
											-0.618,
											-0.425
										],
										[
											-0.25,
											-0.267
										],
										[
											2.274,
											-2.137
										],
										[
											0,
											0
										],
										[
											0.848,
											0.902
										],
										[
											0.385,
											0.644
										],
										[
											0.252,
											0.269
										],
										[
											1.122,
											-0.079
										],
										[
											0.937,
											-0.879
										],
										[
											-2.292,
											-2.439
										],
										[
											-1.816,
											-1.598
										],
										[
											-0.88,
											-0.936
										],
										[
											-1.029,
											-1.363
										],
										[
											-0.471,
											-0.502
										],
										[
											-1.264,
											-0.039
										],
										[
											-1.136,
											1.068
										],
										[
											-0.147,
											1.115
										],
										[
											0.724,
											0.77
										]
									],
									o: [
										[
											-0.602,
											-0.409
										],
										[
											-0.628,
											-0.669
										],
										[
											0.239,
											-0.349
										],
										[
											0,
											0
										],
										[
											1.07,
											-1.006
										],
										[
											1.027,
											-0.648
										],
										[
											0.251,
											0.268
										],
										[
											0.37,
											0.629
										],
										[
											0.753,
											0.803
										],
										[
											1.106,
											-0.063
										],
										[
											1.103,
											-1.036
										],
										[
											0.041,
											-1.297
										],
										[
											-0.566,
											-0.602
										],
										[
											-1.706,
											-1.479
										],
										[
											-0.91,
											-0.968
										],
										[
											0,
											0
										],
										[
											-0.061,
											-0.131
										],
										[
											-0.943,
											-1.003
										],
										[
											-1.314,
											0.008
										],
										[
											-0.936,
											0.878
										],
										[
											-0.148,
											1.115
										],
										[
											0.252,
											0.267
										],
										[
											0.621,
											0.424
										],
										[
											0.848,
											0.903
										],
										[
											0,
											0
										],
										[
											-2.239,
											2.104
										],
										[
											-0.251,
											-0.268
										],
										[
											-0.386,
											-0.645
										],
										[
											-0.722,
											-0.768
										],
										[
											-1.122,
											0.078
										],
										[
											-2.439,
											2.292
										],
										[
											0.535,
											0.568
										],
										[
											1.817,
											1.597
										],
										[
											1.099,
											1.17
										],
										[
											1.526,
											2.027
										],
										[
											1.036,
											1.103
										],
										[
											1.264,
											0.039
										],
										[
											0.936,
											-0.879
										],
										[
											0.149,
											-1.115
										],
										[
											-0.282,
											-0.3
										]
									],
									v: [
										[
											-3.18,
											16.531
										],
										[
											-4.462,
											15.517
										],
										[
											-4.337,
											13.039
										],
										[
											-2.375,
											11.007
										],
										[
											11.513,
											-2.041
										],
										[
											13.714,
											-3.92
										],
										[
											16.194,
											-3.891
										],
										[
											17.126,
											-2.548
										],
										[
											18.059,
											-1.205
										],
										[
											20.846,
											-0.095
										],
										[
											23.957,
											-1.556
										],
										[
											25.672,
											-5.055
										],
										[
											24.227,
											-8.604
										],
										[
											20.298,
											-12.183
										],
										[
											15.618,
											-16.66
										],
										[
											13.273,
											-19.458
										],
										[
											10.706,
											-22.994
										],
										[
											10.333,
											-23.492
										],
										[
											6.948,
											-24.985
										],
										[
											3.372,
											-23.465
										],
										[
											1.746,
											-20.475
										],
										[
											2.607,
											-17.649
										],
										[
											3.913,
											-16.611
										],
										[
											5.219,
											-15.573
										],
										[
											3.081,
											-11.015
										],
										[
											-10.807,
											2.033
										],
										[
											-15.438,
											3.835
										],
										[
											-16.392,
											2.467
										],
										[
											-17.348,
											1.098
										],
										[
											-20.113,
											0.064
										],
										[
											-23.201,
											1.5
										],
										[
											-23.422,
											8.599
										],
										[
											-19.897,
											11.848
										],
										[
											-15.854,
											15.649
										],
										[
											-12.663,
											19.447
										],
										[
											-9.667,
											23.239
										],
										[
											-6.216,
											24.953
										],
										[
											-2.616,
											23.41
										],
										[
											-0.99,
											20.419
										],
										[
											-1.85,
											17.593
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									104.395,
									525.49
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 12",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 12,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.186,
											0.866
										],
										[
											2.745,
											1.607
										],
										[
											1.889,
											1.38
										],
										[
											1.774,
											1.577
										],
										[
											0.963,
											0.704
										],
										[
											1.287,
											-0.168
										],
										[
											0.866,
											-1.186
										],
										[
											-2.187,
											-1.595
										],
										[
											-0.872,
											-0.439
										],
										[
											-0.407,
											-0.298
										],
										[
											0.276,
											-0.765
										],
										[
											0.433,
											-0.594
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.339,
											-0.037
										],
										[
											0.704,
											0.515
										],
										[
											-0.675,
											0.926
										],
										[
											0,
											0
										],
										[
											-0.082,
											0.112
										],
										[
											-0.054,
											0.074
										],
										[
											1.964,
											1.433
										],
										[
											1.649,
											-2.261
										],
										[
											0.948,
											-1.609
										],
										[
											0.541,
											-0.742
										],
										[
											0.67,
											-0.761
										],
										[
											0.27,
											-0.37
										],
										[
											-2.037,
											-1.486
										],
										[
											-1.054,
											1.445
										],
										[
											-0.098,
											0.212
										],
										[
											-0.081,
											0.11
										],
										[
											-0.081,
											0.111
										],
										[
											-1.556,
											-1.136
										],
										[
											0.837,
											-1.148
										],
										[
											0,
											0
										],
										[
											0.648,
											-0.068
										],
										[
											1.446,
											1.054
										],
										[
											0,
											0
										],
										[
											-0.919,
											1.26
										],
										[
											-0.652,
											0.659
										],
										[
											-0.298,
											0.407
										],
										[
											0.129,
											1.342
										],
										[
											1.259,
											0.92
										],
										[
											1.372,
											-0.247
										],
										[
											0.947,
											-1.297
										],
										[
											0.635,
											-1.296
										],
										[
											0.433,
											-0.593
										],
										[
											1.114,
											-1.06
										],
										[
											0.486,
											-0.667
										],
										[
											-1.853,
											-1.351
										],
										[
											-0.472,
											-0.288
										],
										[
											0,
											0
										],
										[
											-1.258,
											-0.92
										],
										[
											-1.063,
											-0.72
										],
										[
											-1.261,
											-0.919
										],
										[
											-2.69,
											-2.304
										],
										[
											-0.852,
											-0.621
										],
										[
											-1.974,
											2.705
										],
										[
											0.061,
											1.123
										],
										[
											0.852,
											0.623
										],
										[
											0.671,
											0.289
										],
										[
											0.297,
											0.216
										],
										[
											-0.517,
											1.099
										],
										[
											-0.866,
											1.186
										],
										[
											0,
											0
										],
										[
											-0.344,
											0.316
										],
										[
											-0.74,
											-0.541
										],
										[
											-0.498,
											-0.563
										],
										[
											-0.297,
											-0.217
										],
										[
											-1.074,
											0.266
										],
										[
											-0.783,
											1.075
										],
										[
											0.182,
											1.268
										]
									],
									o: [
										[
											-0.296,
											-0.215
										],
										[
											-1.192,
											-0.7
										],
										[
											-0.962,
											-0.702
										],
										[
											-1.772,
											-1.577
										],
										[
											-1.259,
											-0.919
										],
										[
											-1.286,
											0.169
										],
										[
											-1.838,
											2.518
										],
										[
											0.407,
											0.298
										],
										[
											0.873,
											0.437
										],
										[
											0.815,
											0.595
										],
										[
											-0.133,
											0.416
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.459,
											0.629
										],
										[
											-0.338,
											0.037
										],
										[
											-1.408,
											-1.026
										],
										[
											0,
											0
										],
										[
											0.055,
											-0.074
										],
										[
											0.145,
											-0.121
										],
										[
											1.515,
											-2.075
										],
										[
											-1.926,
											-1.405
										],
										[
											-0.54,
											0.741
										],
										[
											-0.946,
											1.608
										],
										[
											-0.947,
											1.296
										],
										[
											-0.668,
											0.76
										],
										[
											-1.406,
											1.926
										],
										[
											1.741,
											1.271
										],
										[
											0.055,
											-0.075
										],
										[
											0.135,
											-0.186
										],
										[
											0.359,
											-0.648
										],
										[
											0.785,
											-1.075
										],
										[
											1,
											0.73
										],
										[
											0,
											0
										],
										[
											-1.135,
											1.556
										],
										[
											-0.645,
											0.069
										],
										[
											0,
											0
										],
										[
											-1.852,
											-1.352
										],
										[
											0.298,
											-0.408
										],
										[
											0.879,
											-0.892
										],
										[
											1,
											-1.37
										],
										[
											-0.126,
											-1.343
										],
										[
											-1.26,
											-0.918
										],
										[
											-1.373,
											0.246
										],
										[
											-0.432,
											0.592
										],
										[
											-0.634,
											1.298
										],
										[
											-0.567,
											0.777
										],
										[
											-0.743,
											0.707
										],
										[
											-1.19,
											1.63
										],
										[
											-0.073,
											-0.053
										],
										[
											0,
											0
										],
										[
											1.87,
											1.251
										],
										[
											3.139,
											2.234
										],
										[
											1.583,
											1.099
										],
										[
											1.814,
											1.326
										],
										[
											1.781,
											1.527
										],
										[
											2.742,
											2.002
										],
										[
											0.757,
											-1.037
										],
										[
											-0.06,
											-1.123
										],
										[
											-0.333,
											-0.243
										],
										[
											-0.668,
											-0.289
										],
										[
											-0.741,
											-0.54
										],
										[
											0.169,
											-0.387
										],
										[
											0,
											0
										],
										[
											0.866,
											-1.186
										],
										[
											0.889,
											-0.829
										],
										[
											0.26,
											0.189
										],
										[
											0.498,
											0.562
										],
										[
											0.888,
											0.649
										],
										[
											1.074,
											-0.267
										],
										[
											0.893,
											-1.223
										],
										[
											-0.182,
											-1.269
										]
									],
									v: [
										[
											28.818,
											-12.726
										],
										[
											24.256,
											-15.46
										],
										[
											19.633,
											-18.579
										],
										[
											15.529,
											-21.999
										],
										[
											11.426,
											-25.421
										],
										[
											7.606,
											-26.548
										],
										[
											4.378,
											-24.517
										],
										[
											4.9,
											-18.346
										],
										[
											6.82,
											-17.242
										],
										[
											8.739,
											-16.139
										],
										[
											9.55,
											-14.1
										],
										[
											8.704,
											-12.589
										],
										[
											7.38,
											-10.659
										],
										[
											5.027,
											-7.436
										],
										[
											3.829,
											-6.438
										],
										[
											2.265,
											-7.153
										],
										[
											1.167,
											-10.083
										],
										[
											1.614,
											-10.694
										],
										[
											1.817,
											-10.972
										],
										[
											2.115,
											-11.266
										],
										[
											1.441,
											-16.526
										],
										[
											-3.921,
											-15.245
										],
										[
											-6.153,
											-11.721
										],
										[
											-8.385,
											-8.197
										],
										[
											-10.808,
											-5.111
										],
										[
											-12.217,
											-3.414
										],
										[
											-11.27,
											1.706
										],
										[
											-7.076,
											1.445
										],
										[
											-6.848,
											1.016
										],
										[
											-6.524,
											0.572
										],
										[
											-5.864,
											-0.566
										],
										[
											-2.354,
											-0.474
										],
										[
											-2.111,
											2.343
										],
										[
											-4.018,
											4.956
										],
										[
											-6.691,
											7.391
										],
										[
											-9.826,
											5.911
										],
										[
											-15.882,
											1.491
										],
										[
											-17.282,
											-2.427
										],
										[
											-15.857,
											-4.027
										],
										[
											-14.093,
											-5.977
										],
										[
											-12.786,
											-10.047
										],
										[
											-14.864,
											-13.439
										],
										[
											-18.813,
											-14.447
										],
										[
											-22.292,
											-12.131
										],
										[
											-23.893,
											-9.297
										],
										[
											-25.494,
											-6.461
										],
										[
											-28.016,
											-3.705
										],
										[
											-29.861,
											-1.644
										],
										[
											-28.868,
											2.828
										],
										[
											-28.271,
											3.179
										],
										[
											-24.735,
											5.333
										],
										[
											-20.042,
											8.59
										],
										[
											-13.738,
											13.021
										],
										[
											-9.473,
											16.048
										],
										[
											-2.715,
											21.492
										],
										[
											1.235,
											24.715
										],
										[
											8.308,
											23.66
										],
										[
											9.352,
											20.42
										],
										[
											7.984,
											17.803
										],
										[
											6.48,
											17.004
										],
										[
											5.032,
											16.245
										],
										[
											4.697,
											13.786
										],
										[
											6.249,
											11.427
										],
										[
											17.485,
											-3.965
										],
										[
											19.299,
											-6.217
										],
										[
											21.742,
											-6.648
										],
										[
											22.878,
											-5.521
										],
										[
											24.071,
											-4.353
										],
										[
											27.015,
											-3.779
										],
										[
											29.803,
											-5.79
										],
										[
											30.869,
											-9.526
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									146.237,
									567.141
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 13",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 13,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0.215,
											-0.506
										],
										[
											0.097,
											-0.108
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.019,
											-0.042
										],
										[
											-1.097,
											-0.465
										],
										[
											0,
											0
										]
									],
									o: [
										[
											-0.071,
											0.168
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.167,
											-0.627
										],
										[
											0.253,
											-0.591
										],
										[
											0,
											0
										],
										[
											1.055,
											0.448
										]
									],
									v: [
										[
											-4.111,
											5.957
										],
										[
											-4.363,
											6.372
										],
										[
											-14.02,
											18.19
										],
										[
											-11.542,
											3.919
										],
										[
											-11.32,
											3.042
										],
										[
											-9.296,
											2.854
										],
										[
											-5.37,
											4.525
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.309,
											0.556
										],
										[
											2.363,
											0.657
										],
										[
											1.732,
											0.736
										],
										[
											0.833,
											0.504
										],
										[
											0.592,
											0.252
										],
										[
											1.077,
											-0.541
										],
										[
											0.574,
											-1.351
										],
										[
											-1.561,
											-0.663
										],
										[
											-0.448,
											-0.116
										],
										[
											-0.21,
											-0.09
										],
										[
											0.286,
											-0.675
										],
										[
											2.405,
											1.023
										],
										[
											0,
											0
										],
										[
											0.141,
											0.957
										],
										[
											-0.485,
											1.139
										],
										[
											-0.8,
											-0.34
										],
										[
											-0.394,
											-0.242
										],
										[
											-0.211,
											-0.09
										],
										[
											-1.058,
											2.489
										],
										[
											0.371,
											1.179
										],
										[
											1.14,
											0.484
										],
										[
											2.297,
											0.577
										],
										[
											1.605,
											0.682
										],
										[
											0.893,
											0.479
										],
										[
											1.093,
											0.714
										],
										[
											0.591,
											0.252
										],
										[
											1.204,
											-0.485
										],
										[
											0.592,
											-1.393
										],
										[
											-2.363,
											-1.004
										],
										[
											0,
											0
										],
										[
											-0.253,
											-0.108
										],
										[
											0.281,
											-2.421
										],
										[
											0,
											0
										],
										[
											-0.74,
											-0.836
										],
										[
											-3.545,
											-1.508
										],
										[
											-1.126,
											0.069
										],
										[
											-2.215,
											2.396
										],
										[
											0,
											0
										],
										[
											-0.235,
											0.199
										],
										[
											-0.801,
											-0.342
										],
										[
											-0.521,
											-0.297
										],
										[
											-0.252,
											-0.107
										],
										[
											-1.256,
											2.954
										],
										[
											0.482,
											1.151
										]
									],
									o: [
										[
											-0.422,
											-0.179
										],
										[
											-1.025,
											-0.285
										],
										[
											-1.603,
											-0.681
										],
										[
											-1.9,
											-1.155
										],
										[
											-1.18,
											-0.502
										],
										[
											-1.076,
											0.538
										],
										[
											-1.058,
											2.49
										],
										[
											0.212,
											0.09
										],
										[
											0.45,
											0.116
										],
										[
											0.718,
											0.306
										],
										[
											-1.22,
											2.87
										],
										[
											0,
											0
										],
										[
											-0.716,
											-0.305
										],
										[
											-0.142,
											-0.958
										],
										[
											0.377,
											-0.887
										],
										[
											0.213,
											0.091
										],
										[
											0.396,
											0.243
										],
										[
											1.604,
											0.682
										],
										[
											0.557,
											-1.309
										],
										[
											-0.37,
											-1.179
										],
										[
											-0.547,
											-0.233
										],
										[
											-0.584,
											-0.149
										],
										[
											-1.477,
											-0.628
										],
										[
											-0.381,
											-0.162
										],
										[
											-0.916,
											-0.539
										],
										[
											-1.351,
											-0.573
										],
										[
											-1.202,
											0.485
										],
										[
											-1.184,
											2.786
										],
										[
											0,
											0
										],
										[
											0.687,
											0.143
										],
										[
											0.845,
											0.359
										],
										[
											0,
											0
										],
										[
											-0.268,
											2.277
										],
										[
											0.74,
											0.839
										],
										[
											3.166,
											1.345
										],
										[
											1.57,
											-0.18
										],
										[
											0,
											0
										],
										[
											1.021,
											-1.112
										],
										[
											0.883,
											-0.67
										],
										[
											0.253,
											0.107
										],
										[
											0.522,
											0.296
										],
										[
											2.238,
											0.952
										],
										[
											0.556,
											-1.309
										],
										[
											-0.482,
											-1.153
										]
									],
									v: [
										[
											23.669,
											-8.398
										],
										[
											19.492,
											-9.651
										],
										[
											15.359,
											-11.183
										],
										[
											11.704,
											-12.961
										],
										[
											7.967,
											-15.073
										],
										[
											4.58,
											-15.016
										],
										[
											2.104,
											-12.182
										],
										[
											2.859,
											-7.451
										],
										[
											3.849,
											-7.142
										],
										[
											4.839,
											-6.834
										],
										[
											5.485,
											-5.363
										],
										[
											0.047,
											-2.592
										],
										[
											-8.375,
											-6.172
										],
										[
											-9.662,
											-8.064
										],
										[
											-9.148,
											-11.209
										],
										[
											-7.381,
											-12.029
										],
										[
											-6.471,
											-11.529
										],
										[
											-5.561,
											-11.031
										],
										[
											-1.568,
											-13.743
										],
										[
											-1.29,
											-17.475
										],
										[
											-3.556,
											-19.97
										],
										[
											-7.823,
											-21.187
										],
										[
											-11.106,
											-22.432
										],
										[
											-14.66,
											-24.092
										],
										[
											-16.869,
											-25.406
										],
										[
											-19.13,
											-26.591
										],
										[
											-22.961,
											-26.724
										],
										[
											-25.653,
											-23.906
										],
										[
											-23.884,
											-18.221
										],
										[
											-23.188,
											-17.925
										],
										[
											-21.778,
											-17.549
										],
										[
											-20.933,
											-13.38
										],
										[
											-24.295,
											17.037
										],
										[
											-23.589,
											21.708
										],
										[
											-17.161,
											25.228
										],
										[
											-10.722,
											27.141
										],
										[
											-5.044,
											23.276
										],
										[
											14.269,
											2.109
										],
										[
											16.152,
											0.141
										],
										[
											18.679,
											-0.352
										],
										[
											19.842,
											0.254
										],
										[
											21.004,
											0.859
										],
										[
											26.244,
											-2.146
										],
										[
											26.355,
											-5.836
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									212.217,
									591.879
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 14",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 14,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.41,
											0.186
										],
										[
											0,
											0
										],
										[
											1.547,
											0.204
										],
										[
											0.943,
											0.216
										],
										[
											1.25,
											0.35
										],
										[
											0.638,
											0.083
										],
										[
											0.938,
											-0.802
										],
										[
											0.205,
											-1.546
										],
										[
											-1.819,
											-0.239
										],
										[
											-0.142,
											0.026
										],
										[
											-0.135,
											-0.017
										],
										[
											-0.09,
											-0.011
										],
										[
											-0.119,
											-0.155
										],
										[
											0.282,
											-2.138
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											1.82,
											0.24
										],
										[
											0,
											0
										],
										[
											1.202,
											-2.803
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.104,
											0.449
										],
										[
											-0.726,
											-0.095
										],
										[
											-0.175,
											-0.07
										],
										[
											-0.137,
											-0.017
										],
										[
											-0.274,
											-0.036
										],
										[
											-0.372,
											2.819
										],
										[
											0.721,
											1.02
										],
										[
											1.364,
											0.18
										],
										[
											1.713,
											-0.006
										],
										[
											0.864,
											0.114
										],
										[
											1.34,
											0.361
										],
										[
											0.863,
											0.114
										],
										[
											1.027,
											-0.766
										],
										[
											0.204,
											-1.547
										],
										[
											-0.613,
											-0.96
										],
										[
											-1.047,
											-0.138
										],
										[
											-0.747,
											0.063
										],
										[
											-0.364,
											-0.048
										],
										[
											0.409,
											-3.093
										],
										[
											0,
											0
										],
										[
											1.228,
											0.162
										],
										[
											0.708,
											0.255
										],
										[
											0.409,
											0.054
										],
										[
											0.82,
											-0.772
										],
										[
											0.168,
											-1.273
										],
										[
											-0.793,
											-1.007
										],
										[
											-1.501,
											-0.198
										],
										[
											-1.24,
											-0.072
										],
										[
											-1.091,
											-0.144
										],
										[
											-2.015,
											-0.497
										],
										[
											-0.999,
											-0.131
										],
										[
											-0.712,
											0.669
										],
										[
											-0.763,
											1.934
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.382,
											-0.605
										],
										[
											-1.136,
											-0.15
										],
										[
											-1.525,
											-0.017
										],
										[
											-2.045,
											-0.27
										],
										[
											-2.517,
											-0.563
										],
										[
											-1.092,
											-0.144
										],
										[
											-0.438,
											3.319
										],
										[
											0.592,
											0.956
										],
										[
											1.046,
											0.138
										],
										[
											0.727,
											-0.067
										],
										[
											0.364,
											0.048
										],
										[
											0.072,
											1.212
										],
										[
											-0.192,
											1.454
										],
										[
											0,
											0
										],
										[
											-0.15,
											0.443
										],
										[
											-0.909,
											-0.12
										],
										[
											-0.683,
											-0.253
										],
										[
											-0.364,
											-0.048
										],
										[
											-0.815,
											0.747
										],
										[
											-0.172,
											1.318
										],
										[
											0.784,
											1.075
										]
									],
									o: [
										[
											0,
											0
										],
										[
											-1.062,
											-0.002
										],
										[
											-1.227,
											-0.162
										],
										[
											-0.312,
											-0.088
										],
										[
											-0.982,
											-0.268
										],
										[
											-1.363,
											-0.18
										],
										[
											-0.939,
											0.801
										],
										[
											-0.365,
											2.773
										],
										[
											0.272,
											0.036
										],
										[
											0.137,
											0.018
										],
										[
											0.188,
											-0.021
										],
										[
											0.365,
											0.048
										],
										[
											0.374,
											0.327
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.341,
											-2.682
										],
										[
											0,
											0
										],
										[
											-1.864,
											-0.246
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.143,
											-1.091
										],
										[
											0.268,
											-0.982
										],
										[
											0.047,
											0.007
										],
										[
											0.182,
											0.024
										],
										[
											0.13,
											0.063
										],
										[
											1.865,
											0.245
										],
										[
											0.198,
											-1.5
										],
										[
											-0.722,
											-1.02
										],
										[
											-0.864,
											-0.113
										],
										[
											-1.712,
											0.005
										],
										[
											-1.364,
											-0.18
										],
										[
											-2.011,
											-0.542
										],
										[
											-1.501,
											-0.198
										],
										[
											-1.026,
											0.767
										],
										[
											-0.168,
											1.272
										],
										[
											0.613,
											0.96
										],
										[
											0.363,
											0.048
										],
										[
											0.749,
											-0.065
										],
										[
											1.182,
											0.156
										],
										[
											0,
											0
										],
										[
											-0.402,
											3.046
										],
										[
											-0.318,
											-0.041
										],
										[
											-0.705,
											-0.256
										],
										[
											-1.045,
											-0.138
										],
										[
											-0.818,
											0.77
										],
										[
											-0.204,
											1.545
										],
										[
											0.793,
											1.006
										],
										[
											0.591,
											0.078
										],
										[
											4.369,
											0.204
										],
										[
											1.046,
											0.138
										],
										[
											2.016,
											0.498
										],
										[
											1.137,
											0.15
										],
										[
											0.713,
											-0.669
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.182,
											1.781
										],
										[
											0.384,
											0.605
										],
										[
											0.864,
											0.114
										],
										[
											2.264,
											0.02
										],
										[
											1.275,
											0.168
										],
										[
											2.517,
											0.564
										],
										[
											3.365,
											0.444
										],
										[
											0.167,
											-1.273
										],
										[
											-0.589,
											-0.957
										],
										[
											-0.409,
											-0.053
										],
										[
											-0.725,
											0.065
										],
										[
											-0.909,
											-0.119
										],
										[
											-0.037,
											-0.421
										],
										[
											0,
											0
										],
										[
											0.192,
											-1.455
										],
										[
											0.384,
											-1.152
										],
										[
											0.364,
											0.048
										],
										[
											0.685,
											0.251
										],
										[
											1.091,
											0.144
										],
										[
											0.817,
											-0.749
										],
										[
											0.193,
											-1.455
										],
										[
											-0.783,
											-1.075
										]
									],
									v: [
										[
											33.609,
											-19.213
										],
										[
											29.309,
											-19.224
										],
										[
											25.393,
											-19.532
										],
										[
											22.138,
											-20.1
										],
										[
											19.796,
											-20.756
										],
										[
											17.367,
											-21.283
										],
										[
											13.914,
											-20.351
										],
										[
											12.2,
											-16.83
										],
										[
											14.382,
											-12.31
										],
										[
											15.004,
											-12.297
										],
										[
											15.413,
											-12.244
										],
										[
											15.83,
											-12.258
										],
										[
											16.554,
											-11.954
										],
										[
											16.691,
											-8.258
										],
										[
											13.302,
											17.455
										],
										[
											8.717,
											-17.775
										],
										[
											5.478,
											-22.157
										],
										[
											1.113,
											-22.732
										],
										[
											-3.486,
											-18.898
										],
										[
											-17.389,
											13.409
										],
										[
											-14,
											-12.304
										],
										[
											-13.626,
											-14.614
										],
										[
											-12.134,
											-15.944
										],
										[
											-11.801,
											-15.83
										],
										[
											-11.323,
											-15.768
										],
										[
											-10.717,
											-15.618
										],
										[
											-7.365,
											-19.478
										],
										[
											-8.15,
											-23.26
										],
										[
											-11.277,
											-25.06
										],
										[
											-15.142,
											-25.222
										],
										[
											-19.007,
											-25.384
										],
										[
											-23.063,
											-26.197
										],
										[
											-27.374,
											-27.181
										],
										[
											-31.165,
											-26.328
										],
										[
											-33.01,
											-22.858
										],
										[
											-32.34,
											-19.509
										],
										[
											-29.851,
											-17.862
										],
										[
											-28.184,
											-17.885
										],
										[
											-26.514,
											-17.909
										],
										[
											-25.354,
											-13.037
										],
										[
											-27.843,
											5.856
										],
										[
											-30.287,
											10.182
										],
										[
											-31.825,
											9.737
										],
										[
											-33.498,
											9.274
										],
										[
											-36.295,
											10.224
										],
										[
											-37.775,
											13.29
										],
										[
											-36.891,
											17.119
										],
										[
											-33.452,
											18.925
										],
										[
											-30.706,
											19.149
										],
										[
											-22.517,
											19.672
										],
										[
											-17.925,
											20.624
										],
										[
											-13.4,
											21.568
										],
										[
											-10.626,
											20.789
										],
										[
											-8.41,
											16.883
										],
										[
											0.671,
											-6.207
										],
										[
											3.049,
											19.434
										],
										[
											3.895,
											23.015
										],
										[
											6.176,
											24.148
										],
										[
											9.758,
											24.343
										],
										[
											16.223,
											24.779
										],
										[
											21.908,
											25.874
										],
										[
											27.319,
											26.935
										],
										[
											33.022,
											22.621
										],
										[
											32.387,
											19.277
										],
										[
											29.932,
											17.634
										],
										[
											28.229,
											17.653
										],
										[
											26.595,
											17.68
										],
										[
											25.124,
											15.682
										],
										[
											25.356,
											12.868
										],
										[
											27.846,
											-6.025
										],
										[
											28.361,
											-8.872
										],
										[
											30.299,
											-10.42
										],
										[
											31.87,
											-9.97
										],
										[
											33.442,
											-9.52
										],
										[
											36.303,
											-10.426
										],
										[
											37.785,
											-13.527
										],
										[
											36.9,
											-17.322
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									282.852,
									617.017
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 15",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 15,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0.034,
											0.03
										],
										[
											0.768,
											-0.912
										],
										[
											0,
											0
										],
										[
											0.421,
											0.355
										],
										[
											0.075,
											0.124
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.55,
											0.345
										],
										[
											0.491,
											0.415
										],
										[
											0,
											0
										],
										[
											-0.739,
											0.877
										],
										[
											-0.141,
											-0.118
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-5.016,
											-11.002
										],
										[
											-4.242,
											-10.531
										],
										[
											-4.66,
											-8.542
										],
										[
											-7.41,
											-5.282
										],
										[
											-9.148,
											-4.499
										],
										[
											-9.473,
											-4.862
										],
										[
											-17.926,
											-17.569
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											-0.122,
											-0.283
										],
										[
											0.561,
											-0.666
										],
										[
											0.436,
											-0.411
										],
										[
											0.177,
											-0.21
										],
										[
											-2.454,
											-2.069
										],
										[
											-1.241,
											0.122
										],
										[
											-0.916,
											1.088
										],
										[
											-1.322,
											2.066
										],
										[
											-1.212,
											1.438
										],
										[
											-0.727,
											0.647
										],
										[
											-0.413,
											0.491
										],
										[
											0.199,
											1.189
										],
										[
											1.122,
											0.947
										],
										[
											1.093,
											-1.297
										],
										[
											0.243,
											-0.394
										],
										[
											0.149,
											-0.175
										],
										[
											0.562,
											0.474
										],
										[
											-1.685,
											1.998
										],
										[
											0,
											0
										],
										[
											-0.958,
											-0.147
										],
										[
											-0.946,
											-0.798
										],
										[
											0.561,
											-0.666
										],
										[
											0.348,
											-0.306
										],
										[
											0.147,
											-0.175
										],
										[
											-2.068,
											-1.744
										],
										[
											-1.236,
											0.008
										],
										[
											-0.799,
											0.947
										],
										[
											-1.228,
											2.024
										],
										[
											-1.125,
											1.333
										],
										[
											-0.72,
											0.712
										],
										[
											-1.003,
											0.835
										],
										[
											-0.415,
											0.491
										],
										[
											0.11,
											1.293
										],
										[
											1.157,
											0.975
										],
										[
											1.656,
											-1.963
										],
										[
											0,
											0
										],
										[
											0.178,
											-0.21
										],
										[
											2.232,
											0.982
										],
										[
											0,
											0
										],
										[
											1.019,
											-0.46
										],
										[
											2.483,
											-2.945
										],
										[
											0.264,
											-1.095
										],
										[
											-1.639,
											-2.822
										]
									],
									o: [
										[
											0.762,
											1.303
										],
										[
											0.381,
											1.042
										],
										[
											-0.177,
											0.21
										],
										[
											-0.437,
											0.412
										],
										[
											-1.567,
											1.859
										],
										[
											1.088,
											0.917
										],
										[
											1.244,
											-0.122
										],
										[
											0.295,
											-0.35
										],
										[
											0.575,
											-0.895
										],
										[
											1.123,
											-1.333
										],
										[
											1.663,
											-1.477
										],
										[
											0.828,
											-0.981
										],
										[
											-0.2,
											-1.186
										],
										[
											-2.069,
											-1.744
										],
										[
											-0.148,
											0.176
										],
										[
											-0.243,
											0.395
										],
										[
											-0.503,
											0.596
										],
										[
											-2.383,
											-2.01
										],
										[
											0,
											0
										],
										[
											0.502,
											-0.596
										],
										[
											0.955,
											0.146
										],
										[
											0.737,
											0.621
										],
										[
											-0.148,
											0.176
										],
										[
											-0.348,
											0.306
										],
										[
											-1.124,
											1.333
										],
										[
											1.086,
											0.916
										],
										[
											1.237,
											-0.007
										],
										[
											0.384,
											-0.456
										],
										[
											0.313,
											-0.514
										],
										[
											1.033,
											-1.227
										],
										[
											0.267,
											-0.316
										],
										[
											0.785,
											-0.717
										],
										[
											0.946,
											-1.122
										],
										[
											-0.11,
											-1.292
										],
										[
											-2.314,
											-1.952
										],
										[
											0,
											0
										],
										[
											-0.338,
											0.614
										],
										[
											-0.591,
											0.702
										],
										[
											0,
											0
										],
										[
											-2.097,
											-0.927
										],
										[
											-1.018,
											0.462
										],
										[
											-2.218,
											2.629
										],
										[
											-0.289,
											1.556
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-10.879,
											14.2
										],
										[
											-9.552,
											16.577
										],
										[
											-9.823,
											19.139
										],
										[
											-10.743,
											20.072
										],
										[
											-11.665,
											21.004
										],
										[
											-10.335,
											26.896
										],
										[
											-6.841,
											28.088
										],
										[
											-3.602,
											26.274
										],
										[
											-1.176,
											22.65
										],
										[
											1.504,
											19.152
										],
										[
											4.28,
											16.182
										],
										[
											7.396,
											13.231
										],
										[
											8.34,
											9.977
										],
										[
											6.359,
											6.777
										],
										[
											1.616,
											6.107
										],
										[
											1.03,
											6.962
										],
										[
											0.441,
											7.818
										],
										[
											-1.154,
											8.002
										],
										[
											-2.202,
											1.989
										],
										[
											3.697,
											-5.006
										],
										[
											5.885,
											-5.68
										],
										[
											8.738,
											-4.264
										],
										[
											9.001,
											-2.333
										],
										[
											8.258,
											-1.61
										],
										[
											7.513,
											-0.888
										],
										[
											8.931,
											3.727
										],
										[
											12.415,
											5.09
										],
										[
											15.467,
											3.659
										],
										[
											17.885,
											-0.062
										],
										[
											20.042,
											-2.833
										],
										[
											22.673,
											-5.742
										],
										[
											24.577,
											-7.467
										],
										[
											26.376,
											-9.279
										],
										[
											27.63,
											-12.901
										],
										[
											25.729,
											-16.303
										],
										[
											19.776,
											-16.285
										],
										[
											19.288,
											-15.706
										],
										[
											18.513,
											-14.469
										],
										[
											14.28,
											-14.89
										],
										[
											-13.802,
											-27.049
										],
										[
											-18.475,
											-27.75
										],
										[
											-23.728,
											-22.64
										],
										[
											-27.452,
											-17.051
										],
										[
											-25.427,
											-10.485
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									100.646,
									135.811
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 16",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 16,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-1.366,
											-0.751
										],
										[
											-1.106,
											0.204
										],
										[
											-0.509,
											0.926
										],
										[
											-0.202,
											0.701
										],
										[
											-0.177,
											0.323
										],
										[
											-1.155,
											-0.372
										],
										[
											-1.286,
											-0.707
										],
										[
											0,
											0
										],
										[
											-0.356,
											-0.301
										],
										[
											0.442,
											-0.804
										],
										[
											0.483,
											-0.546
										],
										[
											0.176,
											-0.322
										],
										[
											-0.401,
											-1.031
										],
										[
											-1.165,
											-0.641
										],
										[
											-1.246,
											0.363
										],
										[
											-0.707,
											1.287
										],
										[
											-1.062,
											2.504
										],
										[
											-0.994,
											1.808
										],
										[
											-0.651,
											0.899
										],
										[
											0,
											0
										],
										[
											-0.132,
											0.241
										],
										[
											0.414,
											1.248
										],
										[
											1.287,
											0.708
										],
										[
											1.105,
											-0.203
										],
										[
											0.506,
											-0.925
										],
										[
											0.214,
											-0.719
										],
										[
											0.176,
											-0.321
										],
										[
											2.734,
											1.501
										],
										[
											0,
											0
										],
										[
											-0.596,
											1.085
										],
										[
											-0.495,
											0.566
										],
										[
											-0.178,
											0.322
										],
										[
											0.422,
											1.044
										],
										[
											1.126,
											0.618
										],
										[
											1.612,
											-2.934
										],
										[
											0.958,
											-2.221
										],
										[
											0.618,
											-1.125
										],
										[
											0.978,
											-1.398
										],
										[
											0.33,
											-0.603
										],
										[
											-0.353,
											-1.215
										]
									],
									o: [
										[
											1.126,
											0.618
										],
										[
											1.106,
											-0.203
										],
										[
											0.198,
											-0.362
										],
										[
											0.202,
											-0.7
										],
										[
											0.442,
											-0.803
										],
										[
											0.406,
											0.119
										],
										[
											0,
											0
										],
										[
											1.287,
											0.707
										],
										[
											0.936,
											0.776
										],
										[
											-0.178,
											0.322
										],
										[
											-0.483,
											0.546
										],
										[
											-0.53,
											0.964
										],
										[
											0.401,
											1.032
										],
										[
											1.327,
											0.728
										],
										[
											1.246,
											-0.362
										],
										[
											0.397,
											-0.723
										],
										[
											0.881,
											-2.079
										],
										[
											0.641,
											-1.166
										],
										[
											0,
											0
										],
										[
											0.106,
											-0.099
										],
										[
											0.663,
											-1.205
										],
										[
											-0.413,
											-1.247
										],
										[
											-1.125,
											-0.617
										],
										[
											-1.106,
											0.205
										],
										[
											-0.178,
											0.322
										],
										[
											-0.211,
											0.721
										],
										[
											-0.596,
											1.085
										],
										[
											0,
											0
										],
										[
											-2.693,
											-1.479
										],
										[
											0.176,
											-0.321
										],
										[
											0.493,
											-0.565
										],
										[
											0.508,
											-0.924
										],
										[
											-0.42,
											-1.042
										],
										[
											-2.933,
											-1.612
										],
										[
											-0.376,
											0.683
										],
										[
											-0.958,
											2.221
										],
										[
											-0.774,
											1.408
										],
										[
											-1.456,
											2.078
										],
										[
											-0.73,
											1.326
										],
										[
											0.353,
											1.214
										]
									],
									v: [
										[
											-23.231,
											4.745
										],
										[
											-19.884,
											5.367
										],
										[
											-17.462,
											3.675
										],
										[
											-16.862,
											2.082
										],
										[
											-16.295,
											0.549
										],
										[
											-13.899,
											-0.097
										],
										[
											-11.361,
											1.141
										],
										[
											5.341,
											10.317
										],
										[
											7.806,
											11.829
										],
										[
											8.546,
											14.198
										],
										[
											7.557,
											15.499
										],
										[
											6.567,
											16.8
										],
										[
											6.374,
											19.794
										],
										[
											8.724,
											22.302
										],
										[
											12.583,
											22.852
										],
										[
											15.511,
											20.379
										],
										[
											17.7,
											15.538
										],
										[
											20.512,
											9.705
										],
										[
											22.449,
											6.608
										],
										[
											25.018,
											3.075
										],
										[
											25.377,
											2.565
										],
										[
											25.75,
											-1.115
										],
										[
											23.201,
											-4.047
										],
										[
											19.854,
											-4.669
										],
										[
											17.434,
											-2.976
										],
										[
											16.848,
											-1.414
										],
										[
											16.265,
											0.149
										],
										[
											11.27,
											-0.475
										],
										[
											-5.431,
											-9.652
										],
										[
											-8.576,
											-13.499
										],
										[
											-7.569,
											-14.83
										],
										[
											-6.564,
											-16.161
										],
										[
											-6.435,
											-19.112
										],
										[
											-8.755,
											-21.603
										],
										[
											-15.574,
											-19.62
										],
										[
											-17.575,
											-15.264
										],
										[
											-19.94,
											-10.245
										],
										[
											-22.567,
											-6.036
										],
										[
											-25.246,
											-2.014
										],
										[
											-25.811,
											1.797
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									60.92,
									177.624
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 17",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 17,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-3.181,
											-1.042
										],
										[
											-1.049,
											0.405
										],
										[
											-0.329,
											1.004
										],
										[
											-0.068,
											0.727
										],
										[
											-0.114,
											0.349
										],
										[
											-1.204,
											-0.153
										],
										[
											-1.394,
											-0.457
										],
										[
											0,
											0
										],
										[
											-0.407,
											-0.23
										],
										[
											0.286,
											-0.871
										],
										[
											0.381,
											-0.646
										],
										[
											0.114,
											-0.348
										],
										[
											-0.585,
											-0.94
										],
										[
											-1.263,
											-0.414
										],
										[
											-1.148,
											0.565
										],
										[
											-0.456,
											1.395
										],
										[
											-0.68,
											3.107
										],
										[
											-0.728,
											2.223
										],
										[
											-0.953,
											2.174
										],
										[
											-0.372,
											1.134
										],
										[
											0.557,
											1.172
										],
										[
											1.395,
											0.458
										],
										[
											0.841,
											-2.572
										],
										[
											0.147,
											-0.965
										],
										[
											0.157,
											-0.479
										],
										[
											0.812,
											0.025
										],
										[
											0.698,
											0.229
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.139,
											0.311
										],
										[
											-0.272,
											0.829
										],
										[
											-1.09,
											-0.356
										],
										[
											0,
											0
										],
										[
											-0.13,
											-0.043
										],
										[
											-0.087,
											-0.028
										],
										[
											-0.757,
											2.311
										],
										[
											2.66,
											0.871
										],
										[
											1.822,
											0.404
										],
										[
											0.873,
											0.286
										],
										[
											0.931,
											0.401
										],
										[
											0.436,
											0.143
										],
										[
											0.785,
											-2.396
										],
										[
											-1.7,
											-0.556
										],
										[
											-0.232,
											-0.027
										],
										[
											-0.13,
											-0.042
										],
										[
											-0.131,
											-0.044
										],
										[
											0.6,
											-1.831
										],
										[
											1.352,
											0.443
										],
										[
											0,
											0
										],
										[
											0.264,
											0.594
										],
										[
											-0.557,
											1.7
										],
										[
											0,
											0
										],
										[
											-1.481,
											-0.485
										],
										[
											-0.828,
											-0.416
										],
										[
											-0.48,
											-0.157
										],
										[
											-1.236,
											0.537
										],
										[
											-0.485,
											1.483
										],
										[
											0.659,
											1.229
										],
										[
											1.526,
											0.5
										],
										[
											1.429,
											0.204
										],
										[
											0.698,
											0.228
										],
										[
											1.354,
											0.732
										],
										[
											0.785,
											0.257
										],
										[
											0.713,
											-2.18
										],
										[
											0.129,
											-0.537
										],
										[
											0,
											0
										],
										[
											0.486,
											-1.481
										],
										[
											0.356,
											-1.234
										],
										[
											0.485,
											-1.481
										],
										[
											1.36,
											-3.27
										],
										[
											0.329,
											-1.001
										]
									],
									o: [
										[
											1.22,
											0.4
										],
										[
											1.049,
											-0.404
										],
										[
											0.127,
											-0.392
										],
										[
											0.069,
											-0.724
										],
										[
											0.286,
											-0.871
										],
										[
											0.421,
											0.041
										],
										[
											0,
											0
										],
										[
											1.395,
											0.457
										],
										[
											1.062,
											0.59
										],
										[
											-0.1,
											0.306
										],
										[
											-0.381,
											0.648
										],
										[
											-0.343,
											1.046
										],
										[
											0.585,
											0.94
										],
										[
											1.439,
											0.471
										],
										[
											1.151,
											-0.565
										],
										[
											0.114,
											-0.348
										],
										[
											0.297,
											-1.351
										],
										[
											0.371,
											-1.133
										],
										[
											0.952,
											-2.173
										],
										[
											0.485,
											-1.482
										],
										[
											-0.558,
											-1.171
										],
										[
											-2.964,
											-0.97
										],
										[
											-0.158,
											0.48
										],
										[
											-0.147,
											0.965
										],
										[
											-0.315,
											0.959
										],
										[
											-0.436,
											0.002
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.74,
											-0.243
										],
										[
											-0.14,
											-0.311
										],
										[
											0.541,
											-1.656
										],
										[
											0,
											0
										],
										[
											0.088,
											0.029
										],
										[
											0.161,
											0.101
										],
										[
											2.442,
											0.8
										],
										[
											0.742,
											-2.266
										],
										[
											-0.871,
											-0.285
										],
										[
											-1.823,
											-0.403
										],
										[
											-1.525,
											-0.5
										],
										[
											-0.929,
											-0.401
										],
										[
											-2.265,
											-0.741
										],
										[
											-0.671,
											2.05
										],
										[
											0.088,
											0.029
										],
										[
											0.219,
											0.072
										],
										[
											0.727,
											0.143
										],
										[
											1.264,
											0.414
										],
										[
											-0.385,
											1.177
										],
										[
											0,
											0
										],
										[
											-1.831,
											-0.6
										],
										[
											-0.265,
											-0.593
										],
										[
											0,
											0
										],
										[
											0.713,
											-2.179
										],
										[
											0.481,
											0.157
										],
										[
											1.12,
											0.56
										],
										[
											1.613,
											0.529
										],
										[
											1.238,
											-0.536
										],
										[
											0.485,
											-1.481
										],
										[
											-0.658,
											-1.23
										],
										[
											-0.697,
											-0.228
										],
										[
											-1.43,
											-0.202
										],
										[
											-0.916,
											-0.3
										],
										[
											-0.9,
											-0.488
										],
										[
											-1.916,
											-0.627
										],
										[
											0.029,
											-0.087
										],
										[
											0,
											0
										],
										[
											-0.611,
											2.164
										],
										[
											-1.154,
											3.676
										],
										[
											-0.555,
											1.845
										],
										[
											-0.7,
											2.136
										],
										[
											-0.902,
											2.166
										],
										[
											-1.055,
											3.227
										]
									],
									v: [
										[
											-21.942,
											16.466
										],
										[
											-18.537,
											16.459
										],
										[
											-16.471,
											14.348
										],
										[
											-16.176,
											12.671
										],
										[
											-15.902,
											11.06
										],
										[
											-13.667,
											9.983
										],
										[
											-10.944,
											10.729
										],
										[
											7.167,
											16.657
										],
										[
											9.87,
											17.687
										],
										[
											11.035,
											19.878
										],
										[
											10.314,
											21.307
										],
										[
											9.572,
											22.801
										],
										[
											9.937,
											25.78
										],
										[
											12.71,
											27.81
										],
										[
											16.591,
											27.669
										],
										[
											19.002,
											24.73
										],
										[
											20.192,
											19.546
										],
										[
											21.73,
											14.186
										],
										[
											23.715,
											9.226
										],
										[
											25.701,
											4.266
										],
										[
											25.592,
											0.285
										],
										[
											22.665,
											-2.158
										],
										[
											16.956,
											0.245
										],
										[
											16.501,
											2.412
										],
										[
											16.044,
											4.579
										],
										[
											14.355,
											5.981
										],
										[
											12.656,
											5.641
										],
										[
											10.411,
											4.979
										],
										[
											6.62,
											3.738
										],
										[
											5.299,
											2.908
										],
										[
											5.496,
											1.199
										],
										[
											7.944,
											-0.751
										],
										[
											8.663,
											-0.516
										],
										[
											8.99,
											-0.408
										],
										[
											9.36,
											-0.215
										],
										[
											14.157,
											-2.481
										],
										[
											11.28,
											-7.187
										],
										[
											7.24,
											-8.22
										],
										[
											3.199,
											-9.253
										],
										[
											-0.486,
											-10.603
										],
										[
											-2.535,
											-11.42
										],
										[
											-7.111,
											-8.937
										],
										[
											-5.568,
											-5.029
										],
										[
											-5.089,
											-4.945
										],
										[
											-4.566,
											-4.774
										],
										[
											-3.281,
											-4.497
										],
										[
											-2.283,
											-1.131
										],
										[
											-4.888,
											-0.029
										],
										[
											-7.961,
											-1.034
										],
										[
											-11.103,
											-2.824
										],
										[
											-10.665,
											-6.263
										],
										[
											-8.332,
											-13.39
										],
										[
											-5.04,
											-15.931
										],
										[
											-3.077,
											-15.071
										],
										[
											-0.676,
											-13.997
										],
										[
											3.597,
											-14.009
										],
										[
											6.18,
											-17.036
										],
										[
											5.92,
											-21.102
										],
										[
											2.642,
											-23.696
										],
										[
											-0.548,
											-24.342
										],
										[
											-3.739,
											-24.988
										],
										[
											-7.142,
											-26.536
										],
										[
											-9.671,
											-27.654
										],
										[
											-13.618,
											-25.326
										],
										[
											-13.767,
											-24.651
										],
										[
											-14.724,
											-20.621
										],
										[
											-16.37,
											-15.152
										],
										[
											-18.636,
											-7.787
										],
										[
											-20.197,
											-2.797
										],
										[
											-23.286,
											5.313
										],
										[
											-25.132,
											10.065
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									36.086,
									229.033
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 18",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 18,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0.048,
											0.004
										],
										[
											0.104,
											-1.188
										],
										[
											0,
											0
										],
										[
											0.548,
											0.048
										],
										[
											0.133,
											0.058
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.648,
											-0.035
										],
										[
											0.642,
											0.057
										],
										[
											0,
											0
										],
										[
											-0.1,
											1.143
										],
										[
											-0.182,
											-0.017
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-2.249,
											-5.952
										],
										[
											-1.347,
											-6.011
										],
										[
											-0.543,
											-4.144
										],
										[
											-0.917,
											0.104
										],
										[
											-1.89,
											1.746
										],
										[
											-2.364,
											1.635
										],
										[
											-16.586,
											-3.899
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-2.964,
											-1.366
										],
										[
											0,
											0
										],
										[
											-0.262,
											-0.161
										],
										[
											0.077,
											-0.867
										],
										[
											0.121,
											-0.587
										],
										[
											0.024,
											-0.274
										],
										[
											-3.197,
											-0.281
										],
										[
											-0.946,
											0.815
										],
										[
											-0.125,
											1.417
										],
										[
											0.106,
											2.45
										],
										[
											-0.166,
											1.874
										],
										[
											-0.223,
											0.947
										],
										[
											-0.057,
											0.64
										],
										[
											0.847,
											0.858
										],
										[
											1.462,
											0.129
										],
										[
											0.149,
											-1.69
										],
										[
											-0.028,
											-0.462
										],
										[
											0.02,
											-0.228
										],
										[
											0.731,
											0.064
										],
										[
											-0.229,
											2.604
										],
										[
											0,
											0
										],
										[
											-0.867,
											0.43
										],
										[
											-1.233,
											-0.108
										],
										[
											0.075,
											-0.868
										],
										[
											0.108,
											-0.45
										],
										[
											0.02,
											-0.227
										],
										[
											-2.695,
											-0.237
										],
										[
											-1.006,
											0.717
										],
										[
											-0.109,
											1.233
										],
										[
											0.161,
											2.363
										],
										[
											-0.152,
											1.736
										],
										[
											-0.18,
											0.997
										],
										[
											-0.342,
											1.259
										],
										[
											-0.057,
											0.64
										],
										[
											0.834,
											0.995
										],
										[
											1.508,
											0.133
										],
										[
											0.225,
											-2.558
										],
										[
											0,
											0
										],
										[
											0.024,
											-0.274
										],
										[
											2.389,
											-0.48
										],
										[
											0,
											0
										],
										[
											0.568,
											-0.963
										],
										[
											0.338,
											-3.838
										],
										[
											-0.414,
											-1.048
										]
									],
									o: [
										[
											0,
											0
										],
										[
											1.372,
											0.629
										],
										[
											0.912,
											0.633
										],
										[
											-0.024,
											0.275
										],
										[
											-0.121,
											0.588
										],
										[
											-0.214,
											2.422
										],
										[
											1.417,
											0.125
										],
										[
											0.947,
											-0.814
										],
										[
											0.039,
											-0.456
										],
										[
											-0.045,
											-1.063
										],
										[
											0.151,
											-1.736
										],
										[
											0.512,
											-2.165
										],
										[
											0.112,
											-1.278
										],
										[
											-0.845,
											-0.857
										],
										[
											-2.696,
											-0.237
										],
										[
											-0.02,
											0.229
										],
										[
											0.029,
											0.463
										],
										[
											-0.069,
											0.777
										],
										[
											-3.106,
											-0.274
										],
										[
											0,
											0
										],
										[
											0.069,
											-0.776
										],
										[
											0.867,
											-0.43
										],
										[
											0.96,
											0.085
										],
										[
											-0.02,
											0.229
										],
										[
											-0.109,
											0.451
										],
										[
											-0.153,
											1.737
										],
										[
											1.416,
											0.125
										],
										[
											1.007,
											-0.717
										],
										[
											0.052,
											-0.593
										],
										[
											-0.039,
											-0.601
										],
										[
											0.141,
											-1.599
										],
										[
											0.035,
											-0.412
										],
										[
											0.229,
											-1.038
										],
										[
											0.128,
											-1.462
										],
										[
											-0.833,
											-0.993
										],
										[
											-3.015,
											-0.265
										],
										[
											0,
											0
										],
										[
											0.077,
											0.697
										],
										[
											-0.08,
											0.914
										],
										[
											0,
											0
										],
										[
											-2.248,
											0.448
										],
										[
											-0.568,
											0.963
										],
										[
											-0.302,
											3.427
										],
										[
											0.655,
											1.439
										]
									],
									v: [
										[
											-18.65,
											6.21
										],
										[
											7.451,
											18.036
										],
										[
											9.901,
											19.219
										],
										[
											11.154,
											21.47
										],
										[
											10.936,
											22.763
										],
										[
											10.719,
											24.056
										],
										[
											15.197,
											28.111
										],
										[
											18.74,
											27.075
										],
										[
											20.348,
											23.729
										],
										[
											20.247,
											19.37
										],
										[
											20.428,
											14.966
										],
										[
											20.99,
											10.941
										],
										[
											21.842,
											6.734
										],
										[
											20.742,
											3.53
										],
										[
											17.283,
											2.051
										],
										[
											13.016,
											4.231
										],
										[
											13.027,
											5.268
										],
										[
											13.04,
											6.305
										],
										[
											11.841,
											7.374
										],
										[
											7.524,
											3.057
										],
										[
											8.327,
											-6.057
										],
										[
											9.729,
											-7.867
										],
										[
											12.88,
											-8.35
										],
										[
											14.204,
											-6.921
										],
										[
											14.011,
											-5.902
										],
										[
											13.817,
											-4.884
										],
										[
											17.632,
											-1.924
										],
										[
											21.266,
											-2.811
										],
										[
											22.94,
											-5.738
										],
										[
											22.777,
											-10.173
										],
										[
											22.947,
											-13.678
										],
										[
											23.429,
											-17.573
										],
										[
											23.995,
											-20.079
										],
										[
											24.423,
											-22.596
										],
										[
											23.367,
											-26.281
										],
										[
											19.854,
											-27.971
										],
										[
											14.994,
											-24.531
										],
										[
											14.927,
											-23.777
										],
										[
											15.007,
											-22.32
										],
										[
											11.301,
											-20.229
										],
										[
											-18.665,
											-14.026
										],
										[
											-22.891,
											-11.911
										],
										[
											-24.25,
											-4.711
										],
										[
											-24.079,
											2.003
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									25.895,
									296.867
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 19",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 19,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.167,
											-0.902
										],
										[
											0.029,
											-0.728
										],
										[
											-0.067,
											-0.361
										],
										[
											-0.963,
											-0.544
										],
										[
											-1.307,
											0.243
										],
										[
											-0.779,
											1.078
										],
										[
											0.259,
											1.398
										],
										[
											0,
											0
										],
										[
											0.284,
											1.534
										],
										[
											0.086,
											0.963
										],
										[
											0.053,
											1.296
										],
										[
											0.117,
											0.632
										],
										[
											1.053,
											0.644
										],
										[
											1.533,
											-0.284
										],
										[
											-0.334,
											-1.803
										],
										[
											-0.069,
											-0.127
										],
										[
											-0.026,
											-0.136
										],
										[
											-0.018,
											-0.09
										],
										[
											0.11,
											-0.16
										],
										[
											2.12,
											-0.392
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.335,
											1.805
										],
										[
											0,
											0
										],
										[
											3.037,
											0.278
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.459,
											0.039
										],
										[
											-0.133,
											-0.721
										],
										[
											0.012,
											-0.189
										],
										[
											-0.025,
											-0.135
										],
										[
											-0.051,
											-0.27
										],
										[
											-2.795,
											0.518
										],
										[
											-0.746,
											1.002
										],
										[
											0.251,
											1.353
										],
										[
											0.535,
											1.627
										],
										[
											0.158,
											0.857
										],
										[
											0.07,
											1.386
										],
										[
											0.158,
											0.857
										],
										[
											1.047,
											0.739
										],
										[
											1.533,
											-0.284
										],
										[
											0.725,
											-0.88
										],
										[
											-0.193,
											-1.037
										],
										[
											-0.291,
											-0.692
										],
										[
											-0.067,
											-0.36
										],
										[
											3.067,
											-0.568
										],
										[
											0,
											0
										],
										[
											0.226,
											1.218
										],
										[
											-0.024,
											0.752
										],
										[
											0.076,
											0.406
										],
										[
											0.987,
											0.54
										],
										[
											1.263,
											-0.233
										],
										[
											0.712,
											-1.065
										],
										[
											-0.275,
											-1.488
										],
										[
											-0.316,
											-1.201
										],
										[
											-0.2,
											-1.082
										],
										[
											-0.15,
											-2.071
										],
										[
											-0.182,
											-0.991
										],
										[
											-0.857,
											-0.471
										],
										[
											-2.076,
											-0.128
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.458,
											-0.551
										],
										[
											-0.208,
											-1.127
										],
										[
											-0.455,
											-1.455
										],
										[
											-0.375,
											-2.029
										],
										[
											-0.242,
											-2.567
										],
										[
											-0.201,
											-1.083
										],
										[
											-3.291,
											0.609
										],
										[
											-0.726,
											0.858
										],
										[
											0.192,
											1.038
										],
										[
											0.289,
											0.67
										],
										[
											0.067,
											0.361
										],
										[
											-1.131,
											0.444
										],
										[
											-1.442,
											0.268
										],
										[
											0,
											0
										],
										[
											-0.468,
											-0.006
										]
									],
									o: [
										[
											0.066,
											0.361
										],
										[
											-0.028,
											0.729
										],
										[
											0.2,
											1.082
										],
										[
											0.964,
											0.545
										],
										[
											1.443,
											-0.267
										],
										[
											0.78,
											-1.077
										],
										[
											0,
											0
										],
										[
											-0.327,
											-1.012
										],
										[
											-0.225,
											-1.218
										],
										[
											-0.013,
											-0.323
										],
										[
											-0.049,
											-1.016
										],
										[
											-0.251,
											-1.353
										],
										[
											-1.052,
											-0.645
										],
										[
											-2.751,
											0.51
										],
										[
											0.05,
											0.271
										],
										[
											0.025,
											0.135
										],
										[
											0.079,
											0.172
										],
										[
											0.066,
											0.361
										],
										[
											-0.196,
											0.457
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											2.446,
											-1.152
										],
										[
											0,
											0
										],
										[
											-0.342,
											-1.849
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											1.081,
											-0.2
										],
										[
											1.017,
											-0.048
										],
										[
											0.008,
											0.045
										],
										[
											0.034,
											0.18
										],
										[
											-0.019,
											0.144
										],
										[
											0.342,
											1.85
										],
										[
											1.489,
											-0.276
										],
										[
											0.748,
											-1.002
										],
										[
											-0.159,
											-0.856
										],
										[
											-0.534,
											-1.626
										],
										[
											-0.25,
											-1.353
										],
										[
											-0.106,
											-2.08
										],
										[
											-0.276,
											-1.489
										],
										[
											-1.046,
											-0.739
										],
										[
											-1.263,
											0.233
										],
										[
											-0.722,
											0.88
										],
										[
											0.066,
											0.361
										],
										[
											0.292,
											0.692
										],
										[
											0.217,
											1.173
										],
										[
											0,
											0
										],
										[
											-3.021,
											0.559
										],
										[
											-0.058,
											-0.315
										],
										[
											0.026,
											-0.749
										],
										[
											-0.191,
											-1.037
										],
										[
											-0.985,
											-0.54
										],
										[
											-1.533,
											0.284
										],
										[
											-0.713,
											1.065
										],
										[
											0.109,
											0.587
										],
										[
											1.155,
											4.218
										],
										[
											0.192,
											1.037
										],
										[
											0.15,
											2.071
										],
										[
											0.209,
											1.128
										],
										[
											0.857,
											0.471
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.638,
											0.723
										],
										[
											-0.457,
											0.551
										],
										[
											0.159,
											0.856
										],
										[
											0.681,
											2.16
										],
										[
											0.234,
											1.263
										],
										[
											0.242,
											2.568
										],
										[
											0.617,
											3.337
										],
										[
											1.263,
											-0.234
										],
										[
											0.727,
											-0.857
										],
										[
											-0.076,
											-0.406
										],
										[
											-0.286,
											-0.67
										],
										[
											-0.168,
											-0.902
										],
										[
											0.388,
											-0.165
										],
										[
											0,
											0
										],
										[
											1.444,
											-0.267
										],
										[
											1.215,
											0.009
										]
									],
									v: [
										[
											19.12,
											25.465
										],
										[
											19.178,
											27.098
										],
										[
											19.236,
											28.732
										],
										[
											20.982,
											31.172
										],
										[
											24.389,
											31.625
										],
										[
											27.723,
											29.609
										],
										[
											28.505,
											25.896
										],
										[
											27.187,
											21.802
										],
										[
											26.27,
											17.984
										],
										[
											25.804,
											14.712
										],
										[
											25.705,
											12.282
										],
										[
											25.456,
											9.809
										],
										[
											23.502,
											6.813
										],
										[
											19.624,
											6.271
										],
										[
											15.999,
											9.741
										],
										[
											16.179,
											10.337
										],
										[
											16.254,
											10.743
										],
										[
											16.398,
											11.137
										],
										[
											16.332,
											11.918
										],
										[
											12.859,
											13.191
										],
										[
											-12.643,
											17.913
										],
										[
											19.445,
											2.665
										],
										[
											22.612,
											-1.77
										],
										[
											21.811,
											-6.098
										],
										[
											16.742,
											-9.288
										],
										[
											-18.279,
											-12.526
										],
										[
											7.223,
											-17.249
										],
										[
											9.535,
											-17.607
										],
										[
											11.261,
											-16.598
										],
										[
											11.256,
											-16.246
										],
										[
											11.344,
											-15.773
										],
										[
											11.389,
											-15.152
										],
										[
											16.096,
											-13.155
										],
										[
											19.449,
											-15.07
										],
										[
											20.195,
											-18.603
										],
										[
											19.155,
											-22.327
										],
										[
											18.116,
											-26.052
										],
										[
											17.635,
											-30.161
										],
										[
											17.239,
											-34.565
										],
										[
											15.256,
											-37.906
										],
										[
											11.387,
											-38.59
										],
										[
											8.407,
											-36.918
										],
										[
											7.611,
											-34.042
										],
										[
											8.148,
											-32.462
										],
										[
											8.686,
											-30.883
										],
										[
											4.412,
											-28.272
										],
										[
											-14.326,
											-24.802
										],
										[
											-19.197,
											-25.79
										],
										[
											-19.248,
											-27.39
										],
										[
											-19.325,
											-29.124
										],
										[
											-21.092,
											-31.491
										],
										[
											-24.465,
											-31.952
										],
										[
											-27.833,
											-29.927
										],
										[
											-28.489,
											-26.098
										],
										[
											-27.852,
											-23.417
										],
										[
											-25.82,
											-15.467
										],
										[
											-25.307,
											-10.805
										],
										[
											-24.807,
											-6.21
										],
										[
											-23.208,
											-3.814
										],
										[
											-18.808,
											-2.913
										],
										[
											5.957,
											-1.413
										],
										[
											-17.693,
											8.774
										],
										[
											-20.838,
											10.686
										],
										[
											-21.211,
											13.204
										],
										[
											-20.289,
											16.671
										],
										[
											-18.706,
											22.954
										],
										[
											-17.991,
											28.699
										],
										[
											-17.327,
											34.173
										],
										[
											-11.463,
											38.264
										],
										[
											-8.478,
											36.626
										],
										[
											-7.674,
											33.785
										],
										[
											-8.219,
											32.172
										],
										[
											-8.749,
											30.626
										],
										[
											-7.303,
											28.609
										],
										[
											-4.556,
											27.96
										],
										[
											14.182,
											24.49
										],
										[
											17.049,
											24.099
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									29.014,
									375.761
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 20",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 20,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.208,
											0.51
										],
										[
											-0.096,
											0.11
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.017,
											0.042
										],
										[
											1.104,
											0.45
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0.069,
											-0.171
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.158,
											0.629
										],
										[
											-0.243,
											0.595
										],
										[
											0,
											0
										],
										[
											-1.063,
											-0.432
										]
									],
									v: [
										[
											3.816,
											-5.757
										],
										[
											4.062,
											-6.178
										],
										[
											13.535,
											-18.144
										],
										[
											11.278,
											-3.835
										],
										[
											11.069,
											-2.955
										],
										[
											9.049,
											-2.738
										],
										[
											5.098,
											-4.345
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											1.572,
											0.639
										],
										[
											0.449,
											0.109
										],
										[
											0.212,
											0.087
										],
										[
											-0.277,
											0.68
										],
										[
											-2.422,
											-0.985
										],
										[
											0,
											0
										],
										[
											-0.156,
											-0.955
										],
										[
											0.467,
											-1.147
										],
										[
											0.807,
											0.327
										],
										[
											0.399,
											0.236
										],
										[
											0.212,
											0.086
										],
										[
											1.019,
											-2.506
										],
										[
											-0.39,
											-1.174
										],
										[
											-1.148,
											-0.466
										],
										[
											-2.304,
											-0.544
										],
										[
											-1.615,
											-0.658
										],
										[
											-0.901,
											-0.466
										],
										[
											-1.104,
											-0.696
										],
										[
											-0.595,
											-0.243
										],
										[
											-1.197,
											0.504
										],
										[
											-0.57,
											1.402
										],
										[
											2.379,
											0.968
										],
										[
											0,
											0
										],
										[
											0.255,
											0.102
										],
										[
											-0.244,
											2.427
										],
										[
											0,
											0
										],
										[
											0.753,
											0.826
										],
										[
											3.569,
											1.452
										],
										[
											1.124,
											-0.087
										],
										[
											2.176,
											-2.43
										],
										[
											0,
											0
										],
										[
											0.231,
											-0.203
										],
										[
											0.806,
											0.328
										],
										[
											0.526,
											0.288
										],
										[
											0.256,
											0.103
										],
										[
											1.21,
											-2.973
										],
										[
											-0.501,
											-1.142
										],
										[
											-1.317,
											-0.536
										],
										[
											-2.373,
											-0.619
										],
										[
											-1.743,
											-0.709
										],
										[
											-0.84,
											-0.491
										],
										[
											-0.595,
											-0.242
										],
										[
											-1.069,
											0.556
										],
										[
											-0.553,
											1.361
										]
									],
									o: [
										[
											-0.212,
											-0.087
										],
										[
											-0.451,
											-0.11
										],
										[
											-0.724,
											-0.294
										],
										[
											1.175,
											-2.888
										],
										[
											0,
											0
										],
										[
											0.722,
											0.294
										],
										[
											0.156,
											0.955
										],
										[
											-0.363,
											0.891
										],
										[
											-0.213,
											-0.087
										],
										[
											-0.398,
											-0.237
										],
										[
											-1.615,
											-0.658
										],
										[
											-0.536,
											1.316
										],
										[
											0.389,
											1.173
										],
										[
											0.551,
											0.224
										],
										[
											0.586,
											0.139
										],
										[
											1.487,
											0.604
										],
										[
											0.383,
											0.155
										],
										[
											0.924,
											0.525
										],
										[
											1.36,
											0.553
										],
										[
											1.194,
											-0.504
										],
										[
											1.141,
											-2.803
										],
										[
											0,
											0
										],
										[
											-0.689,
											-0.132
										],
										[
											-0.85,
											-0.347
										],
										[
											0,
											0
										],
										[
											0.235,
											-2.282
										],
										[
											-0.754,
											-0.826
										],
										[
											-3.186,
											-1.296
										],
										[
											-1.569,
											0.205
										],
										[
											0,
											0
										],
										[
											-1.004,
											1.127
										],
										[
											-0.873,
											0.685
										],
										[
											-0.255,
											-0.104
										],
										[
											-0.527,
											-0.288
										],
										[
											-2.252,
											-0.916
										],
										[
											-0.535,
											1.318
										],
										[
											0.5,
											1.145
										],
										[
											0.424,
											0.173
										],
										[
											1.029,
											0.27
										],
										[
											1.614,
											0.656
										],
										[
											1.919,
											1.126
										],
										[
											1.189,
											0.484
										],
										[
											1.067,
											-0.556
										],
										[
											1.02,
											-2.505
										]
									],
									v: [
										[
											-2.944,
											7.757
										],
										[
											-3.939,
											7.465
										],
										[
											-4.933,
											7.171
										],
										[
											-5.602,
											5.71
										],
										[
											-0.207,
											2.855
										],
										[
											8.269,
											6.303
										],
										[
											9.585,
											8.176
										],
										[
											9.121,
											11.329
										],
										[
											7.366,
											12.174
										],
										[
											6.447,
											11.689
										],
										[
											5.532,
											11.205
										],
										[
											1.58,
											13.98
										],
										[
											1.361,
											17.715
										],
										[
											3.665,
											20.174
										],
										[
											7.95,
											21.325
										],
										[
											11.252,
											22.52
										],
										[
											14.832,
											24.124
										],
										[
											17.061,
											25.402
										],
										[
											19.34,
											26.553
										],
										[
											23.173,
											26.626
										],
										[
											25.822,
											23.767
										],
										[
											23.963,
											18.11
										],
										[
											23.262,
											17.824
										],
										[
											21.847,
											17.472
										],
										[
											20.939,
											13.314
										],
										[
											23.824,
											-17.15
										],
										[
											23.048,
											-21.811
										],
										[
											16.564,
											-25.228
										],
										[
											10.098,
											-27.043
										],
										[
											4.48,
											-23.09
										],
										[
											-14.501,
											-1.624
										],
										[
											-16.353,
											0.371
										],
										[
											-18.873,
											0.907
										],
										[
											-20.045,
											0.319
										],
										[
											-21.217,
											-0.27
										],
										[
											-26.408,
											2.816
										],
										[
											-26.462,
											6.507
										],
										[
											-23.736,
											9.028
										],
										[
											-19.54,
											10.215
										],
										[
											-15.384,
											11.684
										],
										[
											-11.702,
											13.405
										],
										[
											-7.933,
											15.457
										],
										[
											-4.546,
											15.35
										],
										[
											-2.116,
											12.475
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									427.848,
									49.307
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 21",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 21,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-2.71,
											-0.237
										],
										[
											-2.028,
											-0.388
										],
										[
											-1.055,
											-0.341
										],
										[
											0,
											0
										],
										[
											-0.27,
											-0.052
										],
										[
											-1.059,
											0.779
										],
										[
											-0.276,
											1.443
										],
										[
											0.534,
											0.989
										],
										[
											1.036,
											0.197
										],
										[
											0.75,
											-0.02
										],
										[
											0.36,
											0.069
										],
										[
											-0.583,
											3.064
										],
										[
											0,
											0
										],
										[
											-1.217,
											-0.232
										],
										[
											-0.691,
											-0.294
										],
										[
											-0.36,
											-0.07
										],
										[
											-0.863,
											0.723
										],
										[
											-0.239,
											1.262
										],
										[
											3.288,
											0.627
										],
										[
											2.408,
											0.226
										],
										[
											1.26,
											0.239
										],
										[
											1.632,
											0.499
										],
										[
											0.676,
											0.129
										],
										[
											1.046,
											-0.712
										],
										[
											0.291,
											-1.531
										],
										[
											-0.536,
											-0.988
										],
										[
											-1.038,
											-0.197
										],
										[
											-0.729,
											0.025
										],
										[
											-0.361,
											-0.069
										],
										[
											-0.003,
											-1.214
										],
										[
											0.274,
											-1.441
										],
										[
											0,
											0
										],
										[
											0.176,
											-0.433
										],
										[
											0.9,
											0.172
										],
										[
											0.668,
											0.291
										],
										[
											0.36,
											0.068
										],
										[
											0.857,
											-0.699
										],
										[
											0.249,
											-1.307
										],
										[
											-0.73,
											-1.072
										],
										[
											-1.442,
											-0.275
										]
									],
									o: [
										[
											2.25,
											0.195
										],
										[
											1.306,
											0.247
										],
										[
											0,
											0
										],
										[
											0.127,
											0.07
										],
										[
											1.351,
											0.257
										],
										[
											1.059,
											-0.778
										],
										[
											0.239,
											-1.262
										],
										[
											-0.536,
											-0.988
										],
										[
											-0.362,
											-0.069
										],
										[
											-0.752,
											0.021
										],
										[
											-1.217,
											-0.231
										],
										[
											0,
											0
										],
										[
											0.575,
											-3.017
										],
										[
											0.36,
											0.068
										],
										[
											0.689,
											0.296
										],
										[
											1.036,
											0.198
										],
										[
											0.861,
											-0.722
										],
										[
											0.627,
											-3.288
										],
										[
											-0.767,
											-0.147
										],
										[
											-2.408,
											-0.224
										],
										[
											-1.578,
											-0.301
										],
										[
											-2.427,
											-0.742
										],
										[
											-1.487,
											-0.283
										],
										[
											-1.046,
											0.711
										],
										[
											-0.241,
											1.261
										],
										[
											0.535,
											0.99
										],
										[
											0.404,
											0.077
										],
										[
											0.728,
											-0.024
										],
										[
											0.9,
											0.172
										],
										[
											0.013,
											0.423
										],
										[
											0,
											0
										],
										[
											-0.275,
											1.442
										],
										[
											-0.449,
											1.129
										],
										[
											-0.361,
											-0.069
										],
										[
											-0.669,
											-0.291
										],
										[
											-1.082,
											-0.206
										],
										[
											-0.857,
											0.702
										],
										[
											-0.283,
											1.486
										],
										[
											0.728,
											1.074
										],
										[
											0.811,
											0.155
										]
									],
									v: [
										[
											-9.143,
											21.501
										],
										[
											-2.726,
											22.374
										],
										[
											0.816,
											23.259
										],
										[
											4.971,
											24.609
										],
										[
											5.568,
											24.795
										],
										[
											9.182,
											24.012
										],
										[
											11.183,
											20.681
										],
										[
											10.74,
											17.306
										],
										[
											8.383,
											15.527
										],
										[
											6.716,
											15.454
										],
										[
											5.049,
											15.381
										],
										[
											4.099,
											10.439
										],
										[
											7.667,
											-8.282
										],
										[
											10.353,
											-12.462
										],
										[
											11.93,
											-11.916
										],
										[
											13.506,
											-11.371
										],
										[
											16.353,
											-12.158
										],
										[
											18.005,
											-15.136
										],
										[
											14.013,
											-21.009
										],
										[
											9.251,
											-21.566
										],
										[
											3.747,
											-22.264
										],
										[
											-1.068,
											-23.462
										],
										[
											-5.721,
											-24.769
										],
										[
											-9.52,
											-24.126
										],
										[
											-11.526,
											-20.762
										],
										[
											-11.083,
											-17.387
										],
										[
											-8.726,
											-15.607
										],
										[
											-7.026,
											-15.527
										],
										[
											-5.393,
											-15.462
										],
										[
											-4.039,
											-13.382
										],
										[
											-4.431,
											-10.587
										],
										[
											-7.997,
											8.134
										],
										[
											-8.673,
											10.947
										],
										[
											-10.697,
											12.382
										],
										[
											-12.24,
											11.842
										],
										[
											-13.783,
											11.303
										],
										[
											-16.69,
											12.045
										],
										[
											-18.349,
											15.056
										],
										[
											-17.68,
											18.895
										],
										[
											-14.424,
											20.915
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									378.005,
									28.914
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 22",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 22,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.002,
											0.734
										],
										[
											-0.278,
											1.513
										],
										[
											-0.002,
											0.825
										],
										[
											2.293,
											0.005
										],
										[
											0.551,
											-0.043
										],
										[
											0,
											0
										],
										[
											1.559,
											0.004
										],
										[
											1.284,
											-0.042
										],
										[
											1.558,
											0.003
										],
										[
											3.53,
											0.282
										],
										[
											1.054,
											0.002
										],
										[
											0.008,
											-3.347
										],
										[
											-0.71,
											-0.872
										],
										[
											-1.055,
											-0.002
										],
										[
											-0.712,
											0.16
										],
										[
											-0.367,
											0
										],
										[
											-0.227,
											-1.193
										],
										[
											0.003,
											-1.468
										],
										[
											0,
											0
										],
										[
											0.092,
											-0.458
										],
										[
											0.917,
											0.003
										],
										[
											0.733,
											0.163
										],
										[
											0.366,
											0
										],
										[
											0.712,
											-0.847
										],
										[
											0.003,
											-1.329
										],
										[
											-0.893,
											-0.918
										],
										[
											-1.468,
											-0.003
										],
										[
											-3.166,
											0.313
										],
										[
											-2.339,
											-0.006
										],
										[
											-2.362,
											-0.234
										],
										[
											-1.193,
											-0.003
										],
										[
											-0.942,
											0.892
										],
										[
											-0.003,
											1.469
										],
										[
											2.706,
											0.005
										],
										[
											0.963,
											-0.158
										],
										[
											0.504,
											0.002
										],
										[
											0.227,
											0.782
										],
										[
											-0.002,
											0.734
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.253,
											0.23
										],
										[
											-0.872,
											-0.002
										],
										[
											0.003,
											-1.146
										],
										[
											0,
											0
										],
										[
											0.001,
											-0.137
										],
										[
											0,
											-0.092
										],
										[
											-2.431,
											-0.005
										],
										[
											-0.006,
											2.798
										],
										[
											0.179,
											1.858
										],
										[
											-0.003,
											0.919
										],
										[
											-0.095,
											1.01
										],
										[
											-0.002,
											0.459
										],
										[
											2.522,
											0.005
										],
										[
											0.005,
											-1.789
										],
										[
											-0.045,
											-0.229
										],
										[
											0,
											-0.137
										],
										[
											0,
											-0.137
										],
										[
											1.926,
											0.004
										],
										[
											-0.003,
											1.422
										],
										[
											0,
											0
										],
										[
											-0.483,
											0.435
										],
										[
											-1.789,
											-0.003
										],
										[
											0,
											0
										],
										[
											0.004,
											-1.558
										],
										[
											0.14,
											-0.916
										],
										[
											0.002,
											-0.504
										],
										[
											-0.892,
											-1.011
										],
										[
											-1.56,
											-0.004
										],
										[
											-0.966,
											1.008
										],
										[
											-0.005,
											1.605
										],
										[
											0.249,
											1.422
										]
									],
									o: [
										[
											0.002,
											-0.964
										],
										[
											0.184,
											-1.008
										],
										[
											0.005,
											-2.018
										],
										[
											0.091,
											0
										],
										[
											0,
											0
										],
										[
											-2.248,
											0.086
										],
										[
											-3.852,
											0.038
										],
										[
											-1.926,
											0.042
										],
										[
											-2.248,
											-0.006
										],
										[
											-2.339,
											-0.188
										],
										[
											-3.395,
											-0.007
										],
										[
											-0.003,
											1.286
										],
										[
											0.708,
											0.874
										],
										[
											0.413,
											0
										],
										[
											0.711,
											-0.159
										],
										[
											0.918,
											0.002
										],
										[
											0.091,
											0.412
										],
										[
											0,
											0
										],
										[
											-0.004,
											1.47
										],
										[
											-0.233,
											1.193
										],
										[
											-0.322,
											0
										],
										[
											-0.733,
											-0.162
										],
										[
											-1.101,
											-0.003
										],
										[
											-0.714,
											0.848
										],
										[
											-0.003,
											1.514
										],
										[
											0.892,
											0.92
										],
										[
											0.367,
											0.001
										],
										[
											1.376,
											-0.135
										],
										[
											1.192,
											0.002
										],
										[
											2.361,
											0.234
										],
										[
											1.559,
											0.004
										],
										[
											0.942,
											-0.892
										],
										[
											0.007,
											-3.118
										],
										[
											-0.505,
											-0.003
										],
										[
											-0.964,
											0.159
										],
										[
											-1.01,
											-0.002
										],
										[
											-0.137,
											-0.413
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.001,
											-0.778
										],
										[
											0.252,
											-0.228
										],
										[
											1.742,
											0.003
										],
										[
											0,
											0
										],
										[
											0,
											0.092
										],
										[
											-0.047,
											0.183
										],
										[
											-0.006,
											2.569
										],
										[
											2.384,
											0.005
										],
										[
											0.001,
											-0.917
										],
										[
											-0.18,
											-1.858
										],
										[
											0.003,
											-1.604
										],
										[
											0.093,
											-1.007
										],
										[
											0.005,
											-2.384
										],
										[
											-2.157,
											-0.006
										],
										[
											0,
											0.092
										],
										[
											-0.001,
											0.23
										],
										[
											0.09,
											0.735
										],
										[
											-0.003,
											1.331
										],
										[
											-1.239,
											-0.003
										],
										[
											0,
											0
										],
										[
											0.004,
											-1.927
										],
										[
											0.482,
											-0.434
										],
										[
											0,
											0
										],
										[
											2.293,
											0.006
										],
										[
											-0.001,
											0.506
										],
										[
											-0.187,
											1.238
										],
										[
											-0.003,
											1.698
										],
										[
											0.892,
											1.011
										],
										[
											1.558,
											0.003
										],
										[
											0.966,
											-1.006
										],
										[
											0.001,
											-0.734
										],
										[
											-0.249,
											-1.422
										]
									],
									v: [
										[
											22.195,
											-13.762
										],
										[
											22.616,
											-17.475
										],
										[
											22.897,
											-20.227
										],
										[
											19.464,
											-23.262
										],
										[
											18.775,
											-23.194
										],
										[
											14.648,
											-22.858
										],
										[
											8.937,
											-22.735
										],
										[
											1.232,
											-22.613
										],
										[
											-3.996,
											-22.556
										],
										[
											-12.663,
											-22.988
										],
										[
											-17.754,
											-23.275
										],
										[
											-22.856,
											-18.264
										],
										[
											-21.796,
											-15.029
										],
										[
											-19.151,
											-13.715
										],
										[
											-17.465,
											-13.952
										],
										[
											-15.848,
											-14.189
										],
										[
											-14.132,
											-12.397
										],
										[
											-14,
											-9.577
										],
										[
											-14.042,
											9.478
										],
										[
											-14.186,
											12.368
										],
										[
											-15.91,
											14.153
										],
										[
											-17.492,
											13.91
										],
										[
											-19.142,
											13.665
										],
										[
											-21.862,
											14.931
										],
										[
											-22.936,
											18.197
										],
										[
											-21.602,
											21.845
										],
										[
											-18.063,
											23.23
										],
										[
											-12.764,
											22.759
										],
										[
											-7.192,
											22.566
										],
										[
											-1.861,
											22.921
										],
										[
											3.47,
											23.277
										],
										[
											7.222,
											21.944
										],
										[
											8.64,
											18.403
										],
										[
											4.591,
											13.718
										],
										[
											2.39,
											13.954
										],
										[
											0.188,
											14.189
										],
										[
											-1.667,
											13.015
										],
										[
											-1.87,
											11.296
										],
										[
											-1.933,
											8.957
										],
										[
											-1.924,
											4.965
										],
										[
											-1.543,
											3.454
										],
										[
											0.144,
											3.113
										],
										[
											2.753,
											4.838
										],
										[
											2.752,
											5.595
										],
										[
											2.751,
											5.939
										],
										[
											2.682,
											6.353
										],
										[
											6.319,
											10.212
										],
										[
											9.906,
											6.025
										],
										[
											9.64,
											1.861
										],
										[
											9.374,
											-2.301
										],
										[
											9.52,
											-6.223
										],
										[
											9.663,
											-8.423
										],
										[
											5.887,
											-12.009
										],
										[
											2.647,
											-9.332
										],
										[
											2.715,
											-8.852
										],
										[
											2.714,
											-8.301
										],
										[
											2.849,
											-6.994
										],
										[
											-0.045,
											-5.006
										],
										[
											-1.898,
											-7.142
										],
										[
											-1.891,
											-10.374
										],
										[
											-1.16,
											-13.917
										],
										[
											2.246,
											-14.564
										],
										[
											9.745,
											-14.546
										],
										[
											13.179,
											-12.199
										],
										[
											12.968,
											-10.068
										],
										[
											12.687,
											-7.454
										],
										[
											14.02,
											-3.392
										],
										[
											17.697,
											-1.871
										],
										[
											21.484,
											-3.376
										],
										[
											22.938,
											-7.293
										],
										[
											22.566,
											-10.527
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									322.018,
									23.531
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 23",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 23,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.01,
											0.045
										],
										[
											1.161,
											-0.267
										],
										[
											0,
											0
										],
										[
											0.124,
											0.536
										],
										[
											-0.015,
											0.144
										]
									],
									o: [
										[
											0,
											0
										],
										[
											0.233,
											0.605
										],
										[
											0.143,
											0.627
										],
										[
											0,
											0
										],
										[
											-1.118,
											0.258
										],
										[
											-0.041,
											-0.178
										],
										[
											0,
											0
										]
									],
									v: [
										[
											-6.577,
											-17.634
										],
										[
											-0.193,
											-4.632
										],
										[
											0.142,
											-3.792
										],
										[
											-1.385,
											-2.452
										],
										[
											-5.542,
											-1.494
										],
										[
											-7.403,
											-1.913
										],
										[
											-7.444,
											-2.397
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ind: 1,
							ty: "sh",
							ix: 2,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-0.97,
											0.081
										],
										[
											-0.625,
											0.144
										],
										[
											-0.554,
											1.071
										],
										[
											0.329,
											1.431
										],
										[
											1.653,
											-0.381
										],
										[
											0.43,
											-0.17
										],
										[
											0.223,
											-0.051
										],
										[
											0.165,
											0.715
										],
										[
											-2.547,
											0.586
										],
										[
											0,
											0
										],
										[
											-0.678,
											-0.691
										],
										[
											-0.278,
											-1.206
										],
										[
											0.849,
											-0.195
										],
										[
											0.463,
											-0.036
										],
										[
											0.223,
											-0.05
										],
										[
											-0.608,
											-2.636
										],
										[
											-0.994,
											-0.736
										],
										[
											-1.207,
											0.278
										],
										[
											-2.198,
											0.883
										],
										[
											-1.699,
											0.392
										],
										[
											-1.004,
											0.137
										],
										[
											-1.303,
											0.065
										],
										[
											-0.626,
											0.144
										],
										[
											-0.689,
											1.101
										],
										[
											0.34,
											1.475
										],
										[
											2.502,
											-0.576
										],
										[
											0,
											0
										],
										[
											0.268,
											-0.061
										],
										[
											1.196,
											2.125
										],
										[
											0,
											0
										],
										[
											1.091,
											0.243
										],
										[
											3.754,
											-0.865
										],
										[
											0.869,
											-0.718
										],
										[
											0.383,
											-3.24
										],
										[
											0,
											0
										],
										[
											0.072,
											-0.299
										],
										[
											0.848,
											-0.195
										],
										[
											0.595,
											-0.066
										],
										[
											0.268,
											-0.062
										],
										[
											-0.72,
											-3.127
										],
										[
											-1.068,
											-0.647
										],
										[
											-1.385,
											0.319
										],
										[
											-2.296,
											0.858
										],
										[
											-1.834,
											0.421
										]
									],
									o: [
										[
											2.217,
											-0.183
										],
										[
											1.251,
											-0.289
										],
										[
											0.553,
											-1.068
										],
										[
											-0.608,
											-2.636
										],
										[
											-0.224,
											0.051
										],
										[
											-0.433,
											0.17
										],
										[
											-0.76,
											0.176
										],
										[
											-0.7,
											-3.038
										],
										[
											0,
											0
										],
										[
											0.759,
											-0.175
										],
										[
											0.676,
											0.692
										],
										[
											0.216,
											0.939
										],
										[
											-0.225,
											0.052
										],
										[
											-0.462,
											0.036
										],
										[
											-1.699,
											0.391
										],
										[
											0.319,
											1.386
										],
										[
											0.993,
											0.737
										],
										[
											0.58,
											-0.133
										],
										[
											0.56,
											-0.222
										],
										[
											1.564,
											-0.359
										],
										[
											0.402,
											-0.093
										],
										[
											1.059,
											-0.103
										],
										[
											1.43,
											-0.33
										],
										[
											0.687,
											-1.099
										],
										[
											-0.68,
											-2.95
										],
										[
											0,
											0
										],
										[
											-0.639,
											0.289
										],
										[
											-0.895,
											0.206
										],
										[
											0,
											0
										],
										[
											-1.121,
											-2
										],
										[
											-1.092,
											-0.243
										],
										[
											-3.352,
											0.772
										],
										[
											-1.166,
											1.069
										],
										[
											0,
											0
										],
										[
											-0.173,
											1.5
										],
										[
											-0.32,
											1.062
										],
										[
											-0.268,
											0.063
										],
										[
											-0.598,
											0.067
										],
										[
											-2.369,
											0.546
										],
										[
											0.319,
											1.386
										],
										[
											1.066,
											0.649
										],
										[
											0.446,
											-0.104
										],
										[
											0.997,
											-0.371
										],
										[
											1.698,
											-0.392
										]
									],
									v: [
										[
											-9.078,
											22.688
										],
										[
											-4.815,
											22.2
										],
										[
											-2.106,
											20.163
										],
										[
											-1.769,
											16.415
										],
										[
											-5.161,
											13.032
										],
										[
											-6.143,
											13.364
										],
										[
											-7.126,
											13.695
										],
										[
											-8.513,
											12.886
										],
										[
											-5.742,
											7.447
										],
										[
											3.175,
											5.393
										],
										[
											5.33,
											6.167
										],
										[
											6.762,
											9.014
										],
										[
											5.813,
											10.715
										],
										[
											4.783,
											10.847
										],
										[
											3.755,
											10.977
										],
										[
											2.119,
											15.52
										],
										[
											4.087,
											18.702
										],
										[
											7.387,
											19.389
										],
										[
											11.554,
											17.864
										],
										[
											14.942,
											16.942
										],
										[
											18.794,
											16.197
										],
										[
											21.352,
											15.961
										],
										[
											23.878,
											15.591
										],
										[
											27.056,
											13.447
										],
										[
											27.578,
											9.585
										],
										[
											22.805,
											6.025
										],
										[
											22.067,
											6.195
										],
										[
											20.706,
											6.72
										],
										[
											17.572,
											3.842
										],
										[
											2.413,
											-22.741
										],
										[
											-0.904,
											-26.106
										],
										[
											-8.172,
											-25.173
										],
										[
											-14.505,
											-22.938
										],
										[
											-16.828,
											-16.473
										],
										[
											-20.011,
											12.004
										],
										[
											-20.378,
											14.701
										],
										[
											-22.132,
											16.587
										],
										[
											-23.428,
											16.78
										],
										[
											-24.726,
											16.973
										],
										[
											-27.198,
											22.484
										],
										[
											-25.118,
											25.535
										],
										[
											-21.44,
											26.03
										],
										[
											-17.325,
											24.587
										],
										[
											-13.08,
											23.398
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 2",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "mm",
							mm: 1,
							nm: "Merge Paths 1",
							mn: "ADBE Vector Filter - Merge",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									259.099,
									32.972
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 24",
					np: 4,
					cix: 2,
					bm: 0,
					ix: 24,
					mn: "ADBE Vector Group",
					hd: false
				},
				{
					ty: "gr",
					it: [
						{
							ind: 0,
							ty: "sh",
							ix: 1,
							ks: {
								a: 0,
								k: {
									i: [
										[
											-1.613,
											0.876
										],
										[
											0,
											0
										],
										[
											0.675,
											2.974
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-0.178,
											-0.425
										],
										[
											0.644,
											-0.349
										],
										[
											0.183,
											-0.046
										],
										[
											0.121,
											-0.066
										],
										[
											0.242,
											-0.13
										],
										[
											-1.357,
											-2.498
										],
										[
											-1.184,
											-0.402
										],
										[
											-1.209,
											0.657
										],
										[
											-1.383,
											1.011
										],
										[
											-0.766,
											0.416
										],
										[
											-1.297,
											0.497
										],
										[
											-0.766,
											0.416
										],
										[
											-0.38,
											1.224
										],
										[
											0.744,
											1.37
										],
										[
											1.06,
											0.415
										],
										[
											0.928,
											-0.503
										],
										[
											0.568,
											-0.49
										],
										[
											0.323,
											-0.175
										],
										[
											1.487,
											2.742
										],
										[
											0,
											0
										],
										[
											-1.089,
											0.591
										],
										[
											-0.722,
											0.209
										],
										[
											-0.363,
											0.198
										],
										[
											-0.21,
											1.106
										],
										[
											0.613,
											1.13
										],
										[
											1.232,
											0.348
										],
										[
											1.33,
											-0.722
										],
										[
											1.045,
											-0.671
										],
										[
											0.967,
											-0.525
										],
										[
											1.924,
											-0.782
										],
										[
											0.886,
											-0.48
										],
										[
											0.183,
											-0.961
										],
										[
											-0.518,
											-2.013
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.665,
											0.265
										],
										[
											1.007,
											-0.547
										],
										[
											1.244,
											-0.883
										],
										[
											1.814,
											-0.985
										],
										[
											2.367,
											-1.023
										],
										[
											0.967,
											-0.524
										],
										[
											-1.597,
											-2.942
										],
										[
											-1.041,
											-0.426
										],
										[
											-0.928,
											0.504
										],
										[
											-0.548,
											0.481
										],
										[
											-0.323,
											0.176
										],
										[
											-0.771,
											-0.938
										],
										[
											-0.7,
											-1.288
										],
										[
											0,
											0
										],
										[
											-0.138,
											-0.446
										],
										[
											0.807,
											-0.438
										],
										[
											0.701,
											-0.197
										],
										[
											0.322,
											-0.176
										],
										[
											0.22,
											-1.083
										],
										[
											-0.634,
											-1.168
										],
										[
											-1.266,
											-0.41
										],
										[
											-1.25,
											0.678
										],
										[
											0,
											0
										],
										[
											-1.371,
											0.744
										],
										[
											-0.89,
											0.379
										],
										[
											-1.216,
											0.451
										],
										[
											-0.565,
											0.306
										],
										[
											-0.287,
											1.201
										],
										[
											0.744,
											1.371
										],
										[
											1.612,
											-0.875
										],
										[
											0.099,
											-0.105
										],
										[
											0.121,
											-0.065
										],
										[
											0.081,
											-0.044
										],
										[
											0.187,
											0.055
										],
										[
											1.028,
											1.895
										],
										[
											0,
											0
										],
										[
											0,
											0
										]
									],
									o: [
										[
											0,
											0
										],
										[
											1.652,
											-0.895
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											0.524,
											0.966
										],
										[
											0.361,
											0.952
										],
										[
											-0.041,
											0.022
										],
										[
											-0.161,
											0.087
										],
										[
											-0.143,
											0.026
										],
										[
											-1.653,
											0.898
										],
										[
											0.722,
											1.331
										],
										[
											1.183,
											0.401
										],
										[
											0.764,
											-0.415
										],
										[
											1.381,
											-1.011
										],
										[
											1.21,
											-0.656
										],
										[
											1.945,
											-0.742
										],
										[
											1.33,
											-0.722
										],
										[
											0.379,
											-1.223
										],
										[
											-0.612,
											-1.129
										],
										[
											-1.06,
											-0.416
										],
										[
											-0.322,
											0.176
										],
										[
											-0.568,
											0.492
										],
										[
											-1.048,
											0.569
										],
										[
											0,
											0
										],
										[
											-1.465,
											-2.701
										],
										[
											0.281,
											-0.153
										],
										[
											0.721,
											-0.208
										],
										[
											0.927,
											-0.503
										],
										[
											0.209,
											-1.105
										],
										[
											-0.743,
											-1.37
										],
										[
											-1.234,
											-0.348
										],
										[
											-0.525,
											0.285
										],
										[
											-3.654,
											2.402
										],
										[
											-0.928,
											0.503
										],
										[
											-1.923,
											0.784
										],
										[
											-1.008,
											0.547
										],
										[
											-0.183,
											0.96
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											-1.195,
											-1.334
										],
										[
											-0.666,
											-0.266
										],
										[
											-0.766,
											0.415
										],
										[
											-1.844,
											1.313
										],
										[
											-1.128,
											0.611
										],
										[
											-2.366,
											1.025
										],
										[
											-2.984,
											1.62
										],
										[
											0.613,
											1.128
										],
										[
											1.04,
											0.427
										],
										[
											0.363,
											-0.197
										],
										[
											0.548,
											-0.48
										],
										[
											0.807,
											-0.438
										],
										[
											0.277,
											0.319
										],
										[
											0,
											0
										],
										[
											0.7,
											1.291
										],
										[
											0.367,
											1.159
										],
										[
											-0.322,
											0.175
										],
										[
											-0.702,
											0.198
										],
										[
											-0.967,
											0.525
										],
										[
											-0.221,
											1.087
										],
										[
											0.701,
											1.29
										],
										[
											1.265,
											0.408
										],
										[
											0,
											0
										],
										[
											0.861,
											-0.624
										],
										[
											1.089,
											-0.591
										],
										[
											0.303,
											-0.112
										],
										[
											0.952,
											-0.36
										],
										[
											1.209,
											-0.657
										],
										[
											0.288,
											-1.199
										],
										[
											-1.334,
											-2.458
										],
										[
											-0.242,
											0.131
										],
										[
											-0.121,
											0.065
										],
										[
											-0.14,
											0.128
										],
										[
											-0.323,
											0.175
										],
										[
											-0.493,
											-0.045
										],
										[
											0,
											0
										],
										[
											0,
											0
										],
										[
											1.852,
											1.97
										]
									],
									v: [
										[
											8.862,
											21.031
										],
										[
											12.732,
											18.93
										],
										[
											14.198,
											13.125
										],
										[
											6.458,
											-21.185
										],
										[
											18.83,
											1.611
										],
										[
											19.884,
											3.699
										],
										[
											19.458,
											5.652
										],
										[
											19.122,
											5.756
										],
										[
											18.7,
											5.986
										],
										[
											18.122,
											6.22
										],
										[
											17.678,
											11.314
										],
										[
											20.536,
											13.913
										],
										[
											24.125,
											13.53
										],
										[
											27.347,
											11.39
										],
										[
											30.568,
											9.25
										],
										[
											34.328,
											7.522
										],
										[
											38.394,
											5.785
										],
										[
											40.959,
											2.867
										],
										[
											40.412,
											-1.024
										],
										[
											37.902,
											-3.34
										],
										[
											34.92,
											-3.21
										],
										[
											33.584,
											-2.211
										],
										[
											32.248,
											-1.211
										],
										[
											28.445,
											-4.47
										],
										[
											19.354,
											-21.217
										],
										[
											18.789,
											-26.155
										],
										[
											20.294,
											-26.698
										],
										[
											21.92,
											-27.307
										],
										[
											23.625,
											-29.719
										],
										[
											23.019,
											-33.07
										],
										[
											20.055,
											-35.648
										],
										[
											16.21,
											-35.088
										],
										[
											13.857,
											-33.654
										],
										[
											6.925,
											-29.265
										],
										[
											2.649,
											-27.336
										],
										[
											-1.566,
											-25.44
										],
										[
											-3.352,
											-23.178
										],
										[
											-2.849,
											-18.717
										],
										[
											3.377,
											5.3
										],
										[
											-13.619,
											-14.045
										],
										[
											-16.409,
											-16.444
										],
										[
											-18.919,
											-16.021
										],
										[
											-21.932,
											-14.072
										],
										[
											-27.419,
											-10.625
										],
										[
											-32.662,
											-8.172
										],
										[
											-37.662,
											-5.849
										],
										[
											-39.741,
											0.994
										],
										[
											-37.261,
											3.327
										],
										[
											-34.31,
											3.212
										],
										[
											-32.944,
											2.197
										],
										[
											-31.638,
											1.214
										],
										[
											-29.273,
											1.966
										],
										[
											-27.807,
											4.378
										],
										[
											-18.716,
											21.127
										],
										[
											-17.459,
											23.732
										],
										[
											-18.118,
											26.125
										],
										[
											-19.653,
											26.685
										],
										[
											-21.189,
											27.244
										],
										[
											-22.97,
											29.658
										],
										[
											-22.349,
											33.039
										],
										[
											-19.4,
											35.588
										],
										[
											-15.627,
											35.184
										],
										[
											-12.141,
											32.665
										],
										[
											-8.793,
											30.613
										],
										[
											-5.825,
											29.159
										],
										[
											-3.545,
											28.313
										],
										[
											-1.27,
											27.313
										],
										[
											0.976,
											24.528
										],
										[
											0.293,
											20.672
										],
										[
											-4.128,
											18.297
										],
										[
											-4.639,
											18.653
										],
										[
											-5.002,
											18.849
										],
										[
											-5.332,
											19.107
										],
										[
											-6.096,
											19.287
										],
										[
											-8.379,
											16.378
										],
										[
											-20.751,
											-6.417
										],
										[
											3.666,
											19.389
										]
									],
									c: true
								},
								ix: 2
							},
							nm: "Path 1",
							mn: "ADBE Vector Shape - Group",
							hd: false
						},
						{
							ty: "fl",
							c: {
								a: 0,
								k: [
									0.733333333333,
									0.215686289469,
									0.215686289469,
									1
								],
								ix: 4
							},
							o: {
								a: 0,
								k: 100,
								ix: 5
							},
							r: 1,
							bm: 0,
							nm: "Fill 1",
							mn: "ADBE Vector Graphic - Fill",
							hd: false
						},
						{
							ty: "tr",
							p: {
								a: 0,
								k: [
									179.679,
									59.591
								],
								ix: 2
							},
							a: {
								a: 0,
								k: [
									0,
									0
								],
								ix: 1
							},
							s: {
								a: 0,
								k: [
									100,
									100
								],
								ix: 3
							},
							r: {
								a: 0,
								k: 0,
								ix: 6
							},
							o: {
								a: 0,
								k: 100,
								ix: 7
							},
							sk: {
								a: 0,
								k: 0,
								ix: 4
							},
							sa: {
								a: 0,
								k: 0,
								ix: 5
							},
							nm: "Transform"
						}
					],
					nm: "Group 25",
					np: 2,
					cix: 2,
					bm: 0,
					ix: 25,
					mn: "ADBE Vector Group",
					hd: false
				}
			],
			ip: 0,
			op: 243,
			st: 0,
			bm: 0
		}
	];
	var markers = [
	];
	var lottieJson = {
		v: v,
		fr: fr,
		ip: ip,
		op: op,
		w: w,
		h: h,
		nm: nm,
		ddd: ddd,
		assets: assets,
		layers: layers,
		markers: markers
	};

	function getStringifiedTime(time) {
	  const minutes = Math.floor(time / 60);
	  const seconds = time % 60;
	  return `${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;
	}
	function Timer({
	  timer,
	  setTimer
	}) {
	  const timerAudio = new Audio("./assets/timer.mp3");
	  timerAudio.volume = 0.5;
	  reactExports.useEffect(() => {
	    timerAudio.loop = true;
	    timerAudio.play();
	    return () => timerAudio.pause();
	  }, []);
	  reactExports.useEffect(() => {
	    if (timer === 0) {
	      timerAudio.pause();
	      return;
	    } else {
	      setTimeout(() => setTimer(timer - 1), 1000);
	    }
	  }, [timer]);
	  return /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      width: 250,
	      height: 252,
	      position: "relative",
	      display: "flex",
	      justifyContent: "center",
	      alignItems: "center"
	    }
	  }, /*#__PURE__*/React.createElement(Text, {
	    size: 72,
	    color: "var(--Main-Red)",
	    weight: 600,
	    style: {
	      position: "absolute"
	    }
	  }, getStringifiedTime(timer)), /*#__PURE__*/React.createElement(LottiePlayer, {
	    loop: true,
	    animationData: lottieJson,
	    play: true,
	    style: {
	      width: 250,
	      height: 250
	    }
	  }));
	}

	function NighttimeTimer() {
	  const {
	    nighttimeTimer,
	    setNighttimeTimer
	  } = reactExports.useContext(VariableContext);
	  const nighttimeAudio = new Audio("./assets/Nightloop.wav");
	  reactExports.useEffect(() => {
	    nighttimeAudio.loop = true;
	    nighttimeAudio.play();
	    return () => nighttimeAudio.pause();
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "night will end in:"), /*#__PURE__*/React.createElement(Timer, {
	    timer: nighttimeTimer,
	    setTimer: setNighttimeTimer
	  }));
	}

	function NightOver() {
	  const {
	    handleProgressToStoryPage
	  } = reactExports.useContext(ActionContext);
	  const nightOverAudio = new Audio("./assets/night-over.mp3");
	  const narrationAudio = new Audio("./assets/narration.mp3");
	  narrationAudio.volume = 0.5;
	  reactExports.useEffect(() => {
	    narrationAudio.play();
	    setTimeout(() => nightOverAudio.play(), 1000);
	    nightOverAudio.addEventListener("ended", () => {
	      setTimeout(() => handleProgressToStoryPage(), 1000);
	    });
	    return () => {
	      nightOverAudio.pause();
	      narrationAudio.pause();
	    };
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("svg", {
	    xmlns: "http://www.w3.org/2000/svg",
	    width: "82",
	    height: "82",
	    viewBox: "0 0 82 82",
	    fill: "none"
	  }, /*#__PURE__*/React.createElement("path", {
	    d: "M41 63.5001C53.4264 63.5001 63.5 53.4265 63.5 41.0001C63.5 28.5736 53.4264 18.5 41 18.5C28.5736 18.5 18.5 28.5736 18.5 41.0001C18.5 53.4265 28.5736 63.5001 41 63.5001Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M54.2649 17.4852C58.5449 19.9053 62.0949 23.4553 64.5149 27.7353L69.6399 12.3652L54.2699 17.4902L54.2649 17.4852Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M40.9999 67.9998C38.4899 67.9998 36.0599 67.6498 33.7549 67.0098L40.9999 81.4998L48.2449 67.0098C45.9399 67.6498 43.5099 67.9998 40.9999 67.9998Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M17.49 54.2648L12.365 69.6348L27.735 64.5098C23.455 62.0898 19.905 58.5398 17.485 54.2598L17.49 54.2648Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M14 40.9999C14 38.4899 14.35 36.0599 14.99 33.7549L0.5 40.9999L14.99 48.2449C14.35 45.9399 14 43.5099 14 40.9999Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M27.735 17.4849L12.365 12.3599L17.49 27.7299C19.91 23.4499 23.46 19.8999 27.74 17.4799L27.735 17.4849Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M40.9999 14C43.5099 14 45.9399 14.35 48.2449 14.99L40.9999 0.5L33.7549 14.99C36.0599 14.35 38.4899 14 40.9999 14Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M81.5 40.9999L67.01 33.7549C67.65 36.0599 68 38.4899 68 40.9999C68 43.5099 67.65 45.9399 67.01 48.2449L81.5 40.9999Z",
	    fill: "#EBEBEB"
	  }), /*#__PURE__*/React.createElement("path", {
	    d: "M64.5149 54.2651C62.0949 58.5451 58.5449 62.0952 54.2649 64.5152L69.6349 69.6402L64.5099 54.2701L64.5149 54.2651Z",
	    fill: "#EBEBEB"
	  })), /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "the night is over"));
	}

	function Story() {
	  const {
	    currentKill,
	    currentAngelProtection
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleProgressToPostStoryPage
	  } = reactExports.useContext(ActionContext);
	  const [reveal, setReveal] = reactExports.useState(false);
	  const playerMurderedAudio = new Audio("./assets/player-murdered.mp3");
	  const playerAlmostMurderedAudio = new Audio("./assets/player-almost-murdered.mp3");
	  const deathAudio = new Audio("./assets/Deathloop.wav");
	  const saved = currentKill?.gamername === currentAngelProtection?.target.gamername;
	  reactExports.useEffect(() => {
	    setTimeout(() => {
	      setReveal(true);
	      deathAudio.play();
	      setTimeout(() => {
	        if (!saved) {
	          playerMurderedAudio.play();
	          playerMurderedAudio.onended = () => {
	            handleProgressToPostStoryPage();
	          };
	        } else {
	          playerAlmostMurderedAudio.play();
	          playerAlmostMurderedAudio.onended = () => {
	            handleProgressToPostStoryPage();
	          };
	        }
	      }, 10000);
	    }, 1000);
	    return () => {
	      playerMurderedAudio.pause();
	      playerAlmostMurderedAudio.pause();
	    };
	  }, []);
	  if (!reveal) {
	    return null;
	  }
	  if (!saved) {
	    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	      size: 56,
	      color: "var(--Main-Red)",
	      weight: 700
	    }, currentKill?.realname), /*#__PURE__*/React.createElement(Text, {
	      size: 36,
	      opacity: 0.5
	    }, "was killed by the mafia"), /*#__PURE__*/React.createElement("svg", {
	      xmlns: "http://www.w3.org/2000/svg",
	      width: "38",
	      height: "56",
	      viewBox: "0 0 38 56",
	      fill: "none"
	    }, /*#__PURE__*/React.createElement("path", {
	      d: "M37.9985 18.9774C37.9985 18.9774 38.0614 6.35849 27.9731 1.81514C17.8849 -2.72822 -2.22286 0.296243 0.200939 22.0063C0.250613 22.4519 0.763425 25.2529 1.05709 26.8413C1.18712 27.549 1.06147 28.2803 0.69914 28.9006C0.138115 29.8643 4.12373 35.6986 4.59856 37.4647C4.74758 38.0199 4.95358 38.3574 5.16543 38.5587C5.76298 39.1272 6.13991 39.8941 6.15891 40.726L6.28894 46.7039C6.29916 47.1539 6.40582 47.5981 6.61182 47.9978C9.80119 54.2066 14.621 55.6011 16.4882 55.912C16.909 55.9831 17.3385 55.9461 17.752 55.835C19.3971 55.3968 21.498 55.8883 21.498 55.8883C26.2258 56.9646 30.2289 49.9593 31.3028 47.8779C31.4883 47.5181 31.5993 47.1229 31.6286 46.7187L32.0756 40.5499C32.1238 39.8896 32.3737 39.253 32.8193 38.7689C33.915 37.5802 35.8888 31.9102 36.6924 30.3336C37.0956 29.5416 37.1424 29.0605 37.0533 28.7673C36.9013 28.261 36.9262 27.7148 37.0723 27.207C37.7925 24.6933 38 18.9774 38 18.9774H37.9985ZM9.85378 28.8606C6.40874 30.0435 5.35243 26.2699 5.35243 26.2699C5.35243 26.2699 3.9075 22.2713 5.01932 20.2447C6.13115 18.218 10.0203 16.9789 13.1893 17.993C16.3567 19.0071 15.8015 24.1307 15.8015 24.1307C16.0791 25.1448 13.3003 27.6778 9.85524 28.8606H9.85378ZM21.0801 34.9155C21.0801 34.9155 19.2787 35.4158 18.8287 32.6504C18.8842 33.7548 18.6812 35.592 16.5233 34.6593C13.5224 33.364 18.0792 25.2558 18.0792 25.2558C18.0792 25.2558 18.0938 24.3543 18.8375 24.5245C19.5811 24.6948 19.6367 24.6933 19.8587 25.4261C20.0808 26.1589 24.138 32.5246 21.0816 34.9169L21.0801 34.9155ZM32.473 27.1715C32.473 27.1715 30.4729 30.72 25.8605 27.6511C25.8605 27.6511 22.1934 25.8584 22.0254 23.3609C21.8588 20.865 23.6369 17.6643 25.637 17.6318C27.6371 17.5992 31.1946 18.3305 32.473 19.7384C33.7514 21.1462 32.473 27.1715 32.473 27.1715Z",
	      fill: "#BB3737"
	    })));
	  }
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    weight: 700
	  }, currentKill?.realname), /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "survived"));
	}

	function PostStory2() {
	  const {
	    handleProgressToAccusationTimerPage
	  } = reactExports.useContext(ActionContext);
	  const invitationToLieAudio = new Audio("./assets/invitation-to-lie.mp3");
	  reactExports.useEffect(() => {
	    setTimeout(() => invitationToLieAudio.play(), 1000);
	    invitationToLieAudio.onended = () => {
	      setTimeout(() => handleProgressToAccusationTimerPage(), 1000);
	    };
	    return () => invitationToLieAudio.pause();
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, "you can lie as much as you\u2019d like"));
	}

	function Accusations() {
	  const {
	    accusationTimer,
	    setAccusationTimer
	  } = reactExports.useContext(VariableContext);
	  const makeAccusationAudio = new Audio("./assets/make-accusation.mp3");
	  const dayAudio = new Audio("./assets/Dayloop.wav");
	  reactExports.useEffect(() => {
	    dayAudio.loop = true;
	    dayAudio.play();
	    makeAccusationAudio.play();
	    return () => {
	      dayAudio.pause();
	      makeAccusationAudio.pause();
	    };
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "you have 5 minutes to make an accusation"), /*#__PURE__*/React.createElement(Timer, {
	    timer: accusationTimer,
	    setTimer: setAccusationTimer
	  }));
	}

	function Accused() {
	  const {
	    recentlyAccused,
	    currentAccusations
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleProgressToVotingPage
	  } = reactExports.useContext(ActionContext);
	  const accusers = currentAccusations.filter(accusation => accusation.target.gamername === recentlyAccused.gamername);
	  const haveAccusationAudio = new Audio("./assets/have-accusation.mp3");
	  reactExports.useEffect(() => {
	    setTimeout(() => haveAccusationAudio.play(), 1000);
	    haveAccusationAudio.onended = () => {
	      setTimeout(() => handleProgressToVotingPage(), 1000);
	    };
	    return () => haveAccusationAudio.pause();
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 56
	  }, recentlyAccused?.realname), /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "has been accused by"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, accusers[0]?.player.realname, " and ", accusers[1]?.player.realname));
	}

	function Voting() {
	  const {
	    recentlyAccused
	  } = reactExports.useContext(VariableContext);
	  const {
	    handleProgressToVotingTimerPage
	  } = reactExports.useContext(ActionContext);
	  const liveOrDieAudio = new Audio("./assets/live-or-die.mp3");
	  reactExports.useEffect(() => {
	    liveOrDieAudio.play();
	    liveOrDieAudio.onended = () => handleProgressToVotingTimerPage();
	    return () => liveOrDieAudio.pause();
	  }, []);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, "will ", recentlyAccused?.realname, " live or die?"));
	}

	function VotingTimer() {
	  const {
	    currentLifeDeathSelections,
	    currentLifeDeathVotes
	  } = reactExports.useContext(VariableContext);
	  const [liveVotes, setLiveVotes] = reactExports.useState([]);
	  const first4LiveVotes = liveVotes.slice(0, 4);
	  const second4LiveVotes = liveVotes.slice(4, 8);
	  const third4LiveVotes = liveVotes.slice(8, 12);
	  const fourth4LiveVotes = liveVotes.slice(12, 16);
	  const fifth4LiveVotes = liveVotes.slice(16, 20);
	  const [dieVotes, setDieVotes] = reactExports.useState([]);
	  const first4DieVotes = dieVotes.slice(0, 4);
	  const second4DieVotes = dieVotes.slice(4, 8);
	  const third4DieVotes = dieVotes.slice(8, 12);
	  const fourth4DieVotes = dieVotes.slice(12, 16);
	  const fifth4DieVotes = dieVotes.slice(16, 20);
	  reactExports.useEffect(() => {
	    const newLiveVotes = [];
	    const newDieVotes = [];
	    currentLifeDeathVotes.forEach(vote => {
	      if (vote.vote === "live") {
	        newLiveVotes.push({
	          realname: vote.player.realname,
	          voteSubmitted: true
	        });
	      } else {
	        newDieVotes.push({
	          realname: vote.player.realname,
	          voteSubmitted: true
	        });
	      }
	    });
	    currentLifeDeathSelections.forEach(selection => {
	      if (selection === "live") {
	        newLiveVotes.push({
	          realname: vote.player.realname,
	          voteSubmitted: false
	        });
	      } else {
	        newDieVotes.push({
	          realname: vote.player.realname,
	          voteSubmitted: false
	        });
	      }
	    });
	    setLiveVotes(newLiveVotes);
	    setDieVotes(newDieVotes);
	  }, [currentLifeDeathSelections, currentLifeDeathVotes]);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Timer, null), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    opacity: 0.75
	  }, "what will ", "accused person", "'s fate be?"), /*#__PURE__*/React.createElement(VotesContainer, null, /*#__PURE__*/React.createElement(VotesBox, null, /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    weight: 700
	  }, "live"), /*#__PURE__*/React.createElement(VoteListRowBox, null, /*#__PURE__*/React.createElement(VoteListColumnBox, null, first4LiveVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, second4LiveVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, third4LiveVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, fourth4LiveVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, fifth4LiveVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))))), /*#__PURE__*/React.createElement(VerticalLine, null), /*#__PURE__*/React.createElement(VotesBox, null, /*#__PURE__*/React.createElement(Text, {
	    size: 42,
	    weight: 700,
	    color: "var(--Main-Red)"
	  }, "die"), /*#__PURE__*/React.createElement(VoteListRowBox, null, /*#__PURE__*/React.createElement(VoteListColumnBox, null, first4DieVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, second4DieVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, third4DieVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, fourth4DieVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname))), /*#__PURE__*/React.createElement(VoteListColumnBox, null, fifth4DieVotes.map(player => /*#__PURE__*/React.createElement(Text, {
	    key: player.realname,
	    size: 36,
	    opacity: player.voteSubmitted ? 1 : 0.5,
	    weight: player.voteSubmitted ? 600 : 300
	  }, player.realname)))))));
	}

	function VotingResults() {
	  const [showRole, setShowRole] = reactExports.useState(false);
	  const notExecutedAudio = new Audio("./assets/not-executed.mp3");
	  const executedAudio = new Audio("./assets/executed.mp3");
	  const narrationAudio = new Audio("./assets/narration.mp3");
	  narrationAudio.volume = 0.5;
	  const fate = "live";
	  new Audio("./assets/Deathloop2.wav");
	  reactExports.useEffect(() => {
	    narrationAudio.play();
	    {
	      setTimeout(() => notExecutedAudio.play(), 1000);
	      notExecutedAudio.onended = () => {
	        narrationAudio.pause();
	        setTimeout(() => () => {}, 1000);
	      };
	    }
	    return () => {
	      notExecutedAudio.pause();
	      executedAudio.pause();
	      narrationAudio.pause();
	    };
	  }, [fate]);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, showRole && fate === "die" ? /*#__PURE__*/React.createElement(Box$1, {
	    style: {
	      height: 36
	    }
	  }) : null, /*#__PURE__*/React.createElement(Text, {
	    size: 56
	  }, "accused player"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    color: "var(--Main-White)" ,
	    weight: 700
	  }, "has survived" ), showRole && fate === "die" ? /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.75,
	    color: "var(--Main-White)"
	  }, "accused player", " was", " not ", "mafia") : null);
	}

	function GameOver() {
	  const mafiaWinAudio = new Audio("./assets/mafia-win.mp3");
	  new Audio("./assets/civilians-win.mp3");
	  const winner = "mafia";
	  reactExports.useEffect(() => {
	    {
	      const timeout = setTimeout(() => mafiaWinAudio.play(), 1000);
	      return () => {
	        clearTimeout(timeout);
	        mafiaWinAudio.pause();
	      };
	    }
	  }, [winner]);
	  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {
	    size: 36,
	    opacity: 0.5
	  }, "the game has ended"), /*#__PURE__*/React.createElement(Text, {
	    size: 56,
	    weight: 700,
	    color: "var(--Main-Red)" 
	  }, "mafia" , " win"));
	}

	const WAITING_PLAYERS = 0;
	const WELCOME = 1;
	const YOU_READY = 2;
	const REVEAL_IDENTITY = 3;
	const INSTRUCTIONS = 4;
	const NIGHTTIME = 5;
	const NIGHTTIME_TIMER = 6;
	const NIGHT_OVER = 7;
	const STORY = 8;
	const POST_STORY_2 = 10;
	const ACCUSATIONS = 11;
	const ACCUSED = 12;
	const VOTING = 13;
	const VOTING_TIMER = 14;
	const VOTING_RESULTS = 15;
	const GAME_OVER = 16;
	function App() {
	  const {
	    page
	  } = reactExports.useContext(VariableContext);
	  function getPage(page) {
	    switch (page) {
	      case WELCOME:
	      case YOU_READY:
	        return /*#__PURE__*/React.createElement(Welcome, {
	          youReady: page === YOU_READY
	        });
	      case REVEAL_IDENTITY:
	        return /*#__PURE__*/React.createElement(RevealIdentity, null);
	      case INSTRUCTIONS:
	        return /*#__PURE__*/React.createElement(Instructions, null);
	      case NIGHTTIME:
	        return /*#__PURE__*/React.createElement(Nighttime, null);
	      case NIGHTTIME_TIMER:
	        return /*#__PURE__*/React.createElement(NighttimeTimer, null);
	      case NIGHT_OVER:
	        return /*#__PURE__*/React.createElement(NightOver, null);
	      case STORY:
	        return /*#__PURE__*/React.createElement(Story, null);
	      case POST_STORY_2:
	        return /*#__PURE__*/React.createElement(PostStory2, null);
	      case ACCUSATIONS:
	        return /*#__PURE__*/React.createElement(Accusations, null);
	      case ACCUSED:
	        return /*#__PURE__*/React.createElement(Accused, null);
	      case VOTING:
	        return /*#__PURE__*/React.createElement(Voting, null);
	      case VOTING_TIMER:
	        return /*#__PURE__*/React.createElement(VotingTimer, null);
	      case VOTING_RESULTS:
	        return /*#__PURE__*/React.createElement(VotingResults, null);
	      case GAME_OVER:
	        return /*#__PURE__*/React.createElement(GameOver, null);
	      default:
	        return null;
	    }
	  }
	  if (page === WAITING_PLAYERS) {
	    return /*#__PURE__*/React.createElement(StandardPageBox, null, /*#__PURE__*/React.createElement(WaitingPlayers, null));
	  }
	  return /*#__PURE__*/React.createElement(StandardPageBox, null, /*#__PURE__*/React.createElement(InnerPageBox, null, getPage(page)));
	}

	const CommunicationContext = /*#__PURE__*/reactExports.createContext({});
	const CommunicationProvider = ({
	  children
	}) => {
	  const {
	    players,
	    page,
	    mafia,
	    detective,
	    angel,
	    civilians,
	    currentMafiaSelections,
	    currentMafiaVotes,
	    currentKill,
	    detectiveIdentifications,
	    currentDetectiveIdentification,
	    currentAngelProtection,
	    currentCivilianTriviaFinishes,
	    currentAccusations,
	    recentlyAccused,
	    currentLifeDeathSelections,
	    currentLifeDeathVotes,
	    playersRef,
	    pageRef,
	    mafiaRef,
	    detectiveRef,
	    angelRef,
	    civiliansRef,
	    currentMafiaSelectionsRef,
	    currentMafiaVotesRef,
	    currentKillRef,
	    detectiveIdentificationsRef,
	    currentDetectiveIdentificationRef,
	    currentAngelProtectionRef,
	    currentCivilianTriviaFinishesRef,
	    currentAccusationsRef,
	    recentlyAccusedRef,
	    currentLifeDeathSelectionsRef,
	    currentLifeDeathVotesRef
	  } = reactExports.useContext(VariableContext);
	  const {
	    handlePlayerJoin,
	    handlePlayerSubmitRealname,
	    handleHostStartGame,
	    handleHostSkipInstructions,
	    handleMafiaSelection,
	    handleMafiaVote,
	    handleDetectiveIdentification,
	    handleAngelProtection,
	    handleCivilianTriviaFinish,
	    handleAccusation,
	    handleLifeDeathSelection,
	    handleLifeDeathVote
	  } = reactExports.useContext(ActionContext);
	  const gamernamesNeedingConfirmationRef = reactExports.useRef([]);
	  const sendMessageToParent = message => {
	    parent.postMessage(message, "*");
	  };
	  const continueToNudgePlayer = gamername => {
	    setTimeout(() => {
	      if (!gamernamesNeedingConfirmationRef.current.includes(gamername)) {
	        return;
	      }
	      sendMessageToParent(JSON.stringify({
	        to: "one",
	        player: gamername,
	        name: "state update",
	        state: {
	          players: playersRef.current,
	          page: pageRef.current,
	          mafia: mafiaRef.current,
	          detective: detectiveRef.current,
	          angel: angelRef.current,
	          civilians: civiliansRef.current,
	          currentMafiaSelections: currentMafiaSelectionsRef.current,
	          currentMafiaVotes: currentMafiaVotesRef.current,
	          currentKill: currentKillRef.current,
	          detectiveIdentifications: detectiveIdentificationsRef.current,
	          currentDetectiveIdentification: currentDetectiveIdentificationRef.current,
	          currentAngelProtection: currentAngelProtectionRef.current,
	          currentCivilianTriviaFinishes: currentCivilianTriviaFinishesRef.current,
	          currentAccusations: currentAccusationsRef.current,
	          recentlyAccused: recentlyAccusedRef.current,
	          currentLifeDeathSelections: currentLifeDeathSelectionsRef.current,
	          currentLifeDeathVotes: currentLifeDeathVotesRef.current
	        }
	      }));
	      continueToNudgePlayer(gamername);
	    }, 250);
	  };
	  const sendStateUpdateToPlayer = gamername => {
	    sendMessageToParent(JSON.stringify({
	      to: "one",
	      player: gamername,
	      name: "state update",
	      state: {
	        players: playersRef.current,
	        page: pageRef.current,
	        mafia: mafiaRef.current,
	        detective: detectiveRef.current,
	        angel: angelRef.current,
	        civilians: civiliansRef.current,
	        currentMafiaSelections: currentMafiaSelectionsRef.current,
	        currentMafiaVotes: currentMafiaVotesRef.current,
	        currentKill: currentKillRef.current,
	        detectiveIdentifications: detectiveIdentificationsRef.current,
	        currentDetectiveIdentification: currentDetectiveIdentificationRef.current,
	        currentAngelProtection: currentAngelProtectionRef.current,
	        currentCivilianTriviaFinishes: currentCivilianTriviaFinishesRef.current,
	        currentAccusations: currentAccusationsRef.current,
	        recentlyAccused: recentlyAccusedRef.current,
	        currentLifeDeathSelections: currentLifeDeathSelectionsRef.current,
	        currentLifeDeathVotes: currentLifeDeathVotesRef.current
	      }
	    }));
	    if (!gamernamesNeedingConfirmationRef.current.includes(gamername)) {
	      gamernamesNeedingConfirmationRef.current.push(gamername);
	      continueToNudgePlayer(gamername);
	    }
	  };
	  const updateAllPlayers = () => {
	    for (const player of players) {
	      sendStateUpdateToPlayer(player.gamername);
	    }
	  };
	  function handleMessageFromParent(event) {
	    if (!event || !event.data) {
	      return;
	    }
	    const msg = event.data;
	    if (msg.name === "confirm state") {
	      const playerState = {
	        players: playersRef.current,
	        page: pageRef.current,
	        mafia: mafiaRef.current,
	        detective: detectiveRef.current,
	        angel: angelRef.current,
	        civilians: civiliansRef.current,
	        currentMafiaSelections: currentMafiaSelectionsRef.current,
	        currentMafiaVotes: currentMafiaVotesRef.current,
	        currentKill: currentKillRef.current,
	        detectiveIdentifications: detectiveIdentificationsRef.current,
	        currentDetectiveIdentification: currentDetectiveIdentificationRef.current,
	        currentAngelProtection: currentAngelProtectionRef.current,
	        currentCivilianTriviaFinishes: currentCivilianTriviaFinishesRef.current,
	        currentAccusations: currentAccusationsRef.current,
	        recentlyAccused: recentlyAccusedRef.current,
	        currentLifeDeathSelections: currentLifeDeathSelectionsRef.current,
	        currentLifeDeathVotes: currentLifeDeathVotesRef.current
	      };
	      if (JSON.stringify(msg.state) !== JSON.stringify(playerState)) {
	        sendStateUpdateToPlayer(msg.player);
	      } else {
	        gamernamesNeedingConfirmationRef.current = gamernamesNeedingConfirmationRef.current.filter(player => player !== msg.player);
	      }
	    } else if (msg.name === "RegisterMadderController") {
	      handlePlayerJoin(msg.player);
	    } else if (msg.name === "SetRealname") {
	      handlePlayerSubmitRealname(msg.player, msg.realname);
	    } else if (msg.name === "HostStart") {
	      handleHostStartGame();
	    } else if (msg.name === "HostSkip") {
	      handleHostSkipInstructions();
	    } else if (msg.name === "MafiaSelection") {
	      handleMafiaSelection(msg.player, msg.selection);
	    } else if (msg.name === "MafiaVote") {
	      handleMafiaVote(msg.player, msg.vote);
	    } else if (msg.name === "DetectiveIdentification") {
	      handleDetectiveIdentification(msg.player, msg.identification);
	    } else if (msg.name === "AngelProtection") {
	      handleAngelProtection(msg.protection);
	    } else if (msg.name === "CivilianFinishTrivia") {
	      handleCivilianTriviaFinish(msg.player);
	    } else if (msg.name === "Accuse") {
	      handleAccusation(msg.player, msg.accusation);
	    } else if (msg.name === "LifeDeathSelection") {
	      handleLifeDeathSelection(msg.player, msg.vote);
	    } else if (msg.name === "LifeDeathVote") {
	      handleLifeDeathVote(msg.player, msg.vote);
	    }
	  }
	  reactExports.useEffect(() => {
	    updateAllPlayers();
	  }, [players, page, mafia, detective, angel, civilians, currentMafiaSelections, currentMafiaVotes, currentKill, detectiveIdentifications, currentDetectiveIdentification, currentAngelProtection, currentCivilianTriviaFinishes, currentAccusations, recentlyAccused, currentLifeDeathSelections, currentLifeDeathVotes]);
	  reactExports.useEffect(() => {
	    window.addEventListener("message", handleMessageFromParent);
	    sendMessageToParent(JSON.stringify({
	      name: "showCode"
	    }));
	    return () => {
	      window.removeEventListener("message", handleMessageFromParent);
	    };
	  }, []);
	  const communications = reactExports.useMemo(() => ({}), []);
	  return /*#__PURE__*/React.createElement(CommunicationContext.Provider, {
	    value: communications
	  }, children);
	};

	createRoot(document.querySelector("#root")).render( /*#__PURE__*/React.createElement(VariableProvider, null, /*#__PURE__*/React.createElement(ActionProvider, null, /*#__PURE__*/React.createElement(CommunicationProvider, null, /*#__PURE__*/React.createElement(App, null)))));

})();
